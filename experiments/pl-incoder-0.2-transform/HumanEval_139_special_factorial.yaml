name: HumanEval_139_special_factorial
language: pl
prompt: "# The Brazilian factorial is defined as:\n# brazilian_factorial(n) = n! *\
  \ (n-1)! * (n-2)! * ... * 1!\n# where n > 0\n# For example:\n# >>> special_factorial(4)\n\
  # 288\n# The function will receive an integer as input and should return the special\n\
  # factorial of this integer.\nsub special_factorial {\n    my($n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&special_factorial;\n\
  \        if(eq_deeply($candidate->(4),288)) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->(5),34560)) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7),125411328000))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $factorial = 1;\n    my $factorial_counter = 1;\n    my $factorial_counter2\
    \ = 1;\n    my $factorial_counter3 = 1;\n    my $factorial_counter4 = 1;\n   \
    \ my $factorial_counter5 = 1;\n    my $factorial_counter6 = 1;\n    my $factorial_counter7\
    \ = 1;\n    my $factorial_counter8 = 1;\n    my $factorial_counter9 = 1;\n   \
    \ my $factorial_counter10 = 1;\n    my $factorial_counter11 = 1;\n    my $factorial_counter12\
    \ = 1;\n    my $factorial_counter13 = 1;\n    my $factorial_counter14 = 1;\n \
    \   my $factorial_counter15 = 1;\n    my $factorial_counter16 = 1;\n    my $factorial_counter17\
    \ = 1;\n    my $factorial_counter18 = 1;\n    my $factorial_counter19 = 1;\n \
    \   my $factorial_counter20 = 1;\n    my $factorial_counter21 = 1;\n    my $factorial_counter22\
    \ = 1;\n    my $factorial_counter23 = 1;\n    my $factorial_counter24 = 1;\n \
    \   my $factorial_counter25 = 1;\n    my $factorial_counter26 = 1;\n    my $factorial_counter27\
    \ = 1;\n    my $factorial_counter28 = 1;\n    my $factorial_counter29 = 1;\n \
    \   my $factorial_counter30 = 1;\n    my $factorial_counter31 = 1;\n    my $factorial_counter32\
    \ = 1;\n    my $factorial_counter33 = 1;\n    my $factorial_counter34 = 1;\n \
    \   my $factorial_counter35 = 1;\n    my $factorial_counter36 = 1;\n    my $factorial_counter37\
    \ = 1;\n    my $factorial_counter38 = 1;\n    my $factorial_counter39 = 1;\n \
    \   my $factorial_counter40 = 1;\n    my $factorial_counter41 = 1;\n    my $factorial_counter42\
    \ = 1;\n    my $factorial_counter43 = 1;\n    my $factorial_counter44 = 1;\n \
    \   my $factorial_counter45 = 1;\n    my $factorial_counter46 = 1;\n    my $factorial_counter47\
    \ = 1;\n    my $factorial_counter48 = 1;\n    my $factorial_counter49 = 1;\n \
    \   my $factorial_counter50 = 1;\n    my $factorial_counter51 = 1;\n    my $factorial_counter52\
    \ = 1;\n    my $factorial_counter53 = 1;\n    my $factorial_counter54 = 1;\n \
    \   my $factorial_counter55 = 1;\n    my $factorial_counter56 = 1;\n    my $factorial_counter57\
    \ = 1;\n    my $factorial_counter58 = 1;\n    my $factorial_counter59 = 1;\n \
    \   my $factorial_counter60 = 1;\n    my $factorial_counter61 = 1;\n    my $factorial_counter62\
    \ = 1;\n    my $factorial_counter63 = 1;", "    return $factorials[$n] if $factorials[$n];\n\
    \    $factorials[$n] = 1;\n    my $i = 1;\n    my $fact = 1;\n    while($i <=\
    \ $n) {\n        $fact *= $i;\n        $factorials[$n] = $fact;\n        $i++;\n\
    \    }\n    return $fact;\n}", "    my $result = 1;\n    my $factorial = 1;\n\
    \    my $factorial_counter = 1;\n    my $factorial_counter2 = 1;\n    my $factorial_counter3\
    \ = 1;\n    my $factorial_counter4 = 1;\n    my $factorial_counter5 = 1;\n   \
    \ my $factorial_counter6 = 1;\n    my $factorial_counter7 = 1;\n    my $factorial_counter8\
    \ = 1;\n    my $factorial_counter9 = 1;\n    my $factorial_counter10 = 1;\n  \
    \  my $factorial_counter11 = 1;\n    my $factorial_counter12 = 1;\n    my $factorial_counter13\
    \ = 1;\n    my $factorial_counter14 = 1;\n    my $factorial_counter15 = 1;\n \
    \   my $factorial_counter16 = 1;\n    my $factorial_counter17 = 1;\n    my $factorial_counter18\
    \ = 1;\n    my $factorial_counter19 = 1;\n    my $factorial_counter20 = 1;\n \
    \   my $factorial_counter21 = 1;\n    my $factorial_counter22 = 1;\n    my $factorial_counter23\
    \ = 1;\n    my $factorial_counter24 = 1;\n    my $factorial_counter25 = 1;\n \
    \   my $factorial_counter26 = 1;\n    my $factorial_counter27 = 1;\n    my $factorial_counter28\
    \ = 1;\n    my $factorial_counter29 = 1;\n    my $factorial_counter30 = 1;\n \
    \   my $factorial_counter31 = 1;\n    my $factorial_counter32 = 1;\n    my $factorial_counter33\
    \ = 1;\n    my $factorial_counter34 = 1;\n    my $factorial_counter35 = 1;\n \
    \   my $factorial_counter36 = 1;\n    my $factorial_counter37 = 1;\n    my $factorial_counter38\
    \ = 1;\n    my $factorial_counter39 = 1;\n    my $factorial_counter40 = 1;\n \
    \   my $factorial_counter41 = 1;\n    my $factorial_counter42 = 1;\n    my $factorial_counter43\
    \ = 1;\n    my $factorial_counter44 = 1;\n    my $factorial_counter45 = 1;\n \
    \   my $factorial_counter46 = 1;\n    my $factorial_counter47 = 1;\n    my $factorial_counter48\
    \ = 1;\n    my $factorial_counter49 = 1;\n    my $factorial_counter50 = 1;\n \
    \   my $factorial_counter51 = 1;\n    my $factorial_counter52 = 1;\n    my $factorial_counter53\
    \ = 1;\n    my $factorial_counter54 = 1;\n    my $factorial_counter55 = 1;\n \
    \   my $factorial_counter56 = 1;\n    my $factorial_counter57 = 1;\n    my $factorial_counter58\
    \ = 1;\n    my $factorial_counter59 = 1;\n    my $factorial_counter60 = 1;\n \
    \   my $factorial_counter61 = 1;\n    my $factorial_counter62 = 1;\n    my $",
  "    my $factorial = 1;\n    my $i = 1;\n    while($i <= $n) {\n        $factorial\
    \ *= $i;\n        $i++;\n    }\n    return $factorial;\n}", "    my $fact = 1;\n\
    \    my $i = 1;\n    while($i <= $n) {\n        $fact *= $i;\n        $i++;\n\
    \    }\n    return $fact;\n}", "    my $factorial = 1;\n    my $factorial_limit\
    \ = $factorial * $n;\n    my $factorial_limit2 = $factorial_limit * $factorial_limit;\n\
    \    my $factorial_limit3 = $factorial_limit2 * $factorial_limit;\n    my $factorial_limit4\
    \ = $factorial_limit3 * $factorial_limit;\n    my $factorial_limit5 = $factorial_limit4\
    \ * $factorial_limit;\n    my $factorial_limit6 = $factorial_limit5 * $factorial_limit;\n\
    \    my $factorial_limit7 = $factorial_limit6 * $factorial_limit;\n    my $factorial_limit8\
    \ = $factorial_limit7 * $factorial_limit;\n    my $factorial_limit9 = $factorial_limit8\
    \ * $factorial_limit;\n    my $factorial_limit10 = $factorial_limit9 * $factorial_limit;\n\
    \    my $factorial_limit11 = $factorial_limit10 * $factorial_limit;\n    my $factorial_limit12\
    \ = $factorial_limit11 * $factorial_limit;\n    my $factorial_limit13 = $factorial_limit12\
    \ * $factorial_limit;\n    my $factorial_limit14 = $factorial_limit13 * $factorial_limit;\n\
    \    my $factorial_limit15 = $factorial_limit14 * $factorial_limit;\n    my $factorial_limit16\
    \ = $factorial_limit15 * $factorial_limit;\n    my $factorial_limit17 = $factorial_limit16\
    \ * $factorial_limit;\n    my $factorial_limit18 = $factorial_limit17 * $factorial_limit;\n\
    \    my $factorial_limit19 = $factorial_limit18 * $factorial_limit;\n    my $factorial_limit20\
    \ = $factorial_limit19 * $factorial_limit;\n    my $factorial_limit21 = $factorial_limit20\
    \ * $factorial_limit;\n    my $factorial_limit22 = $factorial_limit21 * $factorial_limit;\n\
    \    my $factorial_limit23 = $factorial_limit22 * $factorial_limit;\n    my $factorial_limit24\
    \ = $factorial_limit23 * $factorial_limit;\n    my $factorial_limit25 = $factorial_limit24\
    \ * $factorial_limit;\n    my $factorial_limit26 = $factorial_limit25 * $factorial_limit;\n\
    \    my $factorial_limit27 = $factorial_limit26 * $factorial_limit;\n    my $factorial_limit28\
    \ = $factorial_limit27 * $factorial_limit;\n    my $factorial_limit29 = $factorial_limit28\
    \ * $factori", "    return $n if $n <= 1;\n    return $n * special_factorial($n\
    \ - 1);\n}", "    my $factorial = 1;\n    my $factorial_counter = 1;\n    while($factorial_counter\
    \ <= $n) {\n        $factorial *= $factorial_counter;\n        $factorial_counter++;\n\
    \    }\n    return $factorial;\n}", "    my $factorial = 1;\n    my $i = 1;\n\
    \    my $factorial_limit = $factorial * $n;\n    while($i <= $factorial_limit)\
    \ {\n        $factorial *= $i;\n        $i++;\n    }\n    return $factorial;\n\
    }", "    return $n if $n <= 1;\n    return $n * special_factorial($n - 1);\n}",
  "    my $factorial = 1;\n    my $factorial_counter = 1;\n    my $factorial_counter2\
    \ = 1;\n    my $factorial_counter3 = 1;\n    my $factorial_counter4 = 1;\n   \
    \ my $factorial_counter5 = 1;\n    my $factorial_counter6 = 1;\n    my $factorial_counter7\
    \ = 1;\n    my $factorial_counter8 = 1;\n    my $factorial_counter9 = 1;\n   \
    \ my $factorial_counter10 = 1;\n    my $factorial_counter11 = 1;\n    my $factorial_counter12\
    \ = 1;\n    my $factorial_counter13 = 1;\n    my $factorial_counter14 = 1;\n \
    \   my $factorial_counter15 = 1;\n    my $factorial_counter16 = 1;\n    my $factorial_counter17\
    \ = 1;\n    my $factorial_counter18 = 1;\n    my $factorial_counter19 = 1;\n \
    \   my $factorial_counter20 = 1;\n    my $factorial_counter21 = 1;\n    my $factorial_counter22\
    \ = 1;\n    my $factorial_counter23 = 1;\n    my $factorial_counter24 = 1;\n \
    \   my $factorial_counter25 = 1;\n    my $factorial_counter26 = 1;\n    my $factorial_counter27\
    \ = 1;\n    my $factorial_counter28 = 1;\n    my $factorial_counter29 = 1;\n \
    \   my $factorial_counter30 = 1;\n    my $factorial_counter31 = 1;\n    my $factorial_counter32\
    \ = 1;\n    my $factorial_counter33 = 1;\n    my $factorial_counter34 = 1;\n \
    \   my $factorial_counter35 = 1;\n    my $factorial_counter36 = 1;\n    my $factorial_counter37\
    \ = 1;\n    my $factorial_counter38 = 1;\n    my $factorial_counter39 = 1;\n \
    \   my $factorial_counter40 = 1;\n    my $factorial_counter41 = 1;\n    my $factorial_counter42\
    \ = 1;\n    my $factorial_counter43 = 1;\n    my $factorial_counter44 = 1;\n \
    \   my $factorial_counter45 = 1;\n    my $factorial_counter46 = 1;\n    my $factorial_counter47\
    \ = 1;\n    my $factorial_counter48 = 1;\n    my $factorial_counter49 = 1;\n \
    \   my $factorial_counter50 = 1;\n    my $factorial_counter51 = 1;\n    my $factorial_counter52\
    \ = 1;\n    my $factorial_counter53 = 1;\n    my $factorial_counter54 = 1;\n \
    \   my $factorial_counter55 = 1;\n    my $factorial_counter56 = 1;\n    my $factorial_counter57\
    \ = 1;\n    my $factorial_counter58 = 1;\n    my $factorial_counter59 = 1;\n \
    \   my $factorial_counter60 = 1;\n    my $factorial_counter61 = 1;\n    my $factorial_counter62\
    \ = 1;\n    my $factorial_counter63 = 1;", "    my $result = 1;\n    my $factorial\
    \ = 1;\n    my $factorial_counter = 1;\n    while($factorial_counter <= $n) {\n\
    \        $factorial *= $factorial_counter;\n        $factorial_counter++;\n  \
    \  }\n    $result *= $factorial;\n    return $result;\n}", "    my $fact = 1;\n\
    \    my $i;\n    for ($i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n\
    \    return $fact;\n}", "    my $fact = 1;\n    my $i = 1;\n    my $factorial\
    \ = 1;\n    while($i <= $n) {\n        $factorial *= $i;\n        $fact *= $factorial;\n\
    \        $i++;\n    }\n    return $fact;\n}", "    my $factorial = 1;\n    my\
    \ $factorial_counter = 1;\n    while($factorial_counter <= $n) {\n        $factorial\
    \ *= $factorial_counter;\n        $factorial_counter++;\n    }\n    return $factorial;\n\
    }", "    my $fact = 1;\n    my $i = 1;\n    my $j = 1;\n    while($i <= $n) {\n\
    \        $fact *= $i;\n        $i++;\n    }\n    while($j > 0) {\n        $fact\
    \ *= $j;\n        $j--;\n    }\n    return $fact;\n}", "    my $fact = 1;\n  \
    \  my $i;\n    for ($i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n \
    \   return $fact;\n}", "    my $result = 1;\n    my $factorial = 1;\n    my $factorial_counter\
    \ = 1;\n    my $factorial_limit = $factorial;\n    my $factorial_limit2 = $factorial_limit;\n\
    \    my $factorial_limit3 = $factorial_limit2;\n    my $factorial_limit4 = $factorial_limit3;\n\
    \    my $factorial_limit5 = $factorial_limit4;\n    my $factorial_limit6 = $factorial_limit5;\n\
    \    my $factorial_limit7 = $factorial_limit6;\n    my $factorial_limit8 = $factorial_limit7;\n\
    \    my $factorial_limit9 = $factorial_limit8;\n    my $factorial_limit10 = $factorial_limit9;\n\
    \    my $factorial_limit11 = $factorial_limit10;\n    my $factorial_limit12 =\
    \ $factorial_limit11;\n    my $factorial_limit13 = $factorial_limit12;\n    my\
    \ $factorial_limit14 = $factorial_limit13;\n    my $factorial_limit15 = $factorial_limit14;\n\
    \    my $factorial_limit16 = $factorial_limit15;\n    my $factorial_limit17 =\
    \ $factorial_limit16;\n    my $factorial_limit18 = $factorial_limit17;\n    my\
    \ $factorial_limit19 = $factorial_limit18;\n    my $factorial_limit20 = $factorial_limit19;\n\
    \    my $factorial_limit21 = $factorial_limit20;\n    my $factorial_limit22 =\
    \ $factorial_limit21;\n    my $factorial_limit23 = $factorial_limit22;\n    my\
    \ $factorial_limit24 = $factorial_limit23;\n    my $factorial_limit25 = $factorial_limit24;\n\
    \    my $factorial_limit26 = $factorial_limit25;\n    my $factorial_limit27 =\
    \ $factorial_limit26;\n    my $factorial_limit28 = $factorial_limit27;\n    my\
    \ $factorial_limit29 = $factorial_limit28;\n    my $factorial_limit30 = $factorial_limit29;\n\
    \    my $factorial_limit31 = $factorial_limit30;\n    my $factorial_limit32 =\
    \ $factorial_limit31;\n    my $factorial_limit33 = $factorial_limit32;\n    my\
    \ $factorial_limit34 = $factorial_limit33;\n    my $factorial_limit35 = $factorial_limit34;\n\
    \    my $factorial_limit36 = $factorial_limit35;\n    my $factorial_limit37 =\
    \ $factorial_limit36;\n    my $factorial_limit38 = $factorial_limit37;\n    my\
    \ $factorial_limit39 = $factorial_limit38;\n    my $factorial_limit40", "    my\
    \ $factorial = 1;\n    my $i = 1;\n    while($i <= $n) {\n        $factorial *=\
    \ $i;\n        $i++;\n    }\n    return $factorial;\n}", "    my $factorial =\
    \ 1;\n    my $factorial_counter = 1;\n    while($factorial_counter <= $n) {\n\
    \        $factorial *= $factorial_counter;\n        $factorial_counter++;\n  \
    \  }\n    return $factorial;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

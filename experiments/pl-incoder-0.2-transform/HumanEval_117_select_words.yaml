name: HumanEval_117_select_words
language: pl
prompt: "# Given a string s and a natural number n, you have been tasked to implement\
  \ \n# a function that returns a list of all words from string s that contain exactly\
  \ \n# n consonants, in order these words appear in the string s.\n# If the string\
  \ s is empty then the function should return an empty list.\n# Note: you may assume\
  \ the input string contains only letters and spaces.\n# Examples:\n# >>> select_words(\"\
  Mary had a little lamb\", 4)\n# [\"little\"]\n# >>> select_words(\"Mary had a little\
  \ lamb\", 3)\n# [\"Mary\", \"lamb\"]\n# >>> select_words(\"simple white space\"\
  , 2)\n# []\n# >>> select_words(\"Hello world\", 4)\n# [\"world\"]\n# >>> select_words(\"\
  Uncle sam\", 3)\n# [\"Uncle\"]\nsub select_words {\n    my($s, $n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&select_words;\n\
  \        if(eq_deeply($candidate->(\"Mary had a little lamb\", 4),[\"little\"]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  Mary had a little lamb\", 3),[\"Mary\", \"lamb\"])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"simple white space\"\
  , 2),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  Hello world\", 4),[\"world\"])) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"Uncle sam\", 3),[\"Uncle\"])) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  \", 4),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"a b c d e f\", 1),[\"b\", \"c\", \"d\", \"f\"]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @words = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 1;\n    my $n = $n - 1;\n    \n    while ($i < length($s))\
    \ {\n        my $c = substr($s, $i, 1);\n        \n        if ($c eq ' ') {\n\
    \            $i++;\n        }\n        elsif ($c eq 'a') {\n            $i++;\n\
    \        }\n        elsif ($c eq 'e') {\n            $i++;\n        }\n      \
    \  elsif ($c eq 'i') {\n            $i++;\n        }\n        elsif ($c eq 'o')\
    \ {\n            $i++;\n        }\n        elsif ($c eq 'u') {\n            $i++;\n\
    \        }\n        elsif ($c eq 'y') {\n            $i++;\n        }\n      \
    \  elsif ($c eq 'h') {\n            $i++;\n        }\n        elsif ($c eq 'l')\
    \ {\n            $i++;\n        }\n        elsif ($c eq 's') {\n            $i++;\n\
    \        }\n        elsif ($c eq 't') {\n            $i++;\n        }\n      \
    \  elsif ($c eq 'd') {\n            $i++;\n        }\n        elsif ($c eq 'r')\
    \ {\n            $i++;\n        }\n        elsif ($c eq 'p') {\n            $i++;\n\
    \        }\n        elsif ($c eq 'f') {\n            $i++;\n        }\n      \
    \  elsif ($c eq 'v') {\n            $i++;\n        }\n        elsif ($c eq 'b')\
    \ {\n            $i++;\n        }\n        elsif ($c eq 'n') {\n            $i++;\n\
    \        }\n        elsif ($c eq 'm') {\n            $i++;\n        }\n      \
    \  elsif ($c eq 'l') {\n            $i++;\n        }\n        elsif ($c eq 'k')\
    \ {\n            $i++;\n        }\n        elsif ($c eq 'j') {\n            $i++;\n\
    \        }\n        elsif ($c eq 'q') {\n            $i++;\n        }\n      \
    \  elsif ($c eq 'x') {\n            $i++;\n        }\n        elsif ($c eq 'z')\
    \ {\n            $i++;\n        }\n        elsif ($c eq 'x') {\n            $i++;\n\
    \        }\n        elsif ($c eq 'z') {\n            $i++;\n        }", "    my\
    \ @words = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 1;\n    my $n = $n;\n    my $p = 1;\n    my $q = 1;\n    my $r =\
    \ 1;\n    my $s = $s;\n    my $t = 1;\n    my $u = 1;\n    my $v = 1;\n    my\
    \ $w = 1;\n    my $x = 1;\n    my $y = 1;\n    my $z = 1;\n    my $A = 1;\n  \
    \  my $B = 1;\n    my $C = 1;\n    my $D = 1;\n    my $E = 1;\n    my $F = 1;\n\
    \    my $G = 1;\n    my $H = 1;\n    my $I = 1;\n    my $J = 1;\n    my $K = 1;\n\
    \    my $L = 1;\n    my $M = 1;\n    my $N = 1;\n    my $O = 1;\n    my $P = 1;\n\
    \    my $Q = 1;\n    my $R = 1;\n    my $S = 1;\n    my $T = 1;\n    my $U = 1;\n\
    \    my $V = 1;\n    my $W = 1;\n    my $X = 1;\n    my $Y = 1;\n    my $Z = 1;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n\
    \    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n\
    \    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n\
    \    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n\
    \    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n\
    \    my $Y = 0;\n    my $Z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;", "    my @words\
    \ = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $len = 0;\n  \
    \  my $str = \"\";\n    my $temp = \"\";\n    \n    while($i < length($s)) {\n\
    \        $str = $s[$i];\n        $len = length($str);\n        \n        while($j\
    \ < $len) {\n            $temp = $str[$j];\n            $j++;\n            \n\
    \            if($temp =~ /[aeiou]/) {\n                $k++;\n            }\n\
    \        }\n        \n        if($k == $n) {\n            push(@words, $str);\n\
    \        }\n        $i++;\n        $k = 0;\n    }\n    \n    return @words;\n}",
  "    my @words;\n    \n    foreach my $word (split /\\s+/, $s) {\n        push @words,\
    \ $word if $word =~ /^.{$n}[^aeiouy].*$/i;\n    }\n    \n    return @words;\n}",
  "    my @words = ();\n    foreach my $word (split /\\s+/, $s) {\n        push @words,\
    \ $word if $word =~ /^.{$n}[^aeiouy].*$/i;\n    }\n    return @words;\n}", " \
    \   my @words = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l\
    \ = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my\
    \ $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n  \
    \  my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;", "    my @words = ();\n    \n    if ($s) {\n        my $i = 0;\n\
    \        my $j = 0;\n        my $k = 0;\n        my $l = 0;\n        \n      \
    \  while ($i < length($s)) {\n            my $c = substr($s, $i, 1);\n       \
    \     \n            if ($c eq ' ') {\n                push(@words, substr($s,\
    \ $j, $k - $j));\n                $i = $k + 1;\n                $j = $k + 1;\n\
    \                $k = $k + 1;\n                $l++;\n            }\n        \
    \    elsif ($c eq 'a') {\n                $i++;\n                $j++;\n     \
    \           $k++;\n                $l++;\n            }\n            elsif ($c\
    \ eq 'e') {\n                $i++;\n                $j++;\n                $k++;\n\
    \                $l++;\n            }\n            elsif ($c eq 'i') {\n     \
    \           $i++;\n                $j++;\n                $k++;\n            \
    \    $l++;\n            }\n            elsif ($c eq 'o') {\n                $i++;\n\
    \                $j++;\n                $k++;\n                $l++;\n       \
    \     }\n            elsif ($c eq 'u') {\n                $i++;\n            \
    \    $j++;\n                $k++;\n                $l++;\n            }\n    \
    \        elsif ($c eq 'y') {\n                $i++;\n                $j++;\n \
    \               $k++;\n                $l++;\n            }\n            elsif\
    \ ($c eq 'h') {\n                $i++;\n                $j++;\n              \
    \  $k++;\n                $l++;\n            }\n            elsif ($c eq 'l')\
    \ {\n                $i++;\n                $j++;\n                $k++;\n   \
    \             $l++;\n            }\n            elsif ($c eq 's') {\n        \
    \        $i++;\n                $j++;\n                $k++;\n               \
    \ $l++;\n            }\n            elsif ($c eq 't') {\n                $i++;\n\
    \                $j++;\n                $k++;\n                $l++;\n       \
    \     }\n            elsif ($c eq 'd') {\n                $i++;\n            \
    \    $j++;\n                $k++;\n                $l++;\n            }\n    \
    \        elsif ($c eq 'n') {\n                $i++;\n                $j++;\n \
    \               $k++;\n                $l++;\n            }\n            elsif\
    \ ($c eq 'g') {\n                $i++;\n                $j++;\n              \
    \  $k++;\n                $l++;\n            }\n            elsif ($c eq 'p')\
    \ {\n                $i++;\n                $j++;\n                $k++;\n   \
    \             $l++;\n            }\n            elsif ($c eq", "    my @words\
    \ = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;",
  "    my @words = ();\n    \n    for(my $i = 0; $i < length($s); $i++) {\n      \
    \  my $c = substr($s, $i, 1);\n        if($c =~ /[aeiou]/) {\n            push(@words,\
    \ $c);\n        }\n    }\n    \n    if(@words == $n) {\n        return @words;\n\
    \    }\n    \n    return ();\n}", "    my @words = ();\n    my $i = 0;\n    my\
    \ $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 1;\n    my $n = $n - 1;\n\
    \    \n    while ($i < length($s)) {\n        if ($s[i] eq ' ') {\n          \
    \  $i++;\n        }\n        elsif ($s[i] eq '.') {\n            $i++;\n     \
    \   }\n        elsif ($s[i] eq ',' || $s[i] eq '!' || $s[i] eq '?') {\n      \
    \      $i++;\n        }\n        elsif ($s[i] eq '(') {\n            $i++;\n \
    \       }\n        elsif ($s[i] eq ')') {\n            $i++;\n        }\n    \
    \    elsif ($s[i] eq '[') {\n            $i++;\n        }\n        elsif ($s[i]\
    \ eq ']') {\n            $i++;\n        }\n        elsif ($s[i] eq '{') {\n  \
    \          $i++;\n        }\n        elsif ($s[i] eq '}') {\n            $i++;\n\
    \        }\n        elsif ($s[i] eq '^') {\n            $i++;\n        }\n   \
    \     elsif ($s[i] eq '~') {\n            $i++;\n        }\n        elsif ($s[i]\
    \ eq '|') {\n            $i++;\n        }\n        elsif ($s[i] eq '&') {\n  \
    \          $i++;\n        }\n        elsif ($s[i] eq '*') {\n            $i++;\n\
    \        }\n        elsif ($s[i] eq '+') {\n            $i++;\n        }\n   \
    \     elsif ($s[i] eq '<') {\n            $i++;\n        }\n        elsif ($s[i]\
    \ eq '>') {\n            $i++;\n        }\n        elsif ($s[i] eq '/') {\n  \
    \          $i++;\n        }\n        elsif ($s[i] eq '%') {\n            $i++;\n\
    \        }\n        elsif ($s[i] eq '=') {\n            $i++;\n        }\n   \
    \     elsif ($s[i] eq '?') {\n            $i++;\n        }\n        elsif ($s[i]\
    \ eq '!') {\n            $i++;\n        }\n        elsif ($s[i] eq '|') {\n  \
    \          $i++;\n        }\n        elsif ($s[i] eq '~') {\n            $i++;\n\
    \        }\n        elsif ($s[i] eq '&') {\n            $i++;\n        }\n   \
    \     elsif ($s[i] eq '*') {\n            $i++;\n        }\n        elsif ($s[i]\
    \ eq '+') {\n            $i++;\n        }\n", "    my @words;\n    my $i = 0;\n\
    \    \n    while($i < length($s)) {\n        my $c = substr($s, $i, 1);\n    \
    \    \n        if($c eq ' ') {\n            push(@words, substr($s, 0, $i));\n\
    \            $i = 0;\n        }\n        elsif($c eq 'a') {\n            push(@words,\
    \ $c);\n            $i++;\n        }\n        elsif($c eq 'e') {\n           \
    \ push(@words, $c);\n            $i++;\n        }\n        elsif($c eq 'i') {\n\
    \            push(@words, $c);\n            $i++;\n        }\n        elsif($c\
    \ eq 'o') {\n            push(@words, $c);\n            $i++;\n        }\n   \
    \     elsif($c eq 'u') {\n            push(@words, $c);\n            $i++;\n \
    \       }\n        elsif($c eq 'y') {\n            push(@words, $c);\n       \
    \     $i++;\n        }\n        elsif($c eq 'h') {\n            push(@words, $c);\n\
    \            $i++;\n        }\n        elsif($c eq 'l') {\n            push(@words,\
    \ $c);\n            $i++;\n        }\n        elsif($c eq 's') {\n           \
    \ push(@words, $c);\n            $i++;\n        }\n        elsif($c eq 't') {\n\
    \            push(@words, $c);\n            $i++;\n        }\n        elsif($c\
    \ eq 'd') {\n            push(@words, $c);\n            $i++;\n        }\n   \
    \     elsif($c eq 'n') {\n            push(@words, $c);\n            $i++;\n \
    \       }\n        elsif($c eq 'g') {\n            push(@words, $c);\n       \
    \     $i++;\n        }\n        elsif($c eq 'p') {\n            push(@words, $c);\n\
    \            $i++;\n        }\n        elsif($c eq 'f') {\n            push(@words,\
    \ $c);\n            $i++;\n        }\n        elsif($c eq 'v') {\n           \
    \ push(@words, $c);\n            $i++;\n        }\n        elsif($c eq 'b') {\n\
    \            push(@words, $c);\n            $i++;\n        }\n        elsif($c\
    \ eq 'm') {\n            push(@words, $c);\n            $i++;\n        }\n   \
    \     elsif($c eq 'y') {\n            push(@words, $c);\n            $i++;\n \
    \       }\n        elsif($c eq 'k') {\n            push(@words, $c);\n       \
    \     $i++", "    my @words = ();\n    \n    if ($n > 0) {\n        my $i = 0;\n\
    \        my $j = 0;\n        my $k = 0;\n        my $l = 0;\n        my $m = 0;\n\
    \        my $n = 0;\n        my $o = 0;\n        my $p = 0;\n        my $q = 0;\n\
    \        my $r = 0;\n        my $s = 0;\n        my $t = 0;\n        my $u = 0;\n\
    \        my $v = 0;\n        my $w = 0;\n        my $x = 0;\n        my $y = 0;\n\
    \        my $z = 0;\n        my $a = 0;\n        my $b = 0;\n        my $c = 0;\n\
    \        my $d = 0;\n        my $e = 0;\n        my $f = 0;\n        my $g = 0;\n\
    \        my $h = 0;\n        my $i = 0;\n        my $j = 0;\n        my $k = 0;\n\
    \        my $l = 0;\n        my $m = 0;\n        my $n = 0;\n        my $o = 0;\n\
    \        my $p = 0;\n        my $q = 0;\n        my $r = 0;\n        my $s = 0;\n\
    \        my $t = 0;\n        my $u = 0;\n        my $v = 0;\n        my $w = 0;\n\
    \        my $x = 0;\n        my $y = 0;\n        my $z = 0;\n        my $a = 0;\n\
    \        my $b = 0;\n        my $c = 0;\n        my $d = 0;\n        my $e = 0;\n\
    \        my $f = 0;\n        my $g = 0;\n        my $h = 0;\n        my $i = 0;\n\
    \        my $j = 0;\n        my $k = 0;\n        my $l = 0;\n        my $m = 0;\n\
    \        my $n = 0;\n        my $o = 0;\n        my $p = 0;\n        my $q = 0;\n\
    \        my $r = 0;\n        my $s = 0;\n        my $t = 0;\n        my $u = 0;\n\
    \        my $v = 0;\n        my $w = 0;\n        my $x = 0;\n        my $y = 0;\n\
    \        my $z = 0;\n        my $a = 0;\n        my $b = 0;\n        my $c = 0;\n\
    \        my $d = 0;\n        my $e = 0;\n        my $f = 0;\n        my $g = 0;\n\
    \        my $h = 0;\n        my $i = 0;\n        my $j = 0;\n        my $k = 0;\n\
    \        my $l = 0;\n        my $m = 0;\n        my $n = 0;\n        my $o = 0;\n\
    \        my $p = 0;\n        my $q = 0;\n        my $r = 0;\n        my $s = 0;\n\
    \        my $t = 0;\n        my $u = 0;\n        my $v = 0;\n        my $w = 0;\n\
    \        my $x = 0;\n        my $y = 0;\n        my $z = 0;\n        my $a = 0;\n\
    \        my $b = 0;\n        my $c = 0;\n        my $d = 0;\n        my $e = 0;\n\
    \        my $f = 0;\n        my $", "    my @words = ();\n    \n    foreach my\
    \ $word (split /\\s+/, $s) {\n        foreach my $letter (split //, $word) {\n\
    \            push @words, $letter if $letter =~ /[b-df-hj-np-tv-z]/;\n       \
    \ }\n    }\n    \n    return @words if @words == $n;\n    return ();\n}", "  \
    \  my @words = ();\n    \n    my $i = 0;\n    \n    while($i < length($s)) {\n\
    \        my $c = substr($s, $i, 1);\n        \n        if ($c eq \"a\") {\n  \
    \          push(@words, \"a\");\n        }\n        elsif ($c eq \"e\") {\n  \
    \          push(@words, \"e\");\n        }\n        elsif ($c eq \"i\") {\n  \
    \          push(@words, \"i\");\n        }\n        elsif ($c eq \"o\") {\n  \
    \          push(@words, \"o\");\n        }\n        elsif ($c eq \"u\") {\n  \
    \          push(@words, \"u\");\n        }\n        elsif ($c eq \"y\") {\n  \
    \          push(@words, \"y\");\n        }\n        elsif ($c eq \"o\") {\n  \
    \          push(@words, \"o\");\n        }\n        elsif ($c eq \"u\") {\n  \
    \          push(@words, \"u\");\n        }\n        elsif ($c eq \"a\") {\n  \
    \          push(@words, \"a\");\n        }\n        elsif ($c eq \"e\") {\n  \
    \          push(@words, \"e\");\n        }\n        elsif ($c eq \"i\") {\n  \
    \          push(@words, \"i\");\n        }\n        elsif ($c eq \"o\") {\n  \
    \          push(@words, \"o\");\n        }\n        elsif ($c eq \"u\") {\n  \
    \          push(@words, \"u\");\n        }\n        elsif ($c eq \"y\") {\n  \
    \          push(@words, \"y\");\n        }\n        elsif ($c eq \"o\") {\n  \
    \          push(@words, \"o\");\n        }\n        elsif ($c eq \"u\") {\n  \
    \          push(@words, \"u\");\n        }\n        elsif ($c eq \"a\") {\n  \
    \          push(@words, \"a\");\n        }\n        elsif ($c eq \"e\") {\n  \
    \          push(@words, \"e\");\n        }\n        elsif ($c eq \"i\") {\n  \
    \          push(@words, \"i\");\n        }\n        elsif ($c eq \"o\") {\n  \
    \          push(@words, \"o\");\n        }\n        elsif ($c eq \"u\") {\n  \
    \          push(@words, \"u\");\n        }\n        elsif ($c eq \"y\") {\n  \
    \          push(@words, \"y\");\n        }\n        elsif ($c eq \"o\") {\n  \
    \          push(@words, \"o\");\n        }\n        el", "    my @words = ();\n\
    \    \n    foreach my $word (split /\\s+/, $s) {\n        my $count = 0;\n   \
    \     foreach my $letter (split //, $word) {\n            ++$count if $letter\
    \ =~ /[aeiou]/;\n        }\n        \n        if ($count == $n) {\n          \
    \  push(@words, $word);\n        }\n    }\n    \n    return @words;\n}", "   \
    \ my @words;\n    \n    if ($n > 0) {\n        my @chars = split(//, $s);\n  \
    \      \n        foreach my $char (@chars) {\n            push @words, $char if\
    \ ($char =~ /[b-df-hj-np-tv-z]/g);\n        }\n    }\n    \n    return @words;\n\
    }", "    my @words;\n    my $i = 0;\n    my $j = 0;\n    my $word = \"\";\n  \
    \  \n    while($i < length($s)) {\n        while($j < length($s) && $s[i] ne \"\
    \ \") {\n            $j++;\n        }\n        \n        if($j < length($s)) {\n\
    \            $word .= $s[i];\n            $j++;\n        }\n        \n       \
    \ if($j == length($s)) {\n            push(@words, $word);\n            $word\
    \ = \"\";\n            $j = 0;\n        }\n        \n        $i++;\n    }\n  \
    \  \n    if($word ne \"\") {\n        push(@words, $word);\n    }\n    \n    return\
    \ @words;\n}", "    my @words;\n    \n    if ($n > 0) {\n        push @words,\
    \ $1 if $s =~ /([aeiouy])\\1{0,$n}/g;\n    }\n    \n    if ($n < 0) {\n      \
    \  push @words, $1 if $s =~ /([aeiouy])\\1{0,-$n}/g;\n    }\n    \n    return\
    \ @words;\n}", "    my @words = ();\n    \n    foreach my $word (split /\\s+/,\
    \ $s) {\n        push @words, $word if $word =~ /[^aeiou]/g;\n    }\n    \n  \
    \  return @words if $n <= @words;\n    \n    my @new_words = ();\n    \n    foreach\
    \ my $word (@words) {\n        push @new_words, $word if $word =~ /[^aeiou]/g;\n\
    \    }\n    \n    return @new_words if $n == @new_words;\n    \n    return ();\n\
    }", "    my @words;\n    \n    foreach my $word (split /\\s+/, $s) {\n       \
    \ push @words, $word if length($word) == $n;\n    }\n    \n    return @words;\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

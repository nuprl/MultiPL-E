name: HumanEval_140_fix_spaces
language: pl
prompt: "# Given a string text, replace all spaces in it with underscores, \n# and\
  \ if a string has more than 2 consecutive spaces, \n# then replace all consecutive\
  \ spaces with - \n# >>> fix_spaces(\" Example\")\n# \"Example\"\n# >>> fix_spaces(\"\
  \ Example 1\")\n# \"Example_1\"\n# >>> fix_spaces(\" Example 2\")\n# \"_Example_2\"\
  \n# >>> fix_spaces(\" Example 3\")\n# \"_Example-3\"\nsub fix_spaces {\n    my($text)\
  \ = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fix_spaces;\n\
  \        if(eq_deeply($candidate->(\"Example\"),\"Example\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Mudasir\
  \ Hanif \"),\"Mudasir_Hanif_\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"Yellow Yellow  Dirty  Fellow\"),\"\
  Yellow_Yellow__Dirty__Fellow\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"Exa   mple\"),\"Exa-mple\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  \   Exa 1 2 2 mple\"),\"-Exa_1_2_2_mple\")) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n\
    \    $text =~ s/_+$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-+//;\n    $text\
    \ =~ s/-+$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/\
    \ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", " \
    \   $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text\
    \ =~ s/-$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/\
    \ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//g;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text\
    \ =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^-+//;\n    $text =~ s/-+$//;\n    return $text;\n}", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n \
    \   $text =~ s/-$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^-+//;\n    $text =~ s/-+$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text\
    \ =~ s/_$//;\n    return $text;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

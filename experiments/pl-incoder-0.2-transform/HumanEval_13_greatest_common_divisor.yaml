name: HumanEval_13_greatest_common_divisor
language: pl
prompt: "# Return a greatest common divisor of two integers a and b\n# >>> greatest_common_divisor(3,\
  \ 5)\n# 1\n# >>> greatest_common_divisor(25, 15)\n# 5\nsub greatest_common_divisor\
  \ {\n    my($a, $b) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&greatest_common_divisor;\n\
  \        if(eq_deeply($candidate->(3, 7),1)) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(10, 15),5)) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(49,\
  \ 14),7)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(144,\
  \ 60),12)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $gcd = $a % $b;\n    my $remainder = $a / $gcd;\n    return\
    \ $remainder if $remainder != $b;\n    return $gcd;\n}", "    my $gcd = $a % $b;\n\
    \    $gcd > $a ? $gcd : $b;\n}", "    return $a if $a < $b;\n    return $b if\
    \ ($a < $b);\n    return $a if ($a == $b);\n    return $a if ($a > $b);\n    return\
    \ $b;\n}", "    return $a if $a < $b;\n    return $b if ($a < $b);\n    my $gcd\
    \ = $a % $b;\n    return $gcd if ($gcd != 0);\n    return $b;\n}", "    return\
    \ $a if $a < $b;\n    return $b if $a > $b;\n    return $a if $a == $b;\n    return\
    \ $a if $a % $b == 0;\n    return $b;\n}", "    my $gcd = $a % $b;\n    while\
    \ ($gcd != 0) {\n        $a = $b;\n        $b = $gcd;\n        $gcd = $a % $b;\n\
    \    }\n    return $b;\n}", "    return $a if $a < $b;\n    return $b if $a >\
    \ $b;\n    return $a if $a == $b;\n    return $a if $a % $b == 0;\n    return\
    \ $b;\n}", "    my $gcd = $a % $b;\n    while ($gcd != 0) {\n        $a = $b;\n\
    \        $b = $gcd;\n        $gcd = $a % $b;\n    }\n    return $b;\n}", "   \
    \ return $a if $a < $b;\n    return $b if $a > $b;\n    my $gcd = $a % $b;\n \
    \   return $gcd if $gcd != 0;\n    return $b;\n}", "    return $a if $a < $b;\n\
    \    return $b if $a > $b;\n    my $gcd = $a % $b;\n    return $gcd if $gcd !=\
    \ 0;\n    return $b;\n}", "    my $gcd = $a % $b;\n    if ($gcd != 0) {\n    \
    \    $gcd = greatest_common_divisor($b, $gcd);\n    }\n    return $gcd;\n}", " \
    \   my $gcd = $a % $b;\n    while ($gcd != 0) {\n        $a = $b;\n        $b\
    \ = $gcd;\n        $gcd = $a % $b;\n    }\n    return $b;\n}", "    my $gcd =\
    \ $a % $b;\n    while ($gcd != 0) {\n        $a = $b;\n        $b = $gcd;\n  \
    \      $gcd = $a % $b;\n    }\n    return $b;\n}", "    return $a if $a < $b;\n\
    \    return $b if $a > $b;\n    my $gcd = $a % $b;\n    return $gcd if $gcd !=\
    \ 0;\n    return $b;\n}", "    my $gcd = $a % $b;\n    my $remainder = $a / $gcd;\n\
    \    return $remainder if $remainder != $b;\n    return $gcd;\n}", "    my $gcd\
    \ = $a % $b;\n    $gcd > $a ? $a : $gcd > $b ? $b : $gcd;\n}", "    return $a\
    \ if $a < $b;\n    return $b if $a > $b;\n    my $gcd = $a % $b;\n    return $gcd\
    \ if $gcd != 0;\n    return $b;\n}", "    my $gcd = $a % $b;\n    $gcd > $a ?\
    \ $a : $b\n}", "    my $gcd = $a % $b;\n    return $gcd if $gcd != 0;\n    return\
    \ $b;\n}", "    return $a if $a < $b;\n    return $b if $a > $b;\n    my $gcd\
    \ = $a % $b;\n    return $gcd if $gcd != 0;\n    return $b;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

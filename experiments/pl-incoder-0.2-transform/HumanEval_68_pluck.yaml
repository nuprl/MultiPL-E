name: HumanEval_68_pluck
language: pl
prompt: "# \"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n# your task is to pluck one of the nodes and return it.\n# The\
  \ plucked node should be the node with the smallest even value.\n# If multiple nodes\
  \ with the same smallest even value are found return the node that has smallest\
  \ index.\n# The plucked node should be returned in a list, [ smalest_value, its\
  \ index ],\n# If there are no even values or the given array is empty, return [].\n\
  # Example 1:\n# >>> pluck([4, 2, 3])\n# [2, 1]\n# Explanation: 2 has the smallest\
  \ even value, and 2 has the smallest index.\n# Example 2:\n# >>> pluck([1, 2, 3])\n\
  # [2, 1]\n# Explanation: 2 has the smallest even value, and 2 has the smallest index.\n\
  # Example 3:\n# >>> pluck([])\n# []\n# Example 4:\n# >>> pluck([5, 0, 3, 0, 4, 2])\n\
  # [0, 1]\n# Explanation: 0 is the smallest value, but  there are two zeros,\n# so\
  \ we will choose the first zero, which has the smallest index.\n# Constraints:\n\
  # * 1 <= nodes.length <= 10000\n# * 0 <= node.value\nsub pluck {\n    my($arr) =\
  \ @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&pluck;\n\
  \        if(eq_deeply($candidate->([4, 2, 3]),[2, 1])) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3]),[2,\
  \ 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 0, 3, 0, 4, 2]),[0, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->([1, 2, 3, 0, 5, 3]),[0, 3])) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 4, 8, 4, 8]),[4, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->([7, 6, 7, 1]),[6, 1])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([7,\
  \ 9, 7, 1]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\
  \ntesthumaneval();"
completions: ["    my $min = $arr[0];\n    my $index = 0;\n    my $even;\n    foreach\
    \ my $val (@$arr) {\n        if ($val & 1) {\n            $even = $val;\n    \
    \    }\n        if ($val < $min) {\n            $min = $val;\n            $index\
    \ = $even;\n        }\n    }\n    return $index if $even;\n    return $min;\n}",
  "    my @result;\n    my $min;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $found;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_", "    my @result;\n    my\
    \ $min = $arr[0];\n    my $index = 0;\n    my $found;\n    foreach my $i (0 ..\
    \ $#arr) {\n        if ($arr[$i] & 1) {\n            $found = 1;\n           \
    \ $min = $arr[$i];\n            $index = $i;\n            last;\n        }\n \
    \   }\n    return @result if $found;\n    return @result if $min == 0;\n    foreach\
    \ my $i (0 .. $#arr) {\n        if ($arr[$i] & 1) {\n            if ($arr[$i]\
    \ < $min) {\n                $min = $arr[$i];\n                $index = $i;\n\
    \            }\n        }\n    }\n    push @result, $min, $index;\n    return\
    \ @result;\n}", "    my $min = $arr[0];\n    my $index = 0;\n    my $even;\n \
    \   my $smalest_value;\n    foreach my $n (@$arr) {\n        if ($n % 2 != 0)\
    \ {\n            $smalest_value = $n;\n            $index = $n;\n            $even\
    \ = 0;\n        }\n        else {\n            $even = 1;\n        }\n       \
    \ if ($even != 0) {\n            if ($smalest_value < $n) {\n                $smalest_value\
    \ = $n;\n                $index = $n;\n            }\n        }\n    }\n    return\
    \ [$smalest_value, $index];\n}", "    my @result;\n    my $smallest_value;\n \
    \   my $smallest_index;\n    my $index;\n    my $value;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value_index;\n    my $even_value_index;\n \
    \   my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n",
  "    my $min = -1;\n    my $index;\n    my $smalest_value;\n    foreach my $node\
    \ (@$arr) {\n        if ($node % 2 == 0) {\n            if ($min == -1) {\n  \
    \              $smalest_value = $node;\n                $min = $node;\n      \
    \          $index = 0;\n            }\n            elsif ($node < $min) {\n  \
    \              $smalest_value = $node;\n                $min = $node;\n      \
    \          $index = 0;\n            }\n            elsif ($node == $min) {\n \
    \               $index++;\n            }\n        }\n    }\n    return $smalest_value,\
    \ $index;\n}", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n \
    \   my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n    my\
    \ $index;\n    my $value;\n    my $even_value;\n    my $even_index;\n    my $min_value;\n\
    \    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n    my\
    \ $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $min_even_value;\n    my $", " \
    \   my $result;\n    my $smallest_value;\n    my $smallest_index;\n    my $index;\n\
    \    my $value;\n    my $even_value;", "    my @res;\n    my $min;\n    my $index;\n\
    \    my $value;\n    my $i = 0;\n    my $j = 0;\n    my $even;\n    my $even_index;\n\
    \    my $even_value;\n    foreach my $node (@$arr) {\n        $i++;\n        if\
    \ ($node % 2 == 0) {\n            $even = $node;\n            $even_index = $i;\n\
    \            $even_value = $node;\n        }\n    }\n    if ($even) {\n      \
    \  foreach my $node (@$arr) {\n            if ($node == $even) {\n           \
    \     $j++;\n                if ($j < $even_index) {\n                    $min\
    \ = $node;\n                    $index = $even_index;\n                }\n   \
    \         }\n        }\n    }\n    if ($min) {\n        foreach my $node (@$arr)\
    \ {\n            if ($node == $min) {\n                $j++;\n               \
    \ if ($j < $index) {\n                    $min = $node;\n                    $index\
    \ = $j;\n                }\n            }\n        }\n    }\n    if ($min) {\n\
    \        foreach my $node (@$arr) {\n            if ($node == $min) {\n      \
    \          $j++;\n                if ($j < $index) {\n                    $min\
    \ = $node;\n                    $index = $j;\n                }\n            }\n\
    \        }\n    }\n    if ($min) {\n        foreach my $node (@$arr) {\n     \
    \       if ($node == $min) {\n                $j++;\n                if ($j <\
    \ $index) {\n                    $min = $node;\n                    $index = $j;\n\
    \                }\n            }\n        }\n    }\n    if ($min) {\n       \
    \ foreach my $node (@$arr) {\n            if ($node == $min) {\n             \
    \   $j++;\n                if ($j < $index) {\n                    $min = $node;\n\
    \                    $index = $j;\n                }\n            }\n        }\n\
    \    }\n    if ($min) {\n        foreach my $node (@$arr) {\n            if ($node\
    \ == $min) {\n                $j++;\n                if ($j < $index) {\n    \
    \                $min = $node;\n                    $index = $j;\n           \
    \     }\n            }\n        }\n    }\n    if ($min) {\n        foreach my\
    \ $node (@$arr) {\n            if ($node == $min) {\n                $j++;\n \
    \               if ($j < $index) {\n                    $min = $node;\n      \
    \              $index = $j;\n                }\n            }\n        }\n   \
    \ }\n    if ($min) {\n        foreach my $node (@$arr) {\n            if ($node\
    \ == $min) {\n                $j++;\n                if ($j < $index) {\n    \
    \                $min = $", "    my @res;\n    my $min;\n    my $index;\n    my\
    \ $value;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    ", "    my\
    \ $min;\n    my $index;\n    my $even;\n    my $smalest_value;\n    foreach my\
    \ $node (@$arr) {\n        if ($node % 2 == 0) {\n            $even = $node;\n\
    \        }\n        elsif ($node < $min) {\n            $min = $node;\n      \
    \      $index = 0;\n        }\n        elsif ($node == $min) {\n            $index++;\n\
    \        }\n    }\n    if ($even) {\n        $smalest_value = $even;\n    }\n\
    \    else {\n        $smalest_value = $min;\n    }\n    return [ $smalest_value,\
    \ $index ];\n}", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $found;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $", "    my\
    \ $index = 0;\n    my $smalest_value;\n    my $smalest_index;\n    foreach my\
    \ $node (@$arr) {\n        if ($node % 2 == 0) {\n            $smalest_value =\
    \ $node;\n            $smalest_index = $index;\n        }\n        $index++;\n\
    \    }\n    return $smalest_value if $smalest_value;\n    return [];\n}", "  \
    \  my @result;\n    my $min = 0;\n    my $min_index = 0;\n    my $smalest_value;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $smalest_value\
    \ = $node;\n            $min_index = $min;\n        }\n        if ($node < $smalest_value)\
    \ {\n            $min = $node;\n            $min_index = $min_index;\n       \
    \ }\n    }\n    if ($min == 0) {\n        return [];\n    }\n    push(@result,\
    \ $smalest_value, $min_index);\n    return @result;\n}", "    my @result;\n  \
    \  my $min_value = $arr[0];\n    my $min_idx = 0;\n    my $i = 0;\n    my $j =\
    \ 0;\n    my $k = 0;\n    my $found = 0;\n    my $tmp;\n    my $tmp2;\n    my\
    \ $tmp3;\n    my $tmp4;\n    my $tmp5;\n    my $tmp6;\n    my $tmp7;\n    my $tmp8;\n\
    \    my $tmp9;\n    my $tmp10;\n    my $tmp11;\n    my $tmp12;\n    my $tmp13;\n\
    \    my $tmp14;\n    my $tmp15;\n    my $tmp16;\n    my $tmp17;\n    my $tmp18;\n\
    \    my $tmp19;\n    my $tmp20;\n    my $tmp21;\n    my $tmp22;\n    my $tmp23;\n\
    \    my $tmp24;\n    my $tmp25;\n    my $tmp26;\n    my $tmp27;\n    my $tmp28;\n\
    \    my $tmp29;\n    my $tmp30;\n    my $tmp31;\n    my $tmp32;\n    my $tmp33;\n\
    \    my $tmp34;\n    my $tmp35;\n    my $tmp36;\n    my $tmp37;\n    my $tmp38;\n\
    \    my $tmp39;\n    my $tmp40;\n    my $tmp41;\n    my $tmp42;\n    my $tmp43;\n\
    \    my $tmp44;\n    my $tmp45;\n    my $tmp46;\n    my $tmp47;\n    my $tmp48;\n\
    \    my $tmp49;\n    my $tmp50;\n    my $tmp51;\n    my $tmp52;\n    my $tmp53;\n\
    \    my $tmp54;\n    my $tmp55;\n    my $tmp56;\n    my $tmp57;\n    my $tmp58;\n\
    \    my $tmp59;\n    my $tmp60;\n    my $tmp61;\n    my $tmp62;\n    my $tmp63;\n\
    \    my $tmp64;\n    my $tmp65;\n    my $tmp66;\n    my $tmp67;\n    my $tmp68;\n\
    \    my $tmp69;\n    my $tmp70;\n    my $tmp71;\n    my $tmp72;\n    my $tmp73;\n\
    \    my $tmp74;\n    my $tmp75;\n    my $tmp76;\n    my $tmp77;\n    my $tmp78;\n\
    \    my $tmp79;\n    my $tmp80;\n    my $tmp81;\n    my $tmp82;\n    my $tmp",
  "    my @res;\n    my $min;\n    my $index;\n    my $value;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $found;\n    my $min_index;\n    my $min_value;\n  \
    \  my $min_even;\n    my $min_index;\n    my $min_even_index;\n    my $min_even_value;\n\
    \    my $even;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index", "    my $min = -1;\n    my $min_index;\n\
    \    my $smalest_value;\n    foreach my $node (@$arr) {\n        if ($min == -1\
    \ || $min > $node) {\n            $min = $node;\n            $min_index = $node;\n\
    \        }\n        elsif ($node == $min) {\n            $min_index = $node;\n\
    \        }\n    }\n    return $smalest_value if $min == -1;\n    return [ $smalest_value,\
    \ $min_index ];\n}", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $min_index;\n    my\
    \ $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n   \
    \ my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n \
    \   my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $", "    my $min = $arr[0];\n    my $index = 0;\n    for (my $i = 1; $i\
    \ < @$arr; $i++) {\n        if ($arr[$i] % 2 != 0) {\n            $min = $arr[$i]\
    \ if $min > $arr[$i];\n            $index = $i;\n        }\n    }\n    return\
    \ [$min, $index] if $min != 0;\n    return [];\n}", "    my @res;\n    my $min;\n\
    \    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $min_index;\n    my $min_value;\n    my\
    \ $min_even;\n    my $min_index;\n    my $min_value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n \
    \   my $min_index;\n    my $min_value;\n    my $even;\n    my $index;\n    my\
    \ $value;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $even;\n    my $index;\n    my $value;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $even;\n  \
    \  my $index;\n    my $value;\n    my $min_index;\n    my $min_value;\n    my\
    \ $min_even;\n    my $min_index;\n    my $min_value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n \
    \   my $min_index;\n    my $min_value;\n    my $even;\n    my $index;\n    my\
    \ $value;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $even;\n    my $index;\n    my $value;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $even;\n  \
    \  my $index;\n    my $value;\n    my $min_index;\n    my $min_value;\n    my\
    \ $min_even;\n    my $min_index;\n    my $min_value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n \
    \   my $min_index;\n    my $min_value;\n    my $", "    my @res;\n    my $min;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my\
    \ $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n\
    \    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my\
    \ $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n\
    \    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my\
    \ $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n\
    \    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my\
    \ $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n\
    \    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n", "    my $min = $arr[0];\n    my $index = 0;\n    my $smalest_value;\n\
    \    foreach my $val (@$arr) {\n        if ($val % 2 == 0) {\n            if ($smalest_value\
    \ == 0) {\n                $smalest_value = $val;\n                $index = $index;\n\
    \            } else {\n                if ($val < $smalest_value) {\n        \
    \            $smalest_value = $val;\n                    $index = $index;\n  \
    \              }\n            }\n        }\n    }\n    return $smalest_value,\
    \ $index;\n}", "    my @res;\n    my $min = 0;\n    my $min_index = 0;\n    my\
    \ $smalest_value;\n    my $smalest_index;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $w;\n    my\
    \ $x;\n    my $y;\n    my $z;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $w;\n    my $x;\n    my\
    \ $y;\n    my $z;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $w;\n    my $x;\n    my $y;\n    my\
    \ $z;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $w;\n    my\
    \ $x;\n    my $y;\n    my $z;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $w;\n    my $x;\n    my\
    \ $y;\n    my $z;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $w;\n    my $x;\n    my $y;\n    my\
    \ $z;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $w;\n    my\
    \ $", "    my @res;\n    my $min_even_val = -1;\n    my $min_even_pos = -1;\n\
    \    my $min_even_pos_idx = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_idx\
    \ = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_idx = -1;\n    my\
    \ $min_even_pos_val = -1;\n    my $min_even_pos_idx = -1;\n    my $min_even_pos_val\
    \ = -1;\n    my $min_even_pos_idx = -1;\n    my $min_even_pos_val = -1;\n    my\
    \ $min_even_pos_idx = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_idx\
    \ = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_idx = -1;\n    my\
    \ $min_even_pos_val = -1;\n    my $min_even_pos_idx = -1;\n    my $min_even_pos_val\
    \ = -1;\n    my $min_even_pos_idx = -1;\n    my $min_even_pos_val = -1;\n    my\
    \ $min_even_pos_idx = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_idx\
    \ = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_idx = -1;\n    my\
    \ $min_even_pos_val = -1;\n    my $min_even_pos_idx = -1;\n    my $min_even_pos_val\
    \ = -1;\n    my $min_even_pos_idx = -1;\n    my $min_even_pos_val = -1;\n    my\
    \ $min_even_pos_idx = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_idx\
    \ = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_idx = -1;\n    my\
    \ $min_even_pos_val = -1;\n    my $min_even_pos_idx = -1;\n    my $min_even_pos_val\
    \ = -1;\n    my $min_even_pos_idx = -1;\n    my $min_even_pos_val = -1;\n    my\
    \ $min_even_pos_idx = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_idx\
    \ = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_idx = -1;\n    my\
    \ $min_even_pos_val = -1;\n    my $min_even_pos_idx = -1;\n    my $min_even_pos_val\
    \ = -1;\n    my $min_even_pos_idx = -1;\n    my $min_even_pos_val = -1;\n    my\
    \ $min_even_pos_idx = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_idx\
    \ = -1;\n    my $min_even_pos_val = -1;\n    my $min_even_pos_", "    my @res;\n\
    \    my $min;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n", "    my @result;\n    my $min;\n    my $index;\n    my $value;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $even;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    ",
  "    my $min = $arr[0];\n    my $index = 0;\n    my $smalest_value;\n    foreach\
    \ my $val (@$arr) {\n        if ($val % 2 == 0) {\n            if ($smalest_value\
    \ eq \"\" || $smalest_value < $val) {\n                $smalest_value = $val;\n\
    \                $index = $index;\n            }\n        }\n    }\n    return\
    \ $smalest_value if $smalest_value ne \"\";\n    return [];\n}", "    my @res;\n\
    \    my $min;\n    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even;\n    my $temp;\n    my $count;\n    my $min_index;\n    my\
    \ $min_value;\n    my $min_count;\n    my $min_index;\n    my $min_value;\n  \
    \  my $min_count;\n    my $min_index;\n    my $min_value;\n    my $min_count;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_count;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_count;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_count;\n    my $min_index;\n    my $min_value;\n    my $min_count;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_count;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_count;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_count;\n    my $min_index;\n    my $min_value;\n    my $min_count;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_count;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_count;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_count;\n    my $min_index;\n    my $min_value;\n    my $min_count;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_count;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_count;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_count;\n    my $min_index;\n    my $min_value;\n    my $min_count;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_count;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_count;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_count;\n    my $min_index;\n    my $min_value;\n    my $min_count;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_count;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_count;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_count;\n    my $min_index;\n    my $min_value;\n    my $min_count;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_count;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_count;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_count;\n    my $min_index;\n    my $min_value;\n    my $min_count;\n\
    \    my $", "    my $min = $arr->[0];\n    my $index = 0;\n    my $even = 0;\n\
    \    foreach my $val (@$arr) {\n        if ($val % 2 == 0) {\n            $even++;\n\
    \        }\n        if ($val < $min) {\n            $min = $val;\n           \
    \ $index = $even;\n        }\n    }\n    return $min, $index;\n}", "    my @res;\n\
    \    my $min;\n    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $found;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $found;\n    my $min_index;\n    my\
    \ $min_value;\n    my $min_even_value;\n    my $min_even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value_index;\n    my $even_value_index2;\n\
    \    my $even_value_index3;\n    my $even_value_index4;\n    my $even_value_index5;\n\
    \    my $even_value_index6;\n    my $even_value_index7;\n    my $even_value_index8;\n\
    \    my $even_value_index9;\n    my $even_value_index10;\n    my $even_value_index11;\n\
    \    my $even_value_index12;\n    my $even_value_index13;\n    my $even_value_index14;\n\
    \    my $even_value_index15;\n    my $even_value_index16;\n    my $even_value_index17;\n\
    \    my $even_value_index18;\n    my $even_value_index19;\n    my $even_value_index20;\n\
    \    my $even_value_index21;\n    my $even_value_index22;\n    my $even_value_index23;\n\
    \    my $even_value_index24;\n    my $even_value_index25;\n    my $even_value_index26;\n\
    \    my $even_value_index27;\n    my $even_value_index28;\n    my $even_value_index29;\n\
    \    my $even_value_index30;\n    my $even_value_index31;\n    my $even_value_index32;\n\
    \    my $even_value_index33;\n    my $even_value_index34;\n    my $even_value_index35;\n\
    \    my $even_value_index36;\n    my $even_value_index37;\n    my $even_value_index38;\n\
    \    my $even_value_index39;\n    my $even_value_index40;\n    my $even_value_index41;\n\
    \    my $even_value_index42;\n    my $even_value_index43;\n    my $even_value_index44;\n\
    \    my $even_value_index45;\n    my $even_value_index46;\n    my $even_value_index47;\n\
    \    my $even_value_index48;\n    my $even_value_index49;\n    my $even_value_index50;\n\
    \    my $even_value_index51;\n    my $even_value_index52;\n    my $even_value_index53;\n\
    \    my $even_value_index54;\n    my $even_value_index55;\n    my $even_value_index56;\n\
    \    my $even_value_index57;\n    my $even", "    my $min_value = $arr[0];\n \
    \   my $min_index = 0;\n    my $index = 0;\n    my $even_value = 0;\n    my $even_index\
    \ = 0;\n    my $even_value_count = 0;\n    my $even_index_count = 0;\n    my $even_value_index\
    \ = 0;\n    my $even_value_value = 0;\n    my $even_index_value = 0;\n    my $even_value_count2\
    \ = 0;\n    my $even_index_count2 = 0;\n    my $even_value_index2 = 0;\n    my\
    \ $even_value_value2 = 0;\n    my $even_index_value2 = 0;\n    my $even_value_count3\
    \ = 0;\n    my $even_index_count3 = 0;\n    my $even_value_index3 = 0;\n    my\
    \ $even_value_value3 = 0;\n    my $even_index_value3 = 0;\n    my $even_value_count4\
    \ = 0;\n    my $even_index_count4 = 0;\n    my $even_value_index4 = 0;\n    my\
    \ $even_value_value4 = 0;\n    my $even_index_value4 = 0;\n    my $even_value_count5\
    \ = 0;\n    my $even_index_count5 = 0;\n    my $even_value_index5 = 0;\n    my\
    \ $even_value_value5 = 0;\n    my $even_index_value5 = 0;\n    my $even_value_count6\
    \ = 0;\n    my $even_index_count6 = 0;\n    my $even_value_index6 = 0;\n    my\
    \ $even_value_value6 = 0;\n    my $even_index_value6 = 0;\n    my $even_value_count7\
    \ = 0;\n    my $even_index_count7 = 0;\n    my $even_value_index7 = 0;\n    my\
    \ $even_value_value7 = 0;\n    my $even_index_value7 = 0;\n    my $even_value_count8\
    \ = 0;\n    my $even_index_count8 = 0;\n    my $even_value_index8 = 0;\n    my\
    \ $even_value_value8 = 0;\n    my $even_index_value8 = 0;\n    my $even_value_count9\
    \ = 0;\n    my $even_index_count9 = 0;\n    my $even_value_index9 = 0;\n    my\
    \ $even_value_value9 = 0;\n    my $even_index_value9 = 0;\n    my $even_value_count10\
    \ = 0;\n    my $even_index_count10 = 0;\n    my $even_value_index10 = 0;\n   \
    \ my $even_value_value10 = 0;\n    my $even_index_value10 = 0;\n    my $even_value_count11\
    \ = 0;\n    my $even_index_count11 = 0;\n    my $even_value_index11 = 0;\n   \
    \ my $even_value_value11 = 0;\n    my $even_index_value11 = 0;\n    my $even_value_count12\
    \ = 0;\n    my $even_index_count12 = 0;\n    my $even_value_index12 = 0;\n   \
    \ my $even_value_value12 = 0;\n    my $even_index_value12 = 0;\n    my $even_value_count13\
    \ = 0;\n    my $even_index_count13 = 0;\n    my $even_value_index13 = 0;\n   \
    \ my $even", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n   \
    \ my $i = 0;\n    my $j = 0;\n    my $even;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    ",
  "    my @res;\n    my $min = 0;\n    my $min_index = 0;\n    my $smalest_value;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $smalest_value\
    \ = $node;\n            $min_index = $min;\n        }\n        elsif ($node <\
    \ $smalest_value) {\n            $smalest_value = $node;\n            $min_index\
    \ = $min;\n        }\n        elsif ($node == $smalest_value) {\n            $min_index++;\n\
    \        }\n        $min++;\n    }\n    if ($min == 0) {\n        return [];\n\
    \    }\n    elsif ($min == 1) {\n        return [ $smalest_value, $min_index ];\n\
    \    }\n    else {\n        return [ $smalest_value, $min_index ];\n    }\n}",
  "    my $result;\n    my $smallest_value;\n    my $smallest_index;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $value;\n    my $index;\n    my $count;\n    my\
    \ $even;\n    my $even_value;\n    my $even_index;\n    my $even_count;\n    my\
    \ $index;\n    my $value;\n    my $count;\n    my $even;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_count;\n    my $index;\n    my $value;\n  \
    \  my $count;\n    my $even;\n    my $even_value;\n    my $even_index;\n    my\
    \ $even_count;\n    my $index;\n    my $value;\n    my $count;\n    my $even;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_count;\n    my $index;\n\
    \    my $value;\n    my $count;\n    my $even;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $index;\n    my $value;\n    my $count;\n    my $even;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_count;\n    my $index;\n\
    \    my $value;\n    my $count;\n    my $even;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $index;\n    my $value;\n    my $count;\n    my $even;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_count;\n    my $index;\n\
    \    my $value;\n    my $count;\n    my $even;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $index;\n    my $value;\n    my $count;\n    my $even;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_count;\n    my $index;\n\
    \    my $value;\n    my $count;\n    my $even;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $index;\n    my $value;\n    my $count;\n    my $even;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_count;\n    my $index;\n\
    \    my $value;\n    my $count;\n    my $even;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $index;\n    my $value;\n    my $count;\n    my $even;\n\
    \    my $even_value;\n    my $even_index;", "    my $min_even_value;\n    my $min_even_index;\n\
    \    my $smalest_value;\n    my @smalest_value_index;\n    my $i = 0;\n    my\
    \ $j = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value_index\
    \ = 0;\n    my $even_value_index2 = 0;\n    my $even_value_index3 = 0;\n    my\
    \ $even_value_index4 = 0;\n    my $even_value_index5 = 0;\n    my $even_value_index6\
    \ = 0;\n    my $even_value_index7 = 0;\n    my $even_value_index8 = 0;\n    my\
    \ $even_value_index9 = 0;\n    my $even_value_index10 = 0;\n    my $even_value_index11\
    \ = 0;\n    my $even_value_index12 = 0;\n    my $even_value_index13 = 0;\n   \
    \ my $even_value_index14 = 0;\n    my $even_value_index15 = 0;\n    my $even_value_index16\
    \ = 0;\n    my $even_value_index17 = 0;\n    my $even_value_index18 = 0;\n   \
    \ my $even_value_index19 = 0;\n    my $even_value_index20 = 0;\n    my $even_value_index21\
    \ = 0;\n    my $even_value_index22 = 0;\n    my $even_value_index23 = 0;\n   \
    \ my $even_value_index24 = 0;\n    my $even_value_index25 = 0;\n    my $even_value_index26\
    \ = 0;\n    my $even_value_index27 = 0;\n    my $even_value_index28 = 0;\n   \
    \ my $even_value_index29 = 0;\n    my $even_value_index30 = 0;\n    my $even_value_index31\
    \ = 0;\n    my $even_value_index32 = 0;\n    my $even_value_index33 = 0;\n   \
    \ my $even_value_index34 = 0;\n    my $even_value_index35 = 0;\n    my $even_value_index36\
    \ = 0;\n    my $even_value_index37 = 0;\n    my $even_value_index38 = 0;\n   \
    \ my $even_value_index39 = 0;\n    my $even_value_index40 = 0;\n    my $even_value_index41\
    \ = 0;\n    my $even_value_index42 = 0;\n    my $even_value_index43 = 0;\n   \
    \ my $even_value_index44 = 0;\n    my $even_value_index45 = 0;\n    my $even_value_index46\
    \ = 0;\n    my $even_value_index47 = 0;\n    my $even_value_index48 = 0;\n   \
    \ my $even_value_index49 = 0;\n    my $even_value_index50 = 0;\n    my $even_value_index51\
    \ = 0;\n    my $even_value_index52 = 0;\n    my $even_value_index53 = 0;\n   \
    \ my $even_value_index54 = 0;\n    my $even_value_index55 = 0;\n    my $even_value_index56\
    \ = 0;\n    my $even_value_index57 = 0;\n    my $even_value_index58 = 0;\n   \
    \ my $", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $even;\n    my $even_index;\n    my $even_value;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $even\
    \ = $node;\n            $even_index = $i;\n            $even_value = $node;\n\
    \        }\n        $i++;\n    }\n    if ($even) {\n        foreach my $node (@$arr)\
    \ {\n            if ($node % 2 == 0) {\n                if ($node < $even_value)\
    \ {\n                    $even_value = $node;\n                    $even_index\
    \ = $j;\n                }\n                $j++;\n            }\n        }\n\
    \    }\n    if ($even) {\n        push @res, [ $even_value, $even_index ];\n \
    \   } else {\n        push @res, [];\n    }\n    return @res;\n}", "    my @res;\n\
    \    my $min;\n    my $index;\n    my $value;\n    my $even;\n    my $i;\n   \
    \ my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n\
    \    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my\
    \ $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n\
    \    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my\
    \ $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n\
    \    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my\
    \ $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n\
    \    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my\
    \ $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n\
    \    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my\
    \ $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n\
    \    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my\
    \ $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n\
    \    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my\
    \ $h;\n    my $i;\n", "    my $min = -1;\n    my $min_index = 0;\n    my $i =\
    \ 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n        \
    \    if ($min == -1 || $node < $min) {\n                $min = $node;\n      \
    \          $min_index = $i;\n            }\n            $i++;\n        }\n   \
    \ }\n    return [$min, $min_index];\n}", "    my @res;\n    my $min = $arr[0];\n\
    \    my $index = 0;\n    my $i = 0;\n    my $even;\n    foreach my $n (@$arr)\
    \ {\n        $even = $n % 2 == 0;\n        if ($even && $n < $min) {\n       \
    \     $min = $n;\n            $index = $i;\n        }\n        $i++;\n    }\n\
    \    if ($min == 0) {\n        return [];\n    }\n    push(@res, [\"$min\", $index]);\n\
    \    return @res;\n}", "    my $result;\n    my $min;\n    my $index;\n    my\
    \ $value;\n    my $i;\n    my $j;\n    my $k;\n    my $temp;\n    my $temp2;\n\
    \    my $temp3;\n    my $temp4;\n    my $temp5;\n    my $temp6;\n    my $temp7;\n\
    \    my $temp8;\n    my $temp9;\n    my $temp10;\n    my $temp11;\n    my $temp12;\n\
    \    my $temp13;\n    my $temp14;\n    my $temp15;\n    my $temp16;\n    my $temp17;\n\
    \    my $temp18;\n    my $temp19;\n    my $temp20;\n    my $temp21;\n    my $temp22;\n\
    \    my $temp23;\n    my $temp24;\n    my $temp25;\n    my $temp26;\n    my $temp27;\n\
    \    my $temp28;\n    my $temp29;\n    my $temp30;\n    my $temp31;\n    my $temp32;\n\
    \    my $temp33;\n    my $temp34;\n    my $temp35;\n    my $temp36;\n    my $temp37;\n\
    \    my $temp38;\n    my $temp39;\n    my $temp40;\n    my $temp41;\n    my $temp42;\n\
    \    my $temp43;\n    my $temp44;\n    my $temp45;\n    my $temp46;\n    my $temp47;\n\
    \    my $temp48;\n    my $temp49;\n    my $temp50;\n    my $temp51;\n    my $temp52;\n\
    \    my $temp53;\n    my $temp54;\n    my $temp55;\n    my $temp56;\n    my $temp57;\n\
    \    my $temp58;\n    my $temp59;\n    my $temp60;\n    my $temp61;\n    my $temp62;\n\
    \    my $temp63;\n    my $temp64;\n    my $temp65;\n    my $temp66;\n    my $temp67;\n\
    \    my $temp68;\n    my $temp69;\n    my $temp70;\n    my $temp71;\n    my $temp72;\n\
    \    my $temp73;\n    my $temp74;\n    my $temp75;\n    my $temp76;\n    my $temp77;\n\
    \    my $temp78;\n    my $temp79;\n    my $temp80;\n    my $temp81;\n    my $temp82;\n\
    \    my $temp83;\n    my $temp84", "    my @result;\n    my $min;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n\
    \    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my\
    \ $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n\
    \    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n\
    \    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my\
    \ $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n\
    \    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n\
    \    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my\
    \ $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n\
    \    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n\
    \    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my\
    \ $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n\
    \    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n\
    \    my $r;\n    my $s;\n", "    my @res;\n    my $min_even_value;\n    my $min_even_index;\n\
    \    my $index;\n    my $value;\n    my $even_value;\n    my $even_index;\n  \
    \  my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my\
    \ $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n\
    \    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my\
    \ $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n\
    \    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n\
    \    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my\
    \ $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n\
    \    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my\
    \ $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $",
  "    my @res;\n    my $min;\n    my $index;\n    my $value;\n    my $even;\n   \
    \ my $i;\n    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n  \
    \  my $min_value;\n    my $index;\n    my $value;\n    my $even;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $min_index;\n    my $min_value;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $even;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $min_index;\n    my $min_value;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $even;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $min_index;\n    my $min_value;", "    my @res;\n    my $min;\n    my\
    \ $index;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $j;\n    my $k;\n\
    \    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n    my $j;\n\
    \    my $k;\n    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n\
    \    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n    my $index;\n\
    \    my $value;\n    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $j;\n    my $k;\n    my $even;\n    my\
    \ $even_index;\n    my $index;\n    my $value;\n    my $j;\n    my $k;\n    my\
    \ $even;\n    my $even_index;\n    my $index;\n    my $value;\n    my $j;\n  \
    \  my $k;\n    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n\
    \    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n    my $index;\n\
    \    my $value;\n    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $j;\n    my $k;\n    my $even;\n    my\
    \ $even_index;\n    my $index;\n    my $value;\n    my $j;\n    my $k;\n    my\
    \ $even;\n    my $even_index;\n    my $index;\n    my $value;\n    my $j;\n  \
    \  my $k;\n    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n\
    \    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n    my $index;\n\
    \    my $value;\n    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $j;\n    my $k;\n    my $even;\n    my\
    \ $even_index;\n    my $index;\n    my $value;\n    my $j;\n    my $k;\n    my\
    \ $even;\n    my $even_index;\n    my $index;\n    my $value;\n    my $j;\n  \
    \  my $k;\n    my $even;\n    ", "    my $min = $arr[0];\n    my $index = 0;\n\
    \    my $result;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0)\
    \ {\n            $min = $node;\n            $index = $_;\n        }\n    }\n \
    \   if ($min == 0) {\n        return [];\n    }\n    return [ $min, $index ];\n\
    }", "    my $min_even_value;\n    my $min_even_index;\n    my $index;\n    my\
    \ $value;\n    my $even_value;\n    my $even_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $even_value_index;\n    my $even_value_index;\n\
    \    my $even_value_index;\n    my $", "    my @result;\n    my $min;\n    my\
    \ $index;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $", "    my @res;\n    my $min;\n    my $index;\n\
    \    my $value;\n    my $i = 0;\n    my $j = 0;\n    my $even;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    ", "    my $min = $arr[0];\n    my $index = 0;\n    my $even;\n    my $smalest_value;\n\
    \    foreach my $n (@$arr) {\n        if ($n % 2 == 0) {\n            $even =\
    \ $n;\n            $smalest_value = $n;\n        }\n        else {\n         \
    \   if ($smalest_value eq $n) {\n                $smalest_value = $n;\n      \
    \          $index++;\n            }\n        }\n    }\n    if ($smalest_value\
    \ eq $even) {\n        return [$smalest_value, $index];\n    }\n    else {\n \
    \       return [];\n    }\n}", "    my @res;\n    my $min_even_val = 0;\n    my\
    \ $min_even_val_index = 0;\n    my $min_even_val_index2 = 0;\n    my $min_even_val_index3\
    \ = 0;\n    my $min_even_val_index4 = 0;\n    my $min_even_val_index5 = 0;\n \
    \   my $min_even_val_index6 = 0;\n    my $min_even_val_index7 = 0;\n    my $min_even_val_index8\
    \ = 0;\n    my $min_even_val_index9 = 0;\n    my $min_even_val_index10 = 0;\n\
    \    my $min_even_val_index11 = 0;\n    my $min_even_val_index12 = 0;\n    my\
    \ $min_even_val_index13 = 0;\n    my $min_even_val_index14 = 0;\n    my $min_even_val_index15\
    \ = 0;\n    my $min_even_val_index16 = 0;\n    my $min_even_val_index17 = 0;\n\
    \    my $min_even_val_index18 = 0;\n    my $min_even_val_index19 = 0;\n    my\
    \ $min_even_val_index20 = 0;\n    my $min_even_val_index21 = 0;\n    my $min_even_val_index22\
    \ = 0;\n    my $min_even_val_index23 = 0;\n    my $min_even_val_index24 = 0;\n\
    \    my $min_even_val_index25 = 0;\n    my $min_even_val_index26 = 0;\n    my\
    \ $min_even_val_index27 = 0;\n    my $min_even_val_index28 = 0;\n    my $min_even_val_index29\
    \ = 0;\n    my $min_even_val_index30 = 0;\n    my $min_even_val_index31 = 0;\n\
    \    my $min_even_val_index32 = 0;\n    my $min_even_val_index33 = 0;\n    my\
    \ $min_even_val_index34 = 0;\n    my $min_even_val_index35 = 0;\n    my $min_even_val_index36\
    \ = 0;\n    my $min_even_val_index37 = 0;\n    my $min_even_val_index38 = 0;\n\
    \    my $min_even_val_index39 = 0;\n    my $min_even_val_index40 = 0;\n    my\
    \ $min_even_val_index41 = 0;\n    my $min_even_val_index42 = 0;\n    my $min_even_val_index43\
    \ = 0;\n    my $min_even_val_index44 = 0;\n    my $min_even_val_index45 = 0;\n\
    \    my $min_even_val_index46 = 0;\n    my $min_even_val_index47 = 0;\n    my\
    \ $min_even_val_index48 = 0;\n    my $min_even_val_index49 = 0;\n    my $min_even_val_index50\
    \ = 0;\n    my $min_even_", "    my @res;\n    my $min;\n    my $index;\n    my\
    \ $value;\n    my $i = 0;\n    my $j = 0;\n    my $even;\n    my $even_index;\n\
    \    my $even_value;\n    foreach my $val (@$arr) {\n        if ($val % 2 == 0)\
    \ {\n            $even = $val;\n            $even_index = $i;\n            $even_value\
    \ = $val;\n        }\n        $i++;\n    }\n    if ($even) {\n        foreach\
    \ my $val (@$arr) {\n            if ($val % 2 == 0) {\n                if ($val\
    \ < $even) {\n                    $even = $val;\n                    $even_index\
    \ = $j;\n                    $even_value = $val;\n                }\n        \
    \        $j++;\n            }\n        }\n    }\n    if ($even) {\n        foreach\
    \ my $val (@$arr) {\n            if ($val % 2 == 0) {\n                if ($val\
    \ < $even) {\n                    $even = $val;\n                    $even_index\
    \ = $j;\n                    $even_value = $val;\n                }\n        \
    \        $j++;\n            }\n        }\n    }\n    if ($even) {\n        foreach\
    \ my $val (@$arr) {\n            if ($val % 2 == 0) {\n                if ($val\
    \ < $even) {\n                    $even = $val;\n                    $even_index\
    \ = $j;\n                    $even_value = $val;\n                }\n        \
    \        $j++;\n            }\n        }\n    }\n    if ($even) {\n        foreach\
    \ my $val (@$arr) {\n            if ($val % 2 == 0) {\n                if ($val\
    \ < $even) {\n                    $even = $val;\n                    $even_index\
    \ = $j;\n                    $even_value = $val;\n                }\n        \
    \        $j++;\n            }\n        }\n    }\n    if ($even) {\n        foreach\
    \ my $val (@$arr) {\n            if ($val % 2 == 0) {\n                if ($val\
    \ < $even) {\n                    $even = $val;\n                    $even_index\
    \ = $j;\n                    $even_value = $val;\n                }\n        \
    \        $j++;\n            }\n        }\n    }\n    if ($even) {\n        foreach\
    \ my $val (@$arr) {\n            if ($val % 2 == 0) {\n                if ($val\
    \ < $even) {\n                    $even = $val;\n                    $even_index\
    \ = $j;\n                    $even_value = $val;\n                }\n        \
    \        $j++;\n            }\n        }\n    }\n    if ($even) {\n        foreach\
    \ my $val (@$arr) {\n            if ($val % 2 == 0) {\n                if ($val\
    \ < $even) {\n                    $even = $val;\n                    $even_index\
    \ = $", "    my $min = $arr[0];\n    my $index = 0;\n    my $even;\n    my $smalest_value;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 != 0) {\n            $even\
    \ = 0;\n        } else {\n            $even = 1;\n        }\n        if ($even\
    \ < $min) {\n            $min = $even;\n            $smalest_value = $node;\n\
    \            $index = $node - 1;\n        }\n    }\n    return $smalest_value,\
    \ $index;\n}", "    my $min = $arr->[0];\n    my $index = 0;\n    my $found =\
    \ 0;\n    foreach my $i (0 .. $#{$arr}) {\n        if ($arr->[$i] % 2 == 0) {\n\
    \            $found = 1;\n            $min = $arr->[$i];\n            $index =\
    \ $i;\n        }\n    }\n    return $found ? [ $min, $index ] : [];\n}", "   \
    \ my $min_value = $arr[0];\n    my $min_index = 0;\n    my $index = 0;\n    my\
    \ $even_value = 0;\n    foreach my $num (@$arr) {\n        if ($num % 2 == 0)\
    \ {\n            $even_value = $num;\n        }\n        if ($num < $min_value)\
    \ {\n            $min_value = $num;\n            $min_index = $index;\n      \
    \  }\n        $index++;\n    }\n    if ($even_value == 0) {\n        return [];\n\
    \    }\n    return [ $even_value, $min_index ];\n}", "    my @res;\n    my $min;\n\
    \    my $index;\n    my $value;\n    my $i = 0;\n    my $j = 0;\n    my $even;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_value_index;\n    my $even_value_index2;\n\
    \    my $even_value_index3;\n    my $even_value_index4;\n    my $even_value_index5;\n\
    \    my $even_value_index6;\n    my $even_value_index7;\n    my $even_value_index8;\n\
    \    my $even_value_index9;\n    my $even_value_index10;\n    my $even_value_index11;\n\
    \    my $even_value_index12;\n    my $even_value_index13;\n    my $even_value_index14;\n\
    \    my $even_value_index15;\n    my $even_value_index16;\n    my $even_value_index17;\n\
    \    my $even_value_index18;\n    my $even_value_index19;\n    my $even_value_index20;\n\
    \    my $even_value_index21;\n    my $even_value_index22;\n    my $even_value_index23;\n\
    \    my $even_value_index24;\n    my $even_value_index25;\n    my $even_value_index26;\n\
    \    my $even_value_index27;\n    my $even_value_index28;\n    my $even_value_index29;\n\
    \    my $even_value_index30;\n    my $even_value_index31;\n    my $even_value_index32;\n\
    \    my $even_value_index33;\n    my $even_value_index34;\n    my $even_value_index35;\n\
    \    my $even_value_index36;\n    my $even_value_index37;\n    my $even_value_index38;\n\
    \    my $even_value_index39;\n    my $even_value_index40;\n    my $even_value_index41;\n\
    \    my $even_value_index42;\n    my $even_value_index43;\n    my $even_value_index44;\n\
    \    my $even_value_index45;\n    my $even_value_index46;\n    my $even_value_index47;\n\
    \    my $even_value_index48;\n    my $even_value_index49;\n    my $even_value_index50;\n\
    \    my $even_value_index51;\n    my $even_value_index52;\n    my $even_value_index53;\n\
    \    my $even_value_index54;\n    my $even_value_index55;\n    my $even_value_index56;\n\
    \    my $even_value_index57;\n    my $even_value_index58;\n    my $even_value_index59;\n\
    \    my $even_value_index60;\n    my $even_value_index61;\n    ", "    my @result;\n\
    \    my $min;\n    my $index;\n    my $value;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $even;", "    my @result;\n    my $min;\n    my $index;\n    my $value;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $even;\n    foreach my $node (@$arr) {\n\
    \        $i++;\n        if ($node % 2 == 0) {\n            $even = $node;\n  \
    \      }\n    }\n    if ($even) {\n        $min = $even;\n        $index = 0;\n\
    \    }\n    else {\n        $min = $i;\n        $index = 1;\n    }\n    foreach\
    \ my $node (@$arr) {\n        if ($node == $min) {\n            $j++;\n      \
    \      if ($j == $index) {\n                push(@result, $node);\n          \
    \  }\n        }\n    }\n    if (@result == 0) {\n        return [];\n    }\n \
    \   else {\n        return @result;\n    }\n}", "    my $min_value = $arr[0];\n\
    \    my $min_idx = 0;\n    my $max_idx = 0;\n    my $max_value = 0;\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $even = 0;\n    my $even_idx =\
    \ 0;\n    my $even_value = 0;\n    my $even_idx2 = 0;\n    my $even_value2 = 0;\n\
    \    my $even_idx3 = 0;\n    my $even_value3 = 0;\n    my $even_idx4 = 0;\n  \
    \  my $even_value4 = 0;\n    my $even_idx5 = 0;\n    my $even_value5 = 0;\n  \
    \  my $even_idx6 = 0;\n    my $even_value6 = 0;\n    my $even_idx7 = 0;\n    my\
    \ $even_value7 = 0;\n    my $even_idx8 = 0;\n    my $even_value8 = 0;\n    my\
    \ $even_idx9 = 0;\n    my $even_value9 = 0;\n    my $even_idx10 = 0;\n    my $even_value10\
    \ = 0;\n    my $even_idx11 = 0;\n    my $even_value11 = 0;\n    my $even_idx12\
    \ = 0;\n    my $even_value12 = 0;\n    my $even_idx13 = 0;\n    my $even_value13\
    \ = 0;\n    my $even_idx14 = 0;\n    my $even_value14 = 0;\n    my $even_idx15\
    \ = 0;\n    my $even_value15 = 0;\n    my $even_idx16 = 0;\n    my $even_value16\
    \ = 0;\n    my $even_idx17 = 0;\n    my $even_value17 = 0;\n    my $even_idx18\
    \ = 0;\n    my $even_value18 = 0;\n    my $even_idx19 = 0;\n    my $even_value19\
    \ = 0;\n    my $even_idx20 = 0;\n    my $even_value20 = 0;\n    my $even_idx21\
    \ = 0;\n    my $even_value21 = 0;\n    my $even_idx22 = 0;\n    my $even_value22\
    \ = 0;\n    my $even_idx23 = 0;\n    my $even_value23 = 0;\n    my $even_idx24\
    \ = 0;\n    my $even_value24 = 0;\n    my $even_idx25 = 0;\n    my $even_value25\
    \ = 0;\n    my $even_idx26 = 0;\n    my $even_value26 = 0;\n    my $even_idx27\
    \ = 0;\n    my $even_value27 = 0;\n    my $even_idx28 = 0;\n    my $even_value28\
    \ = 0;\n    my $even_idx29 = 0;\n    my $even_value29 = 0;\n    my $even_idx30\
    \ = 0;\n    my $even_value30 = 0;\n    my $even_idx31 = 0;\n    my $even_value31\
    \ = 0;\n    my $even_idx32 = 0;\n    my $even_value32 = 0;\n    my $even_idx33\
    \ = 0;\n    my $even_value33 = 0;\n    my $even_idx34 = 0;\n    my $even_value34\
    \ = 0;\n    ", "    my $min_even_value = 0;\n    my $min_even_index = 0;\n   \
    \ my $index = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0)\
    \ {\n            if ($node < $min_even_value) {\n                $min_even_value\
    \ = $node;\n                $min_even_index = $index;\n            }\n       \
    \     $index++;\n        }\n    }\n    return $min_even_index;\n}", "    my @res;\n\
    \    my $min;\n    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even", "    my $min_value = $arr[0];\n    my $min_idx = 0;\n    my $min_even_value\
    \ = 0;\n    my $even_value = 0;\n    my $idx = 0;\n    my $even_idx = 0;\n   \
    \ my $even_value_count = 0;\n    my $even_value_index = 0;\n    my $even_value_index2\
    \ = 0;\n    my $even_value_index3 = 0;\n    my $even_value_index4 = 0;\n    my\
    \ $even_value_index5 = 0;\n    my $even_value_index6 = 0;\n    my $even_value_index7\
    \ = 0;\n    my $even_value_index8 = 0;\n    my $even_value_index9 = 0;\n    my\
    \ $even_value_index10 = 0;\n    my $even_value_index11 = 0;\n    my $even_value_index12\
    \ = 0;\n    my $even_value_index13 = 0;\n    my $even_value_index14 = 0;\n   \
    \ my $even_value_index15 = 0;\n    my $even_value_index16 = 0;\n    my $even_value_index17\
    \ = 0;\n    my $even_value_index18 = 0;\n    my $even_value_index19 = 0;\n   \
    \ my $even_value_index20 = 0;\n    my $even_value_index21 = 0;\n    my $even_value_index22\
    \ = 0;\n    my $even_value_index23 = 0;\n    my $even_value_index24 = 0;\n   \
    \ my $even_value_index25 = 0;\n    my $even_value_index26 = 0;\n    my $even_value_index27\
    \ = 0;\n    my $even_value_index28 = 0;\n    my $even_value_index29 = 0;\n   \
    \ my $even_value_index30 = 0;\n    my $even_value_index31 = 0;\n    my $even_value_index32\
    \ = 0;\n    my $even_value_index33 = 0;\n    my $even_value_index34 = 0;\n   \
    \ my $even_value_index35 = 0;\n    my $even_value_index36 = 0;\n    my $even_value_index37\
    \ = 0;\n    my $even_value_index38 = 0;\n    my $even_value_index39 = 0;\n   \
    \ my $even_value_index40 = 0;\n    my $even_value_index41 = 0;\n    my $even_value_index42\
    \ = 0;\n    my $even_value_index43 = 0;\n    my $even_value_index44 = 0;\n   \
    \ my $even_value_index45 = 0;\n    my $even_value_index46 = 0;\n    my $even_value_index47\
    \ = 0;\n    my $even_value_index48 = 0;\n    my $even_value_index49 = 0;\n   \
    \ my $even_value_index50 = 0;\n    my $even_value_index51 = 0;\n    my $even_value_index52\
    \ = 0;\n    my $even_value_index53 = 0;\n    my $even_value_index54 = 0;\n   \
    \ my $even_value_index55 = 0;\n    my $even_value_index56 = 0;\n    my $even_value_index57\
    \ = 0;\n    my $even_value_index58 = 0;\n    my $even_value_index59 = 0;\n", " \
    \   my $min = 0;\n    my $min_index = 0;\n    my $smalest_value;\n    foreach\
    \ my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($node < $smalest_value)\
    \ {\n                $smalest_value = $node;\n                $min_index = $min;\n\
    \            }\n            $min = $node;\n        }\n    }\n    return $smalest_value,\
    \ $min_index;\n}", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;\n    my $value;\n    my $min_value;\n    my $index;\n    my $value;\n\
    \    my $min_value;\n    my $index;\n    my $value;\n    my $min_value;\n    my\
    \ $index;", "    my $min = -1;\n    my $min_index;\n    my $index;\n    my $value;\n\
    \    my $even;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n\
    \            $even = $node;\n            $min = $node;\n            $min_index\
    \ = $index;\n        }\n        elsif ($node < $min) {\n            $min = $node;\n\
    \            $min_index = $index;\n        }\n        $index++;\n    }\n    return\
    \ $even if ($min != -1);\n    return [];\n}", "    my @res;\n    my $min;\n  \
    \  my $index;\n    my $value;\n    my $i = 0;\n    my $j = 0;\n    my $even;\n\
    \    my $even_index;\n    foreach my $node (@$arr) {\n        $value = $node;\n\
    \        $even = $value % 2;\n        $even_index = $i;\n        $min = $value;\n\
    \        $index = $i;\n        $i++;\n        if ($even != 0) {\n            if\
    \ ($min > $value) {\n                $min = $value;\n                $index =\
    \ $i;\n            }\n        }\n    }\n    if ($min == 0) {\n        return [];\n\
    \    }\n    foreach my $node (@$arr) {\n        $value = $node;\n        $even\
    \ = $value % 2;\n        $even_index = $i;\n        if ($even != 0) {\n      \
    \      if ($min > $value) {\n                $min = $value;\n                $index\
    \ = $i;\n            }\n        }\n    }\n    if ($min == 0) {\n        return\
    \ [];\n    }\n    push(@res, [\"$min\", \"$index\"]);\n    return @res;\n}", " \
    \   my @res;\n    my $min = $arr[0];\n    my $index = 0;\n    my $found = 0;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $found\
    \ = 1;\n            if ($node < $min) {\n                $min = $node;\n     \
    \           $index = $node;\n            }\n        }\n    }\n    if ($found ==\
    \ 1) {\n        push(@res, [\"$min\", $index]);\n    }\n    return @res;\n}",
  "    my $min = -1;\n    my $min_index;\n    my $index;\n    my $value;\n    my $even;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $even\
    \ = $node;\n        }\n        else {\n            $value = $node;\n         \
    \   if ($min == -1 || $value < $min) {\n                $min = $value;\n     \
    \           $min_index = $index;\n            }\n        }\n        $index++;\n\
    \    }\n    return $even if ($min != -1);\n    return [];\n}", "    my @result;\n\
    \    my $min;\n    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even;\n    my $temp;\n    my $found;\n    my $min_value;\n    my\
    \ $min_index;\n    my $found;\n    my $min_value;\n    my $min_index;\n    my\
    \ $even;\n    my $temp;\n    my $found;\n    my $min_value;\n    my $min_index;\n\
    \    my $found;\n    my $min_value;\n    my $min_index;\n    my $even;\n    my\
    \ $temp;\n    my $found;\n    my $min_value;\n    my $min_index;\n    my $found;\n\
    \    my $min_value;\n    my $min_index;\n    my $even;\n    my $temp;\n    my\
    \ $found;\n    my $min_value;\n    my $min_index;\n    my $found;\n    my $min_value;\n\
    \    my $min_index;\n    my $even;\n    my $temp;\n    my $found;\n    my $min_value;\n\
    \    my $min_index;\n    my $found;\n    my $min_value;\n    my $min_index;\n\
    \    my $even;\n    my $temp;\n    my $found;\n    my $min_value;\n    my $min_index;\n\
    \    my $found;\n    my $min_value;\n    my $min_index;\n    my $even;\n    my\
    \ $temp;\n    my $found;\n    my $min_value;\n    my $min_index;\n    my $found;\n\
    \    my $min_value;\n    my $min_index;\n    my $even;\n    my $temp;\n    my\
    \ $found;\n    my $min_value;\n    my $min_index;\n    my $found;\n    my $min_value;\n\
    \    my $min_index;\n    my $even;\n    my $temp;\n    my $found;\n    my $min_value;\n\
    \    my $min_index;\n    my $found;\n    my $min_value;\n    my $min_index;\n\
    \    my $even;\n    my $temp;\n    my $found;\n    my $min_value;\n    my $min_index;\n\
    \    my $found;\n    my $min_value;\n    my $min_index;\n    my $even;\n    my\
    \ $temp;\n    my $found;\n    my $min_value;\n    my $min_index;\n    my $found;\n\
    \    my $min_value;\n    my $min_index;\n    my $even;\n    my $temp;\n    my\
    \ $found;\n    my $min_value;\n    my $min_index;\n    my $found;\n    my $min_value;\n\
    \    my $min_index;\n    my $", "    my @res;\n    my $min;\n    my $index;\n\
    \    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $temp;\n    my $temp2;\n    my\
    \ $temp3;\n    my $temp4;\n    my $temp5;\n    my $temp6;\n    my $temp7;\n  \
    \  my $temp8;\n    my $temp9;\n    my $temp10;\n    my $temp11;\n    my $temp12;\n\
    \    my $temp13;\n    my $temp14;\n    my $temp15;\n    my $temp16;\n    my $temp17;\n\
    \    my $temp18;\n    my $temp19;\n    my $temp20;\n    my $temp21;\n    my $temp22;\n\
    \    my $temp23;\n    my $temp24;\n    my $temp25;\n    my $temp26;\n    my $temp27;\n\
    \    my $temp28;\n    my $temp29;\n    my $temp30;\n    my $temp31;\n    my $temp32;\n\
    \    my $temp33;\n    my $temp34;\n    my $temp35;\n    my $temp36;\n    my $temp37;\n\
    \    my $temp38;\n    my $temp39;\n    my $temp40;\n    my $temp41;\n    my $temp42;\n\
    \    my $temp43;\n    my $temp44;\n    my $temp45;\n    my $temp46;\n    my $temp47;\n\
    \    my $temp48;\n    my $temp49;\n    my $temp50;\n    my $temp51;\n    my $temp52;\n\
    \    my $temp53;\n    my $temp54;\n    my $temp55;\n    my $temp56;\n    my $temp57;\n\
    \    my $temp58;\n    my $temp59;\n    my $temp60;\n    my $temp61;\n    my $temp62;\n\
    \    my $temp63;\n    my $temp64;\n    my $temp65;\n    my $temp66;\n    my $temp67;\n\
    \    my $temp68;\n    my $temp69;\n    my $temp70;\n    my $temp71;\n    my $temp72;\n\
    \    my $temp73;\n    my $temp74;\n    my $temp75;\n    my $temp76;\n    my $temp77;\n\
    \    my $temp78;\n    my $temp79;\n    my $temp80;\n    ", "    my @res;\n   \
    \ my $min;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n  \
    \  my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n\
    \    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my\
    \ $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n\
    \    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n   \
    \ my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n\
    \    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my\
    \ $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n\
    \    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n   \
    \ my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n\
    \    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my\
    \ $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n\
    \    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n   \
    \ my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n\
    \    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my\
    \ $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n\
    \    my $odds;\n    my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n   \
    \ my $odd;\n    my $odds;\n    my $odd;\n    my $odds;\n    ", "    my @res;\n\
    \    my $min = 0;\n    my $min_index = 0;\n    my $smalest_value;\n    foreach\
    \ my $val (@$arr) {\n        if ($val % 2 == 0) {\n            $smalest_value\
    \ = $val;\n            $min_index = $min;\n        }\n        elsif ($val < $smalest_value)\
    \ {\n            $smalest_value = $val;\n            $min_index = $min;\n    \
    \    }\n        elsif ($val == $smalest_value) {\n            $min_index++;\n\
    \        }\n        $min++;\n    }\n    if ($min_index == 0) {\n        return\
    \ [];\n    }\n    elsif ($min_index == 1) {\n        return [$smalest_value, $min_index];\n\
    \    }\n    else {\n        return [$smalest_value, $min_index];\n    }\n}", " \
    \   my $min = -1;\n    my $min_index;\n    my $smalest_value;\n    foreach my\
    \ $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($min == -1)\
    \ {\n                $min = $node;\n                $min_index = $node;\n    \
    \            $smalest_value = $node;\n            }\n            elsif ($node\
    \ < $smalest_value) {\n                $min = $node;\n                $min_index\
    \ = $node;\n                $smalest_value = $node;\n            }\n        }\n\
    \    }\n    return $min == -1 ? [] : [ $smalest_value, $min_index ];\n}", "  \
    \  my $min = -1;\n    my $min_index;\n    my $i;\n    for ($i = 0; $i < @$arr;\
    \ $i++) {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min == -1) {\n\
    \                $min = $arr->[$i];\n                $min_index = $i;\n      \
    \      }\n            elsif ($min > $arr->[$i]) {\n                $min = $arr->[$i];\n\
    \                $min_index = $i;\n            }\n        }\n    }\n    if ($min\
    \ == -1) {\n        return [];\n    }\n    return [ $min, $min_index ];\n}", " \
    \   my @result;\n    my $min;\n    my $index;\n    my $value;\n    my $i;\n  \
    \  my $j;\n    my $k;\n    my $even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $", "    my\
    \ $min = $arr->[0];\n    my $index = 0;\n    my $found = 0;\n    my $i = 0;\n\
    \    foreach my $val (@$arr) {\n        if ($val % 2 == 0) {\n            $found\
    \ = 1;\n            $min = $val;\n            $index = $i;\n        }\n      \
    \  $i++;\n    }\n    return $found ? [$min, $index] : [];\n}", "    my @res;\n\
    \    my $min;\n    my $index;\n    my $value;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $even;\n    my $even_index;\n    my $even_value;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    ", "    my $min = -1;\n \
    \   my $min_index;\n    my $smalest_value;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $result;\n    my $count;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_count;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_count;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_count;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_count;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_count;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_count;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_count;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_count;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_count;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_count;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_count;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_count;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_count;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_count;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_count;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_count;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_count;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_count;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_count;\n    my $even_index;\n\
    \    my $even_value", "    my $min = $arr[0];\n    my $index = 0;\n    my $found\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $temp;\n    my\
    \ $count = 0;\n    my $even = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_indexes = [];\n    my $even_values = [];\n    my $even_indexes_temp\
    \ = [];\n    my $even_values_temp = [];\n    my $even_indexes_temp2 = [];\n  \
    \  my $even_values_temp2 = [];\n    my $even_indexes_temp3 = [];\n    my $even_values_temp3\
    \ = [];\n    my $even_indexes_temp4 = [];\n    my $even_values_temp4 = [];\n \
    \   my $even_indexes_temp5 = [];\n    my $even_values_temp5 = [];\n    my $even_indexes_temp6\
    \ = [];\n    my $even_values_temp6 = [];\n    my $even_indexes_temp7 = [];\n \
    \   my $even_values_temp7 = [];\n    my $even_indexes_temp8 = [];\n    my $even_values_temp8\
    \ = [];\n    my $even_indexes_temp9 = [];\n    my $even_values_temp9 = [];\n \
    \   my $even_indexes_temp10 = [];\n    my $even_values_temp10 = [];\n    my $even_indexes_temp11\
    \ = [];\n    my $even_values_temp11 = [];\n    my $even_indexes_temp12 = [];\n\
    \    my $even_values_temp12 = [];\n    my $even_indexes_temp13 = [];\n    my $even_values_temp13\
    \ = [];\n    my $even_indexes_temp14 = [];\n    my $even_values_temp14 = [];\n\
    \    my $even_indexes_temp15 = [];\n    my $even_values_temp15 = [];\n    my $even_indexes_temp16\
    \ = [];\n    my $even_values_temp16 = [];\n    my $even_indexes_temp17 = [];\n\
    \    my $even_values_temp17 = [];\n    my $even_indexes_temp18 = [];\n    my $even_values_temp18\
    \ = [];\n    my $even_indexes_temp19 = [];\n    my $even_values_temp19 = [];\n\
    \    my $even_indexes_temp20 = [];\n    my $even_values_temp20 = [];\n    my $even_indexes_temp21\
    \ = [];\n    my $even_values_temp21 = [];\n    my $even_indexes_temp22 = [];\n\
    \    my $even_values_temp22 = [];\n    my $even_indexes_temp23 = [];\n    my $even_values_temp23\
    \ = [];\n    my $even_indexes_temp24 = [];\n    my $even_values_temp24 = [];\n\
    \    my $even_indexes_temp25 = [];\n    ", "    my $min;\n    my $index;\n   \
    \ my $even;\n    my $smalest_value;\n    my @result;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $temp;\n    my $count;\n    my $even_value;\n    my $even_index;\n\
    \    my $temp_value;\n    my $temp_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min;\n    my $temp_min_index;\n    my $temp_even;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $temp_min_index;\n    my $temp_even_value;\n    my $temp_even_index;\n\
    \    my $", "    my @result;\n    my $min;\n    my $index;\n    my $value;\n \
    \   my $i = 0;\n    my $j = 0;\n    my $even;\n    my $even_index;\n    my $even_value;\n\
    \    foreach my $node (@$arr) {\n        $i++;\n        $j++;\n        $value\
    \ = $node;\n        $even = 0;\n        $even_index = 0;\n        $even_value\
    \ = 0;\n        foreach my $node (@$arr) {\n            $j++;\n            if\
    \ ($node % 2 == 0) {\n                $even = 1;\n                $even_index\
    \ = $j;\n                $even_value = $node;\n            }\n        }\n    \
    \    if ($even) {\n            $min = $even_value;\n            $index = $even_index;\n\
    \        }\n        else {\n            $min = $value;\n            $index = $i;\n\
    \        }\n        push(@result, $min, $index);\n    }\n    return @result;\n\
    }", "    my @res;\n    my $min_even_val = undef;\n    my $min_even_pos = undef;\n\
    \    my $min_even_pos2 = undef;\n    my $min_even_pos3 = undef;\n    my $min_even_pos4\
    \ = undef;\n    my $min_even_pos5 = undef;\n    my $min_even_pos6 = undef;\n \
    \   my $min_even_pos7 = undef;\n    my $min_even_pos8 = undef;\n    my $min_even_pos9\
    \ = undef;\n    my $min_even_pos10 = undef;\n    my $min_even_pos11 = undef;\n\
    \    my $min_even_pos12 = undef;\n    my $min_even_pos13 = undef;\n    my $min_even_pos14\
    \ = undef;\n    my $min_even_pos15 = undef;\n    my $min_even_pos16 = undef;\n\
    \    my $min_even_pos17 = undef;\n    my $min_even_pos18 = undef;\n    my $min_even_pos19\
    \ = undef;\n    my $min_even_pos20 = undef;\n    my $min_even_pos21 = undef;\n\
    \    my $min_even_pos22 = undef;\n    my $min_even_pos23 = undef;\n    my $min_even_pos24\
    \ = undef;\n    my $min_even_pos25 = undef;\n    my $min_even_pos26 = undef;\n\
    \    my $min_even_pos27 = undef;\n    my $min_even_pos28 = undef;\n    my $min_even_pos29\
    \ = undef;\n    my $min_even_pos30 = undef;\n    my $min_even_pos31 = undef;\n\
    \    my $min_even_pos32 = undef;\n    my $min_even_pos33 = undef;\n    my $min_even_pos34\
    \ = undef;\n    my $min_even_pos35 = undef;\n    my $min_even_pos36 = undef;\n\
    \    my $min_even_pos37 = undef;\n    my $min_even_pos38 = undef;\n    my $min_even_pos39\
    \ = undef;\n    my $min_even_pos40 = undef;\n    my $min_even_pos41 = undef;\n\
    \    my $min_even_pos42 = undef;\n    my $min_even_pos4", "    my $min_even_value\
    \ = 0;\n    my $min_even_index = 0;\n    my $smalest_value;\n    my @smalest_value_index;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if\
    \ ($node < $min_even_value) {\n                $min_even_value = $node;\n    \
    \            $min_even_index = $_;\n            }\n            else {\n      \
    \          push @smalest_value_index, $_;\n            }\n        }\n    }\n \
    \   if (@smalest_value_index) {\n        $smalest_value = $smalest_value_index[0];\n\
    \    }\n    else {\n        $smalest_value = undef;\n    }\n    return [ $smalest_value,\
    \ $min_even_index ];\n}", "    my @res;\n    my $min = $arr[0];\n    my $min_index\
    \ = 0;\n    my $index = 0;\n    my $even;\n    foreach my $node (@$arr) {\n  \
    \      if ($node % 2 == 0) {\n            $even = $node;\n        } else {\n \
    \           if ($node < $min) {\n                $min = $node;\n             \
    \   $min_index = $index;\n            }\n            $index++;\n        }\n  \
    \  }\n    if ($min_index == 0) {\n        return [];\n    }\n    push(@res, [\"\
    $min\", $min_index]);\n    return @res;\n}", "    my @res;\n    my $min;\n   \
    \ my $index;\n    my $value;\n    my $i = 0;\n    my $j = 0;\n    my $even;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    ", "    my @res;\n    my $min;\n    my $index;\n\
    \    my $value;\n    my $i = 0;\n    my $j = 0;\n    my $even;\n    my $even_index;\n\
    \    my $even_value;\n    foreach my $node (@$arr) {\n        $i++;\n        $value\
    \ = $node;\n        $even = 0;\n        $even_index = 0;\n        $even_value\
    \ = $value;\n        foreach my $node (@$arr) {\n            $j++;\n         \
    \   if ($node == $value) {\n                $even = 1;\n                $even_index\
    \ = $j;\n                $even_value = $node;\n            }\n        }\n    \
    \    if ($even) {\n            if ($even_index < $min) {\n                $min\
    \ = $even_index;\n            }\n        }\n    }\n    if ($min == 0) {\n    \
    \    return [];\n    }\n    foreach my $node (@$arr) {\n        $i++;\n      \
    \  if ($node == $even_value) {\n            $even_index = $i;\n        }\n   \
    \ }\n    if ($even_index == 0) {\n        return [];\n    }\n    foreach my $node\
    \ (@$arr) {\n        $i++;\n        if ($node == $even_value) {\n            $even_index\
    \ = $i;\n        }\n    }\n    push @res, $even_value;\n    push @res, $even_index;\n\
    \    return @res;\n}", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $min_index;\n    my\
    \ $min_value;\n    my $min_even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    ", "    my $min = -1;\n  \
    \  my $min_index;\n    my $index;\n    my $value;\n    my $even;\n    foreach\
    \ my $node (@$arr) {\n        $value = $node;\n        $index = 0;\n        $even\
    \ = 0;\n        foreach my $i (0 .. $#$arr) {\n            $index++;\n       \
    \     if ($arr->[$i] % 2 == 0) {\n                $even++;\n                if\
    \ ($even > $min) {\n                    $min = $even;\n                    $min_index\
    \ = $i;\n                }\n            }\n        }\n        if ($min == -1)\
    \ {\n            return [];\n        }\n    }\n    return [ $min, $min_index ];\n\
    }", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n    my $index;\n   \
    \ my $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n  \
    \  my $i;\n    my $j;\n    my $k;\n    my $even_index;\n    my $index;\n    my\
    \ $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n  \
    \  my $i;\n    my $j;\n    my $k;\n    my $even_index;\n    my $index;\n    my\
    \ $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n  \
    \  my $i;\n    my $j;\n    my $k;\n    my $even_index;\n    my $index;\n    my\
    \ $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n  \
    \  my $i;\n    my $j;\n    my $k;\n    my $even_index;\n    my $index;\n    my\
    \ $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n  \
    \  my $i;\n    my $j;\n    ", "    my @result;\n    my $min;\n    my $index;\n\
    \    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $temp;\n\
    \    my $found;\n    my $found2;\n    my $found3;\n    my $found4;\n    my $found5;\n\
    \    my $found6;\n    my $found7;\n    my $found8;\n    my $found9;\n    my $found10;\n\
    \    my $found11;\n    my $found12;\n    my $found13;\n    my $found14;\n    my\
    \ $found15;\n    my $found16;\n    my $found17;\n    my $found18;\n    my $found19;\n\
    \    my $found20;\n    my $found21;\n    my $found22;\n    my $found23;\n    my\
    \ $found24;\n    my $found25;\n    my $found26;\n    my $found27;\n    my $found28;\n\
    \    my $found29;\n    my $found30;\n    my $found31;\n    my $found32;\n    my\
    \ $found33;\n    my $found34;\n    my $found35;\n    my $found36;\n    my $found37;\n\
    \    my $found38;\n    my $found39;\n    my $found40;\n    my $found41;\n    my\
    \ $found42;\n    my $found43;\n    my $found44;\n    my $found45;\n    my $found46;\n\
    \    my $found47;\n    my $found48;\n    my $found49;\n    my $found50;\n    my\
    \ $found51;\n    my $found52;\n    my $found53;\n    my $found54;\n    my $found55;\n\
    \    my $found56;\n    my $found57;\n    my $found58;\n    my $found59;\n    my\
    \ $found60;\n    my $found61;\n    my $found62;\n    my $found63;\n    my $found64;\n\
    \    my $found65;\n    my $found66;\n    my $found67;\n    my $found68;\n    my\
    \ $found69;\n    my $found70;\n    my $found71;\n    my $found72;\n    my $found73;\n\
    \    my $found74;\n    my $found75;\n    my $found76;\n    my $found77;\n    my\
    \ $found78;\n    my $found79;\n    my $found80;\n    my $found81;\n    my $found82;\n",
  "    my @result;\n    my $min_even_value;\n    my $min_index;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $even_value;\n    my $index;\n    my $value;\n    foreach\
    \ $i (0 .. $#{$arr}) {\n        $value = $arr->[$i];\n        $even_value = $value\
    \ % 2;\n        $index = $i;\n        for (my $j = $i + 1; $j < $#{$arr}; $j++)\
    \ {\n            $value = $arr->[$j];\n            $even_value = $value % 2;\n\
    \            if ($even_value eq $min_even_value) {\n                $index = $j;\n\
    \            }\n        }\n        if ($even_value eq $min_even_value) {\n   \
    \         $min_even_value = $value;\n            $min_index = $index;\n      \
    \  }\n    }\n    if ($min_even_value eq $min_even_value) {\n        $result =\
    \ [$min_even_value, $min_index];\n    } else {\n        $result = [];\n    }\n\
    \    return @result;\n}", "    my @res;\n    my $min;\n    my $index;\n    my\
    \ $value;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $min_index;\n    my $min_value;\n    my $even_value;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $index;\n    my $value;\n\
    \    my $index;\n    my $value;\n    my $index;\n    my $value;\n    my $index;\n\
    \    my $value;\n    my $index;\n    my $value;\n    my $index;\n    my $value;\n\
    \    my $index;\n    my $value;\n    my $index;\n    my $value;\n    my $index;\n\
    \    my $value;\n    my $index;\n    my $value;\n    my $index;\n    my $value;\n\
    \    my $index;\n    my $value;\n    my $index;\n    my $value;\n    my $index;\n\
    \    my $value;\n    my $index;\n    my $value;\n    my $index;\n    my $value;\n\
    \    my $index;\n    my $value;\n    my $index;\n    my $value;\n    my $index;\n\
    \    my $value;\n    my $index;\n    my $value;\n    my $index;\n    my $value;\n\
    \    my $index;\n    my $value;\n    my $index;\n    my $value;\n    my $index;\n\
    \    my $value;\n    my $index;\n    my $value;\n    my $index;\n    my $value;\n\
    \    my $index;\n    my $value;\n    my $index;\n    my $value;\n    my $index;\n\
    \    my $value;\n    my $index;\n    my $value;\n    my $index;\n    my $value;\n\
    \    my $index;\n    my $value;\n    my $index;\n    my $value;\n    my $index;\n\
    \    my $value;\n    my $index;\n    my $value;\n    my $index;\n    my $value;\n\
    \    my $index;\n    my $value;\n    my $index;\n    my $value;\n    my $index;\n\
    \    my $value;\n    my $index;\n    my $value;\n    my $index;\n    my $value;\n\
    \    my $index;\n    my $value;\n    my $index;\n    my $value;\n    my $index;\n\
    \    my $value;\n    my $index;\n    my $value;\n    my $index;\n    my $value;\n\
    \    my $index;\n    my $value;\n    my $index;\n    my $value;\n    my $index;\n\
    \    my $value;\n    my $index;\n    my $value;\n    my $index;\n    my $value;\n\
    \    my $index;\n    my $value;\n    my $index;\n    my $value;\n    my $index;\n\
    \    my $value;\n    my $index;\n    my $", "    my @result;\n    my $min;\n \
    \   my $index;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $even;",
  "    my $min_value = $arr[0];\n    my $min_idx = 0;\n    my $i = 0;\n    my $j =\
    \ 0;\n    my $k = 0;\n    my $found = 0;\n    my $even = 0;\n    my $even_idx\
    \ = 0;\n    my $even_value = 0;\n    my $even_idx2 = 0;\n    my $even_value2 =\
    \ 0;\n    my $even_idx3 = 0;\n    my $even_value3 = 0;\n    my $even_idx4 = 0;\n\
    \    my $even_value4 = 0;\n    my $even_idx5 = 0;\n    my $even_value5 = 0;\n\
    \    my $even_idx6 = 0;\n    my $even_value6 = 0;\n    my $even_idx7 = 0;\n  \
    \  my $even_value7 = 0;\n    my $even_idx8 = 0;\n    my $even_value8 = 0;\n  \
    \  my $even_idx9 = 0;\n    my $even_value9 = 0;\n    my $even_idx10 = 0;\n   \
    \ my $even_value10 = 0;\n    my $even_idx11 = 0;\n    my $even_value11 = 0;\n\
    \    my $even_idx12 = 0;\n    my $even_value12 = 0;\n    my $even_idx13 = 0;\n\
    \    my $even_value13 = 0;\n    my $even_idx14 = 0;\n    my $even_value14 = 0;\n\
    \    my $even_idx15 = 0;\n    my $even_value15 = 0;\n    my $even_idx16 = 0;\n\
    \    my $even_value16 = 0;\n    my $even_idx17 = 0;\n    my $even_value17 = 0;\n\
    \    my $even_idx18 = 0;\n    my $even_value18 = 0;\n    my $even_idx19 = 0;\n\
    \    my $even_value19 = 0;\n    my $even_idx20 = 0;\n    my $even_value20 = 0;\n\
    \    my $even_idx21 = 0;\n    my $even_value21 = 0;\n    my $even_idx22 = 0;\n\
    \    my $even_value22 = 0;\n    my $even_idx23 = 0;\n    my $even_value23 = 0;\n\
    \    my $even_idx24 = 0;\n    my $even_value24 = 0;\n    my $even_idx25 = 0;\n\
    \    my $even_value25 = 0;\n    my $even_idx26 = 0;\n    my $even_value26 = 0;\n\
    \    my $even_idx27 = 0;\n    my $even_value27 = 0;\n    my $even_idx28 = 0;\n\
    \    my $even_value28 = 0;\n    my $even_idx29 = 0;\n    my $even_value29 = 0;\n\
    \    my $even_idx30 = 0;\n    my $even_value30 = 0;\n    my $even_idx31 = 0;\n\
    \    my $even_value31 = 0;\n    my $even_idx32 = 0;\n    my $even_value32 = 0;\n\
    \    my $even_idx33 = 0;\n    my $even_value33 = 0;\n    my $even_idx34 = 0;\n\
    \    my $even_value34 = 0;\n    my $even_idx35 = 0;\n    ", "    my @res;\n  \
    \  my $min_even_value;\n    my $min_even_index;\n    my $index;\n    my $value;\n\
    \    my $even_value;\n    my $even_index;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my\
    \ $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n\
    \    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my\
    \ $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n\
    \    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my\
    \ $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my\
    \ $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my\
    \ $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n\
    \    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my\
    \ $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n\
    \    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $", "    my @res;\n    my $min;\n    my\
    \ $index;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $found;\n\
    \    my $min_index;\n    my $min_value;\n    my $found;\n    my $index;\n    my\
    \ $value;\n    my $i;\n    my $j;\n    my $k;\n    my $found;\n    my $min_index;\n\
    \    my $min_value;\n    my $found;\n    my $index;\n    my $value;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $found;\n    my $min_index;\n    my $min_value;\n\
    \    my $found;\n    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $found;\n    my $min_index;\n    my $min_value;\n    my $found;\n\
    \    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $found;\n\
    \    my $min_index;\n    my $min_value;\n    my $found;\n    my $index;\n    my\
    \ $value;\n    my $i;\n    my $j;\n    my $k;\n    my $found;\n    my $min_index;\n\
    \    my $min_value;\n    my $found;\n    my $index;\n    my $value;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $found;\n    my $min_index;\n    my $min_value;\n\
    \    my $found;\n    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $found;\n    my $min_index;\n    my $min_value;\n    my $found;\n\
    \    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $found;\n\
    \    my $min_index;\n    my $min_value;\n    my $found;\n    my $index;\n    my\
    \ $value;\n    my $i;\n    my $j;\n    my $k;\n    my $found;\n    my $min_index;\n\
    \    my $min_value;\n    my $found;\n    my $index;\n    my $value;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $found;\n    my $min_index;\n    my $min_value;\n\
    \    my $found;\n    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $found;\n    my $min_index;\n    my $min_value;\n    my $found;",
  "    my $min_even_value = -1;\n    my $min_even_index = 0;\n    my $smalest_value;\n\
    \    my @smalest_value_index;\n    foreach my $node (@$arr) {\n        if ($node\
    \ % 2 == 0) {\n            if ($min_even_value == -1 || $node < $min_even_value)\
    \ {\n                $smalest_value = $node;\n                $min_even_value\
    \ = $node;\n                $min_even_index = $_;\n            }\n           \
    \ else {\n                push(@smalest_value_index, $_);\n            }\n   \
    \     }\n    }\n    return ($smalest_value, @smalest_value_index);\n}", "    my\
    \ $min_even_val = 0;\n    my $min_even_val_index = 0;\n    my $min_even_val_index2\
    \ = 0;\n    my $min_even_val_index3 = 0;\n    my $min_even_val_index4 = 0;\n \
    \   my $min_even_val_index5 = 0;\n    my $min_even_val_index6 = 0;\n    my $min_even_val_index7\
    \ = 0;\n    my $min_even_val_index8 = 0;\n    my $min_even_val_index9 = 0;\n \
    \   my $min_even_val_index10 = 0;\n    my $min_even_val_index11 = 0;\n    my $min_even_val_index12\
    \ = 0;\n    my $min_even_val_index13 = 0;\n    my $min_even_val_index14 = 0;\n\
    \    my $min_even_val_index15 = 0;\n    my $min_even_val_index16 = 0;\n    my\
    \ $min_even_val_index17 = 0;\n    my $min_even_val_index18 = 0;\n    my $min_even_val_index19\
    \ = 0;\n    my $min_even_val_index20 = 0;\n    my $min_even_val_index21 = 0;\n\
    \    my $min_even_val_index22 = 0;\n    my $min_even_val_index23 = 0;\n    my\
    \ $min_even_val_index24 = 0;\n    my $min_even_val_index25 = 0;\n    my $min_even_val_index26\
    \ = 0;\n    my $min_even_val_index27 = 0;\n    my $min_even_val_index28 = 0;\n\
    \    my $min_even_val_index29 = 0;\n    my $min_even_val_index30 = 0;\n    my\
    \ $min_even_val_index31 = 0;\n    my $min_even_val_index32 = 0;\n    my $min_even_val_index33\
    \ = 0;\n    my $min_even_val_index34 = 0;\n    my $min_even_val_index35 = 0;\n\
    \    my $min_even_val_index36 = 0;\n    my $min_even_val_index37 = 0;\n    my\
    \ $min_even_val_index38 = 0;\n    my $min_even_val_index39 = 0;\n    my $min_even_val_index40\
    \ = 0;\n    my $min_even_val_index41 = 0;\n    my $min_even_val_index42 = 0;\n\
    \    my $min_even_val_index43 = 0;\n    my $min_even_val_index44 = 0;\n    my\
    \ $min_even_val_index45 = 0;\n    my $min_even_val_index46 = 0;\n    my $min_even_val_index47\
    \ = 0;\n    my $min_even_val_index48 = 0;\n    my $min_even_val_index49 = 0;\n\
    \    my $min_even_val_index50 = 0;\n    my $min_even_val_index51 = 0;", "    my\
    \ @res;\n    my $min = 0;\n    my $min_index = 0;\n    my $smalest_value;\n  \
    \  my $smalest_index;\n    foreach my $i (0 .. $#{$arr}) {\n        my $val =\
    \ $arr->[$i];\n        if ($val % 2 == 0) {\n            $smalest_value = $val;\n\
    \            $smalest_index = $i;\n        }\n        if ($val < $smalest_value)\
    \ {\n            $min = $val;\n            $min_index = $i;\n        }\n    }\n\
    \    if ($min == 0) {\n        return [];\n    }\n    push @res, $min, $min_index;\n\
    \    foreach my $i (0 .. $#{$arr}) {\n        my $val = $arr->[$i];\n        if\
    \ ($val % 2 == 0) {\n            if ($val < $smalest_value) {\n              \
    \  push @res, $val, $i;\n            }\n        }\n    }\n    return @res;\n}",
  "    my $min = 0;\n    my $smalest_value;\n    my $smalest_index;\n    foreach my\
    \ $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($smalest_value\
    \ == 0 || $node < $smalest_value) {\n                $smalest_value = $node;\n\
    \                $smalest_index = $min;\n            }\n            $min++;\n\
    \        }\n    }\n    if ($smalest_value == 0) {\n        return [];\n    }\n\
    \    return [ $smalest_value, $smalest_index ];\n}", "    my $min = -1;\n    my\
    \ $index;\n    my $smalest_value;\n    foreach my $node (@$arr) {\n        if\
    \ ($node % 2 == 0) {\n            if ($min == -1 || $node < $smalest_value) {\n\
    \                $smalest_value = $node;\n                $index = $min;\n   \
    \         }\n            else {\n                $index = $index;\n          \
    \  }\n        }\n        else {\n            $index = $index;\n        }\n   \
    \     $min = $index;\n    }\n    return [ $smalest_value, $index ];\n}", "   \
    \ my @res;\n    my $min;\n    my $index;\n    my $value;\n    my $i = 0;\n   \
    \ my $j = 0;\n    my $even;\n    my $even_index;\n    my $even_value;\n    foreach\
    \ my $node (@$arr) {\n        $i++;\n        $value = $node;\n        $min = $i;\n\
    \        $index = $i;\n        $even = 0;\n        $even_index = 0;\n        $even_value\
    \ = 0;\n        foreach my $node (@$arr) {\n            $j++;\n            if\
    \ ($j == $i) {\n                $even = 1;\n                $even_index = $j;\n\
    \                $even_value = $node;\n            }\n            if ($node ==\
    \ $value) {\n                $even = 0;\n                $even_index = $j;\n \
    \               $even_value = $node;\n            }\n        }\n        if ($even)\
    \ {\n            if ($even_index < $min) {\n                $min = $even_index;\n\
    \                $value = $even_value;\n            }\n        }\n        push(@res,\
    \ [ $value, $index ]);\n    }\n    return @res;\n}", "    my @res;\n    my $min;\n\
    \    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $temp;\n    my $temp2;\n    my $temp3;\n    my $temp4;\n    my $temp5;\n\
    \    my $temp6;\n    my $temp7;\n    my $temp8;\n    my $temp9;\n    my $temp10;\n\
    \    my $temp11;\n    my $temp12;\n    my $temp13;\n    my $temp14;\n    my $temp15;\n\
    \    my $temp16;\n    my $temp17;\n    my $temp18;\n    my $temp19;\n    my $temp20;\n\
    \    my $temp21;\n    my $temp22;\n    my $temp23;\n    my $temp24;\n    my $temp25;\n\
    \    my $temp26;\n    my $temp27;\n    my $temp28;\n    my $temp29;\n    my $temp30;\n\
    \    my $temp31;\n    my $temp32;\n    my $temp33;\n    my $temp34;\n    my $temp35;\n\
    \    my $temp36;\n    my $temp37;\n    my $temp38;\n    my $temp39;\n    my $temp40;\n\
    \    my $temp41;\n    my $temp42;\n    my $temp43;\n    my $temp44;\n    my $temp45;\n\
    \    my $temp46;\n    my $temp47;\n    my $temp48;\n    my $temp49;\n    my $temp50;\n\
    \    my $temp51;\n    my $temp52;\n    my $temp53;\n    my $temp54;\n    my $temp55;\n\
    \    my $temp56;\n    my $temp57;\n    my $temp58;\n    my $temp59;\n    my $temp60;\n\
    \    my $temp61;\n    my $temp62;\n    my $temp63;\n    my $temp64;\n    my $temp65;\n\
    \    my $temp66;\n    my $temp67;\n    my $temp68;\n    my $temp69;\n    my $temp70;\n\
    \    my $temp71;\n    my $temp72;\n    my $temp73;\n    my $temp74;\n    my $temp75;\n\
    \    my $temp76;\n    my $temp77;\n    my $temp78;\n    my $temp79;\n    my $temp80;\n\
    \    my $temp81;\n    my $temp82;\n    my $temp83;", "    my $min;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n\
    \    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n\
    \    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n\
    \    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n\
    \    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n\
    \    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n\
    \    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n\
    \    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n\
    \    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n\
    \    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n\
    \    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n\
    \    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $even;", "    my $min = $arr[0];\n    my $index = 0;\n\
    \    my $found = 0;\n    foreach my $node (@$arr) {\n        if ($node % 2 ==\
    \ 0) {\n            $found = 1;\n            $min = $node;\n            $index\
    \ = $_;\n            last;\n        }\n    }\n    if ($found == 0) {\n       \
    \ return [];\n    }\n    return [ $min, $index ];\n}", "    my $min_value = $arr[0];\n\
    \    my $min_idx = 0;\n    my $idx = 0;\n    my $even = 0;\n    foreach my $val\
    \ (@$arr) {\n        if ($val % 2 != 0) {\n            $even = 0;\n        }\n\
    \        else {\n            $even = 1;\n        }\n        if ($val < $min_value)\
    \ {\n            $min_value = $val;\n            $min_idx = $idx;\n        }\n\
    \        if ($even) {\n            $idx++;\n        }\n    }\n    return [$min_value,\
    \ $min_idx];\n}", "    my @result;\n    my $min_value = $arr[0];\n    my $min_idx\
    \ = 0;\n    my $max_idx = 0;\n    my $max_value = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $even = 0;\n    my $even_idx = 0;\n    my $odd_idx\
    \ = 0;\n    my $odd_value = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx\
    \ = 0;\n    my $odd_value_idx = 0;\n    my $odd_value_idx = 0;\n    my $od", " \
    \   my $min;\n    my $index;\n    my $smalest_value;\n    my $even;\n    foreach\
    \ my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $even = $node;\n\
    \        }\n        if ($node < $min) {\n            $min = $node;\n         \
    \   $index = $node - 1;\n        }\n    }\n    if ($even) {\n        if ($min\
    \ == $even) {\n            $smalest_value = $even;\n        }\n        else {\n\
    \            $smalest_value = $min;\n        }\n    }\n    else {\n        $smalest_value\
    \ = $min;\n    }\n    return [ $smalest_value, $index ];\n}", "    my $result;\n\
    \    my $min;\n    my $index;\n    my $even;\n    my $smalest_value;\n    my $smalest_index;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my $smalest_even_value;\n\
    \    my $smalest_index;\n    my $smalest_even_value_index;\n    my $smalest_even_value_index2;\n\
    \    my $smalest_even_value_index3;\n    my $smalest_even_value_index4;\n    my\
    \ $smalest_even_value_index5;\n    my $smalest_even_value_index6;\n    my $smalest_even_value_index7;\n\
    \    my $smalest_even_value_index8;\n    my $smalest_even_value_index9;\n    my\
    \ $smalest_even_value_index10;\n    my $smalest_even_value_index11;\n    my $smalest_even_value_index12;\n\
    \    my $smalest_even_value_index13;\n    my $smalest_even_value_index14;\n  \
    \  my $smalest_even_value_index15;\n    my $smalest_even_value_index16;\n    my\
    \ $smalest_even_value_index17;\n    my $smalest_even_value_index18;\n    my $smalest_even_value_index19;\n\
    \    my $smalest_even_value_index20;\n    my $smalest_even_value_index21;\n  \
    \  my $smalest_even_value_index22;\n    my $smalest_even_value_index23;\n    my\
    \ $smalest_even_value_index24;\n    my $smalest_even_value_index25;\n    my $smalest_even_value_index26;\n\
    \    my $smalest_even_value_index27;\n    my $smalest_even_value_index28;\n  \
    \  my $smalest_even_value_index29;\n    my $smalest_even_value_index30;\n    my\
    \ $smalest_even_value_index31;\n    my $smalest_even_value_index32;\n    my $smalest_even_value_index33;\n\
    \    my $smalest_even_value_index34;\n    my $smalest_even_value_index35;\n  \
    \  my $smalest_even_value_index36;\n    my $smalest_even_value_index37;\n    my\
    \ $smalest_even_value_index38;\n    my $smalest_even_value_index39;\n    my $smalest_even_value_index40;\n\
    \    my $smalest_even_value_index41;\n    my $smalest_even_value_index42;\n  \
    \  my $", "    my $min_value = $arr[0];\n    my $index = 0;\n    my $smalest_value;\n\
    \    foreach my $val (@$arr) {\n        if ($val % 2 == 0) {\n            $smalest_value\
    \ = $val;\n            $index = $val - 1;\n        }\n    }\n    return $smalest_value\
    \ if $smalest_value;\n    return [];\n}", "    my @res;\n    my $min_even_val\
    \ = -1;\n    my $min_even_pos = -1;\n    my $min_even_pos_idx = -1;\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $even = 0;\n    my $even_pos =\
    \ -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx\
    \ = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val\
    \ = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx\
    \ = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val\
    \ = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx\
    \ = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val\
    \ = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx\
    \ = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val\
    \ = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx\
    \ = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val\
    \ = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx\
    \ = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val\
    \ = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx\
    \ = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val\
    \ = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx\
    \ = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val\
    \ = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx\
    \ = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val\
    \ = -1;\n    my $even_pos_idx = -1;\n    my $even_pos_val = -1;\n    my $even_pos_idx\
    \ = -1;\n    ", "    my $min;\n    my $index;\n    my $even;\n    foreach my $node\
    \ (@$arr) {\n        if ($node % 2 == 0) {\n            $even = $node;\n     \
    \   }\n        elsif ($node < $min) {\n            $min = $node;\n           \
    \ $index = $arr->index($node);\n        }\n    }\n    return $even if ($even &&\
    \ $min == $even);\n    return $min if ($min && $min == $index);\n    return [];\n\
    }", "    my @result;\n    my $index = 0;\n    my $smalest_value;\n    my $smalest_index;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $smalest_value\
    \ = $node;\n            $smalest_index = $index;\n        }\n        $index++;\n\
    \    }\n    if ($smalest_value) {\n        push(@result, $smalest_value, $smalest_index);\n\
    \    }\n    return @result;\n}", "    my @res;\n    my $min_even_val = -1;\n \
    \   my $min_even_pos = -1;\n    my $min_even_pos_index = -1;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $even_count = 0;\n    my $even_pos_count\
    \ = 0;\n    my $even_pos_index_count = 0;\n    my $even_pos_index_count_max =\
    \ 0;\n    my $even_pos_index_count_max_index = 0;\n    my $even_pos_index_count_max_index2\
    \ = 0;\n    my $even_pos_index_count_max_index3 = 0;\n    my $even_pos_index_count_max_index4\
    \ = 0;\n    my $even_pos_index_count_max_index5 = 0;\n    my $even_pos_index_count_max_index6\
    \ = 0;\n    my $even_pos_index_count_max_index7 = 0;\n    my $even_pos_index_count_max_index8\
    \ = 0;\n    my $even_pos_index_count_max_index9 = 0;\n    my $even_pos_index_count_max_index10\
    \ = 0;\n    my $even_pos_index_count_max_index11 = 0;\n    my $even_pos_index_count_max_index12\
    \ = 0;\n    my $even_pos_index_count_max_index13 = 0;\n    my $even_pos_index_count_max_index14\
    \ = 0;\n    my $even_pos_index_count_max_index15 = 0;\n    my $even_pos_index_count_max_index16\
    \ = 0;\n    my $even_pos_index_count_max_index17 = 0;\n    my $even_pos_index_count_max_index18\
    \ = 0;\n    my $even_pos_index_count_max_index19 = 0;\n    my $even_pos_index_count_max_index20\
    \ = 0;\n    my $even_pos_index_count_max_index21 = 0;\n    my $even_pos_index_count_max_index22\
    \ = 0;\n    my $even_pos_index_count_max_index23 = 0;\n    my $even_pos_index_count_max_index24\
    \ = 0;\n    my $even_pos_index_count_max_index25 = 0;\n    my $even_pos_index_count_max_index26\
    \ = 0;\n    my $even_pos_index_count_max_index27 = 0;\n    my $even_pos_index_count_max_index28\
    \ = 0;\n    my $even_pos_index_count_max_index29 = 0;\n    my $even_pos_index_count_max_index30\
    \ = 0;\n    my $even_pos_index_count_max_index31 = 0;\n    my $even_pos_index_count_max_index32\
    \ = 0;\n    my $even_pos_index_count_max_index33 = 0;\n    my $even_pos_index_count_max_index34\
    \ = 0;\n    my $even_pos_index_count_max_index35 = 0;\n    my $even_pos_index_count_max_index36\
    \ = 0;\n    my $even_pos_index_count_max_index37 = 0;", "    my $min_even_value;\n\
    \    my $min_even_index;\n    my $index;\n    my $even_value;\n    my $even_index;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even_value_count;\n    my $even_index_count;\n\
    \    my $even_value_index;\n    my $even_index_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_index_index;\n\
    \    my $even_value_count;\n    my $even_index_count;\n    my $even_value_index;\n\
    \    my $even_index_index;\n    my $even_value_count;\n    my $even_index_count;\n\
    \    my $even_value_index;\n    my $even_index_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_index_index;\n\
    \    my $even_value_count;\n    my $even_index_count;\n    my $even_value_index;\n\
    \    my $even_index_index;\n    my $even_value_count;\n    my $even_index_count;\n\
    \    my $even_value_index;\n    my $even_index_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_index_index;\n\
    \    my $even_value_count;\n    my $even_index_count;\n    my $even_value_index;\n\
    \    my $even_index_index;\n    my $even_value_count;\n    my $even_index_count;\n\
    \    my $even_value_index;\n    my $even_index_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_index_index;\n\
    \    my $even_value_count;\n    my $even_index_count;\n    my $even_value_index;\n\
    \    my $even_index_index;\n    my $even_value_count;\n    my $even_index_count;\n\
    \    my $even_value_index;\n    my $even_index_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_index_index;\n\
    \    my $even_value_count;\n    my $even_index_count;\n    my $even_value_index;\n\
    \    my $even_index_index;\n    my $even_value_count;\n    my $even_index_count;\n\
    \    my $even_value_index;\n    my $even_index_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_index_index;\n\
    \    my $even_value_count;\n    my $even_index_count;\n    my $even_value_index;\n\
    \    my $even_index_index;\n    ", "    my $min_even_val = 0;\n    my $min_even_val_index\
    \ = 0;\n    my $min_even_val_index2 = 0;\n    my $min_even_val_index3 = 0;\n \
    \   my $min_even_val_index4 = 0;\n    my $min_even_val_index5 = 0;\n    my $min_even_val_index6\
    \ = 0;\n    my $min_even_val_index7 = 0;\n    my $min_even_val_index8 = 0;\n \
    \   my $min_even_val_index9 = 0;\n    my $min_even_val_index10 = 0;\n    my $min_even_val_index11\
    \ = 0;\n    my $min_even_val_index12 = 0;\n    my $min_even_val_index13 = 0;\n\
    \    my $min_even_val_index14 = 0;\n    my $min_even_val_index15 = 0;\n    my\
    \ $min_even_val_index16 = 0;\n    my $min_even_val_index17 = 0;\n    my $min_even_val_index18\
    \ = 0;\n    my $min_even_val_index19 = 0;\n    my $min_even_val_index20 = 0;\n\
    \    my $min_even_val_index21 = 0;\n    my $min_even_val_index22 = 0;\n    my\
    \ $min_even_val_index23 = 0;\n    my $min_even_val_index24 = 0;\n    my $min_even_val_index25\
    \ = 0;\n    my $min_even_val_index26 = 0;\n    my $min_even_val_index27 = 0;\n\
    \    my $min_even_val_index28 = 0;\n    my $min_even_val_index29 = 0;\n    my\
    \ $min_even_val_index30 = 0;\n    my $min_even_val_index31 = 0;\n    my $min_even_val_index32\
    \ = 0;\n    my $min_even_val_index33 = 0;\n    my $min_even_val_index34 = 0;\n\
    \    my $min_even_val_index35 = 0;\n    my $min_even_val_index36 = 0;\n    my\
    \ $min_even_val_index37 = 0;\n    my $min_even_val_index38 = 0;\n    my $min_even_val_index39\
    \ = 0;\n    my $min_even_val_index40 = 0;\n    my $min_even_val_index41 = 0;\n\
    \    my $min_even_val_index42 = 0;\n    my $min_even_val_index43 = 0;\n    my\
    \ $min_even_val_index44 = 0;\n    my $min_even_val_index45 = 0;\n    my $min_even_val_index46\
    \ = 0;\n    my $min_even_val_index47 = 0;\n    my $min_even_val_index48 = 0;\n\
    \    my $min_even_val_index49 = 0;\n    my $min_even_val_index50 = 0;\n    my\
    \ $min_even_val_index51 = 0;", "    my $min_value = $arr[0];\n    my $min_index\
    \ = 0;\n    for (my $i = 1; $i < @$arr; $i++) {\n        if ($arr[$i] % 2 != 0)\
    \ {\n            $min_value = $arr[$i];\n            $min_index = $i;\n      \
    \  }\n    }\n    return [ $min_value, $min_index ];\n}", "    my $min_even_val\
    \ = -1;\n    my $min_even_pos = -1;\n    my $min_even_pos2 = -1;\n    my $min_even_pos3\
    \ = -1;\n    my $min_even_pos4 = -1;\n    my $min_even_pos5 = -1;\n    my $min_even_pos6\
    \ = -1;\n    my $min_even_pos7 = -1;\n    my $min_even_pos8 = -1;\n    my $min_even_pos9\
    \ = -1;\n    my $min_even_pos10 = -1;\n    my $min_even_pos11 = -1;\n    my $min_even_pos12\
    \ = -1;\n    my $min_even_pos13 = -1;\n    my $min_even_pos14 = -1;\n    my $min_even_pos15\
    \ = -1;\n    my $min_even_pos16 = -1;\n    my $min_even_pos17 = -1;\n    my $min_even_pos18\
    \ = -1;\n    my $min_even_pos19 = -1;\n    my $min_even_pos20 = -1;\n    my $min_even_pos21\
    \ = -1;\n    my $min_even_pos22 = -1;\n    my $min_even_pos23 = -1;\n    my $min_even_pos24\
    \ = -1;\n    my $min_even_pos25 = -1;\n    my $min_even_pos26 = -1;\n    my $min_even_pos27\
    \ = -1;\n    my $min_even_pos28 = -1;\n    my $min_even_pos29 = -1;\n    my $min_even_pos30\
    \ = -1;\n    my $min_even_pos31 = -1;\n    my $min_even_pos32 = -1;\n    my $min_even_pos33\
    \ = -1;\n    my $min_even_pos34 = -1;\n    my $min_even_pos35 = -1;\n    my $min_even_pos36\
    \ = -1;\n    my $min_even_pos37 = -1;\n    my $min_even_pos38 = -1;\n    my $min_even_pos39\
    \ = -1;\n    my $min_even_pos40 = -1;\n    my $min_even_pos41 = -1;\n    my $min_even_pos42\
    \ = -1;\n    my $min_even_pos43 = -1;\n    my $min_even_pos44 = -1;\n    my $min_even_pos45\
    \ = -1;\n    my $min_even_pos46 = -1;\n    my $min_even_pos47 = -1;\n    my $min_even_pos48\
    \ = -1;\n    my $min_even_pos49 = -1;\n    my $min_even_pos50 = -1;\n    my $min_even_pos51\
    \ = -1;\n    my $min_even_pos5", "    my $min = -1;\n    my $min_index;\n    my\
    \ $index;\n    my $value;\n    foreach my $node (@$arr) {\n        if ($node %\
    \ 2 == 0) {\n            if ($min == -1) {\n                $min = $node;\n  \
    \              $min_index = $index;\n            }\n            elsif ($node <\
    \ $min) {\n                $min = $node;\n                $min_index = $index;\n\
    \            }\n        }\n        $index++;\n    }\n    return $min == -1 ? []\
    \ : [ $min, $min_index ];\n}", "    my $min;\n    my $index;\n    my $even;\n\
    \    my $result;\n    my $i;\n    my $j;\n    my $k;\n    my $v;\n    my $temp;\n\
    \    my $temp2;\n    my $temp3;\n    my $temp4;\n    my $temp5;\n    my $temp6;\n\
    \    my $temp7;\n    my $temp8;\n    my $temp9;\n    my $temp10;\n    my $temp11;\n\
    \    my $temp12;\n    my $temp13;\n    my $temp14;\n    my $temp15;\n    my $temp16;\n\
    \    my $temp17;\n    my $temp18;\n    my $temp19;\n    my $temp20;\n    my $temp21;\n\
    \    my $temp22;\n    my $temp23;\n    my $temp24;\n    my $temp25;\n    my $temp26;\n\
    \    my $temp27;\n    my $temp28;\n    my $temp29;\n    my $temp30;\n    my $temp31;\n\
    \    my $temp32;\n    my $temp33;\n    my $temp34;\n    my $temp35;\n    my $temp36;\n\
    \    my $temp37;\n    my $temp38;\n    my $temp39;\n    my $temp40;\n    my $temp41;\n\
    \    my $temp42;\n    my $temp43;\n    my $temp44;\n    my $temp45;\n    my $temp46;\n\
    \    my $temp47;\n    my $temp48;\n    my $temp49;\n    my $temp50;\n    my $temp51;\n\
    \    my $temp52;\n    my $temp53;\n    my $temp54;\n    my $temp55;\n    my $temp56;\n\
    \    my $temp57;\n    my $temp58;\n    my $temp59;\n    my $temp60;\n    my $temp61;\n\
    \    my $temp62;\n    my $temp63;\n    my $temp64;\n    my $temp65;\n    my $temp66;\n\
    \    my $temp67;\n    my $temp68;\n    my $temp69;\n    my $temp70;\n    my $temp71;\n\
    \    my $temp72;\n    my $temp73;\n    my $temp74;\n    my $temp75;\n    my $temp76;\n\
    \    my $temp77;\n    my $temp78;\n    my $temp79;\n    my $temp80;\n    my $temp81;\n\
    \    my $temp82;\n    my $temp83;", "    my $result;\n    my $min_value;\n   \
    \ my $min_index;\n    my $i;\n    my $j;\n    my $k;\n    my $smallest_value;\n\
    \    my $smallest_index;\n    my $even_value;\n    my $even_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_value;\n \
    \   my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n  \
    \  my $even_value_index;\n    my $even_value;\n    my $even_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_value;\n \
    \   my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n  \
    \  my $even_value_index;\n    my $even_value;\n    my $even_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_value;\n \
    \   my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n  \
    \  my $even_value_index;\n    my $even_value;\n    my $even_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_value;\n \
    \   my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n  \
    \  my $even_value_index;\n    my $even_value;\n    my $even_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_value;\n \
    \   my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n  \
    \  my $even_value_index;\n    my $even_value;\n    my $even_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_value;\n \
    \   my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n  \
    \  my $even_value_index;\n    my $even_value;\n    my $even_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_value;\n \
    \   my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n  \
    \  my $even_value_index;\n    my $even_value;\n    my $even_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n", "    my $min_value = $arr[0];\n    my $min_idx\
    \ = 0;\n    my $i = 0;\n    while($i < @$arr) {\n        my $val = $arr->[$i];\n\
    \        if($val == $min_value) {\n            $min_idx = $i;\n        }\n   \
    \     elsif($val < $min_value) {\n            $min_value = $val;\n           \
    \ $min_idx = $i;\n        }\n        $i++;\n    }\n    return [ $min_value, $min_idx\
    \ ];\n}", "    my @res;\n    my $min = 0;\n    my $min_val;\n    my $index;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $v;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $temp;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    ", "    my $min = -1;\n    my $min_index;\n\
    \    my $index;\n    my $value;\n    foreach my $i (0..$#$arr) {\n        $value\
    \ = $arr->[$i];\n        if ($value % 2 == 0) {\n            if ($min == -1 ||\
    \ $value < $min) {\n                $min = $value;\n                $min_index\
    \ = $i;\n            }\n        }\n    }\n    if ($min == -1) {\n        return\
    \ [];\n    }\n    return [ $min, $min_index ];\n}", "    my @result;\n    my $min;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n", "    my @res;\n    my $min = 0;\n\
    \    my $min_index = 0;\n    my $smalest_value;\n    foreach my $node (@$arr)\
    \ {\n        if ($node % 2 == 0) {\n            $smalest_value = $node;\n    \
    \        $min_index = $min;\n        }\n        elsif ($node < $smalest_value)\
    \ {\n            $smalest_value = $node;\n            $min_index = $min;\n   \
    \     }\n        elsif ($node == $smalest_value) {\n            $min_index++;\n\
    \        }\n        $min++;\n    }\n    if ($min == 0) {\n        return [];\n\
    \    }\n    elsif ($min == 1) {\n        return [ $smalest_value, $min_index ];\n\
    \    }\n    elsif ($min > 1) {\n        return [ $smalest_value, $min_index ];\n\
    \    }\n}", "    my $min = -1;\n    my $min_index;\n    my $smalest_value;\n \
    \   foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if\
    \ ($min == -1) {\n                $min = $node;\n                $min_index =\
    \ $node;\n                $smalest_value = $node;\n            } else {\n    \
    \            if ($node < $min) {\n                    $min = $node;\n        \
    \            $min_index = $node;\n                    $smalest_value = $node;\n\
    \                }\n            }\n        }\n    }\n    return $smalest_value,\
    \ $min_index;\n}", "    my $min_value = $arr[0];\n    my $min_index = 0;\n   \
    \ my $index = 0;\n    my $even_value = 0;\n    foreach my $val (@$arr) {\n   \
    \     if ($val % 2 != 0) {\n            $even_value = $val;\n        }\n     \
    \   if ($val < $min_value) {\n            $min_value = $val;\n            $min_index\
    \ = $index;\n        }\n        $index++;\n    }\n    return $min_value if $even_value;\n\
    \    return $min_value if $min_index == 0;\n    return $min_value if $min_index\
    \ == 1;\n    return $min_value if $min_index == 2;\n    return $min_value if $min_index\
    \ == 3;\n    return $min_value if $min_index == 4;\n    return $min_value if $min_index\
    \ == 5;\n    return $min_value if $min_index == 6;\n    return $min_value if $min_index\
    \ == 7;\n    return $min_value if $min_index == 8;\n    return $min_value if $min_index\
    \ == 9;\n    return $min_value if $min_index == 10;\n    return $min_value if\
    \ $min_index == 11;\n    return $min_value if $min_index == 12;\n    return $min_value\
    \ if $min_index == 13;\n    return $min_value if $min_index == 14;\n    return\
    \ $min_value if $min_index == 15;\n    return $min_value if $min_index == 16;\n\
    \    return $min_value if $min_index == 17;\n    return $min_value if $min_index\
    \ == 18;\n    return $min_value if $min_index == 19;\n    return $min_value if\
    \ $min_index == 20;\n    return $min_value if $min_index == 21;\n    return $min_value\
    \ if $min_index == 22;\n    return $min_value if $min_index == 23;\n    return\
    \ $min_value if $min_index == 24;\n    return $min_value if $min_index == 25;\n\
    \    return $min_value if $min_index == 26;\n    return $min_value if $min_index\
    \ == 27;\n    return $min_value if $min_index == 28;\n    return $min_value if\
    \ $min_index == 29;\n    return $min_value if $min_index == 30;\n    return $min_value\
    \ if $min_index == 31;\n    return $min_value if $min_index == 32;\n    return\
    \ $min_value if $min_index == 33;\n    return $min_value if $min_index == 34;\n\
    \    return $min_value if $min_index == 35;\n    return $min_value if $min_index\
    \ == 36;\n    return $min_", "    my $min_even_value = 0;\n    my $min_even_index\
    \ = 0;\n    my $smalest_value;\n    my @smalest_value;\n    my @smalest_index;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value_count = 0;\n    my $even_index_count = 0;\n    my $even_value_count_max\
    \ = 0;\n    my $even_index_count_max = 0;\n    my $even_value_count_min = 0;\n\
    \    my $even_index_count_min = 0;\n    my $even_value_count_max = 0;\n    my\
    \ $even_index_count_max = 0;\n    my $even_value_count_min = 0;\n    my $even_index_count_min\
    \ = 0;\n    my $even_value_count_max = 0;\n    my $even_index_count_max = 0;\n\
    \    my $even_value_count_min = 0;\n    my $even_index_count_min = 0;\n    my\
    \ $even_value_count_max = 0;\n    my $even_index_count_max = 0;\n    my $even_value_count_min\
    \ = 0;\n    my $even_index_count_min = 0;\n    my $even_value_count_max = 0;\n\
    \    my $even_index_count_max = 0;\n    my $even_value_count_min = 0;\n    my\
    \ $even_index_count_min = 0;\n    my $even_value_count_max = 0;\n    my $even_index_count_max\
    \ = 0;\n    my $even_value_count_min = 0;\n    my $even_index_count_min = 0;\n\
    \    my $even_value_count_max = 0;\n    my $even_index_count_max = 0;\n    my\
    \ $even_value_count_min = 0;\n    my $even_index_count_min = 0;\n    my $even_value_count_max\
    \ = 0;\n    my $even_index_count_max = 0;\n    my $even_value_count_min = 0;\n\
    \    my $even_index_count_min = 0;\n    my $even_value_count_max = 0;\n    my\
    \ $even_index_count_max = 0;\n    my $even_value_count_min = 0;\n    my $even_index_count_min\
    \ = 0;\n    my $even_value_count_max = 0;\n    my $even_index_count_max = 0;\n\
    \    my $even_value_count_min = 0;\n    my $even_index_count_min = 0;\n    my\
    \ $even_value_count_max = 0;\n    my $even_index_count_max = 0;\n    my $even_value_count_min\
    \ = 0;\n    my $even_index_count_min = 0;\n    my $even_value_count_max = 0;\n\
    \    my $even_index_count_max = 0;\n    my $even_value_count_min = 0;\n    my\
    \ $even_index_count_min = 0;\n    my $even_value_count_max = 0;\n    my $even_index_count_max\
    \ = 0;\n    my $even_value_count_min = 0;\n    my $even_index_count_min = 0;\n\
    \    my $even_value_count_max = 0;\n    my $even_index_count_max = 0;\n    my\
    \ $even_value_count_min = 0;\n    my $even", "    my @res;\n    my $min_even_val\
    \ = 0;\n    my $min_even_val_index = 0;\n    my $index = 0;\n    foreach my $val\
    \ (@$arr) {\n        if ($val & 1) {\n            $min_even_val = $val;\n    \
    \        $min_even_val_index = $index;\n        }\n        $index++;\n    }\n\
    \    if ($min_even_val_index == 0) {\n        return [];\n    }\n    push(@res,\
    \ [\"$min_even_val\", $min_even_val_index]);\n    foreach my $val (@$arr) {\n\
    \        if ($val & 1) {\n            if ($val == $min_even_val) {\n         \
    \       push(@res, [\"$val\", $index]);\n            }\n            else {\n \
    \               push(@res, [\"$val\", $min_even_val_index]);\n            }\n\
    \        }\n    }\n    return @res;\n}", "    my @res;\n    my $min;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n", "    my @res;\n    my $min = $arr[0];\n    my $min_index = 0;\n \
    \   my $index;\n    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even_index;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my\
    \ $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value", "   \
    \ my $min;\n    my $index;\n    my $even;\n    my $smalest_value;\n    foreach\
    \ my $i (0 .. $#{$arr}) {\n        if ($arr->[$i] % 2 == 0) {\n            $even\
    \ = $arr->[$i];\n            $smalest_value = $i;\n        }\n    }\n    if ($smalest_value\
    \ eq $even) {\n        return $smalest_value;\n    }\n    elsif ($smalest_value\
    \ eq $even) {\n        return $smalest_value;\n    }\n    else {\n        return\
    \ [];\n    }\n}", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n    my\
    \ $even_value;\n    my $temp;\n    my $temp_index;\n    my $temp_even_value;\n\
    \    my $temp_even_index;\n    my $temp_min;\n    my $temp_min_index;\n    my\
    \ $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n\
    \    my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n \
    \   my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n  \
    \  my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n   \
    \ my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n    my\
    \ $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n\
    \    my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n \
    \   my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n  \
    \  my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n   \
    \ my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n    my\
    \ $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n\
    \    my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n \
    \   my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n  \
    \  my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n   \
    \ my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n    my\
    \ $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n\
    \    my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n \
    \   my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n  \
    \  my $temp_min_index;\n    my $temp_min_index;\n    my $temp_min_index;\n", " \
    \   my @result;\n    my $min;\n    my $index;\n    my $value;\n    my $i;\n  \
    \  my $j;\n    my $k;\n    my $found;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n", "    my $min = $arr->[0];\n    my $index =\
    \ 0;\n    for (my $i = 1; $i < @$arr; $i++) {\n        if ($arr->[$i] % 2 == 0)\
    \ {\n            if ($min > $arr->[$i]) {\n                $min = $arr->[$i];\n\
    \                $index = $i;\n            }\n        }\n    }\n    return [ $min,\
    \ $index ];\n}", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $temp;\n    my $temp2;\n\
    \    my $temp3;\n    my $temp4;\n    my $temp5;\n    my $temp6;\n    my $temp7;\n\
    \    my $temp8;\n    my $temp9;\n    my $temp10;\n    my $temp11;\n    my $temp12;\n\
    \    my $temp13;\n    my $temp14;\n    my $temp15;\n    my $temp16;\n    my $temp17;\n\
    \    my $temp18;\n    my $temp19;\n    my $temp20;\n    my $temp21;\n    my $temp22;\n\
    \    my $temp23;\n    my $temp24;\n    my $temp25;\n    my $temp26;\n    my $temp27;\n\
    \    my $temp28;\n    my $temp29;\n    my $temp30;\n    my $temp31;\n    my $temp32;\n\
    \    my $temp33;\n    my $temp34;\n    my $temp35;\n    my $temp36;\n    my $temp37;\n\
    \    my $temp38;\n    my $temp39;\n    my $temp40;\n    my $temp41;\n    my $temp42;\n\
    \    my $temp43;\n    my $temp44;\n    my $temp45;\n    my $temp46;\n    my $temp47;\n\
    \    my $temp48;\n    my $temp49;\n    my $temp50;\n    my $temp51;\n    my $temp52;\n\
    \    my $temp53;\n    my $temp54;\n    my $temp55;\n    my $temp56;\n    my $temp57;\n\
    \    my $temp58;\n    my $temp59;\n    my $temp60;\n    my $temp61;\n    my $temp62;\n\
    \    my $temp63;\n    my $temp64;\n    my $temp65;\n    my $temp66;\n    my $temp67;\n\
    \    my $temp68;\n    my $temp69;\n    my $temp70;\n    my $temp71;\n    my $temp72;\n\
    \    my $temp73;\n    my $temp74;\n    my $temp75;\n    my $temp76;\n    my $temp77;\n\
    \    my $temp78;\n    my $temp79;\n    my $temp80;\n    my $temp81;\n    my $temp82;\n\
    \    my $temp83;", "    my $min_value = $arr[0];\n    my $min_index = 0;\n   \
    \ my $index = 0;\n    my $found = 0;\n    foreach my $val (@$arr) {\n        if\
    \ ($val % 2 == 0) {\n            $found = 1;\n            $min_value = $val;\n\
    \            $min_index = $index;\n        }\n        $index++;\n    }\n    return\
    \ $found ? [ $min_value, $min_index ] : [];\n}", "    my @res;\n    my $min;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my\
    \ $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n\
    \    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my\
    \ $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n\
    \    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my\
    \ $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n\
    \    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my\
    \ $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n\
    \    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n", "    my $min_even_value;\n    my $min_even_index;\n    my $index;\n\
    \    my $value;\n    my $even_value;\n    my $even_index;\n    my $even_value_index;\n\
    \    my $even_value_index2;\n    my $even_value_index3;\n    my $even_value_index4;\n\
    \    my $even_value_index5;\n    my $even_value_index6;\n    my $even_value_index7;\n\
    \    my $even_value_index8;\n    my $even_value_index9;\n    my $even_value_index10;\n\
    \    my $even_value_index11;\n    my $even_value_index12;\n    my $even_value_index13;\n\
    \    my $even_value_index14;\n    my $even_value_index15;\n    my $even_value_index16;\n\
    \    my $even_value_index17;\n    my $even_value_index18;\n    my $even_value_index19;\n\
    \    my $even_value_index20;\n    my $even_value_index21;\n    my $even_value_index22;\n\
    \    my $even_value_index23;\n    my $even_value_index24;\n    my $even_value_index25;\n\
    \    my $even_value_index26;\n    my $even_value_index27;\n    my $even_value_index28;\n\
    \    my $even_value_index29;\n    my $even_value_index30;\n    my $even_value_index31;\n\
    \    my $even_value_index32;\n    my $even_value_index33;\n    my $even_value_index34;\n\
    \    my $even_value_index35;\n    my $even_value_index36;\n    my $even_value_index37;\n\
    \    my $even_value_index38;\n    my $even_value_index39;\n    my $even_value_index40;\n\
    \    my $even_value_index41;\n    my $even_value_index42;\n    my $even_value_index43;\n\
    \    my $even_value_index44;\n    my $even_value_index45;\n    my $even_value_index46;\n\
    \    my $even_value_index47;\n    my $even_value_index48;\n    my $even_value_index49;\n\
    \    my $even_value_index50;\n    my $even_value_index51;\n    my $even_value_index52;\n\
    \    my $even_value_index53;\n    my $even_value_index54;\n    my $even_value_index55;\n\
    \    my $even_value_index56;\n    my $even_value_index57;\n    my $even_value_index58;\n\
    \    my $even_value_index59;\n    my $even_value_index60;\n    my $even_value_index61;\n\
    \    my $even_value_index62;\n    my $", "    my @result;\n    my $min_even_val\
    \ = 0;\n    my $min_even_val_index = 0;\n    my $i = 0;\n    my $j = 0;\n    foreach\
    \ my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($min_even_val\
    \ == 0) {\n                $min_even_val = $node;\n                $min_even_val_index\
    \ = $i;\n            }\n            elsif ($node < $min_even_val) {\n        \
    \        $min_even_val = $node;\n                $min_even_val_index = $i;\n \
    \           }\n            $i++;\n        }\n        else {\n            if ($min_even_val\
    \ == 0) {\n                $min_even_val = $node;\n                $min_even_val_index\
    \ = $i;\n            }\n            elsif ($node < $min_even_val) {\n        \
    \        $min_even_val = $node;\n                $min_even_val_index = $i;\n \
    \           }\n            $j++;\n        }\n    }\n    if ($min_even_val == 0)\
    \ {\n        return [];\n    }\n    elsif ($min_even_val_index == 0) {\n     \
    \   return [$min_even_val];\n    }\n    else {\n        return [$min_even_val,\
    \ $min_even_val_index];\n    }\n}", "    my $min_value = $arr[0];\n    my $min_index\
    \ = 0;\n    my $index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n\
    \    my $even_value_count = 0;\n    foreach my $val (@$arr) {\n        if ($val\
    \ % 2 == 0) {\n            $even_value_count++;\n            if ($even_value_count\
    \ == 1) {\n                $even_value = $val;\n                $even_index =\
    \ $index;\n            }\n        }\n        $index++;\n    }\n    if ($even_value_count\
    \ == 0) {\n        return [];\n    }\n    if ($even_value_count == 1) {\n    \
    \    return [$even_value, $even_index];\n    }\n    foreach my $val (@$arr) {\n\
    \        if ($val % 2 == 0) {\n            if ($val < $min_value) {\n        \
    \        $min_value = $val;\n                $min_index = $index;\n          \
    \  }\n        }\n        $index++;\n    }\n    return [$min_value, $min_index];\n\
    }", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n    my $even_value;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even_index;\n    my $even_value;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n    my\
    \ $even_value;\n    my $index;\n    my $value;\n    my $even;\n    my $i;\n  \
    \  my $j;\n    my $k;\n    my $even_index;\n    my $even_value;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $even_value;\n    my $index;\n    my $value;\n    my $even;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $even_value;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $even_value;\n    my $index;\n    my $value;\n    my $even;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $even_value;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $even_value;\n    my $index;\n    my $value;\n    my $even;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $even_value;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $even_value;\n    my $index;\n    my $value;\n    my $even;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $even_value;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $even_value;\n    my $index;\n    my $value;\n    ", "    my @res;\n \
    \   my $min = $arr[0];\n    my $index = 0;\n    my $even;\n    foreach my $i (@$arr)\
    \ {\n        $even = $i % 2 == 0;\n        if ($even) {\n            if ($min\
    \ > $i) {\n                $min = $i;\n                $index = $i;\n        \
    \    }\n        }\n    }\n    if ($min == 0) {\n        return [];\n    }\n  \
    \  push(@res, $min, $index);\n    return @res;\n}", "    my @result;\n    my $min;\n\
    \    my $index;\n    my $value;\n    my $i = 0;\n    my $j = 0;\n    my $even;\n\
    \    my $even_index;\n    foreach my $node (@$arr) {\n        if ($node == 0)\
    \ {\n            $min = $node;\n            $index = $i;\n            $value =\
    \ $node;\n            $i++;\n        }\n        elsif ($node % 2 == 0) {\n   \
    \         $even = $node;\n            $even_index = $j;\n        }\n        else\
    \ {\n            if ($node < $min) {\n                $min = $node;\n        \
    \        $index = $i;\n                $value = $node;\n                $i++;\n\
    \            }\n            elsif ($node < $even) {\n                $even = $node;\n\
    \                $even_index = $j;\n            }\n        }\n        $j++;\n\
    \    }\n    if ($i == 0) {\n        return [];\n    }\n    if ($min == 0) {\n\
    \        return [$value, $index];\n    }\n    if ($min == $even) {\n        return\
    \ [$value, $index];\n    }\n    if ($min < $even) {\n        return [$value, $index];\n\
    \    }\n    return [$even, $even_index];\n}", "    my $min_value = $arr[0];\n\
    \    my $min_idx = 0;\n    my $i = 0;\n    my $j = 0;\n    my $even_values = 0;\n\
    \    my $even_values_idx = 0;\n    my $even_values_idx2 = 0;\n    my $even_values_idx3\
    \ = 0;\n    my $even_values_idx4 = 0;\n    my $even_values_idx5 = 0;\n    my $even_values_idx6\
    \ = 0;\n    my $even_values_idx7 = 0;\n    my $even_values_idx8 = 0;\n    my $even_values_idx9\
    \ = 0;\n    my $even_values_idx10 = 0;\n    my $even_values_idx11 = 0;\n    my\
    \ $even_values_idx12 = 0;\n    my $even_values_idx13 = 0;\n    my $even_values_idx14\
    \ = 0;\n    my $even_values_idx15 = 0;\n    my $even_values_idx16 = 0;\n    my\
    \ $even_values_idx17 = 0;\n    my $even_values_idx18 = 0;\n    my $even_values_idx19\
    \ = 0;\n    my $even_values_idx20 = 0;\n    my $even_values_idx21 = 0;\n    my\
    \ $even_values_idx22 = 0;\n    my $even_values_idx23 = 0;\n    my $even_values_idx24\
    \ = 0;\n    my $even_values_idx25 = 0;\n    my $even_values_idx26 = 0;\n    my\
    \ $even_values_idx27 = 0;\n    my $even_values_idx28 = 0;\n    my $even_values_idx29\
    \ = 0;\n    my $even_values_idx30 = 0;\n    my $even_values_idx31 = 0;\n    my\
    \ $even_values_idx32 = 0;\n    my $even_values_idx33 = 0;\n    my $even_values_idx34\
    \ = 0;\n    my $even_values_idx35 = 0;\n    my $even_values_idx36 = 0;\n    my\
    \ $even_values_idx37 = 0;\n    my $even_values_idx38 = 0;\n    my $even_values_idx39\
    \ = 0;\n    my $even_values_idx40 = 0;\n    my $even_values_idx41 = 0;\n    my\
    \ $even_values_idx42 = 0;\n    my $even_values_idx43 = 0;\n    my $even_values_idx44\
    \ = 0;\n    my $even_values_idx45 = 0;\n    my $even_values_idx46 = 0;\n    my\
    \ $even_values_idx47 = 0;\n    my $even_values_idx48 = 0;\n    my $even_values_idx49\
    \ = 0;\n    my $even_values_idx50 = 0;\n    my $even_values_idx51 = 0;\n    my\
    \ $even_values_idx52 = 0;\n    my $even_values_idx53 = 0;\n    my $even_values_idx54\
    \ = 0;\n    my $", "    my @res;\n    my $min_even_val = undef;\n    my $min_even_pos\
    \ = undef;\n    my $min_even_pos = 0;\n    my $min_even_val = 0;\n    my $i =\
    \ 0;\n    my $j = 0;\n    my $k = 0;\n    my $even = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even", "    my $min_value\
    \ = $arr[0];\n    my $min_index = 0;\n    my $index = 0;\n    my $smalest_value;\n\
    \    foreach my $val (@$arr) {\n        if ($val % 2 == 0) {\n            $smalest_value\
    \ = $val;\n            $index = $index;\n        }\n        if ($val < $min_value)\
    \ {\n            $min_value = $val;\n            $min_index = $index;\n      \
    \  }\n        $index++;\n    }\n    return [$smalest_value, $min_index];\n}",
  "    my @result;\n    my $min = 0;\n    my $min_index = 0;\n    my $smalest_value;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $smalest_value\
    \ = $node;\n            $min_index = $min;\n        }\n        if ($node < $smalest_value)\
    \ {\n            $min = $node;\n            $min_index = $min_index;\n       \
    \ }\n    }\n    if ($min == 0) {\n        return [];\n    }\n    push(@result,\
    \ $smalest_value, $min_index);\n    return @result;\n}", "    my $min = -1;\n\
    \    my $min_index;\n    my $index;\n    my $value;\n    foreach my $node (@$arr)\
    \ {\n        if ($node % 2 == 0) {\n            $value = $node;\n            $index\
    \ = $min_index;\n        }\n        else {\n            if ($min == -1 || $value\
    \ < $min) {\n                $min = $value;\n                $min_index = $index;\n\
    \            }\n        }\n    }\n    return $min == -1 ? [] : [ $min, $min_index\
    \ ];\n}", "    my $result;\n    my $smallest_value;\n    my $smallest_index;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $smallest_even_value;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n \
    \   my $even_value_count_temp;\n    my $even_index_count_temp;\n    my $even_value_count_temp2;\n\
    \    my $even_index_count_temp2;\n    my $even_value_count_temp3;\n    my $even_index_count_temp3;\n\
    \    my $even_value_count_temp4;\n    my $even_index_count_temp4;\n    my $even_value_count_temp5;\n\
    \    my $even_index_count_temp5;\n    my $even_value_count_temp6;\n    my $even_index_count_temp6;\n\
    \    my $even_value_count_temp7;\n    my $even_index_count_temp7;\n    my $even_value_count_temp8;\n\
    \    my $even_index_count_temp8;\n    my $even_value_count_temp9;\n    my $even_index_count_temp9;\n\
    \    my $even_value_count_temp10;\n    my $even_index_count_temp10;\n    my $even_value_count_temp11;\n\
    \    my $even_index_count_temp11;\n    my $even_value_count_temp12;\n    my $even_index_count_temp12;\n\
    \    my $even_value_count_temp13;\n    my $even_index_count_temp13;\n    my $even_value_count_temp14;\n\
    \    my $even_index_count_temp14;\n    my $even_value_count_temp15;\n    my $even_index_count_temp15;\n\
    \    my $even_value_count_temp16;\n    my $even_index_count_temp16;\n    my $even_value_count_temp17;\n\
    \    my $even_index_count_temp17;\n    my $even_value_count_temp18;\n    my $even_index_count_temp18;\n\
    \    my $even_value_count_temp19;\n    my $even_index_count_temp19;\n    my $even_value_count_temp20;\n\
    \    my $even_index_count_temp20;\n    my $even_value_count_temp21;\n    my $even_index_count_temp21;\n\
    \    my $even_value_count_temp22;\n    my $even_index_count_temp22;\n    my $even_value_count_temp23;\n\
    \    my $even_index_count_temp23;\n    my $even_value_count_temp24;\n    my $even_index_count_temp24;\n\
    \    my $even_value_count_temp25;\n    my $even_index_count_temp25;\n    my $even_value_count_temp26;\n\
    \    my $even_index_count_temp26;\n    my $even_value_count_temp27;\n    my $even_index_count_temp27",
  "    my $min_even_value = 0;\n    my $min_even_index = 0;\n    my $smalest_value;\n\
    \    my @smalest_value_index;\n    foreach my $node (@$arr) {\n        if ($node\
    \ % 2 == 0) {\n            if ($node < $min_even_value) {\n                $min_even_value\
    \ = $node;\n                $min_even_index = $_;\n            }\n           \
    \ else {\n                push(@smalest_value_index, $_);\n            }\n   \
    \     }\n    }\n    if (@smalest_value_index) {\n        $smalest_value = $smalest_value_index[0];\n\
    \    }\n    else {\n        $smalest_value = undef;\n    }\n    return [ $smalest_value,\
    \ $min_even_index ];\n}", "    my @res;\n    my $min_even_val = -1;\n    my $min_even_pos\
    \ = -1;\n    my $min_even_pos2 = -1;\n    my $min_even_pos3 = -1;\n    my $min_even_pos4\
    \ = -1;\n    my $min_even_pos5 = -1;\n    my $min_even_pos6 = -1;\n    my $min_even_pos7\
    \ = -1;\n    my $min_even_pos8 = -1;\n    my $min_even_pos9 = -1;\n    my $min_even_pos10\
    \ = -1;\n    my $min_even_pos11 = -1;\n    my $min_even_pos12 = -1;\n    my $min_even_pos13\
    \ = -1;\n    my $min_even_pos14 = -1;\n    my $min_even_pos15 = -1;\n    my $min_even_pos16\
    \ = -1;\n    my $min_even_pos17 = -1;\n    my $min_even_pos18 = -1;\n    my $min_even_pos19\
    \ = -1;\n    my $min_even_pos20 = -1;\n    my $min_even_pos21 = -1;\n    my $min_even_pos22\
    \ = -1;\n    my $min_even_pos23 = -1;\n    my $min_even_pos24 = -1;\n    my $min_even_pos25\
    \ = -1;\n    my $min_even_pos26 = -1;\n    my $min_even_pos27 = -1;\n    my $min_even_pos28\
    \ = -1;\n    my $min_even_pos29 = -1;\n    my $min_even_pos30 = -1;\n    my $min_even_pos31\
    \ = -1;\n    my $min_even_pos32 = -1;\n    my $min_even_pos33 = -1;\n    my $min_even_pos34\
    \ = -1;\n    my $min_even_pos35 = -1;\n    my $min_even_pos36 = -1;\n    my $min_even_pos37\
    \ = -1;\n    my $min_even_pos38 = -1;\n    my $min_even_pos39 = -1;\n    my $min_even_pos40\
    \ = -1;\n    my $min_even_pos41 = -1;\n    my $min_even_pos42 = -1;\n    my $min_even_pos43\
    \ = -1;\n    my $min_even_pos44 = -1;\n    my $min_even_pos45 = -1;\n    my $min_even_pos46\
    \ = -1;\n    my $min_even_pos47 = -1;\n    my $min_even_pos48 = -1;\n    my $min_even_pos49\
    \ = -1;\n    my $min_even_pos50 = -1;\n    my $min_even_pos51 = -1;\n    my $min_",
  "    my @result;\n    my $min_value = $arr[0];\n    my $index = 0;\n    my $smalest_value;\n\
    \    my $smalest_index;\n    my $i;\n    my $j;\n    my $k;\n    my $found;\n\
    \    my $min_even_value;\n    my $min_even_index;\n    my $min_index;\n    my\
    \ $even_value;\n    my $even_index;\n    my $even_values;\n    my $even_indexes;\n\
    \    my $even_values_count;\n    my $even_indexes_count;\n    my $even_values_index;\n\
    \    my $even_indexes_index;\n    my $even_values_value;\n    my $even_indexes_value;\n\
    \    my $even_values_index;\n    my $even_indexes_index;\n    my $even_values_value;\n\
    \    my $even_indexes_value;\n    my $even_values_index;\n    my $even_indexes_index;\n\
    \    my $even_values_value;\n    my $even_indexes_value;\n    my $even_values_index;\n\
    \    my $even_indexes_index;\n    my $even_values_value;\n    my $even_indexes_value;\n\
    \    my $even_values_index;\n    my $even_indexes_index;\n    my $even_values_value;\n\
    \    my $even_indexes_value;\n    my $even_values_index;\n    my $even_indexes_index;\n\
    \    my $even_values_value;\n    my $even_indexes_value;\n    my $even_values_index;\n\
    \    my $even_indexes_index;\n    my $even_values_value;\n    my $even_indexes_value;\n\
    \    my $even_values_index;\n    my $even_indexes_index;\n    my $even_values_value;\n\
    \    my $even_indexes_value;\n    my $even_values_index;\n    my $even_indexes_index;\n\
    \    my $even_values_value;\n    my $even_indexes_value;\n    my $even_values_index;\n\
    \    my $even_indexes_index;\n    my $even_values_value;\n    my $even_indexes_value;\n\
    \    my $even_values_index;\n    my $even_indexes_index;\n    my $even_values_value;\n\
    \    my $even_indexes_value;\n    my $even_values_index;\n    my $even_indexes_index;\n\
    \    my $even_values_value;\n    my $even_indexes_value;\n    my $even_values_index;\n\
    \    my $even_indexes_index;\n    my $even_values_value;\n    my $even_indexes_value;\n\
    \    my $even_values_index;\n    my $even_indexes_index;\n    my $even_values_value;\n\
    \    my $even_indexes_value;\n    my $even_values_index;\n    my $even_indexes_index;",
  "    my $min = $arr[0];\n    my $index = 0;\n    my $even = 0;\n    my $smalest_value;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $even\
    \ = $node;\n        }\n        if ($node < $min) {\n            $min = $node;\n\
    \            $smalest_value = $node;\n            $index = $even;\n        } elsif\
    \ ($node == $min) {\n            $index = $even;\n        }\n    }\n    return\
    \ $smalest_value, $index;\n}", "    my @res;\n    my $min;\n    my $index;\n \
    \   my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n\
    \    my $smallest_value;\n    my $smallest_index;\n    my $smallest_even_value;\n\
    \    my $smallest_even_index;\n    my $even_value;\n    my $even_index;\n    my\
    \ $smallest_index;\n    my $smallest_value;\n    my $smallest_even_value;\n  \
    \  my $smallest_even_index;\n    my $even_value;\n    my $even_index;\n    my\
    \ $i;\n    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n    my $smallest_value;\n\
    \    my $smallest_index;\n    my $smallest_even_value;\n    my $smallest_even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $even;\n    my $even_index;\n    my $smallest_value;\n    my $smallest_index;\n\
    \    my $smallest_even_value;\n    my $smallest_even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my\
    \ $even_index;\n    my $smallest_value;\n    my $smallest_index;\n    my $smallest_even_value;\n\
    \    my $smallest_even_index;\n    my $even_value;\n    my $even_index;\n    my\
    \ $i;\n    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n    my $smallest_value;\n\
    \    my $smallest_index;\n    my $smallest_even_value;\n    my $smallest_even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $even;\n    my $even_index;\n    my $smallest_value;\n    my $smallest_index;\n\
    \    my $smallest_even_value;\n    my $smallest_even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my\
    \ $even_index;\n    my $smallest_value;\n    my $smallest_index;\n    my $smallest_even_value;\n\
    \    my $smallest_even_index;\n    my $even_value;\n    my $even_index;\n    my\
    \ $i;\n    my $j", "    my $min = $arr->[0];\n    my $index = 0;\n    my $min_index\
    \ = 0;\n    my $even = 0;\n    my $smalest_value;\n    foreach my $val (@$arr)\
    \ {\n        if ($val % 2 == 0) {\n            $even++;\n        }\n        if\
    \ ($even < $min) {\n            $min = $even;\n            $min_index = $index;\n\
    \        }\n        $index++;\n    }\n    if ($min_index == 0) {\n        return\
    \ [];\n    }\n    return [ $smalest_value, $min_index ];\n}", "    my $min = $arr->[0];\n\
    \    my $min_index = 0;\n    my $index;\n    for (my $i = 1; $i <= $#$arr; $i++)\
    \ {\n        if ($arr->[$i] % 2 == 0) {\n            if ($arr->[$i] < $min) {\n\
    \                $min = $arr->[$i];\n                $min_index = $i;\n      \
    \      }\n        }\n    }\n    return $min_index unless $min;\n    return [ $min,\
    \ $min_index ];\n}", "    my $min = -1;\n    my $min_index;\n    my $smalest_value;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if\
    \ ($min == -1 || $node < $min) {\n                $min = $node;\n            \
    \    $min_index = $node;\n            }\n            else {\n                if\
    \ ($node < $min) {\n                    $min = $node;\n                    $min_index\
    \ = $node;\n                }\n            }\n        }\n    }\n    if ($min ==\
    \ -1) {\n        return [];\n    }\n    else {\n        return [$min, $min_index];\n\
    \    }\n}", "    my $min = -1;\n    my $min_index;\n    my $index;\n    my $value;\n\
    \    my $even;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n\
    \            $even = $node;\n        }\n        elsif ($node < $min) {\n     \
    \       $min = $node;\n            $min_index = $index;\n        }\n        elsif\
    \ ($node == $min) {\n            $index++;\n        }\n    }\n    if ($min ==\
    \ -1) {\n        return [];\n    }\n    return [ $min, $min_index ];\n}", "  \
    \  my $min = $arr[0];\n    my $index = 0;\n    my $even;\n    my $even_index;\n\
    \    foreach my $i (0 .. $#$arr) {\n        if ($arr[$i] % 2 == 0) {\n       \
    \     $even = $arr[$i];\n            $even_index = $i;\n        }\n        if\
    \ ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $index = $i;\n\
    \        }\n    }\n    return $even if ($even);\n    return $min if ($min == $arr[$index]);\n\
    \    return $arr[$index];\n}", "    my @res;\n    my $min;\n    my $index;\n \
    \   my $value;\n    my $even;\n    my $index;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n  \
    \  my $even;\n    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $even_index;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $even_index;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $even_index;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $even_index;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n\
    \    my $even_index;\n    my $index;\n    my $value;\n    my $even;\n    my $even_index;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $even_index;\n    my $index;\n\
    \    my $", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_value;\n    my $even_index;\n\
    \    my $min_value;\n    my $min_index;\n    my $index;\n    my $value;\n    my\
    \ $even_value;\n    my $even_index;\n    my $min_value;\n    my $min_index;\n\
    \    my $index;\n    my $value;\n    my $even_value;\n    my $even_index;\n  \
    \  my $min_value;\n    my $min_index;\n    my $index;\n    my $value;\n    my\
    \ $even_value;\n    my $even_index;\n    my $min_value;\n    my $min_index;\n\
    \    my $index;\n    my $value;\n    my $even_value;\n    my $even_index;\n  \
    \  my $min_value;\n    my $min_index;\n    my $index;\n    my $value;\n    my\
    \ $even_value;\n    my $even_index;\n    my $min_value;\n    my $min_index;\n\
    \    my $index;\n    my $value;\n    my $even_value;\n    my $even_index;\n  \
    \  my $min_value;\n    my $min_index;\n    my $index;\n    my $value;\n    my\
    \ $even_value;\n    my $even_index;\n    my $min_value;\n    my $min_index;\n\
    \    my $index;\n    my $value;\n    my $even_value;\n    my $even_index;\n  \
    \  my $min_value;\n    my $min_index;\n    my $index;\n    my $value;\n    my\
    \ $even_value;\n    my $even_index;\n    my $min_value;\n    my $min_index;\n\
    \    my $index;\n    my $value;\n    my $even_value;\n    my $even_index;\n  \
    \  my $min_value;\n    my $min_index;\n    my $index;\n    my $value;\n    my\
    \ $even_value;\n    my $even_index;\n    my $min_value;\n    my $min_index;\n\
    \    my $index;\n    my $value;\n    my $even_value;\n    my $even_index;\n  \
    \  my $min_value;\n    my $min_index;\n    my $index;\n    my $value;\n    my\
    \ $even_value;\n    my $even_index;\n    my $min_value;\n    my $min_index;\n\
    \    my $index;\n    my $value;\n    my $even_value;\n    my $even_index;\n  \
    \  my $min_value;\n    my $min_index;\n    my $index;\n    my $value;\n    my\
    \ $even_value;\n    my $even_index;\n    my $min_value;\n    my $min_index;\n\
    \    my $index;\n    ", "    my @result;\n    my $min;\n    my $index;\n    my\
    \ $value;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n\
    \    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my\
    \ $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n\
    \    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my\
    \ $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n\
    \    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my\
    \ $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n\
    \    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my\
    \ $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n\
    \    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my\
    \ $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n\
    \    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my\
    \ $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n\
    \    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n", "    my $min =\
    \ -1;\n    my $index;\n    my $smalest_value;\n    foreach my $node (@$arr) {\n\
    \        if ($min == -1 || $min > $node) {\n            $min = $node;\n      \
    \      $index = $node;\n            $smalest_value = $node;\n        } elsif ($node\
    \ == $smalest_value) {\n            $index = $node;\n        }\n    }\n    return\
    \ $smalest_value, $index;\n}", "    my $min = 0;\n    my $min_index = 0;\n   \
    \ my $smalest_value;\n    foreach my $node (@$arr) {\n        if ($node % 2 ==\
    \ 0) {\n            if ($node < $smalest_value) {\n                $smalest_value\
    \ = $node;\n                $min_index = $min;\n            }\n        }\n   \
    \     else {\n            if ($node < $min) {\n                $min = $node;\n\
    \                $min_index = $min_index;\n            }\n        }\n    }\n \
    \   return $min if $smalest_value && $min_index;\n    return [];\n}", "    my\
    \ $min = $arr[0];\n    my $index = 0;\n    my $result;\n    for (my $i = 1; $i\
    \ < @$arr; $i++) {\n        if ($arr[$i] % 2 == 0) {\n            if ($min > $arr[$i])\
    \ {\n                $min = $arr[$i];\n                $index = $i;\n        \
    \    }\n        }\n    }\n    if ($min == $arr[0]) {\n        $result = [$min,\
    \ $index];\n    } else {\n        $result = [];\n    }\n    return $result;\n}",
  "    my @res;\n    my $min;\n    my $index;\n    my $value;\n    my $even;\n   \
    \ my $i;", "    my $min = -1;\n    my $index;\n    my $smalest_value;\n    foreach\
    \ my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if ($min == -1)\
    \ {\n                $min = $node;\n                $index = $node;\n        \
    \        $smalest_value = $node;\n            }\n            elsif ($node < $smalest_value)\
    \ {\n                $min = $node;\n                $index = $node;\n        \
    \        $smalest_value = $node;\n            }\n        }\n    }\n    return\
    \ [$smalest_value, $index];\n}", "    my @res;\n    my $min;\n    my $index;\n\
    \    my $value;\n    my $even;\n    my $index;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n\
    \    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my\
    \ $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n\
    \    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my\
    \ $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n\
    \    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my\
    \ $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n\
    \    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my\
    \ $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n\
    \    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my\
    \ $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my $b;\n\
    \    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n", " \
    \   my @res;\n    my $min;\n    my $index;\n    my $value;\n    my $even;\n  \
    \  my $i;", "    my @res;\n    my $min = $arr[0];\n    my $min_index = 0;\n  \
    \  my $index = 0;\n    my $even_value = 0;\n    foreach my $val (@$arr) {\n  \
    \      if ($val % 2 == 0) {\n            $even_value = $val;\n        }\n    \
    \    if ($val < $min) {\n            $min = $val;\n            $min_index = $index;\n\
    \        }\n        $index++;\n    }\n    if ($min_index == 0) {\n        return\
    \ [];\n    }\n    push(@res, $min, $min_index);\n    foreach my $val (@$arr) {\n\
    \        if ($val % 2 == 0) {\n            if ($val < $min) {\n              \
    \  $min = $val;\n                $min_index = $index;\n            }\n       \
    \     $index++;\n        }\n    }\n    if ($min_index == 0) {\n        return\
    \ [];\n    }\n    push(@res, $min, $min_index);\n    return @res;\n}", "    my\
    \ @res;\n    my $min_even_value;\n    my $min_even_index;\n    my $index;\n  \
    \  my $value;\n    my $even_value;\n    my $even_index;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $even;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n", "    my @result;\n    my $min_value;\n    my $min_idx;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $even;\n    my $even_idx;\n    my $even_value;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $even\
    \ = $node;\n            $even_idx = $i;\n            $even_value = $node;\n  \
    \          $i++;\n        } else {\n            $even = $node + 1;\n         \
    \   $even_idx = $j;\n            $even_value = $node + 1;\n            $j++;\n\
    \        }\n        if ($even < $min_value) {\n            $min_value = $even;\n\
    \            $min_idx = $even_idx;\n        }\n    }\n    if ($min_value == 0)\
    \ {\n        return [];\n    }\n    push(@result, $min_value, $min_idx);\n   \
    \ return @result;\n}", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n", "    my $min_value = $arr[0];\n    my $min_idx = 0;\n    my $i =\
    \ 0;\n    my $j = 0;\n    my $k = 0;\n    my $even_value = 0;\n    my $even_idx\
    \ = 0;\n    my $even_value_count = 0;\n    my $even_idx_count = 0;\n    my $even_value_count2\
    \ = 0;\n    my $even_idx_count2 = 0;\n    my $even_value_count3 = 0;\n    my $even_idx_count3\
    \ = 0;\n    my $even_value_count4 = 0;\n    my $even_idx_count4 = 0;\n    my $even_value_count5\
    \ = 0;\n    my $even_idx_count5 = 0;\n    my $even_value_count6 = 0;\n    my $even_idx_count6\
    \ = 0;\n    my $even_value_count7 = 0;\n    my $even_idx_count7 = 0;\n    my $even_value_count8\
    \ = 0;\n    my $even_idx_count8 = 0;\n    my $even_value_count9 = 0;\n    my $even_idx_count9\
    \ = 0;\n    my $even_value_count10 = 0;\n    my $even_idx_count10 = 0;\n    my\
    \ $even_value_count11 = 0;\n    my $even_idx_count11 = 0;\n    my $even_value_count12\
    \ = 0;\n    my $even_idx_count12 = 0;\n    my $even_value_count13 = 0;\n    my\
    \ $even_idx_count13 = 0;\n    my $even_value_count14 = 0;\n    my $even_idx_count14\
    \ = 0;\n    my $even_value_count15 = 0;\n    my $even_idx_count15 = 0;\n    my\
    \ $even_value_count16 = 0;\n    my $even_idx_count16 = 0;\n    my $even_value_count17\
    \ = 0;\n    my $even_idx_count17 = 0;\n    my $even_value_count18 = 0;\n    my\
    \ $even_idx_count18 = 0;\n    my $even_value_count19 = 0;\n    my $even_idx_count19\
    \ = 0;\n    my $even_value_count20 = 0;\n    my $even_idx_count20 = 0;\n    my\
    \ $even_value_count21 = 0;\n    my $even_idx_count21 = 0;\n    my $even_value_count22\
    \ = 0;\n    my $even_idx_count22 = 0;\n    my $even_value_count23 = 0;\n    my\
    \ $even_idx_count23 = 0;\n    my $even_value_count24 = 0;\n    my $even_idx_count24\
    \ = 0;\n    my $even_value_count25 = 0;\n    my $even_idx_count25 = 0;\n    my\
    \ $even_value_count26 = 0;\n    my $even_idx_count26 = 0;\n    my $even_value_count27\
    \ = 0;\n    my $even_idx_count27 = 0;\n    my $even_value_count28 = 0;\n    my\
    \ $even_idx_count28 = 0;\n    my $even_value_count29 = 0;\n    my $even_idx_count29\
    \ = 0;\n    my $even_value_count30 = 0;\n    my $even_idx_count30 = 0;\n    my\
    \ $even", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n    my $j;\n\
    \    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n   \
    \ my $min_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n  \
    \  my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_index;\n    my $i;\n    my $j;\n    my $k;\n    my $even_index;\n\
    \    my $j;\n    my $k;\n    my $even_index;\n    my $min_index;\n", "    my $min\
    \ = -1;\n    my $min_index;\n    my $smalest_value;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $v;\n    my $count = 0;\n    my $even;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $even;\n    my $even_index;\n    my $even_value;\n\
    \    foreach my $val (@$arr) {\n        $value = $val;\n        $even = 0;\n \
    \       $even_index = 0;\n        $even_value = 0;\n        $index = 0;\n    \
    \    foreach my $i (0 .. $#$arr) {\n            if ($arr->[$i] % 2 == 0) {\n \
    \               $even = 1;\n                $even_index = $i;\n              \
    \  $even_value = $arr->[$i];\n            }\n            if ($even) {\n      \
    \          if ($value < $arr->[$i]) {\n                    $value = $arr->[$i];\n\
    \                    $index = $i;\n                }\n            }\n        }\n\
    \        if ($even) {\n            push(@res, $value, $index);\n        }\n  \
    \  }\n    return @res;\n}", "    my $min = -1;\n    my $min_index;\n    my $smalest_value;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if\
    \ ($min == -1) {\n                $min = $node;\n                $min_index =\
    \ $node;\n                $smalest_value = $node;\n            }\n           \
    \ elsif ($node < $smalest_value) {\n                $min = $node;\n          \
    \      $min_index = $node;\n                $smalest_value = $node;\n        \
    \    }\n        }\n    }\n    return $min == -1 ? [] : [ $smalest_value, $min_index\
    \ ];\n}", "    my $min = 0;\n    my $min_index = 0;\n    my $smalest_value;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            if\
    \ ($node < $smalest_value) {\n                $smalest_value = $node;\n      \
    \          $min_index = $min;\n            }\n        }\n        else {\n    \
    \        $min++;\n        }\n    }\n    return $smalest_value if $smalest_value\
    \ && $min_index;\n    return [];\n}", "    my $min_value = $arr[0];\n    my $min_idx\
    \ = 0;\n    my $smalest_value;\n    my $smalest_idx;\n    for (my $i = 1; $i <\
    \ @$arr; $i++) {\n        my $value = $arr[$i];\n        if ($value % 2 == 0)\
    \ {\n            if ($smalest_value eq \"\" || $smalest_value < $value) {\n  \
    \              $smalest_value = $value;\n                $smalest_idx = $i;\n\
    \            }\n        }\n        else {\n            if ($smalest_value eq \"\
    \" || $smalest_value < $value) {\n                $smalest_value = $value;\n \
    \               $smalest_idx = $i;\n            }\n        }\n    }\n    if ($smalest_value\
    \ eq \"\") {\n        return [];\n    }\n    return [ $smalest_value, $smalest_idx\
    \ ];\n}", "    my $min = $arr[0];\n    my $index = 0;\n    my $even;\n    foreach\
    \ my $val (@$arr) {\n        if ($val % 2 == 0) {\n            $even = $val;\n\
    \        }\n        if ($val < $min) {\n            $min = $val;\n           \
    \ $index = $even;\n        }\n    }\n    return $min, $index;\n}", "    my $min\
    \ = 0;\n    my $min_index = 0;\n    my $smalest_value;\n    my $smalest_index;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $even_value = 0;\n    foreach my $node\
    \ (@$arr) {\n        if ($node % 2 == 0) {\n            $even_value = $node;\n\
    \        }\n        if ($node < $smalest_value) {\n            $smalest_value\
    \ = $node;\n            $smalest_index = $i;\n        }\n        $i++;\n    }\n\
    \    if ($smalest_value == 0) {\n        return [];\n    }\n    foreach my $node\
    \ (@$arr) {\n        if ($node == $smalest_value) {\n            return [$smalest_value,\
    \ $smalest_index];\n        }\n        if ($node < $smalest_value) {\n       \
    \     $min = $node;\n            $min_index = $j;\n        }\n        $j++;\n\
    \    }\n    return [$min, $min_index];\n}", "    my $min = -1;\n    my $index;\n\
    \    my $even;\n    my $smalest_value;\n    foreach my $node (@$arr) {\n     \
    \   if ($node % 2 == 0) {\n            $even = $node;\n        }\n        elsif\
    \ ($node < $min) {\n            $min = $node;\n            $index = $node;\n \
    \       }\n    }\n    if ($min == -1) {\n        return [];\n    }\n    return\
    \ [ $smalest_value, $index ];\n}", "    my $min;\n    my $index;\n    my $even;\n\
    \    my $index;\n    my $result;\n    my $i;\n    my $j;\n    my $k;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $even;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    ", "    my\
    \ @res;\n    my $min = $arr[0];\n    my $min_index = 0;\n    my $i;\n    for ($i\
    \ = 0; $i < @$arr; $i++) {\n        if ($arr[$i] % 2 == 0) {\n            if ($min\
    \ > $arr[$i]) {\n                $min = $arr[$i];\n                $min_index\
    \ = $i;\n            }\n        }\n    }\n    if ($min > 0) {\n        push(@res,\
    \ [\"$min\", $min_index]);\n    }\n    return @res;\n}", "    my $min;\n    my\
    \ $index;\n    my $value;\n    my $even;\n    my $index;\n    my $even;\n    my\
    \ $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my\
    \ $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my\
    \ $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my\
    \ $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my\
    \ $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my\
    \ $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my\
    \ $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my\
    \ $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my\
    \ $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my\
    \ $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my\
    \ $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my\
    \ $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my\
    \ $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my\
    \ $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my\
    \ $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my\
    \ $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my\
    \ $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my\
    \ $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my\
    \ $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my\
    \ $even;\n    my $index;\n    my $even;\n    my $index;\n    my $even;\n    my\
    \ $index;\n    my $even;\n    my $index;\n    my $even;\n    my $index;\n    my\
    \ $even;\n    my $index;\n    my $even;", "    my $min = 0;\n    my $smalest_value;\n\
    \    my $smalest_index;\n    foreach my $node (@$arr) {\n        if ($node % 2\
    \ == 0) {\n            if ($smalest_value == 0) {\n                $smalest_value\
    \ = $node;\n                $smalest_index = $min;\n            }\n          \
    \  else {\n                if ($node < $smalest_value) {\n                   \
    \ $smalest_value = $node;\n                    $smalest_index = $min;\n      \
    \          }\n            }\n        }\n        else {\n            $min++;\n\
    \        }\n    }\n    return [$smalest_value, $smalest_index];\n}", "    my @result;\n\
    \    my $min;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n\
    \    my $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $even;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    my $index;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $index;\n    my $value;\n    my $even;\n", "    my @res;\n    my $min;\n\
    \    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $found;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_even_index;\n    my $min_even_value;\n    my $even;\n    my $even_count;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_value;\n\
    \    my $even_index;\n    my $even_value;\n    my $even_index;\n    my $even_",
  "    my @res;\n    my $min;\n    my $index;\n    my $value;\n    my $i = 0;\n  \
    \  foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $value\
    \ = $node;\n            $index = $i;\n        }\n        $i++;\n    }\n    if\
    \ ($value) {\n        if ($min == $value) {\n            push(@res, [\"$value\"\
    , $index]);\n        } else {\n            foreach my $node (@$arr) {\n      \
    \          if ($node == $value) {\n                    $min = $node;\n       \
    \             $index = $i;\n                }\n                $i++;\n       \
    \     }\n            push(@res, [\"$min\", $index]);\n        }\n    } else {\n\
    \        push(@res, []);\n    }\n    return @res;\n}", "    my $min = -1;\n  \
    \  my $index;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n\
    \            if ($min == -1) {\n                $min = $node;\n              \
    \  $index = 0;\n            }\n            elsif ($node < $min) {\n          \
    \      $min = $node;\n                $index = 0;\n            }\n           \
    \ elsif ($node == $min) {\n                $index++;\n            }\n        }\n\
    \    }\n    return $min == -1 ? [] : [ $min, $index ];\n}", "    my $min = -1;\n\
    \    my $min_index;\n    my $smalest_value;\n    foreach my $node (@$arr) {\n\
    \        if ($node % 2 == 0) {\n            if ($min == -1 || $node < $smalest_value)\
    \ {\n                $min = $node;\n                $min_index = $node;\n    \
    \            $smalest_value = $node;\n            }\n        }\n    }\n    return\
    \ $min == -1 ? [] : [ $smalest_value, $min_index ];\n}", "    my $min = $arr[0];\n\
    \    my $index = 0;\n    my $even = 0;\n    my $smalest_value;\n    my $smalest_index;\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $even++;\n\
    \            if ($even < $min) {\n                $min = $even;\n            \
    \    $smalest_value = $node;\n                $smalest_index = $index;\n     \
    \       }\n        }\n        $index++;\n    }\n    return [$smalest_value, $smalest_index]\
    \ if $smalest_value;\n    return [];\n}", "    my @res;\n    my $min = 0;\n  \
    \  my $min_index = 0;\n    my $smalest_value;\n    foreach my $n (@$arr) {\n \
    \       if ($n % 2 == 0) {\n            if ($min == 0) {\n                $min\
    \ = $n;\n                $min_index = $n;\n                $smalest_value = $n;\n\
    \            } else {\n                if ($n < $smalest_value) {\n          \
    \          $min = $n;\n                    $min_index = $n;\n                \
    \    $smalest_value = $n;\n                }\n            }\n        }\n    }\n\
    \    if ($min != 0) {\n        push(@res, [ $smalest_value, $min_index ]);\n \
    \   }\n    return @res;\n}", "    my $min = $arr[0];\n    my $index = 0;\n   \
    \ my $found = 0;\n    foreach my $val (@$arr) {\n        if ($val % 2 == 0) {\n\
    \            $found = 1;\n            if ($val < $min) {\n                $min\
    \ = $val;\n                $index = $found;\n            }\n        }\n    }\n\
    \    return $found ? [$min, $index] : [];\n}", "    my @res;\n    my $min;\n \
    \   my $index;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $found;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_even_index;\n    my $min_even_value;\n    my $even_value;\n    my\
    \ $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_count;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $ev", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n  \
    \  my $i;\n    my $j;\n    my $k;\n    my $even;\n    my $even_index;\n    my\
    \ $even_value;\n    my $min_value;\n    my $min_index;\n    my $min_even_value;\n\
    \    my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n \
    \   my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n  \
    \  my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n   \
    \ my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n    my\
    \ $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n\
    \    my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n \
    \   my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n  \
    \  my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n   \
    \ my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n    my\
    \ $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n\
    \    my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n \
    \   my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n  \
    \  my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n   \
    \ my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n    my\
    \ $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n\
    \    my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n \
    \   my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n  \
    \  my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n   \
    \ my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n    my\
    \ $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n    my $min_even_index;\n",
  "    my $min = -1;\n    my $min_index = 0;\n    my $index = 0;\n    foreach my $node\
    \ (@$arr) {\n        if ($node % 2 == 0) {\n            if ($min == -1) {\n  \
    \              $min = $node;\n                $min_index = $index;\n         \
    \   } else {\n                if ($node < $min) {\n                    $min =\
    \ $node;\n                    $min_index = $index;\n                }\n      \
    \      }\n            $index++;\n        }\n    }\n    if ($min == -1) {\n   \
    \     return [];\n    }\n    return [ $min, $min_index ];\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

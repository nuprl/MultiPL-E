name: HumanEval_161_solve
language: pl
prompt: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
  \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
  \ contains no letters, reverse the string.\n# The function should return the resulted\
  \ string.\n# Examples\n# >>> solve(\"1234\")\n# \"4321\"\n# >>> solve(\"ab\")\n\
  # \"AB\"\n# >>> solve(\"#a@C\")\n# \"#A@c\"\nsub solve {\n    my($s) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n\
  \        if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1234\"\
  ),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
  \   if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $reverse = \"\";\n    my $i = 0;\n    my $len = length($s);\n\
    \    while($i < $len) {\n        if($s[i] eq \"#\") {\n            $reverse .=\
    \ $s[$i];\n            $i++;\n        }\n        elsif($s[i] eq \"@\") {\n   \
    \         $reverse .= $s[$i];\n            $i++;\n        }\n        elsif($s[i]\
    \ eq \"A\") {\n            $reverse .= $s[$i];\n            $i++;\n        }\n\
    \        elsif($s[i] eq \"B\") {\n            $reverse .= $s[$i];\n          \
    \  $i++;\n        }\n        elsif($s[i] eq \"C\") {\n            $reverse .=\
    \ $s[$i];\n            $i++;\n        }\n        elsif($s[i] eq \"a\") {\n   \
    \         $reverse .= $s[$i];\n            $i++;\n        }\n        elsif($s[i]\
    \ eq \"b\") {\n            $reverse .= $s[$i];\n            $i++;\n        }\n\
    \        elsif($s[i] eq \"c\") {\n            $reverse .= $s[$i];\n          \
    \  $i++;\n        }\n        elsif($s[i] eq \"@\") {\n            $reverse .=\
    \ $s[$i];\n            $i++;\n        }\n        elsif($s[i] eq \"#\") {\n   \
    \         $reverse .= $s[$i];\n            $i++;\n        }\n        elsif($s[i]\
    \ eq \"A\") {\n            $reverse .= $s[$i];\n            $i++;\n        }\n\
    \        elsif($s[i] eq \"B\") {\n            $reverse .= $s[$i];\n          \
    \  $i++;\n        }\n        elsif($s[i] eq \"C\") {\n            $reverse .=\
    \ $s[$i];\n            $i++;\n        }\n        elsif($s[i] eq \"a\") {\n   \
    \         $reverse .= $s[$i];\n            $i++;\n        }\n        elsif($s[i]\
    \ eq \"b\") {\n            $reverse .= $s[$i];\n            $i++;\n        }\n\
    \        elsif($s[i] eq \"c\") {\n            $reverse .= $s[$i];\n          \
    \  $i++;\n        }\n        elsif($s[i] eq \"@\") {\n            $reverse .=\
    \ $s[$i];\n            $i++;\n        }\n        elsif($s[i] eq \"#\") {\n   \
    \         $reverse .= $s[$i];\n            $i++;\n        }\n        elsif($s[i]\
    \ eq \"A\") {\n            $reverse .= $s[$i];\n            $i++", "    my $len\
    \ = length($s);\n    my $i = 0;\n    my $result = \"\";\n    my $temp;\n    my\
    \ $flag = 0;\n    my $flag2 = 0;\n    my $flag3 = 0;\n    my $flag4 = 0;\n   \
    \ my $flag5 = 0;\n    my $flag6 = 0;\n    my $flag7 = 0;\n    my $flag8 = 0;\n\
    \    my $flag9 = 0;\n    my $flag10 = 0;\n    my $flag11 = 0;\n    my $flag12\
    \ = 0;\n    my $flag13 = 0;\n    my $flag14 = 0;\n    my $flag15 = 0;\n    my\
    \ $flag16 = 0;\n    my $flag17 = 0;\n    my $flag18 = 0;\n    my $flag19 = 0;\n\
    \    my $flag20 = 0;\n    my $flag21 = 0;\n    my $flag22 = 0;\n    my $flag23\
    \ = 0;\n    my $flag24 = 0;\n    my $flag25 = 0;\n    my $flag26 = 0;\n    my\
    \ $flag27 = 0;\n    my $flag28 = 0;\n    my $flag29 = 0;\n    my $flag30 = 0;\n\
    \    my $flag31 = 0;\n    my $flag32 = 0;\n    my $flag33 = 0;\n    my $flag34\
    \ = 0;\n    my $flag35 = 0;\n    my $flag36 = 0;\n    my $flag37 = 0;\n    my\
    \ $flag38 = 0;\n    my $flag39 = 0;\n    my $flag40 = 0;\n    my $flag41 = 0;\n\
    \    my $flag42 = 0;\n    my $flag43 = 0;\n    my $flag44 = 0;\n    my $flag45\
    \ = 0;\n    my $flag46 = 0;\n    my $flag47 = 0;\n    my $flag48 = 0;\n    my\
    \ $flag49 = 0;\n    my $flag50 = 0;\n    my $flag51 = 0;\n    my $flag52 = 0;\n\
    \    my $flag53 = 0;\n    my $flag54 = 0;\n    my $flag55 = 0;\n    my $flag56\
    \ = 0;\n    my $flag57 = 0;\n    my $flag58 = 0;\n    my $flag59 = 0;\n    my\
    \ $flag60 = 0;\n    my $flag61 = 0;\n    my $flag62 = 0;\n    my $flag63 = 0;\n\
    \    my $flag64 = 0;\n    my $flag65 = 0;\n    my $flag66 = 0;\n    my $flag67\
    \ = 0;\n    my $flag68 = 0;\n    my $flag69 = 0;\n    my $flag70 = 0;\n    my\
    \ $flag71 = 0;\n    my $flag72 = 0;\n    my $flag73 = 0;\n    my $flag74 = 0;\n\
    \    my $flag75 = 0;\n    my $flag76 = 0;\n    my $flag77 = 0;\n    my $flag78\
    \ = 0;\n    my $flag79 = 0;\n    my $flag80 = 0;\n    my $flag81 = 0;\n    my\
    \ $flag82 = 0;\n    my $flag83", "    $s =~ s/^([a-z])/uc($1)/ge;\n    $s =~ s/([A-Z])/uc($1)/ge;\n\
    \    $s =~ s/^([A-Z])/uc($1)/ge;\n    return $s;\n}", "    my $len = length($s);\n\
    \    my $i = 0;\n    my $res = \"\";\n    while($i < $len) {\n        if($s[i]\
    \ eq \"#\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"@\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"A\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"B\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"C\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"a\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"b\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"c\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"@\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"#\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"A\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"B\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"C\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"a\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"b\") {\n            $res .= $s[$i];\n            $i++;\n        } elsif($s[i]\
    \ eq \"c\") {\n            $res .= $s[$i];\n            $i++;\n        } else\
    \ {\n            $res .= $s[$i];\n            $i++;\n        }\n    }\n    return\
    \ $res;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=perl,string |>\n<code>", " \
    \   $s =~ s/^#//;\n    $s =~ s/^@//;\n    $s =~ s/^&//;\n    $s =~ s/^%//;\n \
    \   $s =~ s/^$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/\\\
    s+/ /g;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n  \
    \  $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n   \
    \ $s =~ s/^\\s+//;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//;\n  \
    \  $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+/ /g;\n   \
    \ $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+/ /g;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n  \
    \  $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n   \
    \ $s =~ s/^\\s+//;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//;\n  \
    \  $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\\
    s+//;", "    my $res = \"\";\n    my $i = 0;\n    while($i < length($s)) {\n \
    \       my $c = substr($s, $i, 1);\n        if($c =~ /[a-z]/i) {\n           \
    \ $res .= uc($c);\n            $i++;\n        } elsif($c =~ /[A-Z]/i) {\n    \
    \        $res .= lc($c);\n            $i++;\n        } else {\n            $res\
    \ .= $c;\n            $i++;\n        }\n    }\n    return $res;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfunction reverse($str){\n    $str=~s/^([a-z])/\\\
    u$1/i;\n    $str=~s/([A-Z])/\\u$1/i;\n    $str=~s/^([A-Z])/\\u$1/i;\n    $str=~s/([a-z])/\\\
    u$1/i;\n    return $str;\n}\n</code>\n<|/ a tags=perl |>\n<| c |>\nPlease explain\
    \ your solution\n<|/ c |>\n<| c |>\nThis does not provide an answer to the question.\
    \ Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26866523)\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26866523)\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange",
  "    my $result = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $len = length($s);\n\
    \    while($i < $len) {\n        if($s[i] eq \"#\") {\n            $result .=\
    \ substr($s, $j, $i - $j);\n            $j = $i + 1;\n        }\n        elsif($s[i]\
    \ eq \"@\") {\n            $result .= substr($s, $j, $i - $j);\n            $j\
    \ = $i + 1;\n        }\n        elsif($s[i] eq \"$\") {\n            $result .=\
    \ substr($s, $j, $i - $j);\n            $j = $i + 1;\n        }\n        elsif($s[i]\
    \ eq \"%\") {\n            $result .= substr($s, $j, $i - $j);\n            $j\
    \ = $i + 1;\n        }\n        elsif($s[i] eq \"^\") {\n            $result .=\
    \ substr($s, $j, $i - $j);\n            $j = $i + 1;\n        }\n        elsif($s[i]\
    \ eq \"&\") {\n            $result .= substr($s, $j, $i - $j);\n            $j\
    \ = $i + 1;\n        }\n        elsif($s[i] eq \"*\") {\n            $result .=\
    \ substr($s, $j, $i - $j);\n            $j = $i + 1;\n        }\n        elsif($s[i]\
    \ eq \"(\") {\n            $result .= substr($s, $j, $i - $j);\n            $j\
    \ = $i + 1;\n        }\n        elsif($s[i] eq \")\") {\n            $result .=\
    \ substr($s, $j, $i - $j);\n            $j = $i + 1;\n        }\n        elsif($s[i]\
    \ eq \"[\") {\n            $result .= substr($s, $j, $i - $j);\n            $j\
    \ = $i + 1;\n        }\n        elsif($s[i] eq \"]\") {\n            $result .=\
    \ substr($s, $j, $i - $j);\n            $j = $i + 1;\n        }\n        elsif($s[i]\
    \ eq \"<\") {\n            $result .= substr($s, $j, $i - $j);\n            $j\
    \ = $i + 1;\n        }\n        elsif($s[i] eq \">\") {\n            $result .=\
    \ substr($s, $j, $i - $j);\n            $j = $i + 1;\n        }\n        elsif($s[i]\
    \ eq \"|\") {\n            $result .= substr($s, $j, $i - $j);\n            $j\
    \ = $i + 1;\n        }\n        elsif($s[i] eq \"-\") {\n            $result .=\
    \ substr($s, $j, $i - $j", "    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;", "    my @chars = split(//, $s);\n    my $res = \"\";\n    foreach\
    \ my $char (@chars) {\n        my $case = $char =~ /[a-z]/i ? \"upper\" : \"lower\"\
    ;\n        $res .= $char =~ /[a-z]/i ? uc($char) : $char;\n    }\n    return $res;\n\
    }\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThis doesn't work if the string\
    \ contains more than one letter. For example, `solve(\"ab\")` returns `\"A\"`\
    \ instead of `\"AB\"`.\n<|/ c |>\n<| c |>\n: Yes, you are right. I've edited my\
    \ answer to fix this problem.\n<|/ c |>\n<| a tags=perl,regex |>\n<code>", " \
    \   my $result = \"\";\n    my $i = 0;\n    my $len = length($s);\n    while($i\
    \ < $len) {\n        if($s[i] eq \"#\") {\n            $result .= $s[$i-1];\n\
    \            $i++;\n        } elsif($s[i] eq \"@\") {\n            $result .=\
    \ $s[$i-1];\n            $i++;\n        } elsif($s[i] eq \"$\") {\n          \
    \  $result .= $s[$i-1];\n            $i++;\n        } elsif($s[i] eq \"^\") {\n\
    \            $result .= $s[$i-1];\n            $i++;\n        } elsif($s[i] eq\
    \ \"&\") {\n            $result .= $s[$i-1];\n            $i++;\n        } elsif($s[i]\
    \ eq \"*\") {\n            $result .= $s[$i-1];\n            $i++;\n        }\
    \ elsif($s[i] eq \"(\") {\n            $result .= $s[$i-1];\n            $i++;\n\
    \        } elsif($s[i] eq \")\") {\n            $result .= $s[$i-1];\n       \
    \     $i++;\n        } elsif($s[i] eq \"<\") {\n            $result .= $s[$i-1];\n\
    \            $i++;\n        } elsif($s[i] eq \">\") {\n            $result .=\
    \ $s[$i-1];\n            $i++;\n        } elsif($s[i] eq \"|\") {\n          \
    \  $result .= $s[$i-1];\n            $i++;\n        } elsif($s[i] eq \"-\") {\n\
    \            $result .= $s[$i-1];\n            $i++;\n        } elsif($s[i] eq\
    \ \".\") {\n            $result .= $s[$i-1];\n            $i++;\n        } elsif($s[i]\
    \ eq \"/\") {\n            $result .= $s[$i-1];\n            $i++;\n        }\
    \ elsif($s[i] eq \"?\") {\n            $result .= $s[$i-1];\n            $i++;\n\
    \        } elsif($s[i] eq \"=\") {\n            $result .= $s[$i-1];\n       \
    \     $i++;\n        } elsif($s[i] eq \"[\") {\n            $result .= $s[$i-1];\n\
    \            $i++;\n        } elsif($s[i] eq \"]\") {\n            $result .=\
    \ $s[$i-1];\n            $i++;\n        } elsif($s[i] eq \"{\") {\n          \
    \  $result .= $s[$i-1];\n            $i++;\n        } elsif($s[i] eq \"}\") {\n\
    \            $result .= $", "    my $res = \"\";\n    my $i = 0;\n    my $j =\
    \ 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o\
    \ = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my\
    \ $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n  \
    \  my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;", "    my $res = \"\";\n    my\
    \ $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n  \
    \  my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n\
    \    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n\
    \    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n\
    \    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n\
    \    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n\
    \    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n\
    \    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n\
    \    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n\
    \    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n\
    \    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n\
    \    my $Z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g", "    my $result = \"\";\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my\
    \ $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n  \
    \  my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n\
    \    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n\
    \    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n\
    \    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n\
    \    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n\
    \    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n\
    \    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n\
    \    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n\
    \    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n\
    \    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n\
    \    my $Z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g", "    my $result = \"\";\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $len = length($s);\n    \n    while($i < $len)\
    \ {\n        my $c = substr($s, $i, 1);\n        \n        if($c eq \"\") {\n\
    \            $i++;\n            next;\n        }\n        \n        if($c eq \"\
    #\") {\n            $i++;\n            $c = substr($s, $i, 1);\n            $c\
    \ = $c =~ tr/#/a/;\n            $result += $c;\n            $i++;\n          \
    \  next;\n        }\n        \n        if($c eq \"@\") {\n            $i++;\n\
    \            $c = substr($s, $i, 1);\n            $c = $c =~ tr/@/c/;\n      \
    \      $result += $c;\n            $i++;\n            next;\n        }\n     \
    \   \n        if($c eq \"A\") {\n            $i++;\n            $c = substr($s,\
    \ $i, 1);\n            $c = $c =~ tr/A/A/;\n            $result += $c;\n     \
    \       $i++;\n            next;\n        }\n        \n        if($c eq \"B\"\
    ) {\n            $i++;\n            $c = substr($s, $i, 1);\n            $c =\
    \ $c =~ tr/B/B/;\n            $result += $c;\n            $i++;\n            next;\n\
    \        }\n        \n        if($c eq \"C\") {\n            $i++;\n         \
    \   $c = substr($s, $i, 1);\n            $c = $c =~ tr/C/C/;\n            $result\
    \ += $c;\n            $i++;\n            next;\n        }\n        \n        if($c\
    \ eq \"D\") {\n            $i++;\n            $c = substr($s, $i, 1);\n      \
    \      $c = $c =~ tr/D/D/;\n            $result += $c;\n            $i++;\n  \
    \          next;\n        }\n        \n        if($c eq \"E\") {\n           \
    \ $i++;\n            $c = substr($s, $i, 1);\n            $c = $c =~ tr/E/E/;\n\
    \            $result += $c;\n            $i++;\n            next;\n        }\n\
    \        \n        if($c eq \"F\") {\n            $i++;\n            $c = substr($s,\
    \ $i, 1);\n            $c = $c =~ tr/F/F/;\n            $result += $c;\n     \
    \       $i++;\n            next;\n        }\n        \n        if($c eq \"G\"\
    ) {\n            $i++;\n            $c = substr($s, $i, 1);\n            $c =\
    \ $c =~ tr/G/G/;\n            $result += $c;\n            $i++;\n            next;\n\
    \        }\n        ", "    my $i = 0;\n    my $len = length($s);\n    my $res\
    \ = \"\";\n    my $flag = 0;\n    my $temp;\n    my $temp2;\n    my $temp3;\n\
    \    my $temp4;\n    my $temp5;\n    my $temp6;\n    my $temp7;\n    my $temp8;\n\
    \    my $temp9;\n    my $temp10;\n    my $temp11;\n    my $temp12;\n    my $temp13;\n\
    \    my $temp14;\n    my $temp15;\n    my $temp16;\n    my $temp17;\n    my $temp18;\n\
    \    my $temp19;\n    my $temp20;\n    my $temp21;\n    my $temp22;\n    my $temp23;\n\
    \    my $temp24;\n    my $temp25;\n    my $temp26;\n    my $temp27;\n    my $temp28;\n\
    \    my $temp29;\n    my $temp30;\n    my $temp31;\n    my $temp32;\n    my $temp33;\n\
    \    my $temp34;\n    my $temp35;\n    my $temp36;\n    my $temp37;\n    my $temp38;\n\
    \    my $temp39;\n    my $temp40;\n    my $temp41;\n    my $temp42;\n    my $temp43;\n\
    \    my $temp44;\n    my $temp45;\n    my $temp46;\n    my $temp47;\n    my $temp48;\n\
    \    my $temp49;\n    my $temp50;\n    my $temp51;\n    my $temp52;\n    my $temp53;\n\
    \    my $temp54;\n    my $temp55;\n    my $temp56;\n    my $temp57;\n    my $temp58;\n\
    \    my $temp59;\n    my $temp60;\n    my $temp61;\n    my $temp62;\n    my $temp63;\n\
    \    my $temp64;\n    my $temp65;\n    my $temp66;\n    my $temp67;\n    my $temp68;\n\
    \    my $temp69;\n    my $temp70;\n    my $temp71;\n    my $temp72;\n    my $temp73;\n\
    \    my $temp74;\n    my $temp75;\n    my $temp76;\n    my $temp77;\n    my $temp78;\n\
    \    my $temp79;\n    my $temp80;\n    my $temp81;\n    my $temp82;\n    my $temp83;\n\
    \    my $temp84;\n    my $temp85;\n    ", "    my $res = \"\";\n    my $i = 0;\n\
    \    while($i < length($s)) {\n        if($s[i] eq substr($s, $i, 1)) {\n    \
    \        $res .= substr($s, $i, 1) . substr($s, $i+1, 1);\n            $i += 2;\n\
    \        } else {\n            $res .= $s[i];\n        }\n        $i++;\n    }\n\
    \    return $res;\n}\n</code>\n<|/ a tags=perl,string,reverse |>\n<| c |>\nThis\
    \ doesn't work if the string contains multiple letters.\n<|/ c |>\n<| c |>\nIt\
    \ does work if the string contains multiple letters. Try it yourself.\n<|/ c |>\n\
    <| c |>\nIt does work if the string contains multiple letters. Try it yourself.\n\
    <|/ c |>\n<| c |>\nIt does work if the string contains multiple letters. Try it\
    \ yourself.\n<|/ c |>\n<| c |>\nIt does work if the string contains multiple letters.\
    \ Try it yourself.\n<|/ c |>\n<| a dscore=2 |>\n<code>", "    my $ret = \"\";\n\
    \    my $i = 0;\n    my $len = length($s);\n    \n    while($i < $len) {\n   \
    \     my $c = substr($s, $i, 1);\n        \n        if($c =~ /[a-z]/) {\n    \
    \        $ret .= uc($c);\n            $i++;\n        }\n        elsif($c =~ /[A-Z]/)\
    \ {\n            $ret .= lc($c);\n            $i++;\n        }\n        else {\n\
    \            $ret .= $c;\n            $i++;\n        }\n    }\n    \n    return\
    \ $ret;\n}\n</code>\n<|/ a tags=perl,string,regex |>\n<| c |>\nThanks for your\
    \ answer. Your code works perfectly but I am looking for a solution using regex.\n\
    <|/ c |>\n<| c |>\nI added a regex solution as well. Hope it helps.\n<|/ c |>\n\
    <| c |>\nThanks for your answer. Your code works perfectly but I am looking for\
    \ a solution using regex.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code\
    \ works perfectly but I am looking for a solution using regex.\n<|/ c |>\n<| a\
    \ tags=perl,string,regex |>\n<code>\nuse strict;\nuse warnings;", "    my $res\
    \ = \"\";\n    my $i = 0;\n    while($i < length($s)) {\n        if($s[i] eq substr($s,\
    \ $i, 1)) {\n            $res .= substr($s, $i, 1) . substr($s, $i+1, 1);\n  \
    \          $i += 2;\n        }\n        else {\n            $res .= $s[i];\n \
    \       }\n        $i += 1;\n    }\n    return $res;\n}", "    my $res = \"\"\
    ;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m =\
    \ 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r\
    \ = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my\
    \ $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n  \
    \  my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;",
  "    my $result = \"\";\n    my $i = 0;\n    my $len = length($s);\n    \n    while($i\
    \ < $len) {\n        my $c = substr($s, $i, 1);\n        \n        if($c =~ /[a-z]/i)\
    \ {\n            $result .= uc($c);\n            $i++;\n        }\n        elsif($c\
    \ =~ /[A-Z]/i) {\n            $result .= lc($c);\n            $i++;\n        }\n\
    \        else {\n            $result .= $c;\n            $i++;\n        }\n  \
    \  }\n    \n    return $result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work\
    \ if there are multiple letters in the string. For example, `solve(\"ab\")` returns\
    \ `\"Ab\"` instead of `\"ba\"`.\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed\
    \ it now. Thanks for pointing it out.\n<|/ c |>\n<| a dscore=0 |>\n<code>"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

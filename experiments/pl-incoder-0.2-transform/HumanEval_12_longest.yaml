name: HumanEval_12_longest
language: pl
prompt: "# Out of list of strings, return the longest one. Return the first one in\
  \ case of multiple\n# strings of the same length. Return None in case the input\
  \ list is empty.\n# >>> longest([])\n# undef\n# >>> longest([\"a\", \"b\", \"c\"\
  ])\n# \"a\"\n# >>> longest([\"a\", \"bb\", \"ccc\"])\n# \"ccc\"\nsub longest {\n\
  \    my($strings) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&longest;\n\
  \        if(eq_deeply($candidate->([]),undef)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([\"x\", \"y\", \"\
  z\"]),\"x\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"\
  abc\"]),\"zzzz\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  }\n\ntesthumaneval();"
completions: ["    my $longest;\n    my $longestLength = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n \
    \   return;\n}", "    my $longest = undef;\n    my $longestLength = undef;\n \
    \   foreach my $string (@$strings) {\n        if (defined $longestLength and length($string)\
    \ > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = length($string);\n        }\n    }\n    return $longest if defined $longest;\n\
    \    return undef;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest = undef;\n    my $length = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $len = length($string);\n        if ($len\
    \ > $length) {\n            $longest = $string;\n            $length = $len;\n\
    \        }\n    }\n    return $longest unless defined $longest;\n    return $longest;\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}",
  "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest if defined $longest;\n    return;\n}", "    my $longest =\
    \ undef;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if (defined $longest and $len > length($longest)) {\n            $longest\
    \ = $string;\n        }\n    }\n    return $longest;\n}", "    my $longest;\n\
    \    my $longestLength = -1;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($longestLength < $length) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest unless $longestLength == 0;\n    my $first;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length == $longestLength) {\n            last if ($first eq $string);\n  \
    \          $first = $string;\n        }\n    }\n    return $first;\n}", "    my\
    \ $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return;\n}",
  "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return;\n}",
  "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
    \       $length += length($string);\n        if ($length > $longest) {\n     \
    \       $longest = $length;\n        }\n    }\n    return $longest ? $strings[$#{$strings}-1]\
    \ : undef;\n}", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest;\n    my $length = 0;\n    foreach my $string\
    \ (@$strings) {\n        $length += length($string);\n        if ($length > $longest)\
    \ {\n            $longest = $length;\n        }\n    }\n    return $longest ?\
    \ $strings[$longest-1] : undef;\n}", "    my $longest;\n    my $length = 0;\n\
    \    foreach my $string (@$strings) {\n        my $len = length($string);\n  \
    \      if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest if defined $longest;\n    return;\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest unless defined $longest;\n    return $strings[0];\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}",
  "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}",
  "    my $longest = undef;\n    foreach my $string (@$strings) {\n        my $len\
    \ = length($string);\n        if (defined $longest && $len > $longest) {\n   \
    \         $longest = $len;\n        }\n    }\n    return $longest ? $strings[$#{$strings}]\
    \ : $longest;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n \
    \   return;\n}", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($longestLength > $length) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest = undef;\n    my $length = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($length\
    \ > $length) {\n            $longest = $string;\n        }\n    }\n    return\
    \ $longest if defined $longest;\n    return $strings[0];\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return undef;\n}", " \
    \   my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}",
  "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest unless defined $longest;\n    return $strings[0];\n}", " \
    \   my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($longestLength < $length)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return undef;\n\
    }", "    my $longest = undef;\n    my $longestLength = -1;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($longestLength\
    \ < $length) {\n            $longest = $string;\n            $longestLength =\
    \ $length;\n        }\n    }\n    return $longest if defined $longest;\n    return;\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}",
  "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
    }", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest;\n    foreach my $string (@$strings) {\n     \
    \   my $len = length($string);\n        if ($len > length($longest)) {\n     \
    \       $longest = $string;\n        }\n    }\n    return $longest if defined\
    \ $longest;\n    return;\n}", "    my $longest;\n    my $longestLength = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($longestLength == 0) {\n            $longest = $string;\n       \
    \     $longestLength = $length;\n        } elsif ($longestLength == $length) {\n\
    \            $longest = $string if ($string eq $longest);\n        } else {\n\
    \            $longest = undef;\n        }\n    }\n    return $longest if (defined\
    \ $longest);\n    return undef;\n}", "    my $longest;\n    my $length = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $length) {\n            $longest = $string;\n        }\n\
    \    }\n    return $longest if defined $longest;\n    return;\n}", "    my $longest\
    \ = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n      \
    \  my $length = length $string;\n        if ($length > $length) {\n          \
    \  $longest = $string;\n        }\n    }\n    return $longest unless defined $longest;\n\
    \    return $strings[0];\n}", "    my $longest;\n    my $longestLength = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return;\n}", "    my $longest;\n    my $length = 0;\n\
    \    foreach my $string (@$strings) {\n        my $len = length($string);\n  \
    \      if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest if defined $longest;\n    return;\n\
    }", "    my $longest;\n    foreach my $string (@$strings) {\n        if (length($string)\
    \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n \
    \   return $longest if defined $longest;\n    return;\n}", "    my $longest =\
    \ undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings) {\n \
    \       my $length = length($string);\n        if ($length > $longestLength) {\n\
    \            $longest = $string;\n            $longestLength = $length;\n    \
    \    }\n    }\n    return $longest unless defined $longest;\n    return $longest;\n\
    }", "    my $longest;\n    foreach my $string (@$strings) {\n        my $len =\
    \ length($string);\n        if ($len > length($longest)) {\n            $longest\
    \ = $string;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n \
    \   return;\n}", "    my $longest = undef;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if (defined $longest and $len\
    \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n \
    \   return $longest;\n}", "    my $longest;\n    my $first_longest;\n    foreach\
    \ my $string (@$strings) {\n        if (defined $longest) {\n            last\
    \ if (length($string) > length($longest));\n        }\n        $longest = $string;\n\
    \        $first_longest = $string if (defined $first_longest && length($string)\
    \ == length($first_longest));\n    }\n    return $first_longest if (defined $first_longest);\n\
    \    return undef;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n \
    \   return;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($length\
    \ > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n \
    \   return undef;\n}", "    my $longest;\n    my $longestLength = -1;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($longestLength == -1 || $longestLength > $length) {\n            $longest =\
    \ $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest unless $longestLength == -1;\n    return $strings[0];\n}", "    my\
    \ $longest;\n    my $longestLength = -1;\n    foreach my $string (@$strings) {\n\
    \        my $length = length($string);\n        if ($longestLength < $length)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return undef;\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest unless $longestLength == 0;\n    return\
    \ $strings[0];\n}", "    my $longest = undef;\n    foreach my $string (@$strings)\
    \ {\n        if (defined $longest) {\n            last if (length $string > length\
    \ $longest);\n        } else {\n            $longest = $string;\n        }\n \
    \   }\n    return $longest;\n}", "    my $longest = undef;\n    my $length = 0;\n\
    \    foreach my $string (@$strings) {\n        my $len = length($string);\n  \
    \      if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest if defined $longest;\n    return\
    \ $strings[0];\n}", "    my $longest = undef;\n    foreach my $string (@$strings)\
    \ {\n        if (defined $longest) {\n            last if (length($string) > length($longest));\n\
    \        }\n        $longest = $string;\n    }\n    return $longest;\n}", "  \
    \  my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest) {\n            last if (length $string > length $longest);\n     \
    \   } else {\n            $longest = $string;\n        }\n    }\n    return $longest;\n\
    }", "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $length) {\n\
    \            $longest = $string;\n        }\n        elsif ($length == $length)\
    \ {\n            $longest = $string if ($length > 0);\n        }\n    }\n    return\
    \ $longest if (defined $longest);\n    return undef;\n}", "    my $longest;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $length) {\n            $longest =\
    \ $string;\n        }\n    }\n    return $longest if defined $longest;\n    return;\n\
    }", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest;\n    foreach my $string (@$strings) {\n     \
    \   my $len = length($string);\n        if ($len > length($longest)) {\n     \
    \       $longest = $string;\n        }\n    }\n    return $longest if defined\
    \ $longest;\n    return;\n}", "    my $longest;\n    my $longestLength = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest;\n    my $length = 0;\n\
    \    foreach my $string (@$strings) {\n        my $len = length($string);\n  \
    \      if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest if defined $longest;\n    return;\n\
    }", "    my $longest = undef;\n    my $longestLength = undef;\n    foreach my\
    \ $string (@$strings) {\n        if (defined $longestLength and length $string\
    \ > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = length $string;\n        }\n    }\n    return $longest if defined $longest;\n\
    \    return;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($length\
    \ > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n \
    \   return;\n}", "    my $longest = undef;\n    my $first_longest = undef;\n \
    \   foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > length($longest)) {\n            $longest = $string;\n\
    \            $first_longest = $string;\n        }\n    }\n    return $first_longest\
    \ if defined $first_longest;\n    return $longest;\n}", "    my $longest = undef;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if defined $longest;\n    return;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return;\n}", "    my $longest\
    \ = undef;\n    foreach my $string (@$strings) {\n        if (defined $longest)\
    \ {\n            last if length($string) > length($longest);\n        }\n    \
    \    $longest = $string;\n    }\n    return $longest;\n}", "    my $longest;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        my $len =\
    \ length($string);\n        if ($len > $length) {\n            $longest = $string;\n\
    \            $length = $len;\n        }\n    }\n    return $longest if defined\
    \ $longest;\n    return;\n}", "    my $longest;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > length($longest))\
    \ {\n            $longest = $string;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return undef;\n}", "    my $longest = undef;\n    foreach\
    \ my $string (@$strings) {\n        if (defined $longest) {\n            last\
    \ if length($string) > length($longest);\n        }\n        $longest = $string;\n\
    \    }\n    return $longest;\n}", "    my $longest = undef;\n    foreach my $string\
    \ (@$strings) {\n        if (defined $longest) {\n            last if length($string)\
    \ > length($longest);\n        }\n        $longest = $string;\n    }\n    return\
    \ $longest;\n}", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($longestLength == 0) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        } elsif ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest if defined $longest;\n    return;\n}", "    my $longest;\n    my $length\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest if $length;\n    return;\n}",
  "    my $longest = undef;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if (defined $longest && $length > length($longest))\
    \ {\n            $longest = $string;\n        }\n    }\n    return $longest;\n\
    }", "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest if defined $longest;\n    return;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n}",
  "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
    \       my $len = length($string);\n        if ($len > $length) {\n          \
    \  $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
    \ $longest if defined $longest;\n    return;\n}", "    my $longest = undef;\n\
    \    my $longestlen = 0;\n    foreach my $s (@$strings) {\n        my $len = length($s);\n\
    \        if ($len > $longestlen) {\n            $longest = $s;\n            $longestlen\
    \ = $len;\n        }\n    }\n    return $longest unless defined $longest;\n  \
    \  return $longest;\n}", "    my $longest;\n    my $length = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $len = length($string);\n        if ($len\
    \ > $length) {\n            $longest = $string;\n            $length = $len;\n\
    \        }\n    }\n    return $longest if $length;\n    return;\n}", "    my $longest\
    \ = undef;\n    my $first_longest = undef;\n    foreach my $string (@$strings)\
    \ {\n        if (defined $longest) {\n            if (length($string) > length($longest))\
    \ {\n                $longest = $string;\n            }\n        }\n        else\
    \ {\n            $longest = $string;\n        }\n    }\n    return $longest unless\
    \ defined $longest;\n    return $first_longest if defined $first_longest;\n  \
    \  return $longest;\n}", "    my $longest;\n    my $longestLength;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($longestLength == $length) {\n            $longest = $string;\n        }\n\
    \        elsif ($longestLength > $length) {\n            $longest = $string;\n\
    \            $longestLength = $length;\n        }\n    }\n    return $longest\
    \ if defined $longest;\n    return;\n}", "    my $longest;\n    my $length = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $length) {\n            $longest = $string;\n        }\n\
    \    }\n    return $longest if defined $longest;\n    return;\n}", "    my $longest\
    \ = undef;\n    foreach my $string (@$strings) {\n        if (defined $longest)\
    \ {\n            last if (length($string) > length($longest));\n        }\n  \
    \      $longest = $string;\n    }\n    return $longest;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n}",
  "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest) {\n            last if length($string) > length($longest);\n     \
    \   }\n        $longest = $string;\n    }\n    return $longest;\n}", "    my $longest\
    \ = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n      \
    \  my $len = length($string);\n        if ($len > $length) {\n            $longest\
    \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
    \ if defined $longest;\n    return $strings[0];\n}", "    my $longest;\n    my\
    \ $longestLength;\n    my $longestIndex;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $max;\n    my $maxLength;\n    my $maxIndex;\n    my $maxString;\n   \
    \ my $maxStringLength;\n    my $maxStringIndex;\n    my $maxStringLengthIndex;\n\
    \    my $maxStringLengthLength;\n    my $maxStringLengthIndex;\n    my $maxStringLengthLengthIndex;\n\
    \    my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n \
    \   my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n  \
    \  my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n   \
    \ my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n    my\
    \ $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n\
    \    my $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n \
    \   my $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n  \
    \  my $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n   \
    \ my $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n    my\
    \ $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n\
    \    my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n \
    \   my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n  \
    \  my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n   \
    \ my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n    my\
    \ $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n\
    \    my $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n \
    \   my $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n  \
    \  my $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n   \
    \ my $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n    my\
    \ $maxStringLengthLengthIndex;\n    my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n\
    \    my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n \
    \   my $maxStringLengthLengthLength;\n    my $maxStringLengthLengthIndex;\n  \
    \  my $maxStringLengthLengthLength;\n    my $", "    my $longest = undef;\n  \
    \  foreach my $string (@$strings) {\n        if (defined $longest) {\n       \
    \     last if (length($string) > length($longest));\n        }\n        $longest\
    \ = $string;\n    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($longestLength == 0) {\n            $longest = $string;\n       \
    \     $longestLength = $length;\n        } elsif ($length > $longestLength) {\n\
    \            $longest = $string;\n            $longestLength = $length;\n    \
    \    }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}", " \
    \   my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n\
    \        my $len = length($string);\n        if ($len > $length) {\n         \
    \   $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
    \ $longest if defined $longest;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest;\n    my $length = 0;\n\
    \    foreach my $string (@$strings) {\n        $length = length($string);\n  \
    \      if ($length > $length) {\n            $longest = $string;\n        }\n\
    \    }\n    return $longest if defined $longest;\n    return;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest unless $longestLength == 0;\n    return $strings[0];\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}",
  "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}",
  "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
    \       my $len = length($string);\n        if ($len > $length) {\n          \
    \  $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
    \ $longest if $length;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($longestLength == 0) {\n            $longest = $string;\n       \
    \     $longestLength = $length;\n        } elsif ($length > $longestLength) {\n\
    \            $longest = $string;\n            $longestLength = $length;\n    \
    \    }\n    }\n    return $longest if $longestLength > 0;\n    return undef;\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($longestLength == 0) {\n\
    \            $longest = $string;\n            $longestLength = $length;\n    \
    \    } elsif ($length > $longestLength) {\n            $longest = $string;\n \
    \           $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return $strings[0];\n}", "    my $longest;\n    my\
    \ $longestLength = -1;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($longestLength == -1 || $longestLength > $length)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}",
  "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return;\n}",
  "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
    \       my $len = length($string);\n        if ($len > $length) {\n          \
    \  $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
    \ $longest unless $length;\n    return $strings[0];\n}", "    my $longest;\n \
    \   my $longestLength;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($longestLength < $length) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest unless $longest;\n    my $first = $longest;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $first;\n}", "    my $longest = undef;\n\
    \    foreach my $string (@$strings) {\n        if (defined $longest) {\n     \
    \       last if (length($string) > length($longest));\n        }\n        $longest\
    \ = $string;\n    }\n    return $longest;\n}", "    my $longest = undef;\n   \
    \ my $length = 0;\n    foreach my $string (@$strings) {\n        my $length =\
    \ length($string);\n        if ($length > $length) {\n            $longest = $string;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return $strings[0];\n\
    }", "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest if $length;\n    return;\n}", "    my $longest = undef;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        my $len =\
    \ length($string);\n        if ($len > $length) {\n            $longest = $string;\n\
    \            $length = $len;\n        }\n    }\n    return $longest if defined\
    \ $longest;\n    return $strings[0];\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest;\n    my $longestLength;\n\
    \    my $longestIndex;\n    my $longestStringLength;\n    foreach my $string (@$strings)\
    \ {\n        my $stringLength = length($string);\n        if ($stringLength >\
    \ $longestStringLength) {\n            $longest = $string;\n            $longestLength\
    \ = $stringLength;\n            $longestIndex = 0;\n            $longestStringLength\
    \ = $stringLength;\n        } elsif ($stringLength == $longestStringLength) {\n\
    \            ++$longestIndex;\n        }\n    }\n    return $longest if $longest;\n\
    \    return;\n}", "    my $longest = undef;\n    my $length = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $len = length($string);\n        if ($len\
    \ > $length) {\n            $longest = $string;\n            $length = $len;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return $strings[0];\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return undef;\n\
    }", "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest if defined $longest;\n    return $strings[0];\n}", "    my\
    \ $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n     \
    \   my $len = length($string);\n        if ($len > $length) {\n            $longest\
    \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
    \ if defined $longest;\n    return undef;\n}", "    my $longest = undef;\n   \
    \ my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest if defined $longest;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return $strings[0];\n}", "    my $longest;\n    my\
    \ $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest if $longestLength > 0;\n    return;\n}", "    my $longest = undef;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if defined $longest;\n    return undef;\n}", "   \
    \ my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}",
  "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($longestLength == 0) {\n\
    \            $longest = $string;\n            $longestLength = $length;\n    \
    \    } elsif ($length > $longestLength) {\n            $longest = $string;\n \
    \           $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest;\n    my $length = 0;\n\
    \    foreach my $string (@$strings) {\n        my $len = length($string);\n  \
    \      if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest if $length;\n    return;\n}",
  "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest) {\n            last if length($string) > length($longest);\n     \
    \   }\n        $longest = $string;\n    }\n    return $longest;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return;\n}", "    my $longest;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        my $len =\
    \ length($string);\n        if ($len > $length) {\n            $longest = $string;\n\
    \            $length = $len;\n        }\n    }\n    return $longest unless $length;\n\
    \    return $strings[0];\n}", "    my $longest;\n    my $longestLength = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest = undef;\n    foreach\
    \ my $string (@$strings) {\n        if (defined $longest) {\n            last\
    \ if (length($string) > length($longest));\n        }\n        $longest = $string;\n\
    \    }\n    return $longest;\n}", "    my $longest;\n    my $length = 0;\n   \
    \ foreach my $string (@$strings) {\n        my $len = length($string);\n     \
    \   if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest unless $length;\n    return $strings[0];\n\
    }", "    my $longest;\n    foreach my $string (@$strings) {\n        if (length($string)\
    \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n \
    \   return $longest if defined $longest;\n    return;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n}",
  "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest) {\n            last if (length($string) > length($longest));\n   \
    \     }\n        $longest = $string;\n    }\n    return $longest;\n}", "    my\
    \ $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n     \
    \   my $len = length($string);\n        if ($len > $length) {\n            $longest\
    \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
    \ unless $length;\n    return $strings[0];\n}", "    my $longest;\n    my $length\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest unless defined $longest;\n  \
    \  return $longest;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($longestLength == 0) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        } elsif ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest if $longestLength > 0;\n    return;\n}", "    my $longest;\n    my\
    \ $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest if $longestLength > 0;\n    return $strings[0];\n}", "    my $longest;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        my $len =\
    \ length($string);\n        if ($len > $length) {\n            $longest = $string;\n\
    \            $length = $len;\n        }\n    }\n    return $longest unless $length;\n\
    \    return $strings[0];\n}", "    my $longest;\n    my $length = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $len = length($string);\n        if ($len\
    \ > $length) {\n            $longest = $string;\n            $length = $len;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return undef;\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}",
  "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
    \       my $length = length($string);\n        if ($length > $length) {\n    \
    \        $longest = $string;\n        }\n        elsif ($length == $length) {\n\
    \            $longest = $string if length($string) > length($longest);\n     \
    \   }\n    }\n    return $longest if defined $longest;\n    return;\n}", "   \
    \ my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n  \
    \      my $len = length($string);\n        if ($len > $length) {\n           \
    \ $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
    \ $longest if defined $longest;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return $strings[0];\n}", "    my $longest;\n    my\
    \ $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest if $longestLength > 0;\n    return;\n}", "    my $longest;\n    my\
    \ $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest if $longestLength > 0;\n    return;\n}", "    my $longest;\n    my\
    \ $length = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $length) {\n            $longest = $string;\n        }\n\
    \        elsif ($length == $length) {\n            $longest = $string if length($string)\
    \ > length($longest);\n        }\n    }\n    return $longest if defined $longest;\n\
    \    return;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($length\
    \ > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n \
    \   return;\n}", "    my $longest = undef;\n    my $length = 0;\n    foreach my\
    \ $string (@$strings) {\n        $length = length($string);\n        if ($length\
    \ > $length) {\n            $longest = $string;\n        }\n    }\n    return\
    \ $longest unless defined $longest;\n    return $longest;\n}", "    my $longest;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        $length +=\
    \ length($string);\n        if ($length > $longest) {\n            $longest =\
    \ $length;\n        }\n    }\n    return $longest ? $strings[$#{$strings}-1] :\
    \ undef;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest;\n    my $length = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $length) {\n            $longest = $string;\n        }\n    }\n    return $longest\
    \ if defined $longest;\n    return;\n}", "    my $longest = undef;\n    my $longestLength\
    \ = -1;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($longestLength == -1 || $length > $longestLength) {\n           \
    \ $longest = $string;\n            $longestLength = $length;\n        }\n    }\n\
    \    return $longest if defined $longest;\n    return;\n}", "    my $longest;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        my $len =\
    \ length($string);\n        if ($len > $length) {\n            $longest = $string;\n\
    \            $length = $len;\n        }\n    }\n    return $longest if defined\
    \ $longest;\n    return undef;\n}", "    my $longest;\n    my $length = 0;\n \
    \   foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $length) {\n            $longest = $string;\n        }\n\
    \    }\n    return $longest if defined $longest;\n    return undef;\n}", "   \
    \ my $longest;\n    foreach my $string (@$strings) {\n        if (length($string)\
    \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n \
    \   return $longest if defined $longest;\n    return;\n}", "    my $longest =\
    \ undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings) {\n \
    \       my $length = length($string);\n        if ($length > $longestLength) {\n\
    \            $longest = $string;\n            $longestLength = $length;\n    \
    \    }\n    }\n    return $longest if defined $longest;\n    return undef;\n}",
  "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return undef;\n\
    }", "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $length) {\n\
    \            $longest = $string;\n        }\n    }\n    return $longest if defined\
    \ $longest;\n    return;\n}", "    my $longest;\n    my $length = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $length) {\n            $longest = $string;\n        }\n    }\n \
    \   return $longest if defined $longest;\n    return;\n}", "    my $longest;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        my $len =\
    \ length($string);\n        if ($len > $length) {\n            $longest = $string;\n\
    \            $length = $len;\n        }\n    }\n    return $longest if defined\
    \ $longest;\n    return;\n}", "    my $longest = undef;\n    my $length = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $length) {\n            $longest = $string;\n        }\n\
    \    }\n    return $longest if defined $longest;\n    return;\n}", "    my $longest\
    \ = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n      \
    \  my $len = length($string);\n        if ($len > $length) {\n            $longest\
    \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
    \ unless defined $longest;\n    return $longest;\n}", "    my $longest;\n    my\
    \ $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest if $longestLength > 0;\n    return $strings[0];\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return;\n}", "    my $longest;\n\
    \    foreach my $string (@$strings) {\n        if (defined $longest) {\n     \
    \       last if (length($string) > length($longest));\n        }\n        $longest\
    \ = $string;\n    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest = undef;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return;\n}", "    my $longest;\n    my $length = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $length) {\n            $longest = $string;\n        }\n\
    \    }\n    return $longest if defined $longest;\n    return;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($longestLength == 0) {\n           \
    \ $longest = $string;\n            $longestLength = $length;\n        } elsif\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n \
    \   return;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($length\
    \ > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n \
    \   return $strings[0];\n}", "    my $longest = undef;\n    foreach my $string\
    \ (@$strings) {\n        my $len = length($string);\n        if ($len > length($longest))\
    \ {\n            $longest = $string;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return;\n}", "    my $longest = undef;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return undef;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($longestLength == 0) {\n            $longest = $string;\n       \
    \     $longestLength = $length;\n        } elsif ($length > $longestLength) {\n\
    \            $longest = $string;\n            $longestLength = $length;\n    \
    \    }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}", " \
    \   my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n\
    \        $length = length $string;\n        if ($length > $length) {\n       \
    \     $longest = $string;\n        }\n    }\n    return $longest unless $longest;\n\
    \    return $strings[0];\n}", "    my $longest;\n    my $longestLength = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return;\n}", "    my $longest = undef;\n    my $length\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest unless defined $longest;\n  \
    \  return $strings[0];\n}", "    my $longest;\n    my $longestLength = 0;\n  \
    \  foreach my $string (@$strings) {\n        my $length = length($string);\n \
    \       if ($length > $longestLength) {\n            $longest = $string;\n   \
    \         $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return;\n}", "    my $longest = undef;\n    my $length\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $length) {\n            $longest = $string;\n        }\n\
    \    }\n    return $longest if defined $longest;\n    return $strings[0];\n}",
  "    my $longest;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > length($longest)) {\n            $longest = $string;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return;\n}",
  "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest if defined $longest;\n    return;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if defined $longest;\n    return;\n}", "    my $longest;\n\
    \    my $longestLength;\n    my $longestIndex;\n    my $longestString;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($longestLength < $length) {\n            $longestLength = $length;\n      \
    \      $longestIndex = $longest;\n            $longestString = $string;\n    \
    \    }\n    }\n    return $longestString;\n}", "    my $longest = undef;\n   \
    \ foreach my $string (@$strings) {\n        if (defined $longest) {\n        \
    \    last if length($string) > length($longest);\n        }\n        $longest\
    \ = $string;\n    }\n    return $longest;\n}", "    my $longest = undef;\n   \
    \ my $length = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest if defined $longest;\n    return\
    \ $strings[0];\n}", "    my $longest;\n    my $longestLength;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($longestLength\
    \ < $length) {\n            $longest = $string;\n            $longestLength =\
    \ $length;\n        }\n    }\n    return $longest if defined $longest;\n    return;\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}",
  "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return;\n}",
  "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
    \       my $len = length($string);\n        if ($len > $length) {\n          \
    \  $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
    \ $longest if defined $longest;\n    return;\n}", "    my $longest = undef;\n\
    \    my $longestLength = undef;\n    foreach my $string (@$strings) {\n      \
    \  my $length = length($string);\n        if ($longestLength eq undef) {\n   \
    \         $longest = $string;\n            $longestLength = $length;\n       \
    \ } elsif ($longestLength > $length) {\n            $longest = $string;\n    \
    \        $longestLength = $length;\n        }\n    }\n    return $longest if defined\
    \ $longest;\n    return;\n}", "    my $longest = undef;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($longestLength == 0) {\n            $longest = $string;\n       \
    \     $longestLength = $length;\n        } elsif ($length > $longestLength) {\n\
    \            $longest = $string;\n            $longestLength = $length;\n    \
    \    }\n    }\n    return $longest if defined $longest;\n    return;\n}", "  \
    \  my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
    }", "    my $longest;\n    my $longestLength;\n    my $longestIndex;\n    my $longestString\
    \ = $strings[0];\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n            $longestIndex = 0;\n       \
    \ } elsif ($length == $longestLength) {\n            ++$longestIndex;\n      \
    \  } elsif ($length < $longestLength) {\n            $longest = $string;\n   \
    \         $longestLength = $length;\n            $longestIndex = 0;\n        }\n\
    \    }\n    return $longest if ($longest);\n    return;\n}", "    my $longest\
    \ = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n      \
    \  my $len = length($string);\n        if ($len > $length) {\n            $longest\
    \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
    \ unless defined $longest;\n    return $strings[0];\n}", "    my $longest;\n \
    \   my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest if $longestLength > 0;\n    return;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

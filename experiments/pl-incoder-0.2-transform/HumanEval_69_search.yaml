name: HumanEval_69_search
language: pl
prompt: "# You are given a non-empty list of positive integers. Return the greatest\
  \ integer that is greater than \n# zero, and has a frequency greater than or equal\
  \ to the value of the integer itself. \n# The frequency of an integer is the number\
  \ of times it appears in the list.\n# If no such a value exist, return -1.\n# Examples:\n\
  # >>> search([4, 1, 2, 2, 3, 1])\n# 2\n# >>> search([1, 2, 2, 3, 3, 3, 4, 4, 4])\n\
  # 3\n# >>> search([5, 5, 4, 4, 4])\n# -1\nsub search {\n    my($lst) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&search;\n\
  \        if(eq_deeply($candidate->([5, 5, 5, 5, 1]),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4, 1, 4,\
  \ 1, 4, 4]),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->([3, 3]),-1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([8, 8, 8, 8, 8, 8,\
  \ 8, 8]),8)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
  \   if(eq_deeply($candidate->([2, 3, 3, 2, 2]),2)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 7, 8, 8, 4, 8,\
  \ 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1]),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2, 8,\
  \ 2]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([6,\
  \ 7, 1, 8, 8, 10, 5, 8, 5, 3, 10]),1)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->([8, 8, 3, 6, 5, 6, 4]),-1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([6,\
  \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9]),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 9, 10, 1, 3]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([6, 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6,\
  \ 10, 2, 8, 6, 5, 4, 9, 5, 3, 10]),5)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->([1]),1)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([8,\
  \ 8, 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5]),4)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
  \ 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10]),2)) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3]),1)) {\n        print \"ok!\" }else{\n    \
  \    exit 1;\n        }\n        if(eq_deeply($candidate->([9, 2, 4, 1, 5, 1, 5,\
  \ 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4]),4))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
  \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7]),4)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([9,\
  \ 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1]),2)) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8]),-1)) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([10]),-1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([9,\
  \ 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2]),2)) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->([5, 4, 10, 2, 1, 1,\
  \ 10, 3, 6, 1, 8]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n      \
  \  }\n        if(eq_deeply($candidate->([7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1,\
  \ 10, 7, 5, 6, 7, 6, 7, 7, 6]),1)) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->([3, 10, 10, 9, 2]),-1)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n\
    \        $freq++;\n        if ($freq > $max) {\n            $max = $freq;\n  \
    \      }\n        if ($freq >= $num) {\n            $max = $num;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = $lst[0];\n    my $freq = 0;\n   \
    \ foreach my $num (@$lst) {\n        if ($freq > $num) {\n            $freq =\
    \ $num;\n            $max = $num;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n\
    \        if($freq > $max) {\n            $max = $freq;\n        }\n        if($freq\
    \ >= $num) {\n            $freq = $num;\n        }\n    }\n    return $max;\n}",
  "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n\
    \        if($freq > $max) {\n            $max = $freq;\n        }\n        if($freq\
    \ >= $num) {\n            $freq = $num;\n        }\n    }\n    return $max;\n}",
  "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq > $num) {\n            $freq = $num;\n            $max = $num;\n    \
    \    }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n\
    \    foreach my $num (@$lst) {\n        my $freq = grep { $num == $_ } (keys %{$freq{$_}});\n\
    \        if ($freq > $maxFreq) {\n            $max = $num;\n            $maxFreq\
    \ = $freq;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my\
    \ $maxFreq = 0;\n    my $maxIndex = 0;\n    my $i;\n    \n    for ($i = 0; $i\
    \ < @$lst; $i++) {\n        if ($lst->[$i] >= $max) {\n            $max = $lst->[$i];\n\
    \            $maxFreq = $i;\n            $maxIndex = $i;\n        }\n    }\n \
    \   \n    if ($maxFreq >= $max) {\n        return $max;\n    } else {\n      \
    \  return -1;\n    }\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my\
    \ $num (@$lst) {\n        if ($freq > $num) {\n            $freq = $num;\n   \
    \         $max = $num;\n        }\n    }\n    return $max;\n}", "    my $max =\
    \ 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq++ >\
    \ $num) {\n            $max = $num;\n        }\n    }\n    return $max if $freq\
    \ >= $max;\n    return -1;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach\
    \ my $num (@$lst) {\n        if ($freq > $num) {\n            $freq = $num;\n\
    \            $max = $num;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq >\
    \ $num) {\n            $freq = $num;\n            $max = $num;\n        }\n  \
    \  }\n    return $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $freq;\n    \n    foreach $i (@$lst) {\n     \
    \   $freq = grep { $_ eq $i } @$lst;\n        if ($freq > $maxFreq) {\n      \
    \      $max = $i;\n            $maxFreq = $freq;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($freq > $num) {\n            $freq = $num;\n            $max\
    \ = $num;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq\
    \ = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n        if ($freq > $max)\
    \ {\n            $max = $freq;\n        }\n        if ($freq >= $num) {\n    \
    \        $max = $num;\n        }\n    }\n    return $max;\n}", "    my $max =\
    \ $lst[0];\n    my $freq = $lst[0];\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $maxfreq;\n    my $maxfreqindex;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n    my $maxfreqvalue;\n\
    \    my $maxfreqvalue;", "    my $max = 0;\n    my $freq = 0;\n    foreach my\
    \ $num (@$lst) {\n        if ($freq > $num) {\n            $freq = $num;\n   \
    \         $max = $num;\n        }\n    }\n    return $max;\n}", "    my $max =\
    \ 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n        my $freq =\
    \ grep { $num == $_ } @$lst;\n        if ($freq > $maxFreq) {\n            $max\
    \ = $num;\n            $maxFreq = $freq;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n    \
    \    $freq++ if $num > 0;\n        $max = $num if $freq >= $num;\n    }\n    return\
    \ $max if $freq > 0;\n    return -1;\n}", "    my $max = 0;\n    my $maxFreq =\
    \ 0;\n    foreach my $num (@$lst) {\n        my $freq = grep($num == $_, $lst);\n\
    \        if ($freq > $maxFreq) {\n            $max = $num;\n            $maxFreq\
    \ = $freq;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my\
    \ $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n        if ($freq\
    \ > $max) {\n            $max = $freq;\n        }\n        if ($freq >= $num)\
    \ {\n            $max = $num;\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = 0;\n    my $maxfreq = 0;\n    foreach my $num (@$lst) {\n        if ($num\
    \ > 0) {\n            if ($num > $max) {\n                $max = $num;\n     \
    \           $maxfreq = $lst->[$num];\n            }\n        }\n    }\n    return\
    \ $maxfreq > $lst->[$max] ? $max : -1;\n}", "    my $max = 0;\n    my $freq =\
    \ 0;\n    foreach my $num (@$lst) {\n        if ($freq > $num) {\n           \
    \ $freq = $num;\n            $max = $num;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n    \
    \    if ($freq++ == $num) {\n            $max = $num;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    my $maxIndex = 0;\n\
    \    foreach my $i (@$lst) {\n        my $freq = grep { $_ eq $i } @$lst;\n  \
    \      if ($freq > $maxFreq) {\n            $max = $i;\n            $maxFreq =\
    \ $freq;\n            $maxIndex = $i;\n        }\n    }\n    return $maxIndex;\n\
    }\n</code>\n<|/ a tags=perl,arrays |>\n<| c |>\nThis doesn't work. Try `search([4,\
    \ 1, 2, 2, 3, 1])`.\n<|/ c |>\n<| c |>\n: I fixed the bug. Thanks.\n<|/ c |>\n\
    <| c |>\n: I added a more efficient solution.\n<|/ c |>\n<| c |>\n: I added a\
    \ more efficient solution.\n<|/ c |>\n<| c |>\n: I added a more efficient solution.\n\
    <|/ c |>\n<| a tags=perl,arrays |>\n<code>", "    my $max = 0;\n    my $freq =\
    \ 0;\n    foreach my $num (@$lst) {\n        $freq++ if $num == $max;\n      \
    \  $max = $num if $num > $max;\n    }\n    return -1 if $freq == 0;\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($freq++ == $num) {\n            $max = $num if $num > $max;\n\
    \        }\n    }\n    return -1 if $freq == 0;\n    return $max;\n}\n</code>\n\
    <|/ a tags=perl,arrays,algorithm |>\n<| c |>\nThis doesn't work if there are multiple\
    \ equal numbers in the list. For example, search([4, 1, 2, 2, 3, 1]) returns 2,\
    \ but should return 3.\n<|/ c |>\n<| c |>\n: I added a solution that works with\
    \ multiple equal numbers in the list.\n<|/ c |>\n<| c |>\n: I added a solution\
    \ that works with multiple equal numbers in the list.\n<|/ c |>\n<| a tags=perl,arrays,algorithm\
    \ |>\n<code>", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $i (@$lst)\
    \ {\n        if ($i > 0) {\n            if ($maxFreq < $i) {\n               \
    \ $max = $i;\n                $maxFreq = $i;\n            }\n        }\n    }\n\
    \    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num\
    \ (@$lst) {\n        $freq++ if $num == $max;\n        $max = $num if $num > $max;\n\
    \    }\n    return -1 if $freq == 0;\n    return $max;\n}", "    my $max = $lst[0];\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq < $num) {\n\
    \            $freq = $num;\n            $max = $num;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($freq > $num) {\n            $freq = $num;\n            $max\
    \ = $num;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq\
    \ = 0;\n    foreach my $num (@$lst) {\n        $freq++ if $num > 0;\n        $max\
    \ = $num if $freq >= $num;\n    }\n    return -1 if $freq == 0;\n    return $max;\n\
    }", "    my $max = $lst[0];\n    my $freq = 0;\n    foreach my $num (@$lst) {\n\
    \        if ($freq++ > $num) {\n            $max = $num;\n        }\n    }\n \
    \   return $max if $freq >= $max;\n    return -1;\n}", "    my $max = 0;\n   \
    \ my $maxFreq = 0;\n    foreach my $num (@$lst) {\n        my $freq = grep { $num\
    \ == $_ } (keys %{$freq{$_}});\n        if ($freq > $maxFreq) {\n            $max\
    \ = $num;\n            $maxFreq = $freq;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n    \
    \    $freq++;\n        if ($freq > $max) {\n            $max = $freq;\n      \
    \  }\n        if ($freq >= $num) {\n            $freq = $num;\n        }\n   \
    \ }\n    return $max;\n}", "    my $max = $lst[0];\n    my $freq = $lst[0];\n\
    \    foreach my $i (@$lst) {\n        if ($freq > $i) {\n            $freq = $i;\n\
    \            $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n \
    \       if ($freq > $max) {\n            $max = $freq;\n        }\n        if\
    \ ($freq >= $num) {\n            $freq = $num;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n \
    \       if ($num > 0) {\n            $max = $num if $num > $max;\n           \
    \ $maxFreq += $num;\n        }\n    }\n    return -1 if $maxFreq == 0;\n    return\
    \ $max if $maxFreq >= $max;\n    return $max;\n}", "    my $max = $lst[0];\n \
    \   my $freq = 1;\n    foreach my $num (@$lst) {\n        if ($num > $max) {\n\
    \            $max = $num;\n        }\n        if ($freq > $num) {\n          \
    \  $freq = $num;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq++ == $num)\
    \ {\n            $max = $num if $num > $max;\n        }\n    }\n    return $max\
    \ if $freq > 0;\n    return -1;\n}", "    my $max = 0;\n    my $freq = 0;\n  \
    \  foreach my $num (@$lst) {\n        if ($freq > $num) {\n            $freq =\
    \ $num;\n            $max = $num;\n        }\n    }\n    return $max;\n}\n</code>\n\
    <|/ a tags=perl,arrays |>\n<| c |>\nThis doesn't work if there are multiple occurrences\
    \ of the same number.\n<|/ c |>\n<| c |>\nIt doesn't work if there are multiple\
    \ occurrences of the same number.\n<|/ c |>\n<| c |>\nIt doesn't work if there\
    \ are multiple occurrences of the same number.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if there are multiple occurrences of the same number.\n<|/ c |>\n<| c |>\n\
    It doesn't work if there are multiple occurrences of the same number.\n<|/ c |>\n\
    <| a tags=perl,arrays |>\n<code>", "    my $max = 0;\n    my $freq = 0;\n    foreach\
    \ my $num (@$lst) {\n        if ($freq > $num) {\n            $freq = $num;\n\
    \            $max = $num;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq >\
    \ $num) {\n            $freq = $num;\n            $max = $num;\n        }\n  \
    \  }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach\
    \ my $num (@$lst) {\n        $freq++;\n        if ($freq > $max) {\n         \
    \   $max = $freq;\n        }\n        if ($freq >= $num) {\n            $max =\
    \ $num;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $maxFreq\
    \ = 0;\n    foreach my $num (@$lst) {\n        my $freq = grep { $num == $_ }\
    \ (keys %{$freq{$_}});\n        if ($freq > $maxFreq) {\n            $max = $num;\n\
    \            $maxFreq = $freq;\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = $lst[0];\n    my $freq = 0;\n    my $i;\n    \n    for ($i = 1; $i <\
    \ @$lst; $i++) {\n        if ($lst[$i] >= $max) {\n            $max = $lst[$i];\n\
    \            $freq++;\n        }\n    }\n    return $freq > $lst[$i] ? $freq :\
    \ -1;\n}", "    my $max = $lst[0];\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($freq < $num) {\n            $freq = $num;\n            $max\
    \ = $num;\n        }\n    }\n    return $max;\n}", "    my $max = -1;\n    my\
    \ $maxfreq = 0;\n    foreach my $num (@$lst) {\n        my $freq = grep { $num\
    \ == $_ } (keys %{$freq{$_}});\n        if ($freq > $maxfreq) {\n            $max\
    \ = $num;\n            $maxfreq = $freq;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n    \
    \    if ($freq++ == $num) {\n            $max = $num;\n        }\n    }\n    return\
    \ $max if $freq > 0;\n    return -1;\n}", "    my $max = 0;\n    my $freq = 0;\n\
    \    foreach my $num (@$lst) {\n        if ($freq++ > $num) {\n            $max\
    \ = $num;\n        }\n    }\n    return -1 if $freq == 0;\n    return $max;\n}",
  "    my $max = 0;\n    my $maxFreq = 0;\n    my $maxIndex = 0;\n    my $i = 0;\n\
    \    \n    foreach my $num (@$lst) {\n        my $freq = grep { $num == $_ } (keys\
    \ %{ $freq{$_} });\n        if ($freq > $maxFreq) {\n            $maxFreq = $freq;\n\
    \            $max = $num;\n            $maxIndex = $i;\n        }\n        $i++;\n\
    \    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach\
    \ my $num (@$lst) {\n        $freq++;\n        if ($freq > $max) {\n         \
    \   $max = $freq;\n        }\n        if ($num > 0) {\n            $freq++;\n\
    \        }\n    }\n    return $max if $freq > $max;\n    return -1;\n}", "   \
    \ my $max = -1;\n    my $maxfreq = 0;\n    foreach my $num (@$lst) {\n       \
    \ my $freq = grep($num == $_, $lst);\n        if ($freq > $maxfreq) {\n      \
    \      $max = $num;\n            $maxfreq = $freq;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($freq++ == $num) {\n            $max = $num if $num > $max;\n\
    \        }\n    }\n    return $max if $freq > 0;\n    return -1;\n}", "    my\
    \ $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq\
    \ > $num) {\n            $freq = $num;\n            $max = $num;\n        }\n\
    \    }\n    return -1 if $freq == 0;\n    return $max;\n}", "    my $max = 0;\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n        if\
    \ ($freq > $max) {\n            $max = $freq;\n        }\n        if ($freq >=\
    \ $num) {\n            $freq = $num;\n        }\n    }\n    return $max;\n}",
  "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq++ == $num) {\n            $max = $num;\n        }\n    }\n    return\
    \ -1 if $freq == 0;\n    return $max;\n}", "    my $max = $lst[0];\n    my $freq\
    \ = $lst[0];\n    my $i;\n    my $j;\n    my $k;\n    my $maxfreq;\n    my $maxfreqindex;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalueindex;\n    my $maxfreqvaluevalue;\n\
    \    my $maxfreqvaluevalueindex;\n    my $maxfreqvaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvalue", "    my $max = 0;\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq > $num) {\n\
    \            $freq = $num;\n            $max = $num;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = $lst[0];\n    my $freq = $lst[0];\n    foreach my\
    \ $i (@$lst) {\n        if ($freq > $i) {\n            $freq = $i;\n         \
    \   $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n  \
    \  my $maxFreq = 0;\n    foreach my $num (@$lst) {\n        my $freq = grep($num\
    \ == $_, $lst);\n        if ($freq > $maxFreq) {\n            $max = $num;\n \
    \           $maxFreq = $freq;\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n        my $freq\
    \ = grep { $num == $_ } (keys %{ $freq{$_} });\n        if ($freq > $maxFreq)\
    \ {\n            $max = $num;\n            $maxFreq = $freq;\n        }\n    }\n\
    \    return $max;\n}", "    my $max = 0;\n    my $maxFreq = -1;\n    foreach my\
    \ $num (@$lst) {\n        if ($num > 0) {\n            my $freq = grep { $num\
    \ == $_ } (keys %{$freq{$_}});\n            if ($freq > $maxFreq) {\n        \
    \        $max = $num;\n                $maxFreq = $freq;\n            }\n    \
    \    }\n    }\n    return $max;\n}", "    my $max = $lst[0];\n    my $freq = 0;\n\
    \    foreach my $num (@$lst) {\n        if ($freq > $num) {\n            $freq\
    \ = $num;\n            $max = $num;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq++ > $freq) {\n            $freq = $freq;\n            $max = $num;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = $lst[0];\n    my $freq\
    \ = $lst[0];\n    my $i;\n    my $j;\n    my $k;\n    my $maxfreq;\n    my $maxfreqindex;\n\
    \    my $maxfreqvalue;\n    my $maxfreqvalueindex;\n    my $maxfreqvaluevalue;\n\
    \    my $maxfreqvaluevalueindex;\n    my $maxfreqvaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvaluevaluevalueindex;\n\
    \    my $maxfreqvaluevaluevaluevalue;\n    my $maxfreqvalue", "    my $max = 0;\n\
    \    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n        if ($num > 0) {\n\
    \            my $freq = grep { $num == $_ } @$lst;\n            if ($freq > $maxFreq)\
    \ {\n                $max = $num;\n                $maxFreq = $freq;\n       \
    \     }\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $maxFreq\
    \ = 0;\n    foreach my $num (@$lst) {\n        my $freq = grep { $num == $_ }\
    \ @$lst;\n        if ($freq > $maxFreq) {\n            $max = $num;\n        \
    \    $maxFreq = $freq;\n        }\n    }\n    return $max;\n}\n</code>\n<|/ a\
    \ dscore=2 |>\n<| c |>\nI like this solution, though I do think it would be more\
    \ efficient to sort the list first and then find the first element greater than\
    \ zero.\n<|/ c |>\n<| c |>\n: Yes, I agree. Sorting would be more efficient.\n\
    <|/ c |>\n<| c |>\n: I added a solution that sorts the list first. Sorting is\
    \ O(n log n), so this should be faster than the other solutions.\n<|/ c |>\n<|\
    \ c |>\n: I added a solution that sorts the list first. Sorting is O(n log n),\
    \ so this should be faster than the other solutions.\n<|/ c |>\n<| c |>\n: I added\
    \ a solution that sorts the list first. Sorting is O(n log n), so this should\
    \ be faster than the other solutions.\n<|/ c |>\n<| a tags=perl,algorithm |>\n\
    <code>", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n\
    \        if ($freq > $num) {\n            $freq = $num;\n            $max = $num;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n\
    \    foreach my $num (@$lst) {\n        if ($freq++ == $num) {\n            $max\
    \ = $num if $num > $max;\n        }\n    }\n    return $max if $freq > $max;\n\
    \    return -1;\n}", "    my $max = $lst[0];\n    my $freq = 1;\n    foreach my\
    \ $num (@$lst) {\n        if ($freq > $num) {\n            $freq = $num;\n   \
    \         $max = $num;\n        }\n    }\n    return $max;\n}", "    my $max =\
    \ 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n   \
    \     if ($freq > $max) {\n            $max = $freq;\n        }\n        if ($freq\
    \ >= $num) {\n            $max = $num;\n        }\n    }\n    return $max;\n}",
  "    my $max = 0;\n    my $maxfreq = 0;\n    foreach my $num (@$lst) {\n       \
    \ my $freq = grep($num == $_, $lst);\n        if ($freq > $maxfreq) {\n      \
    \      $max = $num;\n            $maxfreq = $freq;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        $freq++;\n        if ($freq > $max) {\n            $max = $freq;\n\
    \        }\n        if ($num > 0) {\n            $freq -= $num;\n        }\n \
    \   }\n    return $max if $freq > $max;\n    return -1;\n}", "    my $max = $lst[0];\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq > $num) {\n\
    \            $freq = $num;\n            $max = $num;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($num > 0) {\n            my $freq = grep { $_ eq $num } @$lst;\n\
    \            if ($freq > $maxFreq) {\n                $max = $num;\n         \
    \       $maxFreq = $freq;\n            }\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n    \
    \    if ($freq > $num) {\n            $freq = $num;\n            $max = $num;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n\
    \    foreach my $num (@$lst) {\n        $freq++;\n        if ($freq > $max) {\n\
    \            $max = $freq;\n        }\n        if ($freq >= $num) {\n        \
    \    $freq = $num;\n        }\n    }\n    return $max;\n}", "    my $max = $lst[0];\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq++ > $num)\
    \ {\n            $max = $num;\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n\
    \        if($freq > $max) {\n            $max = $freq;\n        }\n        if($freq\
    \ >= $num) {\n            $max = $num;\n        }\n    }\n    return $max;\n}",
  "    my $max = -1;\n    my $maxfreq = -1;\n    my $freq = 0;\n    foreach my $num\
    \ (@$lst) {\n        $freq++;\n        if ($freq > $maxfreq) {\n            $maxfreq\
    \ = $freq;\n            $max = $num;\n        }\n    }\n    return $max;\n}",
  "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq++ == $num) {\n            $max = $num if $num > $max;\n        }\n  \
    \  }\n    return $max if $freq > $max;\n    return -1;\n}", "    my $max = 0;\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq > $num) {\n\
    \            $freq = $num;\n            $max = $num;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($freq++ > $freq) {\n            $freq = $freq;\n            $max\
    \ = $num;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq\
    \ = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n        if ($freq > $max)\
    \ {\n            $max = $freq;\n        }\n        if ($freq >= $num) {\n    \
    \        $max = $num;\n        }\n    }\n    return $max;\n}", "    my $max =\
    \ 0;\n    my $maxfreq = 0;\n    foreach my $i (@$lst) {\n        if ($i > 0) {\n\
    \            $maxfreq++;\n        }\n        if ($i > $max) {\n            $max\
    \ = $i;\n        }\n    }\n    return -1 if $maxfreq < $max;\n    return $max;\n\
    }", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n    \
    \    if ($freq++ == $num) {\n            $max = $num if $num > $max;\n       \
    \ }\n    }\n    return -1 if $freq < 1;\n    return $max;\n}", "    my $max =\
    \ 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq > $num)\
    \ {\n            $freq = $num;\n            $max = $num;\n        } elsif ($freq\
    \ == $num) {\n            $freq++;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq++ == $num) {\n            $max = $num if $num > $max;\n        }\n  \
    \  }\n    return $max if $freq > 0;\n    return -1;\n}", "    my $max = 0;\n \
    \   my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq > $num) {\n\
    \            $freq = $num;\n            $max = $num;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst)\
    \ {\n        my $freq = grep { $num == $_ } (keys %{$freq{$_}});\n        if ($freq\
    \ > $maxFreq) {\n            $max = $num;\n            $maxFreq = $freq;\n   \
    \     }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n \
    \   foreach my $num (@$lst) {\n        if ($freq++ > $freq) {\n            $max\
    \ = $num;\n            $freq = $freq;\n        }\n    }\n    return $max if $freq\
    \ >= $freq;\n    return -1;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n   \
    \ foreach my $num (@$lst) {\n        if ($num > 0) {\n            my $freq = grep\
    \ { $num == $_ } @$lst;\n            if ($freq > $maxFreq) {\n               \
    \ $max = $num;\n                $maxFreq = $freq;\n            }\n        }\n\
    \    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach\
    \ my $num (@$lst) {\n        $freq++;\n        if ($freq > $max) {\n         \
    \   $max = $freq;\n        }\n        if ($num > 0) {\n            $freq--;\n\
    \        }\n    }\n    return $max if $freq >= $max;\n    return -1;\n}", "  \
    \  my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq++ == $num) {\n            $max = $num;\n        }\n    }\n    return\
    \ $max if $freq > $max;\n    return -1;\n}", "    my $max = 0;\n    my $freq =\
    \ 0;\n    foreach my $num (@$lst) {\n        if ($freq++ == $num) {\n        \
    \    $max = $num if $num > $max;\n        }\n    }\n    return $max if $freq >\
    \ $max;\n    return -1;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach\
    \ my $num (@$lst) {\n        $freq++;\n        if ($freq > $max) {\n         \
    \   $max = $freq;\n        }\n        if ($freq >= $num) {\n            $max =\
    \ $num;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq\
    \ = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n        if ($freq > $max)\
    \ {\n            $max = $freq;\n        }\n        if ($freq >= $num) {\n    \
    \        $max = $num;\n        }\n    }\n    return $max;\n}", "    my $max =\
    \ -1;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n  \
    \      if ($freq > $max) {\n            $max = $num;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $maxFreq = -1;\n    foreach my $num (@$lst)\
    \ {\n        my $freq = grep { $num == $_ } @$lst;\n        if ($freq > $maxFreq)\
    \ {\n            $max = $num;\n            $maxFreq = $freq;\n        }\n    }\n\
    \    return $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my\
    \ $num (@$lst) {\n        my $freq = grep($num == $_, $lst);\n        if ($freq\
    \ > $maxFreq) {\n            $max = $num;\n            $maxFreq = $freq;\n   \
    \     }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n \
    \   foreach my $num (@$lst) {\n        $freq++ if $num == $max;\n        $max\
    \ = $num if $freq >= $num;\n    }\n    return $max if $freq > 0;\n    return -1;\n\
    }", "    my $max = 0;\n    my $maxfreq = 0;\n    foreach my $num (@$lst) {\n \
    \       if ($num > 0) {\n            my $freq = grep { $num == $_ } @$lst;\n \
    \           if ($freq > $maxfreq) {\n                $max = $num;\n          \
    \      $maxfreq = $freq;\n            }\n        }\n    }\n    return $max;\n}",
  "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq++ == $num) {\n            $max = $num;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($freq++ == $num) {\n            $max = $num;\n        }\n   \
    \ }\n    return $max if $freq >= $max;\n    return -1;\n}", "    my $max = 0;\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n        if\
    \ ($freq > $max) {\n            $max = $freq;\n        }\n        if ($freq >=\
    \ $num) {\n            $freq = $num;\n        }\n    }\n    return $max;\n}",
  "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq > $num) {\n            $freq = $num;\n            $max = $num;\n    \
    \    }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n  \
    \  foreach my $num (@$lst) {\n        if ($freq > $num) {\n            $freq =\
    \ $num;\n            $max = $num;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq > $num) {\n            $freq = $num;\n            $max = $num;\n    \
    \    }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n  \
    \  foreach my $num (@$lst) {\n        if ($freq > $num) {\n            $freq =\
    \ $num;\n            $max = $num;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq > $num) {\n            $freq = $num;\n            $max = $num;\n    \
    \    }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=perl,arrays |>\n<| c |>\n\
    This doesn't work if there are multiple values that share the same frequency.\n\
    <|/ c |>\n<| c |>\nI guess I misunderstood the question. I'll update my answer.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if there are multiple values that share the\
    \ same frequency.\n<|/ c |>\n<| c |>\nI guess I misunderstood the question. I'll\
    \ update my answer.\n<|/ c |>\n<| c |>\nThis doesn't work if there are multiple\
    \ values that share the same frequency.\n<|/ c |>\n<| a tags=perl,arrays |>\n\
    <code>", "    my $max = $lst[0];\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($freq > $num) {\n            $freq = $num;\n            $max\
    \ = $num;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $maxFreq\
    \ = 0;\n    foreach my $num (@$lst) {\n        if ($num > 0) {\n            if\
    \ ($num > $max) {\n                $max = $num;\n                $maxFreq = $lst->{$num};\n\
    \            }\n        }\n    }\n    if ($maxFreq >= $max) {\n        return\
    \ $max;\n    }\n    return -1;\n}", "    my $max = 0;\n    my $freq = 0;\n   \
    \ foreach my $num (@$lst) {\n        if ($freq > $num) {\n            $freq =\
    \ $num;\n            $max = $num;\n        }\n    }\n    return $max;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't work if there are multiple occurrences\
    \ of the same number. For example, search([4, 1, 2, 2, 3, 1]) returns 2, when\
    \ it should be 1.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it\
    \ out. Now it works.\n<|/ c |>\n<| a tags=perl,arrays |>\n<code>", "    my $max\
    \ = 0;\n    my $maxfreq = 0;\n    foreach my $num (@$lst) {\n        if ($num\
    \ > 0) {\n            if ($num > $max) {\n                $max = $num;\n     \
    \           $maxfreq = $lst->{$num};\n            }\n        }\n    }\n    return\
    \ -1 if $maxfreq == 0;\n    return $max;\n}", "    my $max = $lst[0];\n    my\
    \ $freq = $lst[0];\n    foreach my $i (@$lst) {\n        if ($freq > $i) {\n \
    \           $freq = $i;\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    my $maxIndex = 0;\n\
    \    my $i;\n    my $j;\n    \n    foreach $i (@$lst) {\n        my $freq = $lst->[$i];\n\
    \        if ($freq > $maxFreq) {\n            $maxFreq = $freq;\n            $maxIndex\
    \ = $i;\n        }\n    }\n    return $maxIndex;\n}", "    my $max = 0;\n    my\
    \ $maxFreq = 0;\n    foreach my $num (@$lst) {\n        my $freq = grep { $num\
    \ == $_ } (keys %{$freq{$_}});\n        if ($freq > $maxFreq) {\n            $max\
    \ = $num;\n            $maxFreq = $freq;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n \
    \       my $freq = grep($num == $_, $lst);\n        if ($freq > $maxFreq) {\n\
    \            $max = $num;\n            $maxFreq = $freq;\n        }\n    }\n \
    \   return $max;\n}\n</code>\n<|/ a tags=perl,arrays |>\n<| c |>\nThis doesn't\
    \ work if there are multiple numbers with the same frequency.\n<|/ c |>\n<| c\
    \ |>\n: It does work if there are multiple numbers with the same frequency. `grep`\
    \ returns the number of times the number appears in the list. Since `grep` returns\
    \ a number, `$freq` will never be greater than `$maxFreq`.\n<|/ c |>\n<| c |>\n\
    : I didn't say it didn't, I said it doesn't.\n<|/ c |>\n<| c |>\n: I didn't say\
    \ it didn't, I said it doesn't.\n<|/ c |>\n<| c |>\n: I didn't say it didn't,\
    \ I said it doesn't.\n<|/ c |>\n<| a tags=perl,arrays |>\n<code>", "    my $max\
    \ = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n        if ($num\
    \ > 0) {\n            my $freq = grep { $num == $_ } @$lst;\n            if ($freq\
    \ > $maxFreq) {\n                $max = $num;\n                $maxFreq = $freq;\n\
    \            }\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n  \
    \  my $maxFreq = 0;\n    foreach my $num (@$lst) {\n        my $freq = grep($num\
    \ == $_, $lst);\n        if ($freq > $maxFreq) {\n            $max = $num;\n \
    \           $maxFreq = $freq;\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n\
    \        if ($freq > $max) {\n            $max = $freq;\n        }\n        if\
    \ ($freq >= $num) {\n            $freq = $num;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n \
    \       if ($num > 0) {\n            if ($num > $max) {\n                $max\
    \ = $num;\n                $maxFreq = $lst->{$num};\n            }\n        }\n\
    \    }\n    return $max;\n}", "    my $max = $lst[0];\n    my $freq = 0;\n   \
    \ foreach my $num (@$lst) {\n        if ($freq++ > $num) {\n            $max =\
    \ $num;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq\
    \ = 0;\n    foreach my $num (@$lst) {\n        if ($freq > $num) {\n         \
    \   $freq = $num;\n            $max = $num;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n \
    \       if ($num > 0) {\n            my $freq = grep { $_ eq $num } @$lst;\n \
    \           if ($freq > $maxFreq) {\n                $max = $num;\n          \
    \      $maxFreq = $freq;\n            }\n        }\n    }\n    return $max;\n}",
  "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq++ == $num) {\n            $max = $num if $num > $max;\n        }\n  \
    \  }\n    return -1 if $freq == 0;\n    return $max;\n}", "    my $max = 0;\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq > $num) {\n\
    \            $freq = $num;\n            $max = $num;\n        } elsif ($freq ==\
    \ $num) {\n            $freq++;\n        }\n    }\n    return $max;\n}", "   \
    \ my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq++\
    \ > $freq) {\n            $max = $num;\n            $freq = $freq;\n        }\n\
    \    }\n    return $max if $freq >= $freq;\n    return -1;\n}", "    my $max =\
    \ 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq++ ==\
    \ $num) {\n            $max = $num if $num > $max;\n        }\n    }\n    return\
    \ -1 if $freq == 0;\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n\
    \    foreach my $num (@$lst) {\n        if ($freq > $num) {\n            $freq\
    \ = $num;\n            $max = $num;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq++ > $freq) {\n            $max = $num;\n            $freq = $freq;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = $lst[0];\n    my $freq\
    \ = 0;\n    foreach my $num (@$lst) {\n        if ($freq++ >= $num) {\n      \
    \      $max = $num;\n        }\n    }\n    return $max if $freq > 0;\n    return\
    \ -1;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n\
    \        $freq++;\n        if ($freq > $max) {\n            $max = $freq;\n  \
    \      }\n        if ($freq >= $num) {\n            $max = $num;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach\
    \ my $num (@$lst) {\n        if ($freq++ == $num) {\n            $max = $num if\
    \ $num > $max;\n        }\n    }\n    return -1 if $freq == 0;\n    return $max;\n\
    }", "    my $max = $lst[0];\n    my $freq = 0;\n    foreach my $num (@$lst) {\n\
    \        if ($freq++ > $num) {\n            $max = $num;\n        }\n    }\n \
    \   return $max;\n}", "    my $max = $lst[0];\n    my $freq = $lst[0];\n    foreach\
    \ my $i (@$lst) {\n        if ($freq > $i) {\n            $freq = $i;\n      \
    \      $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max = $lst[0];\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq++ > $num)\
    \ {\n            $max = $num;\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq++\
    \ > $num) {\n            $freq = $num;\n            $max = $num;\n        }\n\
    \    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach\
    \ my $num (@$lst) {\n        $freq++;\n        if ($freq > $max) {\n         \
    \   $max = $freq;\n        }\n        if ($num == $freq) {\n            $max =\
    \ $num;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq\
    \ = 0;\n    foreach my $num (@$lst) {\n        if ($freq++ == $num) {\n      \
    \      $max = $num if $num > $max;\n        }\n    }\n    return $max if $freq\
    \ > $max;\n    return -1;\n}", "    my $max = $lst[0];\n    my $freq = 0;\n  \
    \  my $i;\n    \n    foreach $i (@$lst) {\n        if ($freq > $i) {\n       \
    \     $freq = $i;\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n \
    \       if ($num > 0) {\n            $max = $num if $num > $max;\n           \
    \ $maxFreq += $num if $num > $maxFreq;\n        }\n    }\n    return -1 if $maxFreq\
    \ == 0;\n    return $max if $maxFreq >= $max;\n    return -1;\n}", "    my $max\
    \ = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq++\
    \ == $num) {\n            $max = $num if $num > $max;\n        }\n    }\n    return\
    \ $max if $freq > $max;\n    return -1;\n}", "    my $max = 0;\n    my $freq =\
    \ 0;\n    foreach my $num (@$lst) {\n        if ($freq++ == $num) {\n        \
    \    $max = $num if $num > $max;\n        }\n    }\n    return -1 if $freq ==\
    \ 0;\n    return $max;\n}\n</code>\n<|/ a tags=perl,arrays,algorithm |>\n<| c\
    \ |>\nThis doesn't work if the list is empty.\n<|/ c |>\n<| c |>\n: It doesn't\
    \ work if the list is empty. Try it yourself.\n<|/ c |>\n<| c |>\n: It does work\
    \ if you give it an empty list. Try it yourself.\n<|/ c |>\n<| c |>\n: It does\
    \ work if you give it an empty list. Try it yourself.\n<|/ c |>\n<| c |>\n: It\
    \ does work if you give it an empty list. Try it yourself.\n<|/ c |>\n<| a tags=perl,arrays,algorithm\
    \ |>\n<code>", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($freq++ > $freq) {\n            $max = $num;\n        }\n   \
    \ }\n    return $max if $freq > $freq;\n    return -1;\n}", "    my $max = 0;\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n        if\
    \ ($freq > $max) {\n            $max = $freq;\n        }\n        if ($freq >=\
    \ $num) {\n            $max = $num;\n        }\n    }\n    return $max;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/10295743)\n<|/ c |>\n<| c |>\n\
    The question was \"How to find the greatest integer that is greater than zero,\
    \ and has a frequency greater than or equal to the value of the integer itself.\
    \ The frequency of an integer is the number of times it appears in the list.\"\
    \ The code does exactly that. How does it not answer the question?\n<|/ c |>\n\
    <| c |>\nThe question was \"How to find the greatest integer that is greater than\
    \ zero, and has a frequency greater than or equal to the value of the integer\
    \ itself. The frequency of an integer is the number of times it appears in the\
    \ list.\" The code does exactly that. How does it not answer the question?\n<|/\
    \ c |>\n<| c |>\nThe question was \"How to find the greatest integer that is greater\
    \ than zero, and has a frequency greater than or equal to the value of the integer\
    \ itself. The frequency of an integer is the number of times it appears in the\
    \ list.\" The code does exactly that. How does it not answer the question?\n<|/\
    \ c |>\n<| c |>\nThe question was \"How to find the greatest integer that is greater\
    \ than zero, and has a frequency greater than or equal to the value of the integer\
    \ itself. The frequency of an integer is the number of times it appears in the\
    \ list.\" The code does exactly that. How does it not answer the question?\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>", "    my $max = 0;\n    my $maxFreq = 0;\n \
    \   foreach my $num (@$lst) {\n        if ($num > 0) {\n            $maxFreq++;\n\
    \            if ($num > $max) {\n                $max = $num;\n            }\n\
    \        }\n    }\n    return -1 if $maxFreq == 0;\n    return $max;\n}", "  \
    \  my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n       \
    \ my $freq = grep { $num == $_ } @$lst;\n        if ($freq > $maxFreq) {\n   \
    \         $max = $num;\n            $maxFreq = $freq;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = $lst[0];\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($num > $max) {\n            $max = $num;\n        }\n       \
    \ if ($freq++ >= $num) {\n            return $max;\n        }\n    }\n    return\
    \ -1;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst)\
    \ {\n        my $freq = grep { $num == $_ } (keys %{$freq{$_}});\n        if ($freq\
    \ > $maxFreq) {\n            $max = $num;\n            $maxFreq = $freq;\n   \
    \     }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n\
    \    foreach my $num (@$lst) {\n        my $freq = grep($num == $_, $lst);\n \
    \       if ($freq > $maxFreq) {\n            $max = $num;\n            $maxFreq\
    \ = $freq;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my\
    \ $maxFreq = 0;\n    foreach my $num (@$lst) {\n        my $freq = grep { $num\
    \ == $_ } @$lst;\n        if ($freq > $maxFreq) {\n            $max = $num;\n\
    \            $maxFreq = $freq;\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n\
    \        if ($freq > $max) {\n            $max = $freq;\n        }\n        if\
    \ ($freq >= $num) {\n            $freq = $num;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n    \
    \    if ($freq++ == $num) {\n            $max = $num if $num > $max;\n       \
    \ }\n    }\n    return $max if $freq >= $max;\n    return -1;\n}", "    my $max\
    \ = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n        my $freq\
    \ = grep($num == $_, $lst);\n        if ($freq > $maxFreq) {\n            $max\
    \ = $num;\n            $maxFreq = $freq;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n    \
    \    if ($freq > $num) {\n            $freq = $num;\n            $max = $num;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n\
    \    foreach my $num (@$lst) {\n        if ($freq > $num) {\n            $freq\
    \ = $num;\n            $max = $num;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = 0;\n    my $maxFreq = -1;\n    foreach my $num (@$lst) {\n     \
    \   my $freq = grep { $num == $_ } @$lst;\n        if ($freq > $maxFreq) {\n \
    \           $max = $num;\n            $maxFreq = $freq;\n        }\n    }\n  \
    \  return $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num\
    \ (@$lst) {\n        my $freq = grep($num == $_, $lst);\n        if ($freq > $maxFreq)\
    \ {\n            $max = $num;\n            $maxFreq = $freq;\n        }\n    }\n\
    \    return $max;\n}", "    my $max = -1;\n    my $freq = 0;\n    foreach my $num\
    \ (@$lst) {\n        $freq++;\n        if ($freq > $max) {\n            $max =\
    \ $freq;\n        }\n        if ($num > 0) {\n            $freq -= $num;\n   \
    \     }\n    }\n    return $max;\n}", "    my $max = $lst[0];\n    my $freq =\
    \ 0;\n    foreach my $num (@$lst) {\n        if ($freq > $num) {\n           \
    \ $freq = $num;\n            $max = $num;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n \
    \       my $freq = grep { $num == $_ } (keys %{ $freq{$_} });\n        if ($freq\
    \ > $maxFreq) {\n            $max = $num;\n            $maxFreq = $freq;\n   \
    \     }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=perl,hash,arrays\
    \ |>\n<code>", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst)\
    \ {\n        my $freq = grep { $num == $_ } (keys %$freq);\n        if ($freq\
    \ > $maxFreq) {\n            $max = $num;\n            $maxFreq = $freq;\n   \
    \     }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n \
    \   foreach my $num (@$lst) {\n        $freq++;\n        if ($freq > $max) {\n\
    \            $max = $freq;\n        }\n        if ($freq >= $num) {\n        \
    \    $max = $num;\n        }\n    }\n    return -1 if $freq == 0;\n    return\
    \ $max;\n}", "    my $max = $lst[0];\n    my $freq = $lst[0];\n    foreach my\
    \ $num (@$lst) {\n        if ($freq > $num) {\n            $freq = $num;\n   \
    \         $max = $num;\n        }\n    }\n    return $max;\n}", "    my $max =\
    \ 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if ($freq++ ==\
    \ $num) {\n            $max = $num if $num > $max;\n        }\n    }\n    return\
    \ -1 if $freq == 0;\n    return $max;\n}", "    my $max = 0;\n    my $maxFreq\
    \ = 0;\n    foreach my $num (@$lst) {\n        my $freq = grep($num == $_, $lst);\n\
    \        if ($freq > $maxFreq) {\n            $max = $num;\n            $maxFreq\
    \ = $freq;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my\
    \ $maxfreq = 0;\n    foreach my $num (@$lst) {\n        if ($num > 0) {\n    \
    \        if ($num > $max) {\n                $max = $num;\n                $maxfreq\
    \ = $lst->{$num};\n            }\n        }\n    }\n    return $maxfreq > $lst->{$max}\
    \ ? $max : -1;\n}", "    my $max = -1;\n    my $freq = 0;\n    foreach my $num\
    \ (@$lst) {\n        if ($freq > $num) {\n            $freq = $num;\n        \
    \    $max = $num;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n\
    \    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n        if\
    \ ($freq > $max) {\n            $max = $freq;\n        }\n        if ($freq >=\
    \ $num) {\n            $max = $num;\n        }\n    }\n    return $max;\n}", " \
    \   my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n      \
    \  my $freq = grep { $num == $_ } (keys %{$freq{$_}});\n        if ($freq > $maxFreq)\
    \ {\n            $max = $num;\n            $maxFreq = $freq;\n        }\n    }\n\
    \    return $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my\
    \ $num (@$lst) {\n        my $freq = grep { $num == $_ } @$lst;\n        if ($freq\
    \ > $maxFreq) {\n            $max = $num;\n            $maxFreq = $freq;\n   \
    \     }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n \
    \   foreach my $num (@$lst) {\n        if ($freq++ == $num) {\n            $max\
    \ = $num if $num > $max;\n        }\n    }\n    return $max if $freq > $max;\n\
    \    return -1;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num\
    \ (@$lst) {\n        if ($freq > $num) {\n            $freq = $num;\n        \
    \    $max = $num;\n        } elsif ($freq == $num) {\n            $freq++;\n \
    \       }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n\
    \    foreach my $num (@$lst) {\n        $freq++;\n        if($freq > $max) {\n\
    \            $max = $freq;\n        }\n        if($num > 0) {\n            $freq--;\n\
    \        }\n    }\n    return $max if $freq > $max;\n    return -1;\n}", "   \
    \ my $max = $lst[0];\n    my $freq = $lst[0];\n    foreach my $i (@$lst) {\n \
    \       if ($freq > $i) {\n            $freq = $i;\n            $max = $i;\n \
    \       }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n\
    \    foreach my $num (@$lst) {\n        if ($freq++ > $max) {\n            $max\
    \ = $num;\n        }\n    }\n    return $max if $freq >= $max;\n    return -1;\n\
    }\n</code>\n<|/ a tags=perl,algorithm |>\n<| c |>\nThis doesn't work if there\
    \ are multiple occurrences of the same number.\n<|/ c |>\n<| c |>\n: Yes, it does.\
    \ `search([4, 1, 2, 2, 3, 1])` returns `2`, not `3`.\n<|/ c |>\n<| c |>\n: Yes,\
    \ it does. `search([4, 1, 2, 2, 3, 1])` returns `2`, not `3`.\n<|/ c |>\n<| c\
    \ |>\n: Yes, it does. `search([4, 1, 2, 2, 3, 1])` returns `2`, not `3`.\n<|/\
    \ c |>\n<| c |>\n: Yes, it does. `search([4, 1, 2, 2, 3, 1])` returns `2`, not\
    \ `3`.\n<|/ c |>\n<| a tags=perl,algorithm |>\n<code>", "    my $max = 0;\n  \
    \  my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++ if $num > 0;\n\
    \        $max = $num if $freq >= $num;\n    }\n    return $max if $freq >= $max;\n\
    \    return -1;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num\
    \ (@$lst) {\n        if ($num > 0) {\n            my $freq = grep { $_ eq $num\
    \ } @$lst;\n            if ($freq > $maxFreq) {\n                $max = $num;\n\
    \                $maxFreq = $freq;\n            }\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($num > 0) {\n            my $freq = grep($num == $_, $lst);\n\
    \            if ($freq > $maxFreq) {\n                $max = $num;\n         \
    \       $maxFreq = $freq;\n            }\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n    \
    \    if ($freq++ > $max) {\n            $max = $freq;\n        }\n        if ($freq\
    \ >= $num) {\n            $max = $num;\n        }\n    }\n    return $max;\n}",
  "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n       \
    \ my $freq = grep { $_ eq $num } @$lst;\n        if ($freq > $maxFreq) {\n   \
    \         $max = $num;\n            $maxFreq = $freq;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        $freq++;\n        if ($freq > $max) {\n            $max = $freq;\n\
    \        }\n        if ($num == $max) {\n            return $num;\n        }\n\
    \    }\n    return -1;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach\
    \ my $num (@$lst) {\n        $freq++ if $num == $max;\n        $max = $num if\
    \ $freq >= $num;\n    }\n    return $max if $freq > 0;\n    return -1;\n}", " \
    \   my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        if\
    \ ($freq > $num) {\n            $freq = $num;\n            $max = $num;\n    \
    \    }\n    }\n    return $max;\n}\n</code>\n<|/ a |>\n<| c |>\nThanks for your\
    \ answer. Your code works perfectly for small lists, but for large lists it takes\
    \ too much time. My list has about 500 elements and it takes about 30 seconds\
    \ to finish the task. Do you know any way to make it faster?\n<|/ c |>\n<| c |>\n\
    I added a faster version. Hope it helps.\n<|/ c |>\n<| c |>\nThank you very much!\
    \ It works perfectly!\n<|/ c |>\n<| a |>\n<code>", "    my $max = 0;\n    my $freq\
    \ = 0;\n    foreach my $num (@$lst) {\n        $freq++ if $num > 0;\n        $max\
    \ = $num if $freq >= $num;\n    }\n    return -1 if $freq == 0;\n    return $max;\n\
    }", "    my $max = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n \
    \       my $freq = grep { $num == $_ } (keys %{$freq{$_}});\n        if ($freq\
    \ > $maxFreq) {\n            $max = $num;\n            $maxFreq = $freq;\n   \
    \     }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n\
    \    foreach my $num (@$lst) {\n        if ($num > 0) {\n            $maxFreq++;\n\
    \            if ($num > $max) {\n                $max = $num;\n            }\n\
    \        }\n    }\n    if ($maxFreq >= $max) {\n        return $max;\n    }\n\
    \    return -1;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num\
    \ (@$lst) {\n        if ($freq++ > $num) {\n            $max = $num;\n       \
    \ }\n    }\n    return $max if $freq > $max;\n    return -1;\n}", "    my $max\
    \ = 0;\n    my $maxFreq = 0;\n    foreach my $i (@$lst) {\n        if ($i > $max)\
    \ {\n            $max = $i;\n            $maxFreq = $lst->[$i];\n        }\n \
    \   }\n    return $maxFreq if $maxFreq >= $max;\n    return -1;\n}", "    my $max\
    \ = $lst[0];\n    my $freq = 0;\n    my $i;\n    \n    for ($i = 1; $i < @$lst;\
    \ $i++) {\n        if ($lst[$i] >= $max) {\n            $max = $lst[$i];\n   \
    \         $freq++;\n        }\n    }\n    \n    return -1 if $freq == 0;\n   \
    \ return $max;\n}", "    my $max = 0;\n    my $maxFreq = 0;\n    my $maxIndex\
    \ = 0;\n    foreach my $i (@$lst) {\n        my $freq = grep($i eq $_, $lst);\n\
    \        if ($freq > $maxFreq) {\n            $max = $i;\n            $maxFreq\
    \ = $freq;\n            $maxIndex = $i;\n        }\n    }\n    return $max;\n}",
  "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n        $freq++;\n\
    \        if ($freq > $max) {\n            $max = $freq;\n        }\n        if\
    \ ($freq >= $num) {\n            $freq = $num;\n        }\n    }\n    return $max;\n\
    }", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst) {\n    \
    \    if ($freq > $num) {\n            $freq = $num;\n            $max = $num;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n\
    \    foreach my $num (@$lst) {\n        $freq++ if $num == $max;\n        $freq++\
    \ if $num > $max;\n        $max = $num if $freq >= $num;\n    }\n    return -1\
    \ if $freq == 0;\n    return $max;\n}", "    my $max = 0;\n    my $freq = 0;\n\
    \    foreach my $num (@$lst) {\n        $freq++;\n        if ($freq > $max) {\n\
    \            $max = $freq;\n        }\n        if ($freq >= $num) {\n        \
    \    $freq = $num;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n\
    \    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n        my $freq = grep\
    \ { $num == $_ } (keys %{$freq{$_}});\n        if ($freq > $maxFreq) {\n     \
    \       $max = $num;\n            $maxFreq = $freq;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max = 0;\n    my $freq = 0;\n    foreach my $num (@$lst)\
    \ {\n        if ($freq > $num) {\n            $freq = $num;\n            $max\
    \ = $num;\n        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=perl,arrays |>\n<code>", "    my $max = 0;\n    my $maxFreq = 0;\n \
    \   foreach my $num (@$lst) {\n        my $freq = grep { $num == $_ } @$lst;\n\
    \        if ($freq > $maxFreq) {\n            $max = $num;\n            $maxFreq\
    \ = $freq;\n        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=perl,algorithm\
    \ |>\n<| c |>\nThis doesn't work if there are multiple elements that have the\
    \ greatest frequency.\n<|/ c |>\n<| c |>\n: I didn't see that requirement in the\
    \ question. I've updated my answer to handle that case.\n<|/ c |>\n<| c |>\n:\
    \ Thanks for pointing that out. I've updated my answer to handle that case.\n\
    <|/ c |>\n<| c |>\n: I added a solution that doesn't require a hash to keep track\
    \ of the frequencies.\n<|/ c |>\n<| c |>\n: Thanks for your solution. I've updated\
    \ my answer to include a solution that doesn't require a hash to keep track of\
    \ the frequencies.\n<|/ c |>\n<| a tags=perl,algorithm |>\n<code>", "    my $max\
    \ = 0;\n    my $maxFreq = 0;\n    foreach my $num (@$lst) {\n        if ($num\
    \ > $max) {\n            $max = $num;\n            $maxFreq = $lst->{$num};\n\
    \        }\n    }\n    return $max;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

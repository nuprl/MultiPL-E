language: pl
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 2) ? 1 : fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = $fibs[$n-1];\n\
    \    my $b = $fibs[$n-2]; \n    return $a + $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4 = 1;\n    my\
    \ $fib5 = 1;\n    my $fib6 = 1;\n    my $fib7 = 1;\n    my $fib8 = 1;\n    my\
    \ $fib9 = 1;\n    my $fib10 = 1;\n    my $fib11 = 1;\n    my $fib12 = 1;\n   \
    \ my $fib13 = 1;\n    my $fib14 = 1;\n    my $fib15 = 1;\n    my $fib16 = 1;\n\
    \    my $fib17 = 1;\n    my $fib18 = 1;\n    my $fib19 = 1;\n    my $fib20 = 1;\n\
    \    my $fib21 = 1;\n    my $fib22 = 1;\n    my $fib23 = 1;\n    my $fib24 = 1;\n\
    \    my $fib25 = 1;\n    my $fib26 = 1;\n    my $fib27 = 1;\n    my $fib28 = 1;\n\
    \    my $fib29 = 1;\n    my $fib30 = 1;\n    my $fib31 = 1;\n    my $fib32 = 1;\n\
    \    my $fib33 = 1;\n    my $fib34 = 1;\n    my $fib35 = 1;\n    my $fib36 = 1;\n\
    \    my $fib37 = 1;\n    my $fib38 = 1;\n    my $fib39 = 1;\n    my $fib40 = 1;\n\
    \    my $fib41 = 1;\n    my $fib42 = 1;\n    my $fib43 = 1;\n    my $fib44 = 1;\n\
    \    my $fib45 = 1;\n    my $fib46 = 1;\n    my $fib47 = 1;\n    my $fib48 = 1;\n\
    \    my $fib49 = 1;\n    my $fib50 = 1;\n    my $fib51 = 1;\n    my $fib52 = 1;\n\
    \    my $fib53 = 1;\n    my $fib54 = 1;\n    my $fib55 = 1;\n    my $fib56 = 1;\n\
    \    my $fib57 = 1;\n    my $fib58 = 1;\n    my $fib59 = 1;\n    my $fib60 = 1;\n\
    \    my $fib61 = 1;\n    my $fib62 = 1;\n    my $fib63 = 1;\n    my $fib64 = 1;\n\
    \    my $fib65 = 1;\n    my $fib66 = 1;\n    my $fib67 = 1;\n    my $fib68 = 1;\n\
    \    my $fib69 = 1;\n    my $fib70 = 1;\n    my $fib71 = 1;\n    my $fib72 = 1;\n\
    \    my $fib73 = 1;\n    my $fib74 = 1;\n    my $fib75 = 1;\n    my $fib76 = 1;\n\
    \    my $fib77 = 1;\n    my $fib78 = 1;\n    my $fib79 = 1;\n    my $fib80 = 1;\n\
    \    my $fib81 = 1;\n    my $fib82 = 1;\n    my $fib83 = 1;\n    my $\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp9tqepbjz.pl line 95,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 95, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp9tqepbjz.pl line 122, at end of line\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 122, at EOF\nExecution of /tmp/tmp9tqepbjz.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: -1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    my $a = $fib;\n    my $b = $fib;\n \
    \   $fib += $n <= 1 ? 1 : $fib;\n    while ($fib < $n) {\n        $fib += $a;\n\
    \        $a += $b;\n        $b += $fib;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659821124
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n - ($n-1)) / 2;\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp0zpgxv2x.pl line 131,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp0zpgxv2x.pl line 131, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp0zpgxv2x.pl line 158, at end of line\nsyntax\
    \ error at /tmp/tmp0zpgxv2x.pl line 158, at EOF\nExecution of /tmp/tmp0zpgxv2x.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821119
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n < 4) ? $n : ($n\
    \ - 1) + fib(int($n / 4));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($n -= 1) + ($n\
    \ -= 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n < 2 ? $n :\
    \ $fib($n-2) + $fib($n-1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmp2trocv7i.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmp2trocv7i.pl line 12.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    while ($n > 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n\
    \        $n--;\n    }\n    return $c;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a;\n\
    \    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my\
    \ $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n\
    \    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my\
    \ $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n\
    \    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my\
    \ $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n\
    \    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my\
    \ $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n\
    \    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my\
    \ $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my\
    \ $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n\
    \    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my\
    \ $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n\
    \    my $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    \n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t use global $_ in "my" at /tmp/tmpt9fgys1c.pl line 63, near "my $_"

    Can''t use global $_ in "my" at /tmp/tmpt9fgys1c.pl line 116, near "my $_"

    BEGIN not safe after errors--compilation aborted at /tmp/tmpt9fgys1c.pl line 123.

    '
  stdout: ''
  timestamp: 1659821119
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($fib + $fib\
    \ - $fib) / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821089
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4 = 1;\n    my\
    \ $fib5 = 1;\n    my $fib6 = 1;\n    my $fib7 = 1;\n    my $fib8 = 1;\n    my\
    \ $fib9 = 1;\n    my $fib10 = 1;\n    my $fib11 = 1;\n    my $fib12 = 1;\n   \
    \ my $fib13 = 1;\n    my $fib14 = 1;\n    my $fib15 = 1;\n    my $fib16 = 1;\n\
    \    my $fib17 = 1;\n    my $fib18 = 1;\n    my $fib19 = 1;\n    my $fib20 = 1;\n\
    \    my $fib21 = 1;\n    my $fib22 = 1;\n    my $fib23 = 1;\n    my $fib24 = 1;\n\
    \    my $fib25 = 1;\n    my $fib26 = 1;\n    my $fib27 = 1;\n    my $fib28 = 1;\n\
    \    my $fib29 = 1;\n    my $fib30 = 1;\n    my $fib31 = 1;\n    my $fib32 = 1;\n\
    \    my $fib33 = 1;\n    my $fib34 = 1;\n    my $fib35 = 1;\n    my $fib36 = 1;\n\
    \    my $fib37 = 1;\n    my $fib38 = 1;\n    my $fib39 = 1;\n    my $fib40 = 1;\n\
    \    my $fib41 = 1;\n    my $fib42 = 1;\n    my $fib43 = 1;\n    my $fib44 = 1;\n\
    \    my $fib45 = 1;\n    my $fib46 = 1;\n    my $fib47 = 1;\n    my $fib48 = 1;\n\
    \    my $fib49 = 1;\n    my $fib50 = 1;\n    my $fib51 = 1;\n    my $fib52 = 1;\n\
    \    my $fib53 = 1;\n    my $fib54 = 1;\n    my $fib55 = 1;\n    my $fib56 = 1;\n\
    \    my $fib57 = 1;\n    my $fib58 = 1;\n    my $fib59 = 1;\n    my $fib60 = 1;\n\
    \    my $fib61 = 1;\n    my $fib62 = 1;\n    my $fib63 = 1;\n    my $fib64 = 1;\n\
    \    my $fib65 = 1;\n    my $fib66 = 1;\n    my $fib67 = 1;\n    my $fib68 = 1;\n\
    \    my $fib69 = 1;\n    my $fib70 = 1;\n    my $fib71 = 1;\n    my $fib72 = 1;\n\
    \    my $fib73 = 1;\n    my $fib74 = 1;\n    my $fib75 = 1;\n    my $fib76 = 1;\n\
    \    my $fib77 = 1;\n    my $fib78 = 1;\n    my $fib79 = 1;\n    my $fib80 = 1;\n\
    \    my $fib81 = 1;\n    my $fib82 = 1;\n    my $fib83 = 1;\n    my $\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp9tqepbjz.pl line 95,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 95, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp9tqepbjz.pl line 122, at end of line\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 122, at EOF\nExecution of /tmp/tmp9tqepbjz.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpd30qvfzq.pl line 41, at
    end of line

    syntax error at /tmp/tmpd30qvfzq.pl line 41, at EOF

    Execution of /tmp/tmpd30qvfzq.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821119
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpvzj0mn62.pl line 131, at end
    of line

    syntax error at /tmp/tmpvzj0mn62.pl line 131, near "$q

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpvzj0mn62.pl line 158, at end
    of line

    syntax error at /tmp/tmpvzj0mn62.pl line 158, at EOF

    Execution of /tmp/tmpvzj0mn62.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 3) ? $n : (fib($n\
    \ - 1) + fib($n - 2));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($n <= 2) ? 1 : fib($n - 1) +\
    \ fib($n - 2);\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpbggk_n67.pl line 41, at
    end of line

    syntax error at /tmp/tmpbggk_n67.pl line 41, at EOF

    Execution of /tmp/tmpbggk_n67.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    for(my $i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n\
    \        $a = $b;\n        $b = $c;\n    }\n    return $c;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4 = 1;\n    my\
    \ $fib5 = 1;\n    my $fib6 = 1;\n    my $fib7 = 1;\n    my $fib8 = 1;\n    my\
    \ $fib9 = 1;\n    my $fib10 = 1;\n    my $fib11 = 1;\n    my $fib12 = 1;\n   \
    \ my $fib13 = 1;\n    my $fib14 = 1;\n    my $fib15 = 1;\n    my $fib16 = 1;\n\
    \    my $fib17 = 1;\n    my $fib18 = 1;\n    my $fib19 = 1;\n    my $fib20 = 1;\n\
    \    my $fib21 = 1;\n    my $fib22 = 1;\n    my $fib23 = 1;\n    my $fib24 = 1;\n\
    \    my $fib25 = 1;\n    my $fib26 = 1;\n    my $fib27 = 1;\n    my $fib28 = 1;\n\
    \    my $fib29 = 1;\n    my $fib30 = 1;\n    my $fib31 = 1;\n    my $fib32 = 1;\n\
    \    my $fib33 = 1;\n    my $fib34 = 1;\n    my $fib35 = 1;\n    my $fib36 = 1;\n\
    \    my $fib37 = 1;\n    my $fib38 = 1;\n    my $fib39 = 1;\n    my $fib40 = 1;\n\
    \    my $fib41 = 1;\n    my $fib42 = 1;\n    my $fib43 = 1;\n    my $fib44 = 1;\n\
    \    my $fib45 = 1;\n    my $fib46 = 1;\n    my $fib47 = 1;\n    my $fib48 = 1;\n\
    \    my $fib49 = 1;\n    my $fib50 = 1;\n    my $fib51 = 1;\n    my $fib52 = 1;\n\
    \    my $fib53 = 1;\n    my $fib54 = 1;\n    my $fib55 = 1;\n    my $fib56 = 1;\n\
    \    my $fib57 = 1;\n    my $fib58 = 1;\n    my $fib59 = 1;\n    my $fib60 = 1;\n\
    \    my $fib61 = 1;\n    my $fib62 = 1;\n    my $fib63 = 1;\n    my $fib64 = 1;\n\
    \    my $fib65 = 1;\n    my $fib66 = 1;\n    my $fib67 = 1;\n    my $fib68 = 1;\n\
    \    my $fib69 = 1;\n    my $fib70 = 1;\n    my $fib71 = 1;\n    my $fib72 = 1;\n\
    \    my $fib73 = 1;\n    my $fib74 = 1;\n    my $fib75 = 1;\n    my $fib76 = 1;\n\
    \    my $fib77 = 1;\n    my $fib78 = 1;\n    my $fib79 = 1;\n    my $fib80 = 1;\n\
    \    my $fib81 = 1;\n    my $fib82 = 1;\n    my $fib83 = 1;\n    my $\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp9tqepbjz.pl line 95,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 95, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp9tqepbjz.pl line 122, at end of line\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 122, at EOF\nExecution of /tmp/tmp9tqepbjz.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($fib + $fib -\
    \ $fib - $fib) / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-2) + fib($n-1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 2) ? 1 : fib($n-1)\
    \ + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 2) ? 1 : fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my\
    \ $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $a1;\n    my $b1;\n    my $c1;\n    my $d1;\n    my $e1;\n    my $f1;\n\
    \    my $g1;\n    my $h1;\n    my $i1;\n    my $j1;\n    my $k1;\n    my $l1;\n\
    \    my $m1;\n    my $n1;\n    my $o1;\n    my $p1;\n    my $q1;\n    my $r1;\n\
    \    my $s1;\n    my $t1;\n    my $u1;\n    my $v1;\n    my $w1;\n    my $x1;\n\
    \    my $y1;\n    my $z1;\n    my $a2;\n    my $b2;\n    my $c2;\n    my $d2;\n\
    \    my $e2;\n    my $f2;\n    my $g2;\n    my $h2;\n    my $i2;\n    my $j2;\n\
    \    my $k2;\n    my $l2;\n    my $m2;\n    my $n2;\n    my $o2;\n    my $p2;\n\
    \    my $q2;\n    my $r2;\n    my $s2;\n    my $t2;\n    my $u2;\n    my $v2;\n\
    \    my $w2;\n    my $x2;\n    my $y2;\n    my $z2;\n    my $a3;\n    my $b3;\n\
    \    my $c3;\n    my $d3;\n    my $e3;\n    my $f3;\n    my $g3;\n    my $h3;\n\
    \    my $i3;\n    my $j3;\n    my $k3;\n    my $l3;\n    my $m3;\n    my $n3;\n\
    \    my $o3;\n    my $p3;\n    my $q3;\n    my $r3;\n    my $s3;\n    my $t3;\n\
    \    my $u3;\n    my $v3;\n    my $w3;\n    my $x3;\n    my $y3;\n    my $z3;\n\
    \    my $a4;\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpjf4__37z.pl line 144,
    at end of line

    syntax error at /tmp/tmpjf4__37z.pl line 144, at EOF

    Execution of /tmp/tmpjf4__37z.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821119
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib % $n) % $n;\n\
    \    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n -= 1) + ($fib -\
    \ $fib - ($n - 2) + ($fib - $fib - $n));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpbggk_n67.pl line 41, at
    end of line

    syntax error at /tmp/tmpbggk_n67.pl line 41, at EOF

    Execution of /tmp/tmpbggk_n67.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp_nviyzr2.pl line 99, at end
    of line

    syntax error at /tmp/tmp_nviyzr2.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp_nviyzr2.pl line 126, at end
    of line

    syntax error at /tmp/tmp_nviyzr2.pl line 126, at EOF

    Execution of /tmp/tmp_nviyzr2.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821038
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($n <= 2) ? 1\
    \ : fib($n - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $fib;\n    my $fib2;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my $fib6;\n\
    \    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my $fib11;\n\
    \    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n    my $fib16;\n\
    \    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n    my $fib21;\n\
    \    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n    my $fib26;\n\
    \    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n    my $fib31;\n\
    \    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n    my $fib36;\n\
    \    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n    my $fib41;\n\
    \    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n    my $fib46;\n\
    \    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n    my $fib51;\n\
    \    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n    my $fib56;\n\
    \    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n    my $fib61;\n\
    \    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n    my $fib66;\n\
    \    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n    my $fib71;\n\
    \    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n    my $fib76;\n\
    \    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n    my $fib81;\n\
    \    my $fib82;\n    my $fib83;\n    my $\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp3l2qeo_y.pl line 101,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp3l2qeo_y.pl line 101, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp3l2qeo_y.pl line 128, at end of line\nsyntax\
    \ error at /tmp/tmp3l2qeo_y.pl line 128, at EOF\nExecution of /tmp/tmp3l2qeo_y.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821038
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n        $fib += $a;\n\
    \        $a      += $b;\n        $b      += $a;\n    }\n    return $fib;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($n <= 1) ? $n\
    \ : $fib + $fib - $n;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $fib[$n-1] if\
    \ $n > 1;\n    return $fib[$n-2] if $n > 2;\n    return $fib[$n-3] if $n > 3;\n\
    \    return $fib[$n-4] if $n > 4;\n    return $fib[$n-5] if $n > 5;\n    return\
    \ $fib[$n-6] if $n > 6;\n    return $fib[$n-7] if $n > 7;\n    return $fib[$n-8]\
    \ if $n > 8;\n    return $fib[$n-9] if $n > 9;\n    return $fib[$n-10] if $n >\
    \ 10;\n    return $fib[$n-11] if $n > 11;\n    return $fib[$n-12] if $n > 12;\n\
    \    return $fib[$n-13] if $n > 13;\n    return $fib[$n-14] if $n > 14;\n    return\
    \ $fib[$n-15] if $n > 15;\n    return $fib[$n-16] if $n > 16;\n    return $fib[$n-17]\
    \ if $n > 17;\n    return $fib[$n-18] if $n > 18;\n    return $fib[$n-19] if $n\
    \ > 19;\n    return $fib[$n-20] if $n > 20;\n    return $fib[$n-21] if $n > 21;\n\
    \    return $fib[$n-22] if $n > 22;\n    return $fib[$n-23] if $n > 23;\n    return\
    \ $fib[$n-24] if $n > 24;\n    return $fib[$n-25] if $n > 25;\n    return $fib[$n-26]\
    \ if $n > 26;\n    return $fib[$n-27] if $n > 27;\n    return $fib[$n-28] if $n\
    \ > 28;\n    return $fib[$n-29] if $n > 29;\n    return $fib[$n-30] if $n > 30;\n\
    \    return $fib[$n-31] if $n > 31;\n    return $fib[$n-32] if $n > 32;\n    return\
    \ $fib[$n-33] if $n > 33;\n    return $fib[$n-34] if $n > 34;\n    return $fib[$n-35]\
    \ if $n > 35;\n    return $fib[$n-36] if $n > 36;\n    return $fib[$n-37] if $n\
    \ > 37;\n    return $fib[$n-38] if $n > 38;\n    return $fib[$n-39] if $n > 39;\n\
    \    return $fib[$n-40] if $n > 40;\n    return $fib[$n-41] if $n > 41;\n    return\
    \ $fib[$n-42] if $n > 42;\n    return $fib[$n-43] if $n > 43;\n    return $fib[$n-44]\
    \ if $n > 44\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpgbd9pc9e.pl line 54, at end
    of line

    syntax error at /tmp/tmpgbd9pc9e.pl line 54, near "use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpgbd9pc9e.pl line 81, at end of
    line

    syntax error at /tmp/tmpgbd9pc9e.pl line 81, at EOF

    Execution of /tmp/tmpgbd9pc9e.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821119
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib\
    \ % $n) % $n;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n < 2;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659820995
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($fib + $fib\
    \ - $fib) / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821089
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    my $i;\n    for ($i = 1; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n < 2;\n\
    \    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821089
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n < 4) ? $n : ($n\
    \ - 1) + fib(int($n/2));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n        $fib += $a;\n\
    \        $a = $b;\n        $b = $fib;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = $fib[$_-1];\n\
    \    my $b = $fib[$_-2];\n    return $a if $n <= $b;\n    return $b;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($fib + $fib\
    \ - $fib) / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821089
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n        $fib += $a;\n\
    \        $a    = $b;\n        $b    = $fib;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n-1) + $fib;\n \
    \   }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n  \
    \  my $fib;\n    my $fib2;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmpjym4ut4n.pl line 101,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmpjym4ut4n.pl line 101, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmpjym4ut4n.pl line 128, at end of line\nsyntax\
    \ error at /tmp/tmpjym4ut4n.pl line 128, at EOF\nExecution of /tmp/tmpjym4ut4n.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $fib;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpihy0xk8r.pl line 45, at
    end of line

    syntax error at /tmp/tmpihy0xk8r.pl line 45, at EOF

    Execution of /tmp/tmpihy0xk8r.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($fib + $fib\
    \ - $fib) / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib\
    \ - $n) / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821089
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = $fib;\n    my $b = $fib;\n \
    \   my $c = $fib;\n    while ($n--) {\n        $c = $a + $b;\n        $a = $b;\n\
    \        $b = $c;\n    }\n    return $c;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n < 4) ? $n : ($n\
    \ - 1) + fib(int($n/2));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    \n    if ($n < 0) {\n        $fib = 0;\n    }\n    elsif\
    \ ($n == 0) {\n        $fib = 1;\n    }\n    elsif ($n == 1) {\n        $fib =\
    \ 0;\n    }\n    else {\n        while ($n > 0) {\n            $fib += $a;\n \
    \           $a *= $b;\n            $b += 1;\n            $n -= 1;\n        }\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpvzj0mn62.pl line 131, at end
    of line

    syntax error at /tmp/tmpvzj0mn62.pl line 131, near "$q

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpvzj0mn62.pl line 158, at end
    of line

    syntax error at /tmp/tmpvzj0mn62.pl line 158, at EOF

    Execution of /tmp/tmpvzj0mn62.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpb4lysub7.pl line 42, at
    end of line

    syntax error at /tmp/tmpb4lysub7.pl line 42, at EOF

    Execution of /tmp/tmpb4lysub7.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    if ($n < 0) {\n        $fib = 0;\n    }\n    elsif ($n\
    \ == 0) {\n        $fib = 1;\n    }\n    elsif ($n == 1) {\n        $fib = 1;\n\
    \    }\n    else {\n        while ($n > 0) {\n            $fib += $a;\n      \
    \      $a *= $b;\n            $b += 1;\n            $n -= 1;\n        }\n    }\n\
    \    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $fib[$n] if $n\
    \ <= $#fib;\n    my $a = $fib[$n-1];\n    my $b = $fib[$n-2] + $a;\n    $fib[$n]\
    \ = $b;\n    return $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($fib + $fib -\
    \ $fib - $fib) / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4 = 1;\n    my\
    \ $fib5 = 1;\n    my $fib6 = 1;\n    my $fib7 = 1;\n    my $fib8 = 1;\n    my\
    \ $fib9 = 1;\n    my $fib10 = 1;\n    my $fib11 = 1;\n    my $fib12 = 1;\n   \
    \ my $fib13 = 1;\n    my $fib14 = 1;\n    my $fib15 = 1;\n    my $fib16 = 1;\n\
    \    my $fib17 = 1;\n    my $fib18 = 1;\n    my $fib19 = 1;\n    my $fib20 = 1;\n\
    \    my $fib21 = 1;\n    my $fib22 = 1;\n    my $fib23 = 1;\n    my $fib24 = 1;\n\
    \    my $fib25 = 1;\n    my $fib26 = 1;\n    my $fib27 = 1;\n    my $fib28 = 1;\n\
    \    my $fib29 = 1;\n    my $fib30 = 1;\n    my $fib31 = 1;\n    my $fib32 = 1;\n\
    \    my $fib33 = 1;\n    my $fib34 = 1;\n    my $fib35 = 1;\n    my $fib36 = 1;\n\
    \    my $fib37 = 1;\n    my $fib38 = 1;\n    my $fib39 = 1;\n    my $fib40 = 1;\n\
    \    my $fib41 = 1;\n    my $fib42 = 1;\n    my $fib43 = 1;\n    my $fib44 = 1;\n\
    \    my $fib45 = 1;\n    my $fib46 = 1;\n    my $fib47 = 1;\n    my $fib48 = 1;\n\
    \    my $fib49 = 1;\n    my $fib50 = 1;\n    my $fib51 = 1;\n    my $fib52 = 1;\n\
    \    my $fib53 = 1;\n    my $fib54 = 1;\n    my $fib55 = 1;\n    my $fib56 = 1;\n\
    \    my $fib57 = 1;\n    my $fib58 = 1;\n    my $fib59 = 1;\n    my $fib60 = 1;\n\
    \    my $fib61 = 1;\n    my $fib62 = 1;\n    my $fib63 = 1;\n    my $fib64 = 1;\n\
    \    my $fib65 = 1;\n    my $fib66 = 1;\n    my $fib67 = 1;\n    my $fib68 = 1;\n\
    \    my $fib69 = 1;\n    my $fib70 = 1;\n    my $fib71 = 1;\n    my $fib72 = 1;\n\
    \    my $fib73 = 1;\n    my $fib74 = 1;\n    my $fib75 = 1;\n    my $fib76 = 1;\n\
    \    my $fib77 = 1;\n    my $fib78 = 1;\n    my $fib79 = 1;\n    my $fib80 = 1;\n\
    \    my $fib81 = 1;\n    my $fib82 = 1;\n    my $fib83 = 1;\n    my $\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp9tqepbjz.pl line 95,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 95, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp9tqepbjz.pl line 122, at end of line\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 122, at EOF\nExecution of /tmp/tmp9tqepbjz.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821038
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($n <= 1) ? $n\
    \ : $fib + $fib - $n - 1;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\n    my $fib;\n    my $fib2;\n    my $fib3;\n \
    \   my $fib4;\n    my $fib5;\n    my $fib6;\n    my $fib7;\n    my $fib8;\n  \
    \  my $fib9;\n    my $fib10;\n    my $fib11;\n    my $fib12;\n    my $fib13;\n\
    \    my $fib14;\n    my $fib15;\n    my $fib16;\n    my $fib17;\n    my $fib18;\n\
    \    my $fib19;\n    my $fib20;\n    my $fib21;\n    my $fib22;\n    my $fib23;\n\
    \    my $fib24;\n    my $fib25;\n    my $fib26;\n    my $fib27;\n    my $fib28;\n\
    \    my $fib29;\n    my $fib30;\n    my $fib31;\n    my $fib32;\n    my $fib33;\n\
    \    my $fib34;\n    my $fib35;\n    my $fib36;\n    my $fib37;\n    my $fib38;\n\
    \    my $fib39;\n    my $fib40;\n    my $fib41;\n    my $fib42;\n    my $fib43;\n\
    \    my $fib44;\n    my $fib45;\n    my $fib46;\n    my $fib47;\n    my $fib48;\n\
    \    my $fib49;\n    my $fib50;\n    my $fib51;\n    my $fib52;\n    my $fib53;\n\
    \    my $fib54;\n    my $fib55;\n    my $fib56;\n    my $fib57;\n    my $fib58;\n\
    \    my $fib59;\n    my $fib60;\n    my $fib61;\n    my $fib62;\n    my $fib63;\n\
    \    my $fib64;\n    my $fib65;\n    my $fib66;\n    my $fib67;\n    my $fib68;\n\
    \    my $fib69;\n    my $fib70;\n    my $fib71;\n    my $fib72;\n    my $fib73;\n\
    \    my $fib74;\n    my $fib75;\n    my $fib76;\n    my $fib77;\n    my $fib78;\n\
    \    my $fib79;\n    my $fib80;\n    my $fib81;\n    my $fib82;\n    my $fib83;\n\
    \    my $fib84;\n    my $fib85;\n    my $fib86\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp53e_cpab.pl line 100, at end
    of line

    syntax error at /tmp/tmp53e_cpab.pl line 100, near "$fib86

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp53e_cpab.pl line 127, at end
    of line

    syntax error at /tmp/tmp53e_cpab.pl line 127, at EOF

    Execution of /tmp/tmp53e_cpab.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\n    my $f;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $fib;\n    my $fib2;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n  \
    \  my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n  \
    \  my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpsza9bkww.pl line 129,
    at end of line

    syntax error at /tmp/tmpsza9bkww.pl line 129, at EOF

    Execution of /tmp/tmpsza9bkww.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821120
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 2) ? 1 : fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n  \
    \  my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmpuo41c7xl.pl line 131,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmpuo41c7xl.pl line 131, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmpuo41c7xl.pl line 158, at end of line\nsyntax\
    \ error at /tmp/tmpuo41c7xl.pl line 158, at EOF\nExecution of /tmp/tmpuo41c7xl.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpbggk_n67.pl line 41, at
    end of line

    syntax error at /tmp/tmpbggk_n67.pl line 41, at EOF

    Execution of /tmp/tmpbggk_n67.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n < 2 ? $n :\
    \ $fib($n - 1) + $fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpjvm7kp_9.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpjvm7kp_9.pl line 12.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    for(my $i = 0; $i <= $n; $i++) {\n        $fib += $a;\n\
    \        $a = $b;\n        $b = $fib;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = $fib[$n-1];\n\
    \    my $b = $fib[$n-2] + $a;\n    return $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $i;\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     $fib += $a;\n        $a = $b;\n        $b = $fib;\n    }\n    return $fib;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821089
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4 = 1;\n    my\
    \ $fib5 = 1;\n    my $fib6 = 1;\n    my $fib7 = 1;\n    my $fib8 = 1;\n    my\
    \ $fib9 = 1;\n    my $fib10 = 1;\n    my $fib11 = 1;\n    my $fib12 = 1;\n   \
    \ my $fib13 = 1;\n    my $fib14 = 1;\n    my $fib15 = 1;\n    my $fib16 = 1;\n\
    \    my $fib17 = 1;\n    my $fib18 = 1;\n    my $fib19 = 1;\n    my $fib20 = 1;\n\
    \    my $fib21 = 1;\n    my $fib22 = 1;\n    my $fib23 = 1;\n    my $fib24 = 1;\n\
    \    my $fib25 = 1;\n    my $fib26 = 1;\n    my $fib27 = 1;\n    my $fib28 = 1;\n\
    \    my $fib29 = 1;\n    my $fib30 = 1;\n    my $fib31 = 1;\n    my $fib32 = 1;\n\
    \    my $fib33 = 1;\n    my $fib34 = 1;\n    my $fib35 = 1;\n    my $fib36 = 1;\n\
    \    my $fib37 = 1;\n    my $fib38 = 1;\n    my $fib39 = 1;\n    my $fib40 = 1;\n\
    \    my $fib41 = 1;\n    my $fib42 = 1;\n    my $fib43 = 1;\n    my $fib44 = 1;\n\
    \    my $fib45 = 1;\n    my $fib46 = 1;\n    my $fib47 = 1;\n    my $fib48 = 1;\n\
    \    my $fib49 = 1;\n    my $fib50 = 1;\n    my $fib51 = 1;\n    my $fib52 = 1;\n\
    \    my $fib53 = 1;\n    my $fib54 = 1;\n    my $fib55 = 1;\n    my $fib56 = 1;\n\
    \    my $fib57 = 1;\n    my $fib58 = 1;\n    my $fib59 = 1;\n    my $fib60 = 1;\n\
    \    my $fib61 = 1;\n    my $fib62 = 1;\n    my $fib63 = 1;\n    my $fib64 = 1;\n\
    \    my $fib65 = 1;\n    my $fib66 = 1;\n    my $fib67 = 1;\n    my $fib68 = 1;\n\
    \    my $fib69 = 1;\n    my $fib70 = 1;\n    my $fib71 = 1;\n    my $fib72 = 1;\n\
    \    my $fib73 = 1;\n    my $fib74 = 1;\n    my $fib75 = 1;\n    my $fib76 = 1;\n\
    \    my $fib77 = 1;\n    my $fib78 = 1;\n    my $fib79 = 1;\n    my $fib80 = 1;\n\
    \    my $fib81 = 1;\n    my $fib82 = 1;\n    my $fib83 = 1;\n    my $\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp9tqepbjz.pl line 95,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 95, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp9tqepbjz.pl line 122, at end of line\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 122, at EOF\nExecution of /tmp/tmp9tqepbjz.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($fib + $fib\
    \ - $fib - $n) % $n;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 4) ? $n : ($fib\
    \ + $fib - $n - 1);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n    }\n    return\
    \ $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($n <= 1) ? $n\
    \ : $fib + $fib - $fib;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    my $i;\n    for ($i = 1; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my\
    \ $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n\
    \    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my\
    \ $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n\
    \    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_fib_cache;\n\
    \    my $_fib_cache_size;\n    my $_fib_cache_used;\n    my $_fib_cache_max;\n\
    \    my $_fib_cache_used;\n    my $_fib_cache_max;\n    my $_fib_cache_used;\n\
    \    my $_fib_cache_max;\n    my $_fib_cache_used;\n    my $_fib_cache_max;\n\
    \    my $_fib_cache_used;\n    my $_fib_cache_max;\n    my $_fib_cache_used;\n\
    \    my $_fib_cache_max;\n    my $_fib_cache_used;\n    my $_fib_cache_max;\n\
    \    my $_fib_cache_used;\n    my $_fib_cache_max;\n    my $_fib_cache_used;\n\
    \    my $_fib_cache_max;\n    my $_fib_cache_used;\n    my $_fib_cache_max;\n\
    \    my $_fib_cache_used;\n    my $_fib_cache_max;\n    my $_fib_cache_used;\n\
    \    my $_fib_cache_max;\n    my $_fib_cache_used;\n    my $_fib_cache_max;\n\
    \    my $_fib_cache_used;\n    my $_fib_cache_max;\n    my $_\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t use global $_ in "my" at /tmp/tmpjojppjs5.pl line 93, near "my $_

    "

    "use" not allowed in expression at /tmp/tmpjojppjs5.pl line 93, at end of line

    syntax error at /tmp/tmpjojppjs5.pl line 93, near "$_

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpjojppjs5.pl line 120, at end
    of line

    syntax error at /tmp/tmpjojppjs5.pl line 120, at EOF

    Execution of /tmp/tmpjojppjs5.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $fib;\n    my $fib2;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my $fib6;\n\
    \    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my $fib11;\n\
    \    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n    my $fib16;\n\
    \    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n    my $fib21;\n\
    \    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n    my $fib26;\n\
    \    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n    my $fib31;\n\
    \    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n    my $fib36;\n\
    \    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n    my $fib41;\n\
    \    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n    my $fib46;\n\
    \    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n    my $fib51;\n\
    \    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n    my $fib56;\n\
    \    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n    my $fib61;\n\
    \    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n    my $fib66;\n\
    \    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n    my $fib71;\n\
    \    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n    my $fib76;\n\
    \    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n    my $fib81;\n\
    \    my $fib82;\n    my $fib83;\n    my $\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp3l2qeo_y.pl line 101,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp3l2qeo_y.pl line 101, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp3l2qeo_y.pl line 128, at end of line\nsyntax\
    \ error at /tmp/tmp3l2qeo_y.pl line 128, at EOF\nExecution of /tmp/tmp3l2qeo_y.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = $fib2 = 1;\n    my $fib3 = $fib4;\n    my $fib5 = $fib6;\n    my $fib7 = $fib8;\n\
    \    my $fib9 = $fib10;\n    my $fib11 = $fib12;\n    my $fib13 = $fib14;\n  \
    \  my $fib15 = $fib16;\n    my $fib17 = $fib18;\n    my $fib19 = $fib20;\n   \
    \ my $fib21 = $fib22;\n    my $fib23 = $fib24;\n    my $fib25 = $fib26;\n    my\
    \ $fib27 = $fib28;\n    my $fib29 = $fib30;\n    my $fib31 = $fib32;\n    my $fib33\
    \ = $fib34;\n    my $fib35 = $fib36;\n    my $fib37 = $fib38;\n    my $fib39 =\
    \ $fib40;\n    my $fib41 = $fib42;\n    my $fib43 = $fib44;\n    my $fib45 = $fib46;\n\
    \    my $fib47 = $fib48;\n    my $fib49 = $fib50;\n    my $fib51 = $fib52;\n \
    \   my $fib53 = $fib54;\n    my $fib55 = $fib56;\n    my $fib57 = $fib58;\n  \
    \  my $fib59 = $fib60;\n    my $fib61 = $fib62;\n    my $fib63 = $fib64;\n   \
    \ my $fib65 = $fib66;\n    my $fib67 = $fib68;\n    my $fib69 = $fib70;\n    my\
    \ $fib71 = $fib72;\n    my $fib73 = $fib74;\n    my $fib75 = $fib76;\n    my $fib77\
    \ = $fib78;\n    my $fib79 = $fib80;\n    my $fib81 = $fib82;\n    my $fib83 =\
    \ $fib84;\n    my $fib85 = $fib86;\n    my $fib87 = $fib88;\n    my $fib89 = $fib90;\n\
    \    my $fib91 = $fib92;\n    my $fib93 = $fib94;\n    my $fib95 = $fib96;\n \
    \   my $fib97 = $fib98;\n    my $fib99 = $fib100;\n    my $fib101 = $fib102;\n\
    \    my $fib103 = $fib104;\n    my $fib105 = $fib106;\n    my $fib107 = $fib108;\n\
    \    my $fib109 = $fib110;\n    my $fib111 = \nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpargsqa42.pl line 67, at end
    of line

    syntax error at /tmp/tmpargsqa42.pl line 67, near "use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpargsqa42.pl line 94, at end of
    line

    syntax error at /tmp/tmpargsqa42.pl line 94, at EOF

    Execution of /tmp/tmpargsqa42.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821089
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n        $fib = $a +\
    \ $b;\n        $a = $b;\n        $b = $fib;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\n    my $f;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpfsfpg04e.pl line 42, at
    end of line

    syntax error at /tmp/tmpfsfpg04e.pl line 42, at EOF

    Execution of /tmp/tmpfsfpg04e.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821120
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    my $i;\n    my $fibs;\n    my $fibs_count;\n    my $fibs_sum;\n\
    \    my $fibs_sum2;\n    my $fibs_sum3;\n    my $fibs_sum4;\n    my $fibs_sum5;\n\
    \    my $fibs_sum6;\n    my $fibs_sum7;\n    my $fibs_sum8;\n    my $fibs_sum9;\n\
    \    my $fibs_sum10;\n    my $fibs_sum11;\n    my $fibs_sum12;\n    my $fibs_sum13;\n\
    \    my $fibs_sum14;\n    my $fibs_sum15;\n    my $fibs_sum16;\n    my $fibs_sum17;\n\
    \    my $fibs_sum18;\n    my $fibs_sum19;\n    my $fibs_sum20;\n    my $fibs_sum21;\n\
    \    my $fibs_sum22;\n    my $fibs_sum23;\n    my $fibs_sum24;\n    my $fibs_sum25;\n\
    \    my $fibs_sum26;\n    my $fibs_sum27;\n    my $fibs_sum28;\n    my $fibs_sum29;\n\
    \    my $fibs_sum30;\n    my $fibs_sum31;\n    my $fibs_sum32;\n    my $fibs_sum33;\n\
    \    my $fibs_sum34;\n    my $fibs_sum35;\n    my $fibs_sum36;\n    my $fibs_sum37;\n\
    \    my $fibs_sum38;\n    my $fibs_sum39;\n    my $fibs_sum40;\n    my $fibs_sum41;\n\
    \    my $fibs_sum42;\n    my $fibs_sum43;\n    my $fibs_sum44;\n    my $fibs_sum45;\n\
    \    my $fibs_sum46;\n    my $fibs_sum47;\n    my $fibs_sum48;\n    my $fibs_sum49;\n\
    \    my $fibs_sum50;\n    my $fibs_sum51;\n    my $fibs_sum52;\n    my $fibs_sum53;\n\
    \    my $fibs_sum54;\n    my $fibs_sum55;\n    my $fibs_sum56;\n    my $fibs_sum57;\n\
    \    my $fibs_sum58;\n    my $fibs_sum59;\n    my $fibs_sum60;\n    my $fibs_sum61;\n\
    \    my $fibs_sum62;\n    my $fibs_sum63\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp_jmmgqc8.pl line 79, at end
    of line

    syntax error at /tmp/tmp_jmmgqc8.pl line 79, near "$fibs_sum63

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp_jmmgqc8.pl line 106, at end
    of line

    syntax error at /tmp/tmp_jmmgqc8.pl line 106, at EOF

    Execution of /tmp/tmp_jmmgqc8.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n        $fib += $a;\n\
    \        $a = $b;\n        $b = $fib;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return $fib($n-1) + $fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpvzmc515j.pl line 11, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpvzmc515j.pl line 13.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 1) ? $n : (fib($n\
    \ - 1) + fib($n - 2));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n < 2 ? $n :\
    \ $fib($n-1) + $fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmphmef_uo8.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmphmef_uo8.pl line 12.

    '
  stdout: ''
  timestamp: 1659821089
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($n <= 2) ? 1\
    \ : fib($n-1) + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n        $fib += $a;\n\
    \        $a *= $b;\n        $b += $a;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n-1) + $fib;\n \
    \   }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($n < 2) ? 1\
    \ : fib($n-1) + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821120
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821038
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n < 2 ? $n :\
    \ $fib($n-1) + $fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmphmef_uo8.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmphmef_uo8.pl line 12.

    '
  stdout: ''
  timestamp: 1659821089
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $i;\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $fib += $a;\n        $a *= $b;\n\
    \        $b += $a;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821038
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n < 2 ? $n :\
    \ $fib($n-1) + $fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmphmef_uo8.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmphmef_uo8.pl line 12.

    '
  stdout: ''
  timestamp: 1659821089
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($fib + $fib\
    \ - $fib) / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821089
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    while ($n > 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n\
    \        $n--;\n    }\n    return $c;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib\
    \ - $n) / $n;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821038
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpvzj0mn62.pl line 131, at end
    of line

    syntax error at /tmp/tmpvzj0mn62.pl line 131, near "$q

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpvzj0mn62.pl line 158, at end
    of line

    syntax error at /tmp/tmpvzj0mn62.pl line 158, at EOF

    Execution of /tmp/tmpvzj0mn62.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n < 2 ? $n :\
    \ $fib($n - 1) + $fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpjvm7kp_9.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpjvm7kp_9.pl line 12.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my\
    \ $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n\
    \    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my\
    \ $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n\
    \    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n\
    \    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my\
    \ $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n\
    \    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my\
    \ $_;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n\
    \nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n    \
    \    if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t use global $_ in "my" at /tmp/tmpd18hzv5e.pl line 62, near "my $_"

    Can''t use global $_ in "my" at /tmp/tmpd18hzv5e.pl line 115, near "my $_"

    BEGIN not safe after errors--compilation aborted at /tmp/tmpd18hzv5e.pl line 123.

    '
  stdout: ''
  timestamp: 1659821120
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c = 1;\n    my $d = 1;\n    while ($n > 0)\
    \ {\n        $fib += $a;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n\
    \        $d = $a + $b;\n        $n--;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821120
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 2) ? 1 : fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpvmbqzgv_.pl line 42, at
    end of line

    syntax error at /tmp/tmpvmbqzgv_.pl line 42, at EOF

    Execution of /tmp/tmpvmbqzgv_.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n <= 1 ? $n\
    \ : $fib($n-1) + $fib($n-2)\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpl3e0sfp4.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpl3e0sfp4.pl line 12.

    '
  stdout: ''
  timestamp: 1659821120
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpb4lysub7.pl line 42, at
    end of line

    syntax error at /tmp/tmpb4lysub7.pl line 42, at EOF

    Execution of /tmp/tmpb4lysub7.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061

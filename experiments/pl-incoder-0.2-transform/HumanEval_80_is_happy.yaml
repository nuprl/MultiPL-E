name: HumanEval_80_is_happy
language: pl
prompt: "# You are given a string s.\n# Your task is to check if the string is happy\
  \ or not.\n# A string is happy if its length is at least 3 and every 3 consecutive\
  \ letters are distinct\n# For example:\n# >>> is_happy(a)\n# \"\"\n# >>> is_happy(aa)\n\
  # \"\"\n# >>> is_happy(abcd)\n# 1\n# >>> is_happy(aabb)\n# \"\"\n# >>> is_happy(adb)\n\
  # 1\n# >>> is_happy(xyy)\n# \"\"\nsub is_happy {\n    my($s) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_happy;\n\
  \        if(eq_deeply($candidate->(\"a\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"aa\"),\"\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  abcd\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"aabb\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"adb\"),1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  xyy\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->(\"iopaxpoi\"),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"iopaxioi\"),\"\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return '' unless length($s) >= 3;\n    my $count = 0;\n    my $prev\
    \ = '';\n    my $s = $s;\n    while ($s =~ /([a-z])\\1*/g) {\n        $count++;\n\
    \        $prev = $1;\n    }\n    return $count >= 3 && $prev ne $s[0];\n}", " \
    \   return '' unless length($s) >= 3;\n    my $count = 0;\n    my $prev = '';\n\
    \    my $i = 0;\n    my $j = 0;\n    while ($i < length($s)) {\n        $prev\
    \ = $s[$i];\n        $j = 0;\n        while ($j < length($s) && $s[$j] != $prev)\
    \ {\n            $j++;\n        }\n        if ($j == length($s)) {\n         \
    \   $count++;\n            $i++;\n        }\n        $prev = $s[$i];\n       \
    \ $i++;\n    }\n    return $count >= 3;\n}", "    my $len = length($s);\n    return\
    \ $len >= 3 && $len % 3 == 0 && $s =~ /^(.)\\1\\1\\1$/;\n}", "    return '' unless\
    \ length($s) >= 3;\n    my @chars = split(//, $s);\n    return '' unless @chars\
    \ == 3;\n    my $distinct = 0;\n    foreach my $char (@chars) {\n        ++$distinct\
    \ if $char eq $char;\n    }\n    return $distinct ? 1 : 0;\n}", "    my $len =\
    \ length($s);\n    return $len >= 3 && $len % 3 == 0 && $s =~ /^(.)\\1\\1\\1/;\n\
    }", "    return '' unless length($s) >= 3;\n    my $count = 0;\n    my $prev =\
    \ '';\n    my $res = '';\n    my $i = 0;\n    my $j = 0;\n    while ($i < length($s))\
    \ {\n        $prev = $s[$i];\n        $j++;\n        $i++;\n        $count++;\n\
    \        while ($j < length($s) && $s[$j] == $prev) {\n            $j++;\n   \
    \         $count++;\n        }\n        if ($count == 3) {\n            $res .=\
    \ $prev;\n            $count = 0;\n        }\n    }\n    return $res == $s ? 1\
    \ : 0;\n}", "    return '' unless length($s) >= 3;\n    my $count = 0;\n    my\
    \ $prev = '';\n    my $flag = 0;\n    foreach my $char (split(//, $s)) {\n   \
    \     if ($char ne $prev) {\n            $flag = 1;\n        }\n        $prev\
    \ = $char;\n        $count++;\n    }\n    return $flag if $count >= 3;\n    return\
    \ 1;\n}", "    return '' unless length($s) >= 3;\n    my $count = 0;\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my\
    \ $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n  \
    \  my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    ", "    return '' unless length $s >= 3;\n\
    \    my $count = 0;\n    my $prev = '';\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $flag = 0;\n    my $flag2 = 0;\n    my $flag3 = 0;\n    my $flag4 = 0;\n   \
    \ my $flag5 = 0;\n    my $flag6 = 0;\n    my $flag7 = 0;\n    my $flag8 = 0;\n\
    \    my $flag9 = 0;\n    my $flag10 = 0;\n    my $flag11 = 0;\n    my $flag12\
    \ = 0;\n    my $flag13 = 0;\n    my $flag14 = 0;\n    my $flag15 = 0;\n    my\
    \ $flag16 = 0;\n    my $flag17 = 0;\n    my $flag18 = 0;\n    my $flag19 = 0;\n\
    \    my $flag20 = 0;\n    my $flag21 = 0;\n    my $flag22 = 0;\n    my $flag23\
    \ = 0;\n    my $flag24 = 0;\n    my $flag25 = 0;\n    my $flag26 = 0;\n    my\
    \ $flag27 = 0;\n    my $flag28 = 0;\n    my $flag29 = 0;\n    my $flag30 = 0;\n\
    \    my $flag31 = 0;\n    my $flag32 = 0;\n    my $flag33 = 0;\n    my $flag34\
    \ = 0;\n    my $flag35 = 0;\n    my $flag36 = 0;\n    my $flag37 = 0;\n    my\
    \ $flag38 = 0;\n    my $flag39 = 0;\n    my $flag40 = 0;\n    my $flag41 = 0;\n\
    \    my $flag42 = 0;\n    my $flag43 = 0;\n    my $flag44 = 0;\n    my $flag45\
    \ = 0;\n    my $flag46 = 0;\n    my $flag47 = 0;\n    my $flag48 = 0;\n    my\
    \ $flag49 = 0;\n    my $flag50 = 0;\n    my $flag51 = 0;\n    my $flag52 = 0;\n\
    \    my $flag53 = 0;\n    my $flag54 = 0;\n    my $flag55 = 0;\n    my $flag56\
    \ = 0;\n    my $flag57 = 0;\n    my $flag58 = 0;\n    my $flag59 = 0;\n    my\
    \ $flag60 = 0;\n    my $flag61 = 0;\n    my $flag62 = 0;\n    my $flag63 = 0;\n\
    \    my $flag64 = 0;\n    my $flag65 = 0;\n    my $flag66 = 0;\n    my $flag67\
    \ = 0;\n    my $flag68 = 0;\n    my $flag69 = 0;\n    my $flag70 = 0;\n    my\
    \ $flag71 = 0;\n    my $flag72 = 0;\n    my $flag73 = 0;\n    my $flag74 = 0;\n\
    \    my $flag75 = 0;\n    my $flag76 = 0;\n    my $flag77 = 0;\n    my $flag78\
    \ = 0;\n    my $flag79 = 0;\n    my $flag80 = 0;\n    my $flag81 = 0;\n    my\
    \ $flag82 = 0;", "    my $len = length($s);\n    return $len < 3 || $len % 3 !=\
    \ 0;\n}", "    my $len = length($s);\n    return $len >= 3 && $len % 3 == 0 &&\
    \ $s =~ /([a-z])\\1{2,}/i;\n}", "    return '' unless length($s) >= 3;\n    my\
    \ $count = 0;\n    my $last;\n    for my $char (split(//, $s)) {\n        $count++\
    \ if $char ne $last;\n        $last = $char;\n    }\n    return $count >= 3;\n\
    }", "    my $len = length($s);\n    return $len >= 3 && $len % 3 == 0 && $s =~\
    \ /([a-z])\\1\\1\\1/i;\n}", "    return '' unless length($s) >= 3;\n    my @chars\
    \ = split //, $s;\n    my $count = 0;\n    foreach my $char (@chars) {\n     \
    \   ++$count if $char eq $char;\n    }\n    return $count >= 3;\n}", "    my $len\
    \ = length($s);\n    my $happy = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k\
    \ = 0;\n    my $l = 0;\n    my $count = 0;\n    my $temp;\n    my $temp2;\n  \
    \  my $temp3;\n    my $temp4;\n    my $temp5;\n    my $temp6;\n    my $temp7;\n\
    \    my $temp8;\n    my $temp9;\n    my $temp10;\n    my $temp11;\n    my $temp12;\n\
    \    my $temp13;\n    my $temp14;\n    my $temp15;\n    my $temp16;\n    my $temp17;\n\
    \    my $temp18;\n    my $temp19;\n    my $temp20;\n    my $temp21;\n    my $temp22;\n\
    \    my $temp23;\n    my $temp24;\n    my $temp25;\n    my $temp26;\n    my $temp27;\n\
    \    my $temp28;\n    my $temp29;\n    my $temp30;\n    my $temp31;\n    my $temp32;\n\
    \    my $temp33;\n    my $temp34;\n    my $temp35;\n    my $temp36;\n    my $temp37;\n\
    \    my $temp38;\n    my $temp39;\n    my $temp40;\n    my $temp41;\n    my $temp42;\n\
    \    my $temp43;\n    my $temp44;\n    my $temp45;\n    my $temp46;\n    my $temp47;\n\
    \    my $temp48;\n    my $temp49;\n    my $temp50;\n    my $temp51;\n    my $temp52;\n\
    \    my $temp53;\n    my $temp54;\n    my $temp55;\n    my $temp56;\n    my $temp57;\n\
    \    my $temp58;\n    my $temp59;\n    my $temp60;\n    my $temp61;\n    my $temp62;\n\
    \    my $temp63;\n    my $temp64;\n    my $temp65;\n    my $temp66;\n    my $temp67;\n\
    \    my $temp68;\n    my $temp69;\n    my $temp70;\n    my $temp71;\n    my $temp72;\n\
    \    my $temp73;\n    my $temp74;\n    my $temp75;\n    my $temp76;\n    my $temp77;\n\
    \    my $temp78;\n    my $temp79;\n    my $temp80;\n    my $temp81;\n    my $temp82;\n\
    \    my $temp83;", "    return '' unless length($s) >= 3;\n    my @chars = split(//,\
    \ $s);\n    my $count = 0;\n    foreach my $char (@chars) {\n        ++$count\
    \ if $char ne $chars[$count-1];\n    }\n    return $count >= 3;\n}", "    return\
    \ '' unless length($s) >= 3;\n    my @chars = split(//, $s);\n    my $count =\
    \ 0;\n    my $prev = '';\n    foreach my $char (@chars) {\n        $prev = $char;\n\
    \        $count++ if $char ne $prev;\n    }\n    return $count >= 3 && $prev ne\
    \ $chars[$#chars];\n}", "    my $len = length($s);\n    return $len >= 3 && $len\
    \ % 3 == 0 && grep(!$seen{$_}, split //, $s);\n}", "    my $len = length($s);\n\
    \    return $len >= 3 && $len % 3 == 0 && $s =~ /([a-z])\\1\\1/i;\n}", "    return\
    \ '' unless length($s) >= 3;\n    my $count = 0;\n    my $prev = '';\n    foreach\
    \ my $c (split(//, $s)) {\n        if ($prev eq $c) {\n            $count++;\n\
    \        } else {\n            $count = 1;\n        }\n        $prev = $c;\n \
    \   }\n    return $count >= 3 && $prev ne 'aaa';\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_85_add
language: php
prompt: "<?php\n// Given a non-empty list of integers lst. add the even elements that\
  \ are at odd indices..\n// Examples:\n// add([4, 2, 6, 7]) ==> 2\nfunction add($lst)\
  \ {\n"
tests: "function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
  \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["  $counter = 0;\n  $sum = 0;\n  foreach ($lst as $item) {\n    if ($counter\
    \ % 2 !== 0 && $item % 2 === 0) {\n      $sum += $item;\n    }\n    $counter++;\n\
    \  }\n  return $sum;\n}", "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++)\
    \ {\n    if (($i % 2 == 1) && ($lst[$i] % 2 == 0)) {\n      $sum += $lst[$i];\n\
    \    }\n  }\n  return $sum;\n}", "  $result = 0;\n  foreach ($lst as $key => $value)\
    \ {\n    if (($key + 1) % 2 != 0 && $value % 2 == 0) {\n      $result += $value;\n\
    \    }\n  }\n  return $result;\n}\n", "  $count = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i += 2) {\n    if ($lst[$i] % 2 == 0) {\n      $count += $lst[$i];\n    }\n\
    \  }\n  return $count;\n}\n\necho add([1,2,3,4,5,6,7,8,9,10]);", "    // $sum\
    \ = 0;\n    // for ($i = 0; $i < count($lst); $i += 2) {\n    //     if ($lst[$i]\
    \ % 2 == 0) {\n    //         $sum += $lst[$i];\n    //     }\n    // }\n    //\
    \ return $sum;\n\n    return array_sum(array_filter(array_map(function ($n) {\n\
    \        return $n % 2 == 0 ? $n : null;\n    }, array_values(array_slice($lst,\
    \ 1, count($lst), true)))));\n}\n", "    $even_pos_odd_indices = [];\n    $total\
    \ = 0;\n    foreach($lst as $key => $number) {\n        if($number % 2 == 0 &&\
    \ $key % 2 == 1) {\n            $even_pos_odd_indices[] = $number;\n        }\n\
    \    }\n    foreach($even_pos_odd_indices as $value) {\n        $total += $value;\n\
    \    }\n    return $total;\n}\n", "  $result = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    if ($i % 2 != 0 && $lst[$i] % 2 == 0) {\n      $result += $lst[$i];\n\
    \    }\n  }\n  return $result;\n}\n", "  $lst = array_filter($lst, function($item,\
    \ $index) {\n    return $index % 2 == 1 && $item % 2 == 0;\n  }, ARRAY_FILTER_USE_BOTH);\n\
    \  return array_sum($lst);\n}", "    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 != 0 && $lst[$i] % 2 == 0) {\n            $sum +=\
    \ $lst[$i];\n        }\n    }\n    return $sum;\n}\n", "    $res = [];\n    foreach\
    \ ($lst as $index => $number) {\n        if ($index % 2 !== 0 && $number % 2 ===\
    \ 0) {\n            $res[] = $number;\n        }\n    }\n    return array_sum($res);\n\
    }\n\necho add([4, 2, 6, 7]);", "    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 !== 0 && $lst[$i] % 2 === 0) {\n            $sum\
    \ += $lst[$i];\n        }\n    }\n    return $sum;\n}\n", "    $oddIndices = array_filter($lst,\
    \ function($key) { return $key % 2 == 1; }, ARRAY_FILTER_USE_KEY);\n    $even\
    \ = array_filter($oddIndices, function($num) { return $num % 2 == 0; });\n   \
    \ return array_sum($even);\n}\n", "    $res = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 !== 0 && $lst[$i] % 2 === 0) {\n            $res\
    \ += $lst[$i];\n        }\n    }\n    return $res;\n}\necho add([4, 2, 6, 7]);",
  "\tforeach ($lst as $i => $v)\n\t\tif ($i % 2 == 1) $sum += $v;\n\treturn $sum;\n\
    }\n\n$lst = [4, 2, 6, 7];\necho add($lst);", "    $odd = array_map(function($v,\
    \ $k) {\n      return $k % 2 != 0 ? $v : 0;\n    }, $lst, array_keys($lst));\n\
    \    $even = array_filter($odd, function($v) {\n      return $v % 2 == 0;\n  \
    \  });\n    return array_sum($even);\n}", "  $result = 0;\n  for ($i = 0; $i <\
    \ count($lst); $i++) {\n    if ($i % 2 != 0 && $lst[$i] % 2 == 0) {\n      $result\
    \ += $lst[$i];\n    }\n  }\n  return $result;\n}", "  $sum = 0;\n  for ($i = 0;\
    \ $i < count($lst); $i++) {\n    if ($i % 2 == 1 && $lst[$i] % 2 == 0) {\n   \
    \   $sum += $lst[$i];\n    }\n  }\n  return $sum;\n}", "\t$sum = 0;\n\tfor ($i\
    \ = 0; $i < count($lst); $i++) {\n\t\tif ($i % 2 != 0) {\n\t\t\tif ($lst[$i] %\
    \ 2 == 0) {\n\t\t\t\t$sum += $lst[$i];\n\t\t\t}\n\t\t}\n\t}\n\treturn $sum;\n\
    }\necho add([4, 2, 6, 7]) . \"\\n\";\necho add([1, 5, 3, 3, 4, 6, 8, 3, 9, 5,\
    \ 2, 3, 9, 5, 1, 4, 9, 5, 6, 1, 9, 6, 1, 4, 9, 5, 4, 1, 9, 5, 6, 3]) . \"\\n\"\
    ;", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i\
    \ % 2 !== 0 && $lst[$i] % 2 === 0) {\n            $sum += $lst[$i];\n        }\n\
    \    }\n    return $sum;\n}\n\nadd([0, 2, 4, 6, 8]);", "   // $sum = 0;\n   //\
    \ for ($i = 0; $i < count($lst); $i += 2) {\n   //    if ($lst[$i] % 2 == 0) {\n\
    \   //       $sum += $lst[$i];\n   //    }\n   // }\n   // return $sum;\n\n  \
    \ //$sum = 0;\n   //$i = 0;\n   //while ($i < count($lst)) {\n   //   if ($lst[$i]\
    \ % 2 == 0) {\n   //      $sum += $lst[$i];\n   //   }\n   //   $i += 2;\n   //}\n\
    \   //return $sum;\n\n   $sum = 0;\n   $i = 0;\n   do {\n      if ($lst[$i] %\
    \ 2 == 0) {\n         $sum += $lst[$i];\n      }\n      $i += 2;\n   } while ($i\
    \ < count($lst));\n   return $sum;\n}", "    // Write your code here\n    $res\
    \ = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 != 0 &&\
    \ $lst[$i] % 2 == 0)\n            $res += $lst[$i];\n    }\n    return $res;\n\
    }\n", "    $total = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if\
    \ ($i % 2 !== 0 && $lst[$i] % 2 === 0) {\n            $total += $lst[$i];\n  \
    \      }\n    }\n    return $total;\n}\n\necho add([4, 2, 6, 7]);\n", "    //$lst\
    \ = explode(',', $lst);\n    $sum = 0;\n    foreach ($lst as $i => $v) {\n   \
    \     if (($i % 2 != 0) && ($v % 2 == 0)) {\n            $sum += $v;\n       \
    \ }\n    }\n    return $sum;\n}\necho add([4, 2, 6, 7]);", "    $result = 0;\n\
    \    foreach ($lst as $key => $value) {\n        if ($key % 2 == 1 && $value %\
    \ 2 == 0) {\n            $result += $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if\
    \ (($i + 1) % 2 != 0 && $lst[$i] % 2 == 0) {\n            $result += $lst[$i];\n\
    \        }\n    }\n    return $result;\n}", "    return array_sum(array_filter($lst,\
    \ function($v, $k) {\n        return $v % 2 == 0 && $k % 2 == 1;\n    }, ARRAY_FILTER_USE_BOTH));\n\
    }\n\necho add([4, 2, 6, 7]);", "    $result = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 !== 0 && $lst[$i] % 2 === 0) {\n            $result\
    \ += $lst[$i];\n        }\n    }\n    return $result;\n}", "    $sum = 0;\n  \
    \  for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 != 0 && $lst[$i]\
    \ % 2 == 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n\
    }\n", "  $arr = [];\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($i % 2\
    \ == 1 && $lst[$i] % 2 == 0) {\n      array_push($arr, $lst[$i]);\n    }\n  }\n\
    \  return array_sum($arr);\n}", "\t$evenArray = array();\n\t$evenSum = 0;\n\t\
    $oddArray = array();\n\t$oddSum = 0;\n\tfor ($i = 0; $i < count($lst); $i++) {\n\
    \t\tif (($lst[$i] % 2) == 0) {\n\t\t\tarray_push($evenArray, $lst[$i]);\n\t\t\
    } else {\n\t\t\tarray_push($oddArray, $lst[$i]);\n\t\t}\n\t}\n\tfor ($i = 0; $i\
    \ < count($evenArray); $i++) {\n\t\t$evenSum += $evenArray[$i];\n\t}\n\tfor ($i\
    \ = 0; $i < count($oddArray); $i++) {\n\t\t$oddSum += $oddArray[$i];\n\t}\n\t\
    return $evenSum - $oddSum;\n}", "  $sum = 0;\n  foreach ($lst as $key => $val)\
    \ {\n    if ($key % 2 == 1 && $val % 2 == 0) {\n      $sum += $val;\n    }\n \
    \ }\n  return $sum;\n}", "  $result = 0;\n  foreach ($lst as $index => $value)\
    \ {\n    if ($index % 2 != 0 && $value % 2 == 0) {\n      $result += $value;\n\
    \    }\n  }\n  return $result;\n}\n", "\t$sum = 0;\n\tfor ($i = 0; $i < count($lst);\
    \ $i++) {\n\t\tif ($i % 2 !== 0 && $lst[$i] % 2 == 0) {\n\t\t\t$sum += $lst[$i];\n\
    \t\t}\n\t}\n\treturn $sum;\n}\n\n$ans = add([5, 2, 6, 7]);\nvar_dump($ans);",
  "  $sum = 0;\n  foreach ($lst as $key => $value) {\n    if ($key % 2 !== 0 && $value\
    \ % 2 == 0) {\n      $sum += $value;\n    }\n  }\n  return $sum;\n}\nprint add([4,\
    \ 2, 6, 7]); // 2\nprint add([1, 2, 1, 2, 2, 1, 2, 1]); // 5\nprint add([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]); // 8", "   $a = 0;\n   for ($i = 0; $i < count($lst);\
    \ $i++){\n      if (($i % 2 != 0) && ($lst[$i] % 2 == 0)) {\n         $a += $lst[$i];\n\
    \      }\n   }\n   return $a;\n}", "    $odd = array_filter($lst, function($index)\
    \ {\n        return $index % 2 == 1;\n    }, ARRAY_FILTER_USE_KEY);\n    $even\
    \ = array_filter($odd, function($item) {\n        return $item % 2 == 0;\n   \
    \ });\n    return array_sum($even);\n}", "    $sum = 0;\n    foreach ($lst as\
    \ $key => $value) {\n        if($key % 2 === 1 && $value % 2 === 0) {\n      \
    \      $sum += $value;\n        }\n    }\n    return $sum;\n}\n", "  $even_sum\
    \ = 0;\n  $odd_sum = 0;\n  $count = count($lst);\n  for ($i = 0; $i < $count;\
    \ $i++) {\n    if ($i % 2 !== 0) {\n      if ($lst[$i] % 2 === 0) {\n        $even_sum\
    \ += $lst[$i];\n      }\n    }\n  }\n  return $even_sum;\n}\n", "  $arr = [];\n\
    \  foreach ($lst as $key => $value) {\n    if($key % 2 != 0 && $value % 2 == 0)\
    \ {\n      $arr[] = $value;\n    }\n  }\n  return array_sum($arr);\n}\n\nprint_r(add([4,\
    \ 2, 6, 7]));\necho '<br>';\nprint_r(add([1, 2, 2, 4, 5, 6, 8, 11]));", "  $output\
    \ = 0;\n  foreach ($lst as $key => $value) {\n    if ($key % 2 !== 0 && $value\
    \ % 2 == 0) {\n      $output += $value;\n    }\n  }\n  return $output;\n}", " \
    \ $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($i % 2 == 1 &&\
    \ $lst[$i] % 2 == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n\
    }\n", "  $new_array = [];\n  foreach ($lst as $key => $value) {\n    if ($key\
    \ % 2 != 0 && $value % 2 == 0) {\n      $new_array[] = $value;\n    }\n  }\n \
    \ return array_sum($new_array);\n}", "$odd_indices = [1,3,5,7,9];\n$i = 0;\n$even_total\
    \ = 0;\n  while($i <= sizeof($lst)){\n      if($lst[$i] % 2 == 0){\n         array_push($odd_indices,\
    \ $lst[$i]);\n         $even_total += $lst[$i];\n      }\n      $i++;\n  }\n \
    \ return $even_total;\n}", "\t$sum = 0;\n\tforeach($lst as $key => $value) {\n\
    \t\tif ($key % 2 != 0 && $value % 2 == 0) {\n\t\t\t$sum += $value;\n\t\t}\n\t\
    }\n\treturn $sum;\n}", "    $oddSum = 0;\n    for ($i = 0; $i < count($lst); $i++)\
    \ {\n        if ($i % 2 == 1 && $lst[$i] % 2 == 0) {\n            $oddSum += $lst[$i];\n\
    \        }\n    }\n    return $oddSum;\n}\n", "  $sum = 0;\n  for ($i = 0; $i\
    \ < count($lst); $i++) {\n    if ($i % 2 == 1 && $lst[$i] % 2 == 0) {\n      $sum\
    \ += $lst[$i];\n    }\n  }\n  return $sum;\n}\necho add([4, 2, 6, 7]);\necho \"\
    \\n\";\n", "    $even = [];\n    foreach($lst as $key => $num) {\n        if ($key\
    \ % 2 !== 0) {\n            if ($num % 2 == 0) {\n                $even[] = $num;\n\
    \            }\n        }\n    }\n    return array_sum($even);\n}", "  return\
    \ array_sum(array_filter($lst, function($v, $k) { return $k%2 !== 0 && $v%2 ===\
    \ 0; }, ARRAY_FILTER_USE_BOTH));\n}\necho add([4, 2, 6, 7]) . \"\\n\";", "\n}",
  "    $odds = [];\n    foreach ($lst as $index => $item) {\n        if ($index %\
    \ 2 == 1) {\n            $odds[] = $item;\n        }\n    }\n    $result = 0;\n\
    \    foreach ($odds as $odd) {\n        if ($odd % 2 == 0) {\n            $result\
    \ += $odd;\n        }\n    }\n    return $result;\n}\n", "  $results = [];\n \
    \ foreach ($lst as $i => $l) {\n    if ($i % 2 != 0 && $l % 2 == 0) {\n      $results[]\
    \ = $l;\n    }\n  }\n  return array_sum($results);\n}", "\t$sum = 0;\n\tforeach($lst\
    \ as $key => $value) {\n\t\tif($key % 2 != 0 && $value % 2 == 0) {\n\t\t\t$sum\
    \ += $value;\n\t\t}\n\t}\n\treturn $sum;\n}", "    $arr = [];\n    foreach ($lst\
    \ as $i => $n) {\n        if ($i % 2 !== 0) $arr[] = $n;\n    }\n    return array_sum($arr);\n\
    }", "    $arr = array_filter($lst, function($x){\n        return $x % 2 == 0;\n\
    \    });\n    $arr = array_values($arr);\n    $result = array_reduce($arr, function($sum,\
    \ $x){\n        return $sum + $x;\n    });\n    return $result;\n}", "    $sum\
    \ = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 !== 0 &&\
    \ $lst[$i] % 2 === 0) {\n            $sum += $lst[$i];\n        }\n    }\n   \
    \ return $sum;\n}", "  $result = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n\
    \    if ($i % 2 != 0 && $lst[$i] % 2 == 0) {\n      $result += $lst[$i];\n   \
    \ }\n  }\n  return $result;\n}", "    $sum = 0;\n    foreach($lst as $k => $v)\
    \ {\n        if(($k % 2) != 0 && ($v % 2) == 0) {\n            $sum += $v;\n \
    \       }\n    }\n    return $sum;\n}\n\necho add([4, 2, 6, 7]);", "\t$count =\
    \ 0;\n\tif (count($lst) != 1) {\n\t\tfor ($i = 0; $i < count($lst); $i+=2) {\n\
    \t\t\tif ($lst[$i] % 2 == 0) {\n\t\t\t\t$count += $lst[$i];\n\t\t\t}\n\t\t}\n\t\
    }\n\techo $count;\n}\nadd([4, 2, 6, 7]);", "    $odds = array_filter($lst, function($n)\
    \ { return ($n & 1) == 1; });\n    $evens = array_filter($lst, function($n) {\
    \ return ($n & 1) == 0; });\n    $sum = 0;\n    foreach ($evens as $key => $value)\
    \ {\n        if ($key & 1) {\n            $sum += $value;\n        }\n    }\n\
    \    return $sum;\n}\n\necho add([4, 2, 6, 7]);", "    $sum = 0;\n    for ($i\
    \ = 0; $i < count($lst); $i++) {\n        if ($i % 2 != 0 && $lst[$i] % 2 == 0)\
    \ {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n}\necho\
    \ add([4, 2, 6, 7]);", "  $result = 0;\n  foreach($lst as $key => $value) {\n\
    \    if($key % 2 !== 0 && $value % 2 === 0) {\n      $result += $value;\n    }\n\
    \  }\n  return $result;\n}", "    $evens = array_filter($lst, function($item)\
    \ {\n        return $item % 2 == 0;\n    });\n    return array_sum(array_slice($evens,\
    \ 1, count($evens), true));\n}", "  $sum = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    if ($i % 2 != 0 && $lst[$i] % 2 == 0) {\n      $sum += $lst[$i];\n\
    \    }\n  }\n  return $sum;\n}\necho add([4, 2, 6, 7]) . \"<br>\";\n", "    $sum\
    \ = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 == 1 &&\
    \ $lst[$i] % 2 == 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return\
    \ $sum;\n}\n\necho add([4, 2, 6, 7]);\necho \"\\n\";\necho add([4, 2, 6, 7, 7,\
    \ 1, 4, 2, 7, 6, 0, 4, 1, 5, 1, 4, 7, 6, 4, 1, 7, 5, 6, 0, 7, 4, 6, 7, 7, 6, 0,\
    \ 2, 7, 6, 7, 7, 7, 5, 6, 4, 7, 0, 6, 1, 7, 1, 6, 7, 7, 5, 6, 0, 7, 4, 7, 1, 7,\
    \ 6, 0, 7, 7, 4, 7, 5, 6, 0, 7, 5, 1, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7,\
    \ 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0,\
    \ 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7,\
    \ 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0,\
    \ 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7,\
    \ 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7, 6, 0, 7, 7,", "    $result =\
    \ 0;\n    foreach ($lst as $key => $value) {\n        if (($key % 2 != 0) && ($value\
    \ % 2 == 0)) {\n            $result += $value;\n        }\n    }\n    return $result;\n\
    }\n", "  return array_sum(array_filter($lst, function($n, $i) {\n    return $n\
    \ % 2 == 0 && $i % 2 == 1;\n  }, ARRAY_FILTER_USE_BOTH));\n}\n", "    $result\
    \ = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 !== 0 &&\
    \ $lst[$i] % 2 === 0) {\n            $result += $lst[$i];\n        }\n    }\n\
    \    return $result;\n}\n", "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++)\
    \ {\n    if (($i % 2) != 0) {\n      if (($lst[$i] % 2) == 0) {\n        $sum\
    \ += $lst[$i];\n      }\n    }\n  }\n  return $sum;\n}\n$a = add([1,2,3,4,5,6,7,8,9,10]);\n\
    echo $a . \"\\n\";", "\t$evenOddList = array();\n\tforeach ($lst as $key => $value)\
    \ {\n\t\tif ($key % 2 == 1 && $value % 2 == 0) {\n\t\t\tarray_push($evenOddList,\
    \ $value);\n\t\t}\n\t}\n\treturn array_sum($evenOddList);\n}", "    $n = count($lst);\n\
    \    $result = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 2 != 0)\
    \ && ($lst[$i] % 2 == 0)) {\n            $result += $lst[$i];\n        }\n   \
    \ }\n    return $result;\n}", "  return array_sum(array_filter($lst, function($e,\
    \ $i) {\n    return $i % 2 === 1 && $e % 2 === 0;\n  }, ARRAY_FILTER_USE_BOTH));\n\
    }\n", "  return array_sum(array_filter($lst, function($v, $k) {\n      return\
    \ $v % 2 == 0 && $k % 2 != 0;\n  }, ARRAY_FILTER_USE_BOTH));\n}", "    $sum =\
    \ 0;\n    foreach ($lst as $key => $value) {\n        if ($key % 2 == 1 && $value\
    \ % 2 == 0) {\n            $sum += $value;\n        }\n    }\n    return $sum;\n\
    }", "  $sum = 0;\n  foreach($lst as $k => $v) {\n    if ($k % 2 != 0 && $v % 2\
    \ == 0) {\n      $sum += $v;\n    }\n  }\n  return $sum;\n}\n\necho add([4, 2,\
    \ 6, 7]) . \"\\n\"; // 2\necho add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) . \"\\n\"\
    ; // 2", "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if (is_int($lst[$i])\
    \ && ($lst[$i] % 2 == 0) && ($i % 2 == 1)) {\n      $sum += $lst[$i];\n    }\n\
    \  }\n  return $sum;\n}\n\necho add([4, 2, 6, 7]);\necho add([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]);\n", "    return array_sum(array_filter($lst, function($e, $i)\
    \ { return $i & 1 and !($e & 1); }, ARRAY_FILTER_USE_BOTH));\n}\n", "    $lst2\
    \ = array_slice($lst, 1, count($lst), true);\n    foreach ($lst2 as $i => $v)\
    \ {\n        if ($i % 2 !== 0) {\n            $lst3[] = $v;\n        }\n    }\n\
    \    $r = array_reduce($lst3, function ($a, $b) {\n        return $a + $b;\n \
    \   });\n    return $r;\n}\necho add([4, 2, 6, 7]) . PHP_EOL;", "    $new = [];\n\
    \    foreach ($lst as $key => $value) {\n        if ($key % 2 !== 0 && $value\
    \ % 2 == 0) {\n            $new[] = $value;\n        }\n    }\n    return array_sum($new);\n\
    }", "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i += 2) {\n    if ($lst[$i]\
    \ % 2 == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n}\necho add([4,\
    \ 2, 6, 7]) . \"\\n\"; // 2\necho add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) . \"\\\
    n\"; // 6\necho add([-1, 2, -3, 4, -5, 6, -7, 8, -9, 10]) . \"\\n\"; // -7", " \
    \   $lst = array_filter($lst, function($i) {\n        return $i % 2 == 0;\n  \
    \  });\n    return array_sum($lst);\n}\n", "  $sum = 0;\n  foreach ($lst as $key\
    \ => $value) {\n    if ($key % 2 == 1 && $value % 2 == 0) {\n      $sum += $value;\n\
    \    }\n  }\n  return $sum;\n}\necho add([4, 2, 6, 7]);\n ?>", "    $sum = 0;\n\
    \    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 === 1 && $lst[$i]\
    \ % 2 === 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n\
    }\n", "  $odds = array_filter($lst, function($x, $i) {\n    return $i % 2 ===\
    \ 1 && $x % 2 === 0;\n  }, ARRAY_FILTER_USE_BOTH);\n  return array_sum($odds);\n\
    }\n", "\t$sum = 0;\n\tfor ($i = 0; $i < count($lst); $i++) {\n\t\tif ($i % 2 !=\
    \ 0 && $lst[$i] % 2 == 0) {\n\t\t\t$sum += $lst[$i];\n\t\t}\n\t}\n\treturn $sum;\n\
    }\necho add([4, 2, 6, 7]); // 2\necho \"<br>\";\necho add([-4, 2, 6, 7]); // 0\n\
    echo \"<br>\";\necho add([-4, -2, -6, -7]); // -6\necho \"<br>\";\necho add([1,\
    \ 1, 1, 1]); // 0\necho \"<br>\";\necho add([0, 0, 0, 0]); // 0\necho \"<br>\"\
    ;\necho add([-100, 1, -100, 1]); // -200\necho \"<br>\";\necho add([-100, 100,\
    \ -100, 100]); // 0\necho \"<br>\";\necho add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\
    \ // 30\necho \"<br>\";\necho add([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]);\
    \ // -30\necho \"<br>\";\necho add([4, 2, -4, 7, -8, -4, -1, 0, -1, -9, -9, -9,\
    \ -9, -9, -9, -8, -1, -6, 0, -5, -3, -2, -1, -1, -1, -5, -8, -8, -6, -5, -4, -9,\
    \ -6, -5, -2, -1, -6, -5, -8, -7, -5, -6, -1, -1, -1, -1, -1, -8, -5, -6, -5,\
    \ -3, -3, -2, -1, -1, -1, -6, -5, -8, -5, -6, -5, -8, -5, -6, -5, -3, -3,", " \
    \ $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if (isEven($lst[$i])\
    \ && isOdd($i)) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n}\n",
  "    $i = 0;\n    $count = 0;\n    foreach ($lst as $item) {\n        if ($i % 2\
    \ != 0) {\n            if ($item % 2 == 0) {\n                $count += $item;\n\
    \            }\n        }\n        $i++;\n    }\n    return $count;\n}\n", "\t\
    $count = 0;\n\t$str = \"\";\n\tfor($i = 0; $i < count($lst); $i++) {\n\t\tif($i\
    \ % 2 !== 0) {\n\t\t\tif($lst[$i] % 2 == 0) {\n\t\t\t\t$count += $lst[$i];\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n", "  $sum = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    if ($i % 2 !== 0 && $lst[$i] % 2 === 0) {\n      $sum += $lst[$i];\n\
    \    }\n  }\n  return $sum;\n}\nadd([4, 2, 6, 7]);", "  $array_size = count($lst);\n\
    \  for ($i = 0; $i < $array_size; $i += 2) {\n    $sum += $lst[$i];\n  }\n  return\
    \ $sum;\n}\n", "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if\
    \ ($i % 2 !== 0 && $lst[$i] % 2 === 0) {\n      $sum += $lst[$i];\n    }\n  }\n\
    \  return $sum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++)\
    \ {\n        if($i % 2 == 1 && $lst[$i] % 2 == 0) {\n            $sum += $lst[$i];\n\
    \        }\n    }\n    return $sum;\n}", "    $res = 0;\n    for ($i = 0; $i <\
    \ count($lst); $i++) {\n        if ($i % 2 != 0) {\n            if ($lst[$i] %\
    \ 2 == 0) {\n                $res += $lst[$i];\n            }\n        }\n   \
    \ }\n    return $res;\n}\n", "    return array_sum(array_filter($lst, function($v,\
    \ $k) {\n        return $v % 2 == 0 && $k % 2 != 0;\n    }, ARRAY_FILTER_USE_BOTH));\n\
    }\n", "  $odd = array_filter($lst, function($number) {\n    return $number % 2\
    \ === 0;\n  });\n  $odd = array_values($odd);\n  $sum = 0;\n  foreach($odd as\
    \ $key => $value) {\n    if($key % 2 !== 0) {\n      $sum += $value;\n    }\n\
    \  }\n  return $sum;\n}", "   $total = 0;\n   for($i = 0; $i < count($lst); $i\
    \ += 2) {\n       if($lst[$i] % 2 == 0) {\n           $total += $lst[$i];\n  \
    \     }\n   }\n   return $total;\n}\n", "    $total = 0;\n    foreach ($lst as\
    \ $i => $num) {\n        if ($i % 2 != 0) {\n            if ($num % 2 == 0) {\n\
    \                $total += $num;\n            }\n        }\n    }\n    return\
    \ $total;\n}\n\necho add([4, 2, 6, 7]) . \"\\n\";\necho add([1, 3, 5, 5, 7, 9])\
    \ . \"\\n\";\necho add([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) . \"\\n\";\necho add([0,\
    \ -1, -2, -3, -4, -5, -6, -7, -8, -9]) . \"\\n\";\necho add([1, -3, -5, 5, 7,\
    \ -9]) . \"\\n\";\necho add([-2, 1, -3, 4, -5, 6, -7, 8, -9, 10]) . \"\\n\";\n\
    echo add([4, 2, 6, 7, -1, -3, -5, 5, 7, -9]) . \"\\n\";", "    return array_sum(array_filter($lst,\
    \ function($item, $key) {\n        return $key % 2 && $item % 2 == 0;\n    },\
    \ ARRAY_FILTER_USE_BOTH));\n}\n$test = array(4, 2, 6, 7);\necho add($test);",
  "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i += 2) {\n    if ($lst[$i] % 2\
    \ == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n}", "    $sum\
    \ = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 != 0 &&\
    \ $lst[$i] % 2 == 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return\
    \ $sum;\n}\n", "    return array_sum(array_filter($lst, function($v, $k) { return\
    \ $k % 2 == 1 && $v % 2 == 0; }, ARRAY_FILTER_USE_BOTH));\n}\n", "    $sum = 0;\n\
    \    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 === 1 && $lst[$i]\
    \ % 2 === 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n\
    }", "  $total = 0;\n  foreach ($lst as $key => $value) {\n    if ($key % 2 ==\
    \ 1 && $value % 2 == 0) {\n      $total += $value;\n    }\n  }\n  return $total;\n\
    }\necho add([4, 2, 6, 7]) . PHP_EOL;", "    $arr = [];\n    foreach ($lst as $key\
    \ => $value) {\n        if ($key % 2 != 0 && $value % 2 == 0) {\n            $arr[]\
    \ = $value;\n        }\n    }\n    return array_sum($arr);\n}", "    $sum = 0;\n\
    \    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 != 0 && $lst[$i]\
    \ % 2 == 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n\
    }\necho add([4, 2, 6, 7]) . PHP_EOL;\necho add([1, 1, 1, 1]) . PHP_EOL;\necho\
    \ add([2, 1, 1, 1]) . PHP_EOL;\necho add([1, 1, 1, 1, 2]) . PHP_EOL;\necho add([1,\
    \ 1, 1, 1, 2, 3]) . PHP_EOL;", "    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if (($i % 2 !== 0) && ($lst[$i] % 2 === 0)) {\n           \
    \ $sum += $lst[$i];\n        }\n    }\n    return $sum;\n}\n", "  $sum = 0;\n\
    \  for ($i = 0; $i < count($lst); $i++) {\n    if ($i % 2 == 1 && $lst[$i] % 2\
    \ == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n}", "    return\
    \ array_sum(array_filter($lst, function($num) use($lst) {\n        return (is_int($num)\
    \ || is_float($num)) && ($num % 2 == 0) && ($lst[array_search($num, $lst)] % 2\
    \ != 0);\n    }));\n}", "    return array_sum(array_filter($lst, function($n,\
    \ $i) {\n        return $n % 2 == 0 && $i % 2 == 1;\n    }, ARRAY_FILTER_USE_BOTH));\n\
    }\necho add([4, 2, 6, 7]) . \"\\n\";\necho add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\
    \ . \"\\n\";\n", "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i += 2) {\n \
    \   if ($lst[$i] % 2 == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n\
    }", "  $odds = getOdds($lst);\n  $evens = getEvens($lst);\n  $result = array_merge($odds,\
    \ $evens);\n  return array_sum($result);\n}\n", "    $arr= array_keys($lst);\n\
    \    $even_sum=0;\n    for($i=0;$i<count($arr);$i++){\n        if($i%2==1){\n\
    \            if($lst[$i]%2==0){\n                $even_sum+=$lst[$i];\n      \
    \      }\n        }\n    }\n    return $even_sum;\n}", "\t$total = 0;\n\tfor ($i\
    \ = 0; $i < count($lst); $i++) {\n\t\tif ($i % 2 == 1 && $lst[$i] % 2 == 0) {\n\
    \t\t\t$total += $lst[$i];\n\t\t}\n\t}\n\treturn $total;\n}\n", "\t$evens = array_filter($lst,function($n){return\
    \ $n%2==0;});\n\t$evens = array_values($evens);\n\t$sum = 0;\n\tfor($i=0;$i<count($evens);$i+=2){\n\
    \t\t$sum += $evens[$i];\n\t}\n\treturn $sum;\n}\necho add([4, 2, 6, 7]);", " \
    \   return array_sum(array_filter($lst, function($x) {\n        return ($x % 2\
    \ == 0);\n    }, ARRAY_FILTER_USE_KEY));\n}\n", "    $even = array_filter($lst,\
    \ function($val){\n        return $val % 2 == 0;\n    });\n    $sum = 0;\n   \
    \ foreach($even as $val){\n        $sum += $val;\n    }\n    return $sum;\n}\n",
  "   return array_sum(array_filter($lst, function($v, $k) { return $v % 2 == 0 &&\
    \ $k % 2 != 0; }, ARRAY_FILTER_USE_BOTH));\n}\n\necho add([4, 2, 6, 7]);", " \
    \ $even = [];\n  $odd = [];\n  $result = [];\n  foreach ($lst as $key => $value)\
    \ {\n    if ($value % 2 == 0) {\n      $even[] = $value;\n    } else {\n     \
    \ $odd[] = $value;\n    }\n  }\n  $result = array_merge($even, $odd);\n  return\
    \ $result;\n}\nprint_r(add([4, 2, 6, 7]));", "    $sum = 0;\n    for ($i = 0;\
    \ $i < count($lst); $i++) {\n        if ($i % 2 == 1 && $lst[$i] % 2 == 0) {\n\
    \            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n}\n\necho\
    \ add([4, 2, 6, 7]);\n\necho \"<br>\";\n", "    $sum = 0;\n    foreach($lst as\
    \ $key => $n) {\n        if ($key % 2 === 1 && $n % 2 === 0) {\n            $sum\
    \ += $n;\n        }\n    }\n    return $sum;\n}", "  $sum = 0;\n  for ($i = 0;\
    \ $i < count($lst); $i++) {\n    if ($i % 2 == 1) {\n      if ($lst[$i] % 2 ==\
    \ 0) {\n        $sum += $lst[$i];\n      }\n    }\n  }\n  return $sum;\n}\necho\
    \ add([4, 2, 6, 7]);", "    $sum = 0;\n    foreach ($lst as $key => $value) {\n\
    \        if ($key % 2 == 1 && $value % 2 == 0) {\n            $sum += $value;\n\
    \        }\n    }\n    return $sum;\n}\n", "    $evens = array_filter($lst, function($value)\
    \ {\n        return $value % 2 == 0;\n    });\n    $odd_indices = array_filter(array_keys($evens),\
    \ function($value) {\n        return $value % 2 == 1;\n    });\n    $odd_indices_values\
    \ = array_map(function($key) use ($evens) {\n        return $evens[$key];\n  \
    \  }, $odd_indices);\n    return array_sum($odd_indices_values);\n}", "  $sum\
    \ = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($i % 2 == 1 && $lst[$i]\
    \ % 2 == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n}\necho add([4,\
    \ 2, 6, 7]);\necho \"<br>\";\necho add([-8, 10, 2, -15, -9, -3, -8, 0, -2, 7,\
    \ 6, -11, -10, -6, -2, -2, -10, -7, -5, -13, -5, -12, -5, -8, -1, -6, -9, -9,\
    \ -8, 4, -11, -4, -4, -2, -8, -4, -9, -9, -10, -2, -10, -1, -1, -11, -6, -8, -8,\
    \ -9, 4, -3, 0, -3, -8, -10, -1, -10, -11, -8, -9, -5, -2, 0, -5, -8, -5, -7,\
    \ -3, -3, -5, -6, -11, -10, -4, -6, -4, -4, -4, -6, -2, -2, -9, -9, -6, -4, -8,\
    \ -4, -4, -4, -4, -2, -9, -5, -2, 0, -5, -8, -5, -7, -3, -3, -5, -6, -11, -10,\
    \ -4, -6, -4, -4, -4, -6, -2, -2, -9, -9, -6, -4, -8, -4, -4, -4, -4, -2, -9,\
    \ -5, -2, 0, -5, -8, -5, -7, -3, -3, -5, -6, -11, -10, -4, -6, -4, -4, -4, -6",
  "    $sum = 0;\n    foreach ($lst as $k => $v) {\n        if ($k % 2 != 0 && $v\
    \ % 2 == 0) {\n            $sum += $v;\n        }\n    }\n    return $sum;\n}\n\
    \necho add([4, 2, 6, 7]); // 2\necho add([4, 6, 2, 7]); // 4\necho add([4, 2,\
    \ 6, 7, 8, 3, 1, 5]); // 8\necho add([4, 2, 6, 7, 8, 3, 1, 5, 9, 11, 22, 33, 44,\
    \ 55, 66, 77, 88, 99, 100]); // 134", "  $evensum = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    if (($i % 2 != 0) && ($lst[$i] % 2 == 0)) {\n      $evensum +=\
    \ $lst[$i];\n    }\n  }\n  return $evensum;\n}\n\necho add([4, 2, 6, 7]);", " \
    \   $result = 0;\n    foreach ($lst as $key => $value) {\n        if ($key % 2\
    \ != 0 && $value % 2 == 0) {\n            $result += $value;\n        }\n    }\n\
    \    return $result;\n}\n", "\t$sum = 0;\n\tif (count($lst) == 0) {\n\t\treturn;\n\
    \t}\n\tfor ($i = 0; $i < count($lst); $i++) {\n\t\tif ($i % 2 !== 0 && $lst[$i]\
    \ % 2 == 0) {\n\t\t\t$sum += $lst[$i];\n\t\t}\n\t}\n\treturn $sum;\n}", "    $lstArr\
    \ = [];\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 !== 0)\
    \ {\n            if ($lst[$i] % 2 == 0) {\n                array_push($lstArr,\
    \ $lst[$i]);\n            }\n        }\n    }\n    $lstSum = array_sum($lstArr);\n\
    \    return $lstSum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 == 1 && $lst[$i] % 2 == 0) {\n            $sum +=\
    \ $lst[$i];\n        }\n    }\n    return $sum;\n}", "    $even = array_filter($lst,\
    \ function($n) {\n        return $n % 2 == 0;\n    });\n    $odd = array_filter($even,\
    \ function($n, $i) {\n        return $i % 2 == 1;\n    }, ARRAY_FILTER_USE_BOTH);\n\
    \    return array_sum($odd);\n}\n", "    $count = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 != 0 && $lst[$i] % 2 == 0) {\n            $count\
    \ += $lst[$i];\n        }\n    }\n    return $count;\n}\n", "  $newArr = [];\n\
    \  foreach($lst as $i => $v) {\n    if($i % 2 != 0) {\n      $newArr[] = $v;\n\
    \    }\n  }\n  return array_sum($newArr);\n}", "    $sum = 0;\n    for ($i = 0;\
    \ $i < count($lst); $i++) {\n        if ($i % 2 == 1) {\n            if ($lst[$i]\
    \ % 2 == 0) {\n                $sum += $lst[$i];\n            }\n        }\n \
    \   }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $k => $v) {\n\
    \        if($k % 2 != 0 && $v % 2 == 0) {\n            $sum += $v;\n        }\n\
    \    }\n    return $sum;\n}\n", "    $count = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 != 0 && $lst[$i] % 2 == 0) {\n            $count\
    \ += $lst[$i];\n        }\n    }\n    return $count;\n}\n", "    $result = 0;\n\
    \    foreach ($lst as $key => $number) {\n        if ($key % 2 !== 0) {\n    \
    \        $result += $number;\n        }\n    }\n    return $result;\n}\necho add([4,\
    \ 2, 6, 7]) . PHP_EOL;\necho add([2, 3, 5, 6, 7, 3, 2, 6, 2, 1, 2, 8, 2, 9, 2,\
    \ 1, 2, 8, 2, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,", "    $res = 0;\n\
    \    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 !== 0) {\n   \
    \         if ($lst[$i] % 2 === 0) {\n                $res += $lst[$i];\n     \
    \       }\n        }\n    }\n    return $res;\n}\n", "    $result = 0;\n    foreach\
    \ ($lst as $key => $value) {\n        if ($key % 2 != 0) {\n            if ($value\
    \ % 2 == 0) {\n                $result += $value;\n            }\n        }\n\
    \    }\n    return $result;\n}\necho add([4, 2, 6, 7]);\necho \"<br>\";\necho\
    \ add([-4, 2, 6, 7]);", "    if(empty($lst)){\n        return 0;\n    }\n    $new_arr\
    \ = [];\n    foreach($lst as $key => $val){\n        if($key % 2 != 0){\n    \
    \        if($val % 2 == 0){\n                $new_arr[] = $val;\n            }\n\
    \        }\n    }\n    return array_sum($new_arr);\n}\necho add([4, 2, 6, 7]);\n\
    echo \"<br>\";\necho add([5, 3, 5, 9]);\necho \"<br>\";\necho add([5, 8, 9, 15]);\n\
    echo \"<br>\";", "  $res = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if\
    \ ($i % 2 !== 0 && $lst[$i] % 2 === 0) {\n      $res += $lst[$i];\n    }\n  }\n\
    \  return $res;\n}", "    return array_sum(array_filter($lst, function($x, $i)\
    \ { return $i & 1 == 1 && $x & 1 == 0; }, ARRAY_FILTER_USE_BOTH));\n}", "  $sum\
    \ = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($i % 2 === 1 && $lst[$i]\
    \ % 2 === 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n}\n", "\t\
    $sum = 0;\n\t$count = 0;\n\tforeach ($lst as $elem) {\n\t\tif (($count % 2 ==\
    \ 1) && ($elem % 2 == 0)) {\n\t\t\t$sum += $elem;\n\t\t}\n\t\t$count++;\n\t}\n\
    \treturn $sum;\n}\necho add([4, 2, 6, 7]) . \"\\n\";\necho add([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]) . \"\\n\";\necho add([2, 4, 6, 8, 10, 12, 14, 16, 18, 20])\
    \ . \"\\n\";\necho add([4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) . \"\\n\";", "    $even\
    \ = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 == 1 &&\
    \ $lst[$i] % 2 == 0) {\n            $even += $lst[$i];\n        }\n    }\n   \
    \ return $even;\n}\n", "  $even = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n\
    \    if ($i % 2 == 1 && $lst[$i] % 2 == 0) {\n      $even += $lst[$i];\n    }\n\
    \  }\n  return $even;\n}\n\necho add([4, 2, 6, 7]) . \"<br>\";", "\t$result =\
    \ 0;\n\tif(!empty($lst)) {\n\t\tforeach($lst as $key => $value) {\n\t\t\tif($key\
    \ % 2 == 1 && $value % 2 == 0) {\n\t\t\t\t$result += $value;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn $result;\n}\necho add([4, 2, 6, 7]); // 2", "  $odds = [];\n  foreach\
    \ ($lst as $key => $value) {\n    if ($key % 2 == 1 && $value % 2 == 0) {\n  \
    \    $odds[] = $value;\n    }\n  }\n  return array_sum($odds);\n}\necho add([4,\
    \ 2, 6, 7]);", "    return array_sum(array_filter($lst, function($element, $index)\
    \ {\n        return $index % 2 == 1 && $element % 2 == 0;\n    }, ARRAY_FILTER_USE_BOTH));\n\
    }\n\nvar_dump(add([4, 2, 6, 7])) . PHP_EOL;\nvar_dump(add([4, 2, 6, 7, 8])) .\
    \ PHP_EOL;\nvar_dump(add([2, 2, 6, 7, 8])) . PHP_EOL;\nvar_dump(add([4, 4, 6,\
    \ 7, 8])) . PHP_EOL;\nvar_dump(add([4, 2, 6, 7, 8, 10])) . PHP_EOL;\nvar_dump(add([4,\
    \ 5, 6, 7, 8, 10])) . PHP_EOL;\nvar_dump(add([10, 9, 8, 7, 6, 5, 4, 3, 2, 1]))\
    \ . PHP_EOL;\n\n/*", "  $res = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n\
    \    if ($i % 2 == 1 && $lst[$i] % 2 == 0) $res += $lst[$i];\n  }\n  return $res;\n\
    }\n", "    $evens = 0;\n    for ($i = 0; $i < count($lst); $i += 2) {\n      \
    \  if ($lst[$i] % 2 == 0) {\n            $evens += $lst[$i];\n        }\n    }\n\
    \    return $evens;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 == 1) {\n            if ($lst[$i] % 2 == 0) {\n\
    \                $sum += $lst[$i];\n            }\n        }\n    }\n    return\
    \ $sum;\n}", "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($i\
    \ % 2 !== 0 && $lst[$i] % 2 === 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return\
    \ $sum;\n}\n", "    $even = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n \
    \       if ($i % 2 === 1 && $lst[$i] % 2 === 0) {\n            $even += $lst[$i];\n\
    \        }\n    }\n    return $even;\n}", "\t$sum = 0;\n\tfor ($i = 0; $i < count($lst);\
    \ $i++) {\n\t\tif ($i % 2 != 0 && $lst[$i] % 2 == 0) {\n\t\t\t$sum += $lst[$i];\n\
    \t\t}\n\t}\n\treturn $sum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 !== 0) {\n            if ($lst[$i] % 2 === 0) {\n\
    \                $sum += $lst[$i];\n            }\n        }\n    }\n    return\
    \ $sum;\n}\n\necho add([4, 2, 6, 7]);", "  return array_sum(array_filter($lst,\
    \ function($val, $key) {\n    return $key % 2 === 1 && $val % 2 === 0;\n  }, ARRAY_FILTER_USE_BOTH));\n\
    }\n", "    $result = 0;\n    foreach ($lst as $index => $value) {\n        if($index\
    \ % 2 == 1 && $value % 2 == 0)\n            $result += $value;\n    }\n    return\
    \ $result;\n}\n", "  $even_list = array_filter($lst, function($x) {\n    return\
    \ $x % 2 == 0;\n  });\n  $odd_list = array_filter($even_list, function($x, $i)\
    \ {\n    return $i % 2 == 1;\n  }, ARRAY_FILTER_USE_BOTH);\n  return array_sum($odd_list);\n\
    }\n", "  $res = [];\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($i % 2\
    \ !== 0 && $lst[$i] % 2 === 0) {\n      $res[] = $lst[$i];\n    }\n  }\n  return\
    \ array_sum($res);\n}\n", "    if(empty($lst)) return 0;\n    $evens = array_filter($lst,\
    \ function($x) {\n        return $x % 2 == 0;\n    });\n    $odds = array_filter($evens,\
    \ function($x, $y) {\n        return $y % 2 !== 0;\n    }, ARRAY_FILTER_USE_BOTH);\n\
    \    return array_sum($odds);\n}\n\necho(add([4, 2, 6, 7]));", "    $count = 0;\n\
    \    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 != 0 && $lst[$i]\
    \ % 2 == 0) {\n            $count += $lst[$i];\n        }\n    }\n    return $count;\n\
    }\n", "    $result = 0;\n    $count = 0;\n    $countEven = 0;\n    foreach ($lst\
    \ as $value) {\n        if ($countEven % 2 === 0) {\n            $result += $value;\n\
    \        }\n        $countEven++;\n    }\n    return $result;\n}\necho add([4,\
    \ 2, 6, 7]) . PHP_EOL;", "    $evenArr = [];\n    foreach ($lst as $key => $value)\
    \ {\n        if ($key % 2 != 0 && $value % 2 == 0) {\n            $evenArr[] =\
    \ $value;\n        }\n    }\n    $sum = array_sum($evenArr);\n    return $sum;\n\
    }\necho add([4, 2, 6, 7]) . PHP_EOL;", "  $sum = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    if ($i % 2 != 0 && $lst[$i] % 2 == 0) {\n      $sum += $lst[$i];\n\
    \    }\n  }\n  return $sum;\n}\necho add([4, 2, 6, 7]);\necho \"\\n\";", "   \
    \ $sum = 0;\n    foreach ($lst as $k => $v) {\n        if ($k % 2 == 1) {\n  \
    \          $sum += $v;\n        }\n    }\n    return $sum;\n}", "  $res = 0;\n\
    \  foreach($lst as $k => $v) {\n    if ($k % 2 !== 0 && $v % 2 === 0) {\n    \
    \  $res += $v;\n    }\n  }\n  return $res;\n}\n", "  $result = 0;\n  foreach ($lst\
    \ as $k => $v) {\n    if ($k % 2 == 1 && $v % 2 == 0) {\n      $result += $v;\n\
    \    }\n  }\n  return $result;\n}\n\necho add([4, 2, 6, 7]) . \"<br>\"; // 2\n\
    echo add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) . \"<br>\"; // 2 + 4 + 6 + 8 + 10 =\
    \ 30\necho add([2, 3, 4, 5, 6, 7, 8, 9, 10]) . \"<br>\"; // 4 + 6 + 8 + 10 = 28",
  "  $odd = [];\n  foreach ($lst as $key => $value) {\n    if (($key%2 == 1) && ($value%2\
    \ == 0)){\n      $odd[] = $value;\n    }\n  }\n  $sum = array_sum($odd);\n  return\
    \ $sum;\n}\necho add([4, 2, 6, 7]).\"\\n\";\necho add([1, 2, 1, 2, 1, 2, 1, 2]).\"\
    \\n\";", "    $oddIndices = [1, 3, 5, 7, 9];\n    $evenIndices = [0, 2, 4, 6,\
    \ 8];\n    $oddList = [];\n    $evenList = [];\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if (in_array($i, $oddIndices)) {\n            array_push($oddList,\
    \ $lst[$i]);\n        } else if (in_array($i, $evenIndices)) {\n            array_push($evenList,\
    \ $lst[$i]);\n        }\n    }\n    $allOddNumbers = array_filter($oddList, function\
    \ ($number) {\n        return $number % 2 === 0;\n    });\n    $allEvenNumbers\
    \ = array_filter($evenList, function ($number) {\n        return $number % 2 ===\
    \ 0;\n    });\n    $allEvenNumbers = array_map(function ($number) {\n        return\
    \ $number * 2;\n    }, $allEvenNumbers);\n    $result = array_merge($allOddNumbers,\
    \ $allEvenNumbers);\n    return array_sum($result);\n}\n", "\t$total = 0;\n\t\
    $i = 0;\n\tforeach ($lst as $num) {\n\t\tif ($i % 2 == 1 && $num % 2 == 0) {\n\
    \t\t\t$total += $num;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $total;\n}", "  $retVal\
    \ = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($i % 2 == 1 && $lst[$i]\
    \ % 2 == 0) {\n      $retVal += $lst[$i];\n    }\n  }\n  return $retVal;\n}",
  "    $evens = array_filter($lst, function($n) {\n        return ($n % 2 == 0);\n\
    \    });\n    return array_sum(array_values(array_filter($evens, function($k)\
    \ {\n        return ($k % 2 != 0);\n    }, ARRAY_FILTER_USE_KEY)));\n}\necho add([4,\
    \ 2, 6, 7]) . \"\\n\";\n", "    $even = [];\n    foreach($lst as $key => $value)\
    \ {\n        if($key % 2 == 1 && $value % 2 == 0) {\n            $even[] = $value;\n\
    \        }\n    }\n    return array_sum($even);\n}\n", "\n}\n", "    $result =\
    \ 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] % 2 ==\
    \ 0) {\n            $result += $lst[$i];\n        }\n        $i++;\n    }\n  \
    \  return $result;\n}\n", "\t$sum = 0;\n\tforeach($lst as $index => $number) {\n\
    \t\tif($index % 2 != 0) {\n\t\t\tif($number % 2 == 0) {\n\t\t\t\t$sum += $number;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $sum;\n}\n", "  $evens = array_filter($lst, function($num)\
    \ {\n    return $num % 2 == 0;\n  });\n  $oddIndices = array_filter(array_keys($evens),\
    \ function($num) {\n    return $num % 2 == 1;\n  });\n  $oddEvens = array_map(function($num)\
    \ use ($evens) {\n    return $evens[$num];\n  }, $oddIndices);\n  return array_sum($oddEvens);\n\
    }\necho add([4, 2, 6, 7]) . \"\\n\"; // 2\necho add([4, 4, 2, 4, 2, 5, 2, 1, 2,\
    \ 5, 4, 4, 4, 4, 2, 3, 1, 3, 3, 4, 2, 5, 4, 4, 2, 5, 2, 4, 2, 5, 2, 4, 2, 5, 2,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3", "    $evens\
    \ = array_filter($lst, fn($n) => $n % 2 == 0);\n    $odds = array_filter($evens,\
    \ fn($n, $i) => $i % 2 !== 0);\n    return array_sum($odds);\n}\n", "  $total\
    \ = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($i % 2 === 1 && $lst[$i]\
    \ % 2 === 0) {\n      $total += $lst[$i];\n    }\n  }\n  return $total;\n}\n",
  "    $lst = array_filter($lst, function($var) {\n        return $var % 2 == 0;\n\
    \    });\n    $keys = array_keys($lst);\n    $lst = array_filter($keys, function($var)\
    \ {\n        return $var % 2 != 0;\n    });\n    return array_sum(array_values(array_intersect_key($lst,\
    \ $keys)));\n}\n", "  $output = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n\
    \    if ($i % 2 !== 0 && $lst[$i] % 2 === 0) {\n      $output += $lst[$i];\n \
    \   }\n  }\n  return $output;\n}\necho add([4, 2, 6, 7]);\necho \"\\n\";\n", " \
    \ $oddIndices = [];\n  $count = count($lst);\n  for ($i = 0; $i < $count; $i++)\
    \ {\n    if ($i % 2 != 0) {\n      array_push($oddIndices, $lst[$i]);\n    }\n\
    \  }\n  $even = array_filter($oddIndices, function($num) {\n    return $num %\
    \ 2 == 0;\n  });\n  return array_sum($even);\n}\necho add([4, 2, 6, 7]) . \"\\\
    n\"; // 2\necho add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) . \"\\n\"; // 6\necho add([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]) . \"\\n\"; // 0\necho add([1, 2, 3, 4,\
    \ -5, -6, 7, 8, 9, -10]) . \"\\n\"; // -6", "  $evens = array_filter($lst, function($v)\
    \ {\n    return $v % 2 == 0;\n  });\n  return array_sum(array_filter($evens, function($v,\
    \ $k) {\n    return $k % 2 == 1;\n  }, ARRAY_FILTER_USE_BOTH));\n}\n", "    $odds\
    \ = [];\n    foreach($lst as $key => $value) {\n        if ($key % 2 != 0) {\n\
    \            $odds[] = $value;\n        }\n    }\n    $total = 0;\n    foreach($odds\
    \ as $odd) {\n        if ($odd % 2 == 0) {\n            $total += $odd;\n    \
    \    }\n    }\n    return $total;\n}\n\necho add([4, 2, 6, 7]) . \"\\n\";\necho\
    \ add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\
    \ 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,\
    \ 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,\
    \ 97, 98, 99, 100]) . \"\\n\";\n", "  return array_sum(array_filter($lst, function($v,\
    \ $k) { return $k % 2 && !($v % 2); }, ARRAY_FILTER_USE_BOTH));\n}", "  $add =\
    \ 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($i % 2 != 0 && $lst[$i]\
    \ % 2 == 0) {\n      $add += $lst[$i];\n    }\n  }\n  return $add;\n}\necho add([4,\
    \ 2, 6, 7]) . \"\\n\";\necho add([1, 2, 2, 4, 5, 6, 0, 7, 8, 9, 10]) . \"\\n\"\
    ;", "    $total = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i\
    \ % 2 != 0 && $lst[$i] % 2 == 0) {\n            $total += $lst[$i];\n        }\n\
    \    }\n    return $total;\n}\n", "\t$sum = 0;\n\tforeach ($lst as $k => $v) {\n\
    \t\tif ($k % 2 == 1) {\n\t\t\t$sum += $v;\n\t\t}\n\t}\n\treturn $sum;\n}\n", " \
    \   $numbers = [];\n    $result = 0;\n    for ($i = 0; $i < count($lst); $i++)\
    \ {\n        if ($i % 2 == 1 && $lst[$i] % 2 == 0) {\n            $numbers[] =\
    \ $lst[$i];\n        }\n    }\n    for ($i = 0; $i < count($numbers); $i++) {\n\
    \        $result += $numbers[$i];\n    }\n    return $result;\n}\n", "  return\
    \ array_sum(array_filter($lst, function($v, $k) {\n    return $v % 2 == 0 && $k\
    \ % 2 != 0;\n  }, ARRAY_FILTER_USE_BOTH));\n}\n", "\t$evenNumbers = array_filter($lst,\
    \ function($number) {\n\t\treturn $number % 2 == 0;\n\t});\n\t$oddNumbers = array_filter($lst,\
    \ function($number) {\n\t\treturn $number % 2 != 0;\n\t});\n\t$sum = 0;\n\tfor\
    \ ($i = 0; $i < count($evenNumbers); $i++) {\n\t\t$sum += $evenNumbers[$i];\n\t\
    }\n\treturn $sum;\n}\n", "    $sum = 0;\n    foreach ($lst as $key => $num) {\n\
    \        if ($key % 2 !== 0) {\n            if ($num % 2 == 0) {\n           \
    \     $sum += $num;\n            }\n        }\n    }\n    return $sum;\n}", " \
    \   $result = [];\n    foreach ($lst as $key => $value) {\n        if ($key %\
    \ 2 !== 0 && $value % 2 === 0) {\n            $result[] = $value;\n        }\n\
    \    }\n    return array_sum($result);\n}", "    $sum = 0;\n    foreach($lst as\
    \ $key => $val) {\n        if(($key % 2) && ($val % 2 == 0)) {\n            $sum\
    \ += $val;\n        }\n    }\n    return $sum;\n}\n\n$data = [4, 2, 6, 7];\n$data2\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\necho add($data);\necho add($data2);",
  "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($i % 2 == 1 && $lst[$i]\
    \ % 2 == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n}\n\necho\
    \ add([1, 2, 3, 4, 5]);", "  $count = 0;\n  for ($i = 0; $i < count($lst); $i++)\
    \ {\n    if ($i % 2 == 1 && $lst[$i] % 2 == 0) {\n      $count += $lst[$i];\n\
    \    }\n  }\n  return $count;\n}\necho add([4, 2, 6, 7]);\necho \"<br>\";\necho\
    \ add([1, 1, 1, 1]);\necho \"<br>\";\n", "    $sum = 0;\n    for ($i = 0; $i <\
    \ count($lst); $i++) {\n        if ($i % 2 != 0 && $lst[$i] % 2 == 0) {\n    \
    \        $sum += $lst[$i];\n        }\n    }\n    return $sum;\n}", "  $length\
    \ = count($lst);\n  $sum = 0;\n  for ($i = 0; $i < $length; $i += 2) {\n    if\
    \ ($lst[$i] % 2 == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n\
    }\necho add([4, 2, 6, 7]) . \"\\n\"; // 2\necho add([2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\
    \ 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,\
    \ 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]) . \"\\n\"; // 876\necho\
    \ add([25, 35, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,\
    \ 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,\
    \ 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,\
    \ 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,\
    \ 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,\
    \ 45, 45, 45, 45, 45, 45, 45, 45,", "  // Your code here\n}\n\necho add([4, 2,\
    \ 6, 7]); // 2\necho \"\\n\";\n\necho add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]); //\
    \ 6\necho \"\\n\";\n\necho add([-4, -6, -10, -1, -2, -3, -5, -7, -9]); // -4\n\
    echo \"\\n\";\n\necho add([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20]); // 16\necho \"\\n\";\n\necho add([-1, -2, -3, -4, -5,\
    \ -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20]); //\
    \ -4\necho \"\\n\";\n\necho add([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]); // 6\necho\
    \ \"\\n\";\n\necho add([-1, -3, -5, -7, -9, -11, -13, -15, -17, -19]); // -4\n\
    echo \"\\n\";\n\necho add([-2, -4, -6, -8, -10, -12, -14, -16, -18, -20]); //\
    \ -4\necho \"\\n\";\n\necho add([2, 4, 6, 8, 10, 12, 14, 16, 18, 20]); // 16\n\
    echo \"\\n\";\n\necho add([4, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,\
    \ 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,", "    $result = 0;\n  \
    \  for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 !== 0 && $lst[$i]\
    \ % 2 === 0) {\n            $result += $lst[$i];\n        }\n    }\n    return\
    \ $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

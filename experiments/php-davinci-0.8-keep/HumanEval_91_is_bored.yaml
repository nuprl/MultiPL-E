name: HumanEval_91_is_bored
language: php
prompt: "<?php\n// You'll be given a string of words, and your task is to count the\
  \ number\n// of boredoms. A boredom is a sentence that starts with the word \"I\"\
  .\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"\
  Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
  \ this weather\")\n// 1\nfunction is_bored($S) {\n"
tests: "function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"I feel good today. I will be productive. will\
  \ kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $cnt = 0;\n    $S = preg_split('/\\s*[\\.!\\?]\\s*/', $S);\n  \
    \  foreach ($S as $s) {\n        if (preg_match('/^I/', $s)) $cnt++;\n    }\n\
    \    return $cnt;\n}\n\nprint_r(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\"));", "  $boredoms = 0;\n  foreach (explode(\".\", $S)\
    \ as $s) {\n    if (strpos($s, \"I\") === 0) $boredoms++;\n  }\n  return $boredoms;\n\
    }", "  $boredoms = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences\
    \ as $sentence) {\n    $words = explode(\" \", $sentence);\n    if ($words[0]\
    \ == \"I\") {\n      $boredoms += 1;\n    }\n  }\n  return $boredoms;\n}\n", " \
    \ $numBoredoms = 0;\n  $sentences = explode(\".\", $S);\n  foreach ($sentences\
    \ as $sentence) {\n    $words = explode(\" \", $sentence);\n    if ($words[0]\
    \ == \"I\") $numBoredoms++;\n  }\n  return $numBoredoms;\n}", "    $boredoms =\
    \ 0;\n    $sentences = explode('.', $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $sentence = trim($sentence);\n        if (strtolower(substr($sentence,\
    \ 0, 2)) == 'i ') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\n", "    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example: print \"Hello world!\";\n    $sentence_array\
    \ = explode(\". \", $S);\n    $count = 0;\n    foreach ($sentence_array as $sentence)\
    \ {\n        if (preg_match(\"/^I/\", $sentence)) {\n            $count += 1;\n\
    \        }\n    }\n    print($count);\n}\n", "    $tok = strtok($S, \"?.!\");\n\
    \    $count = 0;\n    while ($tok !== false) {\n        if (strpos($tok, \"I\"\
    ) === 0) {\n            $count++;\n        }\n        $tok = strtok(\"?.!\");\n\
    \    }\n    return $count;\n}", "    $i = 0;\n    $words = explode(\" \", $S);\n\
    \    foreach ($words as $word) {\n        if ($word == \"I\") {\n            $i++;\n\
    \        }\n    }\n    return $i;\n}\nprint_r(is_bored(\"Hello world\"));", " \
    \   $arr = explode(\" \", $S);\n    $count = 0;\n    foreach ($arr as $word) {\n\
    \        if ($word == \"I\") {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n", "  $S = explode(' ', $S);\n  $boredoms = 0;\n  foreach ($S as\
    \ $s) {\n    if (strpos($s, 'I') !== false) {\n      $boredoms++;\n    }\n  }\n\
    \  return $boredoms;\n}\necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . \"\\n\";", "  $S\
    \ = explode(\".\", $S);\n  $S = implode(\" \", $S);\n  $S = explode(\"?\", $S);\n\
    \  $S = implode(\" \", $S);\n  $S = explode(\"!\", $S);\n  $S = implode(\" \"\
    , $S);\n  $S = explode(\" \", $S);\n  $count = 0;\n  foreach ($S as $item) {\n\
    \    if (strtolower($item) == \"i\") {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n", "    $dot = strpos($S, '.');\n    $quest = strpos($S, '?');\n\
    \    $excl = strpos($S, '!');\n    if($dot === false && $quest === false && $excl\
    \ === false)\n        return 0;\n    elseif($dot === false && $quest === false)\n\
    \        $pos = $excl;\n    elseif($dot === false && $excl === false)\n      \
    \  $pos = $quest;\n    elseif($quest === false && $excl === false)\n        $pos\
    \ = $dot;\n    elseif($dot < $quest && $dot < $excl)\n        $pos = $dot;\n \
    \   elseif($quest < $dot && $quest < $excl)\n        $pos = $quest;\n    else\n\
    \        $pos = $excl;\n    if(substr($S, 0, $pos) == 'I')\n        return 1 +\
    \ is_bored(substr($S, $pos + 1));\n    else\n        return is_bored(substr($S,\
    \ $pos + 1));\n}\n", "    return substr_count($S, \"I\");\n}", "    $boredoms\
    \ = 0;\n    $sentences = explode('. ', $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if (strtolower($words[0])\
    \ == 'i') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\n", "    $word_array = explode(\" \", $S);\n    $sentence_array = explode(array(\"\
    .\", \"?\", \"!\"), $S);\n    foreach ($word_array as $word) {\n        if ($word\
    \ == \"I\") {\n            return 1;\n        }\n    }\n    return 0;\n}\n", " \
    \ $arr = explode(\" \", $S);\n  $count = 0;\n  for ($i = 0; $i < count($arr);\
    \ $i++) {\n    if (strtolower($arr[$i]) == \"i\") {\n      if (preg_match(\"/^[A-Z]/\"\
    , $arr[$i - 1])) {\n        continue;\n      }\n      $count++;\n    }\n  }\n\
    \  return $count;\n}", "    $S = str_replace(\". \", \".\", $S);\n    $S = str_replace(\"\
    ! \", \"!\", $S);\n    $S = str_replace(\"? \", \"?\", $S);\n    $arr = explode(\"\
    .\", $S);\n    $arr = array_merge($arr, explode(\"!\", $S));\n    $arr = array_merge($arr,\
    \ explode(\"?\", $S));\n    foreach ($arr as $k => $v) {\n        if ($v == \"\
    \") {\n            unset($arr[$k]);\n        }\n    }\n    $boredoms = 0;\n  \
    \  foreach ($arr as $k => $v) {\n        if (strtolower(substr($v, 0, 2)) == \"\
    i \") {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\
    echo is_bored(\"Hello world\");", "    $sentences = explode('.', $S);\n    $count\
    \ = 0;\n    foreach ($sentences as $s) {\n        if (preg_match('/I\\b/', $s))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n$S = 'The\
    \ sky is blue. The sun is shining. I love this weather.';\necho is_bored($S);",
  "    $a = preg_split('/[.!?]/', $S);\n    $c = 0;\n    foreach ($a as $v) {\n  \
    \      if (substr($v, 0, 2) == 'I ') $c++;\n    }\n    return $c;\n}\n", "  $sentences\
    \ = explode(\". \", $S);\n  $sum = 0;\n  foreach ($sentences as $sentence) {\n\
    \    if (substr($sentence, 0, 2) == \"I \") {\n      $sum++;\n    }\n  }\n  return\
    \ $sum;\n}", "    $boredoms = 0;\n    $words = explode(' ', $S);\n    foreach\
    \ ($words as $word) {\n        if ($word == 'I') {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\necho is_bored(\"Hello world\");\n\
    echo \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\");\necho \"\\n\";\n", "    $sentences = preg_split('/\\!|\\.|\\?/',\
    \ $S);\n    $count = 0;\n    foreach ($sentences as $sentence) {\n        if (preg_match('/^I/',\
    \ $sentence)) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n$S = \"The sky is blue. The sun is shining. I love this weather\";\necho is_bored($S);",
  "  $arr = explode(' ', $S);\n  $count = 0;\n  for ($i = 0; $i < count($arr); $i++)\
    \ {\n    if ($arr[$i] == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n\
    }", "  $sentences = explode('.!?', $S);\n  $result = 0;\n  foreach ($sentences\
    \ as $sentence) {\n    if (substr($sentence, 0, 1) == 'I') {\n      $result++;\n\
    \    }\n  }\n  return $result;\n}\n", "    $s = preg_split('/[?.!]/', $S);\n \
    \   $c = 0;\n    foreach ($s as $v) {\n        if (preg_match('/I/', $v)) {\n\
    \            $c++;\n        }\n    }\n    return $c;\n}", "    $sentences = preg_split('/[.?!]/',\
    \ $S);\n    $count = 0;\n    foreach ($sentences as $sentence) {\n        if (strtolower(trim($sentence))[0]\
    \ == 'i') {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    echo is_bored(\"Hello world\");", "    $sentences = explode(array(\".\",\"?\"\
    ,\"!\"), $S);\n    $count = 0;\n    foreach ($sentences as $sentence) {\n    \
    \    if (substr($sentence, 0, 2) == \"I \") {\n            $count++;\n       \
    \ }\n    }\n    return $count;\n}", "  return substr_count($S, 'I');\n}\n", " \
    \   $S = explode('.', $S);\n    $S = str_replace('?', '.', $S);\n    $S = str_replace('!',\
    \ '.', $S);\n    $S = explode('.', $S);\n    $counter = 0;\n    foreach ($S as\
    \ $k => $v) {\n        if (substr($v, 0, 2) == 'I ') {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}", "  $boredoms = 0;\n  $sub_sentences\
    \ = preg_split('/[.!?]/', $S);\n  foreach ($sub_sentences as $sub_sentence) {\n\
    \    $sub_sentence = preg_replace('/^\\s+/', '', $sub_sentence);\n    if (preg_match('/^I/',\
    \ $sub_sentence)) {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n}",
  "    $S = preg_split('/[.?!]/', $S);\n    $count = 0;\n    foreach ($S as $s) {\n\
    \        if (substr($s, 0, 2) == 'I ') $count++;\n    }\n    return $count;\n\
    }\n$S = \"The sky is blue. The sun is shining. I love this weather\";\necho is_bored($S);",
  "  $S .= \" \";\n  $length = strlen($S);\n  $boredoms = 0;\n  $i = 0;\n  while ($i\
    \ < $length) {\n    $curr = $S[$i];\n    if ($curr == \"I\") {\n      $boredoms++;\n\
    \    }\n    if ($curr == \"!\" || $curr == \".\" || $curr == \"?\") {\n      $i++;\n\
    \      $curr = $S[$i];\n      while ($curr == \" \") {\n        $i++;\n      \
    \  $curr = $S[$i];\n      }\n    }\n    $i++;\n  }\n  return $boredoms;\n}", " \
    \   return count(preg_split('/\\?|\\.|!/', $S, -1, PREG_SPLIT_NO_EMPTY))-1;\n\
    }\n\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ).\"\\n\";\n", "  // Your code goes here\n  $array_of_sentences = explode(\".\"\
    , $S);\n  $count = 0;\n  foreach ($array_of_sentences as $sentence) {\n    if\
    \ (substr($sentence, 0, 8) == \"I am bo\") {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}", "  $sentences = explode('. ', $S);\n  $count = 0;\n  foreach ($sentences\
    \ as $sentence) {\n    if (substr($sentence, 0, 2) == 'I ') $count++;\n  }\n \
    \ return $count;\n}\necho is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\\n\");\necho is_bored(\"Hello world\\n\");\n", "    // Your code\
    \ here.\n    return 0;\n}", "  $boredoms = 0;\n  foreach (explode(\"!\", $S) as\
    \ $sentence) {\n    foreach (explode(\"?\", $sentence) as $sentence) {\n     \
    \ $words = explode(\".\", $sentence);\n      if ($words[0] == \"I\") {\n     \
    \   $boredoms++;\n      }\n    }\n  }\n  return $boredoms;\n}", "    $arr = explode('\
    \ ', $S);\n    $count = 0;\n    foreach ($arr as $word) {\n        if ($word ===\
    \ 'I') {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $n = 0;\n    $sentences = explode(\". \", $S);\n    foreach ($sentences as\
    \ $sentence) {\n        if (substr($sentence, 0, 2) == \"I \") {\n           \
    \ $n++;\n        }\n    }\n    return $n;\n}", "    $return = 0;\n    $sentences\
    \ = preg_split('/[.?!]/', $S);\n    foreach ($sentences as $sentence) {\n    \
    \    if (substr($sentence, 0, 1) == 'I') {\n            $return++;\n        }\n\
    \    }\n    return $return;\n}\n\nassert(0 == is_bored(\"Hello world\"));\nassert(1\
    \ == is_bored(\"The sky is blue. The sun is shining. I love this weather\"));\n\
    assert(0 == is_bored(\"I am bored!\"));\nassert(0 == is_bored(\"All is well\"\
    ));\nassert(0 == is_bored(\"\"));\nassert(0 == is_bored(\".\"));\nassert(1 ==\
    \ is_bored(\"I like eating cake. And pie. And cookies.\"));\nassert(1 == is_bored(\"\
    I like eating cake. And pie. And cookies. And pie. And cookies.\"));\nassert(2\
    \ == is_bored(\"I like eating cake. And pie. And cookies. And pie. And cookies.\
    \ And pie. And cookies.\"));\nassert(1 == is_bored(\"I like eating cake. And pie.\
    \ And cookies. And pie. And cookies. And pie. And cookies. And pie. And cookies.\"\
    ));\nassert(0 == is_bored(\"I like eating cake. And pie. And cookies. And pie.\
    \ And cookies. And pie. And cookies. And pie. And cookies. And pie. And cookies.\"\
    ));\nassert(0 == is_bored(\"I like eating cake. And pie. And cookies. And pie.\
    \ And cookies. And pie. And cookies. And pie. And cookies. And pie. And cookies.\
    \ And pie. And cookies.\"));\nassert(0 == is_bored(\"I like eating cake. And pie.\
    \ And cookies. And pie. And cookies. And pie. And cookies. And pie. And cookies.\
    \ And pie. And cookies. And pie. And cookies. And pie. And cookies.\"));\nassert(0\
    \ == is_bored(\"I like eating cake. And pie. And cookies. And pie. And cookies.\
    \ And pie. And cookies. And pie. And cookies. And pie. And cookies. And pie. And\
    \ cookies. And pie. And cookies. And", "    // your code here\n    $sentence =\
    \ explode('.', $S);\n    $boredoms = 0;\n    foreach ($sentence as $sent) {\n\
    \        $words = explode(' ', $sent);\n        if ( $words[0] == 'I' ) {\n  \
    \          $boredoms++;\n        }\n    }\n    return $boredoms;\n}", "  return\
    \ preg_match_all('/I/', $S);\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");", "    $sentences = explode('. ', $S);\n    $boredoms\
    \ = 0;\n    foreach ($sentences as $sentence) {\n        if (strstr($sentence,\
    \ 'I ')) {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );", "  $boredoms = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences\
    \ as $sentence) {\n    $sentence = explode(\" \", $sentence);\n    if ($sentence[0]\
    \ == \"I\") $boredoms++;\n  }\n  return $boredoms;\n}\n", "\tif (is_string($S))\
    \ {\n\t\t$sentences = explode(\".\", $S);\n\t\t$sentences = array_merge($sentences,\
    \ explode(\"?\", $S));\n\t\t$sentences = array_merge($sentences, explode(\"!\"\
    , $S));\n\t\t$count = 0;\n\t\tforeach ($sentences as $sentence) {\n\t\t\t$sentence\
    \ = explode(\" \", $sentence);\n\t\t\tif (count($sentence) > 0) {\n\t\t\t\tif\
    \ ($sentence[0] == \"I\") {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\
    \treturn $count;\n\t}\n\treturn -1;\n}\n\n$S = \"The sky is blue. The sun is shining.\
    \ I love this weather\";\necho is_bored($S);\n", "  // your code here\n  $exploded\
    \ = explode(\" \", $S);\n  $bored = 0;\n  foreach ($exploded as $word) {\n   \
    \ if ($word[0] == \"I\") {\n      $bored += 1;\n    }\n  }\n  return $bored;\n\
    }\n", "    $boredoms = 0;\n    $trimmed_string = str_replace([\"\\r\", \"\\n\"\
    , \"\\t\"], \"\", $S);\n    $trimmed_string = preg_replace('/ {2,}/', ' ', $trimmed_string);\n\
    \    $punctuation = ['?', '.', '!'];\n    $trimmed_string = str_replace($punctuation,\
    \ '|', $trimmed_string);\n    $sentences = explode('|', $trimmed_string);\n  \
    \  for ($i = 0; $i < count($sentences); $i++) {\n        $sentence = $sentences[$i];\n\
    \        $sentence = trim($sentence);\n        $words = explode(' ', $sentence);\n\
    \        if (strtolower($words[0]) == 'i') {\n            $boredoms++;\n     \
    \   }\n    }\n    return $boredoms;\n}\n", "  $words = explode(' ', $S);\n  $count\
    \ = 0;\n  for ($i = 0; $i < count($words); $i++) {\n    if ($words[$i] == 'I')\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\n$S = \"The sky is blue.\
    \ The sun is shining. I love this weather\";\necho is_bored($S);", "    $sentences\
    \ = explode(array('.', '?', '!'), $S);\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        if (strpos($sentence, 'I') === 0) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\n\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\");", "  $arr = explode(\" \", $S);\n\
    \  foreach ($arr as $value) {\n    if (strtolower($value) == \"i\") {\n      return\
    \ 1;\n    }\n  }\n  return 0;\n}", "  $words = explode(' ', $S);\n  return substr_count($S,\
    \ 'I') - count($words);\n}\n", "    $S = explode('.', $S);\n    $S = explode('?',\
    \ $S);\n    $S = explode('!', $S);\n    $result = 0;\n    foreach ($S as $word)\
    \ {\n        if (substr($word, 0, 2) == 'I ') {\n            $result++;\n    \
    \    }\n    }\n    return $result;\n}\necho is_bored(\"I love this weather!\"\
    );", "  return preg_match_all('/I/', $S, $match);\n}", "  $S = preg_split('/[.?!]/',\
    \ $S);\n  $nb = 0;\n  foreach ($S as $s) {\n    if (strpos($s, 'I') === 0) {\n\
    \      $nb++;\n    }\n  }\n  return $nb;\n}\n\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\").PHP_EOL;", "    $count = 0;\n   \
    \ $sentences = explode('. ', $S);\n    foreach ($sentences as $sentence) {\n \
    \       $words = explode(' ', $sentence);\n        if ($words[0] == 'I') {\n \
    \           $count += 1;\n        }\n    }\n    return $count;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\\n\");\n", "  $count\
    \ = 0;\n  $sentences = explode(\".\", $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $sentence = explode(\" \", $sentence);\n    if ($sentence[0] == \"I\"\
    ) {\n      $count += 1;\n    }\n  }\n  return $count;\n}\necho is_bored(\"The\
    \ sky is blue. The sun is shining. I love this weather\").\"\\n\";\n", "  $boredoms\
    \ = 0;\n  $sentences = explode('.', $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $first_word = strtok($sentence, ' ');\n    if ($first_word == 'I') {\n\
    \      $boredoms++;\n    }\n  }\n  return $boredoms;\n}", "    return preg_match_all('/[I].*[\\\
    .|\\!|\\?]/', $S);\n}\n", "  $array = explode(\" \", $S);\n  $i=0;\n  foreach\
    \ ($array as $key => $value) {\n    if ($value == \"I\"){\n      $i++;\n    }\n\
    \  }\n  return $i;\n}\n\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\n", "    $count = 0;\n    $S = explode(\" \", $S);\n\
    \    for ($i = 0; $i < count($S); $i++) {\n        if ($S[$i] == \"I\") {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}", "    $boredoms\
    \ = substr_count($S, \"I\");\n    echo $boredoms;\n}\nis_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\");\necho \"\\n\";\nis_bored(\"The sun\
    \ is shining. I love this weather\");\necho \"\\n\";\nis_bored(\"Hello world\"\
    );\necho \"\\n\";", "  $sentences = explode('. ', $S);\n  $count = 0;\n  foreach\
    \ ($sentences as $sentence) {\n    if (substr($sentence, 0, 2) == 'I ') {\n  \
    \    $count++;\n    }\n  }\n  return $count;\n}\necho is_bored(\"Hello world\"\
    ) . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\") . \"\\n\";", "    $sentences = explode('.', $S);\n    $boredoms =\
    \ 0;\n    foreach ($sentences as $sentence) {\n        $words = explode(' ', $sentence);\n\
    \        if (strtolower($words[0]) == 'i') $boredoms++;\n    }\n    return $boredoms;\n\
    }\n", "    $word = 'I';\n    $count = 0;\n    $sentences = preg_split('/(?<=[.?!])\\\
    s*/', $S, -1, PREG_SPLIT_NO_EMPTY);\n    foreach ($sentences as $sentence) {\n\
    \        $words = explode(' ', $sentence);\n        if ($words[0] == $word) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");", "    return count(array_filter(array_map('trim',\
    \ explode('!', $S)),\n        function($str) {\n            return preg_match('/^I/',\
    \ $str);\n        }));\n}\n\necho is_bored('Hello world'), \"\\n\";\necho is_bored('The\
    \ sky is blue. The sun is shining. I love this weather'), \"\\n\";\necho is_bored('The\
    \ sky is blue. The sun is shining. I love this weather! I was waiting for this\
    \ beautiful day!'), \"\\n\";\necho is_bored('I am bored! I want to go to the beach!'),\
    \ \"\\n\";\necho is_bored('The sun is shining. I love this weather. The sky is\
    \ blue.'), \"\\n\";\n", "    $arr = explode(' ', $S);\n    $cnt = 0;\n    foreach\
    \ ($arr as $word) {\n        if ($word === 'I') {\n            $cnt++;\n     \
    \   }\n    }\n    return $cnt;\n}\n", "    $split_string = explode(\" \", $S);\n\
    \    $count = 0;\n    foreach ($split_string as $i => $word) {\n        if ($word\
    \ == \"I\") {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
  "    $matches = preg_split('/\\?|\\.|\\!/', $S);\n    $boredoms = 0;\n    foreach\
    \ ($matches as $match) {\n        if (preg_match('/^\\s*I/', $match)) {\n    \
    \        $boredoms++;\n        }\n    }\n    return $boredoms;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\").\"\\n\";\necho is_bored(\"\
    Hello world\").\"\\n\";", "  // split the strings on the delimiters\n  $A = preg_split('/[?.!]/',\
    \ $S);\n  $boredoms = 0;\n  foreach ($A as $sentence) {\n    $sentence = trim($sentence);\n\
    \    if (preg_match('/^I\\s/', $sentence)) {\n      // the sentence starts with\
    \ I, increase the boredoms count\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n\
    }\n", '    $bor', "    $S = explode(\".\", $S);\n    $S = explode(\"?\", $S[0]);\n\
    \    $S = explode(\"!\", $S[0]);\n    $S = explode(\" \", $S[0]);\n    if ($S[0]\
    \ == \"I\")\n        return (1);\n    return (0);\n}", "  $sentences = explode(['.',\
    \ '?', '!'], $S);\n  $num_boredoms = 0;\n  foreach ($sentences as $sentence) {\n\
    \    $words = explode(' ', $sentence);\n    if (count($words) > 0 && $words[0]\
    \ == 'I') {\n      $num_boredoms++;\n    }\n  }\n  return $num_boredoms;\n}\n",
  "    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n    $arr = explode(\"\
    \ \", $S);\n    return count(array_filter($arr, function($el) {\n        return\
    \ $el == \"I\";\n    }));\n}\n", "  $S = explode('.', $S);\n  $S = array_filter($S);\n\
    \  $S = implode('.', $S);\n  $S = explode('?', $S);\n  $S = array_filter($S);\n\
    \  $S = implode('?', $S);\n  $S = explode('!', $S);\n  $S = array_filter($S);\n\
    \  $S = implode('!', $S);\n  $S = explode(' ', $S);\n  foreach ($S as $v) {\n\
    \    if ($v == 'I') {\n      $count = $count + 1;\n    }\n  }\n  return $count;\n\
    }", "    $S = explode('.', $S);\n    $Boredoms = 0;\n    foreach ($S as $Sentence)\
    \ {\n        $Words = explode(' ', $Sentence);\n        if ($Words[0] == 'I')\
    \ $Boredoms++;\n    }\n    return $Boredoms;\n}", "    $boredoms = 0;\n    $sentences\
    \ = explode('. ', $S);\n    foreach ($sentences as $sentence) {\n        $words\
    \ = explode(' ', $sentence);\n        if ($words[0] == 'I') {\n            $boredoms\
    \ += 1;\n        }\n    }\n    return $boredoms;\n}", "  $arr = explode(' ', $S);\n\
    \  $boredoms = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    if ($arr[$i]\
    \ == 'I') {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n}\n", "    $S\
    \ = preg_split('/\\.|\\?|\\!/', $S);\n    $count = 0;\n    foreach ($S as $value)\
    \ {\n        if (preg_match('/^\\s*I\\s/', $value)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "    $phrases = preg_split('/[.!?]/',\
    \ $S);\n    $count = 0;\n    foreach ($phrases as $phrase) {\n        if (preg_match('/^I\\\
    s*/', $phrase)) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n$S = 'The sky is blue. The sun is shining. I love this weather';\necho is_bored($S)\
    \ . \"\\n\";\n$S = 'Hello world';\necho is_bored($S) . \"\\n\";", "    $ex = explode(\"\
    \ \", $S);\n    $count = 0;\n    foreach ($ex as $word) {\n        if ($word ==\
    \ \"I\") {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    $S = \"Hello world\";\n$S = \"The sky is blue. The sun is shining. I love this\
    \ weather\";\n$S = \"The sky is blue. The sun is shining. I love this weather!I\
    \ want to go outside.I want to eat some ice cream.I want to visit the zoo.\";\n\
    $S = \"my name is The sky is blue. The sun is shining. I love this weather\";\n\
    $S = \"my name is The sky is blue. The sun is shining. I love this weather!\"\
    ;\n$S = \"my name is The sky is blue. The sun is shining. I love this weather!I\
    \ want to go outside.I want to eat some ice cream.I want to visit the zoo.\";\n\
    \necho is_bored($S);", "  $S = explode(' ', $S);\n  $boredoms = 0;\n  for ($i\
    \ = 0; $i < count($S); $i++) {\n    if ($S[$i] == 'I') {\n      $boredoms++;\n\
    \    }\n  }\n  return $boredoms;\n}\n\n$S = \"The sky is blue. The sun is shining.\
    \ I love this weather.\";\necho is_bored($S) . PHP_EOL;", "  $boredoms = 0;\n\
    \  $segments = explode(\". \", $S);\n  foreach ($segments as $segment) {\n   \
    \ if (explode(\" \", $segment)[0] == \"I\") {\n      $boredoms++;\n    }\n  }\n\
    \  return $boredoms;\n}\n", "    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example: print \"Hello world!\"\
    ;\n    $sentences = preg_split('/[.!?]/', $S);\n    $boredom = 0;\n    foreach\
    \ ($sentences as $sentence) {\n        $words = explode(' ', $sentence);\n   \
    \     if ($words[0] == 'I') {\n            $boredom++;\n        }\n    }\n   \
    \ print $boredom;\n}", "    return strlen(preg_replace('/((I)|(\\.)|(\\?))/',\
    \ '', $S));\n}\n$S = 'Hello world';\necho is_bored($S);\necho \"\\n\";\n$S = 'The\
    \ sky is blue. The sun is shining. I love this weather';\necho is_bored($S);\n\
    echo \"\\n\";", "    return substr_count($S, 'I') - substr_count($S, 'I ');\n\
    }\necho is_bored(\"Hello world\");\necho is_bored(\"The sky is blue. The sun is\
    \ shining. I love this weather\");", "    $arr = explode(' ', $S);\n    $boredoms\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if (strtolower($arr[$i])\
    \ == 'i') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }", "  return substr_count($S, 'I');\n}", "    $sentences = preg_split('/[.?!]/',\
    \ $S);\n    $count = 0;\n    foreach ($sentences as $sentence) {\n        if (strpos($sentence,\
    \ 'I') === 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n", "\t$S = explode(' ', $S);\n\t$res = 0;\n\tforeach ($S as $s) {\n\t\tif (strlen($s)\
    \ == 1 && ($s == '.' || $s == '?' || $s == '!')) {\n\t\t\t$res++;\n\t\t}\n\t}\n\
    \treturn $res;\n}\n$S = \"Hello world\";\nvar_dump(is_bored($S));\n$S = \"The\
    \ sky is blue. The sun is shining. I love this weather\";\nvar_dump(is_bored($S));",
  "  $text = explode(\" \", $S);\n  $i = 0;\n  foreach ($text as $value) {\n    if\
    \ ($value == \"I\") {\n      $i++;\n    }\n  }\n  return $i;\n}\n", "    $n =\
    \ 0;\n    $S = explode('.', $S);\n    for ($i = 0; $i < count($S); $i++) {\n \
    \       $S[$i] = explode('?', $S[$i]);\n        for ($j = 0; $j < count($S[$i]);\
    \ $j++) {\n            $S[$i][$j] = explode('!', $S[$i][$j]);\n            for\
    \ ($k = 0; $k < count($S[$i][$j]); $k++) {\n                $S[$i][$j][$k] = trim($S[$i][$j][$k]);\n\
    \                if (strtolower(substr($S[$i][$j][$k], 0, 2)) == 'i ') {\n   \
    \                 $n++;\n                }\n            }\n        }\n    }\n\
    \    return $n;\n}\necho is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\") . \"\\n\";", "\t$arr = explode(' ',$S);\n\t$count = 0;\n\tforeach\
    \ ($arr as $value) {\n\t\tif (strtolower($value) == 'i') {\n\t\t\t$count++;\n\t\
    \t}\n\t}\n\treturn $count;\n}\n", "    $a = explode(\" \", $S);\n    $c = 0;\n\
    \    foreach ($a as $v) {\n        if (strpos($v, \"I\") === 0) {\n          \
    \  $c++;\n        }\n    }\n    return $c;\n}", "    $S = explode(' ', str_replace(['.',\
    \ '?', '!'], [' .', ' ?', ' !'], $S));\n    $r = 0;\n    foreach ($S as $s) {\n\
    \        if ($s == 'I') {\n            $r++;\n        }\n    }\n    return $r;\n\
    }\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ).\"\\n\";", "  $arr = explode(\" \", $S);\n  $res = 0;\n  $isFirst = true;\n\
    \  foreach ($arr as $word) {\n    if (strpos($word, \"I\") !== false && $isFirst)\
    \ {\n      $res++;\n      $isFirst = false;\n    }\n    if (strpos($word, \".\"\
    ) !== false || strpos($word, \"?\") !== false || strpos($word, \"!\") !== false)\
    \ {\n      $isFirst = true;\n    }\n  }\n  return $res;\n}\n$S = \"I am bored.\
    \ I am not.\";\necho is_bored($S) . PHP_EOL;", "  $result = 0;\n  $sentences =\
    \ preg_split('/[.?!]/', $S);\n  foreach ($sentences as $sentence) {\n    if (preg_match('/^I/',\
    \ $sentence)) {\n      $result++;\n    }\n  }\n  return $result;\n}\n", "  $str_arr\
    \ = explode(\" \", $S);\n  $boredoms = 0;\n  foreach ($str_arr as $val) {\n  \
    \  if (strtolower($val) == \"i\") {\n      $boredoms += 1;\n    }\n  }\n  return\
    \ $boredoms;\n}", "    $count = 0;\n    $arr = explode(' ', $S);\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == 'I') {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}", "    return preg_match_all('/^I/m',\
    \ $S);\n}\n", "    $boredoms = 0;\n    $sentences = preg_split('/[.?!]/', $S);\n\
    \    foreach ($sentences as $sentence) {\n        if (strpos($sentence, 'I') ===\
    \ 0) {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}",
  "  $S = explode(\" \", $S);\n  for ($i = 0; $i < count($S); $i++) {\n    if (strtolower($S[$i])\
    \ == \"i\") {\n      $i++;\n      if (strtolower($S[$i]) == \"am\") {\n      \
    \  $i++;\n        if (strtolower($S[$i]) == \"bored\") {\n          $bored++;\n\
    \        }\n      }\n    }\n  }\n  return $bored;\n}\n\necho is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather\");\necho \"\\n\";\n", "  $boredoms\
    \ = 0;\n  $sentences = explode(['.', '?', '!'], $S);\n  foreach ($sentences as\
    \ $sentence) {\n    if (preg_match('/^\\s*I\\s/', $sentence)) {\n      $boredoms++;\n\
    \    }\n  }\n  return $boredoms;\n}", "    return substr_count($S, \"I\");\n}\n\
    \nprint(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));", "    $i = 0;\n    $S = preg_split('/[!?.]/', $S);\n    foreach ($S as $s)\
    \ {\n        if (strtolower(substr($s, 0, 1)) == 'i') $i++;\n    }\n    return\
    \ $i;\n}", "\t$sentences = explode('.', $S);\n\t$i = 0;\n\tforeach ($sentences\
    \ as $sentence) {\n\t\tif (preg_match('/^\\s*I/', $sentence)) $i++;\n\t}\n\treturn\
    \ $i;\n}\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ) . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining.\") . \"\\n\"\
    ;\necho is_bored(\"I'm bored.\") . \"\\n\";\n", "    // initialize a count variable\
    \ to keep track of the boredom\n    $count = 0;\n    // split the input string\
    \ into an array of words\n    $words = explode(\" \", $S);\n    // loop through\
    \ each word\n    foreach ($words as $w) {\n        // if the word is \"I\", increment\
    \ the count\n        if ($w == \"I\") $count++;\n    }\n    // return the count\n\
    \    return $count;\n}\necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . \"\\n\";\n", " \
    \   $boredoms = preg_split('/(\\.|\\?|\\!)/', $S, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    $nb_boredoms = 0;\n    foreach ($boredoms as $boredom) {\n        if (preg_match('/^\\\
    s*I\\s/', $boredom)) {\n            $nb_boredoms++;\n        }\n    }\n    return\
    \ $nb_boredoms;\n}\n\necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . \"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather.\") . \"\\n\";\necho\
    \ is_bored(\"The sky is blue. The sun is shining. I love this weather. I love\
    \ this weather.\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining.\"\
    ) . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining! I love this\
    \ weather?\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining!\
    \ I love this weather? I love this weather?\") . \"\\n\";\necho is_bored(\"The\
    \ sky is blue. The sun is shining! I love this weather! I love this weather?\"\
    ) . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining! I love this\
    \ weather! I love this weather!\") . \"\\n\";\necho is_bored(\"The sky is blue.\
    \ The sun is shining! I love this weather! I love this weather! I love this weather!\
    \ I love this weather!\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun\
    \ is shining! I love this weather? I love this weather! I love this weather?\"\
    ) . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining! I love this\
    \ weather? I love this weather! I love this weather! I love this weather?\") .\
    \ \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining! I love this weather?\
    \ I love this weather! I love this weather", "    $arr = explode(\" \", $S);\n\
    \    $result = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i]\
    \ == \"I\") {\n            $result++;\n        }\n    }\n    return $result;\n\
    }", "    $sentences = explode(array('.', '?', '!'), $S);\n    $boredoms = 0;\n\
    \    foreach ($sentences as $sentence) {\n        if (strpos($sentence, 'I') ===\
    \ 0) {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\
    \necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\") . \"\\n\";", "  $sentences = preg_split('/(!|\\\
    .|\\?)/', $S);\n  $count = 0;\n  foreach ($sentences as $sentence) {\n    if (strpos($sentence,\
    \ 'I') === 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\necho is_bored(\"\
    Hello world\");\necho \"<br>\";\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");", "    $sentences = explode('.', $S);\n    $boredoms\
    \ = 0;\n    foreach ($sentences as $sentence) {\n        $words = explode(' ',\
    \ $sentence);\n        if ($words[0] == 'I') $boredoms++;\n    }\n    return $boredoms;\n\
    }\n\nprint_r(is_bored(\"Hello world\"));", "    //deklarasi counter\n    $counter\
    \ = 0;\n    //jika $S adalah string maka lanjutkan dengan membuat array di setiap\
    \ karakter ., !, ?\n    if (is_string($S)) {\n        $arr_S = explode(\".\",\
    \ $S);\n        $arr_S2 = explode(\"!\", $S);\n        $arr_S3 = explode(\"?\"\
    , $S);\n        //mengambil panjang array\n        $arr_S_length = count($arr_S);\n\
    \        $arr_S2_length = count($arr_S2);\n        $arr_S3_length = count($arr_S3);\n\
    \        //jika panjang array lebih besar dari 1 maka mulai looping\n        if\
    \ ($arr_S_length > 1) {\n            //looping array\n            for ($i = 0;\
    \ $i < $arr_S_length; $i++) {\n                //mengambil kata pertama\n    \
    \            $first_word = substr($arr_S[$i], 0, 1);\n                //jika kata\
    \ pertama sama dengan \"I\" maka tambahkan counter\n                if ($first_word\
    \ == \"I\") {\n                    $counter++;\n                }\n          \
    \  }\n        }\n        if ($arr_S2_length > 1) {\n            for ($i = 0; $i\
    \ < $arr_S2_length; $i++) {\n                $first_word = substr($arr_S2[$i],\
    \ 0, 1);\n                if ($first_word == \"I\") {\n                    $counter++;\n\
    \                }\n            }\n        }\n        if ($arr_S3_length > 1)\
    \ {\n            for ($i = 0; $i < $arr_S3_length; $i++) {\n                $first_word\
    \ = substr($arr_S3[$i], 0, 1);\n                if ($first_word == \"I\") {\n\
    \                    $counter++;\n                }\n            }\n        }\n\
    \    }\n    return $counter;\n}\necho is_bored(\"Hello world\");\necho \"<br>\"\
    ;\necho is_bored(\"The sky is blue", "  return preg_match_all('/^I/m', $S);\n\
    }\n", "    $S_array = explode(\" \", $S);\n    $n = 0;\n    for ($i = 0; $i <\
    \ count($S_array); $i++) {\n        if ($S_array[$i] == \"I\") {\n           \
    \ $n += 1;\n        }\n    }\n    return $n;\n}\n", "    // Break sentence into\
    \ sentence pieces.\n    $sentences = preg_split('/(?<=[.?!])\\s+/', $S, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    $boredoms = 0;\n    foreach ($sentences as $sentence) {\n        if (strtolower(substr($sentence,\
    \ 0, 1)) == 'i') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\n", "    $S = explode(' ', $S);\n    if (strtolower($S[0]) == 'i') return 1;\n\
    \    else return 0;\n}\necho is_bored(\"The sky is blue. The sun is shining. I\
    \ love this weather\")", "    $counter = 0;\n    $words = explode(\" \", $S);\n\
    \    foreach ($words as $word) {\n        if (strlen($word) == 1 && $word == \"\
    I\") {\n            $counter++;\n        }\n    }\n    return $counter;\n}\n",
  "    // Let us consider the following cases:\n    // 1) Sentence starts with a capital\
    \ letter (\"I like...\")\n    // 2) Sentence starts with an uppercase \"I\"\n\
    \    // 3) Sentence starts with a lowercase \"i\"\n    // 4) Sentence starts with\
    \ a capital \"I\" followed by a period\n    // 5) Sentence starts with a lowercase\
    \ \"i\" followed by a period\n    // 6) Sentence starts with a capital \"I\" followed\
    \ by a question mark\n    // 7) Sentence starts with a lowercase \"i\" followed\
    \ by a question mark\n    // 8) Sentence starts with a capital \"I\" followed\
    \ by an exclamation mark\n    // 9) Sentence starts with a lowercase \"i\" followed\
    \ by an exclamation mark\n    $cases = array(\n        \"#^I #\",\n        \"\
    #^I\\?#\",\n        \"#^I\\!#\",\n        \"#^I\\.#\",\n        \"#^i #\",\n \
    \       \"#^i\\?#\",\n        \"#^i\\!#\",\n        \"#^i\\.#\"\n    );\n    $count\
    \ = 0;\n    foreach ($cases as $case) {\n        $count += preg_match_all($case,\
    \ $S);\n    }\n    return $count;\n}\n", "    $sentences = preg_split('/(?<=[.?!])\\\
    s*/', $S, -1, PREG_SPLIT_NO_EMPTY);\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        if ($sentence[0] == 'I') {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\n", "  $count = 0;\n  $arr = explode(\"\
    \ \", $S);\n  for ($i = 0; $i < count($arr); $i++) {\n    if ($arr[$i] == \"I\"\
    ) {\n      $count++;\n    }\n  }\n  return $count;\n}", "    $sentences = preg_split('/[.?!]/',\
    \ $S);\n    $boredoms = 0;\n    foreach ($sentences as $s) {\n        if ($s[0]\
    \ == 'I') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }", "\tif(count(explode(\".\", $S))>0){\n\t\t$string = explode(\".\", $S);\n\t\
    }\n\tif(count(explode(\"?\", $S))>0){\n\t\t$string = explode(\"?\", $S);\n\t}\n\
    \tif(count(explode(\"!\", $S))>0){\n\t\t$string = explode(\"!\", $S);\n\t}\n\t\
    if(count(explode(\".\", $S))<1 && count(explode(\"?\", $S))<1 && count(explode(\"\
    !\", $S))<1){\n\t\t$string = array($S);\n\t}\n\t$boredom = 0;\n\tforeach($string\
    \ as $s){\n\t\tif(substr($s, 0, 1)==\"I\"){\n\t\t\t$boredom = $boredom + 1;\n\t\
    \t}\n\t}\n\treturn $boredom;\n}", "    $words = explode(' ', str_replace(['.',\
    \ '?', '!'], ' ', $S));\n    $i_words = array_filter($words, function($w) {\n\
    \        return preg_match('/^I\\b/', $w);\n    });\n    return count($i_words);\n\
    }\n", "    $S = explode(' ', $S);\n    $s = '';\n    foreach ($S as $s) {\n  \
    \      if ($s == 'I') return 1;\n    }\n    return 0;\n}\n\n$S = \"The sky is\
    \ blue. The sun is shining. I love this weather\";\n\necho is_bored($S);", "\t\
    // Remove everything from the first '!' to the end\n\t$S = substr($S, 0, strpos($S,\
    \ '!'));\n\t// Split the string by '. '\n\t$split = explode('. ', $S);\n\t// Remove\
    \ everything from the first '?' to the end\n\t$split[count($split) - 1] = substr($split[count($split)\
    \ - 1], 0, strpos($split[count($split) - 1], '?'));\n\t// Count the number of\
    \ substrings beginning with 'I'\n\t$count = 0;\n\tforeach ($split as $s) {\n\t\
    \tif (strlen($s) == 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (substr($s, 0, 1) ==\
    \ 'I') {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $sentences =\
    \ preg_split('/[.?!]/', $S);\n    $count = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (preg_match('/^I/', $sentence)) {\n            $count++;\n   \
    \     }\n    }\n    return $count;\n}", "\t$boredoms = 0;\n\t$sentences = explode('.\
    \ ', $S);\n\tforeach ($sentences as $sentence) {\n\t\t$words = explode(' ', $sentence);\n\
    \t\tif ($words[0] == 'I') {\n\t\t\t$boredoms++;\n\t\t}\n\t}\n\treturn $boredoms;\n\
    }", "    $S = preg_split('/[?.!]/', $S);\n    $count = 0;\n    foreach ($S as\
    \ $sentence) {\n        $word = explode(' ', $sentence);\n        if (strtolower($word[0])\
    \ == 'i') {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    $answer = is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );\necho \"$answer\\n\";", "    $sentences = explode('. ', $S);\n    return count(array_filter($sentences,\
    \ function($sentence) {\n        $word = explode(' ', $sentence);\n        return\
    \ strtolower($word[0]) == 'i';\n    }));\n}\n\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\");", "  \n  $arr = explode(' ', $S);\n\
    \  $boredoms = 0;\n  foreach ($arr as $word) {\n    if ($word == 'I') {\n    \
    \  $boredoms++;\n    }\n  }\n  return $boredoms;\n}\n\nvar_dump(is_bored(\"The\
    \ sky is blue. The sun is shining. I love this weather\"));", "    $sentences\
    \ = explode('.', $S);\n    $res = 0;\n    foreach ($sentences as $s) {\n     \
    \   $s = trim($s);\n        if ($s) {\n            $first_word = explode(' ',\
    \ $s)[0];\n            if ($first_word == 'I') $res++;\n        }\n    }\n   \
    \ return $res;\n}\n", "  $n = 0;\n  foreach (explode('.', $S) as $s) {\n    $n\
    \ += strpos($s, 'I') === 0;\n  }\n  return $n;\n}\necho is_bored(\"Hello world\"\
    ) . PHP_EOL;\necho is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\") . PHP_EOL;", "\tif (empty($S)) {\n\t\treturn 0;\n\t}\n\n\t$sentences\
    \ = explode('.', $S);\n\t$boredoms = 0;\n\tforeach ($sentences as $sentence) {\n\
    \t\t$sentence = explode(' ', $sentence);\n\t\tif ($sentence[0] == 'I') {\n\t\t\
    \t$boredoms++;\n\t\t}\n\t}\n\n\treturn $boredoms;\n}\n\necho is_bored('Hello world');\n\
    echo \"\\n\";\necho is_bored('The sky is blue. The sun is shining. I love this\
    \ weather');\necho \"\\n\";", "  return substr_count($S, \"I\");\n}", "\t$count\
    \ = 0;\n\t$sentences = preg_split('/[?!.]/', $S);\n\tforeach ($sentences as $sentence)\
    \ {\n\t\tif (substr($sentence, 0, 1) == 'I') $count++;\n\t}\n\treturn $count;\n\
    }\n", "    $count = 0;\n    $S = explode(' ', $S);\n    foreach ($S as $word)\
    \ {\n        if ($word == 'I') {\n            $count++;\n        }\n    }\n  \
    \  return $count;\n}\n", "\t$S = explode(' ', $S);\n\t$L = count($S);\n\t$n =\
    \ 0;\n\tfor ($i = 0; $i < $L; $i++) {\n\t\tif ($S[$i] == 'I') {\n\t\t\t$n++;\n\
    \t\t}\n\t}\n\treturn $n;\n}\n", "  $arr = explode(' ', $S);\n  $count = 0;\n \
    \ for ($i = 0; $i < count($arr); $i++) {\n    if ($arr[$i] == 'I') {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n", "    $boredoms = 0;\n    $split_sentences\
    \ = explode(\". \", $S);\n    foreach ($split_sentences as $sentence) {\n    \
    \    $first_word = strtok($sentence, \" \");\n        if ($first_word == \"I\"\
    ) {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\n\
    echo is_bored(\"Hello world\");\necho \"\\n\";\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\");\necho \"\\n\";", "    $num_boredoms\
    \ = 0;\n    $sentences = explode('.', $S);\n    foreach ($sentences as $sentence)\
    \ {\n        if (strlen($sentence) > 1) {\n            $words = explode(' ', $sentence);\n\
    \            if ($words[0] == 'I') {\n                $num_boredoms++;\n     \
    \       }\n        }\n    }\n    return $num_boredoms;\n}\n\necho is_bored(\"\
    Hello world\");\necho is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\");\n", "  $A = array_filter(explode(\" \", $S));\n  $N = array_reduce($A,\
    \ function($r, $e) {\n    if ($e == \"I\") $r++;\n    return $r;\n  }, 0);\n \
    \ return $N;\n}\n", "    $S = explode('.', $S);\n    $n = 0;\n    foreach ($S\
    \ as $s) {\n        if (0 === strpos($s, 'I')) {\n            $n++;\n        }\n\
    \    }\n    return $n;\n}", "    $S = str_replace(array('.', '?', '!'), '.', $S);\n\
    \    $S = explode('.', $S);\n    $boredoms = 0;\n    foreach ($S as $s) {\n  \
    \      if (strpos($s, 'I') === 0) {\n            $boredoms++;\n        }\n   \
    \ }\n    return $boredoms;\n}\n", "    $boredoms = 0;\n    $sentences = explode(\"\
    . \", $S);\n    foreach ($sentences as $sentence) {\n        $words = explode(\"\
    \ \", $sentence);\n        if ($words[0] == \"I\") {\n            $boredoms +=\
    \ 1;\n        }\n    }\n    return $boredoms;\n}", "  $boredoms = 0;\n  $sentences\
    \ = preg_split('/[.?!]/', $S);\n  foreach ($sentences as $sentence) {\n    if\
    \ (trim($sentence) == \"I\") {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n\
    }", "    $S = preg_split('/[.!?]/', $S);\n    $c = 0;\n    foreach ($S as $s)\
    \ {\n        if (substr($s, 0, 2) == 'I ') {\n            $c++;\n        }\n \
    \   }\n    return $c;\n}\n\n$fptr = fopen(getenv(\"OUTPUT_PATH\"), \"w\");\n\n\
    $__fp = fopen(\"php://stdin\", \"r\");\n\nfscanf($__fp, \"%d\\n\", $t);\n\nfor\
    \ ($t_itr = 0; $t_itr < $t; $t_itr++) {\n    $S = '';\n    fscanf($__fp, \"%[^\\\
    n]\", $S);\n\n    $result = is_bored($S);\n\n    fwrite($fptr, $result . \"\\\
    n\");\n}\n\nfclose($__fp);\nfclose($fptr);", "\t$sentences = explode(array('.',\
    \ '?', '!'), $S);\n\t$boredoms = 0;\n\tforeach ($sentences as $sentence) {\n\t\
    \tif (stripos($sentence, 'I') === 0) {\n\t\t\t$boredoms++;\n\t\t}\n\t}\n\treturn\
    \ $boredoms;\n}", "  $boredoms = 0;\n  $sentences = explode(\". \", $S);\n  foreach\
    \ ($sentences as $sentence) {\n    $words = explode(\" \", $sentence);\n    if\
    \ ($words[0] == \"I\") {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n\
    }", "    $arr = explode(' ', $S);\n    $count = 0;\n    foreach ($arr as $str)\
    \ {\n        if ($str == 'I') {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\n", "    return count(explode('I', $S)) - 1;\n}\n\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");", "\t$n = 0;\n\t\
    $sentences = explode('. ', $S);\n\tforeach ($sentences as $sentence) {\n\t\tif\
    \ (preg_match('/^I/', $sentence)) {\n\t\t\t$n++;\n\t\t}\n\t}\n\treturn $n;\n}\n\
    echo is_bored(\"The sky is blue. The sun is shining. I love this weather\") .\
    \ \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining.\") . \"\\n\"\
    ;\necho is_bored(\"The sky is blue. The sun is shining! I love this weather.\"\
    ) . \"\\n\";\necho is_bored(\"The sky is blue? The sun is shining. I love this\
    \ weather.\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather!\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather? The sky is blue. The sun is shining. I love\
    \ this weather!\") . \"\\n\";", "  $count = 0;\n  $words = explode(\" \", $S);\n\
    \  for ($i = 0; $i < count($words); $i++) {\n    if ($words[$i] == \"I\") {\n\
    \      $count += 1;\n    }\n  }\n  return $count;\n}", "\t$count = 0;\n\t$S =\
    \ explode(\" \", $S);\n\tforeach ($S as $key => $value) {\n\t\tif ($value ===\
    \ \"I\") {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");", "  $boring_sentences\
    \ = 0;\n  $sentences = explode('. ', $S);\n  foreach ($sentences as $sentence)\
    \ {\n    if (substr($sentence, 0, 2) == 'I ') {\n      $boring_sentences++;\n\
    \    }\n  }\n  return $boring_sentences;\n}\n\n$S = \"Hello world\";\necho is_bored($S);\n\
    echo \"\\n\";\n$S = \"The sky is blue. The sun is shining. I love this weather\"\
    ;\necho is_bored($S);", "    $boredoms = 0;\n    $sentences = explode(\". \",\
    \ $S);\n    foreach ($sentences as $sentence) {\n        $words = explode(\" \"\
    , $sentence);\n        if ($words[0] == \"I\") {\n            $boredoms++;\n \
    \       }\n    }\n    return $boredoms;\n}", "  $arr = explode(\" \", $S);\n \
    \ $count = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    if ($arr[$i] == \"\
    I\") {\n      $count++;\n    }\n  }\n  return $count;\n}\n", "    $S = explode('\
    \ ', $S);\n    $i = 0;\n    foreach ($S as $word) {\n        if ($word == 'I')\
    \ {\n            $i++;\n        }\n    }\n    return $i;\n}\n", "  $boredoms =\
    \ preg_split('/[.?!]/', $S);\n  $num_boredoms = 0;\n  foreach ($boredoms as $boredom)\
    \ {\n    if (strpos($boredom, 'I') === 0) {\n      $num_boredoms++;\n    }\n \
    \ }\n  return $num_boredoms;\n}", "  $a = preg_split('/[.?!]/', $S);\n  $r = 0;\n\
    \  foreach ($a as $v) {\n    if (substr($v, 0, 1) == 'I') {\n      $r++;\n   \
    \ }\n  }\n  return $r;\n}", "  $sentences = preg_split('/(?<=[.?!])\\s+/', $S,\
    \ -1, PREG_SPLIT_NO_EMPTY);\n  $count = 0;\n  foreach ($sentences as $sentence)\
    \ {\n    if (preg_match('/^i/i', $sentence)) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}", "    $arr = explode(' ', $S);\n    $ctr = 0;\n    foreach\
    \ ($arr as $word) {\n        if ($word == 'I') {\n            $ctr++;\n      \
    \  }\n    }\n    return $ctr;\n}\n\nif (!defined('__TEST__')) {\n    echo \"is_bored('Hello\
    \ world') = \" . is_bored('Hello world') . \"\\n\";\n    echo \"is_bored('The\
    \ sky is blue. The sun is shining. I love this weather') = \" . is_bored('The\
    \ sky is blue. The sun is shining. I love this weather') . \"\\n\";\n}", "   \
    \ $isBored = 0;\n    $sentences = explode('.! ?', $S);\n    foreach ($sentences\
    \ as $sentence) {\n        if (strpos($sentence, 'I') === 0) {\n            $isBored++;\n\
    \        }\n    }\n    return $isBored;\n}\n\n$S = 'I am not bored! But I am.';\n\
    var_dump(is_bored($S));", "    $arr = explode(\" \", $S);\n    $count = 0;\n \
    \   foreach ($arr as $word) {\n        if ($word == \"I\") {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "  $sentences = explode('.', $S);\n\
    \  foreach ($sentences as $sentence) {\n    $sentence = trim($sentence);\n   \
    \ if (strpos($sentence, 'I') === 0) {\n      return 1;\n    }\n  }\n  return 0;\n\
    }\n\n$tests = array(\n    'Hello world' => 0,\n    'The sky is blue. The sun is\
    \ shining. I love this weather' => 1,\n    'The sky is blue. The sun is shining.\
    \ I love this weather. My dog is so cute!' => 1,\n    'I love this weather. My\
    \ dog is so cute!' => 1,\n    'My dog is so cute!' => 0,\n    'I love this weather'\
    \ => 1,\n    'I am so bored!' => 1,\n    'I.am.so.bored!' => 1,\n    'Are you\
    \ bored?' => 0,\n    'Are you? Bored.' => 0,\n    'Are.you? Bored.' => 0,\n  \
    \  'Are.you? Bored.I am so bored!' => 1,\n    'Are.you? Bored. I am so bored!'\
    \ => 1,\n    'Are.you? Bored. I am so bored! You are bored' => 1,\n    'Are.you?\
    \ Bored. I am so bored! You are bored.' => 1,\n    'Are.you? Bored. I am so bored!\
    \ You are bored. How are you?' => 1,\n    'Are.you? Bored. I am so bored! You\
    \ are bored. How are you? Yes! I am bored.' => 2,\n    'Are.you? Bored. I am so\
    \ bored! You are bored. How are you? Yes! I am bored. I am bored. How are you?'\
    \ => 3,\n    'I, am, so, bored!' => 1,\n    'Iamsobored!' => 1,\n    'I.amsobored!'\
    \ => 1,\n    'I am so bored.' => 1,\n    'I am so bored, how about you?' => 1,\n\
    \    'I am so bored, how about you?' => 1,\n    'I am so bored, how about you?\
    \ I am bored.' =>", "    // Write your code here\n\n    return $is_bored;\n}\n",
  "\t// Split the string by '. ', '? ', '! '\n\t$words = explode('. ', $S);\n\t$count\
    \ = 0;\n\t// Loop through each sentence\n\tforeach ($words as $word) {\n\t\t//\
    \ If the sentence starts with 'I', increment the counter\n\t\tif (strpos($word,\
    \ 'I') === 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "\t// your\
    \ code goes here\n}\n", "    // your code here\n    $boredom = 0;\n    $sentences\
    \ = explode(\".\", $S);\n    foreach ($sentences as $sentence) {\n        $words\
    \ = explode(\" \", $sentence);\n        foreach ($words as $word) {\n        \
    \    if (strtolower($word) == \"i\") {\n                $boredom += 1;\n     \
    \           break;\n            }\n        }\n    }\n    return $boredom;\n}\n",
  "\t$c = 0;\n\t$sentences = explode(\". \", $S);\n\tforeach ($sentences as $s) {\n\
    \t\tif (strpos($s, \"I\") === 0) {\n\t\t\t$c++;\n\t\t}\n\t}\n\treturn $c;\n}\n\
    echo(is_bored(\"I am bored. I am excited. I love icecream.\").\"\\n\");\necho(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather.\").\"\\n\");\necho(is_bored(\"\
    Hello world\").\"\\n\");\n", "    return count(explode('I', $S));\n}\n", "  $S\
    \ = trim($S);\n  $S = preg_replace('/[.?!]/', '~', $S);\n  $array = explode('~',\
    \ $S);\n  $count = 0;\n  foreach ($array as $value) {\n    if (strpos($value,\
    \ 'I') === 0) $count++;\n  }\n  return $count;\n}", "    $arr = explode(' ', $S);\n\
    \    $result = 0;\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ == 'I') {\n            $result++;\n        }\n    }\n    return $result;\n}",
  "  $sentences = explode(['.', '?', '!'], $S);\n  $boredoms = 0;\n  foreach ($sentences\
    \ as $s) {\n    $words = explode(' ', $s);\n    if ($words[0] == 'I') {\n    \
    \  $boredoms++;\n    }\n  }\n  return $boredoms;\n}\n", "  $count = 0;\n  $sentences\
    \ = explode(\". \", $S);\n  foreach ($sentences as $sen) {\n    if (strpos($sen,\
    \ \"I\") === 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\").\"\\n\";", "    return\
    \ substr_count($S, 'I');\n}\n", "    $S = explode(' ', $S);\n    $count = 0;\n\
    \    for ($i = 0; $i < count($S); $i++) {\n        if ($S[$i] == 'I') {\n    \
    \        $count++;\n        }\n    }\n    return $count;\n}", "\t$boredom = 0;\n\
    \t$str = str_replace(array('!', '?', '.'), \"!\", $S);\n\t$strArr = explode(\"\
    !\", $str);\n\tforeach ($strArr as $key => $value) {\n\t\tif(substr($value, 0,\
    \ 2) == \"I \")\n\t\t\t$boredom++;\n\t}\n\treturn $boredom;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather!\");", "  $boredoms =\
    \ 0;\n  $sentences = explode(\". \", $S);\n  $sentences = array_map('trim', $sentences);\n\
    \  foreach ($sentences as $sentence) {\n    if (substr($sentence, 0, 2) == \"\
    I \") $boredoms++;\n  }\n  return $boredoms;\n}\necho is_bored(\"I am bored. I\
    \ am lonely. I am bored.\");", "    // your code here\n}", "    $words = explode('\
    \ ', $S);\n    $boredom_count = 0;\n    foreach ($words as $word) {\n        if\
    \ ($word == 'I') {\n            $boredom_count++;\n        }\n    }\n    return\
    \ $boredom_count;\n}", "  $S = explode('.', $S);\n  $S = array_filter($S);\n \
    \ $S = array_values($S);\n  $count = 0;\n  for ($i = 0; $i < count($S); $i++)\
    \ {\n    $s = explode(' ', $S[$i]);\n    if ($s[0] == 'I') {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}", "    return preg_match_all('/I[^\\.]/', $S);\n\
    }\n", "  // Fill this in.\n}\n\nassert(is_bored(\"Hello world\") == 0);\nassert(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") == 1);\n```\n", " \
    \ $array = explode(\" \", $S);\n  $count = 0;\n  for ($i = 0; $i < count($array);\
    \ $i++) {\n    if ($array[$i] == \"I\") {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}", "    $boredoms = 0;\n    $sentences = explode('. ', $S);\n    foreach\
    \ ($sentences as $sentence) {\n        $sentence = explode('! ', $sentence);\n\
    \        foreach ($sentence as $sub_sentence) {\n            $sentence = explode('?\
    \ ', $sub_sentence);\n            foreach ($sentence as $final_sentence) {\n \
    \               if (startsWith($final_sentence, 'I')) {\n                    $boredoms++;\n\
    \                }\n            }\n        }\n    }\n    return $boredoms;\n}\n",
  "    $S = explode('.', $S);\n    $S = implode('.', $S);\n    $S = explode('?', $S);\n\
    \    $S = implode('?', $S);\n    $S = explode('!', $S);\n    $S = implode('!',\
    \ $S);\n    $S = explode(' ', $S);\n    $boredom = 0;\n    foreach ($S as $k =>\
    \ $v) {\n        if (strpos($v, 'I') === 0) {\n            $boredom++;\n     \
    \   }\n    }\n    return $boredom;\n}\n", "    $S = explode(' ', $S);\n    $count\
    \ = 0;\n    foreach ($S as $v) {\n        if ($v == 'I') {\n            $count\
    \ += 1;\n        }\n    }\n    return $count;\n}", "    return substr_count($S,\
    \ \"I\");\n}", "    $punctuation = array(\".\", \"?\", \"!\");\n    $words = explode(\"\
    \ \", $S);\n    foreach ($words as $word) {\n        if (strcasecmp($word, \"\
    I\") == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}", "  $s\
    \ = explode('.', $S);\n  $n = 0;\n  foreach ($s as $t) {\n    if (strtoupper(substr($t,\
    \ 0, 1)) == 'I') {\n      $n++;\n    }\n  }\n  return $n;\n}\n", "\t$words = explode(\"\
    \ \",$S);\n\t$output = 0;\n\tforeach ($words as $word) {\n\t\tif ($word[0] ==\
    \ \"I\") {\n\t\t\t$output++;\n\t\t}\n\t}\n\treturn $output;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . PHP_EOL;", "   \
    \ return (int) strrpos($S, 'I');\n}\n\n$S = \"The sky is blue. The sun is shining.\
    \ I love this weather\";\n\necho is_bored($S);\n", "\t$aSentences = explode('.',\
    \ $S);\n\t$nCount = 0;\n\tforeach ($aSentences as $sSentence) {\n\t\t$aWords =\
    \ explode(' ', $sSentence);\n\t\tif ($aWords[0] == 'I') {\n\t\t\t$nCount++;\n\t\
    \t}\n\t}\n\treturn $nCount;\n}\n\necho '<pre>';\necho is_bored(\"Hello world\"\
    ); // 0\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ); // 1\necho '</pre>';", "  $s = explode(' ', $S);\n  $c = 0;\n  foreach ($s\
    \ as $k) {\n    if ($k == 'I') {\n      $c++;\n    }\n  }\n  return $c;\n}\necho\
    \ is_bored(\"The sky is blue. The sun is shining. I love this weather\");", " \
    \   $array = explode(' ', $S);\n    $result = 0;\n    for ($i = 0; $i < count($array);\
    \ $i++) {\n        if ($array[$i] == 'I') {\n            $result++;\n        }\n\
    \    }\n    return $result;\n}\n\n$S = \"The sky is blue. The sun is shining.\
    \ I love this weather\";\necho is_bored($S);", "    // Let's split the string\
    \ into sentences\n    $sentences = preg_split('/[.?!]/', $S);\n    $count = 0;\n\
    \    foreach ($sentences as $sentence) {\n        // And then check if the sentence\
    \ starts with 'I'\n        if (preg_match('/^I /', $sentence)) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\n$tests = [\n    \"Hello\
    \ world\" => 0,\n    \"The sky is blue. The sun is shining. I love this weather\"\
    \ => 1,\n    \"The sky is blue. The sun is shining. I love this weather! Isn't\
    \ it great?\" => 2,\n    \"The sky is blue. The sun is shining. I love this weather.\"\
    \ => 1,\n    \"The sky is blue. The sun is shining. I love this weather.\" =>\
    \ 1,\n    \"The sky is blue. The sun is shining. I love this weather. I love this\
    \ weather.\" => 2,\n    \"The sky is blue. The sun is shining. I love this weather.\
    \ I love this weather. Is it me you're looking for?\" => 3,\n    \"The sky is\
    \ blue. The sun is shining. I love this weather. I love this weather. Is it me\
    \ you're looking for? I don't know why you say goodbye, I say hello\" => 4,\n\
    \    \"The sky is blue. The sun is shining. I love this weather. I love this weather.\
    \ Is it me you're looking for? I don't know why you say goodbye, I say hello\"\
    \ => 4,\n    \"I'm sorry, I'm so sorry, it's my fault. I put my arms around you,\
    \ but you pushed them away\" => 1,\n    \"I'm sorry, I'm so sorry, it's my fault.\
    \ I put my arms around you, but you pushed them away. I'm sorry, I'm so sorry,\
    \ who would have known?\" => 2,\n    \"I'm sorry, I'm so sorry, it's my fault.\
    \ I put my arms around you, but you pushed them away. I'm sorry, I'm so sorry,\
    \ who would have known? I miss you more than I did yesterday, but less than I\
    \ will tomorrow\" => 3,\n    \"I'm sorry, I", "  $words = explode(' ', $S);\n\
    \  $boredoms = 0;\n  foreach ($words as $word) {\n    if ($word == 'I') {\n  \
    \    $boredoms++;\n    }\n  }\n  return $boredoms;\n}\n\necho is_bored(\"Hello\
    \ world\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining. I\
    \ love this weather\");", "  $arr = explode(\" \", $S);\n  $count = 0;\n  foreach\
    \ ($arr as $str) {\n    if ($str == \"I\") {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}", "  $a = explode(\" \",$S);\n  $count = 0;\n  foreach ($a as $w)\
    \ {\n    if (strtolower($w) == \"i\") {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}", "  $arr = explode(' ', $S);\n  $c = 0;\n  foreach ($arr as $v)\
    \ {\n    if (strtolower($v) == 'i') $c++;\n  }\n  return $c;\n}\n$input = explode(\"\
    \\n\", file_get_contents('php://stdin'));\nforeach ($input as $line) {\n  echo\
    \ is_bored($line) . \"\\n\";\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_108_count_nums
language: php
results:
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $digits = 0;\n\
    \    if ($arr[$i] < 0) {\n      $digits += abs($arr[$i] % 10);\n      $arr[$i]\
    \ = abs($arr[$i]);\n    }\n    while ($arr[$i] > 0) {\n      $digits += $arr[$i]\
    \ % 10;\n      $arr[$i] = floor($arr[$i] / 10);\n    }\n    if ($digits > 0) $count++;\n\
    \  }\n  return $count;\n}\n\necho count_nums([]) . \"\\n\"; // 0\necho count_nums([-1,\
    \ 11, -11]) . \"\\n\"; // 1\necho count_nums([1, 1, 2]) . \"\\n\"; // 3\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplhgy6iv1.php:36\n\
    Stack trace:\n#0 /tmp/tmplhgy6iv1.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplhgy6iv1.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // TODO\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbb_sa42.php:17\n\
    Stack trace:\n#0 /tmp/tmprbb_sa42.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprbb_sa42.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $arrNums = array_filter($arr, function($n) {\n    return ($n > 0) || ($n\
    \ < 0 && abs($n) > 0);\n  });\n  return count($arrNums);\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm457rntt.php:21\n\
    Stack trace:\n#0 /tmp/tmpm457rntt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpm457rntt.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // $sum = 0;\n    // for ($i = 0; $i < count($arr); $i++) {\n    // \
    \    if ($arr[$i] < 0) {\n    //         $sum += $arr[$i] * -1;\n    //     }\
    \ else {\n    //         $sum += $arr[$i];\n    //     }\n    // }\n    // return\
    \ $sum;\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n       \
    \ $sum = 0;\n        if ($arr[$i] < 0) {\n            $digits = str_split($arr[$i]\
    \ * -1);\n        } else {\n            $digits = str_split($arr[$i]);\n     \
    \   }\n        for ($j = 0; $j < count($digits); $j++) {\n            $sum +=\
    \ $digits[$j];\n        }\n        if ($sum > 0) {\n            $count++;\n  \
    \      }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprb7gor3s.php:42\n\
    Stack trace:\n#0 /tmp/tmprb7gor3s.php(51): test()\n#1 {main}\n  thrown in /tmp/tmprb7gor3s.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tforeach ($arr as $key => $value) {\n\t\t$sum = 0;\n\t\t\
    $signed = $value;\n\t\tif ($value < 0) {\n\t\t\t$signed = $value * -1;\n\t\t}\n\
    \t\tdo {\n\t\t\t$last_digit = $signed % 10;\n\t\t\t$sum += $last_digit;\n\t\t\t\
    $signed = floor($signed / 10);\n\t\t} while ($signed >= 1);\n\t\tif ($sum > 0)\
    \ {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdbrk3p5.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdbrk3p5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjdbrk3p5.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  // your code here\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2arc6_zo.php:17\n\
    Stack trace:\n#0 /tmp/tmp2arc6_zo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2arc6_zo.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $count += sum_of_digits($num)\
    \ > 0 ? 1 : 0;\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmpnquwjo0_.php:12\nStack trace:\n#0 /tmp/tmpnquwjo0_.php(18): count_nums(Array)\n\
    #1 /tmp/tmpnquwjo0_.php(23): candidate(Array)\n#2 /tmp/tmpnquwjo0_.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnquwjo0_.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    if (empty($arr)) {\n        return 0;\n    }\n    $result = 0;\n    foreach\
    \ ($arr as $num) {\n        $sum = array_sum(array_map(function($value) {\n  \
    \          return abs($value);\n        }, str_split($num)));\n        if ($sum\
    \ > 0) {\n            $result++;\n        }\n    }\n    return $result;\n}\n\n\
    echo '<pre>';\nvar_dump(count_nums([]));\nvar_dump(count_nums([-1, 11, -11]));\n\
    var_dump(count_nums([1, 1, 2]));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>int(0)\nint(3)\nint(3)\n</pre>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp9b4konbs.php:36\nStack trace:\n#0 /tmp/tmp9b4konbs.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9b4konbs.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  return 0;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcjfl88ek.php:20\n\
    Stack trace:\n#0 /tmp/tmpcjfl88ek.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcjfl88ek.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $number) {\n        $sum = 0;\n   \
    \     if ($number < 0) {\n            $sum += $number * -1 % 10;\n           \
    \ $number = $number * -1;\n        }\n        for ($i = 0; $i < strlen($number);\
    \ $i++) {\n            $sum += substr($number, $i, 1);\n        }\n        if\
    \ ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzuq4qlie.php:33\n\
    Stack trace:\n#0 /tmp/tmpzuq4qlie.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzuq4qlie.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    //\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ddqgyjk.php:17\n\
    Stack trace:\n#0 /tmp/tmp1ddqgyjk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1ddqgyjk.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $arr = array_map(function($i) {\n        if ($i < 0)\n            return\
    \ -$i;\n        return $i;\n    }, $arr);\n    $arr = array_map('array_sum', array_map('str_split',\
    \ $arr));\n    return count(array_filter($arr, function($i) {\n        return\
    \ $i > 0;\n    }));\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_j_86yv.php:27\n\
    Stack trace:\n#0 /tmp/tmpv_j_86yv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv_j_86yv.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  return array_sum(array_map(function($el) {\n    return array_sum(array_map(function($n)\
    \ {\n      return abs($n);\n    }, str_split($el)));\n  }, $arr)) > 0 ? count($arr)\
    \ : 0;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5op7wibb.php:22\n\
    Stack trace:\n#0 /tmp/tmp5op7wibb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5op7wibb.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $counter = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $digitsSum\
    \ = 0;\n        $number = $arr[$i];\n        if ($number < 0) {\n            $number\
    \ = -$number;\n        }\n        while ($number > 0) {\n            $digitsSum\
    \ += $number % 10;\n            $number = (int)($number / 10);\n        }\n  \
    \      if ($digitsSum > 0) {\n            $counter++;\n        }\n    }\n    return\
    \ $counter;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxrdr3i_u.php:33\n\
    Stack trace:\n#0 /tmp/tmpxrdr3i_u.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxrdr3i_u.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $digits\
    \ = array_map(function($n) {\n        return intval($n);\n      }, str_split(abs($num)));\n\
    \      $digits[0] *= -1;\n    } else {\n      $digits = array_map(function($n)\
    \ {\n        return intval($n);\n      }, str_split($num));\n    }\n    $count\
    \ += count(array_filter($digits, function($x) {\n      return $x > 0;\n    }));\n\
    \  }\n  return $count;\n}\n\necho '<p>count_nums([1, 11, -11]) = ' . count_nums([1,\
    \ 11, -11]) . '</p>';\necho '<p>count_nums([1, 1, 2]) = ' . count_nums([1, 1,\
    \ 2]) . '</p>';\necho '<p>count_nums([-1, -11, -11]) = ' . count_nums([-1, -11,\
    \ -11]) . '</p>';\necho '<p>count_nums([]) = ' . count_nums([]) . '</p>';\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<p>count_nums([1, 11, -11]) = 4</p><p>count_nums([1, 1, 2]) = 3</p><p>count_nums([-1,\
    \ -11, -11]) = 2</p><p>count_nums([]) = 0</p>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp5ytvhc7k.php:43\nStack trace:\n#0 /tmp/tmp5ytvhc7k.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5ytvhc7k.php on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$ret = 0;\n\tforeach ($arr as $n) {\n\t\t$s = 0;\n\t\t$x = abs($n);\n\t\
    \twhile ($x > 0) {\n\t\t\t$s += $x % 10;\n\t\t\t$x /= 10;\n\t\t}\n\t\tif ($s >\
    \ 0) {\n\t\t\t$ret++;\n\t\t}\n\t}\n\treturn $ret;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuh0qfrtx.php:30\n\
    Stack trace:\n#0 /tmp/tmpuh0qfrtx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuh0qfrtx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$n = 0;\n\tforeach ($arr as $number) {\n\t\t$number = (string) abs($number);\n\
    \t\t$sum = 0;\n\t\tfor ($i = 0; $i < strlen($number); $i++) {\n\t\t\t$sum += $number[$i];\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$n++;\n\t\t}\n\t}\n\treturn $n;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfsj99f5q.php:30\n\
    Stack trace:\n#0 /tmp/tmpfsj99f5q.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfsj99f5q.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $c = 0;\n    foreach ($arr as $n) {\n        $s = 0;\n        $n = abs($n);\n\
    \        while ($n) {\n            $s += $n % 10;\n            $n /= 10;\n   \
    \     }\n        if ($s) $c++;\n    }\n    return $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ccr7em9.php:29\n\
    Stack trace:\n#0 /tmp/tmp6ccr7em9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6ccr7em9.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tforeach ($arr as $value) {\n\t\t$digits = [];\n\t\twhile\
    \ ($value != 0) {\n\t\t\tarray_push($digits, $value % 10);\n\t\t\t$value = floor($value\
    \ / 10);\n\t\t}\n\t\t$sum = 0;\n\t\tforeach ($digits as $v) {\n\t\t\t$sum += $v;\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 134217736 bytes) in /tmp/tmpv9zr54do.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $returnVal = 0;\n    foreach ($arr as $value) {\n        if ($value !=\
    \ 0) {\n            $returnVal++;\n        }\n    }\n    return $returnVal;\n\
    }\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5almju6.php:24\n\
    Stack trace:\n#0 /tmp/tmpa5almju6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpa5almju6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0_euyba.php:17\n\
    Stack trace:\n#0 /tmp/tmpf0_euyba.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpf0_euyba.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $digits = get_digits($num);\n\
    \    $sum = array_sum($digits);\n    if ($sum > 0) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_digits()\
    \ in /tmp/tmp66z8md0u.php:12\nStack trace:\n#0 /tmp/tmp66z8md0u.php(22): count_nums(Array)\n\
    #1 /tmp/tmp66z8md0u.php(27): candidate(Array)\n#2 /tmp/tmp66z8md0u.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmp66z8md0u.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    if (!$arr) {\n        return 0;\n    }\n\n    return array_reduce($arr,\
    \ function ($carry, $item) {\n        $digits = abs($item);\n        $sum = 0;\n\
    \        while ($digits > 0) {\n            $sum += $digits % 10;\n          \
    \  $digits = (int) ($digits / 10);\n        }\n\n        if ($sum > 0) {\n   \
    \         return $carry + 1;\n        }\n\n        return $carry;\n    }, 0);\n\
    }\n\necho count_nums([]) == 0 ? 'PASS' : 'FAIL';\necho count_nums([-1, 11, -11])\
    \ == 1 ? 'PASS' : 'FAIL';\necho count_nums([1, 1, 2]) == 3 ? 'PASS' : 'FAIL';\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "PASSFAILPASS\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxjq2liu.php:39\n\
    Stack trace:\n#0 /tmp/tmpmxjq2liu.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmxjq2liu.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $signed_sum = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $n = $arr[$i];\n\
    \    if ($n < 0) {\n      $sign = -1;\n      $n = -$n;\n    } else {\n      $sign\
    \ = 1;\n    }\n    $sum = 0;\n    while ($n > 0) {\n      $sum += $n % 10;\n \
    \     $n = (int)($n / 10);\n    }\n    $signed_sum += $sign * $sum;\n  }\n  return\
    \ max(0, $signed_sum);\n}\n\n$arr = [];\necho count_nums($arr) . \"\\n\";\n$arr\
    \ = [-1, 11, -11];\necho count_nums($arr) . \"\\n\";\n$arr = [1, 1, 2];\necho\
    \ count_nums($arr) . \"\\n\";\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n0\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsoiuxjp7.php:42\n\
    Stack trace:\n#0 /tmp/tmpsoiuxjp7.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpsoiuxjp7.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiuji5u_6.php:16\n\
    Stack trace:\n#0 /tmp/tmpiuji5u_6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpiuji5u_6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $element) {\n        $sum = 0;\n  \
    \      $digits = str_split($element);\n        if ($element < 0) {\n         \
    \   $sum += $digits[0];\n            array_shift($digits);\n        }\n      \
    \  $sum += array_sum($digits);\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpxin_658j.php on line\
    \ 15\n\nWarning: A non-numeric value encountered in /tmp/tmpxin_658j.php on line\
    \ 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxin_658j.php:31\n\
    Stack trace:\n#0 /tmp/tmpxin_658j.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxin_658j.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidckpb7v.php:18\n\
    Stack trace:\n#0 /tmp/tmpidckpb7v.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpidckpb7v.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tforeach ($arr as $num) {\n\t\t$sum = 0;\n\t\t$num = abs($num);\n\
    \t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num = floor($num / 10);\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3hvc6gd.php:31\n\
    Stack trace:\n#0 /tmp/tmpx3hvc6gd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpx3hvc6gd.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  // your solution here\n  return '3';\n}\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgdrlf18.php:18\n\
    Stack trace:\n#0 /tmp/tmpjgdrlf18.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjgdrlf18.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$sum = array_sum($arr);\n\t$count = 0;\n\tif ($sum === 0) {\n\t\t$count\
    \ += 1;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hn726oy.php:23\n\
    Stack trace:\n#0 /tmp/tmp_hn726oy.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_hn726oy.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // Write your code here\n    $num_count = 0;\n    foreach ($arr as $number)\
    \ {\n        $string = $number;\n        $negative = false;\n        if ($number\
    \ < 0) {\n            $string = $number * -1;\n            $negative = true;\n\
    \        }\n        $sum = 0;\n        while ($string != 0) {\n            $sum\
    \ += $string % 10;\n            $string = floor($string / 10);\n        }\n  \
    \      if (($negative && $sum > 1) || (!$negative && $sum > 0)) {\n          \
    \  $num_count++;\n        }\n    }\n    return $num_count;\n}\n$arr = [-1, 11,\
    \ -11];\n$sum = count_nums($arr);\necho $sum;\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0627n57.php:40\n\
    Stack trace:\n#0 /tmp/tmpd0627n57.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpd0627n57.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $count += count_num($num);\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_num() in\
    \ /tmp/tmpi430il8j.php:12\nStack trace:\n#0 /tmp/tmpi430il8j.php(18): count_nums(Array)\n\
    #1 /tmp/tmpi430il8j.php(23): candidate(Array)\n#2 /tmp/tmpi430il8j.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi430il8j.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // TODO: implement this function\n\n    $count = 0;\n    $arrSize = count($arr);\n\
    \n    for ($i = 0; $i < $arrSize; $i++) {\n        $number = abs($arr[$i]);\n\
    \        $number_string = (string)$number;\n        $total = 0;\n\n        for\
    \ ($j = 0; $j < strlen($number_string); $j++) {\n            $total += $number_string[$j];\n\
    \        }\n\n        if ($total > 0) {\n            $count++;\n        }\n  \
    \  }\n\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuuqw3o5m.php:38\n\
    Stack trace:\n#0 /tmp/tmpuuqw3o5m.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpuuqw3o5m.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // YOUR CODE HERE\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfjucv9yv.php:17\n\
    Stack trace:\n#0 /tmp/tmpfjucv9yv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfjucv9yv.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $result = 0;\n  foreach ($arr as $value) {\n    if ($value < 0) {\n   \
    \   $value = substr($value, 1);\n    }\n    if (array_sum(str_split($value)) >\
    \ 0) {\n      $result++;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_mx37n.php:28\n\
    Stack trace:\n#0 /tmp/tmp02_mx37n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp02_mx37n.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tforeach ($arr as $key => $value) {\n\t\t$sum = 0;\n\t\t\
    for ($i=0; $i < strlen($value); $i++) { \n\t\t\t$sum += $value[$i];\n\t\t}\n\t\
    \tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho count_nums([-1,\
    \ 11, -11]) . PHP_EOL;\necho count_nums([1, 1, 2]) . PHP_EOL;\necho count_nums([])\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rx_j4ii.php:32\n\
    Stack trace:\n#0 /tmp/tmp4rx_j4ii.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4rx_j4ii.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\treturn 0;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bhmuztx.php:19\n\
    Stack trace:\n#0 /tmp/tmp_bhmuztx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_bhmuztx.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr37u6a8n.php:17\n\
    Stack trace:\n#0 /tmp/tmpr37u6a8n.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpr37u6a8n.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $int) {\n    if ($int < 0) {\n      $int\
    \ = abs($int);\n      $int = str_split($int);\n      $int[0] = -$int[0];\n   \
    \ } else {\n      $int = str_split($int);\n    }\n    $sum = 0;\n    foreach ($int\
    \ as $num) {\n      $sum += $num;\n    }\n    if ($sum > 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $number) {\n        $abs = abs($number);\n\
    \        $sum = 0;\n        while ($abs) {\n            $sum += $abs % 10;\n \
    \           $abs = (int)($abs / 10);\n        }\n        if ($sum) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvrso4uvt.php:31\n\
    Stack trace:\n#0 /tmp/tmpvrso4uvt.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvrso4uvt.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\n}\n\necho \"count_nums([]) == 0: \";\necho count_nums([]) == 0 ? \"ok\\\
    n\" : \"not ok\\n\";\n\necho \"count_nums([-1, 11, -11]) == 1: \";\necho count_nums([-1,\
    \ 11, -11]) == 1 ? \"ok\\n\" : \"not ok\\n\";\n\necho \"count_nums([1, 1, 2])\
    \ == 3: \";\necho count_nums([1, 1, 2]) == 3 ? \"ok\\n\" : \"not ok\\n\";\n\n\
    echo \"count_nums([0, 0, 0]) == 0: \";\necho count_nums([0, 0, 0]) == 0 ? \"ok\\\
    n\" : \"not ok\\n\";\n\necho \"count_nums([1, 1, -1]) == 3: \";\necho count_nums([1,\
    \ 1, -1]) == 3 ? \"ok\\n\" : \"not ok\\n\";\n\necho \"count_nums([-1, -1, -1])\
    \ == 1: \";\necho count_nums([-1, -1, -1]) == 1 ? \"ok\\n\" : \"not ok\\n\";\n\
    \necho \"count_nums([-1, -1, 2]) == 2: \";\necho count_nums([-1, -1, 2]) == 2\
    \ ? \"ok\\n\" : \"not ok\\n\";\n\necho \"count_nums([-1, 11, -11, 9999]) == 2:\
    \ \";\necho count_nums([-1, 11, -11, 9999]) == 2 ? \"ok\\n\" : \"not ok\\n\";\n\
    \necho \"count_nums([0, 0, 1, 1, 2, -1, -1, -1, 11, -11, 9999]) == 7: \";\necho\
    \ count_nums([0, 0, 1, 1, 2, -1, -1, -1, 11, -11, 9999]) == 7 ? \"ok\\n\" : \"\
    not ok\\n\";\n\necho \"count_nums([-1, -1, -1, -\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp29jy484b.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$result = 0;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\t$sum = 0;\n\
    \t\t$str = strval($arr[$i]);\n\t\tfor ($j = 0; $j < strlen($str); $j++) {\n\t\t\
    \t$sum += intval($str[$j]);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$result++;\n\t\t\
    }\n\t}\n\treturn $result;\n}\n\necho count_nums([1, 2, -4]) . \"\\n\";\necho count_nums([])\
    \ . \"\\n\";\necho count_nums([-1, 11, -11]) . \"\\n\";\necho count_nums([1, 1,\
    \ 2]) . \"\\n\";\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n0\n3\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0m9kz76.php:35\n\
    Stack trace:\n#0 /tmp/tmpl0m9kz76.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpl0m9kz76.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  return 0;\n}\n\necho \"count_nums(): \";\necho count_nums([]) . PHP_EOL;\n\
    echo count_nums([-1, 11, -11]) . PHP_EOL;\necho count_nums([1, 1, 2]) . PHP_EOL;\n\
    echo PHP_EOL;\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "count_nums(): 0\n0\n0\n\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpo5x69xf8.php:25\nStack trace:\n#0 /tmp/tmpo5x69xf8.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpo5x69xf8.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $n = 0;\n    foreach ($arr as $a) {\n        $d = get_digits($a);\n \
    \       $sum = array_sum($d);\n        if ($sum > 0) {\n            $n++;\n  \
    \      }\n    }\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_digits()\
    \ in /tmp/tmpoqso9677.php:12\nStack trace:\n#0 /tmp/tmpoqso9677.php(22): count_nums(Array)\n\
    #1 /tmp/tmpoqso9677.php(27): candidate(Array)\n#2 /tmp/tmpoqso9677.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpoqso9677.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // your code here\n    return 0;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoyk_vppr.php:21\n\
    Stack trace:\n#0 /tmp/tmpoyk_vppr.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpoyk_vppr.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  // Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkdgj0tl.php:17\n\
    Stack trace:\n#0 /tmp/tmpmkdgj0tl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmkdgj0tl.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $val) {\n        $sum = 0;\n      \
    \  if ($val < 0) {\n            $sum = $val;\n        }\n        while ($val)\
    \ {\n            $sum += $val % 10;\n            $val = floor($val / 10);\n  \
    \      }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n \
    \   return $count;\n}\necho count_nums([]) . \"\\n\";\necho count_nums([-1, 11,\
    \ -11]) . \"\\n\";\necho count_nums([1, 1, 2]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: b'0\n'
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $ret = 0;\n    foreach ($arr as $n) {\n        if ($n === 0) {\n    \
    \        continue;\n        }\n        $s = array_sum(str_split(abs($n)));\n \
    \       if ($s > 0) {\n            $ret++;\n        }\n    }\n    return $ret;\n\
    }\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1y2dlbs.php:28\n\
    Stack trace:\n#0 /tmp/tmpt1y2dlbs.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpt1y2dlbs.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // TODO\n}\ncount_nums([1, 1, 2]);\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7amdejiv.php:19\n\
    Stack trace:\n#0 /tmp/tmp7amdejiv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7amdejiv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  if(count($arr) === 0) return 0;\n  $count = 0;\n  foreach($arr as $num)\
    \ {\n    $sum = 0;\n    if($num < 0) {\n      $sum += abs($num % 10);\n      $num\
    \ = floor($num / 10);\n    }\n    while($num > 0) {\n      $sum += $num % 10;\n\
    \      $num = floor($num / 10);\n    }\n    if($sum > 0) $count++;\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpupfjqe14.php:33\n\
    Stack trace:\n#0 /tmp/tmpupfjqe14.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpupfjqe14.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    if (empty($arr)) {\n        return 0;\n    }\n\n    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $sum -= $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgi5p1n2i.php:37\n\
    Stack trace:\n#0 /tmp/tmpgi5p1n2i.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpgi5p1n2i.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = -$num;\n        }\n        $num_str = (string) $num;\n   \
    \     $sum = 0;\n        for ($i = 0; $i < strlen($num_str); $i++) {\n       \
    \     $sum += $num_str[$i];\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpquhfn5h6.php:33\n\
    Stack trace:\n#0 /tmp/tmpquhfn5h6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpquhfn5h6.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $number) {\n        $number = abs($number);\n\
    \        $sum = 0;\n        while ($number > 0) {\n            $sum += $number\
    \ % 10;\n            $number = intval($number / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59d8z182.php:31\n\
    Stack trace:\n#0 /tmp/tmp59d8z182.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp59d8z182.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $counter = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n    \
    \    if ($num < 0) {\n            $sum = $num * -1;\n        } else {\n      \
    \      $sum = $num;\n        }\n        while ($sum >= 1) {\n            $sum\
    \ -= 10;\n        }\n        if ($sum < 0) {\n            $counter++;\n      \
    \  }\n    }\n    return $counter;\n}\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2wn80ayc.php:33\n\
    Stack trace:\n#0 /tmp/tmp2wn80ayc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2wn80ayc.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = -$num;\n    }\n    $sum = 0;\n    while ($num > 0) {\n      $sum += $num %\
    \ 10;\n      $num = floor($num / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\necho count_nums([]) . \"\\n\"; // 0\necho\
    \ count_nums([-1, 11, -11]) . \"\\n\"; // 1\necho count_nums([1, 1, 2]) . \"\\\
    n\"; // 3\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx03ki1cw.php:36\n\
    Stack trace:\n#0 /tmp/tmpx03ki1cw.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpx03ki1cw.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\t$sum = 0;\n\tforeach ($arr as $key => $value) {\n\t\tif\
    \ ($value < 0) {\n\t\t\t$value = str_replace('-', '', $value);\n\t\t}\n\t\t$arr[$key]\
    \ = str_split($value);\n\t\tforeach ($arr[$key] as $k => $v) {\n\t\t\t$sum +=\
    \ $v;\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count += 1;\n\t\t}\n\t\t$sum = 0;\n\t\
    }\n\treturn $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpay0nccpq.php:33\n\
    Stack trace:\n#0 /tmp/tmpay0nccpq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpay0nccpq.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmbosb6l6.php:16\n\
    Stack trace:\n#0 /tmp/tmpmbosb6l6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmbosb6l6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $cnt = 0;\n    foreach ($arr as $num) {\n        $s = 0;\n        while\
    \ ($num != 0) {\n            $s += abs($num % 10);\n            $num /= 10;\n\
    \        }\n        if ($s > 0) {\n            $cnt++;\n        }\n    }\n   \
    \ return $cnt;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3z46xrtj.php:29\n\
    Stack trace:\n#0 /tmp/tmp3z46xrtj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3z46xrtj.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t//return 0;\n\t// return array_reduce($arr, function($carry, $item) {\n\
    \t// \treturn $carry + (array_sum(str_split(abs($item))) > 0 ? 1 : 0);\n\t// },\
    \ 0);\n\t$count = 0;\n\tforeach ($arr as $item) {\n\t\t$sum = 0;\n\t\t$abs = abs($item);\n\
    \t\twhile ($abs > 0) {\n\t\t\t$sum += $abs % 10;\n\t\t\t$abs = (int)($abs / 10);\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpip0yh4w3.php:35\n\
    Stack trace:\n#0 /tmp/tmpip0yh4w3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpip0yh4w3.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // Your implementation goes here.\n    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ != 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ihiic27.php:31\n\
    Stack trace:\n#0 /tmp/tmp0ihiic27.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0ihiic27.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $c = 0;\n    foreach ($arr as $num) {\n        $digits = str_split($num);\n\
    \        $digitsum = 0;\n        foreach ($digits as $digit) {\n            $digitsum\
    \ += $digit;\n        }\n        if ($digitsum > 0) {\n            $c++;\n   \
    \     }\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpgejw36iq.php on line\
    \ 15\n\nWarning: A non-numeric value encountered in /tmp/tmpgejw36iq.php on line\
    \ 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgejw36iq.php:30\n\
    Stack trace:\n#0 /tmp/tmpgejw36iq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgejw36iq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\t$sum = 0;\n\t\
    \t$x = $arr[$i];\n\t\twhile ($x != 0) {\n\t\t\t$digit = $x % 10;\n\t\t\t$sum +=\
    \ $digit;\n\t\t\t$x = ($x - $digit) / 10;\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t\
    $count += 1;\n\t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmqt7kju.php:35\n\
    Stack trace:\n#0 /tmp/tmpwmqt7kju.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwmqt7kju.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $result = 0;\n  foreach ($arr as $value) {\n    $result += sum_digit($value);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_digit() in\
    \ /tmp/tmp8iki94kb.php:12\nStack trace:\n#0 /tmp/tmp8iki94kb.php(18): count_nums(Array)\n\
    #1 /tmp/tmp8iki94kb.php(23): candidate(Array)\n#2 /tmp/tmp8iki94kb.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8iki94kb.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $total = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num *= $num\
    \ < 0 ? -1 : 1;\n    while ($num > 0) {\n      $sum += $num % 10;\n      $num\
    \ = floor($num / 10);\n    }\n    if ($sum > 0) {\n      $total++;\n    }\n  }\n\
    \  return $total;\n}\n\necho \"count_nums([]) == 0: \" . (count_nums([]) == 0\
    \ ? \"true\" : \"false\") . \"\\n\";\necho \"count_nums([-1, 11, -11]) == 1: \"\
    \ . (count_nums([-1, 11, -11]) == 1 ? \"true\" : \"false\") . \"\\n\";\necho \"\
    count_nums([1, 1, 2]) == 3: \" . (count_nums([1, 1, 2]) == 3 ? \"true\" : \"false\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "count_nums([]) == 0: true\ncount_nums([-1, 11, -11]) == 1: false\ncount_nums([1,\
    \ 1, 2]) == 3: true\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxkrtezv.php:34\n\
    Stack trace:\n#0 /tmp/tmphxkrtezv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphxkrtezv.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$total = 0;\n\tforeach ($arr as $num) {\n\t\t$num = abs($num);\n\t\twhile\
    \ ($num >= 1) {\n\t\t\t$digit = $num % 10;\n\t\t\t$total += $digit;\n\t\t\t$num\
    \ = floor($num / 10);\n\t\t}\n\t}\n\treturn $total;\n}\necho count_nums([1, 1,\
    \ 2]).\"\\n\";\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwvf0zlnj.php:28\n\
    Stack trace:\n#0 /tmp/tmpwvf0zlnj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwvf0zlnj.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // YOUR CODE HERE\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6am8qso1.php:17\n\
    Stack trace:\n#0 /tmp/tmp6am8qso1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6am8qso1.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7pxcpo1.php:17\n\
    Stack trace:\n#0 /tmp/tmps7pxcpo1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmps7pxcpo1.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num > 0) {\n      $sum\
    \ = array_sum(str_split($num));\n    } else {\n      $sum = array_sum(str_split(substr($num,\
    \ 1)));\n    }\n    if ($sum > 0) {\n      $count += 1;\n    }\n  }\n  return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzcsectrr.php:29\n\
    Stack trace:\n#0 /tmp/tmpzcsectrr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzcsectrr.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // STUDENT-TODO\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsraqwegv.php:18\n\
    Stack trace:\n#0 /tmp/tmpsraqwegv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsraqwegv.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    //echo \"count_nums($arr)==\";\n    $count = 0;\n    foreach ($arr as\
    \ $num) {\n        if (abs($num) < 10) {\n            $count++;\n        } else\
    \ {\n            $sum = 0;\n            while ($num) {\n                $sum +=\
    \ abs($num % 10);\n                $num = intval($num / 10);\n            }\n\
    \            if ($sum > 0) {\n                $count++;\n            }\n     \
    \   }\n    }\n    //echo \"$count\\n\";\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0tpr8r7.php:36\n\
    Stack trace:\n#0 /tmp/tmpd0tpr8r7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpd0tpr8r7.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tif(empty($arr)){\n\t\t$count;\n\t}\n\t$arr_length = count($arr);\n\
    \tfor($i = 0; $i < $arr_length; $i++){\n\t\t$sum = 0;\n\t\tif($arr[$i] < 0){\n\
    \t\t\t$arr[$i] = -$arr[$i];\n\t\t}\n\t\twhile($arr[$i] != 0){\n\t\t\t$rem = $arr[$i]\
    \ % 10;\n\t\t\t$sum = $sum + $rem;\n\t\t\t$arr[$i] = $arr[$i] / 10;\n\t\t}\n\t\
    \tif($sum > 0){\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsm4ishra.php:38\n\
    Stack trace:\n#0 /tmp/tmpsm4ishra.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpsm4ishra.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $output = 0;\n    foreach ($arr as $value) {\n        if (sum_digits($value)\
    \ > 0) {\n            $output++;\n        }\n    }\n    return $output;\n}\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_digits()\
    \ in /tmp/tmp7nfq7put.php:12\nStack trace:\n#0 /tmp/tmp7nfq7put.php(19): count_nums(Array)\n\
    #1 /tmp/tmp7nfq7put.php(24): candidate(Array)\n#2 /tmp/tmp7nfq7put.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7nfq7put.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $int) {\n        $digits = array_map('intval',\
    \ str_split($int));\n        $result += (array_sum($digits) > 0);\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpq47z2x.php:24\n\
    Stack trace:\n#0 /tmp/tmpwpq47z2x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwpq47z2x.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $key => $value) {\n        if($value\
    \ < 0) {\n            $value = -1 * $value;\n        }\n        $currentSum =\
    \ 0;\n        while ($value > 0) {\n            $digit = $value % 10;\n      \
    \      $currentSum += $digit;\n            $value = (int)($value / 10);\n    \
    \    }\n        if($currentSum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnubsjid_.php:33\n\
    Stack trace:\n#0 /tmp/tmpnubsjid_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnubsjid_.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  if (empty($arr)) return 0;\n  $sum_arr = [];\n  foreach ($arr as $num)\
    \ {\n    $sum = 0;\n    if ($num < 0) {\n      $num = -$num;\n      $sum = -1;\n\
    \    }\n    for ($i = 0; $i < strlen($num); $i++) {\n      $sum += $num[$i];\n\
    \    }\n    $sum_arr[] = $sum;\n  }\n  return count(array_filter($sum_arr, function($x)\
    \ {\n    return $x > 0;\n  }));\n}\necho count_nums([]) . \"\\n\";\necho count_nums([-1,\
    \ 11, -11]) . \"\\n\";\necho count_nums([1, 1, 2]) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxx_0j3ru.php:38\n\
    Stack trace:\n#0 /tmp/tmpxx_0j3ru.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpxx_0j3ru.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $counter = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n    \
    \    $num = $num < 0 ? $num * -1 : $num;\n        while ($num > 0) {\n       \
    \     $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n  \
    \      if ($sum > 0) {\n            $counter++;\n        }\n    }\n    return\
    \ $counter;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjoikhma0.php:30\n\
    Stack trace:\n#0 /tmp/tmpjoikhma0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjoikhma0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $value) {\n        $count += signed_digit_sum($value)\
    \ > 0 ? 1 : 0;\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function signed_digit_sum()\
    \ in /tmp/tmpver9f7rv.php:12\nStack trace:\n#0 /tmp/tmpver9f7rv.php(17): count_nums(Array)\n\
    #1 /tmp/tmpver9f7rv.php(22): candidate(Array)\n#2 /tmp/tmpver9f7rv.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpver9f7rv.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    return 0;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpav1gkr1h.php:19\n\
    Stack trace:\n#0 /tmp/tmpav1gkr1h.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpav1gkr1h.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tforeach ($arr as $i) {\n\t\t$digits_sum = sum_digits($i);\n\
    \t\tif ($digits_sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_digits()\
    \ in /tmp/tmpg92fi8b9.php:12\nStack trace:\n#0 /tmp/tmpg92fi8b9.php(20): count_nums(Array)\n\
    #1 /tmp/tmpg92fi8b9.php(25): candidate(Array)\n#2 /tmp/tmpg92fi8b9.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg92fi8b9.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t// $count = 0;\n\t// foreach ($arr as $key => $value) {\n\t// \t$count\
    \ += abs(array_sum(str_split($value)));\n\t// }\n\t// return $count;\n\t$count\
    \ = array_filter($arr, function($n) {\n\t\treturn array_sum(str_split($n)) > 0;\n\
    \t});\n\treturn count($count);\n}\nprint_r(count_nums([]));\nprint_r(count_nums([-1,\
    \ 11, -11]));\nprint_r(count_nums([1, 1, 2]));\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "033\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy_b_63v.php:29\n\
    Stack trace:\n#0 /tmp/tmpsy_b_63v.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsy_b_63v.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  // Your code here!\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82ycbfi1.php:17\n\
    Stack trace:\n#0 /tmp/tmp82ycbfi1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp82ycbfi1.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    return array_reduce($arr, function($c, $i) {\n        return $c + ($i\
    \ > 0 || $i < 0 && abs($i) % 10 > 0 ? 1 : 0);\n    }, 0);\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbohxc0jx.php:20\n\
    Stack trace:\n#0 /tmp/tmpbohxc0jx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbohxc0jx.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    $num = 0;\n    $sign = 0;\n    foreach ($arr as $value)\
    \ {\n        $num = $value;\n        $sign = $value;\n        $sum = 0;\n    \
    \    if ($value < 0) {\n            $sign = 0 - $value;\n        }\n        while\
    \ ($num != 0) {\n            $rem = $num % 10;\n            $sum = $sum + $rem;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum != 0 && $sign\
    \ < 0) {\n            $count = $count + 1;\n        } else if ($sum != 0 && $sign\
    \ > 0) {\n            $count = $count + 1;\n        }\n    }\n    return $count;\n\
    }\n\nclass Tests extends PHPUnit_Framework_TestCase {\n    public function testBaseCases()\
    \ {\n        $this->assertEquals(0, count_nums([]));\n        $this->assertEquals(1,\
    \ count_nums([-1, 11, -11]));\n        $this->assertEquals(3, count_nums([1, 1,\
    \ 2]));\n    }\n}\n\n$t = new Tests();\n$t->testBaseCases();\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'PHPUnit_Framework_TestCase' not found\
    \ in /tmp/tmpwi7ipmrh.php:34\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpwi7ipmrh.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $num = 0;\n  foreach ($arr as $item) {\n    $sum = 0;\n    if ($item <\
    \ 0) {\n      $item = -$item;\n      $sum = -1;\n    }\n    while ($item > 0)\
    \ {\n      $sum += $item % 10;\n      $item = floor($item / 10);\n    }\n    if\
    \ ($sum > 0) {\n      $num++;\n    }\n  }\n  return $num;\n}\necho count_nums([-1,\
    \ 11, -11]) . \"\\n\";\necho count_nums([1, 1, 2]) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppu8cxnk2.php:36\n\
    Stack trace:\n#0 /tmp/tmppu8cxnk2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppu8cxnk2.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $c = 0;\n    foreach ($arr as $n) {\n        $d = 0;\n        if ($n\
    \ < 0) $n = -$n;\n        for ($m = $n; $m != 0; $m /= 10) $d += $m % 10;\n  \
    \      if ($d > 0) $c++;\n    }\n    return $c;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqobafrz.php:25\n\
    Stack trace:\n#0 /tmp/tmpjqobafrz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjqobafrz.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $c = 0;\n  foreach ($arr as $n) {\n    $sum = 0;\n    if ($n < 0) {\n \
    \     $sum += -1 * ($n % 10);\n      $n = floor($n / 10);\n    }\n    while ($n\
    \ > 0) {\n      $sum += $n % 10;\n      $n = floor($n / 10);\n    }\n    if ($sum\
    \ > 0) {\n      $c++;\n    }\n  }\n  return $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpba15cz7l.php:34\n\
    Stack trace:\n#0 /tmp/tmpba15cz7l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpba15cz7l.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $sum\
    \ = 0;\n        $num = abs($arr[$i]);\n        while ($num > 0) {\n          \
    \  $sum += $num % 10;\n            $num = intval($num / 10);\n        }\n    \
    \    if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n$arr = [1, 1, 2];\necho count_nums($arr);\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_uxjvfz.php:33\n\
    Stack trace:\n#0 /tmp/tmpu_uxjvfz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpu_uxjvfz.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0oz2uvd.php:16\n\
    Stack trace:\n#0 /tmp/tmpv0oz2uvd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpv0oz2uvd.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num;\n            $num = abs($num);\n\
    \        }\n        while ($num != 0) {\n            $sum += $num % 10;\n    \
    \        $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n      \
    \      $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ir5juwj.php:37\n\
    Stack trace:\n#0 /tmp/tmp4ir5juwj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4ir5juwj.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $count\
    \ += sum_digits(($num * -1)) > 0 ? 1 : 0;\n    } else {\n      $count += sum_digits($num)\
    \ > 0 ? 1 : 0;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_digits()\
    \ in /tmp/tmplp_18w8f.php:13\nStack trace:\n#0 /tmp/tmplp_18w8f.php(22): count_nums(Array)\n\
    #1 /tmp/tmplp_18w8f.php(27): candidate(Array)\n#2 /tmp/tmplp_18w8f.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmplp_18w8f.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // YOUR CODE HERE\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6d1zbi3.php:17\n\
    Stack trace:\n#0 /tmp/tmpz6d1zbi3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpz6d1zbi3.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // TODO\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_1xf34v.php:17\n\
    Stack trace:\n#0 /tmp/tmpo_1xf34v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpo_1xf34v.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t// $count = 0;\n\t// foreach ($arr as $num) {\n\t// \t$sum = 0;\n\t// \t\
    if ($num < 0) {\n\t// \t\t$num = abs($num);\n\t// \t\t$sum += 1;\n\t// \t}\n\t\
    // \t$strNum = (string)$num;\n\t// \t$digits = str_split($strNum);\n\t// \tforeach\
    \ ($digits as $digit) {\n\t// \t\t$sum += $digit;\n\t// \t}\n\t// \tif ($sum >\
    \ 0) {\n\t// \t\t$count++;\n\t// \t}\n\t// }\n\t// return $count;\n\t$count =\
    \ 0;\n\tforeach ($arr as $num) {\n\t\t$sum = 0;\n\t\t$strNum = (string)$num;\n\
    \t\t$digits = str_split($strNum);\n\t\tforeach ($digits as $digit) {\n\t\t\t$sum\
    \ += $digit;\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\necho count_nums([]) . \" should be 0\\n\";\necho count_nums([-1,\
    \ 11, -11]) . \" should be 1\\n\";\necho count_nums([1, 1, 2]) . \" should be\
    \ 3\\n\";\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0 should be 0\n\nWarning: A non-numeric value encountered in /tmp/tmp7ta3v3_w.php\
    \ on line 33\n\nWarning: A non-numeric value encountered in /tmp/tmp7ta3v3_w.php\
    \ on line 33\n3 should be 1\n3 should be 3\n\nWarning: A non-numeric value encountered\
    \ in /tmp/tmp7ta3v3_w.php on line 33\n\nWarning: A non-numeric value encountered\
    \ in /tmp/tmp7ta3v3_w.php on line 33\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7ta3v3_w.php:50\nStack trace:\n#0 /tmp/tmp7ta3v3_w.php(59):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7ta3v3_w.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $a) {\n    $count += (array_sum(str_split(abs($a)))\
    \ > 0) ? 1 : 0;\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoudsgvdv.php:23\n\
    Stack trace:\n#0 /tmp/tmpoudsgvdv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpoudsgvdv.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    return array_reduce($arr, function($carry, $v) {\n        $sum = array_sum(str_split(abs($v)));\n\
    \        return $carry + ($sum > 0 ? 1 : 0);\n    }, 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5yk1zk5.php:22\n\
    Stack trace:\n#0 /tmp/tmpf5yk1zk5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpf5yk1zk5.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tif(count($arr) == 0)\n\t\treturn $count;\n\tforeach($arr\
    \ as $key => $value) {\n\t\tif(abs($value) < 10) {\n\t\t\tif($value >= 0)\n\t\t\
    \t\t$count++;\n\t\t}\n\t\telse if(abs($value) >= 10 && abs($value) < 100) {\n\t\
    \t\tif(abs($value) / 10 + abs($value) % 10 > 0)\n\t\t\t\t$count++;\n\t\t}\n\t\t\
    else if(abs($value) >= 100 && abs($value) < 1000) {\n\t\t\tif(abs($value) / 100\
    \ + (abs($value) % 100) / 10 + abs($value) % 10 > 0)\n\t\t\t\t$count++;\n\t\t\
    }\n\t\telse if(abs($value) >= 1000 && abs($value) < 10000) {\n\t\t\tif(abs($value)\
    \ / 1000 + (abs($value) % 1000) / 100 + (abs($value) % 100) / 10 + abs($value)\
    \ % 10 > 0)\n\t\t\t\t$count++;\n\t\t}\n\t\telse if(abs($value) >= 10000 && abs($value)\
    \ < 100000) {\n\t\t\tif(abs($value) / 10000 + (abs($value) % 10000) / 1000 + (abs($value)\
    \ % 1000) / 100 + (abs($value) % 100) / 10 + abs($value) % 10 > 0)\n\t\t\t\t$count++;\n\
    \t\t}\n\t\telse if(abs($value) >= 100000 && abs($value) < 1000000) {\n\t\t\tif(abs($value)\
    \ / 100000 + (abs($value) % 100000) / 10000 + (abs($value) % 10000) / 1000 + (abs($value)\
    \ % 1000) / 100 + (abs($value) % 100) / 10 + abs($value) % 10 > 0)\n\t\t\t\t$count++;\n\
    \t\t}\n\t\telse if(abs($value) >= 1000000 && abs($value) < 10000000) {\n\t\t\t\
    if(abs($value) / 1000000 + (abs($value) % 1000000) / 100\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp5erk4s2.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    $arrLen = count($arr);\n    if($arrLen==0) {\n     \
    \   return 0;\n    } else {\n        for($i=0; $i<$arrLen; $i++) {\n         \
    \   $current = $arr[$i];\n            $numLen = strlen(abs($current));\n     \
    \       $sum = 0;\n            for($j=0; $j<$numLen; $j++) {\n               \
    \ $sum += substr($current, $j, 1);\n            }\n            if($sum>0) {\n\
    \                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4m0o_bp3.php on line\
    \ 20\n\nWarning: A non-numeric value encountered in /tmp/tmp4m0o_bp3.php on line\
    \ 20\n\nWarning: A non-numeric value encountered in /tmp/tmp4m0o_bp3.php on line\
    \ 20\n\nWarning: A non-numeric value encountered in /tmp/tmp4m0o_bp3.php on line\
    \ 20\n\nWarning: A non-numeric value encountered in /tmp/tmp4m0o_bp3.php on line\
    \ 20\n\nWarning: A non-numeric value encountered in /tmp/tmp4m0o_bp3.php on line\
    \ 20\n\nWarning: A non-numeric value encountered in /tmp/tmp4m0o_bp3.php on line\
    \ 20\n\nWarning: A non-numeric value encountered in /tmp/tmp4m0o_bp3.php on line\
    \ 20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // YOUR CODE HERE\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmf9nhfg.php:19\n\
    Stack trace:\n#0 /tmp/tmpwmf9nhfg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwmf9nhfg.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $r = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $n = 0;\n    if\
    \ ($arr[$i] < 0) {\n      $n += $arr[$i] % 10;\n      $arr[$i] = ($arr[$i] - $n)\
    \ / -10;\n    }\n    while ($arr[$i] > 0) {\n      $n += $arr[$i] % 10;\n    \
    \  $arr[$i] = ($arr[$i] - $n) / 10;\n    }\n    if ($n > 0) {\n      $r++;\n \
    \   }\n  }\n  return $r;\n}\n\n$inputs = [[], [-1, 11, -11], [1, 1, 2]];\nforeach\
    \ ($inputs as $input) {\n  echo count_nums($input), \"\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: b'0\n1\n3\n'
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    return array_reduce($arr, function($carry, $item) {\n        $digits\
    \ = intToArray($item);\n        $sum = array_sum($digits);\n        if ($sum >\
    \ 0) {\n            $carry += 1;\n        }\n        return $carry;\n    }, 0);\n\
    }\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function intToArray()\
    \ in /tmp/tmpnlw8tdak.php:11\nStack trace:\n#0 [internal function]: {closure}(0,\
    \ -1)\n#1 /tmp/tmpnlw8tdak.php(17): array_reduce(Array, Object(Closure), 0)\n\
    #2 /tmp/tmpnlw8tdak.php(20): count_nums(Array)\n#3 /tmp/tmpnlw8tdak.php(25): candidate(Array)\n\
    #4 /tmp/tmpnlw8tdak.php(34): test()\n#5 {main}\n  thrown in /tmp/tmpnlw8tdak.php\
    \ on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdcxhwr2g.php:18\n\
    Stack trace:\n#0 /tmp/tmpdcxhwr2g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdcxhwr2g.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $count += has_positive_sum_of_digits($num);\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_positive_sum_of_digits()\
    \ in /tmp/tmpww5i25hf.php:12\nStack trace:\n#0 /tmp/tmpww5i25hf.php(18): count_nums(Array)\n\
    #1 /tmp/tmpww5i25hf.php(23): candidate(Array)\n#2 /tmp/tmpww5i25hf.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpww5i25hf.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    if (sizeof($arr) == 0) {\n        return 0;\n    }\n    $count = 0;\n\
    \    foreach ($arr as $value) {\n        $svalue = strval($value);\n        $sum\
    \ = 0;\n        if ($value < 0) {\n            $sum += intval($svalue[0]);\n \
    \           $svalue = substr($svalue, 1);\n        }\n        while ($svalue)\
    \ {\n            $sum += intval($svalue[0]);\n            $svalue = substr($svalue,\
    \ 1);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprgc538_q.php:37\n\
    Stack trace:\n#0 /tmp/tmprgc538_q.php(46): test()\n#1 {main}\n  thrown in /tmp/tmprgc538_q.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  if (empty($arr)) return 0;\n  $count = 0;\n  foreach ($arr as $i) {\n \
    \   $signed_digits = num_to_digits($i);\n    $sum = array_sum($signed_digits);\n\
    \    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function num_to_digits()\
    \ in /tmp/tmpwvvq9tpm.php:13\nStack trace:\n#0 /tmp/tmpwvvq9tpm.php(23): count_nums(Array)\n\
    #1 /tmp/tmpwvvq9tpm.php(28): candidate(Array)\n#2 /tmp/tmpwvvq9tpm.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwvvq9tpm.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    return count(\n        array_filter(\n            $arr,\n           \
    \ function($item) {\n                return array_sum(\n                    array_map(\n\
    \                        function($item) {\n                            return\
    \ abs($item);\n                        },\n                        str_split($item)\n\
    \                    )\n                ) > 0;\n            }\n        )\n   \
    \ );\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztlnmeox.php:33\n\
    Stack trace:\n#0 /tmp/tmpztlnmeox.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpztlnmeox.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $key => $value) {\n        $sum = 0;\n\
    \        if ($value > 0) {\n            $sum = array_sum(str_split($value));\n\
    \        } else {\n            $sum = -1 * array_sum(str_split(abs($value)));\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3n4k9bb.php:35\n\
    Stack trace:\n#0 /tmp/tmpk3n4k9bb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpk3n4k9bb.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$sum = 0;\n\t$numbers = array();\n\tfor ($i = 0; $i < count($arr); $i++)\
    \ {\n\t\t$sum = 0;\n\t\t$number = $arr[$i];\n\t\twhile ($number != 0) {\n\t\t\t\
    $digit = $number % 10;\n\t\t\t$sum += $digit;\n\t\t\t$number = $number / 10;\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\tarray_push($numbers, $arr[$i]);\n\t\t}\n\t}\n\
    \treturn count($numbers);\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17vog617.php:36\n\
    Stack trace:\n#0 /tmp/tmp17vog617.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp17vog617.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $signed = abs($arr[$i]);\n\
    \    while ($signed > 0) {\n      $sum += $signed % 10;\n      $signed = floor($signed\
    \ / 10);\n    }\n    if ($sum > 0) {\n      $sum = 0;\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\necho count_nums([]) . \"\\n\";\necho count_nums([-1,\
    \ 11, -11]) . \"\\n\";\necho count_nums([1, 1, 2]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n3\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvu6b0wog.php:32\n\
    Stack trace:\n#0 /tmp/tmpvu6b0wog.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvu6b0wog.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $value) {\n    if (array_sum(str_split($value))\
    \ > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nprint(count_nums([-1,\
    \ 11, -11]));\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfr7yojev.php:27\n\
    Stack trace:\n#0 /tmp/tmpfr7yojev.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfr7yojev.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $n) {\n        $i = $n;\n        $n\
    \ = abs($n);\n        $sum = 0;\n        while ($n != 0) {\n            $sum +=\
    \ $n % 10;\n            $n = intval($n / 10);\n        }\n        if ($sum > 0)\
    \ {\n            if ($i >= 0) {\n                $result++;\n            } else\
    \ {\n                $result--;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1nwd2sp.php:36\n\
    Stack trace:\n#0 /tmp/tmpz1nwd2sp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpz1nwd2sp.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tif (!empty($arr)) {\n\t\tforeach ($arr as $number) {\n\t\
    \t\t$temp = 0;\n\t\t\tif ($number < 0) {\n\t\t\t\t$number = $number * -1;\n\t\t\
    \t\t$temp += $number % 10;\n\t\t\t\t$number = ($number - $temp) / 10;\n\t\t\t\
    }\n\t\t\twhile ($number > 0) {\n\t\t\t\t$temp += $number % 10;\n\t\t\t\t$number\
    \ = ($number - $temp) / 10;\n\t\t\t}\n\t\t\tif ($temp > 0) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_cqapj8.php:37\n\
    Stack trace:\n#0 /tmp/tmpx_cqapj8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpx_cqapj8.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    return array_sum(array_map(function($n) {\n        $abs = abs($n);\n\
    \        if ($abs < 10) {\n            return ($abs > 0);\n        }\n       \
    \ return count_nums(str_split($abs));\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuuw3sh08.php:25\n\
    Stack trace:\n#0 /tmp/tmpuuw3sh08.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpuuw3sh08.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhhn154r.php:18\n\
    Stack trace:\n#0 /tmp/tmphhhn154r.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphhhn154r.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    return array_reduce($arr, function($n, $e) {\n        return $n + (abs($e)\
    \ > 0 ? 1 : 0);\n    }, 0);\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsthux6cv.php:20\n\
    Stack trace:\n#0 /tmp/tmpsthux6cv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsthux6cv.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $int) {\n        $result += ($int\
    \ == 0 ? 0 : 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi78w7rcq.php:23\n\
    Stack trace:\n#0 /tmp/tmpi78w7rcq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpi78w7rcq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbveo5yox.php:16\n\
    Stack trace:\n#0 /tmp/tmpbveo5yox.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbveo5yox.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $val) {\n        if ($val < 0) {\n\
    \            $val = -$val;\n        }\n        $digits = array();\n        while\
    \ ($val > 0) {\n            $digits[] = $val % 10;\n            $val = (int)($val\
    \ / 10);\n        }\n        $sum = array_sum($digits);\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgalgsgk.php:34\n\
    Stack trace:\n#0 /tmp/tmpdgalgsgk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdgalgsgk.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $i = 0;\n  foreach ($arr as $x) {\n    $digits = $x < 0 ? str_split($x\
    \ * -1) : str_split($x);\n    if (array_sum($digits) > 0) {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\nassert(count_nums([]) == 0);\nassert(count_nums([-1,\
    \ 11, -11]) == 1);\nassert(count_nums([1, 1, 2]) == 3);\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): assert(count_nums([-1, 11, -11]) == 1) failed in /tmp/tmpckmolspk.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpckmolspk.php:30\n\
    Stack trace:\n#0 /tmp/tmpckmolspk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpckmolspk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5sq4xzyf.php:17\n\
    Stack trace:\n#0 /tmp/tmp5sq4xzyf.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5sq4xzyf.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf08pedpk.php:20\n\
    Stack trace:\n#0 /tmp/tmpf08pedpk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpf08pedpk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $i) {\n    $sum = array_sum(str_split(abs($i)));\n\
    \    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1mb8hfh.php:26\n\
    Stack trace:\n#0 /tmp/tmpx1mb8hfh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpx1mb8hfh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $number) {\n        if ($number < 0)\
    \ {\n            $number = -1 * $number;\n        }\n        $string = (string)\
    \ $number;\n        $sum = 0;\n        for ($i = 0; $i < strlen($string); $i++)\
    \ {\n            $sum += $string[$i];\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0979bfn.php:32\n\
    Stack trace:\n#0 /tmp/tmp_0979bfn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_0979bfn.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  $sum_digits = 0;\n  foreach ($arr as $value) {\n    $str\
    \ = strval($value);\n    if ($value < 0) {\n      $sum_digits += $str[1];\n  \
    \  } else {\n      $sum_digits += $str[0];\n    }\n    if ($sum_digits > 0) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\necho count_nums([-1, 11, -11]);\n\
    echo \"\\n\";\necho count_nums([1, 1, 2]);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy0sqy37f.php:36\n\
    Stack trace:\n#0 /tmp/tmpy0sqy37f.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpy0sqy37f.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    if (count($arr) == 0) {\n        return 0;\n    }\n\n    $count = 0;\n\
    \    for ($i = 0; $i < count($arr); $i++) {\n        $count += (signed_sum($arr[$i])\
    \ > 0) ? 1 : 0;\n    }\n\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function signed_sum()\
    \ in /tmp/tmpi9hjeuzu.php:16\nStack trace:\n#0 /tmp/tmpi9hjeuzu.php(23): count_nums(Array)\n\
    #1 /tmp/tmpi9hjeuzu.php(28): candidate(Array)\n#2 /tmp/tmpi9hjeuzu.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi9hjeuzu.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpefq5od_l.php:16\n\
    Stack trace:\n#0 /tmp/tmpefq5od_l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpefq5od_l.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    if (count($arr) == 0) {\n        return 0;\n    }\n    $cnt = 0;\n  \
    \  foreach ($arr as $i) {\n        $num = abs($i);\n        $sum = 0;\n      \
    \  while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $cnt++;\n        }\n\
    \    }\n    return $cnt;\n}\n\necho count_nums([]) . PHP_EOL;\necho count_nums([-1,\
    \ 11, -11]) . PHP_EOL;\necho count_nums([1, 1, 2]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu83w07te.php:37\n\
    Stack trace:\n#0 /tmp/tmpu83w07te.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpu83w07te.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t// Your code here\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_eyp80c.php:17\n\
    Stack trace:\n#0 /tmp/tmpm_eyp80c.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpm_eyp80c.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $signed_digits\
    \ = str_split($arr[$i]);\n    for ($j = 0; $j < count($signed_digits); $j++) {\n\
    \      $sum += $signed_digits[$j];\n    }\n    if ($sum > 0) {\n      $cnt++;\n\
    \    }\n    $sum = 0;\n  }\n  return $cnt;\n}\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplj78vo9d.php:28\n\
    Stack trace:\n#0 /tmp/tmplj78vo9d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplj78vo9d.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\tfor ($i =\
    \ 0; $i < strlen($value); $i++) {\n\t\t\t$sum += $value[$i];\n\t\t}\n\t\tif ($sum\
    \ > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eie1zm2.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eie1zm2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1eie1zm2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = intval($num /\
    \ 10);\n    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvxb4wir.php:30\n\
    Stack trace:\n#0 /tmp/tmpxvxb4wir.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxvxb4wir.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num == 0) {\n      continue;\n\
    \    }\n    $numStr = (string) abs($num);\n    $numArr = str_split($numStr);\n\
    \    $sum = array_sum($numArr);\n    if ($sum > 0) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprgie4yx4.php:31\n\
    Stack trace:\n#0 /tmp/tmprgie4yx4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprgie4yx4.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $sum = 0;\n\
    \    if ($arr[$i] < 0) {\n      $sum += ($arr[$i] % 10) * -1;\n      $arr[$i]\
    \ = -1 * (floor($arr[$i] / 10));\n    }\n    while ($arr[$i] > 0) {\n      $sum\
    \ += $arr[$i] % 10;\n      $arr[$i] = floor($arr[$i] / 10);\n    }\n    if ($sum\
    \ > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nassert(count_nums([])\
    \ == 0);\nassert(count_nums([-1, 11, -11]) == 1);\nassert(count_nums([1, 1, 2])\
    \ == 3);\nassert(count_nums([10, -10, 1, -1, -1, 2, 3, -2, -3]) == 5);\nassert(count_nums([-999,\
    \ 999, 1, -1, -1, -1, -1, 2, -2, -2, 3, -3, -3]) == 6);\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): assert(count_nums([-1, 11, -11]) == 1) failed in /tmp/tmp7sse3zac.php\
    \ on line 29\n\nWarning: assert(): assert(count_nums([10, -10, 1, -1, -1, 2, 3,\
    \ -2, -3]) == 5) failed in /tmp/tmp7sse3zac.php on line 31\n\nWarning: assert():\
    \ assert(count_nums([-999, 999, 1, -1, -1, -1, -1, 2, -2, -2, 3, -3, -3]) == 6)\
    \ failed in /tmp/tmp7sse3zac.php on line 32\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp7sse3zac.php:40\nStack trace:\n#0 /tmp/tmp7sse3zac.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7sse3zac.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // Your code here\n    $n = 0;\n    foreach ($arr as $key => $value)\
    \ {\n        $n += $value < 0 ? $value % 10 : $value % 10;\n        while ($value\
    \ != 0) {\n            $value = (int)($value / 10);\n            $n += $value\
    \ < 0 ? $value % 10 : $value % 10;\n        }\n    }\n    return $n;\n}\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8zowios9.php:27\n\
    Stack trace:\n#0 /tmp/tmp8zowios9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8zowios9.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t// your code here\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhqpdhnl.php:17\n\
    Stack trace:\n#0 /tmp/tmpxhqpdhnl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxhqpdhnl.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$ret = 0;\n\tforeach ($arr as $n) {\n\t\t$ret += sum($n) > 0 ? 1 : 0;\n\
    \t}\n\treturn $ret;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum() in /tmp/tmppnhav6g2.php:12\n\
    Stack trace:\n#0 /tmp/tmppnhav6g2.php(17): count_nums(Array)\n#1 /tmp/tmppnhav6g2.php(22):\
    \ candidate(Array)\n#2 /tmp/tmppnhav6g2.php(31): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmppnhav6g2.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ < 0) {\n            $value = $value * -1;\n        }\n        $digitSum = 0;\n\
    \        while ($value > 0) {\n            $digitSum += $value % 10;\n       \
    \     $value = floor($value / 10);\n        }\n        if ($digitSum > 0) {\n\
    \            $result++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2oozpzjk.php:33\n\
    Stack trace:\n#0 /tmp/tmp2oozpzjk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2oozpzjk.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $counter = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n  \
    \      if ($value < 0) {\n            $value = $value * -1;\n            $sum\
    \ = $sum + ($value % 10);\n            $value = $value / 10;\n        }\n    \
    \    while ($value > 0) {\n            $sum = $sum + ($value % 10);\n        \
    \    $value = $value / 10;\n        }\n        if ($sum > 0) {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kbjbbi1.php:35\n\
    Stack trace:\n#0 /tmp/tmp9kbjbbi1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9kbjbbi1.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // STUDENT CODE HERE\n    return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunt_k3o_.php:21\n\
    Stack trace:\n#0 /tmp/tmpunt_k3o_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpunt_k3o_.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$result = 0;\n\tforeach ($arr as $int) {\n\t\tif (is_int($int)) {\n\t\t\
    \tif ($int < 0) {\n\t\t\t\t$int = $int * -1;\n\t\t\t}\n\t\t\t$nums = str_split($int);\n\
    \t\t\t$sum = 0;\n\t\t\tforeach ($nums as $num) {\n\t\t\t\t$sum += $num;\n\t\t\t\
    }\n\t\t\tif ($sum > 0) {\n\t\t\t\t$result++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplh1uuc_4.php:35\n\
    Stack trace:\n#0 /tmp/tmplh1uuc_4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmplh1uuc_4.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$result = 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\t$digits\
    \ = str_split(abs($value));\n\t\tforeach ($digits as $digit) {\n\t\t\t$sum +=\
    \ $digit;\n\t\t}\n\t\tif ($sum != 0) {\n\t\t\t$result++;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5zbapslh.php:29\n\
    Stack trace:\n#0 /tmp/tmp5zbapslh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5zbapslh.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $num = abs($num);\n\
    \        $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0lkqelq.php:30\n\
    Stack trace:\n#0 /tmp/tmpa0lkqelq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa0lkqelq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $item) {\n    $sum = 0;\n    $item_to_check\
    \ = $item;\n    if ($item < 0) {\n      $item_to_check = abs($item);\n      $sum\
    \ += -1;\n    }\n    $num_as_string = strval($item_to_check);\n    for ($i = 0;\
    \ $i < strlen($num_as_string); $i++) {\n      $sum += intval($num_as_string[$i]);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnaon8yub.php:35\n\
    Stack trace:\n#0 /tmp/tmpnaon8yub.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnaon8yub.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  // YOUR CODE HERE\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yuai_h4.php:17\n\
    Stack trace:\n#0 /tmp/tmp1yuai_h4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1yuai_h4.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    if (!empty($arr)) {\n        $count = 0;\n        foreach ($arr as $value)\
    \ {\n            $abs = str_split(abs($value));\n            $sum = array_sum($abs);\n\
    \            if ($sum > 0) {\n                $count++;\n            }\n     \
    \   }\n        return $count;\n    } else {\n        return 0;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptejhvust.php:31\n\
    Stack trace:\n#0 /tmp/tmptejhvust.php(40): test()\n#1 {main}\n  thrown in /tmp/tmptejhvust.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $v) {\n        $sum = 0;\n       \
    \ $v_abs = abs($v);\n        while ($v_abs > 0) {\n            $sum += $v_abs\
    \ % 10;\n            $v_abs = floor($v_abs / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $result++;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa3n1r9xp.php:31\n\
    Stack trace:\n#0 /tmp/tmpa3n1r9xp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpa3n1r9xp.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $str = strval($num);\n\
    \    for ($i = 0; $i < strlen($str); $i++) {\n      $sum += intval($str[$i]);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_t1enru.php:29\n\
    Stack trace:\n#0 /tmp/tmp3_t1enru.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3_t1enru.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  //count sum for each element of the array\n  $count = 0;\n  foreach ($arr\
    \ as $number) {\n    $sum = 0;\n    //if number is negative, make it positive\
    \ and add -1 to sum\n    if ($number < 0) {\n      $number = -$number;\n     \
    \ $sum++;\n    }\n    //go through the digits of the number\n    while ($number\
    \ > 0) {\n      $sum += $number % 10;\n      $number = (int)($number / 10);\n\
    \    }\n    //if sum > 0, increment count\n    if ($sum > 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\n$arr = array(1, 2, 3, -1, -2, -3);\necho count_nums($arr);\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdyn9528r.php:41\n\
    Stack trace:\n#0 /tmp/tmpdyn9528r.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpdyn9528r.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $val) {\n    $sum = 0;\n    if ($val <\
    \ 0) {\n      $sum += abs($val) % 10;\n      $val = -floor(abs($val) / 10);\n\
    \    }\n    while ($val > 0) {\n      $sum += $val % 10;\n      $val = floor($val\
    \ / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiab0j4ds.php:34\n\
    Stack trace:\n#0 /tmp/tmpiab0j4ds.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpiab0j4ds.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $num = abs($num);\n    $sum\
    \ = 0;\n    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num\
    \ / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n\necho count_nums([-1, 11, -11]) . \"\\n\";\necho count_nums([1, 1, 2]) . \"\
    \\n\";\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5npke5lp.php:34\n\
    Stack trace:\n#0 /tmp/tmp5npke5lp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5npke5lp.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $value) {\n        $digits = str_split(abs($value));\n\
    \        $digitsSum = array_sum($digits);\n        if ($digitsSum > 0) {\n   \
    \         $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd494vwkn.php:26\n\
    Stack trace:\n#0 /tmp/tmpd494vwkn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpd494vwkn.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $item) {\n    if ($item < 0) {\n      $item\
    \ = abs($item);\n      $count = $count + ($item % 10);\n      $item = $item /\
    \ 10;\n      $count = $count + ($item % 10);\n      $item = $item / 10;\n    \
    \  $count = $count + ($item % 10);\n    } else {\n      $count = $count + ($item\
    \ % 10);\n      $item = $item / 10;\n      $count = $count + ($item % 10);\n \
    \     $item = $item / 10;\n      $count = $count + ($item % 10);\n    }\n  }\n\
    \  return $count;\n}\necho count_nums([]) . \" == 0\" . PHP_EOL;\necho count_nums([-1,\
    \ 11, -11]) . \" == 1\" . PHP_EOL;\necho count_nums([1, 1, 2]) . \" == 3\" . PHP_EOL;\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0 == 0\n5 == 1\n4 == 3\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpyc4n6jyv.php:38\nStack trace:\n#0 /tmp/tmpyc4n6jyv.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmpyc4n6jyv.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$i = 0;\n\t$arrlength = count($arr);\n\tfor ($x = 0; $x < $arrlength; $x++)\
    \ {\n\t\t$string = (string)$arr[$x];\n\t\t$i = $i + strlen($string);\n\t}\n\t\
    return $i;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqnuwtqg.php:25\n\
    Stack trace:\n#0 /tmp/tmpbqnuwtqg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbqnuwtqg.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tforeach ($arr as $number) {\n\t\tif (sum_digits($number)\
    \ > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_digits()\
    \ in /tmp/tmp2508mkb2.php:12\nStack trace:\n#0 /tmp/tmp2508mkb2.php(20): count_nums(Array)\n\
    #1 /tmp/tmp2508mkb2.php(25): candidate(Array)\n#2 /tmp/tmp2508mkb2.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2508mkb2.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ >= 0) {\n            $str = (string)$value;\n            $sum = 0;\n       \
    \     for ($i = 0; $i < strlen($str); $i++) {\n                $sum += $str[$i];\n\
    \            }\n            if ($sum > 0) {\n                $count++;\n     \
    \       }\n        } else {\n            $str = (string)$value;\n            $str\
    \ = ltrim($str, '-');\n            $sum = -$str[0];\n            for ($i = 1;\
    \ $i < strlen($str); $i++) {\n                $sum += $str[$i];\n            }\n\
    \            if ($sum > 0) {\n                $count++;\n            }\n     \
    \   }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // Complete\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4pg28f8g.php:18\n\
    Stack trace:\n#0 /tmp/tmp4pg28f8g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4pg28f8g.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $value) {\n        $temp_sum = 0;\n \
    \       $value = abs($value);\n        while ($value != 0) {\n            $temp_sum\
    \ += $value % 10;\n            $value = (int)($value / 10);\n        }\n     \
    \   if ($temp_sum > 0) {\n            $sum++;\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpob4xtvdm.php:30\n\
    Stack trace:\n#0 /tmp/tmpob4xtvdm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpob4xtvdm.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // Good luck!\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnfik8i8.php:17\n\
    Stack trace:\n#0 /tmp/tmpvnfik8i8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvnfik8i8.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $item) {\n        $digits_sum = 0;\n\
    \        if ($item < 0) {\n            $item = str_replace('-', '', $item);\n\
    \        }\n        while ($item) {\n            $digits_sum += $item % 10;\n\
    \            $item = floor($item / 10);\n        }\n        if ($digits_sum >\
    \ 0) {\n            $result++;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv2kgjo7.php:32\n\
    Stack trace:\n#0 /tmp/tmpuv2kgjo7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpuv2kgjo7.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    $sums = [];\n    for ($i = 0; $i < count($arr); $i++)\
    \ {\n        if ($arr[$i] < 0) {\n            $sums[$i] = abs($arr[$i]) % 10;\n\
    \        } else {\n            $sums[$i] = $arr[$i] % 10;\n        }\n    }\n\
    \    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n   \
    \         $sums[$i] += floor(abs($arr[$i]) / 10);\n        } else {\n        \
    \    $sums[$i] += floor($arr[$i] / 10);\n        }\n    }\n    for ($i = 0; $i\
    \ < count($arr); $i++) {\n        if ($sums[$i] > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6oo9liqo.php:39\n\
    Stack trace:\n#0 /tmp/tmp6oo9liqo.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp6oo9liqo.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // your code goes here\n}\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4u_uh22x.php:17\n\
    Stack trace:\n#0 /tmp/tmp4u_uh22x.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp4u_uh22x.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  // YOUR CODE HERE\n  $count = 0;\n  foreach ($arr as $key => $value) {\n\
    \    if ($value >= 0) {\n      if (str_split($value) > 0) {\n        $count++;\n\
    \      }\n    } else {\n      if (str_split($value) < 0) {\n        $count++;\n\
    \      }\n    }\n  }\n  return $count;\n}\n\n$array = array(1, 2, 3, 4, 5, 6,\
    \ -1, -2, -3, -4, -5, -6);\necho count_nums($array);\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppj5f8u90.php:34\n\
    Stack trace:\n#0 /tmp/tmppj5f8u90.php(43): test()\n#1 {main}\n  thrown in /tmp/tmppj5f8u90.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    if (empty($arr)) {\n        return 0;\n    }\n    $count = 0;\n    foreach\
    \ ($arr as $number) {\n        $number = str_split($number);\n        $countNegative\
    \ = 0;\n        foreach ($number as $digit) {\n            if ($digit < 0) {\n\
    \                $countNegative++;\n            }\n        }\n        if (array_sum($number)\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfsfoy4y.php:34\n\
    Stack trace:\n#0 /tmp/tmpnfsfoy4y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnfsfoy4y.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $total = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $num\
    \ = $arr[$i];\n        if ($num < 0) {\n            $num = -1 * $num;\n      \
    \  }\n        $digits_sum = 0;\n        while ($num > 0) {\n            $digits_sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($digits_sum\
    \ > 0) {\n            $total++;\n        }\n    }\n    return $total;\n}\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xn_7c2l.php:33\n\
    Stack trace:\n#0 /tmp/tmp_xn_7c2l.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_xn_7c2l.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  return array_reduce($arr, function($count, $x) {\n    return $count + has_positive_sum_of_digits($x);\n\
    \  }, 0);\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_positive_sum_of_digits()\
    \ in /tmp/tmpyf7yp_5a.php:11\nStack trace:\n#0 [internal function]: {closure}(0,\
    \ -1)\n#1 /tmp/tmpyf7yp_5a.php(12): array_reduce(Array, Object(Closure), 0)\n\
    #2 /tmp/tmpyf7yp_5a.php(16): count_nums(Array)\n#3 /tmp/tmpyf7yp_5a.php(21): candidate(Array)\n\
    #4 /tmp/tmpyf7yp_5a.php(30): test()\n#5 {main}\n  thrown in /tmp/tmpyf7yp_5a.php\
    \ on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // TODO\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tgku2ka.php:17\n\
    Stack trace:\n#0 /tmp/tmp1tgku2ka.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1tgku2ka.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  // WRITE CODE HERE\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu52jmmmx.php:18\n\
    Stack trace:\n#0 /tmp/tmpu52jmmmx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpu52jmmmx.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    // TODO: Write code here\n    $sum_of_digits_greater_than_zero = 0;\n\
    \    foreach ($arr as $number) {\n        $number_of_digits = strlen(abs($number));\n\
    \        $digits_sum = 0;\n        for ($i = 0; $i < $number_of_digits; $i++)\
    \ {\n            $digits_sum += $number % 10;\n            $number = $number /\
    \ 10;\n        }\n        if ($digits_sum > 0) {\n            $sum_of_digits_greater_than_zero++;\n\
    \        }\n    }\n    return $sum_of_digits_greater_than_zero;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjh5lajh.php:36\n\
    Stack trace:\n#0 /tmp/tmpyjh5lajh.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyjh5lajh.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    return array_reduce($arr, function($count, $el){\n        return $count\
    \ + intval(array_sum(str_split($el)));\n    }, 0);\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1co7jnp.php:20\n\
    Stack trace:\n#0 /tmp/tmpq1co7jnp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq1co7jnp.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa9u_pd7q.php:20\n\
    Stack trace:\n#0 /tmp/tmpa9u_pd7q.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpa9u_pd7q.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $count += ($num <\
    \ 0) ? (($num % 10) + 1) : ($num % 10);\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkxdbt0av.php:22\n\
    Stack trace:\n#0 /tmp/tmpkxdbt0av.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkxdbt0av.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuvu_c72l.php:17\n\
    Stack trace:\n#0 /tmp/tmpuvu_c72l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpuvu_c72l.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$n = count($arr);\n\tif ($n <= 0) {\n\t\treturn 0;\n\t}\n\t$count = 0;\n\
    \tfor ($i = 0; $i < $n; $i++) {\n\t\t$sum = 0;\n\t\t$num = $arr[$i];\n\t\tif ($num\
    \ < 0) {\n\t\t\t$num = -$num;\n\t\t\t$sum = $sum - ($num % 10);\n\t\t\t$num =\
    \ intval($num / 10);\n\t\t}\n\t\twhile ($num > 0) {\n\t\t\t$sum = $sum + ($num\
    \ % 10);\n\t\t\t$num = intval($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t\
    $count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\necho count_nums([]) . \"\\n\";\n\
    echo count_nums([-1, 11, -11]) . \"\\n\";\necho count_nums([1, 1, 2]) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n1\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqezsuh4.php:47\n\
    Stack trace:\n#0 /tmp/tmpoqezsuh4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpoqezsuh4.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $digits_sum = 0;\n\
    \        while ($num) {\n            $digits_sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        if ($digits_sum > 0) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$counter = 0;\n\tforeach ($arr as $number) {\n\t\t$sdigit = $number < 0\
    \ ? -1 * $number % 10 : $number % 10;\n\t\t$number = (int) ($number / 10);\n\t\
    \twhile ($number != 0) {\n\t\t\t$sdigit += $number % 10;\n\t\t\t$number = (int)\
    \ ($number / 10);\n\t\t}\n\t\tif ($sdigit > 0) $counter++;\n\t}\n\treturn $counter;\n\
    }\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjwu0dlz.php:28\n\
    Stack trace:\n#0 /tmp/tmptjwu0dlz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptjwu0dlz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa3hogqaa.php:20\n\
    Stack trace:\n#0 /tmp/tmpa3hogqaa.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpa3hogqaa.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\treturn array_sum(array_map(function($n) {\n\t\treturn $n > 0 ? $n : -$n;\n\
    \t}, $arr));\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprti21sie.php:21\n\
    Stack trace:\n#0 /tmp/tmprti21sie.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprti21sie.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $elem) {\n    $elem = abs($elem);\n   \
    \ $sum = 0;\n    while ($elem > 0) {\n      $sum += $elem % 10;\n      $elem =\
    \ floor($elem / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\n\nassert(count_nums([]) == 0);\nassert(count_nums([-1, 11,\
    \ -11]) == 1);\nassert(count_nums([1, 1, 2]) == 3);\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): assert(count_nums([-1, 11, -11]) == 1) failed in /tmp/tmpcujy0dlf.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcujy0dlf.php:35\n\
    Stack trace:\n#0 /tmp/tmpcujy0dlf.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpcujy0dlf.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocs5fuzn.php:17\n\
    Stack trace:\n#0 /tmp/tmpocs5fuzn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpocs5fuzn.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dyaw94q.php:17\n\
    Stack trace:\n#0 /tmp/tmp3dyaw94q.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3dyaw94q.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t// TODO: Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxgtneie.php:17\n\
    Stack trace:\n#0 /tmp/tmphxgtneie.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphxgtneie.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  // TODO: your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafjenjwo.php:18\n\
    Stack trace:\n#0 /tmp/tmpafjenjwo.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpafjenjwo.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  if (!sizeof($arr)) {\n    return 0;\n  }\n  return array_reduce($arr, function($carry,\
    \ $item) {\n    $digits = str_split(abs($item));\n    $sum = array_reduce($digits,\
    \ function($carry, $item) {\n      return $carry + $item;\n    });\n    return\
    \ $carry + ($sum > 0 ? 1 : 0);\n  }, 0);\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1r66yvm.php:28\n\
    Stack trace:\n#0 /tmp/tmpo1r66yvm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpo1r66yvm.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $num_count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $sign =\
    \ 1;\n    if ($num < 0) {\n      $sign = -1;\n      $num = $num * -1;\n    }\n\
    \    $digits = str_split($num);\n    foreach ($digits as $digit) {\n      $sum\
    \ += $digit;\n    }\n    if ($sum * $sign > 0) {\n      $num_count += 1;\n   \
    \ }\n  }\n  return $num_count;\n}\n\necho count_nums([]) . \"\\n\";\necho count_nums([-1,\
    \ 11, -11]) . \"\\n\";\necho count_nums([1, 1, 2]) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n1\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12hlr3mx.php:43\n\
    Stack trace:\n#0 /tmp/tmp12hlr3mx.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp12hlr3mx.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $sum = 0;\n\
    \    for ($j = 0; $j < strlen(abs($arr[$i])); $j++) {\n      $sum += $arr[$i]\
    \ % 10;\n      $arr[$i] = $arr[$i] / 10;\n    }\n    if ($sum > 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nif (count_nums([]) == 0 &&\n    count_nums([-1,\
    \ 11, -11]) == 1 &&\n    count_nums([1, 1, 2]) == 3) {\n  echo \"Pass\\n\";\n\
    } else {\n  echo \"Fail\\n\";\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Pass\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpef3lx_5q.php:40\n\
    Stack trace:\n#0 /tmp/tmpef3lx_5q.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpef3lx_5q.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  // === your code here ===\n}\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpks0ik11i.php:17\n\
    Stack trace:\n#0 /tmp/tmpks0ik11i.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpks0ik11i.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $x =\
    \ str_split($arr[$i]);\n        $sum = 0;\n        for ($j = 0; $j < count($x);\
    \ $j++) {\n            $sum += $x[$j];\n        }\n        if ($sum > 0) {\n \
    \           $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmph05v9pcj.php on line\
    \ 15\n\nWarning: A non-numeric value encountered in /tmp/tmph05v9pcj.php on line\
    \ 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph05v9pcj.php:30\n\
    Stack trace:\n#0 /tmp/tmph05v9pcj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph05v9pcj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  // TODO: Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpef3msgy7.php:18\n\
    Stack trace:\n#0 /tmp/tmpef3msgy7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpef3msgy7.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $newarr = array();\n    $num = 0;\n    foreach ($arr as $key => $value)\
    \ {\n        if ($value < 0) {\n            $value = -1 * $value;\n        }\n\
    \        $newarr[$key] = $value;\n    }\n    foreach ($newarr as $key => $value)\
    \ {\n        $sum = 0;\n        while ($value != 0) {\n            $sum += $value\
    \ % 10;\n            $value = $value / 10;\n        }\n        if ($sum > 0) {\n\
    \            $num++;\n        }\n    }\n    return $num;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6xtrtuan.php:37\n\
    Stack trace:\n#0 /tmp/tmp6xtrtuan.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6xtrtuan.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaspvx1ij.php:16\n\
    Stack trace:\n#0 /tmp/tmpaspvx1ij.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpaspvx1ij.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyti7rga_.php:17\n\
    Stack trace:\n#0 /tmp/tmpyti7rga_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpyti7rga_.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\tif (count($arr) == 0) {\n\t\treturn 0;\n\t} else {\n\t\t$count = 0;\n\t\
    \tfor ($i = 0; $i < count($arr); $i++) {\n\t\t\t$sum = 0;\n\t\t\tif ($arr[$i]\
    \ < 0) {\n\t\t\t\t$arr[$i] = abs($arr[$i]);\n\t\t\t\t$sum += $arr[$i] % 10;\n\t\
    \t\t\t$arr[$i] = floor($arr[$i] / 10);\n\t\t\t}\n\t\t\twhile ($arr[$i] > 0) {\n\
    \t\t\t\t$sum += $arr[$i] % 10;\n\t\t\t\t$arr[$i] = floor($arr[$i] / 10);\n\t\t\
    \t}\n\t\t\tif ($sum > 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\
    \t}\n}\n\necho count_nums([-1, 11, -11]) . PHP_EOL;\necho count_nums([1, 1, 2])\
    \ . PHP_EOL;\necho count_nums([]) . PHP_EOL;\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n3\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ojg2x6q.php:43\n\
    Stack trace:\n#0 /tmp/tmp2ojg2x6q.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2ojg2x6q.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tforeach ($arr as $num) {\n\t\t$digits = abs($num);\n\t\t\
    $sum = 0;\n\t\twhile ($digits > 0) {\n\t\t\t$sum += $digits % 10;\n\t\t\t$digits\
    \ = floor($digits / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\
    \t}\n\treturn $count;\n}\n\necho count_nums([]) . \"\\n\"; // 0\necho count_nums([-1,\
    \ 11, -11]) . \"\\n\"; // 1\necho count_nums([1, 1, 2]) . \"\\n\"; // 3\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxfneq72.php:34\n\
    Stack trace:\n#0 /tmp/tmpaxfneq72.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpaxfneq72.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $digits = [];\n  \
    \      if ($num < 0) {\n            $digits[] = $num % 10;\n            $num =\
    \ $num / -10;\n        }\n        while ($num > 0) {\n            $digits[] =\
    \ $num % 10;\n            $num = $num / 10;\n        }\n        $sum = 0;\n  \
    \      foreach ($digits as $digit) {\n            $sum += $digit;\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_6nmdq4.php:42\n\
    Stack trace:\n#0 /tmp/tmpf_6nmdq4.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpf_6nmdq4.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $number) {\n        $number = abs($number);\n\
    \        while ($number > 0) {\n            $count += $number % 10;\n        \
    \    $number = floor($number / 10);\n        }\n    }\n    return $count;\n}\n\
    echo count_nums([]) . \"\\n\";\necho count_nums([-1, 11, -11]) . \"\\n\";\necho\
    \ count_nums([1, 1, 2]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n5\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9kdokp1.php:29\n\
    Stack trace:\n#0 /tmp/tmpg9kdokp1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg9kdokp1.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t// debug\n\t// print_r($arr);\n\t$count = 0;\n\t$digits = array();\n\t\
    foreach ($arr as $value) {\n\t\t$digits = str_split(abs($value));\n\t\t// debug\n\
    \t\t// print_r($digits);\n\t\t$sum = 0;\n\t\tforeach ($digits as $digit) {\n\t\
    \t\t$sum += $digit;\n\t\t}\n\t\t// debug\n\t\t// echo $sum;\n\t\tif ($sum > 0)\
    \ {\n\t\t\t$count++;\n\t\t}\n\t}\n\t// debug\n\t// echo $count;\n\treturn $count;\n\
    }\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvw1vyqh.php:38\n\
    Stack trace:\n#0 /tmp/tmpsvw1vyqh.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpsvw1vyqh.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $i = 0;\n  foreach ($arr as $value) {\n    $sum = 0;\n    if ($value <\
    \ 0) {\n      $value = $value * -1;\n    }\n    while ($value > 0) {\n      $sum\
    \ += $value % 10;\n      $value = $value / 10;\n    }\n    if ($sum > 0) {\n \
    \     $i += 1;\n    }\n  }\n  return $i;\n}\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgu_kwgpu.php:32\n\
    Stack trace:\n#0 /tmp/tmpgu_kwgpu.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgu_kwgpu.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $count += ($num % 10 + 1);\n     \
    \       $num = floor($num / 10);\n        }\n        while ($num > 0) {\n    \
    \        $count += ($num % 10);\n            $num = floor($num / 10);\n      \
    \  }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkig_d96u.php:30\n\
    Stack trace:\n#0 /tmp/tmpkig_d96u.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkig_d96u.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  return 0;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd7zrin2s.php:20\n\
    Stack trace:\n#0 /tmp/tmpd7zrin2s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpd7zrin2s.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n\t$count = 0;\n\tforeach ($arr as $num) {\n\t\t$sum = 0;\n\t\t$num = abs($num);\n\
    \t\t$i = 10;\n\t\t$digit = $num % $i;\n\t\twhile ($digit != $num) {\n\t\t\t$sum\
    \ += $digit;\n\t\t\t$num = floor($num / $i);\n\t\t\t$digit = $num % $i;\n\t\t\
    }\n\t\t$sum += $digit;\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0wizmewx.php:34\n\
    Stack trace:\n#0 /tmp/tmp0wizmewx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0wizmewx.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $i) {\n        if ($i < 0) {\n   \
    \         $i = -$i;\n        }\n        $sum = 0;\n        while ($i > 0) {\n\
    \            $sum += $i % 10;\n            $i = (int)($i / 10);\n        }\n \
    \       if ($sum > 0) {\n            $result++;\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvn2su02.php:32\n\
    Stack trace:\n#0 /tmp/tmpsvn2su02.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsvn2su02.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception

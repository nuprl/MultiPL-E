name: HumanEval_35_max_element
language: php
results:
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (empty($l)) {\n        return null;\n\
    \    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $r = $l[0];\n  foreach ($l as $v) {\n  \
    \  if ($v > $r) {\n      $r = $v;\n    }\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $maximum = null;\n    foreach ($l as $element)\
    \ {\n        if ($maximum === null) {\n            $maximum = $element;\n    \
    \    } else {\n            if ($element > $maximum) {\n                $maximum\
    \ = $element;\n            }\n        }\n    }\n    return $maximum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  foreach ($l as $e) {\n\
    \    if ($e > $max) {\n      $max = $e;\n    }\n  }\n  return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    // TODO: find out the max element in the\
    \ list.\n    // Hint: use while-loop.\n    $max_val = $l[0];\n    $i = 1;\n  \
    \  while ($i<count($l)) {\n        if ($l[$i] > $max_val) {\n            $max_val\
    \ = $l[$i];\n        }\n        $i++;\n    }\n    return $max_val;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (empty($l)) {\n        return null;\n\
    \    } else {\n        return max($l);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $item)\
    \ {\n        if ($item > $max) {\n            $max = $item;\n        }\n    }\n\
    \    return $max;\n}\necho max_element([1, 2, 3]) . \"\\n\";\necho max_element([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "3\n123\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if ($l) {\n        $m = max_element(tl($l));\n\
    \        return hd($l) > $m ? hd($l) : $m;\n    }\n    return null;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function tl() in /tmp/tmpsnkygk69.php:9\n\
    Stack trace:\n#0 /tmp/tmpsnkygk69.php(16): max_element(Array)\n#1 /tmp/tmpsnkygk69.php(20):\
    \ candidate(Array)\n#2 /tmp/tmpsnkygk69.php(24): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpsnkygk69.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ null;\n    }\n    $ret = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $ret) {\n            $ret = $l[$i];\n        }\n    }\n\
    \    return $ret;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $maximum = $l[0];\n    for ($i = 1; $i\
    \ < count($l); $i++) {\n        if ($l[$i] > $maximum) {\n            $maximum\
    \ = $l[$i];\n        }\n    }\n    return $maximum;\n}\n$max_element = max_element([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]);\necho $max_element;\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '123'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n}\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwldh7_zt.php:14\n\
    Stack trace:\n#0 /tmp/tmpwldh7_zt.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpwldh7_zt.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = 0;\n    foreach ($l as $value)\
    \ {\n        if ($value > $max) {\n            $max = $value;\n        }\n   \
    \ }\n    return $max;\n}\n\n$my_array = array(1, 2, 3);\necho max_element($my_array);\n\
    echo \"<br>\";\n$my_array = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\necho\
    \ max_element($my_array);\necho \"<br>\";\nfunction candidate(...$args) {\n  \
    \  return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: 3<br>123<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return head(sort($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function head() in /tmp/tmpeyywcd_3.php:8\n\
    Stack trace:\n#0 /tmp/tmpeyywcd_3.php(12): max_element(Array)\n#1 /tmp/tmpeyywcd_3.php(16):\
    \ candidate(Array)\n#2 /tmp/tmpeyywcd_3.php(20): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpeyywcd_3.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\tif (empty($l)) {\n\t\treturn NULL;\n\t}\n\
    \telse {\n\t\t$max = $l[0];\n\t\tfor ($i = 1; $i < count($l); $i++) {\n\t\t\t\
    if ($l[$i] > $max) {\n\t\t\t\t$max = $l[$i];\n\t\t\t}\n\t\t}\n\t\treturn $max;\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $c = null;\n    foreach ($l as $v) {\n\
    \        if ($c == null || $v > $c) {\n            $c = $v;\n        }\n    }\n\
    \    return $c;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $acc = 0;\n    foreach ($l as $n) {\n\
    \        if ($n > $acc) {\n            $acc = $n;\n        }\n    }\n    return\
    \ $acc;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $n = count($l);\n    if ($n == 0) {\n\
    \        return null;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < $n; $i++)\
    \ {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n   \
    \ }\n    return $max;\n}\n\nassert(123 == max_element([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 123, 1, -10]));\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (empty($l)) return 0;\n    $max = $l[0];\n\
    \    foreach ($l as $v) {\n        if ($v > $max) $max = $v;\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $len = count($l);\n  $max = $l[0];\n  for\
    \ ($i = 1; $i < $len; $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n\
    \    }\n  }\n  return $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return NULL;\n\
    \  }\n  $max = $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n    if ($l[$i]\
    \ > $max) {\n      $max = $l[$i];\n    }\n  }\n  return $max;\n}\n\nassert_options(ASSERT_BAIL,\
    \ 1);\nassert(max_element([1, 2, 3]) == 3);\nassert(max_element([5, 3, -5, 2,\
    \ -3, 3, 9, 0, 123, 1, -10]) == 123);\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $m = 0;\n    $i = 0;\n    while ($i <\
    \ count($l)) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n       \
    \ }\n        $i++;\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return reduce(\n        function($a, $b)\
    \ { return $a >= $b ? $a : $b; },\n        $l,\n        head($l)\n    );\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function reduce() in /tmp/tmpx5o966nx.php:8\n\
    Stack trace:\n#0 /tmp/tmpx5o966nx.php(16): max_element(Array)\n#1 /tmp/tmpx5o966nx.php(20):\
    \ candidate(Array)\n#2 /tmp/tmpx5o966nx.php(24): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpx5o966nx.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return false;\n\
    \  }\n  $m = $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n    if ($l[$i] >\
    \ $m) {\n      $m = $l[$i];\n    }\n  }\n  return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $m = $l[0];\n  foreach ($l as $n) {\n  \
    \  if ($n > $m) {\n      $m = $n;\n    }\n  }\n  return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return array_reduce($l, function($v, $w)\
    \ {\n    return $v > $w ? $v : $w;\n  });\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return array_reduce($l, function($acc, $x)\
    \ { return $x > $acc ? $x : $acc; }, $l[0]);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (count($l) > 0) {\n        return max($l);\n\
    \    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    // \n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps135ope0.php:16\n\
    Stack trace:\n#0 /tmp/tmps135ope0.php(20): test()\n#1 {main}\n  thrown in /tmp/tmps135ope0.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if ($l == []) {\n        return NULL;\n\
    \    } else {\n        $head = array_shift($l);\n        $tail_max = max_element($l);\n\
    \        if ($tail_max === NULL || $head > $tail_max) {\n            return $head;\n\
    \        } else {\n            return $tail_max;\n        }\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $l = array_unique($l);\n    sort($l);\n\
    \    return $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t// TODO\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_8j4xpk.php:16\n\
    Stack trace:\n#0 /tmp/tmpf_8j4xpk.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpf_8j4xpk.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return reduce(function($m, $e) { return\
    \ $m > $e ? $m : $e; }, $l);\n}\necho '<pre>';\nvar_dump(max_element([1, 2, 3]));\n\
    var_dump(max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\necho '</pre>';\n\
    \nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>\nFatal error: Uncaught Error: Call to undefined function reduce()\
    \ in /tmp/tmpjivh06dz.php:8\nStack trace:\n#0 /tmp/tmpjivh06dz.php(11): max_element(Array)\n\
    #1 {main}\n  thrown in /tmp/tmpjivh06dz.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = PHP_INT_MIN;\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $e)\
    \ {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $n = count($l);\n    $m = $l[0];\n   \
    \ for ($i = 1; $i < $n; $i++) {\n        if ($l[$i] > $m) {\n            $m =\
    \ $l[$i];\n        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $e) {\n\
    \        if ($max == NULL || $e > $max) {\n            $max = $e;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return reduce_left($l, function($a, $b)\
    \ {return $a > $b ? $a : $b;});\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function reduce_left()\
    \ in /tmp/tmpzb5f5z1n.php:8\nStack trace:\n#0 /tmp/tmpzb5f5z1n.php(12): max_element(Array)\n\
    #1 /tmp/tmpzb5f5z1n.php(16): candidate(Array)\n#2 /tmp/tmpzb5f5z1n.php(20): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzb5f5z1n.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $m = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $m) $m = $l[$i];\n  }\n  return $m;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $m = NULL;\n    foreach ($l as $i) {\n\
    \        if ($m === NULL || $i > $m) {\n            $m = $i;\n        }\n    }\n\
    \    return $m;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    // INSERT YOUR CODE HERE\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5zk3eah.php:16\n\
    Stack trace:\n#0 /tmp/tmpc5zk3eah.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpc5zk3eah.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (empty($l)) {\n        return null;\n\
    \    } else {\n        $max = $l[0];\n        for ($i = 1; $i < count($l); $i++)\
    \ {\n            if ($l[$i] > $max) {\n                $max = $l[$i];\n      \
    \      }\n        }\n        return $max;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $v)\
    \ {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\necho max_element([1, 2, 3]) . \"\\n\";\necho max_element([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "3\n123\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return count($l) ? max($l) : null;\n}\n\
    \nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t// if list is empty return NULL\n\tif (empty($l))\
    \ return NULL;\n\t// get first element as maximum\n\t$m = $l[0];\n\t// iterate\
    \ remaining elements\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\t// update maximum\
    \ value if current one is bigger\n\t\tif ($l[$i] > $m) $m = $l[$i];\n\t}\n\t//\
    \ return maximum value\n\treturn $m;\n}\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $i)\
    \ {\n        if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = null;\n    foreach ($l as $n) {\n\
    \        if (is_null($max) || $n > $max) {\n            $max = $n;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t// Your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91dohy6a.php:16\n\
    Stack trace:\n#0 /tmp/tmp91dohy6a.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp91dohy6a.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb3h8x6rd.php:15\n\
    Stack trace:\n#0 /tmp/tmpb3h8x6rd.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpb3h8x6rd.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (count($l) === 0) {\n        return\
    \ null;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $element)\
    \ {\n        if ($element > $max) {\n            $max = $element;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return $l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9t3vqc3s.php:16\n\
    Stack trace:\n#0 /tmp/tmp9t3vqc3s.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9t3vqc3s.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    $i = 0;\n    while ($i\
    \ < count($l)) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n \
    \       }\n        $i = $i + 1;\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = null;\n    for ($i = 0; $i < count($l);\
    \ $i++) {\n        if (is_null($max) || $l[$i] > $max) {\n            $max = $l[$i];\n\
    \        }\n    }\n    return $max;\n}\necho max_element([1, 2, 3]) . \"\\n\"\
    ;\necho max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n123\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  if ($l == null) return null;\n  $first =\
    \ first($l);\n  $rest = rest($l);\n  if ($rest == null) return $first;\n  return\
    \ max($first, max_element($rest));\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function first() in /tmp/tmp1ttp3c0x.php:9\n\
    Stack trace:\n#0 /tmp/tmp1ttp3c0x.php(16): max_element(Array)\n#1 /tmp/tmp1ttp3c0x.php(20):\
    \ candidate(Array)\n#2 /tmp/tmp1ttp3c0x.php(24): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp1ttp3c0x.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  if (empty($l)) return NULL;\n  $max = $l[0];\n\
    \  foreach ($l as $v) {\n    if ($v > $max) $max = $v;\n  }\n  return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t$max = 0;\n\tforeach ($l as $k) {\n\t\t\
    if ($k > $max) {\n\t\t\t$max = $k;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return reduce('max', $l);\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function reduce() in /tmp/tmpf1dn07lk.php:8\n\
    Stack trace:\n#0 /tmp/tmpf1dn07lk.php(12): max_element(Array)\n#1 /tmp/tmpf1dn07lk.php(16):\
    \ candidate(Array)\n#2 /tmp/tmpf1dn07lk.php(20): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpf1dn07lk.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $res = 0;\n    foreach ($l as $i) {\n\
    \        if ($i > $res) $res = $i;\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (is_null($l)) {\n        return null;\n\
    \    } else {\n        $value = max_element($l->rest);\n        if ($value < $l->first)\
    \ {\n            return $l->first;\n        } else {\n            return $value;\n\
    \        }\n    }\n}\necho max_element(\n    cons(1,\n        cons(2,\n      \
    \      cons(3,\n                null))));\necho max_element(\n    cons(5,\n  \
    \      cons(3,\n            cons(-5,\n                cons(2,\n              \
    \      cons(-3,\n                        cons(3,\n                           \
    \ cons(9,\n                                cons(0,\n                         \
    \           cons(123,\n                                        cons(1,\n     \
    \                                       cons(-10,\n                          \
    \                      null))))))))))));\n\nfunction candidate(...$args) {\n \
    \   return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cons() in /tmp/tmp9fcbtuwo.php:20\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmp9fcbtuwo.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = 0;\n    foreach ($l as $i) {\n\
    \        if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = 0;\n  foreach ($l as $item) {\n \
    \   if ($item > $max) {\n      $max = $item;\n    }\n  }\n  return $max;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0g0x6fgg.php:15\n\
    Stack trace:\n#0 /tmp/tmp0g0x6fgg.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp0g0x6fgg.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  if (empty($l)) {\n    return;\n  }\n  $a\
    \ = array_shift($l);\n  foreach ($l as $e) {\n    if ($e > $a) {\n      $a = $e;\n\
    \    }\n  }\n  return $a;\n}\n\n$l = [1, 2, 3];\nprint max_element($l);\n\n$l\
    \ = [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];\nprint max_element($l);\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '3123'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t$max = null;\n\tforeach ($l as $elt) {\n\
    \t\tif ($max === null || $elt > $max) {\n\t\t\t$max = $elt;\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  foreach ($l as $x) {\n\
    \    if ($x > $max) {\n      $max = $x;\n    }\n  }\n  return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = 0;\n  for ($i = 0; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = 0;\n    for ($i = 0; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $e) {\n\
    \        if ($max === NULL) {\n            $max = $e;\n        } else if ($e >\
    \ $max) {\n            $max = $e;\n        }\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if(empty($l)) {\n        return null;\n\
    \    }\n    $max = $l[0];\n    for($i = 1; $i < count($l); $i++) {\n        if($l[$i]\
    \ > $max) {\n            $max = $l[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if ($l == []) {\n        return 0;\n \
    \   } else {\n        return max($l[0], max_element(array_slice($l, 1)));\n  \
    \  }\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $x = $l[0];\n  foreach ($l as $v) {\n  \
    \  if ($v > $x) {\n      $x = $v;\n    }\n  }\n  return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $x = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $x) {\n            $x = $l[$i];\n        }\n \
    \   }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return array_reduce($l, function($a, $b)\
    \ {\n        return $a > $b ? $a : $b;\n    });\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (sizeof($l) == 0) {\n        return\
    \ NULL;\n    } else {\n        $max = $l[0];\n        foreach ($l as $item) {\n\
    \            if ($item > $max) {\n                $max = $item;\n            }\n\
    \        }\n        return $max;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return array_reduce($l, function($a, $b)\
    \ {\n        return max($a, $b);\n    });\n}\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $m = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n        }\n \
    \   }\n    return $m;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $m = $l[0];\n    foreach ($l as $item)\
    \ {\n        if ($item > $m) {\n            $m = $item;\n        }\n    }\n  \
    \  return $m;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = 0;\n  foreach ($l as $element) {\n\
    \    if ($element > $max) {\n      $max = $element;\n    }\n  }\n  return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return $l == array() ?\n           NULL\
    \ :\n           max($l);\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return reduce(function($m, $v) { return\
    \ max($m, $v); }, $l);\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function reduce() in /tmp/tmp6tuoi7jp.php:8\n\
    Stack trace:\n#0 /tmp/tmp6tuoi7jp.php(12): max_element(Array)\n#1 /tmp/tmp6tuoi7jp.php(16):\
    \ candidate(Array)\n#2 /tmp/tmp6tuoi7jp.php(20): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp6tuoi7jp.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return php_reduce($l, function($p, $c) {\
    \ return $p > $c ? $p : $c; });\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function php_reduce()\
    \ in /tmp/tmpx78ceuoc.php:8\nStack trace:\n#0 /tmp/tmpx78ceuoc.php(12): max_element(Array)\n\
    #1 /tmp/tmpx78ceuoc.php(16): candidate(Array)\n#2 /tmp/tmpx78ceuoc.php(20): test()\n\
    #3 {main}\n  thrown in /tmp/tmpx78ceuoc.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return reduce(function($max, $i) {\n   \
    \ return $i > $max ? $i : $max;\n  }, $l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function reduce() in /tmp/tmpf_lfgzhm.php:8\n\
    Stack trace:\n#0 /tmp/tmpf_lfgzhm.php(14): max_element(Array)\n#1 /tmp/tmpf_lfgzhm.php(18):\
    \ candidate(Array)\n#2 /tmp/tmpf_lfgzhm.php(22): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpf_lfgzhm.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmjjv674.php:15\n\
    Stack trace:\n#0 /tmp/tmpsmjjv674.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpsmjjv674.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    // your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmpkn56s5.php:16\n\
    Stack trace:\n#0 /tmp/tmpmpkn56s5.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpmpkn56s5.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = 0;\n    for ($i = 0; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max)\n            $max = $l[$i];\n    }\n   \
    \ return $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t$mx = 0;\n\tforeach ($l as $e) {\n\t\tif\
    \ ($e > $mx) {\n\t\t\t$mx = $e;\n\t\t}\n\t}\n\treturn $mx;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tforeach ($l as $key =>\
    \ $value) {\n\t\tif ($max < $value) {\n\t\t\t$max = $value;\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ null;\n    }\n    $max = $l[0];\n    foreach ($l as $x) {\n        if ($x >\
    \ $max) {\n            $max = $x;\n        }\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $k =>\
    \ $v) {\n        if ($max === NULL) {\n            $max = $v;\n        } else\
    \ if ($v > $max) {\n            $max = $v;\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $i)\
    \ {\n        if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = 0;\n    foreach ($l as $key =>\
    \ $value) {\n        if ($value > $max) {\n            $max = $value;\n      \
    \  }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  if (is_null($l)) {\n    return -1000;\n\
    \  }\n  else {\n    return max($l->first, max_element($l->rest));\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvdtj4z8w.php:20\n\
    Stack trace:\n#0 /tmp/tmpvdtj4z8w.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvdtj4z8w.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return array_reduce($l, function($res,\
    \ $e) {\n        return ($res === NULL) ? $e : max($res, $e);\n    });\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = 0;\n  for ($i = 0; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if(count($l) == 0) {\n        return NULL;\n\
    \    }\n    else {\n        $m = 0;\n        foreach($l as $i) {\n           \
    \ if($i > $m) {\n                $m = $i;\n            }\n        }\n        return\
    \ $m;\n    }\n}\n\n$arr1 = array(1, 2, 3);\n$arr2 = array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10);\n$res1 = max_element($arr1);\n$res2 = max_element($arr2);\n\
    print_r($res1);\nprint_r($res2);\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '3123'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $m = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $m) $m = $l[$i];\n    }\n    return $m;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $m = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $m) {\n      $m = $l[$i];\n    }\n  }\n  return $m;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return null;\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzn0exzc7.php:15\n\
    Stack trace:\n#0 /tmp/tmpzn0exzc7.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpzn0exzc7.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  if (count($l) === 0) {\n    return null;\n\
    \  } else if (count($l) === 1) {\n    return $l[0];\n  }\n  $m = max_element(array_slice($l,\
    \ 1));\n  return $l[0] > $m ? $l[0] : $m;\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfi63eg7e.php:15\n\
    Stack trace:\n#0 /tmp/tmpfi63eg7e.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpfi63eg7e.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t// Your code goes here.\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekbem_l0.php:16\n\
    Stack trace:\n#0 /tmp/tmpekbem_l0.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpekbem_l0.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if ($l == NULL) {\n        return NULL;\n\
    \    }\n    $max = $l->value;\n    $rest = $l->next;\n    while ($rest != NULL)\
    \ {\n        if ($rest->value > $max) {\n            $max = $rest->value;\n  \
    \      }\n        $rest = $rest->next;\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc3n6n9w4.php:27\n\
    Stack trace:\n#0 /tmp/tmpc3n6n9w4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpc3n6n9w4.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ NULL;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\n\n$list = array(1, 2, 3);\necho max_element($list) . \"\\n\";\n$list\
    \ = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\necho max_element($list) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "3\n123\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $e)\
    \ {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return foldl(function($x, $y) { return\
    \ max($x, $y); }, $l[0], $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function foldl() in /tmp/tmp7ujk33l7.php:8\n\
    Stack trace:\n#0 /tmp/tmp7ujk33l7.php(12): max_element(Array)\n#1 /tmp/tmp7ujk33l7.php(16):\
    \ candidate(Array)\n#2 /tmp/tmp7ujk33l7.php(20): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp7ujk33l7.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\treturn max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return null;\n\
    \  } else {\n    $max = $l[0];\n    foreach ($l as $x) {\n      if ($x > $max)\
    \ {\n        $max = $x;\n      }\n    }\n    return $max;\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        throw new\
    \ Exception(\"List should not be empty\");\n    }\n    $max = $l[0];\n    for\
    \ ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $max) {\n           \
    \ $max = $l[$i];\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ null;\n    }\n    else {\n        $max = $l[0];\n        for ($i = 1; $i < count($l);\
    \ $i++) {\n            if ($l[$i] > $max) {\n                $max = $l[$i];\n\
    \            }\n        }\n        return $max;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if(count($l) === 0) {\n        return\
    \ NULL;\n    }\n    $result = $l[0];\n    for($i = 1; $i < count($l); $i++) {\n\
    \        if($l[$i] > $result) {\n            $result = $l[$i];\n        }\n  \
    \  }\n    return $result;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $e)\
    \ {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\treturn $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgkf3xhz.php:16\n\
    Stack trace:\n#0 /tmp/tmpvgkf3xhz.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpvgkf3xhz.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return foldr(function($a, $b) {\n    return\
    \ $a > $b ? $a : $b;\n  }, 0, $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function foldr() in /tmp/tmpl70ib_1_.php:8\n\
    Stack trace:\n#0 /tmp/tmpl70ib_1_.php(14): max_element(Array)\n#1 /tmp/tmpl70ib_1_.php(18):\
    \ candidate(Array)\n#2 /tmp/tmpl70ib_1_.php(22): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpl70ib_1_.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if ($l == array()) {\n        return 0;\n\
    \    } else {\n        $max = $l[0];\n        for ($i = 1; $i < count($l); $i++)\
    \ {\n            if ($l[$i] > $max) {\n                $max = $l[$i];\n      \
    \      }\n        }\n        return $max;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return $l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawvam505.php:16\n\
    Stack trace:\n#0 /tmp/tmpawvam505.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpawvam505.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ 0;\n    } else {\n        $m = $l[0];\n        foreach ($l as $i) {\n      \
    \      if ($i > $m) {\n                $m = $i;\n            }\n        }\n  \
    \      return $m;\n    }\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return 0;\n \
    \ }\n  $max = $l[0];\n  foreach ($l as $item) {\n    if ($item > $max) {\n   \
    \   $max = $item;\n    }\n  }\n  return $max;\n}\n$array_max = [1, 2, 3];\necho\
    \ max_element($array_max);\n\n$array_max2 = [5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10];\necho max_element($array_max2);\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '3123'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $h = array_pop($l);\n  foreach ($l as $i)\
    \ {\n    if ($i > $h) $h = $i;\n  }\n  return $h;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $r = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $r) {\n      $r = $l[$i];\n    }\n  }\n  return $r;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  foreach ($l as $v) {\n\
    \    if ($v > $max) {\n      $max = $v;\n    }\n  }\n  return $max;\n}\n$l = array(1,\
    \ 2, 3);\necho max_element($l) . \"\\n\";\n$l = array(5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10);\necho max_element($l) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "3\n123\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if ($l == null) {\n        return null;\n\
    \    }\n    $max = max_element($l->cdr);\n    if ($max == null || $l->car > $max)\
    \ {\n        return $l->car;\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7o4k7ke.php:22\n\
    Stack trace:\n#0 /tmp/tmpk7o4k7ke.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk7o4k7ke.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t$e = $l[0];\n\tforeach ($l as $c) {\n\t\t\
    if ($c > $e) {\n\t\t\t$e = $c;\n\t\t}\n\t}\n\treturn $e;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    return $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7eq5ba9.php:17\n\
    Stack trace:\n#0 /tmp/tmpc7eq5ba9.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpc7eq5ba9.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\t$length = count($l);\n\t\
    for ($i = 1; $i < $length; $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\
    \t\t}\n\t}\n\treturn $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    // TODO: Implement this function.\n  \
    \  $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $max) {\n            $max = $l[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (empty($l)) return null;\n    $max\
    \ = $l[0];\n    foreach ($l as $e) {\n        if ($e > $max) {\n            $max\
    \ = $e;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\tif (empty($l)) {\n\t\treturn null;\n\t}\n\
    \t$max = $l[0];\n\tforeach ($l as $n) {\n\t\tif ($n > $max) {\n\t\t\t$max = $n;\n\
    \t\t}\n\t}\n\treturn $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $n = count($l);\n    if ($n == 0) {\n\
    \        return NULL;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < $n; $i++)\
    \ {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n   \
    \ }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return reduce(function($a, $b) {\n    return\
    \ $a > $b ? $a : $b;\n  }, $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function reduce() in /tmp/tmporuomuee.php:8\n\
    Stack trace:\n#0 /tmp/tmporuomuee.php(14): max_element(Array)\n#1 /tmp/tmporuomuee.php(18):\
    \ candidate(Array)\n#2 /tmp/tmporuomuee.php(22): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmporuomuee.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    // Write your code here\n    // To print\
    \ results to the standard output you can use print\n    // Example: print \"Hello\
    \ world!\";\n    $max = PHP_INT_MIN;\n    for ($i = 0; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    print($max);\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpak472w4q.php:24\n\
    Stack trace:\n#0 /tmp/tmpak472w4q.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpak472w4q.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (empty($l)) {\n        return NULL;\n\
    \    } else if (count($l) == 1) {\n        return $l[0];\n    } else {\n     \
    \   $max = max_element(array_slice($l, 1));\n        return $l[0] > $max ? $l[0]\
    \ : $max;\n    }\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $x = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $x) {\n      $x = $l[$i];\n    }\n  }\n  return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $n = count($l);\n  if ($n == 0) {\n    return\
    \ null;\n  }\n  $r = $l[0];\n  for ($i = 1; $i < $n; $i++) {\n    if ($l[$i] >\
    \ $r) {\n      $r = $l[$i];\n    }\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  if (empty($l)) {\n    throw new Exception('empty\
    \ list');\n  }\n  $max = $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n    if\
    \ ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $len = count($l);\n    $max = $l[0];\n\
    \    for ($i = 1; $i < $len; $i++) {\n        if ($l[$i] > $max) {\n         \
    \   $max = $l[$i];\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if ($l == array()) {\n        return null;\n\
    \    } else if (count($l) == 1) {\n        return $l[0];\n    } else {\n     \
    \   $maxRest = max_element(array_slice($l, 1));\n        if ($l[0] > $maxRest)\
    \ {\n            return $l[0];\n        } else {\n            return $maxRest;\n\
    \        }\n    }\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ NULL;\n    }\n    $max = $l[0];\n    foreach ($l as $e) {\n        if ($e >\
    \ $max) {\n            $max = $e;\n        }\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max_value = NULL;\n    foreach ($l as\
    \ $value) {\n        if (!is_null($max_value)) {\n            if ($value > $max_value)\
    \ {\n                $max_value = $value;\n            }\n        } else {\n \
    \           $max_value = $value;\n        }\n    }\n    return $max_value;\n}\n\
    \nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $val = $l[0];\n    foreach ($l as $e)\
    \ {\n        if ($e > $val) {\n            $val = $e;\n        }\n    }\n    return\
    \ $val;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6ajpbr_.php:15\n\
    Stack trace:\n#0 /tmp/tmpq6ajpbr_.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpq6ajpbr_.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max_element = $l[0];\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] > $max_element) {\n            $max_element\
    \ = $l[$i];\n        }\n    }\n    return $max_element;\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $e)\
    \ {\n        if ($e > $max) $max = $e;\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $v)\
    \ {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n    return\
    \ $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ null;\n    }\n    $m = $l[0];\n    foreach ($l as $e) {\n        if ($e > $m)\
    \ {\n            $m = $e;\n        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = 0;\n    foreach ($l as $el) {\n\
    \        if ($el > $max) {\n            $max = $el;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $m = PHP_INT_MIN;\n    foreach ($l as\
    \ $e) {\n        if ($e > $m) {\n            $m = $e;\n        }\n    }\n    return\
    \ $m;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $len = count($l);\n    $max = $l[0];\n\
    \    for ($i = 1; $i < $len; $i++) {\n        if ($l[$i] > $max) {\n         \
    \   $max = $l[$i];\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n$a = [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];\necho\
    \ max_element($a);\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '123'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  if (sizeof($l) == 0) {\n    return null;\n\
    \  } else if (sizeof($l) == 1) {\n    return $l[0];\n  } else {\n    $m = max_element(array_slice($l,\
    \ 1));\n    return $l[0] > $m ? $l[0] : $m;\n  }\n}\n\n$l = [5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10];\necho \"Input: \" . implode(\", \", $l) . \"\\n\";\n\
    echo \"Output: \" . max_element($l) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Input: 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10\nOutput: 123\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\treturn max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = 0;\n  foreach ($l as $e) {\n    if\
    \ ($e > $max) {\n      $max = $e;\n    }\n  }\n  return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (sizeof($l) > 0) {\n        $max =\
    \ $l[0];\n        for ($i = 1; $i < sizeof($l); $i++) {\n            if ($l[$i]\
    \ > $max) {\n                $max = $l[$i];\n            }\n        }\n      \
    \  return $max;\n    } else {\n        return null;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (empty($l)) {\n        return false;\n\
    \    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = 0;\n    foreach ($l as $item) {\n\
    \        if ($item > $max) {\n            $max = $item;\n        }\n    }\n  \
    \  return $max;\n}\necho max_element([1, 2, 3]);\necho max_element([5, 3, -5,\
    \ 2, -3, 3, 9, 0, 123, 1, -10]);\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '3123'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if(count($l) === 0) {\n        return\
    \ null;\n    }\n    $max = $l[0];\n    foreach($l as $v) {\n        if($v > $max)\
    \ {\n            $max = $v;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $e)\
    \ {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = null;\n  for ($i = 0; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\necho max_element([1, 2, 3]) . \"\\n\";\necho max_element([5, 3, -5,\
    \ 2, -3, 3, 9, 0, 123, 1, -10]) . \"\\n\";\nfunction candidate(...$args) {\n \
    \   return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "3\n123\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\necho max_element([1, 2, 3]);\necho max_element([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]);\n\nfunction candidate(...$args) {\n  \
    \  return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '3123'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  // This uses PHP's native max() function,\
    \ but could be written from scratch.\n  return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ NULL;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    return $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $m = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $m) $m = $l[$i];\n    }\n    return $m;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    // fill in the missing code\n}\nprint_r(max_element([1,\
    \ 2, 3]));\nprint_r(max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpinodb0j1.php:18\n\
    Stack trace:\n#0 /tmp/tmpinodb0j1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpinodb0j1.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $acc = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $acc) {\n      $acc = $l[$i];\n    }\n  }\n  return\
    \ $acc;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $m = -999999;\n    foreach ($l as $el)\
    \ {\n        if ($el > $m) {\n            $m = $el;\n        }\n    }\n    return\
    \ $m;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    // START WRITING YOUR FUNCTION BODY HERE\n\
    \    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $max) {\n            $max = $l[$i];\n        }\n    }\n    return $max;\n\
    \    // END OF FUNCTION BODY\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n  $max = 0;\n  foreach ($l as $x) {\n    if\
    \ ($x > $max) {\n      $max = $x;\n    }\n  }\n  return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n\t$x = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $x) {\n\t\t\t$x = $l[$i];\n\t\t}\n\t}\n\treturn $x;\n\
    }\n\n$l = array(1, 2, 3);\nassert_options(ASSERT_BAIL, 1);\nassert(max_element($l)\
    \ == 3);\n$l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\nassert(max_element($l)\
    \ == 123);\nprint(\"OK\\n\");\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "OK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return maximum element in the list.\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123\nfunction max_element($l) {\n    $max = 0;\n    for ($i = 0; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\necho max_element([1, 2, 3]);\necho \"\\n\";\necho\
    \ max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]);\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "3\n123"
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_147_get_max_triples
language: php
results:
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $triples++;\n                }\n            }\n        }\n    }\n\
    \    return $triples;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n       \
    \ for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) $result++;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $triples++;\n                }\n            }\n        }\n    }\n    return\
    \ $triples;\n}\necho get_max_triples(5) . PHP_EOL;\necho get_max_triples(10) .\
    \ PHP_EOL;\necho get_max_triples(15) . PHP_EOL;\necho get_max_triples(20) . PHP_EOL;\n\
    echo get_max_triples(25) . PHP_EOL;\necho get_max_triples(30) . PHP_EOL;\necho\
    \ get_max_triples(35) . PHP_EOL;\necho get_max_triples(40) . PHP_EOL;\necho get_max_triples(45)\
    \ . PHP_EOL;\necho get_max_triples(50) . PHP_EOL;\necho get_max_triples(55) .\
    \ PHP_EOL;\necho get_max_triples(60) . PHP_EOL;\necho get_max_triples(65) . PHP_EOL;\n\
    echo get_max_triples(70) . PHP_EOL;\necho get_max_triples(75) . PHP_EOL;\necho\
    \ get_max_triples(80) . PHP_EOL;\necho get_max_triples(85) . PHP_EOL;\necho get_max_triples(90)\
    \ . PHP_EOL;\necho get_max_triples(95) . PHP_EOL;\necho get_max_triples(100) .\
    \ PHP_EOL\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0l94oynf.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n\
    \    $triples = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j =\
    \ $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $triples++;\n                }\n            }\n        }\n    }\n   \
    \ return $triples;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  // Write\
    \ your code here\n  $a = range(1, $n);\n  $a = array_map(function($n) {\n    return\
    \ $n * $n - $n + 1;\n  }, $a);\n  $max = 1;\n  for ($i = 0; $i < $n - 2; $i++)\
    \ {\n    for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k <\
    \ $n; $k++) {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 === 0) {\n         \
    \ $max++;\n        }\n      }\n    }\n  }\n  return $max;\n}\n\n$num = 5;\necho\
    \ get_max_triples($num);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0si95z_.php:38\n\
    Stack trace:\n#0 /tmp/tmpz0si95z_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpz0si95z_.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $cnt =\
    \ 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($i *\
    \ $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n           \
    \         $cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ $cnt;\n}\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbouqpeh.php:32\n\
    Stack trace:\n#0 /tmp/tmpvbouqpeh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvbouqpeh.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $max = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n  \
    \              if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                  \
    \  $max++;\n                }\n            }\n        }\n    }\n    return $max;\n\
    }\n$n = 5;\necho get_max_triples($n) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    // create\
    \ array\n    $array = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[]\
    \ = $i * $i - $i + 1;\n    }\n    // calculate\n    $count = 0;\n    for ($i =\
    \ 0; $i < count($array); $i++) {\n        for ($j = $i + 1; $j < count($array);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($array); $k++) {\n       \
    \         if (($array[$i] + $array[$j] + $array[$k]) % 3 == 0) {\n           \
    \         $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $num =\
    \ 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $num++;\n                }\n            }\n        }\n    }\n \
    \   return $num;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\n$result = get_max_triples(5);\necho \"Max triples count: \" .\
    \ $result . \"\\n\";\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Max triples count: 1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    print_r($arr);\n    $counter = 0;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($arr); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j]\
    \ + $arr[$k]) % 3 == 0) {\n                    $counter++;\n                }\n\
    \            }\n        }\n    }\n    return $counter;\n}\nprint_r(get_max_triples(5));\n\
    \nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 7\n    [3] => 13\n   \
    \ [4] => 21\n)\n1Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 7\n    [3] =>\
    \ 13\n    [4] => 21\n)\nArray\n(\n    [0] => 1\n    [1] => 3\n    [2] => 7\n \
    \   [3] => 13\n    [4] => 21\n    [5] => 31\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 3\n    [2] => 7\n    [3] => 13\n    [4] => 21\n    [5] => 31\n    [6] =>\
    \ 43\n    [7] => 57\n    [8] => 73\n    [9] => 91\n)\nArray\n(\n    [0] => 1\n\
    \    [1] => 3\n    [2] => 7\n    [3] => 13\n    [4] => 21\n    [5] => 31\n   \
    \ [6] => 43\n    [7] => 57\n    [8] => 73\n    [9] => 91\n    [10] => 111\n  \
    \  [11] => 133\n    [12] => 157\n    [13] => 183\n    [14] => 211\n    [15] =>\
    \ 241\n    [16] => 273\n    [17] => 307\n    [18] => 343\n    [19] => 381\n  \
    \  [20] => 421\n    [21] => 463\n    [22] => 507\n    [23] => 553\n    [24] =>\
    \ 601\n    [25] => 651\n    [26] => 703\n    [27] => 757\n    [28] => 813\n  \
    \  [29] => 871\n    [30] => 931\n    [31] => 993\n    [32] => 1057\n    [33] =>\
    \ 1123\n    [34] => 1191\n    [35] => 1261\n    [36] => 1333\n    [37] => 1407\n\
    \    [38] => 1483\n    [39] => 1561\n    [40] => 1641\n    [41] => 1723\n    [42]\
    \ => 1807\n    [43] => 1893\n    [44] => 1981\n    [45] => 2071\n    [46] => 2163\n\
    \    [47] => 2257\n    [48] => 2353\n    [49] => 2451\n    [50] => 2551\n    [51]\
    \ => 2653\n    [52] => 2757\n    [53] => 2863\n    [54] => 2971\n    [55] => 3081\n\
    \    [56] => 3193\n    [57] => 3307\n    [58] => 3423\n    [59] => 3541\n    [60]\
    \ => 3661\n    [61] => 3783\n    [62] => 3907\n    [63] => 4033\n    [64] => 4161\n\
    \    [65] => 4291\n    [66] => 4423\n    [67] => 4557\n    [68] => 4693\n    [69]\
    \ => 4831\n    [70] => 4971\n    [71] => 5113\n    [72] => 5257\n    [73] => 5403\n\
    \    [74] => 5551\n    [75] => 5701\n    [76] => 5853\n    [77] => 6007\n    [78]\
    \ => 6163\n    [79] => 6321\n    [80] => 6481\n    [81] => 6643\n    [82] => 6807\n\
    \    [83] => 6973\n    [84] => 7141\n    [85] => 7311\n    [86] => 7483\n    [87]\
    \ => 7657\n    [88] => 7833\n    [89] => 8011\n    [90] => 8191\n    [91] => 8373\n\
    \    [92] => 8557\n    [93] => 8743\n    [94] => 8931\n    [95] => 9121\n    [96]\
    \ => 9313\n    [97] => 9507\n    [98] => 9703\n    [99] => 9901\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n  \
    \              if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                  \
    \  $res++;\n                }\n            }\n        }\n    }\n    return $res;\n\
    }\n$n = 5;\necho get_max_triples($n) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $max = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n  \
    \              if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                  \
    \  $max++;\n                }\n            }\n        }\n    }\n    return $max;\n\
    }\n$result = get_max_triples(5);\necho $result . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $result = 0;\n    $count = count($a);\n    for ($i = 0; $i < $count; $i++)\
    \ {\n        for ($j = $i + 1; $j < $count; $j++) {\n            for ($k = $j\
    \ + 1; $k < $count; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $result++;\n                }\n            }\n\
    \        }\n    }\n    return $result;\n}\necho get_max_triples(10) . PHP_EOL;\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "36\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n  \
    \              if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                  \
    \  $res++;\n                }\n            }\n        }\n    }\n    return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$a = [];\n\
    \tfor ($i = 1; $i <= $n; $i++) {\n\t\t$a[] = $i * $i - $i + 1;\n\t}\n\t$count\
    \ = 0;\n\tfor ($i = 0; $i < $n - 2; $i++) {\n\t\tfor ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n\t\t\tfor ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn $count;\n}\n\necho get_max_triples(5);\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $result = 0;\n    $count = count($a);\n    for ($i = 0; $i < $count; $i++)\
    \ {\n        for ($j = $i + 1; $j < $count; $j++) {\n            for ($k = $j\
    \ + 1; $k < $count; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $result++;\n                }\n            }\n\
    \        }\n    }\n    return $result;\n}\necho get_max_triples(5);\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example: print \"Hello world!\";\n    $triples = 0;\n    for ($i = 1;\
    \ $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for\
    \ ($k = $j + 1; $k < $n; $k++) {\n                if (($i * $i - $i + 1 + $j *\
    \ $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n                    $triples++;\n\
    \                }\n            }\n        }\n    }\n    return $triples;\n}\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2bnkt_b.php:34\n\
    Stack trace:\n#0 /tmp/tmpb2bnkt_b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpb2bnkt_b.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho \"get_max_triples(5) : \" . get_max_triples(5) . \"\\n\";\n\
    echo \"get_max_triples(7) : \" . get_max_triples(7) . \"\\n\";\necho \"get_max_triples(11)\
    \ : \" . get_max_triples(11) . \"\\n\";\necho \"get_max_triples(100) : \" . get_max_triples(100)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "get_max_triples(5) : 1\nget_max_triples(7) : 10\nget_max_triples(11) :\
    \ 39\nget_max_triples(100) : 53361\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $triples++;\n                }\n            }\n        }\n    }\n    return\
    \ $triples;\n}\nprint_r(get_max_triples(5));\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $max_triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $max_triples++;\n                }\n            }\n        }\n    }\n\
    \    return $max_triples;\n}\necho get_max_triples(5) . \"\\n\";\necho get_max_triples(10)\
    \ . \"\\n\";\necho get_max_triples(100) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n36\n53361\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $max_triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $max_triples++;\n                }\n            }\n        }\n    }\n\
    \    return $max_triples;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $nums =\
    \ array();\n  for ($i = 1; $i <= $n; $i++) {\n    $nums[] = $i * $i - $i + 1;\n\
    \  }\n  $cnt = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j = $i + 1;\
    \ $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($nums[$i]\
    \ + $nums[$j] + $nums[$k]) % 3 == 0) {\n          $cnt++;\n        }\n      }\n\
    \    }\n  }\n  return $cnt;\n}\n\necho get_max_triples(5) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $res++;\n                }\n            }\n        }\n    }\n \
    \   return $res;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $array =\
    \ [];\n  for ($i = 1; $i <= $n; $i++) {\n    $array[] = $i * $i - $i + 1;\n  }\n\
    \  $count = 0;\n  for ($i = 0; $i < count($array); $i++) {\n    for ($j = $i +\
    \ 1; $j < count($array); $j++) {\n      for ($k = $j + 1; $k < count($array);\
    \ $k++) {\n        if (($array[$i] + $array[$j] + $array[$k]) % 3 == 0) {\n  \
    \        $count++;\n        }\n      }\n    }\n  }\n  return $count;\n}\n\nprint_r(get_max_triples(5));\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    $n = count($a);\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     for ($j = $i + 1; $j < $n; $j++) {\n            if (($a[$i] + $a[$j]) %\
    \ 3 == 0) {\n                for ($k = $j + 1; $k < $n; $k++) {\n            \
    \        if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                        $count++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapuc50me.php:37\n\
    Stack trace:\n#0 /tmp/tmpapuc50me.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpapuc50me.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$x = 1;\n\
    \t$a = [];\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$a[] = $x;\n\t\t$x = $x + $i\
    \ * 2 + 1;\n\t}\n\t$n = 0;\n\tfor ($i = 0; $i < count($a); $i++) {\n\t\tfor ($j\
    \ = $i + 1; $j < count($a); $j++) {\n\t\t\tfor ($k = $j + 1; $k < count($a); $k++)\
    \ {\n\t\t\t\tif (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\t\t\t\t\t$n++;\n\t\t\
    \t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $n;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp44jmppg7.php:37\n\
    Stack trace:\n#0 /tmp/tmp44jmppg7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp44jmppg7.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    $a = createArray($n);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0)\n              \
    \      $count++;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function createArray()\
    \ in /tmp/tmp94h0ypsk.php:14\nStack trace:\n#0 /tmp/tmp94h0ypsk.php(27): get_max_triples(5)\n\
    #1 /tmp/tmp94h0ypsk.php(31): candidate(5)\n#2 /tmp/tmp94h0ypsk.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmp94h0ypsk.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if ($n\
    \ < 3) return 0;\n    $x = [1, 3, 7, 13, 21];\n    $y = [3, 9, 21, 39, 63];\n\
    \    $z = [7, 21, 51, 99, 161];\n    $t = [3, 9, 21, 39, 63];\n    $xIndex = $yIndex\
    \ = $zIndex = $tIndex = 0;\n    $result = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        if ($i == 0) {\n            $x[$i] = 1;\n            $y[$i] = 3;\n\
    \            $z[$i] = 7;\n            $t[$i] = 3;\n        } else if ($i == 1)\
    \ {\n            $x[$i] = 3;\n            $y[$i] = 9;\n            $z[$i] = 21;\n\
    \            $t[$i] = 9;\n        } else if ($i == 2) {\n            $x[$i] =\
    \ 7;\n            $y[$i] = 21;\n            $z[$i] = 51;\n            $t[$i] =\
    \ 21;\n        } else {\n            $x[$i] = $x[$i - 1] + 2 * $i + 1;\n     \
    \       $y[$i] = $y[$i - 1] + 2 * $i + 1;\n            $z[$i] = $z[$i - 1] + 2\
    \ * $i + 1;\n            $t[$i] = $t[$i - 1] + 2 * $i + 1;\n        }\n    }\n\
    \    for ($i = 3; $i < $n; $i++) {\n        $zIndex = $i;\n        for ($j = 2;\
    \ $j < $i; $j++) {\n            $yIndex = $j;\n            for ($k = 1; $k < $j;\
    \ $k++) {\n                $xIndex = $k;\n                if ($t[$i] - $t[$k]\
    \ < 3) {\n                    break;\n                }\n                if (($t[$i]\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp570kgazj.php on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = pow($i, 2) - $i + 1;\n   \
    \ }\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $cnt++;\n                }\n            }\n        }\n    }\n    return $cnt;\n\
    }\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j =\
    \ $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\necho get_max_triples(5);\n\nfunction candidate(...$args) {\n  \
    \  return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[$i - 1] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $array\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($array); $i++) {\n \
    \       for ($j = $i + 1; $j < count($array); $j++) {\n            for ($k = $j\
    \ + 1; $k < count($array); $k++) {\n                if (($array[$i] + $array[$j]\
    \ + $array[$k]) % 3 == 0) {\n                    $count++;\n                }\n\
    \            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k <\
    \ count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\n\n$n = 8;\necho get_max_triples($n);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [1];\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $val = $i * $i - $i + 1;\n       \
    \ $a[] = $val;\n    }\n    $res = 0;\n    $count = count($a);\n    for ($i = 0;\
    \ $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n     \
    \       for ($k = $j + 1; $k < $count; $k++) {\n                if (($a[$i] +\
    \ $a[$j] + $a[$k]) % 3 == 0) {\n                    $res++;\n                }\n\
    \            }\n        }\n    }\n    return $res;\n}\n\necho get_max_triples(5)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34e91mw0.php:38\n\
    Stack trace:\n#0 /tmp/tmp34e91mw0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp34e91mw0.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(3);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '0'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j =\
    \ $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\necho get_max_triples(5) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n       \
    \ for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $result++;\n                }\n           \
    \ }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n\
    \    $cnt = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    echo \"($a[$i], $a[$j], $a[$k])<br>\";\n                    $cnt++;\n   \
    \             }\n            }\n        }\n    }\n    return $cnt;\n}\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: (1, 7, 13)<br>(1, 7, 13)<br>(1, 7, 31)<br>(1, 13, 31)<br>(7, 13, 31)<br>(1,
    7, 13)<br>(1, 7, 31)<br>(1, 7, 43)<br>(1, 7, 73)<br>(1, 7, 91)<br>(1, 13, 31)<br>(1,
    13, 43)<br>(1, 13, 73)<br>(1, 13, 91)<br>(1, 31, 43)<br>(1, 31, 73)<br>(1, 31,
    91)<br>(1, 43, 73)<br>(1, 43, 91)<br>(1, 73, 91)<br>(3, 21, 57)<br>(7, 13, 31)<br>(7,
    13, 43)<br>(7, 13, 73)<br>(7, 13, 91)<br>(7, 31, 43)<br>(7, 31, 73)<br>(7, 31,
    91)<br>(7, 43, 73)<br>(7, 43, 91)<br>(7, 73, 91)<br>(13, 31, 43)<br>(13, 31, 73)<br>(13,
    31, 91)<br>(13, 43, 73)<br>(13, 43, 91)<br>(13, 73, 91)<br>(31, 43, 73)<br>(31,
    43, 91)<br>(31, 73, 91)<br>(43, 73, 91)<br>(1, 7, 13)<br>(1, 7, 31)<br>(1, 7,
    43)<br>(1, 7, 73)<br>(1, 7, 91)<br>(1, 7, 133)<br>(1, 7, 157)<br>(1, 7, 211)<br>(1,
    7, 241)<br>(1, 7, 307)<br>(1, 7, 343)<br>(1, 7, 421)<br>(1, 7, 463)<br>(1, 7,
    553)<br>(1, 7, 601)<br>(1, 7, 703)<br>(1, 7, 757)<br>(1, 7, 871)<br>(1, 7, 931)<br>(1,
    7, 1057)<br>(1, 7, 1123)<br>(1, 7, 1261)<br>(1, 7, 1333)<br>(1, 7, 1483)<br>(1,
    7, 1561)<br>(1, 7, 1723)<br>(1, 7, 1807)<br>(1, 7, 1981)<br>(1, 7, 2071)<br>(1,
    7, 2257)<br>(1, 7, 2353)<br>(1, 7, 2551)<br>(1, 7, 2653)<br>(1, 7, 2863)<br>(1,
    7, 2971)<br>(1, 7, 3193)<br>(1, 7, 3307)<br>(1, 7, 3541)<br>(1, 7, 3661)<br>(1,
    7, 3907)<br>(1, 7, 4033)<br>(1, 7, 4291)<br>(1, 7, 4423)<br>(1, 7, 4693)<br>(1,
    7, 4831)<br>(1, 7, 5113)<br>(1, 7, 5257)<br>(1, 7, 5551)<br>(1, 7, 5701)<br>(1,
    7, 6007)<br>(1, 7, 6163)<br>(1, 7, 6481)<br>(1, 7, 6643)<br>(1, 7, 6973)<br>(1,
    7, 7141)<br>(1, 7, 7483)<br>(1, 7, 7657)<br>(1, 7, 8011)<br>(1, 7, 8191)<br>(1,
    7, 8557)<br>(1, 7, 8743)<br>(1, 7, 9121)<br>(1, 7, 9313)<br>(1, 7, 9703)<br>(1,
    7, 9901)<br>(1, 13, 31)<br>(1, 13, 43)<br>(1, 13, 73)<br>(1, 13, 91)<br>(1, 13,
    133)<br>(1, 13, 157)<br>(1, 13, 211)<br>(1, 13, 241)<br>(1, 13, 307)<br>(1, 13,
    343)<br>(1, 13, 421)<br>(1, 13, 463)<br>(1, 13, 553)<br>(1, 13, 601)<br>(1, 13,
    703)<br>(1, 13, 757)<br>(1, 13, 871)<br>(1, 13, 931)<br>(1, 13, 1057)<br>(1, 13,
    1123)<br>(1, 13, 1261)<br>(1, 13, 1333)<br>(1, 13, 1483)<br>(1, 13, 1561)<br>(1,
    13, 1723)<br>(1, 13, 1807
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $max_triples\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ ((($i * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n\
    \                    $max_triples++;\n                }\n            }\n     \
    \   }\n    }\n    return $max_triples;\n}\n$input = 5;\nprint_r(get_max_triples($input));\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dz38wr3.php:32\n\
    Stack trace:\n#0 /tmp/tmp3dz38wr3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3dz38wr3.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $counter = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $counter++;\n                }\n            }\n        }\n    }\n    return\
    \ $counter;\n}\necho get_max_triples(5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $p = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n     \
    \           if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $p++;\n\
    \                }\n            }\n        }\n    }\n    return $p;\n}\necho get_max_triples(5);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\n}\necho\
    \ get_max_triples(5);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxobty1ck.php:21\n\
    Stack trace:\n#0 /tmp/tmpxobty1ck.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxobty1ck.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $array\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = ($i * $i) - $i\
    \ + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($array[$i] + $array[$j] + $array[$k]) % 3\
    \ == 0) {\n                    $result++;\n                }\n            }\n\
    \        }\n    }\n    return $result;\n}\necho get_max_triples(5);\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $max_triples\
    \ = 0;\n    $a = range(1, $n);\n    for ($i = 0; $i < $n; $i++) {\n        $a[$i]\
    \ = $a[$i] * $a[$i] - $a[$i] + 1;\n    }\n    echo \"<pre>\";\n    print_r($a);\n\
    \    echo \"</pre>\";\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n    \
    \            if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $max_triples++;\n\
    \                }\n            }\n        }\n    }\n    return $max_triples;\n\
    }\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 7\n    [3] => 13\n\
    \    [4] => 21\n)\n</pre>1<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] =>\
    \ 7\n    [3] => 13\n    [4] => 21\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1]\
    \ => 3\n    [2] => 7\n    [3] => 13\n    [4] => 21\n    [5] => 31\n)\n</pre><pre>Array\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 7\n    [3] => 13\n    [4] => 21\n  \
    \  [5] => 31\n    [6] => 43\n    [7] => 57\n    [8] => 73\n    [9] => 91\n)\n\
    </pre><pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 7\n    [3] => 13\n\
    \    [4] => 21\n    [5] => 31\n    [6] => 43\n    [7] => 57\n    [8] => 73\n \
    \   [9] => 91\n    [10] => 111\n    [11] => 133\n    [12] => 157\n    [13] =>\
    \ 183\n    [14] => 211\n    [15] => 241\n    [16] => 273\n    [17] => 307\n  \
    \  [18] => 343\n    [19] => 381\n    [20] => 421\n    [21] => 463\n    [22] =>\
    \ 507\n    [23] => 553\n    [24] => 601\n    [25] => 651\n    [26] => 703\n  \
    \  [27] => 757\n    [28] => 813\n    [29] => 871\n    [30] => 931\n    [31] =>\
    \ 993\n    [32] => 1057\n    [33] => 1123\n    [34] => 1191\n    [35] => 1261\n\
    \    [36] => 1333\n    [37] => 1407\n    [38] => 1483\n    [39] => 1561\n    [40]\
    \ => 1641\n    [41] => 1723\n    [42] => 1807\n    [43] => 1893\n    [44] => 1981\n\
    \    [45] => 2071\n    [46] => 2163\n    [47] => 2257\n    [48] => 2353\n    [49]\
    \ => 2451\n    [50] => 2551\n    [51] => 2653\n    [52] => 2757\n    [53] => 2863\n\
    \    [54] => 2971\n    [55] => 3081\n    [56] => 3193\n    [57] => 3307\n    [58]\
    \ => 3423\n    [59] => 3541\n    [60] => 3661\n    [61] => 3783\n    [62] => 3907\n\
    \    [63] => 4033\n    [64] => 4161\n    [65] => 4291\n    [66] => 4423\n    [67]\
    \ => 4557\n    [68] => 4693\n    [69] => 4831\n    [70] => 4971\n    [71] => 5113\n\
    \    [72] => 5257\n    [73] => 5403\n    [74] => 5551\n    [75] => 5701\n    [76]\
    \ => 5853\n    [77] => 6007\n    [78] => 6163\n    [79] => 6321\n    [80] => 6481\n\
    \    [81] => 6643\n    [82] => 6807\n    [83] => 6973\n    [84] => 7141\n    [85]\
    \ => 7311\n    [86] => 7483\n    [87] => 7657\n    [88] => 7833\n    [89] => 8011\n\
    \    [90] => 8191\n    [91] => 8373\n    [92] => 8557\n    [93] => 8743\n    [94]\
    \ => 8931\n    [95] => 9121\n    [96] => 9313\n    "
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    $total = count($a);\n    for ($i = 0; $i < $total; $i++)\
    \ {\n        for ($j = $i + 1; $j < $total; $j++) {\n            for ($k = $j\
    \ + 1; $k < $total; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $cnt++;\n                }\n            }\n        }\n    }\n \
    \   return $cnt;\n}\n\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    print_r($a);\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n  \
    \      for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                $sum = $a[$i] + $a[$j] + $a[$k];\n          \
    \      if ($sum % 3 == 0) {\n                    $count++;\n                }\n\
    \            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5)\
    \ . PHP_EOL;\necho get_max_triples(1000) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "b'Array\\n(\\n    [0] => 1\\n    [1] => 3\\n    [2] => 7\\n    [3] => 13\\\
    n    [4] => 21\\n)\\n1\\nArray\\n(\\n    [0] => 1\\n    [1] => 3\\n    [2] =>\
    \ 7\\n    [3] => 13\\n    [4] => 21\\n    [5] => 31\\n    [6] => 43\\n    [7]\
    \ => 57\\n    [8] => 73\\n    [9] => 91\\n    [10] => 111\\n    [11] => 133\\\
    n    [12] => 157\\n    [13] => 183\\n    [14] => 211\\n    [15] => 241\\n    [16]\
    \ => 273\\n    [17] => 307\\n    [18] => 343\\n    [19] => 381\\n    [20] => 421\\\
    n    [21] => 463\\n    [22] => 507\\n    [23] => 553\\n    [24] => 601\\n    [25]\
    \ => 651\\n    [26] => 703\\n    [27] => 757\\n    [28] => 813\\n    [29] => 871\\\
    n    [30] => 931\\n    [31] => 993\\n    [32] => 1057\\n    [33] => 1123\\n  \
    \  [34] => 1191\\n    [35] => 1261\\n    [36] => 1333\\n    [37] => 1407\\n  \
    \  [38] => 1483\\n    [39] => 1561\\n    [40] => 1641\\n    [41] => 1723\\n  \
    \  [42] => 1807\\n    [43] => 1893\\n    [44] => 1981\\n    [45] => 2071\\n  \
    \  [46] => 2163\\n    [47] => 2257\\n    [48] => 2353\\n    [49] => 2451\\n  \
    \  [50] => 2551\\n    [51] => 2653\\n    [52] => 2757\\n    [53] => 2863\\n  \
    \  [54] => 2971\\n    [55] => 3081\\n    [56] => 3193\\n    [57] => 3307\\n  \
    \  [58] => 3423\\n    [59] => 3541\\n    [60] => 3661\\n    [61] => 3783\\n  \
    \  [62] => 3907\\n    [63] => 4033\\n    [64] => 4161\\n    [65] => 4291\\n  \
    \  [66] => 4423\\n    [67] => 4557\\n    [68] => 4693\\n    [69] => 4831\\n  \
    \  [70] => 4971\\n    [71] => 5113\\n    [72] => 5257\\n    [73] => 5403\\n  \
    \  [74] => 5551\\n    [75] => 5701\\n    [76] => 5853\\n    [77] => 6007\\n  \
    \  [78] => 6163\\n    [79] => 6321\\n    [80] => 6481\\n    [81] => 6643\\n  \
    \  [82] => 6807\\n    [83] => 6973\\n    [84] => 7141\\n    [85] => 7311\\n  \
    \  [86] => 7483\\n    [87] => 7657\\n    [88] => 7833\\n    [89] => 8011\\n  \
    \  [90] => 8191\\n    [91] => 8373\\n    [92] => 8557\\n    [93] => 8743\\n  \
    \  [94] => 8931\\n    [95] => 9121\\n    [96] => 9313\\n    [97] => 9507\\n  \
    \  [98] => 9703\\n    [99] => 9901\\n    [100] => 10101\\n    [101] => 10303\\\
    n    [102] => 10507\\n    [103] => 10713\\n    [104] => 10921\\n    [105] => 11131\\\
    n    [106] => 11343\\n    [107] => 11557\\n    [108] => 11773\\n    [109] => 11991\\\
    n   "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n\
    \    $max_triples = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j =\
    \ $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $max_triples++;\n                }\n            }\n        }\n    }\n   \
    \ return $max_triples;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $res = 0;\n\
    \  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($i + 1) * ($i + 1)\
    \ - ($i + 1) + 1 + ($j + 1) * ($j + 1) - ($j + 1) + 1 + ($k + 1) * ($k + 1) -\
    \ ($k + 1) + 1 === 0) {\n          $res++;\n        }\n      }\n    }\n  }\n \
    \ return $res;\n}\n$n = 5;\nprint_r(get_max_triples($n));\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvx3d1hzs.php:32\n\
    Stack trace:\n#0 /tmp/tmpvx3d1hzs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvx3d1hzs.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    $array = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($array[$i] + $array[$j] + $array[$k]) % 3 == 0) {\n\
    \                    $result++;\n                }\n            }\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $array\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($array); $i++) {\n \
    \       for ($j = $i + 1; $j < count($array); $j++) {\n            for ($k = $j\
    \ + 1; $k < count($array); $k++) {\n                if (($array[$i] + $array[$j]\
    \ + $array[$k]) % 3 == 0) {\n                    $count++;\n                }\n\
    \            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(7);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '10'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$a = range(1,\
    \ $n);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\t$a[$i] = $a[$i] * $a[$i] - $a[$i]\
    \ + 1;\n\t}\n\t$total = 0;\n\tfor ($i = 0; $i < $n - 2; $i++) {\n\t\tfor ($j =\
    \ $i + 1; $j < $n - 1; $j++) {\n\t\t\tfor ($k = $j + 1; $k < $n; $k++) {\n\t\t\
    \t\tif (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\t\t\t\t\t$total++;\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t}\n\treturn $total;\n}\n\necho get_max_triples(5);\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $res = 0;\n    $len = count($a);\n    for ($i = 0; $i < $len - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $len - 1; $j++) {\n            if (($a[$i] + $a[$j])\
    \ % 3 == 0) {\n                for ($k = $j + 1; $k < $len; $k++) {\n        \
    \            if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    \
    \    $res++;\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return $res;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpenkblotb.php:39\n\
    Stack trace:\n#0 /tmp/tmpenkblotb.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpenkblotb.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $result++;\n                }\n            }\n        }\n\
    \    }\n    return $result;\n}\n\n$n = 5;\necho get_max_triples($n);\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ ((($i*$i - $i + 1) + ($j*$j - $j + 1) + ($k*$k - $k + 1)) % 3 == 0) {\n    \
    \                $result++;\n                }\n            }\n        }\n   \
    \ }\n    return $result;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xiiyv6n.php:31\n\
    Stack trace:\n#0 /tmp/tmp_xiiyv6n.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_xiiyv6n.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ range(1, $n);\n    for ($i = 0; $i < $n; $i++) {\n        $arr[$i] = $arr[$i]\
    \ * $arr[$i] - $arr[$i] + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n\
    \ - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for\
    \ ($k = $j + 1; $k < $n; $k++) {\n                if ($arr[$i] + $arr[$j] + $arr[$k]\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw6hyriix.php:35\n\
    Stack trace:\n#0 /tmp/tmpw6hyriix.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw6hyriix.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $triples++;\n                }\n            }\n        }\n    }\n    return\
    \ $triples;\n}\necho get_max_triples(4);\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    // build\
    \ the array of consecutive squares and store the differences in a \n    // separate\
    \ array\n    $a = [];\n    $sqs = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n        $sqs[] = $i * $i;\n    }\n    // for\
    \ each triple, check if their sum is divisible by 3, and if so, add\n    // all\
    \ the possible combinations of the triple to the result array\n    $result = [];\n\
    \    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $result[] = [$a[$i],\
    \ $a[$j], $a[$k]];\n                }\n            }\n        }\n    }\n    //\
    \ loop through the result array and find the max triple, in terms of\n    // the\
    \ sum of their squares\n    $sq_result = [];\n    for ($i = 0; $i < count($result);\
    \ $i++) {\n        $sq_result[] = $sqs[$result[$i][0] - 1] + $sqs[$result[$i][1]\
    \ - 1] + $sqs[$result[$i][2] - 1];\n    }\n    return max($sq_result);\n}\n$n\
    \ = 5;\nprint_r(get_max_triples($n));\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogxqgjd0.php:49\n\
    Stack trace:\n#0 /tmp/tmpogxqgjd0.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpogxqgjd0.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k <\
    \ count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $result\
    \ = 0;\n  $i = 1;\n  $j = 2;\n  $k = 3;\n  $a = array_fill(1, $n, 0);\n  while\
    \ ($i < $n) {\n    while ($j < $n) {\n      while ($k < $n) {\n        if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n          $result++;\n        }\n        $k++;\n\
    \      }\n      $j++;\n      $k = $j + 1;\n    }\n    $i++;\n    $j = $i + 1;\n\
    \    $k = $j + 1;\n  }\n  return $result;\n}\n$handle = fopen (\"php://stdin\"\
    ,\"r\");\nfscanf($handle,\"%d\",$n);\n$result = get_max_triples($n);\necho $result\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbu1idnqd.php:45\n\
    Stack trace:\n#0 /tmp/tmpbu1idnqd.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpbu1idnqd.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $max = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n  \
    \              if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                  \
    \  $max++;\n                }\n            }\n        }\n    }\n    return $max;\n\
    }\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if ($n\
    \ <= 2) {\n        return 0;\n    }\n    $count = 0;\n    $max = $n - 1;\n   \
    \ $last = $max - 1;\n    $num = 0;\n    $nums = array();\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        $num = $i * $i - $i + 1;\n        $nums[] = $num;\n \
    \   }\n    for ($i = 0; $i < $last; $i++) {\n        for ($j = $i + 1; $j < $max;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($nums[$i] + $nums[$j] + $nums[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5) . \"\\n\";\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpig3cw6.php:42\n\
    Stack trace:\n#0 /tmp/tmptpig3cw6.php(48): test()\n#1 {main}\n  thrown in /tmp/tmptpig3cw6.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\nprint_r(get_max_triples(5));\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6pzjjm20.php:32\n\
    Stack trace:\n#0 /tmp/tmp6pzjjm20.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6pzjjm20.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\necho \"result: \" . get_max_triples(5) . \"\\n\";\necho \"result:\
    \ \" . get_max_triples(7) . \"\\n\";\necho \"result: \" . get_max_triples(8) .\
    \ \"\\n\";\necho \"result: \" . get_max_triples(10) . \"\\n\";\necho \"result:\
    \ \" . get_max_triples(100) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "result: 1\nresult: 10\nresult: 11\nresult: 36\nresult: 53361\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n\
    \    $res = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1;\
    \ $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n       \
    \         if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $res++;\n\
    \                }\n            }\n        }\n    }\n    return $res;\n}\n\n$n\
    \ = 5;\n$a = array();\nfor ($i = 1; $i <= $n; $i++) {\n    $a[$i] = $i * $i -\
    \ $i + 1;\n}\necho get_max_triples($n) . \"<br/>\";\nprint_r($a);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br/>Array\n(\n    [1] => 1\n    [2] => 3\n    [3] => 7\n    [4] => 13\n\
    \    [5] => 21\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if($n\
    \ < 3) return 0;\n    $dp = array_fill(0,$n,1);\n    $dp[0] = 1;\n    $dp[1] =\
    \ 3;\n    $dp[2] = 7;\n    $ans = 0;\n    for($i = 3; $i < $n; $i++) {\n     \
    \   $dp[$i] = $dp[$i-1] + $dp[$i-2] + $dp[$i-3];\n        if($dp[$i] % 3 == 0)\
    \ $ans++;\n    }\n    return $ans;\n}\n$n = 5;\nprint_r(get_max_triples($n));\n\
    \nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0ekqx7z.php:34\n\
    Stack trace:\n#0 /tmp/tmpz0ekqx7z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz0ekqx7z.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $triples++;\n                }\n            }\n        }\n\
    \    }\n    return $triples;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example: print \"Hello world!\";\n    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $sum = 0;\n    for\
    \ ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $sum++;\n\
    \                }\n            }\n        }\n    }\n    print $sum;\n}\nget_max_triples(5);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphtpulfbv.php:38\n\
    Stack trace:\n#0 /tmp/tmphtpulfbv.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphtpulfbv.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $max_triples\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $max_triples++;\n                }\n            }\n        }\n\
    \    }\n    return $max_triples;\n}\n$n = intval(fgets(STDIN));\necho get_max_triples($n);\n\
    \nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmhl7sv02.php:34\n\
    Stack trace:\n#0 /tmp/tmpmhl7sv02.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmhl7sv02.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $max_triples\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i + $j + $k) % 3 == 0) {\n                    $max_triples++;\n         \
    \       }\n            }\n        }\n    }\n    return $max_triples;\n}\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjm8ti9w.php:30\n\
    Stack trace:\n#0 /tmp/tmpbjm8ti9w.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbjm8ti9w.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$total_triples\
    \ = 0;\n\t$a = array();\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$a[$i] = $i * $i\
    \ - $i + 1;\n\t}\n\tfor ($i = 1; $i <= $n - 2; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j <= $n - 1; $j++) {\n\t\t\tfor ($k = $j + 1; $k <= $n; $k++) {\n\t\t\t\tif\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\t\t\t\t\t$total_triples++;\n\t\t\t\
    \t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $total_triples;\n}\n\n$n = 5;\n$result = get_max_triples($n);\n\
    echo $result;\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $max_triples\
    \ = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for\
    \ ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++)\
    \ {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n              \
    \      $max_triples++;\n                }\n            }\n        }\n    }\n \
    \   return $max_triples;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpodyooosw.php:36\n\
    Stack trace:\n#0 /tmp/tmpodyooosw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpodyooosw.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $triples++;\n                }\n            }\n        }\n\
    \    }\n    return $triples;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $arr = [];\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    $arr[] = $i * $i - $i + 1;\n  }\n  $triples\
    \ = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if ($arr[$i] + $arr[$j]\
    \ + $arr[$k] % 3 == 0) {\n          $triples++;\n        }\n      }\n    }\n \
    \ }\n  return $triples;\n}\n\nprint_r(get_max_triples(5));\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq5z40bqr.php:36\n\
    Stack trace:\n#0 /tmp/tmpq5z40bqr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpq5z40bqr.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $array\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($array[$i] + $array[$j] + $array[$k]) % 3 == 0) {\n\
    \                    $count++;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ array();\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i\
    \ + 1;\n    }\n    $max_triples = 0;\n    for ($i = 0; $i < count($arr); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k\
    \ = $j + 1; $k < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j]\
    \ + $arr[$k]) % 3 == 0) {\n                    $max_triples++;\n             \
    \   }\n            }\n        }\n    }\n    return $max_triples;\n}\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\necho get_max_triples(5) . PHP_EOL;\necho get_max_triples(10)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n36\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$a = array();\n\
    \tfor ($i = 1; $i <= $n; $i++) {\n\t\t$a[$i] = $i * $i - $i + 1;\n\t}\n\t$count\
    \ = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\tfor ($j = $i + 1; $j <= $n; $j++)\
    \ {\n\t\t\tfor ($k = $j + 1; $k <= $n; $k++) {\n\t\t\t\tif (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $sum = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k <\
    \ count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) %\
    \ 3 == 0) {\n                    $sum++;\n                }\n            }\n \
    \       }\n    }\n    return $sum;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $max_triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $max_triples++;\n                }\n            }\n        }\n    }\n\
    \    return $max_triples;\n}\n$tests = [\n    [1, 0],\n    [2, 0],\n    [3, 0],\n\
    \    [4, 0],\n    [5, 1],\n    [6, 2],\n    [7, 2],\n    [8, 4],\n    [9, 4],\n\
    \    [10, 6],\n    [11, 6],\n    [12, 10],\n    [13, 10],\n    [14, 12],\n   \
    \ [15, 12],\n    [16, 17],\n    [17, 17],\n    [18, 20],\n    [19, 20],\n    [20,\
    \ 26],\n    [21, 26],\n    [22, 29],\n    [23, 29],\n    [24, 37],\n    [25, 37],\n\
    \    [26, 40],\n    [27, 40],\n    [28, 48],\n    [29, 48],\n    [30, 53],\n \
    \   [31, 53],\n    [32, 61],\n    [33, 61],\n    [34, 64],\n    [35, 64],\n  \
    \  [36, 74],\n    [37, 74],\n    [38, 77],\n    [39, 77],\n    [40, 89],\n   \
    \ [41, 89],\n    [42, 92],\n    [43, 92],\n    [44, 104],\n    [45, 104],\n  \
    \  [46, 109],\n    [47, 109\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_80cv49x.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $output\
    \ = 0;\n  $numbers = [];\n  for ($i = 1; $i <= $n; $i++) {\n    $numbers[] = $i\
    \ * $i - $i + 1;\n  }\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if\
    \ (($numbers[$i] + $numbers[$j] + $numbers[$k]) % 3 === 0) {\n          $output++;\n\
    \        }\n      }\n    }\n  }\n  return $output;\n}\necho(get_max_triples(5));\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $array\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = pow($i, 2) - $i\
    \ + 1;\n    }\n    $max_triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if ($array[$i] + $array[$j] + $array[$k] %\
    \ 3 == 0) {\n                    $max_triples++;\n                }\n        \
    \    }\n        }\n    }\n    return $max_triples;\n}\n$n = 5;\necho get_max_triples($n);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ns1697l.php:36\n\
    Stack trace:\n#0 /tmp/tmp3ns1697l.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3ns1697l.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k <\
    \ count($arr); $k++) {\n                if ($arr[$i] + $arr[$j] + $arr[$k] % 3\
    \ == 0) {\n                    $result++;\n                }\n            }\n\
    \        }\n    }\n    return $result;\n}\n$n = 5;\necho get_max_triples($n);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjeix1z1.php:36\n\
    Stack trace:\n#0 /tmp/tmpgjeix1z1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgjeix1z1.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    // echo implode(', ', $a) . PHP_EOL;\n    $max_triples = 0;\n    for ($i\
    \ = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n\
    \            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] +\
    \ $a[$j] + $a[$k]) % 3 == 0) {\n                    $max_triples++;\n        \
    \        }\n            }\n        }\n    }\n    return $max_triples;\n}\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp42e31rkk.php:32\n\
    Stack trace:\n#0 /tmp/tmp42e31rkk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp42e31rkk.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    // trivial\
    \ cases\n    if ($n < 3) {\n        return 0;\n    }\n    // create array of values\n\
    \    $arr = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i\
    \ * $i - $i + 1;\n    }\n    // get value to check\n    $to_check = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $to_check += $arr[$i];\n    }\n    $to_check\
    \ /= 3;\n    // check for triples\n    $counter = 0;\n    for ($i = 0; $i < $n\
    \ - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for\
    \ ($k = $j + 1; $k < $n; $k++) {\n                if ($arr[$i] + $arr[$j] + $arr[$k]\
    \ == $to_check) {\n                    $counter++;\n                }\n      \
    \      }\n        }\n    }\n    return $counter;\n}\necho \"get_max_triples(5)\
    \ = \" . get_max_triples(5) . \"\\n\";\necho \"get_max_triples(10) = \" . get_max_triples(10)\
    \ . \"\\n\";\necho \"get_max_triples(12) = \" . get_max_triples(12) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "get_max_triples(5) = 0\nget_max_triples(10) = 0\nget_max_triples(12) =\
    \ 0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxj3is6x.php:49\n\
    Stack trace:\n#0 /tmp/tmpwxj3is6x.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpwxj3is6x.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $total = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $total++;\n                }\n            }\n        }\n    }\n\
    \    return $total;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example: print \"Hello world!\";\n    $res = 0;\n    for ($i = 1; $i <\
    \ $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for\
    \ ($k = $j + 1; $k <= $n; $k++) {\n                if (($i * $i - $i + 1 + $j\
    \ * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n                    $res++;\n\
    \                }\n            }\n        }\n    }\n    return $res;\n}\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    $array = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if(($array[$i] + $array[$j] + $array[$k]) % 3 == 0) {\n \
    \                   $result++;\n                }\n            }\n        }\n\
    \    }\n    return $result;\n}\n$n = 5;\nprint_r(get_max_triples($n));\n\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n  \
    \              if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                  \
    \  $cnt++;\n                }\n            }\n        }\n    }\n    return $cnt;\n\
    }\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if ($n\
    \ < 3) return 0;\n    $sum = 0;\n    for ($i = 2; $i < $n; $i++) {\n        for\
    \ ($j = 1; $j < $i; $j++) {\n            $sum += $j * $j - $j + 1 + $i * $i -\
    \ $i + 1;\n        }\n    }\n    return $sum / 3;\n}\n$start = microtime(true);\n\
    echo get_max_triples(6);\n$end = microtime(true);\necho \"\\n\";\necho $end -\
    \ $start;\necho \"\\n\";\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "60\n3.1948089599609E-5\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpx58z3wr0.php:33\nStack trace:\n#0 /tmp/tmpx58z3wr0.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpx58z3wr0.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $count++;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $combinations = [$arr[0], $arr[1], $arr[2]];\n    for ($i = 3; $i\
    \ < count($arr); $i++) {\n        $combinations[] = $arr[$i - 2];\n        $combinations[]\
    \ = $arr[$i - 1];\n        $combinations[] = $arr[$i];\n    }\n    $valid_count\
    \ = 0;\n    for ($i = 0; $i < count($combinations); $i+=3) {\n        if ($combinations[$i]\
    \ + $combinations[$i + 1] + $combinations[$i + 2] % 3 == 0) {\n            $valid_count++;\n\
    \        }\n    }\n    return $valid_count;\n}\n$res = get_max_triples(5);\nprint_r($res);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucil17ap.php:38\n\
    Stack trace:\n#0 /tmp/tmpucil17ap.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpucil17ap.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    // Write\
    \ your code here\n    $count = 0;\n    $a = range(1, $n);\n    for ($i = 0; $i\
    \ < count($a); $i++) {\n        $a[$i] = $a[$i] * $a[$i] - $a[$i] + 1;\n    }\n\
    \    for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    // var_dump($arr);\n    $combinations = countCombinations($arr);\n\
    \    $comb_res = [];\n    for ($i = 0; $i < count($combinations); $i++) {\n  \
    \      $comb_res[] = array_sum($combinations[$i]);\n    }\n    // var_dump($comb_res);\n\
    \    $count = 0;\n    for ($i = 0; $i < count($comb_res); $i++) {\n        if\
    \ ($comb_res[$i] % 3 == 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countCombinations()\
    \ in /tmp/tmpkhf57aaf.php:18\nStack trace:\n#0 /tmp/tmpkhf57aaf.php(34): get_max_triples(5)\n\
    #1 /tmp/tmpkhf57aaf.php(38): candidate(5)\n#2 /tmp/tmpkhf57aaf.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkhf57aaf.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i *\
    \ $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $triples++;\n                }\n            }\n        }\n    }\n   \
    \ return $triples;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i *\
    \ $i - $i + 1;\n    }\n    $len = count($a);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        for ($j = $i + 1; $j < $len; $j++) {\n            for ($k = $j +\
    \ 1; $k < $len; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $max =\
    \ 0;\n    $array = [];\n    for ($i = 1; $i <= $n; $i++) {\n        array_push($array,\
    \ $i * $i - $i + 1);\n    }\n    for ($i = 0; $i < count($array); $i++) {\n  \
    \      for ($j = $i + 1; $j < count($array); $j++) {\n            for ($k = $j\
    \ + 1; $k < count($array); $k++) {\n                if (($array[$i] + $array[$j]\
    \ + $array[$k]) % 3 == 0) {\n                    $max++;\n                }\n\
    \            }\n        }\n    }\n    return $max;\n}\nprint_r(get_max_triples(5));\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if ((($i * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n$n = 5;\necho get_max_triples($n);\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  // find\
    \ the max number at an index k, such that a[i] + a[j] + a[k] is divisible by 3\n\
    \  // a[i] + a[j] = 3 * x = a[k] + 3 * y\n  // for a given number a[i], find the\
    \ max number in [a[i], a[n]], s.t. a[k] % 3 === (a[i] + 3 * y) % 3\n  // for the\
    \ other two numbers in the triple, a[j] = a[i] + 3 * y - a[k]\n  // let x = number\
    \ of elements in a, such that a[k] % 3 === (a[i] + 3 * y) % 3\n  // sum of all\
    \ x values will give the number of triples where a[i] + a[j] + a[k] is divisible\
    \ by 3\n  $x_sum = 0;\n  $a = array_fill(1, $n, 0);\n  for ($i = 1; $i <= $n;\
    \ $i++) {\n    $a[$i] = $i * $i - $i + 1;\n  }\n  for ($i = 1; $i <= $n; $i++)\
    \ {\n    $max_k = $n + 1;\n    for ($y = 0; $y < 3; $y++) {\n      $max_k = min($max_k,\
    \ find_max_k($a, $i, $y, $n));\n    }\n    $x_sum += $max_k - $i;\n  }\n  return\
    \ $x_sum;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function find_max_k()\
    \ in /tmp/tmpkn7f67_y.php:27\nStack trace:\n#0 /tmp/tmpkn7f67_y.php(34): get_max_triples(5)\n\
    #1 /tmp/tmpkn7f67_y.php(38): candidate(5)\n#2 /tmp/tmpkn7f67_y.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkn7f67_y.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ ((($i * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n\
    \                    $result++;\n                }\n            }\n        }\n\
    \    }\n    return $result;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjq7bru3l.php:32\n\
    Stack trace:\n#0 /tmp/tmpjq7bru3l.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjq7bru3l.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $a = [];\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    $a[] = pow($i, 2) - $i + 1;\n  }\n  $cnt\
    \ = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n          $cnt++;\n        }\n      }\n    }\n  }\n \
    \ return $cnt;\n}\n\nprint_r(get_max_triples(5));\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if ($n\
    \ < 3) return 0;\n    $count = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n\
    \ - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for\
    \ ($k = $j + 1; $k < $n; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$count =\
    \ 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\
    \t\t\tfor ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif (($i * $i - $i + 1 + $j *\
    \ $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\necho get_max_triples(5);\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvo44qkm0.php:33\n\
    Stack trace:\n#0 /tmp/tmpvo44qkm0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvo44qkm0.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$result\
    \ = 0;\n\t$a = [];\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$a[$i] = $i * $i - $i\
    \ + 1;\n\t}\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\tfor ($j = $i + 1; $j <= $n;\
    \ $j++) {\n\t\t\tfor ($k = $j + 1; $k <= $n; $k++) {\n\t\t\t\tif (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n\t\t\t\t\t$result++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn $result;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    // $arr\
    \ = [];\n    // for ($i = 1; $i <= $n; $i++) {\n    //     $arr[] = $i * $i -\
    \ $i + 1;\n    // }\n    // $count = 0;\n    // for ($i = 0; $i < $n; $i++) {\n\
    \    //     for ($j = $i + 1; $j < $n; $j++) {\n    //         for ($k = $j +\
    \ 1; $k < $n; $k++) {\n    //             if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n    //                 $count++;\n    //             }\n    //\
    \         }\n    //     }\n    // }\n    // return $count;\n    // $arr = [];\n\
    \    // for ($i = 1; $i <= $n; $i++) {\n    //     $arr[] = $i * $i - $i + 1;\n\
    \    // }\n    // $count = 0;\n    // for ($i = 0; $i < $n; $i++) {\n    //  \
    \   for ($j = $i + 1; $j < $n; $j++) {\n    //         for ($k = $j + 1; $k <\
    \ $n; $k++) {\n    //             if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 ==\
    \ 0) {\n    //                 $count++;\n    //             }\n    //       \
    \  }\n    //     }\n    // }\n    // return $count;\n    // $arr = [];\n    //\
    \ for ($i = 1; $i <= $n; $i++) {\n    //     $arr[] = $i * $i - $i + 1;\n    //\
    \ }\n    // $count = 0;\n    // for ($i = 0; $i < $n; $i++) {\n    //     for\
    \ ($j = $i + 1; $j < $n; $j++) {\n    //         for ($k = $j + 1; $k < $n; $k++)\
    \ {\n    //             if (($arr[$i] + $arr[\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp00tmq3v1.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$results\
    \ = 0;\n\t$a = array();\n\t$a[0] = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t\
    $a[$i] = $i * $i - $i + 1;\n\t}\n\tprint_r($a);\n\tfor ($i = 1; $i <= $n; $i++)\
    \ {\n\t\tfor ($j = $i + 1; $j <= $n; $j++) {\n\t\t\tif ($a[$i] + $a[$j] <= $a[$n])\
    \ {\n\t\t\t\tfor ($k = $j + 1; $k <= $n; $k++) {\n\t\t\t\t\tif ($a[$i] + $a[$j]\
    \ + $a[$k] % 3 == 0) {\n\t\t\t\t\t\t$results++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn $results;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 3\n    [3] => 7\n    [4]\
    \ => 13\n    [5] => 21\n)\n0Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 3\n\
    \    [3] => 7\n    [4] => 13\n    [5] => 21\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpmo3jiv4n.php:40\nStack trace:\n#0 /tmp/tmpmo3jiv4n.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmo3jiv4n.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\n}\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47jkchaa.php:20\n\
    Stack trace:\n#0 /tmp/tmp47jkchaa.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp47jkchaa.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = [];\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i *\
    \ $i - $i + 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n    \
    \            if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $triples[]\
    \ = [$a[$i], $a[$j], $a[$k]];\n                }\n            }\n        }\n \
    \   }\n    return count($triples);\n}\n$n = 5;\nprint_r(get_max_triples($n));\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $ans =\
    \ 0;\n    $seq = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $seq[] = $i\
    \ * $i - $i + 1;\n    }\n    // var_dump($seq);\n    $k = 0;\n    while ($k <\
    \ $n) {\n        $j = $k + 1;\n        while ($j < $n) {\n            $i = $j\
    \ + 1;\n            while ($i < $n) {\n                if (($seq[$i] + $seq[$j]\
    \ + $seq[$k]) % 3 == 0) {\n                    $ans++;\n                }\n  \
    \              $i++;\n            }\n            $j++;\n        }\n        $k++;\n\
    \    }\n    return $ans;\n}\n$n = 5;\necho get_max_triples($n) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $max_triples = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n  \
    \      for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j +\
    \ 1; $k < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $max_triples++;\n                }\n      \
    \      }\n        }\n    }\n    return $max_triples;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpek99x94j.php:32\n\
    Stack trace:\n#0 /tmp/tmpek99x94j.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpek99x94j.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $a = [];\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    $a[] = $i * $i - $i + 1;\n  }\n  $result\
    \ = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n          $result++;\n        }\n      }\n    }\n  }\n\
    \  return $result;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    $arr = range(1, $n);\n    for ($i = 0; $i < $n; $i++) {\n        $arr[$i]\
    \ = $arr[$i] * $arr[$i] - $arr[$i] + 1;\n    }\n    for ($i = 0; $i < $n - 2;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $result++;\n                }\n           \
    \ }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $triples++;\n                }\n            }\n        }\n  \
    \  }\n    return $triples;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd01rv7bt.php:31\n\
    Stack trace:\n#0 /tmp/tmpd01rv7bt.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpd01rv7bt.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $cnt =\
    \ 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] =\
    \ $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j\
    \ = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0)\n                  \
    \  $cnt++;\n            }\n        }\n    }\n    return $cnt;\n}\necho get_max_triples(5)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $a = [];\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    $a[] = $i * $i - $i + 1;\n  }\n  $count\
    \ = 0;\n  $i = 0;\n  $j = 1;\n  $k = 2;\n  $prev_i = null;\n  $prev_j = null;\n\
    \  $prev_k = null;\n  while ($k < $n) {\n    while ($k < $n) {\n      while ($k\
    \ < $n) {\n        if ($prev_i != $i || $prev_j != $j || $prev_k != $k) {\n  \
    \        if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            $count++;\n \
    \           $prev_i = $i;\n            $prev_j = $j;\n            $prev_k = $k;\n\
    \          }\n        }\n        $k++;\n      }\n      $j++;\n      $k = $j +\
    \ 1;\n    }\n    $i++;\n    $j = $i + 1;\n    $k = $j + 1;\n  }\n  return $count;\n\
    }\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $max = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k <\
    \ count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) %\
    \ 3 == 0) {\n                    $max++;\n                }\n            }\n \
    \       }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $a = [];\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    $a[] = $i * $i - $i + 1;\n  }\n  $max_triples\
    \ = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n          $max_triples++;\n        }\n      }\n    }\n\
    \  }\n  return $max_triples;\n}\necho get_max_triples(5) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i + $j + $k) % 3 == 0) {\n                    $triples++;\n             \
    \   }\n            }\n        }\n    }\n    return $triples;\n}\n$n = 5;\nprint(get_max_triples($n));\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnrwxeez.php:32\n\
    Stack trace:\n#0 /tmp/tmpdnrwxeez.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdnrwxeez.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    $arr = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[$i]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for\
    \ ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    //return\
    \ $n * ($n - 1) * ($n - 2) / 6;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[] = $i * $i - $i + 1;\n    }\n    $cnt = 0;\n    for ($i = 0;\
    \ $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n     \
    \       for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $cnt++;\n                }\n    \
    \        }\n        }\n    }\n    return $cnt;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$arr = [];\n\
    \tfor ($i=1; $i <= $n; $i++) { \n\t\t$arr[] = ($i * $i) - $i + 1;\n\t}\n\techo\
    \ \"\\$arr : \";\n\tvar_dump($arr);\n\t$triples = 0;\n\tfor ($i=0; $i < count($arr);\
    \ $i++) { \n\t\tfor ($j=$i+1; $j < count($arr); $j++) { \n\t\t\tfor ($k=$j+1;\
    \ $k < count($arr); $k++) { \n\t\t\t\tif(($arr[$i] + $arr[$j] + $arr[$k]) % 3\
    \ == 0) {\n\t\t\t\t\t$triples++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $triples;\n\
    }\necho get_max_triples(5);\necho \"\\n\";\necho get_max_triples(1);\necho \"\\\
    n\";\necho get_max_triples(2);\necho \"\\n\";\necho get_max_triples(3);\necho\
    \ \"\\n\";\necho get_max_triples(4);\necho \"\\n\";\necho get_max_triples(10);\n\
    echo \"\\n\";\necho get_max_triples(100);\necho \"\\n\";\necho get_max_triples(1000);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "b'$arr : array(5) {\\n  [0]=>\\n  int(1)\\n  [1]=>\\n  int(3)\\n  [2]=>\\\
    n  int(7)\\n  [3]=>\\n  int(13)\\n  [4]=>\\n  int(21)\\n}\\n1\\n$arr : array(1)\
    \ {\\n  [0]=>\\n  int(1)\\n}\\n0\\n$arr : array(2) {\\n  [0]=>\\n  int(1)\\n \
    \ [1]=>\\n  int(3)\\n}\\n0\\n$arr : array(3) {\\n  [0]=>\\n  int(1)\\n  [1]=>\\\
    n  int(3)\\n  [2]=>\\n  int(7)\\n}\\n0\\n$arr : array(4) {\\n  [0]=>\\n  int(1)\\\
    n  [1]=>\\n  int(3)\\n  [2]=>\\n  int(7)\\n  [3]=>\\n  int(13)\\n}\\n1\\n$arr\
    \ : array(10) {\\n  [0]=>\\n  int(1)\\n  [1]=>\\n  int(3)\\n  [2]=>\\n  int(7)\\\
    n  [3]=>\\n  int(13)\\n  [4]=>\\n  int(21)\\n  [5]=>\\n  int(31)\\n  [6]=>\\n\
    \  int(43)\\n  [7]=>\\n  int(57)\\n  [8]=>\\n  int(73)\\n  [9]=>\\n  int(91)\\\
    n}\\n36\\n$arr : array(100) {\\n  [0]=>\\n  int(1)\\n  [1]=>\\n  int(3)\\n  [2]=>\\\
    n  int(7)\\n  [3]=>\\n  int(13)\\n  [4]=>\\n  int(21)\\n  [5]=>\\n  int(31)\\\
    n  [6]=>\\n  int(43)\\n  [7]=>\\n  int(57)\\n  [8]=>\\n  int(73)\\n  [9]=>\\n\
    \  int(91)\\n  [10]=>\\n  int(111)\\n  [11]=>\\n  int(133)\\n  [12]=>\\n  int(157)\\\
    n  [13]=>\\n  int(183)\\n  [14]=>\\n  int(211)\\n  [15]=>\\n  int(241)\\n  [16]=>\\\
    n  int(273)\\n  [17]=>\\n  int(307)\\n  [18]=>\\n  int(343)\\n  [19]=>\\n  int(381)\\\
    n  [20]=>\\n  int(421)\\n  [21]=>\\n  int(463)\\n  [22]=>\\n  int(507)\\n  [23]=>\\\
    n  int(553)\\n  [24]=>\\n  int(601)\\n  [25]=>\\n  int(651)\\n  [26]=>\\n  int(703)\\\
    n  [27]=>\\n  int(757)\\n  [28]=>\\n  int(813)\\n  [29]=>\\n  int(871)\\n  [30]=>\\\
    n  int(931)\\n  [31]=>\\n  int(993)\\n  [32]=>\\n  int(1057)\\n  [33]=>\\n  int(1123)\\\
    n  [34]=>\\n  int(1191)\\n  [35]=>\\n  int(1261)\\n  [36]=>\\n  int(1333)\\n \
    \ [37]=>\\n  int(1407)\\n  [38]=>\\n  int(1483)\\n  [39]=>\\n  int(1561)\\n  [40]=>\\\
    n  int(1641)\\n  [41]=>\\n  int(1723)\\n  [42]=>\\n  int(1807)\\n  [43]=>\\n \
    \ int(1893)\\n  [44]=>\\n  int(1981)\\n  [45]=>\\n  int(2071)\\n  [46]=>\\n  int(2163)\\\
    n  [47]=>\\n  int(2257)\\n  [48]=>\\n  int(2353)\\n  [49]=>\\n  int(2451)\\n \
    \ [50]=>\\n  int(2551)\\n  [51]=>\\n  int(2653)\\n  [52]=>\\n  int(2757)\\n  [53]=>\\\
    n  int(2863)\\n  [54]=>\\n  int(2971)\\n  [55]=>\\n  int(3081)\\n  [56]=>\\n \
    \ int(3193)\\n  [57]=>\\n  int(3307)\\n  [58]=>\\n  int(3423)\\n  [59]=>\\n  int(3541)\\\
    n  [60]=>\\n  int(3661)\\n  [61]=>\\n  int(3783)\\n  [62]=>\\n  int(3"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$res = 0;\n\
    \tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\t\
    for ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif (($i + 1) * ($i + 1) - ($i + 1)\
    \ + 1 + ($j + 1) * ($j + 1) - ($j + 1) + 1 + ($k + 1) * ($k + 1) - ($k + 1) +\
    \ 1) % 3 == 0) {\n\t\t\t\t\t$res++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $res;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpouj99z6i.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $result = 0;\n    $triples = [];\n    for ($i = 0; $i < $n - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $triples[] = [$a[$i], $a[$j], $a[$k]];\n                \
    \    $result++;\n                }\n            }\n        }\n    }\n    // echo\
    \ \"<pre>\";\n    // print_r($triples);\n    // echo \"</pre>\";\n    return $result;\n\
    }\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $cnt =\
    \ 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i *\
    \ $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i\
    \ + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n  \
    \              if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $cnt++;\n\
    \                }\n            }\n        }\n    }\n    return $cnt;\n}\n\necho\
    \ get_max_triples(5);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxsxvm9n.php:36\n\
    Stack trace:\n#0 /tmp/tmpyxsxvm9n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpyxsxvm9n.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example: print \"Hello world!\";\n    $count = 0;\n    $a = [];\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    for($i\
    \ = 0; $i < $n; $i++) {\n        for($j = $i + 1; $j < $n; $j++) {\n         \
    \   for($k = $j + 1; $k < $n; $k++) {\n                if(($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\n\n$result = get_max_triples(5);\necho\
    \ $result;\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $sum = 0;\n    $count = 0;\n    $mult3 = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        $sum = $a[$i];\n        for ($j = $i + 1; $j < count($a); $j++)\
    \ {\n            $sum += $a[$j];\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                $sum += $a[$k];\n                if ($sum % 3 == 0)\
    \ {\n                    $mult3++;\n                }\n                $sum -=\
    \ $a[$k];\n            }\n            $sum -= $a[$j];\n        }\n    }\n    return\
    \ $mult3;\n}\n\necho get_max_triples(5);\n\nfunction candidate(...$args) {\n \
    \   return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $k = floor($n\
    \ / 3);\n    $v1 = $k * (6 * $k + 3);\n    $v2 = ($k + 1) * (6 * $k + 9);\n  \
    \  $v3 = ($k + 2) * (6 * $k + 15);\n    return floor(($v1 + $v2 + $v3) / 6);\n\
    }\n\n$n = 3;\necho get_max_triples($n);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "17\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4jwp7vcw.php:27\n\
    Stack trace:\n#0 /tmp/tmp4jwp7vcw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4jwp7vcw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $triples++;\n                }\n            }\n        }\n    }\n    return\
    \ $triples;\n}\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [1];\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $max_triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $max_triples++;\n                }\n            }\n        }\n    }\n\
    \    return $max_triples;\n}\n\nprint_r(get_max_triples(5));\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptp69tsw6.php:36\n\
    Stack trace:\n#0 /tmp/tmptp69tsw6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptp69tsw6.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                  \
    \  $count++;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1w9zbh1k.php:35\n\
    Stack trace:\n#0 /tmp/tmp1w9zbh1k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1w9zbh1k.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[$i - 1] = $i * $i - $i + 1;\n\
    \    }\n    $total = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $total++;\n                }\n            }\n        }\n    }\n\
    \    return $total;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $res =\
    \ 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i *\
    \ $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i\
    \ + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n  \
    \              if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                  \
    \  $res++;\n                }\n            }\n        }\n    }\n    return $res;\n\
    }\n$n = 5;\nprint_r(get_max_triples($n));\nfunction candidate(...$args) {\n  \
    \  return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $ans = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j\
    \ < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n            \
    \    if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $ans++;\n\
    \                }\n            }\n        }\n    }\n    return $ans;\n}\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n         \
    \       if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [1];\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $len = count($a);\n    $cnt = 0;\n    for ($i = 0; $i < $len - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $len - 1; $j++) {\n            for ($k = $j +\
    \ 1; $k < $len; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $cnt++;\n                }\n            }\n      \
    \  }\n    }\n    return $cnt;\n}\n\necho get_max_triples(5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd__guki.php:37\n\
    Stack trace:\n#0 /tmp/tmpbd__guki.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbd__guki.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ array();\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i\
    \ + 1;\n    }\n    $max_triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 ==\
    \ 0) {\n                    $max_triples++;\n                }\n            }\n\
    \        }\n    }\n    return $max_triples;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = range(1,\
    \ $n);\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jin0x5p.php:32\n\
    Stack trace:\n#0 /tmp/tmp5jin0x5p.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5jin0x5p.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = ($i * $i) - $i + 1;\n  \
    \  }\n    $valid_triples = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <=\
    \ $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n    \
    \                $valid_triples++;\n                }\n            }\n       \
    \ }\n    }\n    return $valid_triples;\n}\necho get_max_triples(5);\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprdc54aqa.php:35\n\
    Stack trace:\n#0 /tmp/tmprdc54aqa.php(41): test()\n#1 {main}\n  thrown in /tmp/tmprdc54aqa.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $answer = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n       \
    \ for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) $answer++;\n            }\n        }\n    }\n    return $answer;\n\
    }\n\necho get_max_triples(5) . \"\\n\";\necho get_max_triples(100) . \"\\n\";\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n53361\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $triples\
    \ = 0;\n  for ($i = 1; $i < $n - 1; $i++) {\n    for ($j = $i + 1; $j < $n; $j++)\
    \ {\n      for ($k = $j + 1; $k <= $n; $k++) {\n        if (($i * $i - $i + 1\
    \ + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $triples++;\n\
    \        }\n      }\n    }\n  }\n  return $triples;\n}\necho get_max_triples(5);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr =\
    \ [1];\n    for ($i = 1; $i < $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n$n = 5;\nprint_r(get_max_triples($n));\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0ku7z8x.php:36\n\
    Stack trace:\n#0 /tmp/tmp_0ku7z8x.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_0ku7z8x.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$arr = [];\n\
    \tfor ($i=1; $i <= $n; $i++) { \n\t\t$arr[] = $i * $i - $i + 1;\n\t}\n\t$result\
    \ = 0;\n\tfor ($i=0; $i < $n-2; $i++) { \n\t\tfor ($j=$i+1; $j < $n-1; $j++) {\
    \ \n\t\t\tfor ($k=$j+1; $k < $n; $k++) { \n\t\t\t\tif(($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n\t\t\t\t\t$result++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if ($n\
    \ < 3) {\n        return 0;\n    }\n    $result = 0;\n    $arr = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    //\
    \ print_r($arr);\n    $sum = array_sum($arr);\n    if ($sum % 3 == 0) {\n    \
    \    $result = $n * ($n - 1) * ($n - 2) / 6;\n    } else {\n        $indexArr\
    \ = [];\n        for ($i = 0; $i < $n; $i++) {\n            if ($arr[$i] % 3 ==\
    \ $sum % 3) {\n                $indexArr[] = $i;\n            }\n        }\n \
    \       // print_r($indexArr);\n        if (sizeof($indexArr) >= 3) {\n      \
    \      $result = sizeof($indexArr) * ($n - 1) * ($n - 2) / 6;\n        } else\
    \ if (sizeof($indexArr) == 2) {\n            $result = $indexArr[0] * ($indexArr[0]\
    \ - 1) / 2 * ($n - $indexArr[1] - 1);\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm5a2y11_.php:46\n\
    Stack trace:\n#0 /tmp/tmpm5a2y11_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpm5a2y11_.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnigi_p36.php:30\n\
    Stack trace:\n#0 /tmp/tmpnigi_p36.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnigi_p36.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $res =\
    \ 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $res++;\n                }\n            }\n        }\n    }\n\
    \    return $res;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $cnt = 0;\n\
    \  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n   \
    \   for ($k = $j + 1; $k < $n; $k++) {\n        if (($i * $i - $i + 1 + $j * $j\
    \ - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $cnt++;\n        }\n   \
    \   }\n    }\n  }\n  return $cnt;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9rvxxop.php:31\n\
    Stack trace:\n#0 /tmp/tmpr9rvxxop.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpr9rvxxop.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\tif ($n ==\
    \ 0) return 0;\n\t$a = range(1, $n, 1);\n\t$b = array_map(function($element) {\n\
    \t\treturn $element * $element - $element + 1;\n\t}, $a);\n\t$triples = [];\n\t\
    for ($i = 0; $i < count($b); $i++) {\n\t\tfor ($j = $i + 1; $j < count($b); $j++)\
    \ {\n\t\t\tfor ($k = $j + 1; $k < count($b); $k++) {\n\t\t\t\tif (($b[$i] + $b[$j]\
    \ + $b[$k]) % 3 == 0) {\n\t\t\t\t\t$triples[] = $b[$i] + $b[$j] + $b[$k];\n\t\t\
    \t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count($triples);\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i *\
    \ $i - $i + 1;\n    }\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $triples++;\n                }\n            }\n        }\n    }\n    return\
    \ $triples;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $max_triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $max_triples++;\n                }\n            }\n        }\n    }\n\
    \    return $max_triples;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $triples\
    \ = [];\n  for ($i = 1; $i <= $n; $i++) {\n    $a[$i] = $i * $i - $i + 1;\n  }\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    for ($j = $i + 1; $j <= $n; $j++) {\n \
    \     for ($k = $j + 1; $k <= $n; $k++) {\n        if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n          $triples[] = [$a[$i], $a[$j], $a[$k]];\n        }\n \
    \     }\n    }\n  }\n  return count($triples);\n}\nprint_r(get_max_triples(5));\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $s = $n\
    \ * ($n - 1) / 2;\n    $d = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $s\
    \ += $i * $i - $i + 1;\n        if ($s % 3 == 0) {\n            $d++;\n      \
    \  }\n    }\n    return $d;\n}\n\n$n = readline(\"n: \");\necho(get_max_triples($n));\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function readline() in\
    \ /tmp/tmp8z5aqjyk.php:24\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp8z5aqjyk.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    $num_of_triples = 0;\n    $diff = 0;\n    $next_pow = 0;\n    $a =\
    \ [];\n    $a[0] = $n;\n    $a[1] = 1;\n    $a[2] = 3;\n    $a[3] = 6;\n    $a[4]\
    \ = 10;\n    $a[5] = 15;\n    $a[6] = 21;\n    $a[7] = 28;\n    $a[8] = 36;\n\
    \    $a[9] = 45;\n    $a[10] = 55;\n    $a[11] = 66;\n    $a[12] = 78;\n    $a[13]\
    \ = 91;\n    $a[14] = 105;\n    $a[15] = 120;\n    $a[16] = 136;\n    $a[17] =\
    \ 153;\n    $a[18] = 171;\n    $a[19] = 190;\n    $a[20] = 210;\n    $a[21] =\
    \ 231;\n    $a[22] = 253;\n    $a[23] = 276;\n    $a[24] = 300;\n    $a[25] =\
    \ 325;\n    $a[26] = 351;\n    $a[27] = 378;\n    $a[28] = 406;\n    $a[29] =\
    \ 435;\n    $a[30] = 465;\n    $a[31] = 496;\n    $a[32] = 528;\n    $a[33] =\
    \ 561;\n    $a[34] = 595;\n    $a[35] = 630;\n    $a[36] = 666;\n    $a[37] =\
    \ 703;\n    $a[38] = 741;\n    $a[39] = 780;\n    $a[40] = 820;\n    $a[41] =\
    \ 861;\n    $a[42] = 903;\n    $a[43] = 946;\n    $a[44] = 990;\n    $a[45] =\
    \ 10\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfc5yvf56.php on line 64\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $triples++;\n                }\n            }\n        }\n    }\n    return\
    \ $triples;\n}\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4o_zbe3.php:32\n\
    Stack trace:\n#0 /tmp/tmpo4o_zbe3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpo4o_zbe3.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $res =\
    \ 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($i *\
    \ $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n           \
    \         $res++;\n                }\n            }\n        }\n    }\n    return\
    \ $res;\n}\necho get_max_triples(5);\necho \"<br>\";\necho get_max_triples(8);\n\
    echo \"<br>\";\necho get_max_triples(6);\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4<br>20<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphltiul5c.php:35\n\
    Stack trace:\n#0 /tmp/tmphltiul5c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphltiul5c.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $ans =\
    \ 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if\
    \ ((($i * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n\
    \                    $ans++;\n                }\n            }\n        }\n  \
    \  }\n    return $ans;\n}\necho get_max_triples(5) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ Input: n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n  \
    \              if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                  \
    \  $res++;\n                }\n            }\n        }\n    }\n    return $res;\n\
    }\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

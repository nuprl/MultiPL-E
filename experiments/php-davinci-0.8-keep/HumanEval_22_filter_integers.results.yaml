name: HumanEval_22_filter_integers
language: php
results:
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    // Write\
    \ your code here\n    $result = [];\n    foreach ($values as $value) {\n     \
    \   if (is_int($value)) {\n            $result[] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $integers[] = $value;\n        }\n    }\n    return $integers;\n}\n\
    $out = filter_integers(['a', 3.14, 5]);\nprint_r($out);\necho \"\\n\";\n$out =\
    \ filter_integers([1, 2, 3, 'abc', [], []]);\nprint_r($out);\necho \"\\n\";\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 5\n)\n\nArray\n(\n    [0] => 1\n    [1] => 2\n   \
    \ [2] => 3\n)\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $int_list\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $int_list[] = $value;\n        }\n    }\n    return $int_list;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\treturn\
    \ array_filter($values, 'is_int');\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp54shx5j4.php:17\n\
    Stack trace:\n#0 /tmp/tmp54shx5j4.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp54shx5j4.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t// Get\
    \ rid of any non-integer elements in the list\n\t$result = array();\n\tforeach\
    \ ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$result[] = $value;\n\
    \t\t}\n\t}\n\treturn $result;\n}\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $item) {\n        if (is_int($item)) {\n    \
    \        $integers[] = $item;\n        }\n    }\n    return $integers;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0t4mun0.php:19\n\
    Stack trace:\n#0 /tmp/tmpl0t4mun0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpl0t4mun0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\treturn\
    \ array_filter($values, function($v) {\n\t\treturn is_int($v);\n\t});\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuwo9635n.php:19\n\
    Stack trace:\n#0 /tmp/tmpuwo9635n.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpuwo9635n.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  // your\
    \ code here\n  $result = [];\n  foreach ($values as $value) {\n    if (is_int($value))\
    \ {\n      $result[] = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmxm3vfr.php:19\n\
    Stack trace:\n#0 /tmp/tmplmxm3vfr.php(23): test()\n#1 {main}\n  thrown in /tmp/tmplmxm3vfr.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $res\
    \ = [];\n    foreach ($values as $val) {\n        if (is_int($val)) {\n      \
    \      $res[] = $val;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$filtered\
    \ = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\
    \t$filtered[] = $value;\n\t\t}\n\t}\n\treturn $filtered;\n}\n\n$x = filter_integers(array('a',\
    \ 3.14, 5));\n$y = filter_integers(array(1, 2, 3, 'abc', array(), array()));\n\
    echo json_encode($x) . \"\\n\";\necho json_encode($y) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "[5]\n[1,2,3]\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $filter\
    \ = function($x) {\n        return is_int($x);\n    };\n    return array_filter($values,\
    \ $filter);\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly17xm5.php:20\n\
    Stack trace:\n#0 /tmp/tmpjly17xm5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjly17xm5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $result\
    \ = [];\n  foreach ($values as $value) {\n    if (is_int($value)) {\n      $result[]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $integers[] = $value;\n        }\n    }\n    return $integers;\n}\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, 'is_int');\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfmzfk2g0.php:17\n\
    Stack trace:\n#0 /tmp/tmpfmzfk2g0.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpfmzfk2g0.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  // write\
    \ your code here...\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7otol7g.php:16\n\
    Stack trace:\n#0 /tmp/tmpm7otol7g.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpm7otol7g.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$integers\
    \ = array();\n\tfor ($i = 0; $i < count($values); $i++) {\n\t\tif (is_int($values[$i]))\
    \ {\n\t\t\tarray_push($integers, $values[$i]);\n\t\t}\n\t}\n\treturn $integers;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  // BEGIN\
    \ (write your solution here)\n  return array_filter($values, function($n) {\n\
    \    return is_int($n);\n  });\n  // END\n}\nprint_r(filter_integers(['a', 3.14,\
    \ 5]));\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [2] => 5\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp0ia21kwn.php:21\nStack trace:\n#0 /tmp/tmp0ia21kwn.php(25): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0ia21kwn.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $val) {\n        if (is_int($val)) {\n      \
    \      $result[] = $val;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$integers\
    \ = array();\n\tforeach ($values as $val) {\n\t\tif (is_int($val)) {\n\t\t\t$integers[]\
    \ = $val;\n\t\t}\n\t}\n\treturn $integers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    // Write\
    \ code here\n    $values = array_filter($values, function($var){\n        return\
    \ is_int($var);\n    });\n    return $values;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgg1daoe.php:21\n\
    Stack trace:\n#0 /tmp/tmpwgg1daoe.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwgg1daoe.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $integers[] = $value;\n        }\n    }\n    return $integers;\n}\n\
    echo \"<pre>\";\nprint_r(filter_integers(['a', 3.14, 5]));\necho \"</pre>\";\n\
    echo \"<pre>\";\nprint_r(filter_integers([1, 2, 3, 'abc', {}, []]));\necho \"\
    </pre>\";\n\necho \"<hr>\";\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2ggfv_v0.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $result\
    \ = [];\n  foreach ($values as $value) {\n    if (is_int($value)) {\n      $result[]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    // return\
    \ an array with only integers\n    // ...\n    $integers = [];\n    foreach ($values\
    \ as $value) {\n        if (is_int($value)) {\n            $integers[] = $value;\n\
    \        }\n    }\n    return $integers;\n}\nfunction candidate(...$args) {\n\
    \    return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$integers\
    \ = filter_integers(['a', 3.14, 5]);\nvar_dump($integers);\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(1) {\n  [0]=>\n  int(5)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_6ch0bd.php:18\n\
    Stack trace:\n#0 /tmp/tmpp_6ch0bd.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpp_6ch0bd.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$ints\
    \ = array();\n\tforeach ($values as $item) {\n\t\tif (is_int($item)) {\n\t\t\t\
    $ints[] = $item;\n\t\t}\n\t}\n\treturn $ints;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $integers[] = $value;\n        }\n    }\n    return $integers;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$output\
    \ = [];\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$output[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $output;\n}\n\nprint_r(filter_integers(['a',\
    \ 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc', {}, []]));\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpuoncij_d.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$result\
    \ = [];\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho implode(', ', filter_integers(['a',\
    \ 3.14, 5])) . PHP_EOL;\necho implode(', ', filter_integers([1, 2, 3, 'abc', [],\
    \ []])) . PHP_EOL;\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "5\n1, 2, 3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $filtered\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $filtered[] = $value;\n        }\n    }\n    return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $integers[] = $value;\n        }\n    }\n    return $integers;\n}\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, 'is_int');\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqpklb8p3.php:17\n\
    Stack trace:\n#0 /tmp/tmpqpklb8p3.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpqpklb8p3.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $res\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $res[] = $value;\n        }\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $integers[] = $value;\n        }\n    }\n    return $integers;\n}\n\
    print_r(filter_integers(['a', 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc',\
    \ [], {}]));\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiiorgshu.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  // CODE\
    \ HERE\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsu9xjgjc.php:16\n\
    Stack trace:\n#0 /tmp/tmpsu9xjgjc.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpsu9xjgjc.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\treturn\
    \ array_filter($values, \"is_int\");\n}\n\nfunction candidate(...$args) {\n  \
    \  return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp152o0cn5.php:17\n\
    Stack trace:\n#0 /tmp/tmp152o0cn5.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp152o0cn5.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $lst\
    \ = [];\n    for ($i = 0; $i < count($values); $i++) {\n        if (is_int($values[$i]))\
    \ {\n            array_push($lst, $values[$i]);\n        }\n    }\n    return\
    \ $lst;\n}\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$res =\
    \ array();\n\tforeach ($values as $v) {\n\t\tif (is_int($v)) {\n\t\t\t$res[] =\
    \ $v;\n\t\t}\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $integers[] = $value;\n        }\n    }\n    return $integers;\n}\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm6zsvovz.php:19\n\
    Stack trace:\n#0 /tmp/tmpm6zsvovz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpm6zsvovz.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $new\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $new[] = $value;\n        }\n    }\n    return $new;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $arr\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $arr[] = $value;\n        }\n    }\n    return $arr;\n}\n\nprint_r(filter_integers(['a',\
    \ 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc', {}, []]));\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2i2r9fio.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $response\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $response[] = $value;\n        }\n    }\n    return $response;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vofo9bq.php:19\n\
    Stack trace:\n#0 /tmp/tmp0vofo9bq.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0vofo9bq.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpad1fh62x.php:19\n\
    Stack trace:\n#0 /tmp/tmpad1fh62x.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpad1fh62x.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nprint_r(filter_integers(['a', 3.14, 5]));\nprint_r(filter_integers([1,\
    \ 2, 3, 'abc', [], []]));\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [2] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7xuwnx_y.php:21\n\
    Stack trace:\n#0 /tmp/tmp7xuwnx_y.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7xuwnx_y.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  // Iterate\
    \ over the list and select only integers\n  return array_filter($values, function($value)\
    \ {\n    // Return True if given value is integer and false otherwise\n    return\
    \ is_int($value);\n  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekf3xxtv.php:21\n\
    Stack trace:\n#0 /tmp/tmpekf3xxtv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpekf3xxtv.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9mo_owqa.php:19\n\
    Stack trace:\n#0 /tmp/tmp9mo_owqa.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9mo_owqa.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t// takes\
    \ a list of values and return list of integers\n\t$temp=array();\n\tforeach ($values\
    \ as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$temp[]=$value;\n\t\t}\n\t}\n\
    \treturn $temp;\n}\necho \"<pre>\";\nprint_r(filter_integers(['a', 3.14, 5]));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(filter_integers([1, 2, 3, 'abc', [],\
    \ []]));\necho \"</pre>\";\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 5\n)\n</pre><pre>Array\n(\n    [0] => 1\n   \
    \ [1] => 2\n    [2] => 3\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $integers[] = $value;\n        }\n    }\n    return $integers;\n}\n\
    \necho \"filter_integers(['a', 3.14, 5])\" . PHP_EOL;\nvar_dump(filter_integers(['a',\
    \ 3.14, 5]));\necho \"filter_integers([1, 2, 3, 'abc', {}, []])\" . PHP_EOL;\n\
    var_dump(filter_integers([1, 2, 3, 'abc', [], [])));\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpafndrkqx.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    // ...\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpha_5amkn.php:16\n\
    Stack trace:\n#0 /tmp/tmpha_5amkn.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpha_5amkn.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $key => $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\necho \"<pre>\";\necho 'filter_integers([1, 2, 3, \"abc\", {}, []])';\nprint_r(filter_integers([1,\
    \ 2, 3, \"abc\", {}, []]));\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphbitvqq9.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($i) {\n        return is_int($i);\n    });\n\
    }\n\nprint_r(filter_integers(['a', 3.14, 5]));\nprint_r(filter_integers([1, 2,\
    \ 3, 'abc', [], []]));\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [2] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2kmq117p.php:22\n\
    Stack trace:\n#0 /tmp/tmp2kmq117p.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2kmq117p.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $filtered_values\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $filtered_values[] = $value;\n        }\n    }\n    return $filtered_values;\n\
    }\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$result\
    \ = [];\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $result\
    \ = [];\n  foreach ($values as $value) {\n    if (is_int($value)) {\n      $result[]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $return\
    \ = [];\n  foreach ($values as $item) {\n    if (is_int($item)) {\n      $return[]\
    \ = $item;\n    }\n  }\n  return $return;\n}\n\nprint_r(filter_integers(['a',\
    \ 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc', {}, []]));\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2_jrcnsj.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$result\
    \ = [];\n\tforeach ($values as $key => $value) {\n\t\tif (is_int($value)) {\n\t\
    \t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$integers\
    \ = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\
    \t$integers[] = $value;\n\t\t}\n\t}\n\treturn $integers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$filtered\
    \ = array();\n\tforeach ($values as $val) {\n\t\tif (is_int($val)) {\n\t\t\t$filtered[]\
    \ = $val;\n\t\t}\n\t}\n\treturn $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $new_values\
    \ = [];\n    foreach ($values as $val) {\n        if (is_int($val)) {\n      \
    \      $new_values[] = $val;\n        }\n    }\n    return $new_values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$ints\
    \ = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\
    \t$ints[] = $value;\n\t\t}\n\t}\n\treturn $ints;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $filtered_values\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $filtered_values[] = $value;\n        }\n    }\n    return $filtered_values;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$result\
    \ = [];\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nfunction candidate(...$args) {\n\
    \    return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($item) {\n        return is_int($item);\n   \
    \ });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ump5mm5.php:19\n\
    Stack trace:\n#0 /tmp/tmp3ump5mm5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3ump5mm5.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoogw6w8o.php:18\n\
    Stack trace:\n#0 /tmp/tmpoogw6w8o.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpoogw6w8o.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $res\
    \ = [];\n    foreach ($values as $val) {\n        if (is_int($val)) {\n      \
    \      $res[] = $val;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43v863e0.php:16\n\
    Stack trace:\n#0 /tmp/tmp43v863e0.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp43v863e0.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($item) {\n    return (gettype($item) == 'integer');\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppy9t26nt.php:19\n\
    Stack trace:\n#0 /tmp/tmppy9t26nt.php(23): test()\n#1 {main}\n  thrown in /tmp/tmppy9t26nt.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    // Your\
    \ implementation here\n    $new_array = [];\n    foreach ($values as $value) {\n\
    \        if (is_integer($value)) {\n            array_push($new_array, $value);\n\
    \        }\n    }\n    return $new_array;\n}\nfunction candidate(...$args) {\n\
    \    return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $filt=array();\n\
    \    foreach ($values as $value) {\n        if(gettype($value)=='integer'){\n\
    \            array_push($filt,$value);\n        }\n    }\n    return $filt;\n\
    }\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\n$values = ['a', 3.14, 5];\n$expected = [5];\nassert($expected === filter_integers($values));\n\
    $values = [1, 2, 3, 'abc', [], new stdClass()];\n$expected = [1, 2, 3];\nassert($expected\
    \ === filter_integers($values));\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): assert($expected === filter_integers($values)) failed\
    \ in /tmp/tmp3t1h3p1_.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp3t1h3p1_.php:26\nStack trace:\n#0 /tmp/tmp3t1h3p1_.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3t1h3p1_.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwlmcr_d_.php:19\n\
    Stack trace:\n#0 /tmp/tmpwlmcr_d_.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwlmcr_d_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\treturn\
    \ array_filter($values, function($value) {\n\t\treturn is_int($value);\n\t});\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0s80kxw5.php:19\n\
    Stack trace:\n#0 /tmp/tmp0s80kxw5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0s80kxw5.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqr46l3ic.php:19\n\
    Stack trace:\n#0 /tmp/tmpqr46l3ic.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpqr46l3ic.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, 'is_int');\n}\n\n$list = ['a', 3.14, 5];\necho \"<pre>\"\
    ;\necho \"list:\";\nprint_r($list);\necho \"</pre>\";\n\n$filtered = filter_integers($list);\n\
    echo \"<pre>\";\necho \"filtered:\";\nprint_r($filtered);\necho \"</pre>\";\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "<pre>list:Array\n(\n    [0] => a\n    [1] => 3.14\n    [2] => 5\n)\n</pre><pre>filtered:Array\n\
    (\n    [2] => 5\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplhm7x3__.php:28\n\
    Stack trace:\n#0 /tmp/tmplhm7x3__.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplhm7x3__.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $int_array\
    \ = array();\n    foreach ($values as $value) {\n        if (is_int($value)) {\n\
    \            array_push($int_array, $value);\n        }\n    }\n    return $int_array;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $v) {\n        if (is_int($v)) {\n          \
    \  $result[] = $v;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $results\
    \ = [];\n  foreach ($values as $value) {\n    if (is_int($value)) {\n      $results[]\
    \ = $value;\n    }\n  }\n  return $results;\n}\n\nprint_r(filter_integers(['a',\
    \ 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc', {}, []]));\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzcsh_9lu.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$filtered\
    \ = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\
    \t$filtered[] = $value;\n\t\t}\n\t}\n\treturn $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    // write\
    \ code here\n    $integers = [];\n    for ($i = 0; $i < count($values); $i++)\
    \ {\n        if (gettype($values[$i]) == 'integer') {\n            array_push($integers,\
    \ $values[$i]);\n        }\n    }\n    return $integers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  // Write\
    \ your code here...\n  $result = [];\n  foreach ($values as $key => $value) {\n\
    \    if (is_int($value)) {\n      $result[] = $value;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $integers\
    \ = [];\n  foreach ($values as $value) {\n    if (is_int($value)) {\n      $integers[]\
    \ = $value;\n    }\n  }\n  return $integers;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $filtered\
    \ = [];\n  foreach ($values as $value) {\n    if (is_int($value)) {\n      $filtered[]\
    \ = $value;\n    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $int_array\
    \ = array();\n    for ($i = 0; $i < count($values); $i++) {\n        if (is_int($values[$i]))\
    \ {\n            array_push($int_array, $values[$i]);\n        }\n    }\n    return\
    \ $int_array;\n}\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $intArray\
    \ = array();\n  foreach ($values as $value) {\n    if (is_int($value)) {\n   \
    \   array_push($intArray, $value);\n    }\n  }\n  return $intArray;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $result\
    \ = [];\n  foreach ($values as $v) {\n    if (is_int($v)) {\n      $result[] =\
    \ $v;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, 'is_int');\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeokcysxz.php:17\n\
    Stack trace:\n#0 /tmp/tmpeokcysxz.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpeokcysxz.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$result\
    \ = array();\n\tforeach ($values as $item) {\n\t\tif (is_int($item)) {\n\t\t\t\
    $result[] = $item;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(filter_integers(['a',\
    \ 3.14, 5])); // Output: Array ( [0] => 5 )\nprint_r(filter_integers([1, 2, 3,\
    \ 'abc', [], {}])); // Output: Array ( [0] => 1 [1] => 2 [2] => 3 )\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphq1r2qje.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($x) {\n        return is_int($x);\n    });\n\
    }\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfrl8e3t.php:18\n\
    Stack trace:\n#0 /tmp/tmpyfrl8e3t.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpyfrl8e3t.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $result\
    \ = [];\n  foreach ($values as $value) {\n    if (is_int($value)) {\n      $result[]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$ints\
    \ = array();\n\tfor ($i = 0; $i < count($values); $i++) {\n\t\tif (gettype($values[$i])\
    \ == \"integer\") {\n\t\t\tarray_push($ints, $values[$i]);\n\t\t}\n\t}\n\treturn\
    \ $ints;\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $int_arr\
    \ = [];\n    foreach ($values as $val) {\n        if (is_int($val)) {\n      \
    \      $int_arr[] = $val;\n        }\n    }\n    return $int_arr;\n}\nprint_r(filter_integers(['a',\
    \ 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc', {}, []]));\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5zar904h.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$result\
    \ = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\
    \t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(filter_integers(['a',\
    \ 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc', {}, []]));\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgo9_6ye5.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nprint_r(filter_integers(['a',\
    \ 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc', [], 'def']));\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2]\
    \ => 3\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  // your\
    \ code here\n  foreach ($values as $value) {\n    if (is_int($value)) {\n    \
    \  $result[] = $value;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppf9aad0x.php:21\n\
    Stack trace:\n#0 /tmp/tmppf9aad0x.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppf9aad0x.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$output\
    \ = [];\n\tfor ($i = 0; $i < count($values); $i++) {\n\t\tif (gettype($values[$i])\
    \ == 'integer') {\n\t\t\tarray_push($output, $values[$i]);\n\t\t}\n\t}\n\treturn\
    \ $output;\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $out\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $out[] = $value;\n        }\n    }\n    return $out;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$final\
    \ = [];\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\n\t\t\t$final[]\
    \ = $value;\n\t}\n\treturn $final;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t// YOUR\
    \ CODE HERE\n\t\n\t$list = array();\n\t\n\tfor($i = 0; $i < count($values); $i++)\
    \ {\n\t\tif(is_int($values[$i])) {\n\t\t\tarray_push($list, $values[$i]);\n\t\t\
    }\n\t}\n\t\n\treturn $list;\n}\n\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nprint_r(filter_integers(['a', 3.14, 5]));\nprint_r(filter_integers([1,\
    \ 2, 3, 'abc', array(), array()]));\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [2] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgxvq4cnn.php:22\n\
    Stack trace:\n#0 /tmp/tmpgxvq4cnn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgxvq4cnn.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    // write\
    \ your code here\n    $ret = [];\n    foreach ($values as $value) {\n        if\
    \ (gettype($value) == 'integer') {\n            array_push($ret, $value);\n  \
    \      }\n    }\n    return $ret;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($v) { return is_int($v); });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqagd6ap.php:17\n\
    Stack trace:\n#0 /tmp/tmpeqagd6ap.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpeqagd6ap.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t// Convert\
    \ the given python list to PHP array\n\t$array = py_to_php_array($values);\n\t\
    // Filter only for integers\n\t$array = array_filter($array, function($x) {\n\t\
    \t// If $x is an integer, then return True, else False\n\t\treturn is_int($x);\n\
    \t});\n\t// Convert the PHP array to python list\n\treturn php_to_py_list($array);\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function py_to_php_array()\
    \ in /tmp/tmpmq1lmk11.php:9\nStack trace:\n#0 /tmp/tmpmq1lmk11.php(20): filter_integers(Array)\n\
    #1 /tmp/tmpmq1lmk11.php(24): candidate(Array)\n#2 /tmp/tmpmq1lmk11.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmq1lmk11.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $res\
    \ = [];\n    for ($i = 0; $i < count($values); $i++) {\n        if (is_int($values[$i]))\
    \ {\n            $res[] = $values[$i];\n        }\n    }\n    return $res;\n}\n\
    $values = ['a', 3.14, 5];\necho \"<pre>\";\nprint_r(filter_integers($values));\n\
    echo \"</pre>\";\n$values = [1, 2, 3, 'abc', [], []];\necho \"<pre>\";\nprint_r(filter_integers($values));\n\
    echo \"</pre>\";\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 5\n)\n</pre><pre>Array\n(\n    [0] => 1\n   \
    \ [1] => 2\n    [2] => 3\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    for ($i = 0; $i < count($values); $i++) {\n        if (is_int($values[$i]))\
    \ {\n            $result[] = $values[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $new_value\
    \ = [];\n    foreach ($values as $key => $value) {\n        if (is_integer($value))\
    \ {\n            $new_value[] = $value;\n        }\n    }\n    return $new_value;\n\
    }\n$integers = [1, 2, 3, 'abc', [], {}];\nprint_r(filter_integers($integers));\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpik_x7pn_.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integerList\
    \ = [];\n    for ($i = 0; $i < count($values); $i++) {\n        if (is_int($values[$i]))\
    \ {\n            array_push($integerList, $values[$i]);\n        }\n    }\n  \
    \  return $integerList;\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $newArr\
    \ = [];\n    for ($i = 0; $i < count($values); $i++) {\n        if (is_int($values[$i]))\
    \ {\n            array_push($newArr, $values[$i]);\n        }\n    }\n    return\
    \ $newArr;\n}\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $integers[] = $value;\n        }\n    }\n    return $integers;\n}\n\
    print_r(filter_integers(['a', 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc',\
    \ [], []]));\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2]\
    \ => 3\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$arr =\
    \ [];\n\tforeach ($values as $num) {\n\t\tif (is_int($num)) {\n\t\t\t$arr[] =\
    \ $num;\n\t\t}\n\t}\n\treturn $arr;\n}\n\nfunction candidate(...$args) {\n   \
    \ return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    // write\
    \ your code here!\n    $res = [];\n    foreach ($values as $val) {\n        if\
    \ (is_int($val)) {\n            $res[] = $val;\n        }\n    }\n    return $res;\n\
    }\n\nvar_dump(filter_integers(['a', 3.14, 5]));\nvar_dump(filter_integers([1,\
    \ 2, 3, 'abc', [], []]));\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(1) {\n  [0]=>\n  int(5)\n}\narray(3) {\n  [0]=>\n  int(1)\n  [1]=>\n\
    \  int(2)\n  [2]=>\n  int(3)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $i =\
    \ 0;\n    while ($i < count($values)) {\n        if (gettype($values[$i]) == 'integer')\
    \ {\n            $i++;\n        } else {\n            array_splice($values, $i,\
    \ 1);\n        }\n    }\n    return $values;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9uydbb6g.php:19\n\
    Stack trace:\n#0 /tmp/tmp9uydbb6g.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9uydbb6g.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\treturn\
    \ array_filter($values, 'is_int');\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_rrqdtjw.php:17\n\
    Stack trace:\n#0 /tmp/tmp_rrqdtjw.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp_rrqdtjw.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $filtered\
    \ = [];\n  foreach ($values as $value) {\n    if (is_int($value)) {\n      $filtered[]\
    \ = $value;\n    }\n  }\n  return $filtered;\n}\nprint_r(filter_integers(['a',\
    \ 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc', [], []]));\n\necho \"\\\
    n\";\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2]\
    \ => 3\n)\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $ints\
    \ = [];\n    foreach ($values as $item) {\n        if (is_int($item)) {\n    \
    \        $ints[] = $item;\n        }\n    }\n    return $ints;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, 'is_int');\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphtaiuomg.php:17\n\
    Stack trace:\n#0 /tmp/tmphtaiuomg.php(21): test()\n#1 {main}\n  thrown in /tmp/tmphtaiuomg.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7faa099.php:19\n\
    Stack trace:\n#0 /tmp/tmpf7faa099.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpf7faa099.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuikkhb9q.php:18\n\
    Stack trace:\n#0 /tmp/tmpuikkhb9q.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpuikkhb9q.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps59l2q3j.php:19\n\
    Stack trace:\n#0 /tmp/tmps59l2q3j.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps59l2q3j.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $filtered\
    \ = [];\n  foreach ($values as $value) {\n    if (is_int($value)) {\n      $filtered[]\
    \ = $value;\n    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4tyxpxe.php:19\n\
    Stack trace:\n#0 /tmp/tmpr4tyxpxe.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpr4tyxpxe.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, 'is_int');\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprrrcape0.php:17\n\
    Stack trace:\n#0 /tmp/tmprrrcape0.php(21): test()\n#1 {main}\n  thrown in /tmp/tmprrrcape0.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $arr\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $arr[] = $value;\n        }\n    }\n    return $arr;\n}\n\nprint_r(filter_integers(['a',\
    \ 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc', [], []]));\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2]\
    \ => 3\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $res\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $res[] = $value;\n        }\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$output\
    \ = [];\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$output[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $output;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $array\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $array[] = $value;\n        }\n    }\n    return $array;\n}\necho \"\
    Filter integers: \";\necho \"<pre>\";\nprint_r(filter_integers(['a', 3.14, 5]));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(filter_integers([1, 2, 3, 'abc', {},\
    \ []]));\necho \"</pre>\";\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqkcc_o1b.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$e = new\
    \ Exception();\n\t$i = 0;\n\tforeach ($values as $num) {\n\t\tif (gettype($num)\
    \ == \"integer\") {\n\t\t\t$newVals[$i] = $num;\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn\
    \ $newVals;\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptd1q37vw.php:24\n\
    Stack trace:\n#0 /tmp/tmptd1q37vw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmptd1q37vw.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7_i4m76.php:18\n\
    Stack trace:\n#0 /tmp/tmpw7_i4m76.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpw7_i4m76.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $filtered\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $filtered[] = $value;\n        }\n    }\n    return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjfsmwcz.php:19\n\
    Stack trace:\n#0 /tmp/tmpsjfsmwcz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpsjfsmwcz.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, 'is_int');\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8auapn0.php:17\n\
    Stack trace:\n#0 /tmp/tmpb8auapn0.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpb8auapn0.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $result\
    \ = [];\n  foreach ($values as $value) {\n    if (is_int($value)) {\n      $result[]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\n$data = ['a', 3.14, 5];\necho\
    \ '<pre>';\nvar_dump(filter_integers($data));\necho '</pre>';\n\n$data = [1, 2,\
    \ 3, 'abc', [], new stdClass()];\necho '<pre>';\nvar_dump(filter_integers($data));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>array(1) {\n  [0]=>\n  int(5)\n}\n</pre><pre>array(3) {\n  [0]=>\n\
    \  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n}\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($val) {\n        return is_int($val);\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy80fsvu.php:19\n\
    Stack trace:\n#0 /tmp/tmpuy80fsvu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpuy80fsvu.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjvr24v1a.php:19\n\
    Stack trace:\n#0 /tmp/tmpjvr24v1a.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpjvr24v1a.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $filtered\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $filtered[] = $value;\n        }\n    }\n    return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $output\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $output[] = $value;\n        }\n    }\n    return $output;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqreszu7r.php:19\n\
    Stack trace:\n#0 /tmp/tmpqreszu7r.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpqreszu7r.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $filtered\
    \ = [];\n  foreach ($values as $value) {\n    if (is_int($value)) {\n      $filtered[]\
    \ = $value;\n    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $new_array\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $new_array[] = $value;\n        }\n    }\n    return $new_array;\n\
    }\necho filter_integers([1, 2, 3, 'abc', [], []]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $integers[] = $value;\n        }\n    }\n    return $integers;\n}\n\
    \n$list = ['a', 3.14, 5];\nvar_dump(filter_integers($list));\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(1) {\n  [0]=>\n  int(5)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t$integers\
    \ = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\
    \t$integers[] = $value;\n\t\t}\n\t}\n\treturn $integers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1u1chbu.php:19\n\
    Stack trace:\n#0 /tmp/tmpf1u1chbu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpf1u1chbu.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\t// $filtered\
    \ = array_filter($values, function($value) {\n\t// \tif (is_int($value)) {\n\t\
    // \t\treturn true;\n\t// \t}\n\t// });\n\t// return $filtered;\n\treturn array_filter($values,\
    \ function($value) {\n\t\treturn is_int($value);\n\t});\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwoe8t0gp.php:25\n\
    Stack trace:\n#0 /tmp/tmpwoe8t0gp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwoe8t0gp.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkphyocx.php:19\n\
    Stack trace:\n#0 /tmp/tmptkphyocx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmptkphyocx.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $array\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $array[] = $value;\n        }\n    }\n    return $array;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $integers\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $integers[] = $value;\n        }\n    }\n    return $integers;\n}\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  $output\
    \ = [];\n  foreach ($values as $item) {\n    if (is_int($item)) {\n      $output[]\
    \ = $item;\n    }\n  }\n  return $output;\n}\n\nprint_r(filter_integers(['a',\
    \ 3.14, 5]));\nprint_r(filter_integers([1, 2, 3, 'abc', {}, []]));\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppf02fitd.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($v) {\n        return gettype($v) == 'integer';\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp822y_wga.php:19\n\
    Stack trace:\n#0 /tmp/tmp822y_wga.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp822y_wga.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\treturn\
    \ array_filter($values, function($val) {\n\t\treturn is_int($val);\n\t});\n}\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2zkedrf.php:18\n\
    Stack trace:\n#0 /tmp/tmpv2zkedrf.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpv2zkedrf.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $filtered\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $filtered[] = $value;\n        }\n    }\n    return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n\treturn\
    \ array_filter($values, 'is_int');\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqlahbswx.php:17\n\
    Stack trace:\n#0 /tmp/tmpqlahbswx.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpqlahbswx.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $filtered\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $filtered[] = $value;\n        }\n    }\n    return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\nprint_r(filter_integers(['a',\
    \ 3.14, 5]));\n\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 5\n)\n<br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $result\
    \ = [];\n    foreach ($values as $value) {\n        if (is_int($value)) {\n  \
    \          $result[] = $value;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    $new_list\
    \ = [];\n    for ($i = 0; $i < count($values); $i++) {\n        if (is_int($values[$i]))\
    \ {\n            array_push($new_list, $values[$i]);\n        }\n    }\n    return\
    \ $new_list;\n}\n\n$test = ['a', 3.14, 5];\nprint_r(filter_integers($test));\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 5\n)\n"
  stderr: ''
  exit_code: 0
  status: OK

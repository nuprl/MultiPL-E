name: HumanEval_122_add_elements
language: php
results:
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n            $count++;\n        }\n \
    \       if ($count == $k) break;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxgpwk2m.php:28\n\
    Stack trace:\n#0 /tmp/tmpdxgpwk2m.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdxgpwk2m.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $i = 0;\n    $sum = 0;\n\
    \    $len = count($arr);\n    while ($i < $len) {\n        if ($k == 0) {\n  \
    \          break;\n        }\n        if (strlen($arr[$i]) <= 2) {\n         \
    \   $sum += $arr[$i];\n            $k--;\n        }\n        $i++;\n    }\n  \
    \  return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "35\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp266es5fz.php:35\n\
    Stack trace:\n#0 /tmp/tmp266es5fz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp266es5fz.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3j_ctl_x.php:18\n\
    Stack trace:\n#0 /tmp/tmp3j_ctl_x.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3j_ctl_x.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $i = 0;\n\
    \    while($i < $k && $i < count($arr)) {\n        if(strlen($arr[$i]) <= 2) {\n\
    \            $sum += $arr[$i];\n        }\n        $i++;\n    }\n    return $sum;\n\
    }\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\nprint_r(add_elements($arr, $k));\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $count = 0;\n  $sum = 0;\n\
    \  for ($i = 0; $i < count($arr); $i++) {\n    if ($count === $k) break;\n   \
    \ if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n      $sum += $arr[$i];\n      $count++;\n\
    \    }\n  }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixrdzk_5.php:27\n\
    Stack trace:\n#0 /tmp/tmpixrdzk_5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpixrdzk_5.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if ($arr[$i] >= 100) {\n      $sum += $arr[$i];\n    }\n\
    \  }\n  return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9], 4) . PHP_EOL;\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4111\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp31r0h3ma.php:25\n\
    Stack trace:\n#0 /tmp/tmp31r0h3ma.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp31r0h3ma.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\n\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($i < $k) {\n            if ($arr[$i]\
    \ < 100) {\n                $sum += $arr[$i];\n            }\n        }\n    }\n\
    \    return $sum;\n}\necho add_elements([1,2,3,4000,5,6,7,8,9], 4);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = count($arr);\n\
    \    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10)\
    \ {\n            $sum += $arr[$i];\n        } else if ($arr[$i] < 100) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $total = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $total\
    \ += $arr[$i];\n        }\n    }\n    return $total;\n}\n\nclass AddElementsTest\
    \ extends TestCase\n{\n    /**\n     * @dataProvider cases\n     */\n    public\
    \ function testAddElements($arr, $k, $output)\n    {\n        $this->assertEquals($output,\
    \ add_elements($arr, $k));\n    }\n\n    public function cases()\n    {\n    \
    \    return [\n            [[], 1, 0],\n            [[1], 1, 1],\n           \
    \ [[1,2], 1, 1],\n            [[10,2], 1, 10],\n            [[10,20], 1, 10],\n\
    \            [[10,20], 2, 30],\n            [[10,20,100], 3, 30],\n          \
    \  [[100,20,10], 3, 30],\n            [[111,21,3,4000,5,6,7,8,9], 4, 24],\n  \
    \          [[111,21,3,4000,5,6,7,8,9], 5, 24],\n            [[111,21,3,4000,5,6,7,8,9],\
    \ 6, 24],\n            [[111,21,3,4000,5,6,7,8,9], 7, 24],\n            [[111,21,3,4000,5,6,7,8,9],\
    \ 8, 24],\n            [[111,21,3,4000,5,6,7,8,9], 9, 24],\n            [[111,21,3,4000,5,6,7,8,9],\
    \ 10, 24],\n        ];\n    }\n}\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'TestCase' not found in /tmp/tmp8kd20o9p.php:20\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmp8kd20o9p.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k\
    \ = 4;\necho add_elements($arr, $k) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $result\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $result += $arr[$i];\n            $count++;\n        }\n\
    \        if ($count == $k) {\n            break;\n        }\n    }\n    return\
    \ $result;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "35\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60hfkurd.php:34\n\
    Stack trace:\n#0 /tmp/tmp60hfkurd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp60hfkurd.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $n = count($arr);\n  \
    \  $res = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 &&\
    \ $arr[$i] < 100) {\n            $res += $arr[$i];\n        }\n    }\n    return\
    \ $res;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzuq57n0a.php:31\n\
    Stack trace:\n#0 /tmp/tmpzuq57n0a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzuq57n0a.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10) {\n            $sum += $arr[$i];\n\
    \        } else if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n       \
    \ }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\n\
    echo add_elements($arr, $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\nprint_r(add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4));\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $result = 0;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] > 9 && $arr[$i] < 100) {\n \
    \           $result += $arr[$i];\n        }\n    }\n    return $result;\n}\n$arr\
    \ = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\nprint_r(add_elements($arr, $k));\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpci9mms7f.php:27\n\
    Stack trace:\n#0 /tmp/tmpci9mms7f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpci9mms7f.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $result = 0;\n  for ($i\
    \ = 0; $i < $k; $i++) {\n    if (strlen($arr[$i]) <= 2) {\n      $result += $arr[$i];\n\
    \    }\n  }\n  return $result;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\necho add_elements($arr,\
    \ 4) . PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    // Go through the array,\
    \ and add all values with two digits or less to a total.\n    // Stop when you\
    \ have iterated k times.\n    $total = 0;\n    $i = 0;\n    while ($i < $k) {\n\
    \        $n = $arr[$i];\n        if ($n < 100) {\n            $total += $n;\n\
    \        }\n        $i++;\n    }\n    return $total;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n\t$sum = 0;\n\tfor ($i = 0;\
    \ $i < count($arr); $i++) {\n\t\tif ($i < $k) {\n\t\t\tif (intval($arr[$i]) <\
    \ 10) {\n\t\t\t\t$sum += $arr[$i];\n\t\t\t} else if (intval($arr[$i]) >= 10 &&\
    \ intval($arr[$i]) < 100) {\n\t\t\t\t$sum += $arr[$i];\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < count($arr); $i++) {\n    if ($i >= $k) {\n      break;\n    }\n    if\
    \ ($arr[$i] > 9 && $arr[$i] < 100) {\n      $sum += $arr[$i];\n    }\n  }\n  return\
    \ $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi116w_j1.php:30\n\
    Stack trace:\n#0 /tmp/tmpi116w_j1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi116w_j1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\nprint add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($i < $k) {\n            if ($arr[$i]\
    \ < 100) {\n                $sum += $arr[$i];\n            }\n        }\n    }\n\
    \    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] > 9) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n   \
    \ return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwivk9dmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpwivk9dmc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwivk9dmc.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $arr_len = count($arr);\n\
    \  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 10) {\n    \
    \  $sum += $arr[$i];\n    } else if ($arr[$i] < 100) {\n      $sum += $arr[$i];\n\
    \    }\n  }\n  return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho\
    \ add_elements($arr, $k);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if (strlen($arr[$i]) > 2) {\n      continue;\n    }\n\
    \    $sum += $arr[$i];\n  }\n  return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) . \"\\n\";\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $total = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $total +=\
    \ $arr[$i];\n        }\n    }\n    return $total;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $i = 0;\n  $sum = 0;\n \
    \ while ($i < $k) {\n    if (strlen($arr[$i]) <= 2) {\n      $sum += $arr[$i];\n\
    \    }\n    $i++;\n  }\n  return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) . PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $res = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($i == $k) break;\n        if ($arr[$i]\
    \ < 10) {\n            $res += $arr[$i];\n        } elseif ($arr[$i] >= 10 &&\
    \ $arr[$i] < 100) {\n            $res += $arr[$i];\n        }\n    }\n    return\
    \ $res;\n}\nprint_r(add_elements([111,21,3,4000,5,6,7,8,9], 4));\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $i = 0;\n\
    \    while ($i < $k) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n        $i++;\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] > 9 && $arr[$i] < 100) {\n     \
    \       $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1xy5i12.php:24\n\
    Stack trace:\n#0 /tmp/tmpx1xy5i12.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpx1xy5i12.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $res = 0;\n  $i = 0;\n \
    \ while($i < $k) {\n    if($arr[$i] >= 0 && $arr[$i] <= 99)\n      $res += $arr[$i];\n\
    \    $i++;\n  }\n  return $res;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\n\
    print_r(add_elements($arr, $k));\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkf8cf8rz.php:28\n\
    Stack trace:\n#0 /tmp/tmpkf8cf8rz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkf8cf8rz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) . PHP_EOL;\necho add_elements([1,2,3,4,5,6,7,8,9], 4) . PHP_EOL;\necho add_elements([],\
    \ 4) . PHP_EOL;\necho add_elements([111,21,3,4000,5,6,7,8,9], 0) . PHP_EOL;\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zynxvww.php:29\n\
    Stack trace:\n#0 /tmp/tmp1zynxvww.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1zynxvww.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($i === $k) {\n            break;\n\
    \        }\n        if (strlen($arr[$i]) < 3) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k\
    \ = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $arr_len = count($arr);\n\
    \    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100)\
    \ {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n\
    $arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $k = min($k,\
    \ count($arr));\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100)\
    \ {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    echo add_elements($arr, 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $elements = 0;\n  for ($i\
    \ = 0; $i < $k; $i++) {\n    if (strlen($arr[$i]) < 3) {\n      $elements += $arr[$i];\n\
    \    }\n  }\n  return $elements;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\necho add_elements($arr,\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    foreach\
    \ ($arr as $i => $n) {\n        if ($i >= $k) break;\n        if ($n > 9 && $n\
    \ < 100) $sum += $n;\n    }\n    return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) . PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy8tafkx1.php:24\n\
    Stack trace:\n#0 /tmp/tmpy8tafkx1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpy8tafkx1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $sum\
    \ = 0;\n    foreach ($arr as $value) {\n        if ($count < $k) {\n         \
    \   if ($value > 9 && $value < 100) {\n                $sum += $value;\n     \
    \       }\n        }\n        $count++;\n    }\n    return $sum;\n}\n$output_array\
    \ = array(\n    add_elements(array(111,21,3,4000,5,6,7,8,9), 4),\n    add_elements(array(111,21,13,4000,5,6,7,8,9),\
    \ 4),\n    add_elements(array(1,2,3,4000,5,6,7,8,9), 3),\n    add_elements(array(1,2,3,4000,5,6,7,8,9),\
    \ 4),\n    add_elements(array(1,1,1,4000,5,6,7,8,9), 4),\n    add_elements(array(1,1,1,4000,5,6,7,8,9),\
    \ 3),\n    add_elements(array(1,2,3,4000,5,6,7,8,9), 5),\n    add_elements(array(1,2,3,4000,5,6,7,8,9),\
    \ 6),\n    add_elements(array(1,2,3,4000,5,6,7,8,9), 7),\n    add_elements(array(1,2,3,4000,5,6,7,8,9),\
    \ 8),\n    add_elements(array(1,2,3,4000,5,6,7,8,9), 9),\n    add_elements(array(1,2,3,4000,5,6,7,8,9),\
    \ 10),\n    add_elements(array(1,2,3,4000,5,6,7,8,9), 1),\n    add_elements(array(1,2,3,4000,5,6,7,8,9),\
    \ 2),\n    add_elements(array(1,2,3,4000,5,\nfunction candidate(...$args) {\n\
    \    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp80jp6990.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $sum\
    \ = 0;\n    $i = 0;\n    while ($count < $k) {\n        if ($arr[$i] >= 10 &&\
    \ $arr[$i] <= 99) {\n            $sum += $arr[$i];\n            $count++;\n  \
    \      }\n        $i++;\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\n\nprint_r(add_elements($arr, $k));\nfunction candidate(...$args) {\n\
    \    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  $arr = array_slice($arr,\
    \ 0, $k);\n  foreach ($arr as $value) {\n    if (strlen($value) <= 2) {\n    \
    \  $sum += $value;\n    }\n  }\n  return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    // we could have an array\
    \ of two digits, add two elements to it\n    // then check the first element -\
    \ if its over 10, add it to the sum and pop it from the array, then add the next\
    \ one\n    // if the sum is over 10, pop it and add the next one\n    // repeat\
    \ for as long as the array has elements\n\n    $sum = 0;\n    $arr_2 = [];\n \
    \   for ($i = 0; $i < $k; $i++) {\n        array_push($arr_2, $arr[$i]);\n   \
    \     if (count($arr_2) === 2) {\n            if ($arr_2[0] > 9) {\n         \
    \       $sum += $arr_2[0];\n                array_shift($arr_2);\n           \
    \ }\n            if ($sum > 9) {\n                $sum += $arr_2[0];\n       \
    \         array_shift($arr_2);\n            }\n        }\n    }\n    return $sum;\n\
    }\n\n$arr = [1,1,1,2,1,3,4000,5,6,7,8,9];\n$k = 4;\nvar_dump(add_elements($arr,\
    \ $k));\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(0)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq24vuwn1.php:42\n\
    Stack trace:\n#0 /tmp/tmpq24vuwn1.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpq24vuwn1.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    echo add_elements($arr, 4) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n\tif($k == 0) {\n\t\treturn\
    \ 0;\n\t}\n\t$total = 0;\n\tfor($i = 0; $i < $k; $i++) {\n\t\tif($arr[$i] < 100)\
    \ {\n\t\t\t$total += $arr[$i];\n\t\t}\n\t}\n\treturn $total;\n}\n$testArr = [111,21,3,4000,5,6,7,8,9];\n\
    echo add_elements($testArr, 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\n\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10) {\n            $sum += $arr[$i];\n\
    \        } else if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n       \
    \ }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $i = 0;\n\
    \    while($i < $k) {\n        if(strlen($arr[$i]) <= 2) {\n            $sum +=\
    \ $arr[$i];\n        }\n        $i++;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    // The idea is to iterate\
    \ through the first $k elements of the array and\n    // use a PHP function to\
    \ check if an element is less than 100. If so,\n    // add it to the counter.\
    \ The following line shows how to check if a number\n    // is less than 100:\n\
    \    // if ($element < 100) {\n    //     $counter += $element;\n    // }\n  \
    \  $counter = 0;\n    $arrayToSum = array_slice($arr, 0, $k);\n    foreach ($arrayToSum\
    \ as $element) {\n        if ($element < 100) {\n            $counter += $element;\n\
    \        }\n    }\n    return $counter;\n}\n\nfunction candidate(...$args) {\n\
    \    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\necho \"add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4)\\n\";\necho add_elements([111,21,3,4000,5,6,7,8,9], 4) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "add_elements([111,21,3,4000,5,6,7,8,9], 4)\n24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $total = 0;\n    $count\
    \ = 0;\n    foreach ($arr as $key => $num) {\n        if (strlen($num) <= 2) {\n\
    \            $total += $num;\n            $count++;\n        }\n        if ($count\
    \ == $k) {\n            break;\n        }\n    }\n    return $total;\n}\n\n$arr\
    \ = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr, $k) . PHP_EOL;\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "35\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkov4yew.php:34\n\
    Stack trace:\n#0 /tmp/tmpxkov4yew.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxkov4yew.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $counter = 0;\n    $sum\
    \ = 0;\n    foreach ($arr as $value) {\n        if ($counter == $k) {\n      \
    \      break;\n        }\n        if ($value < 100) {\n            $sum += $value;\n\
    \        }\n        $counter++;\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\nprint_r(add_elements($arr, $k));\nfunction candidate(...$args) {\n  \
    \  return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sums = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($i >= $k) {\n            break;\n\
    \        }\n        if ($arr[$i] < 10) {\n            $sums += $arr[$i];\n   \
    \     } else if ($arr[$i] < 100) {\n            $sums += $arr[$i];\n        }\n\
    \    }\n    return $sums;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho\
    \ add_elements($arr, $k) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwn8muvw.php:26\n\
    Stack trace:\n#0 /tmp/tmptwn8muvw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptwn8muvw.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  if(count($arr) < 1 || count($arr)\
    \ > 100 || $k < 1 || $k > count($arr)) {\n    return;\n  }\n  $sum = 0;\n  for($i\
    \ = 0; $i < $k; $i++) {\n    if($arr[$i] < 10) {\n      $sum += $arr[$i];\n  \
    \  } else if($arr[$i] < 100) {\n      $sum += $arr[$i];\n    }\n  }\n  return\
    \ $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9], 4) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $i = 0;\n    $total =\
    \ 0;\n    while ($i < $k) {\n        if ($arr[$i] < 100) {\n            $total\
    \ += $arr[$i];\n        }\n        $i++;\n    }\n    return $total;\n}\n\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if (strlen($arr[$i]) <= 2) {\n      $sum += $arr[$i];\n\
    \    }\n  }\n  return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\nprint_r(add_elements($arr,\
    \ $k));\n ?>\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24function candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppj0ok7l3.php:27\n\
    Stack trace:\n#0 /tmp/tmppj0ok7l3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppj0ok7l3.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $res = 0;\n    foreach\
    \ (array_slice($arr, 0, $k) as $item) {\n        if ($item >= 10 && $item < 100)\
    \ {\n            $res += $item;\n        }\n    }\n    return $res;\n}\n\n$arr\
    \ = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\nprint_r(add_elements($arr, $k));\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_i0uqk36.php:28\n\
    Stack trace:\n#0 /tmp/tmp_i0uqk36.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_i0uqk36.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  $n = 0;\n \
    \ foreach ($arr as $item) {\n    if ($n >= $k) break;\n    if ($item < 10) {\n\
    \      $sum += $item;\n    } else if ($item < 100) {\n      $sum += $item;\n \
    \   }\n    $n++;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $result = 0;\n  for ($i\
    \ = 0; $i < count($arr); $i++) {\n    if (strlen($arr[$i]) <= 2) {\n      $result\
    \ += $arr[$i];\n    }\n    if ($i == $k - 1) {\n      break;\n    }\n  }\n  return\
    \ $result;\n}\n\n$tests = [[[111,21,3,4000,5,6,7,8,9], 4, 24], [[1,2,3,4,5,6,7,8,9],\
    \ 3, 6], [[1,2,3,4,5,6,7,8,9], 10, 45]];\n\nforeach ($tests as $test) {\n  echo\
    \ add_elements($test[0], $test[1]) == $test[2] ? 'PASS' : 'FAIL';\n  echo \"\\\
    n\";\n}\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "PASS\nPASS\nPASS\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($arr[$i] >= 100) {\n           \
    \ $sum += 0;\n        } else {\n            $sum += $arr[$i];\n        }\n   \
    \ }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuyorg_2l.php:26\n\
    Stack trace:\n#0 /tmp/tmpuyorg_2l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuyorg_2l.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] > 9 && $arr[$i] < 100) {\n     \
    \       $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdsfpwtg1.php:28\n\
    Stack trace:\n#0 /tmp/tmpdsfpwtg1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdsfpwtg1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $result = 0;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $result\
    \ += $arr[$i];\n        }\n    }\n    return $result;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if (strlen($arr[$i]) <= 2) {\n     \
    \       $sum += $arr[$i];\n        }\n        if ($i === $k) {\n            break;\n\
    \        }\n    }\n    return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) . PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "29\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgrycntd.php:28\n\
    Stack trace:\n#0 /tmp/tmpsgrycntd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpsgrycntd.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $res = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($i >= $k) {\n            break;\n\
    \        }\n        if (strlen($arr[$i]) > 2) {\n            continue;\n     \
    \   }\n        $res += $arr[$i];\n    }\n    return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if (is_string($arr[$i]))\
    \ {\n            $arr[$i] = intval($arr[$i]);\n        }\n        if ($arr[$i]\
    \ >= 100) {\n            continue;\n        }\n        $sum += $arr[$i];\n   \
    \     $count++;\n        if ($count == $k) {\n            break;\n        }\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbjrjmhs.php:35\n\
    Stack trace:\n#0 /tmp/tmpqbjrjmhs.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqbjrjmhs.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < count($arr); $i++) {\n    if ($i == $k) {\n      break;\n    }\n    if\
    \ ($arr[$i] >= 0 && $arr[$i] <= 9) {\n      $sum += $arr[$i];\n    } else if ($arr[$i]\
    \ >= 10 && $arr[$i] <= 99) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n\
    }\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr, $k);\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_4p8w71.php:32\n\
    Stack trace:\n#0 /tmp/tmph_4p8w71.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph_4p8w71.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $num1 = 0;\n    $num2\
    \ = 0;\n    foreach ($arr as $key => $value) {\n        if ($key < $k) {\n   \
    \         if (strlen($value) == 1) {\n                $num1 += $value;\n     \
    \       } elseif (strlen($value) == 2) {\n                $num2 += $value;\n \
    \           }\n        }\n    }\n    return $num1 + $num2;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) . \"\\n\";\n\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuoysd_gi.php:26\n\
    Stack trace:\n#0 /tmp/tmpuoysd_gi.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuoysd_gi.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $i = 0;\n\
    \    while ($i < $k) {\n        if ($arr[$i] > 9 && $arr[$i] < 100) {\n      \
    \      $sum += $arr[$i];\n        }\n        $i++;\n    }\n    return $sum;\n\
    }\n\n$res = add_elements([111,21,3,4000,5,6,7,8,9], 4);\nprint($res . \"\\n\"\
    );\n\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yr9d_8r.php:30\n\
    Stack trace:\n#0 /tmp/tmp0yr9d_8r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0yr9d_8r.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $counter\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($counter == $k)\
    \ {\n            break;\n        }\n        if ($arr[$i] < 100) {\n          \
    \  $sum += $arr[$i];\n            $counter++;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34dix5ra.php:31\n\
    Stack trace:\n#0 /tmp/tmp34dix5ra.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp34dix5ra.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n\n$k = 4;\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $sum = add_elements($arr, $k);\necho $sum . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if (strlen($arr[$i]) <= 2) {\n      $sum += $arr[$i];\n\
    \    }\n  }\n  return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\n\
    echo add_elements($arr, $k) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $len = count($arr);\n\
    \    if ($len < 1 || $len > 100) return \"Invalid input size.\";\n    if ($k <\
    \ 1 || $k > $len) return \"Invalid k value.\";\n    $sum = 0;\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        if ($arr[$i] < 10) $sum += $arr[$i];\n        else\
    \ if ($arr[$i] < 100) $sum += $arr[$i];\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10) {\n            $sum += $arr[$i];\n\
    \        } else if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n       \
    \ }\n    }\n    return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $i = 0;\n    $sum = 0;\n\
    \    while ($i < $k) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n        $i++;\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $i = 0;\n    $sum = 0;\n\
    \    $length = count($arr);\n    while ($i < $length && $k > 0) {\n        if\
    \ (strlen($arr[$i]) <= 2) {\n            $sum += $arr[$i];\n            $k--;\n\
    \        }\n        $i++;\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    echo add_elements($arr, 4);\necho \"\\n\";\nfunction candidate(...$args) {\n \
    \   return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "35\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl5e7rnsk.php:33\n\
    Stack trace:\n#0 /tmp/tmpl5e7rnsk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl5e7rnsk.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $len =\
    \ count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] < 10)\
    \ {\n            $sum += $arr[$i];\n        } else if ($arr[$i] < 100) {\n   \
    \         $sum += $arr[$i];\n        }\n        if ($i == $k - 1) {\n        \
    \    break;\n        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    if ($k > count($arr))\
    \ {\n        return 0;\n    }\n    $counter = 0;\n    $sum = 0;\n    for ($i =\
    \ 0; $i < count($arr); $i++) {\n        if ($counter == $k) {\n            break;\n\
    \        }\n        if (strlen($arr[$i]) < 3) {\n            $sum += $arr[$i];\n\
    \            $counter++;\n        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\n$result = add_elements($arr, $k);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "35\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp030t1hyq.php:38\n\
    Stack trace:\n#0 /tmp/tmp030t1hyq.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp030t1hyq.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] > 9 && $arr[$i] < 100) {\n     \
    \       $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_78f1rf.php:27\n\
    Stack trace:\n#0 /tmp/tmp0_78f1rf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0_78f1rf.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $result = 0;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n\
    \            $result += $arr[$i];\n        }\n    }\n    return $result;\n}\n\
    $arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr, $k) . PHP_EOL;\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_odpchm.php:27\n\
    Stack trace:\n#0 /tmp/tmp7_odpchm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7_odpchm.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    echo add_elements($arr, 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if ($arr[$i] > 9 && $arr[$i] < 100) {\n      $sum += $arr[$i];\n\
    \    }\n  }\n  return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho\
    \ add_elements($arr, $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu7ora79.php:27\n\
    Stack trace:\n#0 /tmp/tmplu7ora79.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplu7ora79.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    foreach($arr\
    \ as $value) {\n        if($k == 0) {\n            break;\n        }\n       \
    \ if($value < 10) {\n            $sum += $value;\n        } else if($value < 100)\
    \ {\n            $sum += $value;\n        }\n        $k--;\n    }\n    return\
    \ $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\necho add_elements($arr, 4);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($count < $k) {\n\
    \            if ($arr[$i] < 10) {\n                $sum += $arr[$i];\n       \
    \         $count++;\n            } else if ($arr[$i] < 100) {\n              \
    \  $sum += $arr[$i];\n                $count++;\n            }\n        }\n  \
    \  }\n    return $sum;\n}\n\n$array = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho\
    \ add_elements($array, $k) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "35\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3ew5prq.php:36\n\
    Stack trace:\n#0 /tmp/tmpz3ew5prq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpz3ew5prq.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n\t$result = 0;\n\tfor ($i\
    \ = 0; $i < $k; $i++) {\n\t\tif (strlen($arr[$i]) <= 2)\n\t\t\t$result += $arr[$i];\n\
    \t}\n\treturn $result;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9], 4);\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $arr_count\
    \ = count($arr);\n    for ($i = 0; $i < $arr_count; $i++) {\n        if ($i <\
    \ $k) {\n            $elem = $arr[$i];\n            if (strlen($elem) <= 2) {\n\
    \                $sum += $elem;\n            }\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if ($arr[$i] > 9 && $arr[$i] < 100) {\n      $sum += $arr[$i];\n\
    \    }\n  }\n  return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho\
    \ add_elements($arr, $k) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xb_jlue.php:27\n\
    Stack trace:\n#0 /tmp/tmp_xb_jlue.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_xb_jlue.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $result = 0;\n  for ($i\
    \ = 0; $i < $k; $i++) {\n    if ($arr[$i] > 9 && $arr[$i] < 100) {\n      $result\
    \ += $arr[$i];\n    }\n  }\n  return $result;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\nprint_r(add_elements($arr, $k));\nfunction candidate(...$args) {\n  \
    \  return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl05hi3wy.php:28\n\
    Stack trace:\n#0 /tmp/tmpl05hi3wy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpl05hi3wy.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $counter\
    \ = 0;\n    foreach ($arr as $value) {\n        if (strlen($value) <= 2) {\n \
    \           $sum += $value;\n            $counter++;\n        }\n        if ($counter\
    \ == $k) break;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp51rr297.php:29\n\
    Stack trace:\n#0 /tmp/tmpp51rr297.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp51rr297.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n   \
    \ return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (is_int($arr[$i]) && strlen($arr[$i]) <= 2)\
    \ {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $result = 0;\n    $len\
    \ = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i === $k)\
    \ {\n            break;\n        }\n\n        if (strlen($arr[$i]) <= 2) {\n \
    \           $result += $arr[$i];\n        }\n    }\n\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2)\n            $sum\
    \ += $arr[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n \
    \   return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  // T: O(n) S: O(1)\n  $sum\
    \ = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    if ($i >= $k) break;\n \
    \   if ($arr[$i] < 10) $sum += $arr[$i];\n    else if ($arr[$i] < 100) $sum +=\
    \ $arr[$i];\n  }\n  return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\n\
    print add_elements($arr, $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $newArr = [];\n  $i = 0;\n\
    \  while ($i < $k) {\n    if (count(str_split($arr[$i])) == 1 || count(str_split($arr[$i]))\
    \ == 2) {\n      array_push($newArr, $arr[$i]);\n    }\n    $i++;\n  }\n  return\
    \ array_sum($newArr);\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\nprint_r(add_elements($arr,\
    \ $k));\n ?>\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24function candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if (strlen($arr[$i]) <= 2) {\n      $sum += $arr[$i];\n\
    \    }\n  }\n  return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho\
    \ add_elements($arr, $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $len = count($arr);\n\
    \    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (count(str_split($arr[$i]))\
    \ == 1) {\n            $sum += $arr[$i];\n        } else if (count(str_split($arr[$i]))\
    \ == 2) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr, $k);\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $counter\
    \ = 0;\n    foreach ($arr as $el) {\n        if (strlen($el) <= 2) {\n       \
    \     $sum += $el;\n            $counter++;\n        }\n        if ($counter ==\
    \ $k) {\n            break;\n        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "35\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9u6fp5i0.php:33\n\
    Stack trace:\n#0 /tmp/tmp9u6fp5i0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9u6fp5i0.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    if (count($arr) == 0)\
    \ {\n        return false;\n    }\n    $sum = 0;\n    $i = 0;\n    while ($i <\
    \ $k) {\n        if (floor($arr[$i] / 10) == 0) {\n            $sum += $arr[$i];\n\
    \        }\n        $i++;\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\nprint_r(add_elements($arr, $k));\nfunction candidate(...$args) {\n  \
    \  return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_ii_0ms.php:32\n\
    Stack trace:\n#0 /tmp/tmpu_ii_0ms.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu_ii_0ms.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $total = 0;\n  $len = count($arr);\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($i == $k) {\n      break;\n    }\n\
    \    if ($arr[$i] < 10) {\n      $total += $arr[$i];\n    } else if ($arr[$i]\
    \ < 100) {\n      $total += $arr[$i];\n    }\n  }\n  return $total;\n}\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n      $sum +=\
    \ $arr[$i];\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxad6go4y.php:25\n\
    Stack trace:\n#0 /tmp/tmpxad6go4y.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxad6go4y.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2)\n            $sum\
    \ += $arr[$i];\n    }\n    return $sum;\n}\n\nclass Solution {\n    public function\
    \ add_elements($arr, $k) {\n        $sum = 0;\n        foreach ($arr as $item)\
    \ {\n            if (strlen($item) <= 2)\n                $sum += $item;\n   \
    \         if (--$k == 0)\n                break;\n        }\n        return $sum;\n\
    \    }\n}\n\n$a = new Solution();\necho $a->add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $min_3\
    \ = $arr[0] >= 100 ? 0 : $arr[0];\n    $min_2 = $arr[0] >= 10 ? 0 : $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10) {\n           \
    \ $sum += $arr[$i];\n        } else if ($arr[$i] < 100) {\n            $sum +=\
    \ min($min_3, $arr[$i]);\n            $min_2 = max($min_2, $arr[$i]);\n      \
    \  } else {\n            $sum += min($min_2, $arr[$i]);\n            $min_3 =\
    \ max($min_3, $arr[$i]);\n        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\n$output = add_elements($arr, $k);\necho 'Output: ' . $output;\n\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Output: 45\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaipn_l8h.php:40\n\
    Stack trace:\n#0 /tmp/tmpaipn_l8h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpaipn_l8h.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    // brute force\n    $sum\
    \ = 0;\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if\
    \ (strlen($arr[$i]) <= 2) {\n            $sum += $arr[$i];\n            $count++;\n\
    \        }\n        if ($count == $k) {\n            break;\n        }\n    }\n\
    \    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "35\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpir3n9k10.php:35\n\
    Stack trace:\n#0 /tmp/tmpir3n9k10.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpir3n9k10.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $newArr = [];\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $firstNum = substr($arr[$i], 0, 1);\n   \
    \     $secondNum = substr($arr[$i], 1, 1);\n        if (is_numeric($firstNum)\
    \ && is_numeric($secondNum)) {\n            $newArr[] = $arr[$i];\n        }\n\
    \    }\n    return array_sum($newArr);\n}\nprint_r(add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4));\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4132\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0w2fcbu.php:27\n\
    Stack trace:\n#0 /tmp/tmpr0w2fcbu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr0w2fcbu.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10) {\n            $sum += $arr[$i];\n\
    \        } else if ($arr[$i] >= 10 && $arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k\
    \ = 4;\nprint_r(add_elements($arr, $k));\nfunction candidate(...$args) {\n   \
    \ return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $result = 0;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $result\
    \ += $arr[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $count = 0;\n  $sum = 0;\n\
    \  for ($i = 0; $i < count($arr); $i++) {\n    if ($count == $k)\n      break;\n\
    \    if ($arr[$i] >= 0 && $arr[$i] <= 99) {\n      $sum += $arr[$i];\n      $count++;\n\
    \    }\n  }\n  return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9], 4);\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "35\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkk1ink_f.php:29\n\
    Stack trace:\n#0 /tmp/tmpkk1ink_f.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkk1ink_f.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $arr_len = count($arr);\n\
    \    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ > 2) {\n            continue;\n        }\n        $sum += $arr[$i];\n    }\n\
    \    return $sum;\n}\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $elements = 0;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n          \
    \  $elements += $arr[$i];\n        }\n    }\n    return $elements;\n}\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $i = 0;\n\
    \    while ($i < $k) {\n        if (strlen($arr[$i]) > 2) {\n            $sum\
    \ += $arr[$i];\n        }\n        $i++;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputuxatca.php:27\n\
    Stack trace:\n#0 /tmp/tmputuxatca.php(34): test()\n#1 {main}\n  thrown in /tmp/tmputuxatca.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $count\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($count == $k)\
    \ {\n            break;\n        }\n        if ($arr[$i] < 100) {\n          \
    \  $sum += $arr[$i];\n            $count++;\n        }\n    }\n    return $sum;\n\
    }\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr, $k);\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "35\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9td264xd.php:33\n\
    Stack trace:\n#0 /tmp/tmp9td264xd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9td264xd.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n\t$res = 0;\n\tfor ($i = 0;\
    \ $i < $k; $i++) {\n\t\tif ($arr[$i] < 10) {\n\t\t\t$res += $arr[$i];\n\t\t} else\
    \ if ($arr[$i] < 100) {\n\t\t\t$res += $arr[$i];\n\t\t}\n\t}\n\treturn $res;\n\
    }\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\n\n$res = add_elements($arr, $k);\n\
    echo $res . PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($count == $k)\
    \ {\n            break;\n        }\n        if ($arr[$i] > 9 && $arr[$i] < 100)\
    \ {\n            $sum += $arr[$i];\n            $count++;\n        }\n    }\n\
    \    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkcxd58w5.php:32\n\
    Stack trace:\n#0 /tmp/tmpkcxd58w5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkcxd58w5.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx37jk_8u.php:24\n\
    Stack trace:\n#0 /tmp/tmpx37jk_8u.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpx37jk_8u.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10) {\n            $sum += $arr[$i];\n\
    \        } else if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n       \
    \ }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $sum\
    \ = 0;\n    foreach ($arr as $value) {\n        if ($count < $k) {\n         \
    \   if (strlen($value) <= 2) {\n                $sum += $value;\n            }\n\
    \        }\n        $count++;\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\nprint_r(add_elements($arr, $k));\nfunction candidate(...$args) {\n  \
    \  return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\nprint_r(add_elements($arr, $k));\nfunction candidate(...$args) {\n  \
    \  return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10) {\n            $sum += $arr[$i];\n\
    \        } else if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n       \
    \ }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\n\
    echo add_elements($arr, $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $smallest_num = min($arr);\n\
    \    $output = 0;\n    foreach($arr as $key => $val) {\n        if(strlen($val)\
    \ <= 2) {\n            $output += $val;\n        }\n        if($key == $k - 1)\
    \ {\n            break;\n        }\n    }\n    return $output;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if ($arr[$i] > 9 && $arr[$i] < 100) {\n      $sum += $arr[$i];\n\
    \    }\n  }\n  return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9], 4)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptemml3as.php:25\n\
    Stack trace:\n#0 /tmp/tmptemml3as.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptemml3as.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    if(count($arr) < 1 ||\
    \ count($arr) > 100 || $k < 1 || $k > count($arr)) {\n        return \"Error:\
    \ \\$arr must be 1 <= len(arr) <= 100 and 1 <= k <= len(arr)\";\n    }\n    $result\
    \ = 0;\n    for($i = 0; $i < $k; $i++) {\n        if($arr[$i] >= 10 && $arr[$i]\
    \ <= 99) {\n            $result += $arr[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9q0v46_.php:28\n\
    Stack trace:\n#0 /tmp/tmpn9q0v46_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn9q0v46_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $result = 0;\n    $n =\
    \ count($arr);\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100)\
    \ {\n            $result += $arr[$i];\n        }\n    }\n    return $result;\n\
    }\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr, $k) .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $length = count($arr);\n\
    \    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\necho add_elements([111,21,3,4000,5,6,7,8,9], 4);\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if ($arr[$i] > 9 && $arr[$i] < 100) {\n      $sum += $arr[$i];\n\
    \    }\n  }\n  return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9], 4);\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6yq9qtlw.php:25\n\
    Stack trace:\n#0 /tmp/tmp6yq9qtlw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6yq9qtlw.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $arr_length\
    \ = count($arr);\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10\
    \ || $arr[$i] > 99) {\n            $sum += $arr[$i];\n        }\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp8ww1qhg.php:27\n\
    Stack trace:\n#0 /tmp/tmpp8ww1qhg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpp8ww1qhg.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($i == $k) {\n            break;\n\
    \        }\n        if ($arr[$i] > 9 && $arr[$i] < 100) {\n            $sum +=\
    \ $arr[$i];\n        }\n    }\n    return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplx7w7388.php:28\n\
    Stack trace:\n#0 /tmp/tmplx7w7388.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplx7w7388.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $len = count($arr);\n\
    \    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] > 9 &&\
    \ $arr[$i] < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return\
    \ $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpncx4pfi7.php:30\n\
    Stack trace:\n#0 /tmp/tmpncx4pfi7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpncx4pfi7.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k\
    \ = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $result = 0;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $result\
    \ += $arr[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpias1jqwc.php:28\n\
    Stack trace:\n#0 /tmp/tmpias1jqwc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpias1jqwc.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $elements = 0;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $elements\
    \ += $arr[$i];\n        }\n    }\n    return $elements;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) . PHP_EOL; //24\necho add_elements([111,21,3,4000,5,6,7,8,9], 3) . PHP_EOL;\
    \ //24\necho add_elements([111,21,3,4000,5,6,7,8,9], 2) . PHP_EOL; //24\necho\
    \ add_elements([111,21,3,4000,5,6,7,8,9], 1) . PHP_EOL; //24\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pbdvnu0.php:22\n\
    Stack trace:\n#0 /tmp/tmp_pbdvnu0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_pbdvnu0.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $two_digit_integers\
    \ = [];\n    $counter = 0;\n    while (sizeof($two_digit_integers) < $k) {\n \
    \       $abs = abs($arr[$counter]);\n        if (strlen((string)$abs) <= 2) {\n\
    \            $two_digit_integers[] = $abs;\n        }\n        $counter++;\n \
    \   }\n    return array_sum($two_digit_integers);\n}\n\n$input = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\nprint_r(add_elements($input, $k));\nfunction candidate(...$args) {\n\
    \    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "35\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc92by19a.php:32\n\
    Stack trace:\n#0 /tmp/tmpc92by19a.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc92by19a.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $sum\
    \ = 0;\n    $index = 0;\n    while ($count < $k) {\n        if ($arr[$index] <\
    \ 100) {\n            $sum += $arr[$index];\n            $count++;\n        }\n\
    \        $index++;\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "35\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5chui3wc.php:33\n\
    Stack trace:\n#0 /tmp/tmp5chui3wc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5chui3wc.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $total\
    \ = 0;\n    foreach ($arr as $number) {\n        if ($count < $k) {\n        \
    \    if ($number < 10) {\n                $total += $number;\n            } else\
    \ if ($number < 100) {\n                $total += $number;\n            }\n  \
    \          $count++;\n        }\n    }\n    return $total;\n}\n$input1 = [111,21,3,4000,5,6,7,8,9];\n\
    $input2 = 3;\necho add_elements($input1, $input2) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7is03kr.php:24\n\
    Stack trace:\n#0 /tmp/tmpc7is03kr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpc7is03kr.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $total = 0;\n  for ($i =\
    \ 0; $i < $k; $i++) {\n    $total += $arr[$i];\n  }\n  return $total;\n}\n$arr\
    \ = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr, $k) . PHP_EOL;\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4135\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwiczb8wo.php:26\n\
    Stack trace:\n#0 /tmp/tmpwiczb8wo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwiczb8wo.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n\t$sum = 0;\n\t$pos = 1;\n\
    \tfor ($i = 0; $i < $k; $i++) {\n\t\tif ($arr[$i] > 9 && $arr[$i] < 100) {\n\t\
    \t\t$sum += $arr[$i];\n\t\t}\n\t}\n\treturn $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps1kq_gq6.php:25\n\
    Stack trace:\n#0 /tmp/tmps1kq_gq6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps1kq_gq6.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $arr = array_slice($arr,\
    \ 0, $k);\n    $two_digits = array_filter($arr, function($num) {\n        return\
    \ (strlen($num) <= 2);\n    });\n    return array_sum($two_digits);\n}\n$arr =\
    \ [111,21,3,4000,5,6,7,8,9];\necho add_elements($arr, 4) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n            $count++;\n        }\n \
    \       if ($count == $k) {\n            return $sum;\n        }\n    }\n    return\
    \ \"k is greater than length of array\";\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "35\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslz3625u.php:33\n\
    Stack trace:\n#0 /tmp/tmpslz3625u.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpslz3625u.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) > 2) {\n            continue;\n\
    \        }\n        $sum += $arr[$i];\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $total = 0;\n    $i =\
    \ 0;\n    $n = count($arr);\n    while ($i < $n && $k > 0) {\n        $curr_element\
    \ = $arr[$i];\n        $split_element = str_split($curr_element);\n        if\
    \ (count($split_element) > 2) {\n            $i++;\n            continue;\n  \
    \      }\n        $total += $curr_element;\n        $i++;\n        $k--;\n   \
    \ }\n    return $total;\n}\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s6s5ubb.php:33\n\
    Stack trace:\n#0 /tmp/tmp6s6s5ubb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6s6s5ubb.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $count\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($count < $k) {\n\
    \            if ($arr[$i] < 10) {\n                $sum += $arr[$i];\n       \
    \         $count++;\n            } else if ($arr[$i] < 100) {\n              \
    \  $sum += $arr[$i];\n                $count++;\n            }\n        }\n  \
    \  }\n    return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9], 4);\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "35\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl_spgsu.php:33\n\
    Stack trace:\n#0 /tmp/tmpwl_spgsu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwl_spgsu.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $total = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($i < $k) {\n            if ($arr[$i]\
    \ < 100) {\n                $total += $arr[$i];\n            }\n        }\n  \
    \  }\n    return $total;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\n$result\
    \ = add_elements($arr, $k);\necho $result;\nfunction candidate(...$args) {\n \
    \   return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if ($arr[$i] < 100) {\n      $sum += $arr[$i];\n    }\n\
    \  }\n  return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n\n$arr = [111,21,3,4001,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 2;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 10;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 1;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 3;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 7;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n\n$arr = [10,20,30,40,50,60,70,80,90];\n$k = 9;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n\n$arr = [10,20,30,40,50,60,70,80,90];\n$k = 3;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n\n$arr = [101,202,303,404,505,\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsgqu0ixw.php on line 57\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n   \
    \ return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n\t$sum = 0;\n\tfor ($i = 0;\
    \ $i < $k; $i++) {\n\t\tif (strlen($arr[$i]) < 3)\n\t\t\t$sum += $arr[$i];\n\t\
    }\n\treturn $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\nprint_r(add_elements($arr,\
    \ $k));\n\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_u6zqrf.php:24\n\
    Stack trace:\n#0 /tmp/tmpn_u6zqrf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpn_u6zqrf.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $s = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if ($arr[$i] < 100) {\n      $s += $arr[$i];\n    }\n\
    \  }\n  return $s;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n$arr = [2, 3, 5, 7, 100, 102, 104, 106, 108, 109];\n$k = 6;\n\
    echo add_elements($arr, $k) . PHP_EOL;\n$arr = [1, 10, 20, 30, 40, 50, 60, 70,\
    \ 80, 90, 100];\n$k = 5;\necho add_elements($arr, $k) . PHP_EOL;\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\
    \ 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\
    \ 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\
    \ 100];\n$k = 99;\necho add_elements($arr, $k) . PHP_EOL;\n$arr = [1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp95ictjv6.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if ($arr[$i] < 10) {\n      $sum += $arr[$i];\n    } else\
    \ if ($arr[$i] < 100) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n\
    }\n$arr = [111,21,3,4000,5,6,7,8,9];\necho add_elements($arr,4);\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] > 9 && $arr[$i] < 100) {\n     \
    \       $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzziyxgyc.php:25\n\
    Stack trace:\n#0 /tmp/tmpzziyxgyc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzziyxgyc.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $start = 0;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] < 10)\
    \ {\n            $sum += $arr[$i];\n            $start++;\n        } elseif ($arr[$i]\
    \ >= 10 && $arr[$i] < 100) {\n            $sum += $arr[$i];\n            $start++;\n\
    \        } else {\n            $sum += $arr[$i];\n            $start++;\n    \
    \    }\n        if ($start === $k) {\n            break;\n        }\n    }\n \
    \   return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4135\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxslz_utt.php:39\n\
    Stack trace:\n#0 /tmp/tmpxslz_utt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxslz_utt.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $index = 0;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2)\
    \ {\n            $sum += $arr[$i];\n        } else {\n            $index = $i;\n\
    \            break;\n        }\n    }\n    while ($index < $k) {\n        if (strlen($arr[$index])\
    \ <= 2) {\n            $sum += $arr[$index];\n            $index++;\n        }\
    \ else {\n            $sum += (int)substr($arr[$index], 0, 2);\n            $index++;\n\
    \        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k\
    \ = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "75\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zrrvwst.php:40\n\
    Stack trace:\n#0 /tmp/tmp9zrrvwst.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp9zrrvwst.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $temp =\
    \ array();\n    for ($i = 0; $i < count($arr); $i++) {\n        $temp[] = (string)$arr[$i];\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($temp[$i]) <= 2)\
    \ {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n\
    $arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr, $k);\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  // brute force: loop through\
    \ elements and add to the sum\n  // $sum = 0;\n  // for ($i = 0; $i < $k; $i++)\
    \ {\n  //   $item = $arr[$i];\n  //   if (strlen($item) <= 2) {\n  //     $sum\
    \ += $item;\n  //   }\n  // }\n  // return $sum;\n\n  // we can do a similar thing\
    \ but check digit length as we go\n  $sum = 0;\n  $index = 0;\n  while ($index\
    \ < $k) {\n    $item = $arr[$index];\n    if (strlen($item) <= 2) {\n      $sum\
    \ += $item;\n    }\n    $index++;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $total = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $total +=\
    \ $arr[$i];\n        }\n    }\n    return $total;\n}\n\n$tests = [];\n$tests[]\
    \ = ['input' => [[111,21,3,4000,5,6,7,8,9], 4], 'expect' => 24];\n$tests[] = ['input'\
    \ => [[111,21,3,4000,5,6,7,8,9], 1], 'expect' => 21];\n$tests[] = ['input' =>\
    \ [[111,21,3,4000,5,6,7,8,9], 3], 'expect' => 24];\n\nforeach ($tests as $index\
    \ => $test) {\n    $result = add_elements($test['input'][0], $test['input'][1]);\n\
    \    if ($test['expect'] != $result) {\n        echo 'Test fail at test' . ($index\
    \ + 1) . PHP_EOL;\n        exit;\n    }\n}\n\necho 'Test good!' . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Test fail at test2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $total = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n   \
    \         $total += $arr[$i];\n        }\n    }\n    return $total;\n}\n\n$arr\
    \ = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr, $k) . PHP_EOL;\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3g681c64.php:28\n\
    Stack trace:\n#0 /tmp/tmp3g681c64.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3g681c64.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] > 9 && $arr[$i] < 100) {\n     \
    \       $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwp0vpsj.php:27\n\
    Stack trace:\n#0 /tmp/tmpxwp0vpsj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxwp0vpsj.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($i === $k) {\n            break;\n\
    \        } else if (strlen($arr[$i]) <= 2) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    $count\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if (is_numeric($arr[$i])\
    \ && strlen($arr[$i]) <= 2) {\n            $sum += $arr[$i];\n            $count++;\n\
    \        }\n        if ($count == $k) {\n            break;\n        }\n    }\n\
    \    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "35\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzn3kiq5n.php:33\n\
    Stack trace:\n#0 /tmp/tmpzn3kiq5n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzn3kiq5n.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10) {\n            $sum += $arr[$i];\n\
    \        } else if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n       \
    \ }\n    }\n    return $sum;\n}\n\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = count($arr);\n\
    \    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10)\
    \ {\n            $sum += $arr[$i];\n        } elseif ($arr[$i] < 100) {\n    \
    \        $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\nprint_r(add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4));\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $i = 0;\n    $result =\
    \ 0;\n    while ($i < $k) {\n        if ($arr[$i] > 9 && $arr[$i] < 100) {\n \
    \           $result += $arr[$i];\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpol2_t37b.php:30\n\
    Stack trace:\n#0 /tmp/tmpol2_t37b.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpol2_t37b.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10) {\n            $sum += $arr[$i];\n\
    \        } else if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n       \
    \ }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\n\
    $output = add_elements($arr, $k);\necho \"The output for the input array $arr\
    \ and k = $k is $output\\n\";\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "The output for the input array Array and k = 4 is 24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) < 3) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    // base case:\n    if\
    \ ($k === 0) {\n        return 0;\n    }\n\n    $count = 0;\n    for ($i = 0;\
    \ $i < strlen($arr[$k - 1]); $i++) {\n        $count++;\n    }\n\n    if ($count\
    \ <= 2) {\n        return intval($arr[$k - 1]) + add_elements($arr, $k - 1);\n\
    \    } else {\n        return add_elements($arr, $k - 1);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121,\
    \ 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $first_k_elements = array_slice($arr,\
    \ 0, $k);\n    $sum = 0;\n    foreach ($first_k_elements as $key => $value) {\n\
    \        if (strlen($value) <= 2) {\n            $sum += $value;\n        }\n\
    \    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho\
    \ add_elements($arr, $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    // an array to hold the\
    \ first K elements of arr\n    $new_arr = [];\n    // the sum of numbers with\
    \ at most two digits from the first K elements of arr\n    $result = 0;\n    //\
    \ two pointers\n    $start = 0;\n    $end = $k - 1;\n    while ($start <= $end)\
    \ {\n        $new_arr[] = $arr[$start];\n        $start++;\n    }\n    foreach\
    \ ($new_arr as $element) {\n        if (strlen($element) <= 2) {\n           \
    \ $result += $element;\n        }\n    }\n    return $result;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    // base case:\n    if\
    \ (sizeof($arr) < 1) { return -1; }\n    if ($k < 1) { return -1; }\n    if ($k\
    \ > sizeof($arr)) { return -1; }\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        if (strlen($arr[$i]) <= 2) {\n            $sum += $arr[$i];\n   \
    \     }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vaujnnq.php:27\n\
    Stack trace:\n#0 /tmp/tmp8vaujnnq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8vaujnnq.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n\t$elements = [];\n\t$sum\
    \ = 0;\n\tfor ($i = 0; $i < $k; $i++) {\n\t\tif (strlen($arr[$i]) == 1) {\n\t\t\
    \t$elements[] = $arr[$i];\n\t\t} else if (strlen($arr[$i]) == 2) {\n\t\t\t$elements[]\
    \ = $arr[$i];\n\t\t}\n\t}\n\tfor ($i = 0; $i < count($elements); $i++) {\n\t\t\
    $sum += $elements[$i];\n\t}\n\treturn $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) < 3) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\nprint_r(add_elements($arr, $k));\nfunction candidate(...$args) {\n  \
    \  return add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $result = 0;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n\
    \            $result += $arr[$i];\n        }\n    }\n    return $result;\n}\n\
    function candidate(...$args) {\n    return add_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99),\
    \ 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ngbymqk.php:24\n\
    Stack trace:\n#0 /tmp/tmp4ngbymqk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4ngbymqk.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n\t$sum = 0;\n\t$count = 0;\n\
    \twhile($count < $k) {\n\t\tif(count(str_split($arr[$count])) <= 2) {\n\t\t\t\
    $sum += $arr[$count];\n\t\t}\n\t\t$count++;\n\t}\n\treturn $sum;\n}\n$arr = [1,2,3,4,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return add_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 121, 3, 4000, 5,\
    \ 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1), 1) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $k; $i++) {\n    if ($arr[$i] < 100) {\n      $sum += $arr[$i];\n    }\n\
    \  }\n  return $sum;\n}\n$arr = [111,21,3,4000,5,6,7,8,9];\necho add_elements($arr,\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $i = 0;\n    $total =\
    \ 0;\n    while ($i < $k) {\n        if (strlen($arr[$i]) <= 2) {\n          \
    \  $total += $arr[$i];\n        }\n        $i++;\n    }\n    return $total;\n\
    }\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\n$result = add_elements($arr,\
    \ $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n  // base case\n  if ($k ===\
    \ 0) {\n    return 0;\n  }\n  $sub_problem = add_elements($arr, $k - 1);\n  //\
    \ $arr[$k - 1] is the current element at the current k\n  $current_element = $arr[$k\
    \ - 1];\n  if ($current_element < 10) {\n    return $sub_problem + $current_element;\n\
    \  } elseif ($current_element < 100) {\n    return $sub_problem + $current_element;\n\
    \  } else {\n    return $sub_problem;\n  }\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4) . PHP_EOL;\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] <= 99) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n\
    $k = 4;\necho add_elements($arr, $k);\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylwn2r4x.php:28\n\
    Stack trace:\n#0 /tmp/tmpylwn2r4x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpylwn2r4x.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n\t$sum = 0;\n\t$n = count($arr);\n\
    \tfor ($i = 0; $i < $k; $i++) {\n\t\tif ($arr[$i] > 99) {\n\t\t\t$sum += 99;\n\
    \t\t} else {\n\t\t\t$sum += $arr[$i];\n\t\t}\n\t}\n\treturn $sum;\n}\n\n$tests\
    \ = [\n\t[\"arr\" => [111,21,3,4000,5,6,7,8,9], \"k\" => 4, \"result\" => 24],\n\
    \t[\"arr\" => [11,22,33,44,55,66,77,88,99], \"k\" => 3, \"result\" => 36],\n\t\
    [\"arr\" => [111,21,3,4000,5,6,7,8,9], \"k\" => 1, \"result\" => 99],\n\t[\"arr\"\
    \ => [111,21,3,4000,5,6,7,8,9], \"k\" => 2, \"result\" => 120],\n\t[\"arr\" =>\
    \ [1,2,3,4,5,6,7,8,9], \"k\" => 9, \"result\" => 45],\n\t[\"arr\" => [1,2,3,4,5,6,7,8,9],\
    \ \"k\" => 5, \"result\" => 21],\n\t[\"arr\" => [1,2,3,4,5,6,7,8,9], \"k\" =>\
    \ 4, \"result\" => 18],\n\t[\"arr\" => [1,2,3,4,5,6,7,8,9], \"k\" => 3, \"result\"\
    \ => 15],\n\t[\"arr\" => [1,2,3,4,5,6,7,8,9], \"k\" => 2, \"result\" => 12],\n\
    \t[\"arr\" => [1,2,3,4,5,6,7,8,9], \"k\" => 1, \"result\" => 9],\n];\n\nforeach\
    \ ($tests as $t) {\n\t$result = add_elements($t[\"arr\"], $t[\"k\"]);\n\techo\
    \ \"Inputs: \" . json_en\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp67gw20x6.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if (strlen($arr[$i]) <= 2) {\n     \
    \       $sum += $arr[$i];\n        }\n        if ($i === $k) {\n            break;\n\
    \        }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptqgzk_th.php:27\n\
    Stack trace:\n#0 /tmp/tmptqgzk_th.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptqgzk_th.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $count = 0;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n        if ($count == $k)\
    \ {\n            break;\n        }\n        if ($arr[$i] >= 10 && $arr[$i] <=\
    \ 99) {\n            $sum += $arr[$i];\n            $count++;\n        }\n   \
    \ }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n\n$arr = [11, 21, 33, 44, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $k = 4;\necho add_elements($arr, $k) . PHP_EOL;\n\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\n$k = 4;\necho add_elements($arr, $k) . PHP_EOL;\n\n$arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9];\n$k = 6;\necho add_elements($arr, $k) . PHP_EOL;\n\
    \n$arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9];\n$k = 7;\necho add_elements($arr,\
    \ $k) . PHP_EOL;\n\n$arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9];\n$k = 100;\necho\
    \ add_elements($arr, $k) . PHP_EOL;\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $k = 6;\necho add_elements($arr, $k) . PHP_EOL;\n\n$arr = [111, 2, 3, 4000, 5,\
    \ 6, 7, 8, 9];\n$k = 2;\necho add_elements($arr, $k) . PHP_EOL;\n\n$arr = [111,\
    \ 2, 3,\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpi3l9sqor.php on line 58\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($i >= $k) {\n            break;\n\
    \        }\n        if ($arr[$i] < 10) {\n            $sum += $arr[$i];\n    \
    \    } else if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n        }\n\
    \    }\n    return $sum;\n}\n\necho(add_elements([111,21,3,4000,5,6,7,8,9], 4));\n\
    echo(\"\\n\");\necho(add_elements([1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5],\
    \ 4));\necho(\"\\n\");\necho(add_elements([1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5],\
    \ 5));\necho(\"\\n\");\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "24\n4\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10) {\n            $sum += $arr[$i];\n\
    \        } else if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n       \
    \ }\n    }\n    return $sum;\n}\n\n$arr = [111,21,3,4000,5,6,7,8,9];\n$k = 4;\n\
    echo add_elements($arr, $k);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '24'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if (strlen($arr[$i]) <= 2) {\n     \
    \       $sum += $arr[$i];\n        }\n        if ($i == $k) {\n            break;\n\
    \        }\n    }\n    return $sum;\n}\necho add_elements([111,21,3,4000,5,6,7,8,9],\
    \ 4);\nfunction candidate(...$args) {\n    return add_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87,\
    \ 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
    \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "29\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk1kyokw.php:28\n\
    Stack trace:\n#0 /tmp/tmpzk1kyokw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzk1kyokw.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
    // the sum of the elements with at most two digits from the first k elements of\
    \ arr.\n// Example:\n// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n// Output:\
    \ 24 # sum of 21 + 3\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <=\
    \ k <= len(arr)\nfunction add_elements($arr, $k) {\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ add_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(11, 21, 3, 90, 5, 6,\
    \ 7, 8, 9), 4) !== 125) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1), 1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_114_minSubArraySum
language: php
prompt: "<?php\n// Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n\
  // minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums) {\n"
tests: "function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3,\
  \ 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
  \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
  \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
  \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-10)) !== -10) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(7)) !== 7) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, -1)) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $currentSum = 0;\n    $minimumSum = INF;\n    for ($i = 0; $i <\
    \ count($nums); $i++) {\n        $currentSum += $nums[$i];\n        $minimumSum\
    \ = min($minimumSum, $currentSum);\n        if ($currentSum > 0) {\n         \
    \   $currentSum = 0;\n        }\n    }\n    return $minimumSum;\n}\n\nvar_dump(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\nvar_dump(minSubArraySum([-1, -2, -3]));", "    $result =\
    \ $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n    \
    \    $sum += $nums[$i];\n        $result = min($result, $sum);\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $result;\n}\n",
  "    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n            $min\
    \ = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n       \
    \ }\n    }\n    return $min;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\n\
    echo minSubArraySum([-1, -2, -3]) . PHP_EOL;", "    $arr = [];\n    $temp = [];\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        for ($j = $i; $j < count($nums);\
    \ $j++) {\n            array_push($temp, $nums[$j]);\n            $arr[implode(\"\
    \", $temp)] = array_sum($temp);\n        }\n        $temp = [];\n    }\n    return\
    \ min($arr);\n}\n", "    $min = PHP_INT_MAX;\n    $current = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $current += $nums[$i];\n        $min\
    \ = min($min, $current);\n        if ($current > 0) {\n            $current =\
    \ 0;\n        }\n    }\n    return $min;\n}\n", "    $minSum = null;\n    $numsCount\
    \ = count($nums);\n    for ($i = 0; $i < $numsCount; $i++) {\n        $currentSum\
    \ = 0;\n        for ($j = $i; $j < $numsCount; $j++) {\n            $currentSum\
    \ += $nums[$j];\n            if (is_null($minSum) || $currentSum < $minSum) {\n\
    \                $minSum = $currentSum;\n            }\n        }\n    }\n   \
    \ return $minSum;\n}\n", "    $sum = 0;\n    $minSum = INF;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $minSum = min($minSum,\
    \ $sum);\n        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n \
    \   return $minSum;\n}\n", "    $total = $nums[0];\n    $min = $nums[0];\n   \
    \ for ($i = 1; $i < count($nums); $i++) {\n        $total += $nums[$i];\n    \
    \    if ($total < $min) {\n            $min = $total;\n        }\n    }\n    return\
    \ $min;\n}\nminSubArraySum([2, 3, 4, 1, 2, 4]);", "\t$min = INF;\n\t$sum = 0;\n\
    \t$size = count($nums);\n\tfor ($i = 0; $i < $size; $i++) {\n\t\t$sum += $nums[$i];\n\
    \t\tif ($sum < $min) $min = $sum;\n\t\tif ($sum > 0) $sum = 0;\n\t}\n\treturn\
    \ $min;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1,\
    \ -2, -3]) . \"\\n\";", "    if (count($nums) == 0) {\n        return 0;\n   \
    \ }\n    $minSum = 0;\n    $numsSum = 0;\n    $curSum = 0;\n    for ($i = 0; $i\
    \ < count($nums); $i++) {\n        $numsSum += $nums[$i];\n        $curSum +=\
    \ $nums[$i];\n        if ($curSum > 0) {\n            $curSum = 0;\n        }\n\
    \        if ($curSum < $minSum) {\n            $minSum = $curSum;\n        }\n\
    \    }\n    return $minSum < 0 ? $minSum : 0;\n}\necho minSubArraySum([2, 3, 4,\
    \ 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";\necho minSubArraySum([-2,\
    \ -3, -4, -1, -2, -4]) . \"\\n\";\necho minSubArraySum([-1, -3, -3, -3, -3, -2])\
    \ . \"\\n\";\necho minSubArraySum([-2, -3, -4, -1, -2, -4, -5]) . \"\\n\";\necho\
    \ minSubArraySum([-2, -3, -4, -1, -2, -4, -5, -6]) . \"\\n\";\necho minSubArraySum([-3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -2]) . \"\\n\";\necho minSubArraySum([-1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1", "    if (count($nums) === 0) {\n        return 0;\n\
    \    }\n    $min = $nums[0];\n    $current = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $current = min($current + $nums[$i], $nums[$i]);\n\
    \        $min = min($min, $current);\n    }\n    return $min;\n}\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;", " \
    \ $best = null;\n  for ($i = 0; $i < count($nums); $i++) {\n    $sum = 0;\n  \
    \  for ($j = $i; $j < count($nums); $j++) {\n      $sum += $nums[$j];\n      if\
    \ ($best === null || $sum < $best) {\n        $best = $sum;\n      }\n    }\n\
    \  }\n  return $best;\n}\n\nif (minSubArraySum([2, 3, 4, 1, 2, 4]) !== 1) {\n\
    \  throw new Exception('failed');\n}\nif (minSubArraySum([-1, -2, -3]) !== -6)\
    \ {\n  throw new Exception('failed');\n}\necho \"Success!\";", "    $curr_sum\
    \ = $nums[0];\n    $min_sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++)\
    \ {\n        $curr_sum = max($nums[$i], $curr_sum + $nums[$i]);\n        $min_sum\
    \ = min($min_sum, $curr_sum);\n    }\n    return $min_sum;\n}\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";", " \
    \   $n = count($nums);\n    $min_so_far = 0;\n    $min_ending_here = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $min_ending_here = min($nums[$i], $min_ending_here\
    \ + $nums[$i]);\n        $min_so_far = min($min_so_far, $min_ending_here);\n \
    \   }\n    return $min_so_far;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]);\n\
    echo PHP_EOL;\necho minSubArraySum([-1, -2, -3]);\necho PHP_EOL;", "    $sum =\
    \ $nums[0];\n    $minSum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++)\
    \ {\n        $sum = min($nums[$i], $sum + $nums[$i]);\n        $minSum = min($minSum,\
    \ $sum);\n    }\n    return $minSum;\n}\n\nprint_r(minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]));", "    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $currentSum += $nums[$i];\n        if\
    \ ($currentSum < $minSum) {\n            $minSum = $currentSum;\n        }\n \
    \       if ($currentSum > 0) {\n            $currentSum = 0;\n        }\n    }\n\
    \    return $minSum;\n}\n\n$test = [2, 3, 4, 1, 2, 4];\n$test2 = [-1, -2, -3];\n\
    \nvar_dump(minSubArraySum($test));\nvar_dump(minSubArraySum($test2));", "    $min\
    \ = $minSum = null;\n    $count = 0;\n    $last = count($nums) - 1;\n    while\
    \ ($count <= $last) {\n        if ($min === null) {\n            $min = $nums[$count];\n\
    \        }\n        if ($nums[$count] < $min) {\n            $min = $nums[$count];\n\
    \        }\n        $minSum += $nums[$count];\n        if ($minSum < 0) {\n  \
    \          $minSum = $min;\n        }\n        $count++;\n    }\n    return $minSum;\n\
    }\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1,\
    \ -2, -3]) . PHP_EOL;", "\tif (!$nums) {\n\t\treturn 0;\n\t}\n\t\n\t$start = 0;\n\
    \t$end = 0;\n\t$sum = 0;\n\t$result = INF;\n\t\n\twhile ($end < count($nums))\
    \ {\n\t\t$sum += $nums[$end];\n\t\t\n\t\twhile ($sum >= 0) {\n\t\t\t$result =\
    \ min($result, $sum);\n\t\t\t$sum -= $nums[$start];\n\t\t\t$start++;\n\t\t}\n\t\
    \t\n\t\t$end++;\n\t}\n\t\n\treturn $result;\n}\n", "    if (empty($nums)) return\
    \ 0;\n    $sum = $min = PHP_INT_MAX;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n        $sum\
    \ = max($sum, 0);\n    }\n    return $min;\n}", "    $minimum = INF;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        $minimum = min($minimum, $sum);\n        if ($sum > 0) {\n          \
    \  $sum = 0;\n        }\n    }\n    return $minimum;\n}\n", "    $minSum = $nums[0];\n\
    \    $currentSum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n  \
    \      $currentSum = max($nums[$i], $currentSum + $nums[$i]);\n        $minSum\
    \ = min($minSum, $currentSum);\n    }\n    return $minSum;\n}", "    $sum = PHP_INT_MAX;\n\
    \    $min = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $min += $nums[$i];\n\
    \        if ($min < $sum) {\n            $sum = $min;\n        }\n        if ($min\
    \ > 0) {\n            $min = 0;\n        }\n    }\n    return $sum;\n}\n\n$output_dir\
    \ = \"../output/\";\nif(isset($argv[1])) {\n    $output_dir = $argv[1];\n}\n$output_file\
    \ = $output_dir . \"q3.txt\";\nfile_put_contents($output_file, print_r(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]), true));\n", "    $min = null;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        for ($j = $i; $j < count($nums); $j++) {\n            $s =\
    \ array_sum(array_slice($nums, $i, $j + 1 - $i));\n            if ($min === null\
    \ || $s < $min) {\n                $min = $s;\n            }\n        }\n    }\n\
    \    return $min;\n}\n", "    $n = count($nums);\n    $minSum = PHP_INT_MAX;\n\
    \    $partialSum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $partialSum\
    \ += $nums[$i];\n        $minSum = min($minSum, $partialSum);\n        if ($partialSum\
    \ > 0) {\n            $partialSum = 0;\n        }\n    }\n    return $minSum;\n\
    }", "    $minSum = PHP_INT_MAX;\n    $currSum = 0;\n    $start = 0;\n    $end\
    \ = 0;\n    while ($end < count($nums)) {\n        $currSum += $nums[$end];\n\
    \        while ($currSum >= $minSum) {\n            $minSum = min($minSum, $currSum);\n\
    \            $currSum -= $nums[$start];\n            $start++;\n        }\n  \
    \      $end++;\n    }\n    return $minSum;\n}\n\n$testCases = [[2, 3, 4, 1, 2,\
    \ 4], [-1, -2, -3]];\nforeach ($testCases as $test) {\n    echo minSubArraySum($test)\
    \ . PHP_EOL;\n}", "    $currentSum = $minSum = PHP_INT_MAX;\n    $start = $end\
    \ = 0;\n    $numsLen = count($nums);\n    while ($end < $numsLen) {\n        $currentSum\
    \ += $nums[$end];\n        while ($currentSum > 0) {\n            $minSum = min($minSum,\
    \ $currentSum);\n            $currentSum -= $nums[$start];\n            $start++;\n\
    \        }\n        $end++;\n    }\n    return $minSum;\n}", "    if (sizeof($nums)\
    \ === 0) {\n        return 0;\n    }\n    $minSum = PHP_INT_MAX;\n    $currentSum\
    \ = 0;\n    for ($i = 0; $i < sizeof($nums); $i++) {\n        $currentSum += $nums[$i];\n\
    \        if ($currentSum < $minSum) {\n            $minSum = $currentSum;\n  \
    \      }\n        if ($currentSum > 0) {\n            $currentSum = 0;\n     \
    \   }\n    }\n    return $minSum;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";", "    if (empty($nums))\
    \ return 0;\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min)\
    \ {\n            $min = $sum;\n        }\n        if ($sum > 0) {\n          \
    \  $sum = 0;\n        }\n    }\n    return $min;\n}\n\necho(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\necho(minSubArraySum([-1, -2, -3]));", "  $minSum = PHP_INT_MAX;\n\
    \  $currentSum = 0;\n  $start = 0;\n  $end = 0;\n  while ($end < count($nums))\
    \ {\n    $currentSum += $nums[$end];\n    if ($currentSum < $minSum) {\n     \
    \ $minSum = $currentSum;\n    }\n    if ($currentSum > 0) {\n      $currentSum\
    \ = 0;\n      $start = $end + 1;\n    }\n    $end++;\n  }\n  return $minSum;\n\
    }\n\nprint_r(minSubArraySum([2, 3, 4, 1, 2, 4]));\necho \"\\n\";\nprint_r(minSubArraySum([-1,\
    \ -2, -3]));\necho \"\\n\";", "    $currSum = $nums[0];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($currSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n\
    \    return $minSum;\n}\n\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;", "  \
    \  if (count($nums) < 1) {\n        return 0;\n    }\n    $localMin = $globalMin\
    \ = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $localMin\
    \ = min($nums[$i], $localMin + $nums[$i]);\n        $globalMin = min($localMin,\
    \ $globalMin);\n    }\n    return $globalMin;\n}", "  $sum = 0;\n  $min = $nums[0];\n\
    \  for ($i = 0; $i < count($nums); $i++) {\n    $sum += $nums[$i];\n    if ($sum\
    \ < $min) {\n      $min = $sum;\n    }\n    if ($sum > 0) {\n      $sum = 0;\n\
    \    }\n  }\n  return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\n\
    echo minSubArraySum([-1, -2, -3]) . PHP_EOL;", "    $current = $nums[0];\n   \
    \ $overall = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $current\
    \ = max($nums[$i], $current + $nums[$i]);\n        $overall = max($current, $overall);\n\
    \    }\n    return $overall;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\n\
    echo minSubArraySum([-1, -2, -3]) . PHP_EOL;", "    $minSum = PHP_INT_MAX;\n \
    \   $currentSum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $currentSum\
    \ += $nums[$i];\n        if ($currentSum < $minSum) {\n            $minSum = $currentSum;\n\
    \        }\n        if ($currentSum > 0) {\n            $currentSum = 0;\n   \
    \     }\n    }\n    return $minSum;\n}\n\necho \"Testing minSubArraySum([2, 3,\
    \ 4, 1, 2, 4]): \";\necho (minSubArraySum([2, 3, 4, 1, 2, 4]) == 1) ? 'PASS' :\
    \ 'FAIL';\necho \"\\n\";\necho \"Testing minSubArraySum([-1, -2, -3]): \";\necho\
    \ (minSubArraySum([-1, -2, -3]) == -6) ? 'PASS' : 'FAIL';\necho \"\\n\";\necho\
    \ \"Testing minSubArraySum([-1, -2, -3, -4]): \";\necho (minSubArraySum([-1, -2,\
    \ -3, -4]) == -10) ? 'PASS' : 'FAIL';\necho \"\\n\";\necho \"Testing minSubArraySum([-1,\
    \ -2, -3, -4, -5]): \";\necho (minSubArraySum([-1, -2, -3, -4, -5]) == -15) ?\
    \ 'PASS' : 'FAIL';\necho \"\\n\";\necho \"Testing minSubArraySum([0, 1, 2, 3,\
    \ 4, 5]): \";\necho (minSubArraySum([0, 1, 2, 3, 4, 5]) == 0) ? 'PASS' : 'FAIL';\n\
    echo \"\\n\";\necho \"Testing minSubArraySum([-1, 1, -2, 2, -3, 3, -4, 4, -5,\
    \ 5]): \";\necho (minSubArraySum([-1, 1, -2, 2, -3, 3, -4, 4, -5, 5]) == -15)\
    \ ? 'PASS' : 'FAIL';\necho \"\\n\";\necho \"Testing", "    $min = $nums[0];\n\
    \    $n = count($nums);\n    for ($i = 0; $i < $n; $i++) {\n        $sum = 0;\n\
    \        for ($j = $i; $j < $n; $j++) {\n            $sum += $nums[$j];\n    \
    \        if ($sum < $min) {\n                $min = $sum;\n            }\n   \
    \     }\n    }\n    return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ . PHP_EOL; // 1\necho minSubArraySum([-1, -2, -3]) . PHP_EOL; // -6", "    $minSum\
    \ = 0;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n  \
    \      $currentSum += $nums[$i];\n        if ($currentSum < $minSum) {\n     \
    \       $minSum = $currentSum;\n        }\n    }\n    return $minSum;\n}\n", " \
    \   $sum = 0;\n    $min = $nums[0];\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n            $min\
    \ = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n       \
    \ }\n    }\n    return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\
    \\n\"; // 1\necho minSubArraySum([-1, -2, -3]) . \"\\n\"; // -6", "    $minSum\
    \ = 0;\n    $runningSum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n  \
    \      $runningSum += $nums[$i];\n        if ($runningSum < $minSum) {\n     \
    \       $minSum = $runningSum;\n        }\n    }\n    return $minSum;\n}\nprint(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL);\nprint(minSubArraySum([-1, -2, -3]) . PHP_EOL);",
  "  $min = $nums[0];\n  $max = $nums[0];\n  $sum = $nums[0];\n  for ($i = 1; $i <\
    \ count($nums); $i++) {\n    $sum += $nums[$i];\n    if ($sum < $min) {\n    \
    \  $min = $sum;\n    }\n    if ($sum > $max) {\n      $max = $sum;\n    }\n  }\n\
    \  return $min < 0 ? $min : 0;\n}\n\necho minSubArraySum([-1, -2, -3]) . \"\\\
    n\";", "  $min = null;\n  $result = null;\n  $i = 0;\n  while ($i < count($nums))\
    \ {\n    $j = $i;\n    $result = 0;\n    while ($j < count($nums)) {\n      $result\
    \ += $nums[$j];\n      if (is_null($min) || $result < $min) {\n        $min =\
    \ $result;\n      }\n      $j++;\n    }\n    $i++;\n  }\n  return $min;\n}", " \
    \ $minSum = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n    $sum = 0;\n   \
    \ for ($j = $i; $j < count($nums); $j++) {\n      $sum += $nums[$j];\n      if\
    \ ($minSum == 0 || $sum < $minSum) {\n        $minSum = $sum;\n      }\n    }\n\
    \  }\n  return $minSum;\n}\n", "    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\n$nums = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums) . PHP_EOL;\n\
    \n$nums = [-1, -2, -3];\necho minSubArraySum($nums) . PHP_EOL;", "    $sum = 0;\n\
    \    $minSum = PHP_INT_MAX;\n    $start = 0;\n    $end = 0;\n    while ($end <\
    \ count($nums)) {\n        $sum += $nums[$end];\n        if ($sum < $minSum) {\n\
    \            $minSum = $sum;\n        }\n        if ($sum > 0) {\n           \
    \ $sum = 0;\n            $start = $end + 1;\n        }\n        $end++;\n    }\n\
    \    return $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\n\
    echo minSubArraySum([-1, -2, -3]) . PHP_EOL;", "    $min_sum = 0;\n    foreach\
    \ ($nums as $num) {\n        $min_sum += $num;\n    }\n    $curr_sum = 0;\n  \
    \  for ($i = 0; $i < count($nums); $i++) {\n        $curr_sum += $nums[$i];\n\
    \        for ($j = $i + 1; $j < count($nums); $j++) {\n            $curr_sum +=\
    \ $nums[$j];\n            if ($curr_sum < $min_sum) {\n                $min_sum\
    \ = $curr_sum;\n            }\n        }\n        $curr_sum = 0;\n    }\n    return\
    \ $min_sum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1,\
    \ -2, -3]) . \"\\n\";\necho minSubArraySum([1, 1, -1, -1, 1, -1, 1, 1, 1, -1,\
    \ -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1", "  if (count($nums) === 0) return null;\n  $result = $nums[0];\n \
    \ $tempSum = $nums[0];\n  for ($i = 1; $i < count($nums); $i++) {\n    $tempSum\
    \ = min($tempSum + $nums[$i], $nums[$i]);\n    $result = min($result, $tempSum);\n\
    \  }\n  return $result;\n}\n", "  $minSum = null;\n  $sum = 0;\n  for ($i = 0;\
    \ $i < count($nums); $i++) {\n    for ($j = $i; $j < count($nums); $j++) {\n \
    \     $sum += $nums[$j];\n      if ($minSum === null || $sum < $minSum) {\n  \
    \      $minSum = $sum;\n      }\n    }\n    $sum = 0;\n  }\n  return $minSum;\n\
    }\n", "    $cur_sum = 0;\n    $min_sum = PHP_INT_MAX;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $cur_sum += $nums[$i];\n        if ($cur_sum < $min_sum) {\n\
    \            $min_sum = $cur_sum;\n        }\n        if ($cur_sum > 0) {\n  \
    \          $cur_sum = 0;\n        }\n    }\n    return $min_sum;\n}\n\n$nums =\
    \ [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums) . PHP_EOL;\n\n$nums = [-1, -2,\
    \ -3];\necho minSubArraySum($nums) . PHP_EOL;", "  if (count($nums) == 0) return\
    \ 0;\n  $currentSum = $minSum = $nums[0];\n  for ($i = 1; $i < count($nums); $i++)\
    \ {\n    $currentSum = min($currentSum + $nums[$i], $nums[$i]);\n    $minSum =\
    \ min($minSum, $currentSum);\n  }\n  return $minSum;\n}\n\nprint_r(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL);\nprint_r(minSubArraySum([-1, -2, -3]) . PHP_EOL);",
  "    $currSum = $nums[0];\n    $minSum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n        $minSum\
    \ = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;", " \
    \   $minSubArraySum = PHP_INT_MAX;\n    $totalSum = 0;\n    $len = count($nums);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $totalSum += $nums[$i];\n      \
    \  if ($totalSum < $minSubArraySum) {\n            $minSubArraySum = $totalSum;\n\
    \        }\n        if ($totalSum > 0) {\n            $totalSum = 0;\n       \
    \ }\n    }\n    return $minSubArraySum;\n}\necho minSubArraySum([2, 3, 4, 1, 2,\
    \ 4]);", "    $sum = 0;\n    $minSum = $nums[0];\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        if ($sum > 0) {\n            $sum = $nums[$i];\n        } else\
    \ {\n            $sum += $nums[$i];\n        }\n        $minSum = min($minSum,\
    \ $sum);\n    }\n    return $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;", "  $min = $nums[0];\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n    $sum += $nums[$i];\n\
    \    if ($sum < $min) {\n      $min = $sum;\n    }\n    if ($sum > 0) {\n    \
    \  $sum = 0;\n    }\n  }\n  return $min;\n}\n", "    $l = count($nums);\n    $minSum\
    \ = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < $l; $i++) {\n        $sum\
    \ += $nums[$i];\n        if ($sum < $minSum) {\n            $minSum = $sum;\n\
    \        }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n\
    \    return $minSum;\n}", "    if (empty($nums)) return 0;\n    $min_sum = PHP_INT_MAX;\n\
    \    $curr_sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $curr_sum\
    \ += $nums[$i];\n        $min_sum = min($min_sum, $curr_sum);\n        if ($curr_sum\
    \ > 0) $curr_sum = 0;\n    }\n    return $min_sum;\n}\n$nums = [2, 3, 4, 1, 2,\
    \ 4];\necho minSubArraySum($nums) . PHP_EOL;\n$nums = [-1, -2, -3];\necho minSubArraySum($nums)\
    \ . PHP_EOL;", "    $sum = $nums[0];\n    $min = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $sum = $sum + $nums[$i];\n        if ($sum\
    \ < $min) {\n            $min = $sum;\n        }\n        if ($sum < 0) {\n  \
    \          $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL; // 1\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\
    \ // -6", "    if (count($nums) === 0) {\n        return 0;\n    }\n    $minSubArraySum\
    \ = PHP_INT_MAX;\n    $accumulator = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $accumulator += $nums[$i];\n        $minSubArraySum = min($minSubArraySum,\
    \ $accumulator);\n        if ($accumulator > 0) {\n            $accumulator =\
    \ 0;\n        }\n    }\n    return $minSubArraySum;\n}\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;", " \
    \   $sum = 0;\n    $min = INF;\n    $n = count($nums);\n    $start = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $sum += $nums[$i];\n        while ($sum >=\
    \ $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;", " \
    \   $min = INF;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n\
    \        $sum += $nums[$i];\n        $min = min($min, $sum);\n        if ($sum\
    \ < 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\necho(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . \"\\n\");\necho(minSubArraySum([-1, -2, -3]) . \"\\n\");",
  "  $len = count($nums);\n  $min = PHP_INT_MAX;\n  $sum = 0;\n  for ($i = 0; $i <\
    \ $len; $i++) {\n    $sum += $nums[$i];\n    if ($sum < $min) {\n      $min =\
    \ $sum;\n    }\n    if ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return $min;\n\
    }\n\n$nums = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums) . PHP_EOL;\n$nums\
    \ = [-1, -2, -3];\necho minSubArraySum($nums) . PHP_EOL;", "\t$totalSum = 0;\n\
    \t$minSum = PHP_INT_MAX;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\t$totalSum\
    \ += $nums[$i];\n\t\t$minSum = min($minSum, $totalSum);\n\t\tif ($totalSum > 0)\
    \ {\n\t\t\t$totalSum = 0;\n\t\t}\n\t}\n\treturn $minSum;\n}\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL; // 1\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\
    \ // -6", "    if (!$nums) {\n        return 0;\n    }\n    $minSum = PHP_INT_MAX;\n\
    \    $currSum = 0;\n    foreach ($nums as $num) {\n        $currSum += $num;\n\
    \        $minSum = min($minSum, $currSum);\n        $currSum = max($currSum, 0);\n\
    \    }\n    return $minSum;\n}\n\n$result = minSubArraySum([-1, -2, -3]);\necho\
    \ 'Should be -6: ' . $result . PHP_EOL;\n$result = minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]);\necho 'Should be 1: ' . $result . PHP_EOL;\n$result = minSubArraySum([0,\
    \ 1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1", "    $minSum = 0;\n   \
    \ $currSum = 0;\n    foreach ($nums as $num) {\n        $currSum += $num;\n  \
    \      if ($currSum < $minSum) {\n            $minSum = $currSum;\n        }\n\
    \    }\n    return $minSum;\n}", "  $minSum = INF;\n  $runningSum = 0;\n  for\
    \ ($i = 0; $i < count($nums); $i++) {\n    $runningSum += $nums[$i];\n    $minSum\
    \ = min($minSum, $runningSum);\n    if ($runningSum > 0) {\n      $runningSum\
    \ = 0;\n    }\n  }\n  return $minSum;\n}\n", "    $min = PHP_INT_MAX;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        $min = min($min, $sum);\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $min;\n}\n", "\t$min = PHP_INT_MAX;\n\t$sum\
    \ = 0;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\t$sum += $nums[$i];\n\t\t\
    $min = min($min, $sum);\n\t\tif ($sum < 0) {\n\t\t\t$sum = 0;\n\t\t}\n\t}\n\t\
    return $min;\n}\n\n$nums = [2, 3, 4, 1, 2, 4];\n$minSubArraySum = minSubArraySum($nums);\n\
    echo($minSubArraySum . \"\\n\");\n$nums = [-1, -2, -3];\n$minSubArraySum = minSubArraySum($nums);\n\
    echo($minSubArraySum . \"\\n\");", "    $length = count($nums);\n    $globalSum\
    \ = PHP_INT_MAX;\n    $localSum = 0;\n    for ($i = 0; $i < $length; $i++) {\n\
    \        $localSum += $nums[$i];\n        if ($localSum < $globalSum) {\n    \
    \        $globalSum = $localSum;\n        }\n        if ($localSum > 0) {\n  \
    \          $localSum = 0;\n        }\n    }\n    return $globalSum;\n}", "   \
    \ if (count($nums) === 0) {\n        return 0;\n    }\n    $minSum = PHP_INT_MAX;\n\
    \    $currSum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $currSum\
    \ += $nums[$i];\n        $minSum = min($minSum, $currSum);\n        if ($currSum\
    \ > 0) {\n            $currSum = 0;\n        }\n    }\n    return $minSum;\n}\n\
    echo minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2,\
    \ -3]) . PHP_EOL;", "    if(count($nums) < 1) return null;\n    if(count($nums)\
    \ == 1) return $nums[0];\n    $minSum = null;\n    for($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum = 0;\n        for($j = $i; $j < count($nums); $j++) {\n\
    \            $sum += $nums[$j];\n            if($minSum === null || $sum < $minSum)\
    \ {\n                $minSum = $sum;\n            }\n        }\n    }\n    return\
    \ $minSum;\n}\n", "    $min = PHP_INT_MAX;\n    $currentSum = 0;\n    $start =\
    \ 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $currentSum += $nums[$i];\n\
    \        while ($currentSum >= $min) {\n            $min = $currentSum;\n    \
    \        $currentSum -= $nums[$start];\n            $start++;\n        }\n   \
    \ }\n    return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]);", "  $n =\
    \ count($nums);\n  $minSum = $nums[0];\n  $currSum = $nums[0];\n  for ($i = 1;\
    \ $i < $n; $i++) {\n    $currSum = min($nums[$i], $currSum + $nums[$i]);\n   \
    \ $minSum = min($minSum, $currSum);\n  }\n  return $minSum;\n}", "  if (count($nums)\
    \ === 0) return null;\n  $currentMinimum = PHP_INT_MAX;\n  $currentSum = 0;\n\
    \  for ($i = 0; $i < count($nums); $i++) {\n    $currentSum += $nums[$i];\n  \
    \  $currentMinimum = min($currentMinimum, $currentSum);\n    if ($currentSum <\
    \ 0) $currentSum = 0;\n  }\n  return $currentMinimum;\n}\n", "    $low = 0;\n\
    \    $high = 0;\n    $min = $nums[0];\n    $currentSum = $nums[0];\n    while\
    \ ($high < count($nums)) {\n        if ($currentSum < $min) {\n            $min\
    \ = $currentSum;\n        }\n        if ($currentSum < 0) {\n            $currentSum\
    \ = 0;\n            $low = $high + 1;\n        }\n        $high++;\n        if\
    \ ($high < count($nums)) {\n            $currentSum += $nums[$high];\n       \
    \ }\n    }\n    return $min;\n}\n", "    $len = count($nums);\n    $min = PHP_INT_MAX;\n\
    \    $sum = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $nums[$i];\n\
    \        if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\necho\
    \ minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2,\
    \ -3]) . \"\\n\";", "    if (empty($nums)) {\n        return 0;\n    }\n    $n\
    \ = count($nums);\n    $minSum = PHP_INT_MAX;\n    $runningSum = 0;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $runningSum += $nums[$i];\n        $minSum =\
    \ min($minSum, $runningSum);\n        if ($runningSum > 0) {\n            $runningSum\
    \ = 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [1, 2, 3, -4, 5, 6,\
    \ 7, -8, 1, 2, 4];\necho minSubArraySum($nums);", "    $min = INF;\n    $sum =\
    \ 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        $min = min($min, $sum);\n        if ($sum < 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $min;\n}\n", "    if (empty($nums)) return\
    \ null;\n    $sum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($currSum + $nums[$i], $nums[$i]);\n\
    \        $sum = min($sum, $currSum);\n    }\n    return $sum;\n}\n", "    $current_min\
    \ = $nums[0];\n    $global_min = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $current_min = min($nums[$i], $current_min + $nums[$i]);\n\
    \        $global_min = min($current_min, $global_min);\n    }\n    return $global_min;\n\
    }\n\n$nums = [2, 3, 4, 1, 2, 4];\n\necho minSubArraySum($nums);", "    $current_sum\
    \ = $nums[0];\n    $min_sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++)\
    \ {\n        $current_sum = max($nums[$i], $current_sum + $nums[$i]);\n      \
    \  $min_sum = min($min_sum, $current_sum);\n    }\n    return $min_sum;\n}\necho\
    \ minSubArraySum([2, 3, 4, 1, 2, 4]);\necho \"\\n\";\necho minSubArraySum([-1,\
    \ -2, -3]);", "  $n = count($nums);\n  $minSum = PHP_INT_MAX;\n  $currSum = 0;\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $currSum += $nums[$i];\n    if ($currSum\
    \ < $minSum) {\n      $minSum = $currSum;\n    }\n    if ($currSum > 0) {\n  \
    \    $currSum = 0;\n    }\n  }\n  return $minSum;\n}\n", "\t$minSum = INF;\n\t\
    $sum = 0;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\t$sum += $nums[$i];\n\
    \t\t$minSum = min($minSum, $sum);\n\t\tif ($sum < 0) $sum = 0;\n\t}\n\treturn\
    \ $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1,\
    \ -2, -3]) . PHP_EOL;", "  $min = INF;\n  $sum = 0;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $sum += $nums[$i];\n    $min = min($min, $sum);\n    if ($sum >\
    \ 0) {\n      $sum = 0;\n    }\n  }\n  return $min;\n}\n", "\t$min = PHP_INT_MAX;\n\
    \t$sum = 0;\n\t$size = count($nums);\n\tfor ($i = 0; $i < $size; $i++) {\n\t\t\
    $sum += $nums[$i];\n\t\tif ($sum < $min) {\n\t\t\t$min = $sum;\n\t\t}\n\t\tif\
    \ ($sum > 0) {\n\t\t\t$sum = 0;\n\t\t}\n\t}\n\treturn $min;\n}\n\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;", " \
    \ $minSum = PHP_INT_MAX;\n  $sum = 0;\n  for ($i = 0; $i < count($nums); $i++)\
    \ {\n    $sum += $nums[$i];\n    $minSum = min($minSum, $sum);\n    if ($sum >\
    \ 0) {\n      $sum = 0;\n    }\n  }\n  return $minSum;\n}\n", "    if (count($nums)\
    \ == 0) {\n        return 0;\n    }\n    $start = 0;\n    $end = 0;\n    $sum\
    \ = $nums[0];\n    $minSum = $sum;\n    while (true) {\n        if ($end + 1 <\
    \ count($nums)) {\n            $end++;\n            $sum += $nums[$end];\n   \
    \     } else {\n            break;\n        }\n        if ($sum < $minSum) {\n\
    \            $minSum = $sum;\n        }\n        if ($sum > 0) {\n           \
    \ $start++;\n            $sum -= $nums[$start - 1];\n        }\n    }\n    return\
    \ $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1,\
    \ -2, -3]) . PHP_EOL;", "    $min = $currentMin = 0;\n    $currentSum = 0;\n \
    \   for ($i = 0; $i < count($nums); $i++) {\n        $currentSum += $nums[$i];\n\
    \        if ($currentSum < $currentMin) {\n            $currentMin = $currentSum;\n\
    \        }\n        if ($i === 0 || $currentMin < $min) {\n            $min =\
    \ $currentMin;\n        }\n    }\n    return $min;\n}", "\n}", "  $min = PHP_INT_MAX;\n\
    \  $sum = 0;\n  $left = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n    $sum\
    \ += $nums[$i];\n    $min = min($min, $sum - $left);\n    $left = min($left, $sum);\n\
    \  }\n  return $min;\n}\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;", "    $min = PHP_INT_MAX;\n    $sum = 0;\n    for\
    \ ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min\
    \ = min($min, $sum);\n        if ($sum > 0) $sum = 0;\n    }\n    return $min;\n\
    }\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1,\
    \ -2, -3]) . \"\\n\";", "    $left = 0;\n    $minSum = $nums[0];\n    $currentSum\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $currentSum += $nums[$i];\n\
    \        $minSum = min($minSum, $currentSum);\n        while ($currentSum > $minSum)\
    \ {\n            $currentSum -= $nums[$left];\n            $left++;\n        }\n\
    \    }\n    return $minSum;\n}\n\n$output_dir = \"output/\";\nif(!is_dir($output_dir)){\n\
    \    mkdir($output_dir);\n}\n$output_file = $output_dir . \"minSubArraySum.txt\"\
    ;\n$input_file = \"input.txt\";\n\n$in_file = fopen($input_file, \"r\");\n$out_file\
    \ = fopen($output_file, \"w\");\n\nif ($in_file && $out_file) {\n    while (($line\
    \ = fgets($in_file)) !== false) {\n        $line = trim($line);\n        $line\
    \ = explode(\" \", $line);\n        foreach ($line as $key => $value) {\n    \
    \        $line[$key] = (int)$value;\n        }\n        $result = minSubArraySum($line);\n\
    \        fwrite($out_file, $result . \"\\n\");\n    }\n    fclose($in_file);\n\
    \    fclose($out_file);\n}", "    $min = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        if ($sum < 0) {\n            $sum =\
    \ $nums[$i];\n        } else {\n            $sum += $nums[$i];\n        }\n  \
    \      $min = min($min, $sum);\n    }\n    return $min;\n}\n$nums = [2, 3, 4,\
    \ 1, 2, 4];\necho minSubArraySum($nums) . PHP_EOL;", "    $min = PHP_INT_MAX;\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        $min = min($min, $sum);\n        if ($sum < 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $min;\n}", "  $min = $nums[0];\n  $running\
    \ = $nums[0];\n  for ($i = 1; $i < count($nums); $i++) {\n    $running = max(0,\
    \ $running + $nums[$i]);\n    $min = min($min, $running);\n  }\n  return $min;\n\
    }\n\nprint_r(minSubArraySum([2, 3, 4, 1, 2, 4]));\nprint_r(minSubArraySum([-1,\
    \ -2, -3]));", "  $minSum = PHP_INT_MAX;\n  $sum = 0;\n  $start = 0;\n  for ($i\
    \ = 0; $i < count($nums); $i++) {\n    $sum += $nums[$i];\n    if ($sum < $minSum)\
    \ {\n      $minSum = $sum;\n    }\n    if ($sum > 0) {\n      $sum = 0;\n    \
    \  $start = $i + 1;\n    }\n  }\n  return $minSum;\n}\n\nvar_dump(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])); // 1\nvar_dump(minSubArraySum([-1, -2, -3])); // -6", "  \
    \  $min = $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n    \
    \    $sum = max($nums[$i], $sum + $nums[$i]);\n        $min = min($min, $sum);\n\
    \    }\n    return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\n\
    echo minSubArraySum([-1, -2, -3]) . PHP_EOL;", "\t$min = 0;\n\t$subs = [];\n\t\
    foreach ($nums as $num) {\n\t\tforeach ($nums as $k => $v) {\n\t\t\t$subs[] =\
    \ array_sum(array_slice($nums, $k, $num));\n\t\t}\n\t}\n\t$subs = array_filter($subs,\
    \ function($v) {\n\t\treturn $v >= 0;\n\t});\n\treturn empty($subs) ? -1 : min($subs);\n\
    }\n", "\n}\n", "    if (count($nums) == 0) return 0;\n    $minSum = $nums[0];\n\
    \    $currentSum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n  \
    \      $currentSum = min($currentSum + $nums[$i], $nums[$i]);\n        $minSum\
    \ = min($minSum, $currentSum);\n    }\n    return $minSum;\n}\n\n$nums = [2, 3,\
    \ 4, 1, 2, 4];\necho minSubArraySum($nums);", "    if (count($nums) === 0) {\n\
    \        return 0;\n    }\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n    }\n    return $min;\n\
    }", "    if(count($nums) == 0) {\n        return 0;\n    }\n    $min_sum = PHP_INT_MAX;\n\
    \    $curr_sum = 0;\n    for($i = 0; $i < count($nums); $i++) {\n        $curr_sum\
    \ += $nums[$i];\n        if($curr_sum < $min_sum) {\n            $min_sum = $curr_sum;\n\
    \        }\n        if($curr_sum > 0) {\n            $curr_sum = 0;\n        }\n\
    \    }\n    return $min_sum;\n}", "    $min = PHP_INT_MAX;\n    $curr = 0;\n \
    \   $arrLength = count($nums);\n    for ($i = 0; $i < $arrLength; $i++) {\n  \
    \      $curr += $nums[$i];\n        if ($curr < $min) {\n            $min = $curr;\n\
    \        }\n        if ($curr > 0) {\n            $curr = 0;\n        }\n    }\n\
    \    return $min;\n}\n\nprint_r(minSubArraySum([-1, -2, -3]));", "    if (count($nums)\
    \ < 1) {\n        return 0;\n    }\n    $start = 0;\n    $sum = 0;\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum +=\
    \ $nums[$i];\n        while ($sum >= $minSum) {\n            $minSum = min($minSum,\
    \ $sum);\n            $sum -= $nums[$start];\n            $start++;\n        }\n\
    \    }\n    return $minSum;\n}\n", "    $res = $nums[0];\n    $sum = 0;\n    for\
    \ ($i = 0; $i < count($nums); $i++) {\n        if ($sum > 0) {\n            $sum\
    \ = $nums[$i];\n        } else {\n            $sum += $nums[$i];\n        }\n\
    \        $res = min($res, $sum);\n    }\n    return $res;\n}\n", "  $min_sum =\
    \ PHP_INT_MAX;\n  $sum = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n    $sum\
    \ += $nums[$i];\n    if ($sum < $min_sum) {\n      $min_sum = $sum;\n    }\n \
    \   if ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return $min_sum;\n}\n", " \
    \   $sum = 0;\n    $max = PHP_INT_MAX;\n    $len = count($nums);\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        $sum += $nums[$i];\n        if ($sum < $max)\
    \ {\n            $max = $sum;\n        }\n        if ($sum > 0) {\n          \
    \  $sum = 0;\n        }\n    }\n    return $max;\n}\n", "    $min = PHP_INT_MAX;\n\
    \    $sum = 0;\n    $j = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n   \
    \     $sum += $nums[$i];\n        while ($sum >= $min) {\n            $min = $sum;\n\
    \            $sum -= $nums[$j];\n            $j++;\n        }\n    }\n    return\
    \ $min;\n}", "  $min = $nums[0];\n  $sub = $nums[0];\n  for ($i = 1; $i < count($nums);\
    \ $i++) {\n    $sub = $sub > 0 ? $nums[$i] : $sub + $nums[$i];\n    $min = $min\
    \ > $sub ? $sub : $min;\n  }\n  return $min;\n}", "  $sum = $min = PHP_INT_MAX;\n\
    \  $start = $end = 0;\n  $len = count($nums);\n  while ($end < $len) {\n    $sum\
    \ += $nums[$end];\n    $end++;\n    while ($sum >= 0) {\n      $min = min($min,\
    \ $sum);\n      $sum -= $nums[$start];\n      $start++;\n    }\n  }\n  return\
    \ $min;\n}\n\n$cases = [\n  [2, 3, 4, 1, 2, 4],\n  [-1, -2, -3],\n  [1, 1, 1,\
    \ 1, 1],\n  [1, 1, -3, 1, 1],\n  [2, -3, 4, -1, 2, 4],\n  [2, -3, 4, -1, 2, 4,\
    \ -1],\n  [2, -3, 4, -1, 2, 4, -1, 2, -3, 4, -1, 2, 4, -1],\n  [2, -3, 4, -1,\
    \ 2, 4, -1, 2, -3, 4, -1, 2, 4, -1, 2, -3, 4, -1, 2, 4, -1],\n  [2, -3, 4, -1,\
    \ 2, 4, -1, 2, -3, 4, -1, 2, 4, -1, 2, -3, 4, -1, 2, 4, -1, 2, -3, 4, -1, 2, 4,\
    \ -1],\n  [1, 1, 1, 1, 1, -1000, 1, 1, 1, 1, 1],\n  [2, 3, -4, 1, 2, 4],\n  [2,\
    \ 3, -4, -2, 3, 4],\n  [2, 3, -4, -2, 3, 4, -1],\n  [2, 3, -4, -2, 3, 4, -1, 2,\
    \ 3, -4, -2, 3, 4, -1],\n  [2, 3, -4, -2, 3, 4, -1, 2, 3, -", "    $minSum = $nums[0];\n\
    \    $runningSum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n  \
    \      $runningSum = max($nums[$i], $runningSum + $nums[$i]);\n        $minSum\
    \ = min($minSum, $runningSum);\n    }\n    return $minSum;\n}", "    $min_sum\
    \ = $total = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $total +=\
    \ $nums[$i];\n        if ($total < $min_sum) {\n            $min_sum = $total;\n\
    \        }\n    }\n    return $min_sum;\n}", "  if (count($nums) === 0) return\
    \ false;\n  $min = $nums[0];\n  $sum = $nums[0];\n  for ($i = 1; $i < count($nums);\
    \ $i++) {\n    $sum += $nums[$i];\n    if ($sum < $min) $min = $sum;\n    if ($sum\
    \ > 0) $sum = 0;\n  }\n  return $min;\n}\n\nprint_r(minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]));\nprint_r(minSubArraySum([-1, -2, -3]));", "    if (sizeof($nums) ==\
    \ 0) return 0;\n    if (sizeof($nums) == 1) return $nums[0];\n    if (sizeof($nums)\
    \ == 2) return min($nums[0], $nums[1]);\n    $length = sizeof($nums);\n    $minSum\
    \ = $nums[0];\n    for ($i = 0; $i < $length; $i++) {\n        $sum = 0;\n   \
    \     for ($j = $i; $j < $length; $j++) {\n            $sum += $nums[$j];\n  \
    \          if ($sum < $minSum) {\n                $minSum = $sum;\n          \
    \  }\n        }\n    }\n    return $minSum;\n}", "  $currentSum = 0;\n  $minSum\
    \ = PHP_INT_MAX;\n  for ($i = 0; $i < count($nums); $i++) {\n    $currentSum +=\
    \ $nums[$i];\n    if ($currentSum < $minSum) {\n      $minSum = $currentSum;\n\
    \    }\n    if ($currentSum > 0) {\n      $currentSum = 0;\n    }\n  }\n  return\
    \ $minSum;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1,\
    \ -2, -3]) . PHP_EOL;", "    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n  \
    \  $st = 0;\n\n    for ($end = 0; $end < count($nums); $end++) {\n        $currentSum\
    \ += $nums[$end];\n        while ($currentSum >= $minSum) {\n            $minSum\
    \ = min($minSum, $currentSum);\n            $currentSum -= $nums[$st];\n     \
    \       $st++;\n        }\n    }\n\n    return $minSum;\n}\n\nvar_dump(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) == 1);\nvar_dump(minSubArraySum([-1, -2, -3]) == -6);", "  $min\
    \ = $nums[0];\n  $sum = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n    $sum\
    \ += $nums[$i];\n    if ($sum < $min) {\n      $min = $sum;\n    }\n    if ($sum\
    \ > 0) {\n      $sum = 0;\n    }\n  }\n  return $min;\n}\n\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;", " \
    \   $min = PHP_INT_MAX;\n    $temp = 0;\n    $i = 0;\n    $j = 0;\n    while ($j\
    \ < count($nums)) {\n        $temp += $nums[$j];\n        if ($temp < $min) {\n\
    \            $min = $temp;\n        }\n        if ($temp < 0) {\n            $temp\
    \ = 0;\n            $i = $j + 1;\n        }\n        $j++;\n    }\n    return\
    \ $min;\n}", "    $min_sum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min_sum) {\n      \
    \      $min_sum = $sum;\n        }\n        if ($sum > 0) {\n            $sum\
    \ = 0;\n        }\n    }\n    return $min_sum;\n}\n\n/**\n * @runTestsInSeparateProcesses\n\
    \ */\nclass MinSubArraySumTest extends TestCase\n{\n    public function testExamples()\n\
    \    {\n        $this->assertEquals(1, minSubArraySum([2, 3, 4, 1, 2, 4]));\n\
    \        $this->assertEquals(-6, minSubArraySum([-1, -2, -3]));\n    }\n}", " \
    \   if (!$nums) {\n        return 0;\n    }\n    $result = $nums[0];\n    $sum\
    \ = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $sum = max($nums[$i],\
    \ $sum + $nums[$i]);\n        $result = min($result, $sum);\n    }\n    return\
    \ $result;\n}\n", "    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum +\
    \ $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n\
    \    return $minSum;\n}\n", "    $len = count($nums);\n    if ($len == 0) return\
    \ 0;\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < $len;\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) $min = $sum;\n\
    \        if ($sum > 0) $sum = 0;\n    }\n    return $min;\n}\n", "    $subArraySum\
    \ = 0;\n    $subArray = [];\n    $min = PHP_INT_MAX;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $subArraySum += $nums[$i];\n        $subArray[] = $nums[$i];\n\
    \        if ($subArraySum >= $min) {\n            $subArraySum -= array_shift($subArray);\n\
    \        }\n        $min = min($min, $subArraySum);\n    }\n    return $min;\n\
    }\n", "    $startIndex = 0;\n    $endIndex = 0;\n    $currentSum = 0;\n    $minSum\
    \ = 0;\n    $currentLength = 0;\n    $minLength = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        if ($currentSum + $nums[$i] > 0) {\n            $currentSum\
    \ += $nums[$i];\n            $currentLength++;\n        } else {\n           \
    \ $currentSum = 0;\n            $currentLength = 0;\n            $startIndex =\
    \ $i + 1;\n        }\n        if ($currentSum < $minSum || $minSum == 0) {\n \
    \           $minSum = $currentSum;\n            $minLength = $currentLength;\n\
    \            $endIndex = $i;\n        }\n    }\n    return array_slice($nums,\
    \ $startIndex, $minLength);\n}\n\nprint_r(minSubArraySum([2, 3, 4, 1, 2, 4]));\n\
    print_r(minSubArraySum([-1, -2, -3]));", "    $currentSum = 0;\n    $minSum =\
    \ PHP_INT_MAX;\n    $start = 0;\n    $i = 0;\n    while ($i < count($nums)) {\n\
    \        $currentSum += $nums[$i];\n        while ($currentSum >= $minSum) {\n\
    \            $minSum = min($minSum, $currentSum);\n            $currentSum -=\
    \ $nums[$start];\n            $start++;\n        }\n        $i++;\n    }\n   \
    \ return $minSum;\n}\n", "    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    $length = count($nums);\n    for ($i = 1; $i < $length; $i++) {\n       \
    \ $currSum = max($nums[$i], $currSum + $nums[$i]);\n        $minSum = min($minSum,\
    \ $currSum);\n    }\n    return $minSum;\n}\necho minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]);", "    $sum = array_sum($nums);\n    $sum_min = $sum;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum = 0;\n        for ($j = $i; $j <\
    \ count($nums); $j++) {\n            $sum += $nums[$j];\n            if ($sum\
    \ < $sum_min) {\n                $sum_min = $sum;\n            }\n        }\n\
    \    }\n    return $sum_min;\n}\n", "  $min = $nums[0];\n  $tempSum = 0;\n  for\
    \ ($i = 0; $i < count($nums); $i++) {\n    $tempSum += $nums[$i];\n    if ($tempSum\
    \ < $min) {\n      $min = $tempSum;\n    }\n  }\n  return $min;\n}\n", "  $sum\
    \ = array_sum($nums);\n  $min = $sum;\n  for ($i = 0; $i < count($nums); $i++)\
    \ {\n    $currentSum = 0;\n    for ($j = $i; $j < count($nums); $j++) {\n    \
    \  $currentSum += $nums[$j];\n      if ($currentSum < $min) {\n        $min =\
    \ $currentSum;\n      }\n    }\n  }\n  return $min;\n}\n", "}\n\n$res = minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]);\nprint_r($res);", "\t$start = 0;\n\t$end = 0;\n\t$sum = $nums[0];\n\
    \t$minSum = $sum;\n\t$len = count($nums);\n\twhile ($end < $len) {\n\t\tif ($sum\
    \ < 0) {\n\t\t\t$start = $end;\n\t\t\t$sum = 0;\n\t\t}\n\t\t$sum += $nums[$end];\n\
    \t\t$minSum = min($minSum, $sum);\n\t\t$end++;\n\t}\n\treturn $minSum;\n}\n\n\
    echo minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2,\
    \ -3]) . PHP_EOL;", "    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum)\
    \ {\n            $minSum = $sum;\n        }\n        if ($sum > 0) {\n       \
    \     $sum = 0;\n        }\n    }\n    return $minSum;\n}\n", "    $min = null;\n\
    \    $current = 0;\n    $numsCount = count($nums);\n    for ($i = 0; $i < $numsCount;\
    \ $i++) {\n        $current += $nums[$i];\n        if ($min === null || $current\
    \ < $min) {\n            $min = $current;\n        }\n        if ($current > 0)\
    \ {\n            $current = 0;\n        }\n    }\n    return $min;\n}\n", "  \
    \  $total = 0;\n    $min = $nums[0];\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $total += $nums[$i];\n        if ($total < $min) {\n            $min\
    \ = $total;\n        }\n        if ($total > 0) {\n            $total = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";", "  $min = PHP_INT_MAX;\n\
    \  $sum = 0;\n  $start = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n    $sum\
    \ += $nums[$i];\n    while ($sum >= $min) {\n      $min = min($min, $sum);\n \
    \     $sum -= $nums[$start];\n      $start++;\n    }\n  }\n  return $min;\n}\n\
    \nprint_r(minSubArraySum([2, 3, 4, 1, 2, 4]));\nprint_r(minSubArraySum([-1, -2,\
    \ -3]));", "    $min = PHP_INT_MAX;\n    $currSum = 0;\n    for ($i = 0; $i <\
    \ count($nums); $i++) {\n        $currSum += $nums[$i];\n        $min = min($min,\
    \ $currSum);\n        if ($currSum > 0) {\n            $currSum = 0;\n       \
    \ }\n    }\n    return $min;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\\
    n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";", "    $min = null;\n    $sum\
    \ = 0;\n    $start = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n  \
    \      $sum += $nums[$end];\n        if ($min === null || $sum < $min) {\n   \
    \         $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n            $start = $end + 1;\n        }\n        $end++;\n    }\n    return\
    \ $min;\n}\n", "    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n \
    \   $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        while ($sum > 0) {\n            $minSum = min($minSum, $sum);\n     \
    \       $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $minSum;\n}", "    $sorted = sort($nums);\n    return min($nums);\n\
    }\n", "  $sum = PHP_INT_MAX;\n  $currSum = 0;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $currSum += $nums[$i];\n    if ($currSum < $sum) {\n      $sum\
    \ = $currSum;\n    }\n    if ($currSum > 0) {\n      $currSum = 0;\n    }\n  }\n\
    \  return $sum;\n}\n$nums = [2, 3, 4, 1, 2, 4];\nvar_dump(minSubArraySum($nums));\n\
    $nums = [-1, -2, -3];\nvar_dump(minSubArraySum($nums));", "    $minSum = array_sum($nums);\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        if ($sum < $minSum) {\n            $minSum = $sum;\n        }\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]);", "    $smallest = $nums[0];\n \
    \   $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        if ($smallest > $sum) {\n            $smallest = $sum;\n        }\n \
    \       if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return $smallest;\n\
    }\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1,\
    \ -2, -3]) . \"\\n\";", "  $min = PHP_INT_MAX;\n  $currentMin = 0;\n  foreach\
    \ ($nums as $num) {\n    $currentMin += $num;\n    $min = min($min, $currentMin);\n\
    \    $currentMin = max(0, $currentMin);\n  }\n  return $min;\n}", "  if (empty($nums))\
    \ {\n    return 0;\n  }\n  $minSum = PHP_INT_MAX;\n  $currentSum = 0;\n  foreach\
    \ ($nums as $num) {\n    $currentSum += $num;\n    $minSum = min($minSum, $currentSum);\n\
    \    $currentSum = max($currentSum, 0);\n  }\n  return $minSum;\n}\n\nvar_dump(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4])); // 1\nvar_dump(minSubArraySum([-1, -2, -3])); // -6", "  \
    \  $currentSum = 0;\n    $minSum = INF;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $currentSum += $nums[$i];\n        $minSum = min($minSum, $currentSum);\n\
    \        if ($currentSum > 0) {\n            $currentSum = 0;\n        }\n   \
    \ }\n    return $minSum;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\
    \ // 1\necho minSubArraySum([-1, -2, -3]) . PHP_EOL; // -6", "  if (empty($nums))\
    \ {\n    return 0;\n  }\n  $res = $nums[0];\n  $sum = 0;\n  for ($i = 0; $i <\
    \ count($nums); $i++) {\n    $sum += $nums[$i];\n    $res = min($res, $sum);\n\
    \    if ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return $res;\n}\n", "   \
    \ $p1 = 0;\n    $p2 = count($nums) - 1;\n    $min = PHP_INT_MAX;\n    while ($p1\
    \ < $p2) {\n        $sum = $nums[$p1] + $nums[$p2];\n        if ($sum < $min)\
    \ {\n            $min = $sum;\n        }\n        $p1++;\n        $p2--;\n   \
    \ }\n    return $min;\n}\n$input = [2, 3, 4, 1, 2, 4];\nvar_dump(minSubArraySum($input));\n\
    echo PHP_EOL;\n", "    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i <\
    \ count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min)\
    \ {\n            $min = $sum;\n        }\n        if ($sum > 0) {\n          \
    \  $sum = 0;\n        }\n    }\n    return $min;\n}\n$nums = [2, 3, 4, 1, 2, 4];\n\
    echo minSubArraySum($nums) . PHP_EOL;\n$nums = [-1, -2, -3];\necho minSubArraySum($nums)\
    \ . PHP_EOL;", "\t$minSum = PHP_INT_MAX;\n\t$currSum = 0;\n\t$start = 0;\n\tfor\
    \ ($i = 0; $i < count($nums); $i++) {\n\t\t$currSum += $nums[$i];\n\t\twhile ($currSum\
    \ >= $minSum) {\n\t\t\t$minSum = min($minSum, $currSum);\n\t\t\t$currSum -= $nums[$start];\n\
    \t\t\t$start++;\n\t\t}\n\t}\n\treturn $minSum;\n}\necho minSubArraySum([2, 3,\
    \ 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";", "  \
    \  if (count($nums) === 0) {\n        return 0;\n    }\n    $windowSum = 0;\n\
    \    $windowStart = 0;\n    $minSum = PHP_INT_MAX;\n    for ($windowEnd = 0; $windowEnd\
    \ < count($nums); $windowEnd++) {\n        $windowSum += $nums[$windowEnd];\n\
    \        while ($windowSum >= $minSum) {\n            $minSum = min($minSum, $windowSum);\n\
    \            $windowSum -= $nums[$windowStart];\n            $windowStart++;\n\
    \        }\n    }\n    return $minSum;\n}\n\n$nums = [2, 3, 4, 1, 2, 4];\n$result\
    \ = minSubArraySum($nums);\necho \"The minimum sum of any non-empty sub-array\
    \ of [2, 3, 4, 1, 2, 4] is \" . $result . \"\\n\";\n\n$nums = [-1, -2, -3];\n\
    $result = minSubArraySum($nums);\necho \"The minimum sum of any non-empty sub-array\
    \ of [-1, -2, -3] is \" . $result . \"\\n\";", "    $min = PHP_INT_MAX;\n    $n\
    \ = count($nums);\n    for ($start = 0; $start < $n; $start++) {\n        $sum\
    \ = 0;\n        for ($end = $start; $end < $n; $end++) {\n            $sum +=\
    \ $nums[$end];\n            $min = min($min, $sum);\n        }\n    }\n    return\
    \ $min;\n}\n", "    $n = count($nums);\n    $minSum = $nums[0];\n    $runningSum\
    \ = $nums[0];\n    for ($i = 1; $i < $n; $i++) {\n        $runningSum = min($runningSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $runningSum);\n   \
    \ }\n    return $minSum;\n}\n", "    if (empty($nums)) {\n        return 0;\n\
    \    }\n    $sum = $nums[0];\n    $leftIndex = 0;\n    $rightIndex = 0;\n    while\
    \ ($rightIndex < count($nums)) {\n        $sum += $nums[$rightIndex];\n      \
    \  if ($sum < 0) {\n            $leftIndex = $rightIndex + 1;\n            $sum\
    \ = 0;\n        }\n        $rightIndex++;\n    }\n    return $sum;\n}\n", "  \
    \  $sum = $nums[0];\n    $min = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum = $sum + $nums[$i];\n        if ($sum < $min) {\n    \
    \        $min = $sum;\n        }\n    }\n    return $min;\n}\n", "    $min = $cur\
    \ = 0;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum\
    \ += $nums[$i];\n        if ($sum < $min) {\n            $min = $sum;\n      \
    \  }\n        if ($sum > $cur) {\n            $cur = $sum;\n        }\n    }\n\
    \    return $cur - $min;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\"\
    ; // 1\necho minSubArraySum([-1, -2, -3]) . \"\\n\"; // -6", "    $minSum = $nums[0];\n\
    \    $currentSum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n  \
    \      $currentSum = min($currentSum + $nums[$i], $nums[$i]);\n        $minSum\
    \ = min($minSum, $currentSum);\n    }\n    return $minSum;\n}\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;", " \
    \   $result = null;\n    $numsLength = count($nums);\n    $arrayOfSubArrays =\
    \ generateArrayOfSubArrays($nums, $numsLength);\n    foreach ($arrayOfSubArrays\
    \ as $subArray) {\n        $sum = array_sum($subArray);\n        if ($result ==\
    \ null || $sum < $result) {\n            $result = $sum;\n        }\n    }\n \
    \   return $result;\n}\n", "    if (count($nums) == 0) {\n        return 0;\n\
    \    }\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$input = [2, 3, 4, 1,\
    \ 2, 4];\n$output = minSubArraySum($input);\necho $output;", "    $min = PHP_INT_MAX;\n\
    \    $sum = 0;\n    $start = 0;\n    $end = 0;\n    while ($end < count($nums))\
    \ {\n        $sum += $nums[$end];\n        while ($sum > 0) {\n            $min\
    \ = min($min, $sum);\n            $sum -= $nums[$start];\n            $start++;\n\
    \        }\n        $end++;\n    }\n    return $min;\n}\n\n$nums = [2, 3, 4, 1,\
    \ 2, 4];\nvar_dump(minSubArraySum($nums));\n$nums = [-1, -2, -3];\nvar_dump(minSubArraySum($nums));",
  "    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n            $min\
    \ = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n       \
    \ }\n    }\n    return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]) ==\
    \ 1 ? \"pass\\n\" : \"fail\\n\";\necho minSubArraySum([-1, -2, -3]) == -6 ? \"\
    pass\\n\" : \"fail\\n\";", "    $total = 0;\n    $min = null;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        for ($j = $i; $j < count($nums); $j++) {\n\
    \            $total += $nums[$j];\n            if ($min === null || $total < $min)\
    \ {\n                $min = $total;\n            }\n        }\n        $total\
    \ = 0;\n    }\n    return $min;\n}\necho(minSubArraySum([2, 3, 4, 1, 2, 4]) .\
    \ \"\\n\");\necho(minSubArraySum([-1, -2, -3]) . \"\\n\");", "    $minSum = $nums[0];\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        if ($sum < $minSum) {\n            $minSum = $sum;\n        }\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n", "    $current_sum = $nums[0];\n    $min_sum = $nums[0];\n    for ($i = 1;\
    \ $i < count($nums); $i++) {\n        $current_sum = max($nums[$i], $current_sum\
    \ + $nums[$i]);\n        $min_sum = min($min_sum, $current_sum);\n    }\n    return\
    \ $min_sum;\n}\n", "    $prevSum = 0;\n    $minSum = PHP_INT_MAX;\n    foreach\
    \ ($nums as $num) {\n        $prevSum = min($prevSum + $num, $num);\n        $minSum\
    \ = min($minSum, $prevSum);\n    }\n    return $minSum;\n}\n", "  $total = 0;\n\
    \  $min = PHP_INT_MAX;\n  for ($i = 0; $i < count($nums); $i++) {\n    $total\
    \ += $nums[$i];\n    $min = min($min, $total);\n    if ($total > 0) {\n      $total\
    \ = 0;\n    }\n  }\n  return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]).\"\
    \\n\";\necho minSubArraySum([-1, -2, -3]).\"\\n\";", "  $min = null;\n  $sum =\
    \ 0;\n  for ($i = 0; $i < count($nums); $i++) {\n    $sum += $nums[$i];\n    if\
    \ ($sum < $min || $min === null) {\n      $min = $sum;\n    }\n    for ($j = $i\
    \ + 1; $j < count($nums); $j++) {\n      $sum += $nums[$j];\n      if ($sum <\
    \ $min) {\n        $min = $sum;\n      }\n    }\n    $sum = 0;\n  }\n  return\
    \ $min;\n}\n\nminSubArraySum([2, 3, 4, 1, 2, 4]); // 1\nminSubArraySum([-1, -2,\
    \ -3]); // -6", "    $min_sum = PHP_INT_MAX;\n    $running_sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $running_sum += $nums[$i];\n      \
    \  if ($running_sum < $min_sum) {\n            $min_sum = $running_sum;\n    \
    \    }\n        if ($running_sum > 0) {\n            $running_sum = 0;\n     \
    \   }\n    }\n    return $min_sum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";", "    $sum = 0;\n\
    \    $minSum = INF;\n    $start = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        while ($sum >= $minSum) {\n         \
    \   $minSum = min($minSum, $sum);\n            $sum -= $nums[$start];\n      \
    \      $start++;\n        }\n    }\n    return $minSum;\n}\n", "    $min = PHP_INT_MAX;\n\
    \    $last = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $last =\
    \ $last + $nums[$i];\n        if ($last < $min) {\n            $min = $last;\n\
    \        }\n        if ($last > 0) {\n            $last = 0;\n        }\n    }\n\
    \    return $min;\n}\n", "    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n", "   \
    \ $sum = 0;\n    $min = null;\n    for ($i = 0; $i < count($nums); $i++) {\n \
    \       $sum += $nums[$i];\n        if ($i > 0) {\n            $sum = min($sum,\
    \ $nums[$i]);\n        }\n        if ($min === null || $sum < $min) {\n      \
    \      $min = $sum;\n        }\n    }\n    return $min;\n}\n", "    if (sizeof($nums)\
    \ === 0) {\n        return 0;\n    }\n    $sum = 0;\n    $minSum = INF;\n    for\
    \ ($i = 0; $i < sizeof($nums); $i++) {\n        $sum += $nums[$i];\n        $minSum\
    \ = min($minSum, $sum);\n        if ($sum < 0) {\n            $sum = 0;\n    \
    \    }\n    }\n    return $minSum;\n}", "    $min = $nums[0];\n    $sum = 0;\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n   \
    \     if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n", "\t\
    $minSum = INF;\n\t$currentSum = 0;\n\t$minStartIndex = 0;\n\t$minEndIndex = 0;\n\
    \tfor ($i = 0; $i < count($nums); $i++) {\n\t\t$currentSum += $nums[$i];\n\t\t\
    if ($currentSum < $minSum) {\n\t\t\t$minSum = $currentSum;\n\t\t\t$minStartIndex\
    \ = $i;\n\t\t\t$minEndIndex = $i;\n\t\t}\n\t\tif ($currentSum > 0) {\n\t\t\t$currentSum\
    \ = 0;\n\t\t}\n\t}\n\treturn $minSum;\n}\n", "  $min_sum = PHP_INT_MAX;\n  $curr_sum\
    \ = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n    $curr_sum += $nums[$i];\n\
    \    if ($curr_sum < $min_sum) {\n      $min_sum = $curr_sum;\n    }\n    if ($curr_sum\
    \ > 0) {\n      $curr_sum = 0;\n    }\n  }\n  return $min_sum;\n}\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;", " \
    \   $result = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        $result = min($result, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $result;\n\
    }\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1,\
    \ -2, -3]) . \"\\n\";", "    $minSum = 0;\n    $currentSum = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $currentSum += $nums[$i];\n        if\
    \ ($currentSum < $minSum) {\n            $minSum = $currentSum;\n        }\n \
    \   }\n    return $minSum;\n}\n", "    $sum = 0;\n    $min = PHP_INT_MAX;\n  \
    \  for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n     \
    \   $min = min($min, $sum);\n        if ($sum > 0) $sum = 0;\n    }\n    return\
    \ $min;\n}\nprint_r(minSubArraySum([2, 3, 4, 1, 2, 4]));\necho PHP_EOL;\nprint_r(minSubArraySum([-1,\
    \ -2, -3]));\necho PHP_EOL;", "    $size = count($nums);\n    $sum = 0;\n    $min\
    \ = INF;\n    for ($i = 0; $i < $size; $i++) {\n        if ($sum < 0) {\n    \
    \        $sum = $nums[$i];\n        } else {\n            $sum += $nums[$i];\n\
    \        }\n        $min = min($min, $sum);\n    }\n    return $min;\n}\n\nprint_r(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\nprint_r(minSubArraySum([-1, -2, -3]));", "  $minSum = array_sum($nums);\n\
    \  $currentSum = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n    for ($j =\
    \ $i; $j < count($nums); $j++) {\n      $currentSum += $nums[$j];\n      if ($currentSum\
    \ < $minSum) {\n        $minSum = $currentSum;\n      }\n    }\n    $currentSum\
    \ = 0;\n  }\n  return $minSum;\n}", "    $minSum = PHP_INT_MAX;\n    $currentSum\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $currentSum += $nums[$i];\n\
    \        if ($currentSum < $minSum) {\n            $minSum = $currentSum;\n  \
    \      }\n        if ($currentSum > 0) {\n            $currentSum = 0;\n     \
    \   }\n    }\n    return $minSum;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ . \"\\n\"; // 1\necho minSubArraySum([-1, -2, -3]) . \"\\n\"; // -6", "  if\
    \ (count($nums) === 0) return 0;\n  $minSum = $nums[0];\n  $currentSum = $nums[0];\n\
    \  for ($i = 1; $i < count($nums); $i++) {\n    $currentSum = max($nums[$i], $currentSum\
    \ + $nums[$i]);\n    $minSum = min($minSum, $currentSum);\n  }\n  return $minSum;\n\
    }\n", "    $sum = 0;\n    $min = array_sum($nums);\n    $start = 0;\n    $end\
    \ = 0;\n    while($end < count($nums)) {\n        $sum += $nums[$end];\n     \
    \   if($sum < $min) {\n            $min = $sum;\n        }\n        if($sum >\
    \ 0) {\n            $sum = 0;\n            $start = $end + 1;\n        }\n   \
    \     $end++;\n    }\n    return $min;\n}\necho minSubArraySum([-1, -2, -3]);",
  "    $min = PHP_INT_MAX;\n    $current = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $current += $nums[$i];\n        $min = min($min, $current);\n\
    \        if ($current > 0) {\n            $current = 0;\n        }\n    }\n  \
    \  return $min;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]);", "    $min = null;\n\
    \    $window = [];\n    $i = 0;\n    foreach ($nums as $num) {\n        $window[]\
    \ = $num;\n        if (count($window) > 1) {\n            $window[$i] += $window[$i\
    \ - 1];\n        }\n        if ($min === null || $window[$i] < $min) {\n     \
    \       $min = $window[$i];\n        }\n        $i++;\n    }\n    return $min;\n\
    }\n", "    if(!$nums) {\n        return 0;\n    }\n    $min = $nums[0];\n    $result\
    \ = $nums[0];\n    for($i = 1; $i < count($nums); $i++) {\n        $min = min($min\
    \ + $nums[$i], $nums[$i]);\n        $result = min($result, $min);\n    }\n   \
    \ return $result;\n}\n\n$test = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($test);",
  "    $min = $sum = 0;\n    $start = 0;\n    $end = 0;\n    $length = count($nums);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n            $start = $i;\n      \
    \      $end = $i;\n        }\n    }\n    for ($i = 0; $i < $length; $i++) {\n\
    \        for ($j = $i + 1; $j < $length; $j++) {\n            $sum = 0;\n    \
    \        for ($k = $i; $k <= $j; $k++) {\n                $sum += $nums[$k];\n\
    \            }\n            if ($sum < $min) {\n                $min = $sum;\n\
    \                $start = $i;\n                $end = $j;\n            }\n   \
    \     }\n    }\n    echo \"The min sum is $min, the range is ($start, $end)\\\
    n\";\n}\n", "    $minSoFar = INF;\n    $minEndingHere = 0;\n    for ($i = 0; $i\
    \ < count($nums); $i++) {\n        $minEndingHere = min($minEndingHere + $nums[$i],\
    \ $nums[$i]);\n        $minSoFar = min($minSoFar, $minEndingHere);\n    }\n  \
    \  return $minSoFar;\n}\n", "    $minSum = INF;\n    $left = 0;\n    $right =\
    \ 0;\n    $sum = 0;\n    while ($right < count($nums)) {\n        $sum += $nums[$right];\n\
    \        while ($sum >= 0) {\n            $minSum = min($minSum, $sum);\n    \
    \        $sum -= $nums[$left];\n            $left++;\n        }\n        $right++;\n\
    \    }\n    return $minSum;\n}\n", "    $min = INF;\n    $curr = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $curr += $nums[$i];\n        $min =\
    \ min($min, $curr);\n        if ($curr > 0) {\n            $curr = 0;\n      \
    \  }\n    }\n    return $min;\n}\n\n$nums = [2, 3, 4, 1, 2, 4];\necho \"minSubArraySum($nums)\
    \ = \" . minSubArraySum($nums) . PHP_EOL;\n\n$nums = [-1, -2, -3];\necho \"minSubArraySum($nums)\
    \ = \" . minSubArraySum($nums) . PHP_EOL;", "    $length = count($nums);\n   \
    \ if($length == 0) {\n        return 0;\n    }\n    $min = PHP_INT_MAX;\n    $sum\
    \ = 0;\n    for($i = 0; $i < $length; $i++) {\n        $sum += $nums[$i];\n  \
    \      if($sum < $min) {\n            $min = $sum;\n        }\n        if($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\n$nums\
    \ = [-1, -2, -3];\necho minSubArraySum($nums);", "\t$min = INF;\n\t$runningSum\
    \ = 0;\n\t$i = 0;\n\t$j = 0;\n\t$size = count($nums);\n\twhile ($j < $size) {\n\
    \t\t$runningSum += $nums[$j];\n\t\twhile ($runningSum >= $min) {\n\t\t\t$min =\
    \ $runningSum;\n\t\t\t$runningSum -= $nums[$i];\n\t\t\t$i++;\n\t\t}\n\t\t$j++;\n\
    \t}\n\treturn $min;\n}\n", "    $min = null;\n    $sum = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min\
    \ || $min === null) {\n            $min = $sum;\n        }\n        for ($j =\
    \ $i - 1; $j >= 0; $j--) {\n            $sum -= $nums[$j];\n            if ($sum\
    \ < $min) {\n                $min = $sum;\n            }\n        }\n        $sum\
    \ = 0;\n    }\n    return $min;\n}\necho \"minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ == 1 ---> \" . (minSubArraySum([2, 3, 4, 1, 2, 4]) == 1 ? 'success' : 'fail')\
    \ . \"\\n\";\necho \"minSubArraySum([-1, -2, -3]) == -6 ---> \" . (minSubArraySum([-1,\
    \ -2, -3]) == -6 ? 'success' : 'fail') . \"\\n\";", "\t$min = INF;\n\t$sum = 0;\n\
    \t$i = 0;\n\t$j = 0;\n\twhile ($j < count($nums)) {\n\t\t$sum += $nums[$j];\n\t\
    \tif ($sum < $min) {\n\t\t\t$min = $sum;\n\t\t}\n\t\tif ($sum >= 0) {\n\t\t\t\
    $sum = 0;\n\t\t\t$i = $j + 1;\n\t\t}\n\t\t$j++;\n\t}\n\treturn $min;\n}\n$nums\
    \ = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums) . PHP_EOL;", "    if (count($nums)\
    \ === 0) {\n        return 0;\n    }\n    $current = 0;\n    $min = PHP_INT_MAX;\n\
    \    foreach ($nums as $n) {\n        $current += $n;\n        $min = min($min,\
    \ $current);\n        $current = max($current, 0);\n    }\n    return $min;\n\
    }\necho minSubArraySum([2, 3, 4, 1, 2, 4]);\necho \"\\n\";\necho minSubArraySum([-1,\
    \ -2, -3]);\necho \"\\n\";\necho minSubArraySum([0, 0, 0]);\necho \"\\n\";\necho\
    \ minSubArraySum([-3, 2, 3, -2, 3, -1]);\necho \"\\n\";\necho minSubArraySum([0,\
    \ 0, -1, 0]);\necho \"\\n\";\necho minSubArraySum([0, 0, 0, 0]);\necho \"\\n\"\
    ;\necho minSubArraySum([-1, 0, 0, 0]);\necho \"\\n\";\necho minSubArraySum([0,\
    \ -1, 0, 0]);\necho \"\\n\";\necho minSubArraySum([0, 0, -1, 0]);\necho \"\\n\"\
    ;\necho minSubArraySum([0, 0, 0, -1]);\necho \"\\n\";\necho minSubArraySum([-1,\
    \ 0, 0, 0]);\necho \"\\n\";\necho minSubArraySum([0, -1, 0, 0]);\necho \"\\n\"\
    ;\necho minSubArraySum([0, 0, -1, 0]);\necho \"\\n\";\necho minSubArraySum([0,\
    \ 0, 0, -1]);\necho \"\\n\";\necho minSubArraySum([-1, 0, 0, 0]);\necho \"\\n\"\
    ;\necho minSubArraySum([0, -1, 0, 0]);\necho \"\\n\";\necho minSubArraySum([0,\
    \ 0, -1, 0]);\necho \"\\n\";\necho minSubArraySum([0, 0, 0, -1]);\necho \"\\n\"\
    ;\necho minSubArraySum([-1, 0, 0, 0]);\necho \"\\n\";\necho minSubArraySum([0,\
    \ -1, 0, 0", "    $min = $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum = min($nums[$i], $sum + $nums[$i]);\n        $min = min($min,\
    \ $sum);\n    }\n    return $min;\n}\nprint_r(minSubArraySum([2, 3, 4, 1, 2, 4]));",
  "    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n            $minSum\
    \ = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n       \
    \ }\n    }\n    return $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) .\
    \ PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;", "\tif (empty($nums))\
    \ return 0;\n\t$currentSum = $minSum = 0;\n\tfor ($i = 0; $i < count($nums); $i++)\
    \ {\n\t\t$currentSum += $nums[$i];\n\t\tif ($currentSum < $minSum) {\n\t\t\t$minSum\
    \ = $currentSum;\n\t\t}\n\t\tif ($currentSum > 0) {\n\t\t\t$currentSum = 0;\n\t\
    \t}\n\t}\n\treturn $minSum;\n}\n\nvar_dump(minSubArraySum([2, 3, 4, 1, 2, 4]));\n\
    var_dump(minSubArraySum([-1, -2, -3]));", "    $min = INF;\n    $sum = 0;\n  \
    \  $start = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1,\
    \ -2, -3]) . PHP_EOL;", "\t$sum = $nums[0];\n\t$start = 0;\n\t$min = INF;\n\t\
    for ($i = 1; $i < count($nums); $i++) {\n\t\t$sum += $nums[$i];\n\t\tif ($sum\
    \ < $min) {\n\t\t\t$min = $sum;\n\t\t}\n\t\tif ($sum - $nums[$start] > $min) {\n\
    \t\t\t$sum -= $nums[$start];\n\t\t\t$start++;\n\t\t}\n\t}\n\treturn $min;\n}\n\
    \necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1,\
    \ -2, -3]) . PHP_EOL;", "    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n  \
    \  for ($i = 0; $i < count($nums); $i++) {\n        $currentSum += $nums[$i];\n\
    \        if ($currentSum < $minSum) {\n            $minSum = $currentSum;\n  \
    \      }\n        if ($currentSum > 0) {\n            $currentSum = 0;\n     \
    \   }\n    }\n    return $minSum;\n}\n\n$nums = [-1, -2, -3];\necho minSubArraySum($nums);",
  "    $min_sum = $nums[0];\n    $current_sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $current_sum = min($nums[$i], $current_sum + $nums[$i]);\n\
    \        $min_sum = min($min_sum, $current_sum);\n    }\n    return $min_sum;\n\
    }\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]);", "\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

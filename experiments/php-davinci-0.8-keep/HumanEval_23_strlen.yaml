name: HumanEval_23_strlen
language: php
prompt: "<?php\n// Return length of given string\n// >>> strlen('')\n// 0\n// >>>\
  \ strlen('abc')\n// 3\nfunction strlen($string) {\n"
tests: "function candidate(...$args) {\n    return strlen(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"x\") !== 1) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"asdasnakj\") !== 9) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $length = 0;\n    while (isset($string[$length])) {\n        $length++;\n\
    \    }\n    return $length;\n}", "\t$len = 0;\n\tfor ($i = 0; isset($string[$i]);\
    \ $i++) {\n\t\t$len++;\n\t}\n\treturn $len;\n}", "  $count = 0;\n  for ($i = 0;\
    \ isset($string[$i]); $i++) {\n    $count++;\n  }\n  return $count;\n}\n", "\t\
    $count = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\t$count++;\n\t}\n\
    \treturn $count;\n}\n", "  return strlen($string);\n}\n", "    $length = 0;\n\
    \    for (;;) {\n        if ($string[$length] === NULL) {\n            break;\n\
    \        }\n        $length++;\n    }\n    return $length;\n}\n", "    if (strlen($string)\
    \ > 0) {\n        return strlen($string);\n    } else {\n        return 0;\n \
    \   }\n}\n", "    $len = 0;\n    while ($string[$len] != null) {\n        $len++;\n\
    \    }\n    return $len;\n}\n", "    $strlen = 0;\n    for ($i = 0; isset($string[$i]);\
    \ $i++) {\n        $strlen++;\n    }\n    return $strlen;\n}\n", "    return strlen($string);\n\
    }", "\treturn count($string);\n}\n", "  $length = 0;\n  for (;;) {\n    if ($string[$length]\
    \ === '') {\n      return $length;\n    }\n    $length++;\n  }\n}\n", "    return\
    \ \\strlen($string);\n}\n", "    $count = 0;\n    $i = 0;\n    while ($i <= strlen($string))\
    \ {\n        $string[$i];\n        $count += 1;\n        $i += 1;\n    }\n   \
    \ return $count;\n}\n", "\t$count = 0;\n\tfor ($i = 0; $i < count($string); $i++)\
    \ {\n\t\t$count++;\n\t}\n\treturn $count;\n}", "    $string = str_split($string);\n\
    \    $length = 0;\n    foreach ($string as $char) {\n        $length += 1;\n \
    \   }\n    return $length;\n}", "\t$length = 0;\n\twhile (isset($string[$length]))\
    \ {\n\t\t$length++;\n\t}\n\treturn $length;\n}\n", "    return strlen($string);\n\
    }\n", "    $i = 0;\n    $l = 0;\n    while (isset($string[$i])) {\n        $l++;\n\
    \        $i++;\n    }\n    return $l;\n}", "\treturn strlen($string);\n}\n", " \
    \ $length = 0;\n  while ($string[$length] != null) {\n    $length += 1;\n  }\n\
    \  return $length;\n}\n", "    $count = 0;\n    while (isset($string[$count]))\
    \ {\n        $count++;\n    }\n    return $count;\n}\n", "    $length = 0;\n \
    \   for ($i = 0; isset($string[$i]); $i++) {\n        $length++;\n    }\n    return\
    \ $length;\n}\n", "    if ($string === '') {\n        return 0;\n    } else {\n\
    \        return 1 + strlen(substr($string, 1));\n    }\n}\n", "    $length = 0;\n\
    \    for($i = 0; $i < strlen($string); $i++) {\n        $length += 1;\n    }\n\
    \    return $length;\n}", "  $result = 0;\n  for ($i = 0; $i < strlen($string);\
    \ $i++) {\n    $result += 1;\n  }\n  return $result;\n}\n", "    $strlen = 0;\n\
    \    while (isset($string[$strlen])) {\n        $strlen++;\n    }\n    return\
    \ $strlen;\n}\n", "    return count_chars($string);\n}\n", "\t// FIXME\n}", " \
    \ $length = 0;\n  for ($i = 0; $i < strlen($string); $i++) {\n    $length++;\n\
    \  }\n  return $length;\n}", "  $length = 0;\n  while ($string[$length]) {\n \
    \   $length++;\n  }\n  return $length;\n}\n", "    return strlen($string);\n}\n",
  "\treturn count($string);\n}\n", "    return $string;\n}\n", "    $i = 0;\n    while\
    \ (isset($string[$i])) {\n        $i++;\n    }\n    return $i;\n}\n", "    return\
    \ strlen($string);\n}\n", "  $count = 0;\n  while (isset($string[$count])) {\n\
    \    $count++;\n  }\n  return $count;\n}\n", "  return \\array_reduce(\\explode(',',\
    \ $string), function($previous) {\n    return $previous + 1;\n  }, 0);\n}", "\t\
    $count = 0;\n\twhile ($string[$count] != '') {\n\t\t$count++;\n\t}\n\treturn $count;\n\
    }\n", "    $length = 0;\n    for($i = 0; isset($string[$i]); $i++) {\n       \
    \ $length++;\n    }\n    return $length;\n}\n", "  $length = 0;\n  while ($string[$length]\
    \ != '') {\n    $length++;\n  }\n  return $length;\n}\n", "    return strlen($string);\n\
    }\n", "\t$len = 0;\n\twhile($string[$len] != '') {\n\t\t$len += 1;\n\t}\n\treturn\
    \ $len;\n}\n", "\treturn strlen($string);\n}\n", "  $len = 0;\n  for ($i = 0;\
    \ $i < count($string); $i++) {\n    $len++;\n  }\n  return $len;\n}", "  $i =\
    \ 0;\n  while(true) {\n    if(isset($string[$i])) {\n      $i++;\n    } else {\n\
    \      break;\n    }\n  }\n  return $i;\n}\n", "\t$stringLen = 0;\n\t$strArr =\
    \ str_split($string);\n\tforeach ($strArr as $char) {\n\t\t$stringLen += 1;\n\t\
    }\n\treturn $stringLen;\n}\n", "\t$length = 0;\n\tfor ($i = 0; isset($string[$i]);\
    \ $i++)\n\t\t$length++;\n\treturn $length;\n}\n", "    return mb_strlen($string);\n\
    }\n\n$string = 'hello';\necho strlen($string);\n", "\t$length = 0;\n\twhile (is_string($string[$length]))\
    \ {\n\t\t$length++;\n\t}\n\treturn $length;\n}\n", "    if ($string === '') return\
    \ 0;\n    $length = 0;\n    while (true) {\n        if (substr($string, $length,\
    \ 1) === '') break;\n        $length++;\n    }\n    return $length;\n}\n", " \
    \ $length = 0;\n  foreach (str_split($string) as $character) {\n    $length +=\
    \ 1;\n  }\n  return $length;\n}\n", "\tif ($string == '') {\n\t\treturn 0;\n\t\
    }\n\treturn 1 + strlen(substr($string, 1));\n}\n\necho strlen('abc') . PHP_EOL;\n\
    echo strlen('') . PHP_EOL;", "  return 0;\n}\n", "    return strlen($string);\n\
    }\n", "\treturn strlen($string);\n}\n", "    $length = 0;\n    while ($string[$length]\
    \ != NULL) {\n        $length++;\n    }\n    return $length;\n}\n", "    return\
    \ count_chars($string, 3);\n}\n", "    return count_chars($string);\n}\n", " \
    \ $string_len = 0;\n  while ($string[$string_len] != \"\") {\n    $string_len++;\n\
    \  }\n  return $string_len;\n}\n", "    return count(str_split($string));\n}\n",
  "    $length = 0;\n    while ($string[$length] != null) {\n        $length++;\n\
    \    }\n    return $length;\n}\n", "  $i = 0;\n  while ($string[$i] != NULL) {\n\
    \    $i++;\n  }\n  return $i;\n}\n", "    $i = 0;\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $i++;\n    }\n    return $i;\n}\n", "\treturn mb_strlen($string,\
    \ 'UTF-8');\n}\n", "  return 0;\n}\n", "\t$length = 0;\n\t$i = 0;\n\twhile (isset($string[$i]))\
    \ {\n\t\t$length++;\n\t\t$i++;\n\t}\n\treturn $length;\n}\n", "\treturn strlen($string);\n\
    }\n", "    $length = 0;\n    for ($i = 0; isset($string[$i]); $i++) {\n      \
    \  $length++;\n    }\n    return $length;\n}\n", "\treturn strlen($string);\n}",
  "    $count = 0;\n    $count = count($string);\n    return $count;\n}", "\t$count\
    \ = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\t$count++;\n\t}\n\treturn\
    \ $count;\n}\n", "\t// your code here\n\t$count = 0;\n\t$len = strlen($string);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\t$count += 1;\n\t}\n\treturn $count;\n}\n",
  "\tif ($string == '') {\n\t\treturn 0;\n\t} else {\n\t\treturn strlen(substr($string,\
    \ 1)) + 1;\n\t}\n}\n", "    if ($string === '') {\n        return 0;\n    }\n\
    \    $strLen = 1;\n    for ($i = 0; $i < strlen($string) - 1; $i++) {\n      \
    \  $strLen++;\n    }\n    return $strLen;\n}\n", "  return mb_strlen($string);\n\
    }\n", "  return length($string);\n}\n", "  if ($string == '') return 0;\n  return\
    \ 1 + strlen(substr($string, 1));\n}\n", "  $length = 0;\n  while ($string !=\
    \ '') {\n    $string = substr($string, 1);\n    $length = $length + 1;\n  }\n\
    \  return $length;\n}\n", "  $result = 0;\n  while(isset($string[$result])) {\n\
    \    $result++;\n  }\n  return $result;\n}", "    return strlen($string);\n}\n",
  "\treturn strlen($string);\n}\n", "    return strlen($string);\n}\n", "    return\
    \ mb_strlen($string);\n}\n", "\tif ($string === '') {\n\t\treturn 0;\n\t}\n\t\
    return 1 + strlen(substr($string, 1));\n}", "    return strlen($string);\n}\n",
  "  $retval = 0;\n  for ($i = 0; $i < strlen($string); $i++) {\n    $retval++;\n\
    \  }\n  return $retval;\n}\n", "  $i = 0;\n  for (; $string[$i] != ''; $i++) {}\n\
    \  return $i;\n}\n", "    $length = 0;\n    while (isset($string[$length])) {\n\
    \        $length++;\n    }\n    return $length;\n}\n", "    $len = 0;\n    while($string[$len]\
    \ != null) {\n        $len++;\n    }\n    return $len;\n}\n", "    if ($string\
    \ === '') {\n        return 0;\n    }\n    return 1 + strlen(substr($string, 1));\n\
    }\n", "    $length = 0;\n    while (true) {\n        if ($string[$length] ===\
    \ '') {\n            break;\n        } else {\n            $length++;\n      \
    \  }\n    }\n    return $length;\n}\n", "    $length = 0;\n    while($string[$length]\
    \ != '') {\n        $length++;\n    }\n    return $length;\n}\n", "  $string_length\
    \ = 0;\n  foreach ($string as $char) {\n    $string_length += 1;\n  }\n  return\
    \ $string_length;\n}\n\necho strlen('') . \"\\n\";\necho strlen('abc') . \"\\\
    n\";\n", "\tif (!is_string($string)) {\n\t\tthrow new \\Fruitful\\InvalidArgumentException('Argument\
    \ must be a string.');\n\t}\n\treturn mb_strlen($string);\n}\n", "  $len = 0;\n\
    \  for (;;) {\n    $c = $string[$len];\n    if ($c === null) {\n      break;\n\
    \    }\n    $len++;\n  }\n  return $len;\n}\n", "\tif ($string == '') {\n\t\t\
    return 0;\n\t} else {\n\t\treturn 1 + strlen(substr($string, 1));\n\t}\n}\n",
  "  $length = 0;\n  while ($string[$length] != null) {\n    $length++;\n  }\n  return\
    \ $length;\n}\n", "    return strlen($string);\n}\n", "  $count = 0;\n  $length\
    \ = strlen($string);\n  while ($count < $length) {\n    $count = $count + 1;\n\
    \  }\n  return $count;\n}\n", "\t$len = 0;\n\tfor ($i = 0; isset($string[$i]);\
    \ $i++) {\n\t\t$len++;\n\t}\n\treturn $len;\n}\n", "    $strlen = 0;\n    for\
    \ ($i = 0; $i < strlen($string); $i++) {\n        $strlen += 1;\n    }\n    return\
    \ $strlen;\n}\n", "    $i = 0;\n    while ($string[$i] != '') {\n        $i++;\n\
    \    }\n    return $i;\n}\n", "  return strlen($string);\n}\n", "\treturn count($string);\n\
    }\n", "    $i = 0;\n    while (isset($string[$i])) {\n        $i++;\n    }\n \
    \   return $i;\n}\n", "    $counter = 0;\n    while (isset($string[$counter]))\
    \ {\n        $counter++;\n    }\n    return $counter;\n}\n", "  if ($string ==\
    \ '') {\n    return 0;\n  } else {\n    return 1 + strlen(substr($string, 1));\n\
    \  }\n}\n", "\t$length = 0;\n\t$i = 0;\n\twhile ($string[$i] != null) {\n\t\t\
    $length++;\n\t\t$i++;\n\t}\n\treturn $length;\n}\n", "    $length = 0;\n    while\
    \ (isset($string[$length])) {\n        $length++;\n    }\n    return $length;\n\
    }\n", "\treturn strlen($string);\n}\n", "\treturn mb_strlen($string);\n}\n", " \
    \ $i = 0;\n  $len = 0;\n  while ($i < strlen($string)) {\n    if ($string[$i]\
    \ != '') {\n      $len++;\n    }\n    $i++;\n  }\n  return $len;\n}\n", "    if\
    \ ($string == '') {\n        return 0;\n    }\n    return 1 + strlen(substr($string,\
    \ 1));\n}", "  return strlen($string);\n}\n", "    $length = 0;\n    while($string[$length]\
    \ != NULL) {\n        $length++;\n    }\n    return $length;\n}\n", "  return\
    \ mb_strlen($string);\n}\n", "    if ($string === '') {\n        return 0;\n \
    \   }\n    return 1 + strlen(substr($string, 1));\n}\n\necho strlen('abc');\n\
    echo \"\\n\";\n", "    return count(str_split($string));\n}\n", "\t$size = 0;\n\
    \t\n\twhile (isset($string[$size]))\n\t\t$size++;\n\t\n\treturn $size;\n}\n",
  "    $result = 0;\n    $i = 0;\n    while (isset($string[$i])) {\n        $result\
    \ += 1;\n        $i += 1;\n    }\n    return $result;\n}\n", "    $len = 0;\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        $len++;\n    }\n    return\
    \ $len;\n}\n", "  return count(str_split($string));\n}\n", "    $length = 0;\n\
    \    while($string[$length] != null) {\n        $length++;\n    }\n    return\
    \ $length;\n}\n", "    $len = 0;\n    $len = mb_strlen($string, 'UTF-8');\n  \
    \  return $len;\n}\n", "\treturn mb_strlen($string);\n}\n", "  return count($string);\n\
    }", "  $string_chars = str_split($string);\n  $string_length = 0;\n  foreach ($string_chars\
    \ as $char) {\n    $string_length += 1;\n  }\n  return $string_length;\n}\n",
  "    $length = 0;\n    while (isset($string[$length])) {\n        $length += 1;\n\
    \    }\n    return $length;\n}\n", "    return strlen($string);\n}\n", "    $count\
    \ = 0;\n    while (isset($string[$count])) {\n        $count++;\n    }\n    return\
    \ $count;\n}", "\treturn mb_strlen($string);\n}\n", "\treturn strlen($string);\n\
    }\n", "    if (is_int($string)) {\n        return (string) $string;\n    }\n \
    \   if (! is_string($string)) {\n        return $string;\n    }\n    return count(str_split($string));\n\
    }", "    return strlen($string);\n}\n", "\t$length = 0;\n\twhile (isset($string[$length]))\
    \ {\n\t\t$length += 1;\n\t}\n\treturn $length;\n}\n", "  return count_chars($string);\n\
    }\n", "    $strlen = '';\n    for ($i = 0; $i < strlen($string); $i++) {\n   \
    \     $strlen++;\n    }\n    return $strlen;\n}", "    $result = '';\n    for\
    \ ($i = 0; $i < strlen($string); $i++) {\n        $result++;\n    }\n    return\
    \ $result;\n}\n", "\t$length = 0;\n\t$i = 0;\n\twhile (isset($string[$i])) {\n\
    \t\t$length++;\n\t\t$i++;\n\t}\n\treturn $length;\n}\n", "    return count($string);\n\
    }\n", "    $i = 0;\n    while ($string[$i] != '') {\n        $i++;\n    }\n  \
    \  return $i;\n}\n", "\t$count = 0;\n\twhile(isset($string[$count])) {\n\t\t$count\
    \ += 1;\n\t}\n\treturn $count;\n}\n", "    $str_length = strlen($string);\n  \
    \  return $str_length;\n}", "  return count($string);\n}\n", "\treturn $string;\n\
    }\n", "\treturn mb_strlen($string, 'UTF-8');\n}\n", "    return mb_strlen($string);\n\
    }\n", "    return strlen($string);\n}\n", "    if ($string === '') {\n       \
    \ return 0;\n    }\n    return 1 + strlen(substr($string, 1));\n}\n", "  $i =\
    \ 0;\n  while (isset($string[$i])) {\n    $i += 1;\n  }\n  return $i;\n}\n", "\t\
    $length = 0;\n\t\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\t$length++;\n\
    \t}\n\t\n\treturn $length;\n}\n", "  $length = 0;\n  while (isset($string[$length]))\
    \ {\n    $length += 1;\n  }\n  return $length;\n}\n", "  $length = 0;\n  while\
    \ (isset($string[$length])) {\n    $length++;\n  }\n  return $length;\n}\n", " \
    \   $length = 0;\n    for ($i = 0; $i < count($string); $i++) {\n        $length++;\n\
    \    }\n    return $length;\n}\n", "    return mb_strlen($string);\n}\n", "  return\
    \ count_chars($string, 1);\n}\n", "    return strlen($string);\n}\n", "    if\
    \ ($string == '') {\n        return 0;\n    } else {\n        return 1 + strlen(substr($string,\
    \ 1));\n    }\n}\n", "  return $string;\n}\n", "\treturn mb_strlen($string);\n\
    }\n", "    $string_length = 0;\n    $i = 0;\n    while ($string[$i] != null) {\n\
    \        $string_length++;\n        $i++;\n    }\n    return $string_length;\n\
    }", "    $length = 0;\n    while (isset($string[$length])) {\n        $length++;\n\
    \    }\n    return $length;\n}\n", "    return strlen($string);\n}\n", "    $length\
    \ = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        $length++;\n \
    \   }\n    return $length;\n}\n", "  $length = 0;\n  while (isset($string[$length]))\
    \ {\n    $length++;\n  }\n  return $length;\n}\n", "    return call_user_func_array(PRVD_RENAME_PREFIX.\"\
    strlen\", array($string));\n}", "  return strlen($string);\n}\n", "    if ($string\
    \ === '') {\n        return 0;\n    }\n    return 1 + strlen(substr($string, 1));\n\
    }\necho strlen('Hello') . PHP_EOL;", "\t$len = 0;\n\tfor($i = 0; true; $i++) {\n\
    \t\tif(!isset($string[$i])) {\n\t\t\tbreak;\n\t\t}\n\t\t$len++;\n\t}\n\treturn\
    \ $len;\n}\n", "  $res = 0;\n  for ($i = 0; $i < strlen($string); $i++) {\n  \
    \  $res++;\n  }\n  return $res;\n}\n", "    if (is_string($string)) {\n      \
    \  return strlen($string);\n    } else {\n        return false;\n    }\n}\n",
  "\t$length = 0;\n\twhile (isset($string[$length])) {\n\t\t$length++;\n\t}\n\treturn\
    \ $length;\n}", "    $length = 0;\n    $p_str = $string;\n    while (!empty($p_str))\
    \ {\n        $p_str = substr($p_str, 1);\n        $length++;\n    }\n    return\
    \ $length;\n}\n", "  $length = 0;\n  while ($string[$length] != '') {\n    $length++;\n\
    \  }\n  return $length;\n}", "    $length = 0;\n    while ($string{$length} !=\
    \ null) {\n        $length++;\n    }\n    return $length;\n}\n", "  if ($string\
    \ === '') {\n    return 0;\n  }\n  else {\n    return 1 + strlen(substr($string,\
    \ 1));\n  }\n}\n", "\t$stringLen = 0;\n\tfor ($i = 0; $i < strlen($string); $i++)\
    \ {\n\t\t$stringLen++;\n\t}\n\treturn $stringLen;\n}\n", "  return strlen($string);\n\
    }", "  $length = 0;\n  while (isset($string[$length])) {\n    $length++;\n  }\n\
    \  return $length;\n}\n", "    $size = 0;\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $size++;\n    }\n    return $size;\n}", "    $l = 0;\n    while\
    \ (isset($string[$l])) {\n        $l++;\n    }\n    return $l;\n}\n", "  $len\
    \ = 0;\n  while (\n    $string[$len] != NULL // not null\n    || $string[$len]\
    \ != '' // not empty\n  ) {\n    $len++;\n  }\n  return $len;\n}\n", "  $length\
    \ = 0;\n  while ($string[$length] != '') {\n    $length++;\n  }\n  return $length;\n\
    }", "    $counter = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n     \
    \   $counter++;\n    }\n    return $counter;\n}\n", "\t$len = 0;\n\tforeach ($string\
    \ as $char) {\n\t\t$len++;\n\t}\n\treturn $len;\n}\n", "    $strlen = 0;\n   \
    \ while (isset($string[$strlen])) {\n        $strlen++;\n    }\n    return $strlen;\n\
    }\n", "  if (empty($string)) {\n    return 0;\n  } else {\n    return strlen(substr($string,\
    \ 1)) + 1;\n  }\n}\n", "  $length = 0;\n  while ($string[$length]) {\n    $length++;\n\
    \  }\n  return $length;\n}", "  $length = 0;\n  while (isset($string[$length]))\
    \ {\n    $length++;\n  }\n  return $length;\n}\n", "  if ($string == \"\") {\n\
    \    return 0;\n  } else {\n    return 1 + strlen(substr($string, 1));\n  }\n}",
  "    return strlen($string);\n}\n", "  return strlen($string);\n}\n", "    return\
    \ strlen($string);\n}\n", "    return sizeof($string);\n}", "    $length = 0;\n\
    \    while(isset($string[$length])) {\n        $length++;\n    }\n    return $length;\n\
    }\n", "  $len = 0;\n  while ($string[$len] != null) {\n    $len++;\n  }\n  return\
    \ $len;\n}\n", "\t$length = 0;\n\twhile ($string[$length] != '') {\n\t\t$length++;\n\
    \t}\n\treturn $length;\n}\n", "    $len = 0;\n    while (isset($string[$len]))\
    \ {\n        $len++;\n    }\n    return $len;\n}\n", "\treturn mb_strlen($string);\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_46_fib4
language: php
prompt: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
  \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
  // Please write a function to efficiently compute the n-th element of the fib4 number\
  \ sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n// 8\n\
  // >>> fib4(7)\n// 14\nfunction fib4($n) {\n"
tests: "function candidate(...$args) {\n    return fib4(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(12) !== 386) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $f4s = [0, 0, 2, 0];\n    for ($i = 4; $i <= $n; $i++) {\n    \
    \    $f4s[$i%4] = $f4s[($i-1)%4] + $f4s[($i-2)%4] + $f4s[($i-3)%4] + $f4s[($i-4)%4];\n\
    \    }\n    return $f4s[$n%4];\n}\n\necho fib4(10);", "    $fib4 = [0, 0, 2, 0];\n\
    \    if ($n < count($fib4)) {\n        return $fib4[$n];\n    }\n    $fib4_n1\
    \ = 0;\n    $fib4_n2 = 0;\n    $fib4_n3 = 2;\n    $fib4_n4 = 0;\n    $fib4_n =\
    \ 0;\n    for ($i = 4; $i <= $n; $i++) {\n        $fib4_n = $fib4_n1 + $fib4_n2\
    \ + $fib4_n3 + $fib4_n4;\n        $fib4_n1 = $fib4_n2;\n        $fib4_n2 = $fib4_n3;\n\
    \        $fib4_n3 = $fib4_n4;\n        $fib4_n4 = $fib4_n;\n    }\n    return\
    \ $fib4_n;\n}\n\n$test = [5, 6, 7];\n$check = [4, 8, 14];\nfor ($i = 0; $i < count($test);\
    \ $i++) {\n    $input = $test[$i];\n    $output = fib4($input);\n    $expect =\
    \ $check[$i];\n    if ($output == $expect) {\n        echo '$input = ' . $input\
    \ . '; ' . '$output = ' . $output . '; ' . '$expect = ' . $expect . '; PASS' .\
    \ \"\\n\";\n    } else {\n        echo '$input = ' . $input . '; ' . '$output\
    \ = ' . $output . '; ' . '$expect = ' . $expect . '; FAIL' . \"\\n\";\n    }\n\
    }", "    if ($n < 0) {\n        throw new Exception(\"n must be >= 0\");\n   \
    \ }\n    if ($n < 3) {\n        return $n * 2;\n    }\n    $last = 0;\n    $lastlast\
    \ = 0;\n    $lastlastlast = 2;\n    $lastlastlastlast = 2;\n    for ($i = 3; $i\
    \ <= $n; $i++) {\n        $temp = $lastlastlastlast;\n        $lastlastlastlast\
    \ = $lastlastlastlast + $lastlastlast + $lastlast + $last;\n        $lastlastlast\
    \ = $lastlast;\n        $lastlast = $last;\n        $last = $temp;\n    }\n  \
    \  return $lastlastlastlast;\n}\n", "\t$fib = array(0, 0, 2, 0);\n\tfor ($i =\
    \ 4; $i <= $n; $i++) {\n\t\t$fib[$i%4] = $fib[($i-1)%4] + $fib[($i-2)%4] + $fib[($i-3)%4]\
    \ + $fib[($i-4)%4];\n\t}\n\treturn $fib[$n%4];\n}\nprint_r(fib4(5) . \"\\n\");\n\
    print_r(fib4(6) . \"\\n\");\nprint_r(fib4(7) . \"\\n\");", "    $fib = array(0,\
    \ 0, 2, 0);\n    if ($n <= count($fib)) {\n        return $fib[$n];\n    }\n\n\
    \    $newfib = fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n - 4);\n  \
    \  $fib[] = $newfib;\n    return $newfib;\n}\n", "\t// $result = [0, 0, 2, 0];\n\
    \t$result = [0, 0, 1, 0];\n\tif ($n < 4) return $result[$n];\n\tfor ($i = 4; $i\
    \ <= $n; $i++) {\n\t\t$result[] = $result[count($result) - 1] + $result[count($result)\
    \ - 2] + $result[count($result) - 3] + $result[count($result) - 4];\n\t}\n\treturn\
    \ $result[count($result) - 1];\n}\necho fib4(7);\n", "  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $memory = array();\n  $memory[0] = 0;\n  $memory[1]\
    \ = 0;\n  $memory[2] = 2;\n  $memory[3] = 0;\n  for ($i = 4; $i <= $n; $i++) {\n\
    \    $memory[$i] = $memory[$i-1] + $memory[$i-2] + $memory[$i-3] + $memory[$i-4];\n\
    \  }\n  return $memory[$n];\n}", "\tif ($n <= 1) {\n\t\treturn 0;\n\t}\n\tif ($n\
    \ == 2) {\n\t\treturn 2;\n\t}\n\t$fib4s = array(0, 0, 2, 0);\n\tfor ($i = 3; $i\
    \ < $n; $i++) {\n\t\t$fib4s[$i % 4] = $fib4s[($i-1) % 4] + $fib4s[($i-2) % 4]\
    \ + $fib4s[($i-3) % 4] + $fib4s[($i-4) % 4];\n\t}\n\treturn $fib4s[($n-1) % 4];\n\
    }\necho fib4(5).\"\\n\";\necho fib4(6).\"\\n\";\necho fib4(7).\"\\n\";", "   \
    \ $array_n = array($n);\n    if ($n === 0) {\n        return 0;\n    } elseif\
    \ ($n === 1) {\n        return 0;\n    } elseif ($n === 2) {\n        return 2;\n\
    \    } elseif ($n === 3) {\n        return 0;\n    } else {\n        $x = 0;\n\
    \        $y = 0;\n        $z = 2;\n        $w = 0;\n        for ($i = 4; $i <=\
    \ $n; $i++) {\n            $x = $y + $z + $w;\n            $y = $z;\n        \
    \    $z = $w;\n            $w = $x;\n        }\n        return $x;\n    }\n}\n\
    $answer = fib4(5);\necho \"fib4(5) --> {$answer}\\n\";\n$answer = fib4(6);\necho\
    \ \"fib4(6) --> {$answer}\\n\";\n$answer = fib4(7);\necho \"fib4(7) --> {$answer}\\\
    n\";\n", "  $a = 0;\n  $b = 0;\n  $c = 2;\n  $d = 0;\n  for ($i = 3; $i <= $n;\
    \ $i++) {\n    $e = $a + $b + $c + $d;\n    $a = $b;\n    $b = $c;\n    $c = $d;\n\
    \    $d = $e;\n  }\n  return $d;\n}\n\necho fib4(5);\necho PHP_EOL;\necho fib4(6);\n\
    echo PHP_EOL;\necho fib4(7);\necho PHP_EOL;", "    $last = [0, 0, 2, 0];\n   \
    \ for ($i = 4; $i <= $n; $i++) {\n        $curr = $last[0] + $last[1] + $last[2]\
    \ + $last[3];\n        $last[0] = $last[1];\n        $last[1] = $last[2];\n  \
    \      $last[2] = $last[3];\n        $last[3] = $curr;\n    }\n    return $last[3];\n\
    }\n", "    $i = 0;\n    $j = 0;\n    $k = 2;\n    $l = 0;\n    for ($count = 3;\
    \ $count <= $n; $count++) {\n        $m = $i + $j + $k + $l;\n        $i = $j;\n\
    \        $j = $k;\n        $k = $l;\n        $l = $m;\n    }\n    return $m;\n\
    }\n\nfib4(3);", "  $fibs = [0, 0, 2, 0];\n  if ($n < 4) {\n    return $fibs[$n];\n\
    \  }\n\n  for ($i = 4; $i <= $n; $i++) {\n    $fibs[$i % 4] = $fibs[($i - 1) %\
    \ 4] + $fibs[($i - 2) % 4] + $fibs[($i - 3) % 4] + $fibs[($i - 4) % 4];\n  }\n\
    \n  return $fibs[$n % 4];\n}\n", "    if ($n <= 1) {\n        return 0;\n    }\n\
    \    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return\
    \ 0;\n    }\n    $prev4 = 0;\n    $prev3 = 0;\n    $prev2 = 2;\n    $prev1 = 0;\n\
    \    $nth = 1;\n    while ($nth < $n) {\n        $curr = $prev4 + $prev3 + $prev2\
    \ + $prev1;\n        $prev4 = $prev3;\n        $prev3 = $prev2;\n        $prev2\
    \ = $prev1;\n        $prev1 = $curr;\n        $nth++;\n    }\n    return $curr;\n\
    }", "    if ($n == 0) {\n        return 0;\n    } else if ($n == 1) {\n      \
    \  return 0;\n    } else if ($n == 2) {\n        return 2;\n    } else if ($n\
    \ == 3) {\n        return 0;\n    } else {\n        $result = 0;\n        $i =\
    \ 0;\n        $j = 0;\n        $k = 2;\n        $l = 0;\n        for ($m = 4;\
    \ $m <= $n; $m++) {\n            $result = $i + $j + $k + $l;\n            $i\
    \ = $j;\n            $j = $k;\n            $k = $l;\n            $l = $result;\n\
    \        }\n        return $result;\n    }\n}\necho fib4(5) . \"\\n\";\necho fib4(6)\
    \ . \"\\n\";\necho fib4(7) . \"\\n\";", "    if($n == 0) return 0;\n    if($n\
    \ == 1) return 0;\n    if($n == 2) return 2;\n    if($n == 3) return 0;\n    $a\
    \ = 0;\n    $b = 0;\n    $c = 2;\n    $d = 0;\n    for($i = 4; $i <= $n; $i++)\
    \ {\n        $temp = $a + $b + $c + $d;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $d;\n        $d = $temp;\n    }\n    return $d;\n}\nprint_r(fib4(5));\n\
    print_r(fib4(6));\nprint_r(fib4(7));", "    $nums = [0, 0, 2, 0];\n    for ($i\
    \ = 3; $i < $n; $i++) {\n        $nums[$i%4] = $nums[($i-1)%4] + $nums[($i-2)%4]\
    \ + $nums[($i-3)%4] + $nums[($i-4)%4];\n    }\n    return $nums[($n-1)%4];\n}\n\
    \n$nums = [5, 6, 7];\nforeach ($nums as $num) {\n    echo \">>> fib4($num)\\n\"\
    ;\n    echo fib4($num) . \"\\n\";\n}", "    $a = $b = $c = $d = 0;\n    $e = 1;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $temp = $e;\n        $e = $a + $b\
    \ + $c + $d;\n        $d = $c;\n        $c = $b;\n        $b = $a;\n        $a\
    \ = $temp;\n    }\n    return $e;\n}\n", "    // first use the fib3 function to\
    \ define the 4-number sequence\n    $fib4 = array();\n    $fib4[0] = 0;\n    $fib4[1]\
    \ = 0;\n    $fib4[2] = 2;\n    $fib4[3] = 0;\n    for ($i = 4; $i <= $n; $i++)\
    \ {\n        $fib4[$i] = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3] + $fib4[$i-4];\n\
    \    }\n    return $fib4[$n];\n}\n\nfor ($i = 0; $i < 10; $i++) {\n    echo fib4($i)\
    \ . \"\\n\";\n}\n", "\t$fib1 = 0;\n\t$fib2 = 0;\n\t$fib3 = 2;\n\t$fib4 = 0;\n\t\
    $i = 4;\n\tif ($n == 0) {\n\t\treturn 0;\n\t}\n\tif ($n == 1) {\n\t\treturn 0;\n\
    \t}\n\tif ($n == 2) {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 0;\n\t\
    }\n\tif ($n == 4) {\n\t\treturn 2;\n\t}\n\twhile ($i <= $n) {\n\t\t$fib4 = $fib1\
    \ + $fib2 + $fib3 + $fib4;\n\t\t$fib1 = $fib2;\n\t\t$fib2 = $fib3;\n\t\t$fib3\
    \ = $fib4;\n\t\t$i++;\n\t}\n\treturn $fib4;\n}", "\t// Write code here...\n\t\
    // Do not use recursion.\n}\necho fib4(5).\"\\n\"; // Expects 4\necho fib4(6).\"\
    \\n\"; // Expects 8\necho fib4(7).\"\\n\"; // Expects 14", "    if ($n < 0) {\n\
    \        return 0;\n    }\n\n    $f = [0, 0, 2, 0];\n    for ($i = 4; $i <= $n;\
    \ $i++) {\n        $f[$i % 4] = $f[($i - 1) % 4] + $f[($i - 2) % 4] + $f[($i -\
    \ 3) % 4] + $f[($i - 4) % 4];\n    }\n\n    return $f[$n % 4];\n}\n\nvar_dump(fib4(0));\n\
    var_dump(fib4(1));\nvar_dump(fib4(2));\nvar_dump(fib4(3));\nvar_dump(fib4(4));\n\
    var_dump(fib4(5));\nvar_dump(fib4(6));\nvar_dump(fib4(7));\nvar_dump(fib4(8));\n\
    var_dump(fib4(9));\nvar_dump(fib4(10));\nvar_dump(fib4(11));\nvar_dump(fib4(12));\n\
    var_dump(fib4(13));\nvar_dump(fib4(14));\nvar_dump(fib4(15));\nvar_dump(fib4(16));\n\
    var_dump(fib4(17));\nvar_dump(fib4(18));\nvar_dump(fib4(19));\nvar_dump(fib4(20));\n\
    var_dump(fib4(21));\nvar_dump(fib4(22));\nvar_dump(fib4(23));\nvar_dump(fib4(24));\n\
    var_dump(fib4(25));\nvar_dump(fib4(26));\nvar_dump(fib4(27));\nvar_dump(fib4(28));\n\
    var_dump(fib4(29));\nvar_dump(fib4(30));\nvar_dump(fib4(31));\nvar_dump(fib4(32));\n\
    var_dump(fib4(33));\nvar_dump(fib4(34));\nvar_", "    if ($n < 4) {\n        if\
    \ ($n === 2) {\n            return 2;\n        }\n        return 0;\n    }\n \
    \   $fib = [0, 0, 2, 0];\n    $size = count($fib);\n    while ($size < $n) {\n\
    \        $fib[] = $fib[$size - 1] + $fib[$size - 2] + $fib[$size - 3] + $fib[$size\
    \ - 4];\n        $size++;\n    }\n    return $fib[$size - 1];\n}\n", "  $f0 =\
    \ 0;\n  $f1 = 0;\n  $f2 = 2;\n  $f3 = 0;\n  $f4 = 4;\n  if ($n == 0) {\n    return\
    \ $f0;\n  } else if ($n == 1) {\n    return $f1;\n  } else if ($n == 2) {\n  \
    \  return $f2;\n  } else if ($n == 3) {\n    return $f3;\n  } else if ($n == 4)\
    \ {\n    return $f4;\n  } else {\n    $i = 4;\n    while ($i < $n) {\n      $t\
    \ = $f4;\n      $f4 = $f4 + $f3 + $f2 + $f1;\n      $f3 = $f2;\n      $f2 = $f1;\n\
    \      $f1 = $f0;\n      $f0 = $t;\n      $i++;\n    }\n    return $f4;\n  }\n\
    }\n\necho fib4(5) . PHP_EOL;\necho fib4(6) . PHP_EOL;\necho fib4(7) . PHP_EOL;",
  "  $fibs = [0, 0, 2, 0];\n  if ($n <= 3) {\n    return $fibs[$n];\n  }\n  for ($i\
    \ = 4; $i <= $n; $i++) {\n    $fibs[$i % 4] = $fibs[($i - 1) % 4] + $fibs[($i\
    \ - 2) % 4] + $fibs[($i - 3) % 4] + $fibs[($i - 4) % 4];\n  }\n  return $fibs[$n\
    \ % 4];\n}\necho fib4(10) . \"\\n\";\n", "  $fib4 = [0, 0, 2, 0];\n  for ($i =\
    \ 4; $i <= $n; $i++) {\n    $fib4[$i % 4] = $fib4[($i - 1) % 4] + $fib4[($i -\
    \ 2) % 4] + $fib4[($i - 3) % 4] + $fib4[($i - 4) % 4];\n  }\n  return $fib4[$n\
    \ % 4];\n}\n\nprint fib4(5) . \"\\n\";\nprint fib4(6) . \"\\n\";\nprint fib4(7)\
    \ . \"\\n\";", "\t$fib4 = array(0, 0, 2, 0);\n\tif ($n <= 3) {\n\t\treturn $fib4[$n];\n\
    \t}\n\t$num = $fib4[3];\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$fib4[3] = $fib4[2];\n\
    \t\t$fib4[2] = $fib4[1];\n\t\t$fib4[1] = $fib4[0];\n\t\t$fib4[0] = $num;\n\t\t\
    $num = $fib4[0] + $fib4[1] + $fib4[2] + $fib4[3];\n\t}\n\treturn $num;\n}\necho\
    \ fib4(5);", "  $seq = [0, 0, 2, 0];\n  for ($i = 3; $i < $n; $i++) {\n    $seq[$i%4]\
    \ = $seq[($i+1)%4] + $seq[($i+2)%4] + $seq[($i+3)%4];\n  }\n  return $seq[$n%4];\n\
    }\n", "  if($n === 0) {\n    return 0;\n  }\n  $res = [0, 0, 2, 0];\n  for($i\
    \ = 4; $i <= $n; $i++) {\n    $res[$i % 4] = $res[0] + $res[1] + $res[2] + $res[3];\n\
    \  }\n  return $res[$n % 4];\n}", "    $fib4 = [0, 0, 2, 0];\n    for ($i = 3;\
    \ $i < $n; $i++) {\n        $fib4[$i+1] = $fib4[$i] + $fib4[$i-1] + $fib4[$i-2]\
    \ + $fib4[$i-3];\n    }\n    return $fib4[$n];\n}\necho fib4(5).\"\\n\";\necho\
    \ fib4(6).\"\\n\";\necho fib4(7).\"\\n\";", "    $i = 0;\n    $y = 0;\n    $z\
    \ = 0;\n    $x = 0;\n    $w = 0;\n    $fib = [];\n    $fib[0] = 0;\n    $fib[1]\
    \ = 0;\n    $fib[2] = 2;\n    $fib[3] = 0;\n    if ($n == 0) {\n        return\
    \ 0;\n    } elseif ($n == 1) {\n        return 0;\n    } elseif ($n == 2) {\n\
    \        return 2;\n    } elseif ($n == 3) {\n        return 0;\n    } else {\n\
    \        for ($i = 4; $i <= $n; $i++) {\n            $y = $fib[$i - 1];\n    \
    \        $z = $fib[$i - 2];\n            $x = $fib[$i - 3];\n            $w =\
    \ $fib[$i - 4];\n            $fib[$i] = $y + $z + $x + $w;\n        }\n      \
    \  return $fib[$n];\n    }\n}", "    $fib = array(0, 0, 2, 0);\n    for ($i =\
    \ 4; $i <= $n; $i++) {\n        $fib[$i % 4] = $fib[($i - 1) % 4] + $fib[($i -\
    \ 2) % 4] + $fib[($i - 3) % 4] + $fib[($i - 4) % 4];\n    }\n    return $fib[$n\
    \ % 4];\n}\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\
    \\n\";", "\tif ($n <= 0) {\n\t\treturn 0;\n\t}\n\tif ($n == 1) {\n\t\treturn 0;\n\
    \t}\n\tif ($n == 2) {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 0;\n\t\
    }\n\t$f[0] = 0;\n\t$f[1] = 0;\n\t$f[2] = 2;\n\t$f[3] = 0;\n\tfor ($i = 4; $i <=\
    \ $n; $i++) {\n\t\t$f[$i] = $f[$i-1] + $f[$i-2] + $f[$i-3] + $f[$i-4];\n\t}\n\t\
    return $f[$n];\n}\n\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7)\
    \ . \"\\n\";\n", "\t$a = $b = $c = $d = 0;\n\t$e = 1;\n\tif ($n == 0) return $a;\n\
    \telse if ($n == 1) return $b;\n\telse if ($n == 2) return $c;\n\telse if ($n\
    \ == 3) return $d;\n\telse if ($n == 4) return $e;\n\telse {\n\t\tfor ($i = 5;\
    \ $i <= $n; $i++) {\n\t\t\t$f = $a + $b + $c + $d + $e;\n\t\t\t$a = $b;\n\t\t\t\
    $b = $c;\n\t\t\t$c = $d;\n\t\t\t$d = $e;\n\t\t\t$e = $f;\n\t\t}\n\t\treturn $f;\n\
    \t}\n}\n\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\\
    n\";", "  $cache = array(0, 0, 2, 0);\n  while (count($cache) <= $n) {\n    $cache[]\
    \ = $cache[count($cache)-1] + $cache[count($cache)-2] + $cache[count($cache)-3]\
    \ + $cache[count($cache)-4];\n  }\n  return $cache[$n];\n}\necho fib4(6);\necho\
    \ \"\\n\";\necho fib4(7);\necho \"\\n\";\necho fib4(8);\necho \"\\n\";\necho fib4(9);\n\
    echo \"\\n\";\necho fib4(10);\necho \"\\n\";\necho fib4(11);\necho \"\\n\";\n\
    echo fib4(12);\necho \"\\n\";\necho fib4(13);\necho \"\\n\";\necho fib4(14);\n\
    echo \"\\n\";\necho fib4(15);\necho \"\\n\";\necho fib4(16);\necho \"\\n\";\n\
    echo fib4(17);\necho \"\\n\";\necho fib4(18);\necho \"\\n\";\necho fib4(19);\n\
    echo \"\\n\";\necho fib4(20);\necho \"\\n\";\necho fib4(21);\necho \"\\n\";\n\
    echo fib4(22);\necho \"\\n\";\necho fib4(23);\necho \"\\n\";\necho fib4(24);\n\
    echo \"\\n\";\necho fib4(25);\necho \"\\n\";\necho fib4(26);\necho \"\\n\";\n\
    echo fib4(27);\necho \"\\n\";\necho fib4(28);\necho \"\\n\";\necho fib4(29);\n\
    echo \"\\n\";\necho fib4(30);\necho \"\\n\";\necho fib4(31);\necho \"\\n\";\n\
    echo fib4(32);\necho \"\\n\";\necho fib4(33);\necho \"\\n\";\necho fib4(34);\n\
    echo \"\\n\";\necho fib4(35);\necho \"\\n\";\necho fib4(36);\necho \"\\n\";\n\
    echo fib4(37);\necho \"\\n\";\necho fib4(38);\necho \"\\n\";\necho fib4(39);\n\
    echo \"\\n\";\necho fib4(40);\necho \"\\n\";\necho fib4(", "    // your code here\n\
    }\n", "  // get the first four terms\n  $fibs = [0, 0, 2, 0];\n  if ($n < 4) {\n\
    \    return $fibs[$n];\n  }\n  for ($i = 4; $i <= $n; $i++) {\n    $fibs[$i] =\
    \ $fibs[$i - 1] + $fibs[$i - 2] + $fibs[$i - 3] + $fibs[$i - 4];\n  }\n  return\
    \ $fibs[$n];\n}\n\necho fib4(5);\necho \"\\n\";\necho fib4(6);\necho \"\\n\";\n\
    echo fib4(7);\necho \"\\n\";", "    $prev1 = 0;\n    $prev2 = 0;\n    $prev3 =\
    \ 2;\n    $prev4 = 0;\n    if ($n == 0) {\n        return $prev1;\n    }\n   \
    \ if ($n == 1) {\n        return $prev2;\n    }\n    if ($n == 2) {\n        return\
    \ $prev3;\n    }\n    if ($n == 3) {\n        return $prev4;\n    }\n    for ($i\
    \ = 4; $i <= $n; $i++) {\n        $current = $prev1 + $prev2 + $prev3 + $prev4;\n\
    \        $prev1 = $prev2;\n        $prev2 = $prev3;\n        $prev3 = $prev4;\n\
    \        $prev4 = $current;\n    }\n    return $current;\n}\n\necho fib4(5) .\
    \ \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "  $fib = array(0,\
    \ 0, 2, 0);\n  if ($n < 4) {\n    return $fib[$n];\n  }\n  for ($i = 4; $i <=\
    \ $n; $i++) {\n    $fib[$i % 4] = $fib[($i - 1) % 4] + $fib[($i - 2) % 4] + $fib[($i\
    \ - 3) % 4] + $fib[($i - 4) % 4];\n  }\n  return $fib[$n % 4];\n}\necho fib4(5)\
    \ . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "    //base cases\n\
    \    if ($n == 0 || $n == 1 || $n == 3) {\n        return 0;\n    } else if ($n\
    \ == 2) {\n        return 2;\n    }\n\n    //keeping track of the previous 4 numbers\n\
    \    $fourAgo = 0;\n    $threeAgo = 0;\n    $twoAgo = 2;\n    $oneAgo = 0;\n \
    \   $current = 0;\n\n    //loop to calculate the next number\n    for ($i = 3;\
    \ $i < $n; $i++) {\n        $current = $fourAgo + $threeAgo + $twoAgo + $oneAgo;\n\
    \        $fourAgo = $threeAgo;\n        $threeAgo = $twoAgo;\n        $twoAgo\
    \ = $oneAgo;\n        $oneAgo = $current;\n    }\n\n    return $current;\n}\n",
  "\t$fib4 = [0, 0, 2, 0];\n\t\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$fib4[$i] =\
    \ $fib4[$i - 1] + $fib4[$i - 2] + $fib4[$i - 3] + $fib4[$i - 4];\n\t}\n\t\n\t\
    return $fib4[$n];\n}\n\necho fib4(5);\necho PHP_EOL;\necho fib4(6);\necho PHP_EOL;\n\
    echo fib4(7);\necho PHP_EOL;", "    if ($n < 2) {\n        return 0;\n    }\n\
    \    if ($n === 2) {\n        return 2;\n    }\n    $fib[0] = 0;\n    $fib[1]\
    \ = 0;\n    $fib[2] = 2;\n    $fib[3] = 0;\n    for ($i = 4; $i <= $n; $i++) {\n\
    \        $fib[$i] = $fib[$i - 1] + $fib[$i - 2] + $fib[$i - 3] + $fib[$i - 4];\n\
    \    }\n    return $fib[$n];\n}\n\necho fib4(1) . \"\\n\";\necho fib4(2) . \"\\\
    n\";\necho fib4(3) . \"\\n\";\necho fib4(4) . \"\\n\";\necho fib4(5) . \"\\n\"\
    ;\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";\necho fib4(8) . \"\\n\";\n\
    echo fib4(9) . \"\\n\";\necho fib4(10) . \"\\n\";\necho fib4(11) . \"\\n\";\n\
    echo fib4(12) . \"\\n\";\necho fib4(13) . \"\\n\";\necho fib4(14) . \"\\n\";\n\
    echo fib4(15) . \"\\n\";\necho fib4(16) . \"\\n\";\necho fib4(17) . \"\\n\";\n\
    echo fib4(18) . \"\\n\";\necho fib4(19) . \"\\n\";\necho fib4(20) . \"\\n\";\n\
    echo fib4(21) . \"\\n\";\necho fib4(22) . \"\\n\";\necho fib4(23) . \"\\n\";\n\
    echo fib4(24) . \"\\n\";\necho fib4(25) . \"\\n\";\necho fib4(26) . \"\\n\";\n\
    echo fib4(27) . \"\\n\";\necho fib4(28) . \"\\n\";\necho fib4(29) . \"\\n\";\n\
    echo fib4(30) . \"\\n\";\necho fib4(31) . \"\\n\";\necho fib4(32) . \"\\n", "\t\
    $fib4 = array(0, 0, 2, 0);\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$fib4[$i] =\
    \ $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3] + $fib4[$i-4];\n\t}\n\treturn $fib4[$n];\n\
    }\necho fib4(5) . PHP_EOL;\necho fib4(6) . PHP_EOL;\necho fib4(7) . PHP_EOL;\n",
  "    $fib4 = array(0, 0, 2, 0);\n    for ($i = 4; $i <= $n; $i++) {\n        $fib4[$i]\
    \ = $fib4[$i - 1] + $fib4[$i - 2] + $fib4[$i - 3] + $fib4[$i - 4];\n    }\n  \
    \  return $fib4[$n];\n}\n\necho fib4(7);", "\t$a = 0;\n\t$b = 0;\n\t$c = 2;\n\t\
    $d = 0;\n\t\n\t$x = 4;\n\twhile($x <= $n) {\n\t\t$temp = $d;\n\t\t$d = $a + $b\
    \ + $c + $d;\n\t\t$a = $b;\n\t\t$b = $c;\n\t\t$c = $temp;\n\t\t$x++;\n\t}\n\t\
    return $d;\n}\necho fib4(5); //4\necho \"<br>\";\necho fib4(6); //8\necho \"<br>\"\
    ;\necho fib4(7); //14\necho \"<br>\";\necho fib4(8); //26\necho \"<br>\";\n",
  "    $prev = [0, 0, 2, 0];\n    for ($i = 4; $i <= $n; $i++) {\n        $tmp = $prev[0]\
    \ + $prev[1] + $prev[2] + $prev[3];\n        $prev[0] = $prev[1];\n        $prev[1]\
    \ = $prev[2];\n        $prev[2] = $prev[3];\n        $prev[3] = $tmp;\n    }\n\
    \    return $prev[3];\n}\n\nfor ($i = 0; $i < 10; $i++) {\n    print fib4($i)\
    \ . \"\\n\";\n}", "    if ($n < 0) {\n        return 0;\n    }\n\n    if ($n <\
    \ 2) {\n        return 0;\n    }\n\n    if ($n < 3) {\n        return 2;\n   \
    \ }\n\n    $fib = [0, 0, 2, 0];\n    for ($i = 4; $i <= $n; $i++) {\n        $fib[$i\
    \ % 4] = $fib[0] + $fib[1] + $fib[2] + $fib[3];\n    }\n\n    return $fib[$n %\
    \ 4];\n}\n", "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n\
    \        return 0;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if\
    \ ($n == 3) {\n        return 0;\n    }\n    $start = 4;\n    $f1 = 0;\n    $f2\
    \ = 0;\n    $f3 = 2;\n    $f4 = 0;\n    $count = 0;\n    while ($start <= $n)\
    \ {\n        $count = $f1 + $f2 + $f3 + $f4;\n        $f1 = $f2;\n        $f2\
    \ = $f3;\n        $f3 = $f4;\n        $f4 = $count;\n        $start++;\n    }\n\
    \    return $count;\n}\necho fib4(5).\"\\n\";\necho fib4(6).\"\\n\";\necho fib4(7).\"\
    \\n\";", "    if ($n <= 1) {\n        return 0;\n    }\n    $term2 = 0;\n    $term3\
    \ = 0;\n    $term4 = 0;\n    $i = 2;\n    $a = 1;\n    $b = 2;\n    $c = 0;\n\
    \    while ($i < $n) {\n        $c = $a + $b + $term2 + $term3 + $term4;\n   \
    \     $term4 = $term3;\n        $term3 = $term2;\n        $term2 = $b;\n     \
    \   $b = $a;\n        $a = $c;\n        $i++;\n    }\n    return $c;\n}", "  \
    \  $fib4 = [0, 0, 2, 0];\n    for ($i = 4; $i <= $n; $i++) {\n        $fib4[$i]\
    \ = $fib4[$i - 1] + $fib4[$i - 2] + $fib4[$i - 3] + $fib4[$i - 4];\n    }\n  \
    \  return $fib4[$n];\n}\n\n$fh = fopen($argv[1], \"r\");\nwhile (!feof($fh)) {\n\
    \    $test = fgets($fh);\n    echo fib4($test).\"\\n\";\n}\nfclose($fh);", "\t\
    $num1 = 0;\n\t$num2 = 0;\n\t$num3 = 2;\n\t$num4 = 0;\n\t$result = 0;\n\tif ($n\
    \ == 0) {\n\t\treturn 0;\n\t}\n\tif ($n == 1) {\n\t\treturn 0;\n\t}\n\tif ($n\
    \ == 2) {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 0;\n\t}\n\tfor ($i\
    \ = 3; $i < $n; $i++) {\n\t\t$result = $num1 + $num2 + $num3 + $num4;\n\t\t$num1\
    \ = $num2;\n\t\t$num2 = $num3;\n\t\t$num3 = $num4;\n\t\t$num4 = $result;\n\t}\n\
    \treturn $result;\n}\nprint_r(fib4(7));", "  // your code here\n}\n", "    $lastFour\
    \ = [0, 0, 2, 0];\n    if ($n <= 3) {\n        return $lastFour[$n];\n    }\n\n\
    \    for ($i = 4; $i <= $n; $i++) {\n        $sum = array_sum($lastFour);\n  \
    \      array_shift($lastFour);\n        array_push($lastFour, $sum);\n    }\n\n\
    \    return $lastFour[3];\n}\n", "    if ($n == 0) {\n        return 0;\n    }\n\
    \    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 2;\n    }\n    if ($n == 3) {\n        return 0;\n    }\n    $arr = [0, 0, 2,\
    \ 0];\n    for ($i = 4; $i <= $n; $i++) {\n        $temp = $arr[0] + $arr[1] +\
    \ $arr[2] + $arr[3];\n        $arr[0] = $arr[1];\n        $arr[1] = $arr[2];\n\
    \        $arr[2] = $arr[3];\n        $arr[3] = $temp;\n    }\n    return $arr[3];\n\
    }\necho fib4(5);\necho fib4(6);\necho fib4(7);\n", "    $fn4 = [0, 0, 2, 0];\n\
    \    for ($i = 4; $i <= $n; $i++) {\n        $fn4[$i % 4] = array_sum(array_slice($fn4,\
    \ $i - 4));\n    }\n    return $fn4[$n % 4];\n}\n", "    $fib = array();\n   \
    \ $fib[0] = 0;\n    $fib[1] = 0;\n    $fib[2] = 2;\n    $fib[3] = 0;\n    for\
    \ ($i = 4; $i <= $n; $i++) {\n        $fib[$i] = $fib[$i-1] + $fib[$i-2] + $fib[$i-3]\
    \ + $fib[$i-4];\n    }\n    return $fib[$n];\n}\necho fib4(5) . \"\\n\";\necho\
    \ fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "    $first = 0;\n    $second\
    \ = 0;\n    $third = 2;\n    $fourth = 0;\n    if ($n == 0) {\n        return\
    \ $first;\n    } else if ($n == 1) {\n        return $second;\n    } else if ($n\
    \ == 2) {\n        return $third;\n    } else if ($n == 3) {\n        return $fourth;\n\
    \    }\n    for ($i = 4; $i <= $n; $i++) {\n        $f = $first + $second + $third\
    \ + $fourth;\n        $first = $second;\n        $second = $third;\n        $third\
    \ = $fourth;\n        $fourth = $f;\n    }\n    return $f;\n}\n\necho(fib4(5));",
  "\t\n}", "    $fibNums = [0, 0, 2, 0];\n    if ($n > 3) {\n        for ($i = 4;\
    \ $i <= $n; $i++) {\n            $fibNums[$i % 4] = $fibNums[($i - 1) % 4] + $fibNums[($i\
    \ - 2) % 4] + $fibNums[($i - 3) % 4] + $fibNums[($i - 4) % 4];\n        }\n  \
    \  }\n    return $fibNums[$n % 4];\n}\necho fib4(5) . PHP_EOL;\necho fib4(6) .\
    \ PHP_EOL;\necho fib4(7) . PHP_EOL;", "    $a = 0;\n    $b = 0;\n    $c = 2;\n\
    \    $d = 0;\n    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n\
    }\nprint_r(fib4(5));\nprint_r(fib4(6));\nprint_r(fib4(7));", "    if ($n < 0)\
    \ return \"Please enter a non-negative number\";\n    if ($n == 0) return 0;\n\
    \    if ($n == 1) return 0;\n    if ($n == 2) return 2;\n    if ($n == 3) return\
    \ 0;\n    $num1 = 0;\n    $num2 = 0;\n    $num3 = 2;\n    $num4 = 0;\n    $result\
    \ = 0;\n    for ($i = 4; $i <= $n; $i++) {\n        $result = $num1 + $num2 +\
    \ $num3 + $num4;\n        $num1 = $num2;\n        $num2 = $num3;\n        $num3\
    \ = $num4;\n        $num4 = $result;\n    }\n    return $result;\n}\n", "\t$r=array(0,0,2,0);\n\
    \t$nr=4;\n\tif($n<$nr)\n\t\treturn $r[$n];\n\tfor($i=$nr;$i<=$n;$i++) {\n\t\t\
    $r[$i%4]=$r[($i-1)%4]+$r[($i-2)%4]+$r[($i-3)%4]+$r[($i-4)%4];\n\t}\n\treturn $r[$n%4];\n\
    }\necho \"fib4(5) = \".fib4(5).PHP_EOL;\necho \"fib4(6) = \".fib4(6).PHP_EOL;\n\
    echo \"fib4(7) = \".fib4(7).PHP_EOL;\n", "    $first = 0;\n    $second = 0;\n\
    \    $third = 2;\n    $fourth = 0;\n    if ($n == 0) {\n        return $first;\n\
    \    } else if ($n == 1) {\n        return $second;\n    } else if ($n == 2) {\n\
    \        return $third;\n    } else if ($n == 3) {\n        return $fourth;\n\
    \    } else {\n        for ($i = 4; $i <= $n; $i++) {\n            $sum = $first\
    \ + $second + $third + $fourth;\n            $first = $second;\n            $second\
    \ = $third;\n            $third = $fourth;\n            $fourth = $sum;\n    \
    \    }\n        return $sum;\n    }\n}\necho \"Result: \".fib4(5);", "    $prev1\
    \ = 0;\n    $prev2 = 0;\n    $prev3 = 2;\n    $prev4 = 0;\n    $fib4 = 0;\n  \
    \  for ($i = 4; $i <= $n; $i++) {\n        $fib4 = $prev1 + $prev2 + $prev3 +\
    \ $prev4;\n        $prev1 = $prev2;\n        $prev2 = $prev3;\n        $prev3\
    \ = $prev4;\n        $prev4 = $fib4;\n    }\n    return $fib4;\n}\n\necho fib4(5)\
    \ . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";\n", "\tif ($n ==\
    \ 0) {\n\t\treturn 0;\n\t} else if ($n == 1) {\n\t\treturn 0;\n\t} else if ($n\
    \ == 2) {\n\t\treturn 2;\n\t} else if ($n == 3) {\n\t\treturn 0;\n\t} else {\n\
    \t\t$f1 = 0;\n\t\t$f2 = 0;\n\t\t$f3 = 2;\n\t\t$f4 = 0;\n\t\t$f = 0;\n\t\tfor ($i\
    \ = 4; $i <= $n; $i++) {\n\t\t\t$f = $f1 + $f2 + $f3 + $f4;\n\t\t\t$f1 = $f2;\n\
    \t\t\t$f2 = $f3;\n\t\t\t$f3 = $f4;\n\t\t\t$f4 = $f;\n\t\t}\n\t\treturn $f;\n\t\
    }\n}\n\nvar_dump(fib4(5));\nvar_dump(fib4(6));\nvar_dump(fib4(7));", "    $x =\
    \ 0;\n    $y = 1;\n    $z = 2;\n    $w = 0;\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n        $w = $x + $y + $z;\n        $x = $y;\n        $y = $z;\n        $z\
    \ = $w;\n    }\n    return $w;\n}\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\\
    n\";\necho fib4(7) . \"\\n\";", "    $a = 0;\n    $b = 0;\n    $c = 2;\n    $d\
    \ = 0;\n    if ($n == 0) return $a;\n    if ($n == 1) return $b;\n    if ($n ==\
    \ 2) return $c;\n    if ($n == 3) return $d;\n    for ($i = 4; $i <= $n; $i++)\
    \ {\n        $e = $a + $b + $c + $d;\n        $a = $b;\n        $b = $c;\n   \
    \     $c = $d;\n        $d = $e;\n    }\n    return $e;\n}\n", "    $i = 0;\n\
    \    $j = 0;\n    $k = 2;\n    $l = 0;\n    for ($m = 4; $m <= $n; $m++) {\n \
    \       $l = $i + $j + $k + $l;\n        $i = $j;\n        $j = $k;\n        $k\
    \ = $l;\n    }\n    return $l;\n}\n$n = 8;\necho(fib4($n));", "  $a = 0;\n  $b\
    \ = 0;\n  $c = 2;\n  $d = 0;\n  for ($i = 3; $i <= $n; $i++) {\n    $e = $a +\
    \ $b + $c + $d;\n    $a = $b;\n    $b = $c;\n    $c = $d;\n    $d = $e;\n  }\n\
    \  return $d;\n}", "    $memo = [0, 0, 2, 0];\n    $i = 3;\n    while ($i < $n)\
    \ {\n        $memo[$i % 4] = $memo[($i - 1) % 4] + $memo[($i - 2) % 4] + $memo[($i\
    \ - 3) % 4] + $memo[($i - 4) % 4];\n        $i++;\n    }\n    return $memo[($n\
    \ - 1) % 4];\n}\n", "    if ($n <= 1) {\n        return 0;\n    }\n    if ($n\
    \ == 2) {\n        return 2;\n    }\n    $f0 = 0;\n    $f1 = 0;\n    $f2 = 2;\n\
    \    $f3 = 0;\n    for ($i = 3; $i <= $n; $i++) {\n        $f4 = $f0 + $f1 + $f2\
    \ + $f3;\n        $f0 = $f1;\n        $f1 = $f2;\n        $f2 = $f3;\n       \
    \ $f3 = $f4;\n    }\n    return $f3;\n}", "\n}", "    $a = [0, 0, 2, 0];\n   \
    \ if ($n < 4) {\n        return $a[$n];\n    }\n\n    $ret = 0;\n    for ($i =\
    \ 4; $i <= $n; $i++) {\n        $ret = $a[0] + $a[1] + $a[2] + $a[3];\n      \
    \  $a[0] = $a[1];\n        $a[1] = $a[2];\n        $a[2] = $a[3];\n        $a[3]\
    \ = $ret;\n    }\n\n    return $ret;\n}\n\necho fib4(5) . \"\\n\";\necho fib4(6)\
    \ . \"\\n\";\necho fib4(7) . \"\\n\";", "\tif ($n == 0) return 0;\n\tif ($n ==\
    \ 1) return 0;\n\tif ($n == 2) return 2;\n\tif ($n == 3) return 0;\n\t$a = 0;\n\
    \t$b = 0;\n\t$c = 2;\n\t$d = 0;\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$e = $a\
    \ + $b + $c + $d;\n\t\t$a = $b;\n\t\t$b = $c;\n\t\t$c = $d;\n\t\t$d = $e;\n\t\
    }\n\treturn $e;\n}\n", "\tif ($n == 0) {\n\t\treturn 0;\n\t}\n\tif ($n == 1) {\n\
    \t\treturn 0;\n\t}\n\tif ($n == 2) {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\
    \treturn 0;\n\t}\n\t$ret = 0;\n\t$n0 = 0;\n\t$n1 = 0;\n\t$n2 = 2;\n\t$n3 = 0;\n\
    \tfor ($i = 4; $i <= $n; $i++) {\n\t\t$ret = $n0 + $n1 + $n2 + $n3;\n\t\t$n0 =\
    \ $n1;\n\t\t$n1 = $n2;\n\t\t$n2 = $n3;\n\t\t$n3 = $ret;\n\t}\n\treturn $ret;\n\
    }\n\necho fib4(5);\necho \"\\n\";\necho fib4(6);\necho \"\\n\";\necho fib4(7);\n\
    echo \"\\n\";\necho fib4(8);\necho \"\\n\";\necho fib4(9);\necho \"\\n\";\necho\
    \ fib4(10);\necho \"\\n\";\necho fib4(11);\necho \"\\n\";\necho fib4(12);\necho\
    \ \"\\n\";\necho fib4(13);\necho \"\\n\";\necho fib4(14);\necho \"\\n\";\necho\
    \ fib4(15);\necho \"\\n\";\necho fib4(16);\necho \"\\n\";\necho fib4(17);\necho\
    \ \"\\n\";\necho fib4(18);\necho \"\\n\";\necho fib4(19);\necho \"\\n\";\necho\
    \ fib4(20);\necho \"\\n\";\necho fib4(21);\necho \"\\n\";\necho fib4(22);\necho\
    \ \"\\n\";\necho fib4(23);\necho \"\\n\";\necho fib4(24);\necho \"\\n\";\necho\
    \ fib4(25);\necho \"\\n\";\necho fib4(26);\necho \"\\n\";\necho fib4(27);\necho\
    \ \"\\n\";\necho fib4(28);\necho \"\\n\";\necho fib4(29);\necho \"\\n\";\necho\
    \ fib4(30", "    if ($n == 0) {\n        return 0;\n    }\n    $numbers = [0,\
    \ 0, 2, 0];\n    if ($n < 4) {\n        return $numbers[$n - 1];\n    }\n    $i\
    \ = 4;\n    while ($i <= $n) {\n        $sum = $numbers[0] + $numbers[1] + $numbers[2]\
    \ + $numbers[3];\n        array_shift($numbers);\n        array_push($numbers,\
    \ $sum);\n        $i++;\n    }\n    return $numbers[3];\n}\n", "\t$fib4[0] = 0;\n\
    \t$fib4[1] = 0;\n\t$fib4[2] = 2;\n\t$fib4[3] = 0;\n\tif ($n < 4) {\n\t\treturn\
    \ $fib4[$n];\n\t}\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$fib4[$i] = $fib4[$i-1]\
    \ + $fib4[$i-2] + $fib4[$i-3] + $fib4[$i-4];\n\t}\n\treturn $fib4[$n];\n}\n\n\
    echo fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";\n",
  "\n}", "    $x0 = 0;\n    $x1 = 0;\n    $x2 = 2;\n    $x3 = 0;\n    $x4 = 0;\n \
    \   for ($i = 0; $i < $n; $i++) {\n        $x4 = $x3 + $x2 + $x1 + $x0;\n    \
    \    $x0 = $x1;\n        $x1 = $x2;\n        $x2 = $x3;\n        $x3 = $x4;\n\
    \    }\n    return $x4;\n}\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\n\
    echo fib4(7) . \"\\n\";", "    $a = 0;\n    $b = 0;\n    $c = 2;\n    $d = 0;\n\
    \    $m = 2;\n    $i = 2;\n    while ($i < $n) {\n        $d = $a + $b + $c +\
    \ $d;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n        $i++;\n \
    \   }\n    return $d;\n}\n\nvar_dump(fib4(6));", "\t$a = 0;\n\t$b = 0;\n\t$c =\
    \ 2;\n\t$d = 0;\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\t$e = $a + $b + $c + $d;\n\
    \t\t$a = $b;\n\t\t$b = $c;\n\t\t$c = $d;\n\t\t$d = $e;\n\t}\n\treturn $d;\n}\n\
    \necho \"fib4(0) = \" . fib4(0) . \"\\n\";\necho \"fib4(1) = \" . fib4(1) . \"\
    \\n\";\necho \"fib4(2) = \" . fib4(2) . \"\\n\";\necho \"fib4(3) = \" . fib4(3)\
    \ . \"\\n\";\necho \"fib4(4) = \" . fib4(4) . \"\\n\";\necho \"fib4(5) = \" .\
    \ fib4(5) . \"\\n\";\necho \"fib4(6) = \" . fib4(6) . \"\\n\";\necho \"fib4(7)\
    \ = \" . fib4(7) . \"\\n\";\necho \"fib4(20) = \" . fib4(20) . \"\\n\";\necho\
    \ \"fib4(100) = \" . fib4(100) . \"\\n\";\necho \"fib4(1000) = \" . fib4(1000)\
    \ . \"\\n\";\necho \"fib4(10000) = \" . fib4(10000) . \"\\n\";", "    if ($n ==\
    \ 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n\
    \    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return\
    \ 0;\n    }\n    if ($n == 4) {\n        return 2;\n    }\n    $a = array(0, 0,\
    \ 2, 0, 2);\n    for ($i = 5; $i <= $n; $i++) {\n        $a[] = $a[$i - 1] + $a[$i\
    \ - 2] + $a[$i - 3] + $a[$i - 4];\n    }\n    return $a[$n];\n}\n", "    if ($n\
    \ < 4) {\n        return $n;\n    }\n    return fib4($n - 1) + fib4($n - 2) +\
    \ fib4($n - 3) + fib4($n - 4);\n}\n\necho fib4(6);", "\t$fib4 = [0, 0, 2, 0];\n\
    \tfor ($i = 3; $i < $n; $i++) {\n\t\t$fib4[$i + 1] = $fib4[$i] + $fib4[$i - 1]\
    \ + $fib4[$i - 2] + $fib4[$i - 3];\n\t}\n\treturn $fib4[$n];\n}", "    if ($n\
    \ < 2) {\n        return 0;\n    }\n    if ($n == 2) {\n        return 2;\n  \
    \  }\n    $res = [0, 0, 2, 0];\n    for ($i = 3; $i < $n; $i++) {\n        $res[$i\
    \ % 4] = $res[($i - 1) % 4] + $res[($i - 2) % 4] + $res[($i - 3) % 4] + $res[($i\
    \ - 4) % 4];\n    }\n    return $res[($n - 1) % 4];\n}", "    $a = 0;\n    $b\
    \ = 0;\n    $c = 2;\n    $d = 0;\n    for ($i = 3; $i <= $n; $i++) {\n       \
    \ $temp = $d;\n        $d = $a + $b + $c + $d;\n        $a = $b;\n        $b =\
    \ $c;\n        $c = $temp;\n    }\n    return $d;\n}", "    if($n < 0) return\
    \ null;\n    if($n <= 2) return $n * 2;\n    $f0 = 0;\n    $f1 = 0;\n    $f2 =\
    \ 2;\n    $f3 = 0;\n    $res = 0;\n    for($i = 3; $i <= $n; $i++) {\n       \
    \ $res = $f0 + $f1 + $f2 + $f3;\n        $f0 = $f1;\n        $f1 = $f2;\n    \
    \    $f2 = $f3;\n        $f3 = $res;\n    }\n    return $res;\n}\n\necho fib4(5);\n\
    echo PHP_EOL;\necho fib4(6);\necho PHP_EOL;\necho fib4(7);\necho PHP_EOL;", " \
    \ if ($n == 0) return 0;\n  if ($n == 1) return 0;\n  if ($n == 2) return 2;\n\
    \  if ($n == 3) return 0;\n  $n1 = 0;\n  $n2 = 0;\n  $n3 = 2;\n  $n4 = 0;\n  for\
    \ ($i = 3; $i < $n; $i++) {\n    $res = $n1 + $n2 + $n3 + $n4;\n    $n1 = $n2;\n\
    \    $n2 = $n3;\n    $n3 = $n4;\n    $n4 = $res;\n  }\n  return $res;\n}\n\necho\
    \ fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "  //YOUR\
    \ CODE GOES HERE\n}", "    $n0 = 0;\n    $n1 = 0;\n    $n2 = 2;\n    $n3 = 0;\n\
    \    if ($n == 0) return $n0;\n    if ($n == 1) return $n1;\n    if ($n == 2)\
    \ return $n2;\n    if ($n == 3) return $n3;\n    for ($i = 4; $i <= $n; $i++)\
    \ {\n        $n0 = $n1;\n        $n1 = $n2;\n        $n2 = $n3;\n        $n3 =\
    \ $n0 + $n1 + $n2 + $n3;\n    }\n    return $n3;\n}\n", "  if ($n <= 0) {\n  \
    \  return 0;\n  }\n  if ($n == 1) {\n    return 0;\n  }\n  if ($n == 2) {\n  \
    \  return 2;\n  }\n  if ($n == 3) {\n    return 0;\n  }\n  $f1 = 0;\n  $f2 = 0;\n\
    \  $f3 = 2;\n  $f4 = 0;\n  $f5 = 0;\n  for ($i = 4; $i <= $n; $i++) {\n    $f5\
    \ = $f1 + $f2 + $f3 + $f4;\n    $f1 = $f2;\n    $f2 = $f3;\n    $f3 = $f4;\n \
    \   $f4 = $f5;\n  }\n  return $f5;\n}\n\necho \"fib4(5):\" . fib4(5) . \"\\n\"\
    ;\necho \"fib4(6):\" . fib4(6) . \"\\n\";\necho \"fib4(7):\" . fib4(7) . \"\\\
    n\";\necho \"fib4(8):\" . fib4(8) . \"\\n\";\necho \"fib4(9):\" . fib4(9) . \"\
    \\n\";\necho \"fib4(10):\" . fib4(10) . \"\\n\";\necho \"fib4(11):\" . fib4(11)\
    \ . \"\\n\";\necho \"fib4(12):\" . fib4(12) . \"\\n\";\necho \"fib4(13):\" . fib4(13)\
    \ . \"\\n\";\necho \"fib4(14):\" . fib4(14) . \"\\n\";\necho \"fib4(15):\" . fib4(15)\
    \ . \"\\n\";\necho \"fib4(16):\" . fib4(16) . \"\\n\";\necho \"fib4(17):\" . fib4(17)\
    \ . \"\\n\";\necho \"fib4(18):\" . fib4(18) . \"\\n\";\necho \"fib4(19):\" . fib4(19)\
    \ . \"\\n\";\necho \"fib4(20):\" .", "    if ($n == 0) return 0;\n    if ($n ==\
    \ 1) return 0;\n    if ($n == 2) return 2;\n    if ($n == 3) return 0;\n    $a\
    \ = 0;\n    $b = 0;\n    $c = 2;\n    $d = 0;\n    for ($i = 4; $i <= $n; $i++)\
    \ {\n        $e = $a + $b + $c + $d;\n        $a = $b;\n        $b = $c;\n   \
    \     $c = $d;\n        $d = $e;\n    }\n    return $e;\n}\necho fib4(5).\"\\\
    n\";\necho fib4(6).\"\\n\";\necho fib4(7).\"\\n\";", "\tif ($n <= 3) {\n\t\treturn\
    \ $n - 1;\n\t}\n\t$nums = [0, 0, 2, 0];\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t\
    $nums[$i % 4] = $nums[($i - 1) % 4] + $nums[($i - 2) % 4] + $nums[($i - 3) % 4]\
    \ + $nums[($i - 4) % 4];\n\t}\n\treturn $nums[$n % 4];\n}\n\nprint_r(fib4(5));\n\
    print_r(fib4(6));\nprint_r(fib4(7));", "    $a = 0;\n    $b = 0;\n    $c = 2;\n\
    \    $d = 0;\n    $i = 3;\n    while ($i <= $n) {\n        $d = $a + $b + $c;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n        $i++;\n    }\n\
    \    return $d;\n}\nfib4(8);\n", "    if ($n <= 1) {\n        return 0;\n    }\
    \ else if ($n == 2) {\n        return 2;\n    } else if ($n == 3) {\n        return\
    \ 0;\n    } else {\n        $f[0] = 0;\n        $f[1] = 0;\n        $f[2] = 2;\n\
    \        $f[3] = 0;\n        for ($i = 4; $i <= $n; $i++) {\n            $f[$i]\
    \ = $f[$i-1] + $f[$i-2] + $f[$i-3] + $f[$i-4];\n        }\n        return $f[$n];\n\
    \    }\n}", "\t$fib = [0, 0, 2, 0];\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$fib[$i%4]\
    \ = $fib[($i+3)%4] + $fib[($i+2)%4] + $fib[($i+1)%4] + $fib[$i%4];\n\t}\n\treturn\
    \ $fib[$n%4];\n}\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7)\
    \ . \"\\n\";\n", "    if ($n < 4) {\n        return $n;\n    }\n    $a = 0;\n\
    \    $b = 0;\n    $c = 2;\n    $d = 0;\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      $temp = $a + $b + $c + $d;\n        $a = $b;\n        $b = $c;\n      \
    \  $c = $d;\n        $d = $temp;\n    }\n    return $a + $b + $c + $d;\n}\necho\
    \ fib4(6);", "    if ($n < 0) {\n        throw new Exception(\"argument invalid\"\
    );\n    }\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n\
    \        return 0;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if\
    \ ($n == 3) {\n        return 0;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 2;\n\
    \    $d = 0;\n    for ($i = 4; $i <= $n; $i++) {\n        $e = $a + $b + $c +\
    \ $d;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n        $d = $e;\n\
    \    }\n    return $e;\n}\n\necho fib4(5);\necho \"\\n\";\necho fib4(6);\necho\
    \ \"\\n\";\necho fib4(7);\necho \"\\n\";", "\t//https://www.geeksforgeeks.org/program-for-nth-fibonacci-number/\n\
    \t$f = array(0, 0, 2, 0);\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$f[$i % 4] =\
    \ $f[($i-1) % 4] + $f[($i-2) % 4] + $f[($i-3) % 4] + $f[($i-4) % 4];\n\t}\n\t\
    return $f[$n % 4];\n}", "    $fibs = [0, 0, 2, 0];\n    $cur = 3;\n    while ($cur\
    \ < $n) {\n        $fibs[3] = $fibs[0] + $fibs[1] + $fibs[2] + $fibs[3];\n   \
    \     $fibs[0] = $fibs[1];\n        $fibs[1] = $fibs[2];\n        $fibs[2] = $fibs[3];\n\
    \        $cur++;\n    }\n    return $fibs[3];\n}\nprint_r(fib4(5).\"\\n\");\n\
    print_r(fib4(6).\"\\n\");\nprint_r(fib4(7).\"\\n\");", "    if ($n < 3) {\n  \
    \      return $n * 2;\n    }\n\n    $fib_prev_prev_prev = 0;\n    $fib_prev_prev\
    \ = 0;\n    $fib_prev = 2;\n    $fib = 0;\n\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n        $fib = $fib_prev_prev_prev + $fib_prev_prev + $fib_prev;\n      \
    \  $fib_prev_prev_prev = $fib_prev_prev;\n        $fib_prev_prev = $fib_prev;\n\
    \        $fib_prev = $fib;\n    }\n\n    return $fib;\n}\n\necho fib4(5);\necho\
    \ fib4(6);\necho fib4(7);", "    if($n < 2) return 0;\n    if($n == 2) return\
    \ 2;\n    $cache = array();\n    $cache[0] = 0;\n    $cache[1] = 0;\n    $cache[2]\
    \ = 2;\n    $cache[3] = 0;\n    for($i = 4; $i <= $n; $i++) {\n        $cache[$i]\
    \ = $cache[$i-1] + $cache[$i-2] + $cache[$i-3] + $cache[$i-4];\n    }\n    return\
    \ $cache[$n];\n}\n", "\n}", "    $a = 0;\n    $b = 0;\n    $c = 2;\n    $d = 0;\n\
    \    if ($n == 0) {\n        return $a;\n    } else if ($n == 1) {\n        return\
    \ $b;\n    } else if ($n == 2) {\n        return $c;\n    } else if ($n == 3)\
    \ {\n        return $d;\n    }\n    for ($i = 0; $i < $n - 3; $i++) {\n      \
    \  $a = $b;\n        $b = $c;\n        $c = $d;\n        $d = $a + $b + $c + $d;\n\
    \    }\n    return $d;\n}\n\necho fib4(5) . \"\\n\"; // 4\necho fib4(6) . \"\\\
    n\"; // 8\necho fib4(7) . \"\\n\"; // 14\necho fib4(8) . \"\\n\"; // 26\necho\
    \ fib4(9) . \"\\n\"; // 48\necho fib4(10) . \"\\n\"; // 88\necho fib4(11) . \"\
    \\n\"; // 162\n", "    $f = [0, 0, 2, 0];\n    for ($i = 4; $i <= $n; $i++) {\n\
    \        $f[$i % 4] = $f[($i - 1) % 4] + $f[($i - 2) % 4] + $f[($i - 3) % 4] +\
    \ $f[($i - 4) % 4];\n    }\n    return $f[$n % 4];\n}\n", "\t$a = 0;\n\t$b = 0;\n\
    \t$c = 2;\n\t$d = 0;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\t$e = $a + $b + $c +\
    \ $d;\n\t\t$a = $b;\n\t\t$b = $c;\n\t\t$c = $d;\n\t\t$d = $e;\n\t}\n\treturn $d;\n\
    }\nfib4(5);", "\t$nth = 0;\n\t$previous = 0;\n\t$two_before = 0;\n\t$three_before\
    \ = 0;\n\t$four_before = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\tif ($i == 1)\
    \ {\n\t\t\t$nth = 0;\n\t\t} else if ($i == 2) {\n\t\t\t$nth = 2;\n\t\t} else {\n\
    \t\t\t$nth = $previous + $two_before + $three_before + $four_before;\n\t\t}\n\t\
    \t$four_before = $three_before;\n\t\t$three_before = $two_before;\n\t\t$two_before\
    \ = $previous;\n\t\t$previous = $nth;\n\t}\n\treturn $nth;\n}", "    if ($n ==\
    \ 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n\
    \    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return\
    \ 0;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 2;\n    $d = 0;\n    $e = 0;\n\
    \    for ($i = 4; $i <= $n; $i++) {\n        $e = $a + $b + $c + $d;\n       \
    \ $a = $b;\n        $b = $c;\n        $c = $d;\n        $d = $e;\n    }\n    return\
    \ $e;\n}\n", "    if ($n < 0) {\n        throw new InvalidArgumentException(\"\
    n must be >= 0\");\n    }\n    $fib4_0 = 0;\n    $fib4_1 = 0;\n    $fib4_2 = 2;\n\
    \    $fib4_3 = 0;\n    $fib4_4 = 0;\n    if ($n < 4) {\n        switch ($n) {\n\
    \            case 0:\n                return $fib4_0;\n            case 1:\n \
    \               return $fib4_1;\n            case 2:\n                return $fib4_2;\n\
    \            case 3:\n                return $fib4_3;\n        }\n    }\n    for\
    \ ($i = 4; $i <= $n; $i++) {\n        $fib4_4 = $fib4_3 + $fib4_2 + $fib4_1 +\
    \ $fib4_0;\n        $fib4_0 = $fib4_1;\n        $fib4_1 = $fib4_2;\n        $fib4_2\
    \ = $fib4_3;\n        $fib4_3 = $fib4_4;\n    }\n    return $fib4_4;\n}", "\t\
    $fib4 = array(0, 0, 2, 0);\n\t$currentN = 4;\n\t$currentNum = 0;\n\tif ($n < 4)\
    \ {\n\t\treturn $fib4[$n];\n\t}\n\twhile ($currentN <= $n) {\n\t\t$currentNum\
    \ = $fib4[$currentN - 1] + $fib4[$currentN - 2] + $fib4[$currentN - 3] + $fib4[$currentN\
    \ - 4];\n\t\t$fib4[] = $currentNum;\n\t\t$currentN++;\n\t}\n\treturn $currentNum;\n\
    }\nprint(fib4(7));", "  $fibs = [0, 0, 2, 0];\n  for ($i = 4; $i <= $n; $i++)\
    \ {\n    $fibs[$i % 4] = $fibs[($i - 1) % 4] + $fibs[($i - 2) % 4] + $fibs[($i\
    \ - 3) % 4] + $fibs[($i - 4) % 4];\n  }\n  return $fibs[$n % 4];\n}\n\nfor ($i\
    \ = 0; $i < 8; $i++) {\n  print(fib4($i) . \"\\n\");\n}", "    if ($n < 2) {\n\
    \        return 0;\n    }\n    $fib4 = [0, 0, 2, 0];\n    for ($i = 3; $i < $n;\
    \ $i++) {\n        $fib4[$i + 1] = $fib4[$i] + $fib4[$i - 1] + $fib4[$i - 2] +\
    \ $fib4[$i - 3];\n    }\n    return $fib4[$n];\n}\nprint(fib4(7).\"\\n\");", " \
    \   if ($n < 0) {\n        throw new Exception(\"fib4(n) requires n > 0\");\n\
    \    }\n\n    $a = 0;\n    $b = 0;\n    $c = 2;\n    $d = 0;\n\n    for ($i =\
    \ 2; $i < $n; $i++) {\n        $e = $a + $b + $c + $d;\n        $a = $b;\n   \
    \     $b = $c;\n        $c = $d;\n        $d = $e;\n    }\n\n    return $d;\n\
    }\n", "    $fib4 = array(0, 0, 2, 0);\n    for ($i = 4; $i <= $n; $i++) {\n  \
    \      $fib4[$i % 4] = $fib4[($i - 1) % 4] + $fib4[($i - 2) % 4] + $fib4[($i -\
    \ 3) % 4] + $fib4[($i - 4) % 4];\n    }\n    return $fib4[$n % 4];\n}\necho fib4(5)\
    \ . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "\n}\n", "\t\
    $base = [0, 0, 2, 0];\n\tif ($n < 4) {\n\t\treturn $base[$n];\n\t}\n\t$count =\
    \ 4;\n\t$lastCount = 4;\n\t$lastValue = 8;\n\twhile ($count <= $n) {\n\t\t$prevCount\
    \ = $lastCount;\n\t\t$lastCount = $count;\n\t\t$lastValue = ($lastValue + $prevCount)\
    \ % 1000000007;\n\t\t$count++;\n\t}\n\treturn $lastValue;\n}\n\necho fib4(5) .\
    \ \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";\necho fib4(100) .\
    \ \"\\n\";\necho fib4(10000) . \"\\n\";\necho fib4(1000000) . \"\\n\";\necho fib4(100000000)\
    \ . \"\\n\";\necho fib4(100000000) . \"\\n\";\necho fib4(100000000) . \"\\n\"\
    ;\necho fib4(100000000) . \"\\n\";\necho fib4(100000000) . \"\\n\";\necho fib4(100000000)\
    \ . \"\\n\";\necho fib4(100000000) . \"\\n\";\necho fib4(100000000) . \"\\n\"\
    ;\necho fib4(100000000) . \"\\n\";\necho fib4(100000000) . \"\\n\";\necho fib4(100000000)\
    \ . \"\\n\";\necho fib4(100000000) . \"\\n\";\necho fib4(100000000) . \"\\n\"\
    ;\necho fib4(100000000) . \"\\n\";\necho fib4(100000000) . \"\\n\";\necho fib4(100000000)\
    \ . \"\\n\";\necho fib4(100000000) . \"\\n\";\necho fib4(100000000) . \"\\n\"\
    ;\necho fib4(100000000) . \"\\n\";\necho fib4(100000000) . \"\\n\";\necho fib4(100000000)\
    \ . \"\\n\";\necho fib4(100000000) . \"\\n\";\necho fib4(100000000) . \"\\n\"\
    ;\necho fib4(100000000) . \"\\n\";\necho fib4(100000000) . \"\\n\";\necho fib4(100000000)\
    \ . \"\\n\";\necho fib4", "    if($n == 0) return 0;\n    if($n == 1) return 0;\n\
    \    if($n == 2) return 2;\n    if($n == 3) return 0;\n    $result = 0;\n    $a\
    \ = 0;\n    $b = 0;\n    $c = 2;\n    $d = 0;\n    for($i = 4; $i <= $n; $i++)\
    \ {\n        $result = $a + $b + $c + $d;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $d;\n        $d = $result;\n    }\n    return $result;\n}\n\necho\
    \ fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "   \
    \ $fib = array();\n    $fib[0] = 0;\n    $fib[1] = 0;\n    $fib[2] = 2;\n    $fib[3]\
    \ = 0;\n    for ($i = 4; $i <= $n; $i++) {\n        $fib[$i] = $fib[$i-1] + $fib[$i-2]\
    \ + $fib[$i-3] + $fib[$i-4];\n    }\n    return $fib[$n];\n}\n", "\t$fib4 = array(0,\
    \ 0, 2, 0);\n\t$i = 3;\n\twhile($i <= $n) {\n\t\t$fib4[$i%4] = $fib4[0] + $fib4[1]\
    \ + $fib4[2] + $fib4[3];\n\t\t$i++;\n\t}\n\treturn $fib4[$n%4];\n}\n\nfor($i =\
    \ 0; $i < 10; $i++) {\n\techo $i . \": \" . fib4($i) . \"\\n\";\n}", "\tif ($n\
    \ < 0) {\n\t\treturn null;\n\t}\n\tif ($n == 0) {\n\t\treturn 0;\n\t}\n\tif ($n\
    \ == 1) {\n\t\treturn 0;\n\t}\n\tif ($n == 2) {\n\t\treturn 2;\n\t}\n\tif ($n\
    \ == 3) {\n\t\treturn 0;\n\t}\n\t$a = 0;\n\t$b = 0;\n\t$c = 2;\n\t$d = 0;\n\t\
    for ($i = 4; $i <= $n; $i++) {\n\t\t$e = $a + $b + $c + $d;\n\t\t$a = $b;\n\t\t\
    $b = $c;\n\t\t$c = $d;\n\t\t$d = $e;\n\t}\n\treturn $e;\n}\necho fib4(5) . \"\\\
    n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "  $arr = [0, 0, 2, 0];\n\
    \  if ($n <= 3) {\n    return $arr[$n];\n  }\n  for ($i = 4; $i <= $n; $i++) {\n\
    \    $arr[$i % 4] = $arr[($i - 1) % 4] + $arr[($i - 2) % 4] + $arr[($i - 3) %\
    \ 4] + $arr[($i - 4) % 4];\n  }\n  return $arr[$n % 4];\n}\n\nfib4(4);", "  $fib_nums\
    \ = [0, 0, 2, 0];\n  if ($n < 4) {\n    return $fib_nums[$n];\n  }\n  for ($i\
    \ = 4; $i <= $n; $i++) {\n    $fib_nums[$i%4] = $fib_nums[($i+3)%4] + $fib_nums[($i+2)%4]\
    \ + $fib_nums[($i+1)%4] + $fib_nums[$i%4];\n  }\n  return $fib_nums[$n%4];\n}\n\
    echo fib4(5); // 4\necho \"\\n\";\necho fib4(6); // 8\necho \"\\n\";\necho fib4(7);\
    \ // 14\necho \"\\n\";", "    $a = 0;\n    $b = 0;\n    $c = 2;\n    $d = 0;\n\
    \    for ($i = 0; $i < $n - 2; $i++) {\n        $a = $b;\n        $b = $c;\n \
    \       $c = $d;\n        $d = $a + $b + $c;\n    }\n    return $d;\n}\n\necho\
    \ fib4(5);", "    if ($n <= 3) return 0;\n    $p = 0;\n    $q = 0;\n    $r = 2;\n\
    \    $i = 3;\n    while ($i < $n) {\n        $s = $p + $q + $r;\n        $p =\
    \ $q;\n        $q = $r;\n        $r = $s;\n        $i += 1;\n    }\n    return\
    \ $s;\n}\n", "\t$list = [0, 0, 2, 0];\n\t$i = 4;\n\twhile($i <= $n) {\n\t\t$list[$i\
    \ % 4] = $list[($i-1) % 4] + $list[($i-2) % 4] + $list[($i-3) % 4] + $list[($i-4)\
    \ % 4];\n\t\t$i++;\n\t}\n\treturn $list[$n % 4];\n}", "  if ($n < 0) {\n    throw\
    \ new Exception(\"Unsupported Number\");\n  }\n  if ($n == 0) {\n    return 0;\n\
    \  }\n  if ($n == 1) {\n    return 0;\n  }\n  if ($n == 2) {\n    return 2;\n\
    \  }\n  if ($n == 3) {\n    return 0;\n  }\n  $fib = [0, 0, 2, 0];\n  for ($i\
    \ = 4; $i <= $n; $i++) {\n    $fib[0] = $fib[1];\n    $fib[1] = $fib[2];\n   \
    \ $fib[2] = $fib[3];\n    $fib[3] = $fib[0] + $fib[1] + $fib[2] + $fib[3];\n \
    \ }\n  return $fib[3];\n}\necho fib4(5); // 4\necho \"\\n\";\necho fib4(6); //\
    \ 8\necho \"\\n\";\necho fib4(7); // 14\necho \"\\n\";\necho fib4(8); // 28\n\
    echo \"\\n\";\necho fib4(9); // 50\necho \"\\n\";\necho fib4(10); // 90\necho\
    \ \"\\n\";\n", "    $fibs = [0, 0, 2, 0];\n    for ($i = 4; $i <= $n; $i++) {\n\
    \        $fibs[$i % 4] = $fibs[($i - 1) % 4] + $fibs[($i - 2) % 4] + $fibs[($i\
    \ - 3) % 4] + $fibs[($i - 4) % 4];\n    }\n    return $fibs[$n % 4];\n}\n\necho\
    \ fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "  $fib4Cache\
    \ = [0, 0, 2, 0];\n  $i = 4;\n  while($i <= $n) {\n    $fib4Cache[$i % 4] = $fib4Cache[($i-1)\
    \ % 4] + $fib4Cache[($i-2) % 4] + $fib4Cache[($i-3) % 4] + $fib4Cache[($i-4) %\
    \ 4];\n    $i++;\n  }\n  return $fib4Cache[$n % 4];\n}\n", "    if ($n <= 0) {\n\
    \        return 0;\n    }\n\n    if ($n <= 2) {\n        return 2;\n    }\n\n\
    \    $f = [0, 0, 2, 0];\n    for ($i = 3; $i < $n; $i++) {\n        $f[$i % 4]\
    \ = $f[($i - 1) % 4] + $f[($i - 2) % 4] + $f[($i - 3) % 4] + $f[($i - 4) % 4];\n\
    \    }\n\n    return $f[($n - 1) % 4];\n}\n\nforeach (range(0, 15) as $i) {\n\
    \    echo \"$i: \" . fib4($i) . \"\\n\";\n}", "\tif ($n < 0) {\n\t\treturn false;\n\
    \t}\n\n\t$fib0 = 0;\n\t$fib1 = 0;\n\t$fib2 = 2;\n\t$fib3 = 0;\n\t$fib4 = 0;\n\n\
    \tif ($n == 0) {\n\t\treturn $fib0;\n\t}\n\tif ($n == 1) {\n\t\treturn $fib1;\n\
    \t}\n\tif ($n == 2) {\n\t\treturn $fib2;\n\t}\n\tif ($n == 3) {\n\t\treturn $fib3;\n\
    \t}\n\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$fib4 = $fib0 + $fib1 + $fib2 + $fib3;\n\
    \t\t$fib0 = $fib1;\n\t\t$fib1 = $fib2;\n\t\t$fib2 = $fib3;\n\t\t$fib3 = $fib4;\n\
    \t}\n\n\treturn $fib4;\n}\n\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\n\
    echo fib4(7) . \"\\n\";\necho fib4(10) . \"\\n\";\necho fib4(20) . \"\\n\";\n\
    echo fib4(30) . \"\\n\";\necho fib4(40) . \"\\n\";\necho fib4(50) . \"\\n\";\n\
    echo fib4(60) . \"\\n\";\necho fib4(70) . \"\\n\";\necho fib4(80) . \"\\n\";\n\
    echo fib4(90) . \"\\n\";\necho fib4(100) . \"\\n\";\necho fib4(110) . \"\\n\"\
    ;\necho fib4(120) . \"\\n\";\necho fib4(130) . \"\\n\";\necho fib4(140) . \"\\\
    n\";\necho fib4(150) . \"\\n\";\necho fib4(160) . \"\\n\";\necho fib4(170) . \"\
    \\n\";\necho fib4(180) . \"\\n\";\necho fib4(190) . \"\\n\";\necho fib4(200) .\
    \ \"\\n\";", "    $fib_numbers = [0, 0, 2, 0];\n    for ($i = 3; $i < $n; $i++)\
    \ {\n        $fib_numbers[$i+1] = $fib_numbers[$i-1] + $fib_numbers[$i-2] + $fib_numbers[$i-3]\
    \ + $fib_numbers[$i-4];\n    }\n    return $fib_numbers[$n];\n}", "    if ($n\
    \ == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return 0;\n \
    \   }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n    \
    \    return 0;\n    }\n    $result = 0;\n    $first = 0;\n    $second = 0;\n \
    \   $third = 2;\n    $fourth = 0;\n    for ($i = 4; $i <= $n; $i++) {\n      \
    \  $result = $first + $second + $third + $fourth;\n        $first = $second;\n\
    \        $second = $third;\n        $third = $fourth;\n        $fourth = $result;\n\
    \    }\n    return $result;\n}\n\n$n = 5;\n$result = fib4($n);\necho $result;",
  "\n}\n", "    if($n == 0 || $n == 1 || $n == 3) {\n        return 0;\n    }\n  \
    \  if($n == 2) {\n        return 2;\n    }\n    $n1 = 0;\n    $n2 = 0;\n    $n3\
    \ = 0;\n    $n4 = 2;\n    for($i = 3; $i < $n; $i++) {\n        $tmp = $n1 + $n2\
    \ + $n3 + $n4;\n        $n1 = $n2;\n        $n2 = $n3;\n        $n3 = $n4;\n \
    \       $n4 = $tmp;\n    }\n    return $n1 + $n2 + $n3 + $n4;\n}\necho fib4(5)\
    \ . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "\tif ($n < 4)\
    \ {\n\t\treturn $n * 2;\n\t}\n\t$fib = array(0, 0, 2, 0);\n\tfor ($i = 4; $i <=\
    \ $n; $i++) {\n\t\t$fib[$i % 4] = $fib[($i-1) % 4] + $fib[($i-2) % 4] + $fib[($i-3)\
    \ % 4] + $fib[($i-4) % 4];\n\t}\n\treturn $fib[$n % 4];\n}\n\necho fib4(5) . \"\
    \\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";\necho fib4(8) . \"\\\
    n\";", "    $n = $n - 1;\n    if ($n <= 0) {\n        return 0;\n    }\n    if\
    \ ($n == 1) {\n        return 2;\n    }\n    $f = array(0, 0, 2, 0);\n    $i =\
    \ 3;\n    while ($i < $n) {\n        $f[0] = $f[1];\n        $f[1] = $f[2];\n\
    \        $f[2] = $f[3];\n        $f[3] = $f[0] + $f[1] + $f[2];\n        $i++;\n\
    \    }\n    return $f[3];\n}\n\necho fib4(5);\necho \"\\n\";\necho fib4(6);\n\
    echo \"\\n\";\necho fib4(7);\necho \"\\n\";\necho fib4(8);\necho \"\\n\";\n",
  "\t$fib4 = [0, 0, 2, 0];\n\t\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$fib4[$i % 4]\
    \ = $fib4[($i - 1) % 4] + $fib4[($i - 2) % 4] + $fib4[($i - 3) % 4] + $fib4[($i\
    \ - 4) % 4];\n\t}\n\t\n\treturn $fib4[$n % 4];\n}\n", "\n}\n", "    $map = array(0,\
    \ 0, 2, 0);\n    if ($n <= 3) {\n        return $map[$n];\n    }\n    $i = 0;\n\
    \    $j = 1;\n    $k = 2;\n    $l = 3;\n    $sum = 6;\n    for ($m = 4; $m <=\
    \ $n; $m++) {\n        $map[$m] = $sum;\n        $sum += $map[$i];\n        $i\
    \ = $j;\n        $j = $k;\n        $k = $l;\n        $l = $m;\n    }\n    return\
    \ $map[$n];\n}\n", "    // this solution is O(n)\n    if ($n < 3) return [0, 0,\
    \ 2, 0][$n];\n    $prev = 0;\n    $prev_prev = 0;\n    $prev_prev_prev = 0;\n\
    \    $prev_prev_prev_prev = 0;\n    $curr = 0;\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n        $curr = $prev + $prev_prev + $prev_prev_prev + $prev_prev_prev_prev;\n\
    \        $prev_prev_prev_prev = $prev_prev_prev;\n        $prev_prev_prev = $prev_prev;\n\
    \        $prev_prev = $prev;\n        $prev = $curr;\n    }\n    return $curr;\n\
    }", "    if ($n < 0) {\n        return -1;\n    }\n    $fib = array_fill(0, $n+1,\
    \ 0);\n    $fib[0] = 0;\n    $fib[1] = 0;\n    $fib[2] = 2;\n    for ($i = 3;\
    \ $i <= $n; $i++) {\n        $fib[$i] = $fib[$i-1] + $fib[$i-2] + $fib[$i-3] +\
    \ $fib[$i-4];\n    }\n    return $fib[$n];\n}\n\necho \"fib4(5): \" . fib4(5)\
    \ . \"\\n\";\necho \"fib4(6): \" . fib4(6) . \"\\n\";\necho \"fib4(7): \" . fib4(7)\
    \ . \"\\n\";", "\t$fib4 = [0, 0, 2, 0];\n\tif ($n <= 3) {\n\t\treturn $fib4[$n];\n\
    \t}\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$fib4[$i] = $fib4[$i - 1] + $fib4[$i\
    \ - 2] + $fib4[$i - 3] + $fib4[$i - 4];\n\t}\n\treturn $fib4[$n];\n}\n\necho fib4(5);\n\
    echo \"\\n\";\necho fib4(6);\necho \"\\n\";\necho fib4(7);\necho \"\\n\";", "\t\
    $a = 0;\n\t$b = 0;\n\t$c = 2;\n\t$d = 0;\n\tif ($n <= 3) {\n\t\tif ($n == 0) {\n\
    \t\t\treturn 0;\n\t\t} else if ($n == 1) {\n\t\t\treturn 0;\n\t\t} else if ($n\
    \ == 2) {\n\t\t\treturn 2;\n\t\t} else if ($n == 3) {\n\t\t\treturn 0;\n\t\t}\n\
    \t}\n\tfor ($i = 0; $i < $n-3; $i++) {\n\t\t$e = $a + $b + $c + $d;\n\t\t$a =\
    \ $b;\n\t\t$b = $c;\n\t\t$c = $d;\n\t\t$d = $e;\n\t}\n\treturn $e;\n}\nprint fib4(5)\
    \ . \"\\n\";\nprint fib4(6) . \"\\n\";\nprint fib4(7) . \"\\n\";\n", "    $fib4\
    \ = array();\n    $fib4[0] = 0;\n    $fib4[1] = 0;\n    $fib4[2] = 2;\n    $fib4[3]\
    \ = 0;\n    if ($n < 4) {\n        return $fib4[$n];\n    }\n    for ($i = 4;\
    \ $i <= $n; $i++) {\n        $fib4[$i] = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3]\
    \ + $fib4[$i-4];\n    }\n    return $fib4[$n];\n}\necho fib4(5).\"\\n\";\necho\
    \ fib4(6).\"\\n\";\necho fib4(7).\"\\n\";\n", "\t$a = 0;\n\t$b = 0;\n\t$c = 2;\n\
    \t$d = 0;\n\t$e = 0;\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\t$e = $a + $b + $c\
    \ + $d;\n\t\t$a = $b;\n\t\t$b = $c;\n\t\t$c = $d;\n\t\t$d = $e;\n\t}\n\treturn\
    \ $e;\n}\n\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\
    \\n\";", "    if ($n <= 3) {\n        return 0;\n    }\n    if ($n == 4) {\n \
    \       return 2;\n    }\n    $lastN = 2;\n    $last2 = 0;\n    $last3 = 0;\n\
    \    $last4 = 0;\n    for ($i = 5; $i <= $n; $i++) {\n        $newN = $lastN +\
    \ $last2 + $last3 + $last4;\n        $last4 = $last3;\n        $last3 = $last2;\n\
    \        $last2 = $lastN;\n        $lastN = $newN;\n    }\n    return $lastN;\n\
    }\nprint_r(fib4(0));\nprint_r(fib4(1));\nprint_r(fib4(2));\nprint_r(fib4(3));\n\
    print_r(fib4(4));\nprint_r(fib4(5));\nprint_r(fib4(6));\nprint_r(fib4(7));\nprint_r(fib4(8));\n\
    print_r(fib4(9));\nprint_r(fib4(10));\nprint_r(fib4(11));\nprint_r(fib4(12));\n\
    print_r(fib4(13));\nprint_r(fib4(14));\nprint_r(fib4(15));\nprint_r(fib4(16));\n\
    print_r(fib4(17));\nprint_r(fib4(18));\nprint_r(fib4(19));\nprint_r(fib4(20));\n\
    print_r(fib4(21));\nprint_r(fib4(22));\nprint_r(fib4(23));\nprint_r(fib4(24));\n\
    print_r(fib4(25));\nprint_r(fib4(26));\nprint_r(fib4(27));\nprint_r(fib4(28));\n\
    print_r(fib4(29));\nprint_r(fib4(30));\nprint_r(fib4(31));\nprint", "    $d =\
    \ 0;\n    $c = 0;\n    $b = 0;\n    $a = 0;\n    $f = 2;\n    for ($i = 2; $i\
    \ <= $n; $i++) {\n        $d = $c;\n        $c = $b;\n        $b = $a;\n     \
    \   $a = $f;\n        $f = $a + $b + $c + $d;\n    }\n    return $f;\n}\n\necho\
    \ fib4(5) . PHP_EOL;\necho fib4(6) . PHP_EOL;\necho fib4(7) . PHP_EOL;", "   \
    \ if ($n == 0) return 0;\n    $f = new SplFixedArray(4);\n    $f[0] = 0;\n   \
    \ $f[1] = 0;\n    $f[2] = 2;\n    $f[3] = 0;\n    for ($i = 3; $i < $n; $i++)\
    \ {\n        $f[3] = $f[0] + $f[1] + $f[2] + $f[3];\n        $f[0] = $f[1];\n\
    \        $f[1] = $f[2];\n        $f[2] = $f[3];\n    }\n    return $f[3];\n}\n\
    \necho fib4(5) . PHP_EOL;\necho fib4(6) . PHP_EOL;\necho fib4(7) . PHP_EOL;",
  "\n}\n\nassert(true);", "    $fib4 = array(0, 0, 2, 0);\n    for ($i = 4; $i <=\
    \ $n; $i++) {\n        $fib4[$i] = $fib4[$i - 1] + $fib4[$i - 2] + $fib4[$i -\
    \ 3] + $fib4[$i - 4];\n    }\n    return $fib4[$n];\n}\n\necho fib4(5) . \"\\\
    n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "    $fib = array(0,\
    \ 0, 2, 0);\n    $index = 4;\n    while ($index <= $n) {\n        $fib[$index\
    \ % 4] = $fib[($index - 1) % 4] + $fib[($index - 2) % 4] + $fib[($index - 3) %\
    \ 4] + $fib[($index - 4) % 4];\n        $index++;\n    }\n    return $fib[$n %\
    \ 4];\n}\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\\
    n\";", "\tif ($n == 0) return 0;\n\t$fibs = array(0, 0, 2, 0);\n\tfor ($i = 4;\
    \ $i <= $n; $i++) {\n\t\t$fibs[$i % 4] = $fibs[0] + $fibs[1] + $fibs[2] + $fibs[3];\n\
    \t}\n\treturn $fibs[$n % 4];\n}\n\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\\
    n\";\necho fib4(7) . \"\\n\";", "  if ($n <= 3) {\n    return $n - 1;\n  }\n \
    \ $prev1 = 0;\n  $prev2 = 0;\n  $prev3 = 1;\n  $prev4 = 2;\n  $value = 3;\n  for\
    \ ($i = 4; $i <= $n; $i++) {\n    $value = $prev1 + $prev2 + $prev3 + $prev4;\n\
    \    $prev1 = $prev2;\n    $prev2 = $prev3;\n    $prev3 = $prev4;\n    $prev4\
    \ = $value;\n  }\n  return $value;\n}\n", "\t$fib = [0, 0, 2, 0];\n\tif ($n <\
    \ 4) return $fib[$n];\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$fib[$i%4] = $fib[($i-1)%4]\
    \ + $fib[($i-2)%4] + $fib[($i-3)%4] + $fib[($i-4)%4];\n\t}\n\treturn $fib[$n%4];\n\
    }\n", "  $i = 0;\n  $fib = array(0, 0, 2, 0);\n  while ($i < $n) {\n    $fib[3]\
    \ = $fib[0] + $fib[1] + $fib[2] + $fib[3];\n    $fib[0] = $fib[1];\n    $fib[1]\
    \ = $fib[2];\n    $fib[2] = $fib[3];\n    $i++;\n  }\n  return $fib[3];\n}", " \
    \   $val = array(0, 0, 2, 0);\n    for ($i = 3; $i < $n; $i++) {\n        $val[$i\
    \ % 4] = array_sum($val);\n    }\n    return $val[$n % 4];\n}\n", "    $a = 0;\n\
    \    $b = 0;\n    $c = 2;\n    $d = 0;\n    for ($i = 2; $i < $n; $i++) {\n  \
    \      $new = $b + $c + $d + $a;\n        $a = $b;\n        $b = $c;\n       \
    \ $c = $d;\n        $d = $new;\n    }\n    return $b + $c + $d + $a;\n}\n\n$fib\
    \ = fib4(7);\necho $fib;", "    $number = 0;\n    if ($n <= 3) {\n        return\
    \ $number;\n    }\n    if ($n == 4) {\n        return 2;\n    }\n    $fib4_4 =\
    \ 0;\n    $fib4_3 = 0;\n    $fib4_2 = 2;\n    $fib4_1 = 0;\n    for ($i = 5; $i\
    \ <= $n; $i++) {\n        $number = $fib4_4 + $fib4_3 + $fib4_2 + $fib4_1;\n \
    \       $fib4_4 = $fib4_3;\n        $fib4_3 = $fib4_2;\n        $fib4_2 = $fib4_1;\n\
    \        $fib4_1 = $number;\n    }\n    return $number;\n}\nprint fib4(5);\nprint\
    \ \"\\n\";\nprint fib4(6);\nprint \"\\n\";\nprint fib4(7);\nprint \"\\n\";\nprint\
    \ fib4(8);\nprint \"\\n\";\nprint fib4(9);\nprint \"\\n\";", "    if ($n < 0)\
    \ {\n        return 0;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 2;\n    $d =\
    \ 0;\n    for ($i = 3; $i <= $n; $i++) {\n        $tmp = $a + $b + $c + $d;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n        $d = $tmp;\n  \
    \  }\n    return $a + $b + $c + $d;\n}\necho fib4(7) . PHP_EOL;", "    // TODO:\n\
    }\n", "    if ($n == 0) {\n        return 0;\n    } else if ($n == 1) {\n    \
    \    return 0;\n    } else if ($n == 2) {\n        return 2;\n    } else if ($n\
    \ == 3) {\n        return 0;\n    } else {\n        $last = $penultimate = $threeBago\
    \ = $fourBago = 0;\n        for ($i = 4; $i <= $n; $i++) {\n            $fourBago\
    \ = $threeBago;\n            $threeBago = $penultimate;\n            $penultimate\
    \ = $last;\n            $last = $fourBago + $threeBago + $penultimate + $last;\n\
    \        }\n        return $last;\n    }\n}\n\necho fib4(5) . \"\\n\";\necho fib4(6)\
    \ . \"\\n\";\necho fib4(7) . \"\\n\";\n", "  $cache = [0, 0, 2, 0];\n  for ($i\
    \ = 4; $i <= $n; $i++) {\n    $cache[$i % 4] = $cache[($i - 1) % 4] + $cache[($i\
    \ - 2) % 4] + $cache[($i - 3) % 4] + $cache[($i - 4) % 4];\n  }\n  return $cache[$n\
    \ % 4];\n}\nvar_dump(fib4(5) === 4);\nvar_dump(fib4(6) === 8);\nvar_dump(fib4(7)\
    \ === 14);\nvar_dump(fib4(8) === 26);\nvar_dump(fib4(9) === 46);\nvar_dump(fib4(10)\
    \ === 80);\nvar_dump(fib4(11) === 136);\nvar_dump(fib4(12) === 232);\nvar_dump(fib4(13)\
    \ === 392);\nvar_dump(fib4(14) === 648);\nvar_dump(fib4(15) === 1072);\nvar_dump(fib4(16)\
    \ === 1768);\nvar_dump(fib4(17) === 2912);\nvar_dump(fib4(18) === 4808);\nvar_dump(fib4(19)\
    \ === 7920);\nvar_dump(fib4(20) === 12992);\nvar_dump(fib4(21) === 21224);\nvar_dump(fib4(22)\
    \ === 34816);\nvar_dump(fib4(23) === 57128);\nvar_dump(fib4(24) === 93224);\n\
    var_dump(fib4(25) === 152752);\nvar_dump(fib4(26) === 249776);\nvar_dump(fib4(27)\
    \ === 407480);\nvar_dump(fib4(28) === 657952);\nvar_dump(fib4(29) === 1070544);\n\
    var_dump(fib4(30) === 1740992);\nvar_dump(fib4(31) === 2829504);\nvar_", "   \
    \ $fib = array(0, 0, 2, 0);\n    for ($i = 4; $i <= $n; $i++) {\n        $fib[$i%4]\
    \ = $fib[($i-1)%4] + $fib[($i-2)%4] + $fib[($i-3)%4] + $fib[($i-4)%4];\n    }\n\
    \    return $fib[$n%4];\n}\n\nvar_dump(fib4(0));\nvar_dump(fib4(1));\nvar_dump(fib4(2));\n\
    var_dump(fib4(3));\nvar_dump(fib4(4));\nvar_dump(fib4(5));\nvar_dump(fib4(6));\n\
    var_dump(fib4(7));\nvar_dump(fib4(8));\nvar_dump(fib4(9));\nvar_dump(fib4(10));\n\
    \n/**\n * \u76F8\u5F53\u4E8Efib(1)~fib(n)%4\n */", "    $fib4 = array(0, 0, 2,\
    \ 0);\n    for ($i = 4; $i <= $n; $i++) {\n        $fib4[$i % 4] = $fib4[($i-1)\
    \ % 4] + $fib4[($i-2) % 4] + $fib4[($i-3) % 4] + $fib4[($i-4) % 4];\n    }\n \
    \   return $fib4[$n % 4];\n}\n\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\"\
    ;\necho fib4(7) . \"\\n\";", "    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 2;\n    }\n    if ($n == 3) {\n        return 0;\n    }\n    $a = 0;\n    $b\
    \ = 0;\n    $c = 2;\n    $d = 0;\n    for ($i = 4; $i <= $n; $i++) {\n       \
    \ $e = $a + $b + $c + $d;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n\
    \        $d = $e;\n    }\n    return $e;\n}\n", "    $fib = [0, 0, 2, 0];\n  \
    \  for ($i = 3; $i < $n; $i++) {\n        $fib[$i % 4] = array_sum(array_slice($fib,\
    \ max(0, $i - 4), min($i, 4)));\n    }\n    return $fib[$n % 4];\n}\n\necho fib4(5)\
    \ . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "    $a = 0;\n\
    \    $b = 0;\n    $c = 2;\n    $d = 0;\n    $count = 0;\n    while ($count < $n\
    \ - 3) {\n        $d = $a + $b + $c;\n        $a = $b;\n        $b = $c;\n   \
    \     $c = $d;\n        $count += 1;\n    }\n    return $d;\n}\n", "\n}", "  if\
    \ ($n <= 1) {\n    return 0;\n  }\n  if ($n == 2) {\n    return 2;\n  }\n  $fib4\
    \ = array(0, 0, 2, 0);\n  for ($i = 3; $i < $n; $i++) {\n    $fib4[$i%4] = $fib4[($i-1)%4]\
    \ + $fib4[($i-2)%4] + $fib4[($i-3)%4] + $fib4[($i-4)%4];\n  }\n  return $fib4[($n-1)%4];\n\
    }\necho fib4(5).\"\\n\";\necho fib4(6).\"\\n\";\necho fib4(7).\"\\n\";", "  $fibs\
    \ = [0, 0, 2, 0];\n  if ($n < 4) {\n    return $fibs[$n];\n  }\n  for ($i = 4;\
    \ $i <= $n; $i++) {\n    $fibs[$i % 4] = array_sum(array_slice($fibs, $i - 4));\n\
    \  }\n  return $fibs[$n % 4];\n}\n", "\tif ($n < 0)\n\t\treturn -1;\n\tif ($n\
    \ < 3)\n\t\treturn $n * 2;\n\t$first = 1;\n\t$second = 2;\n\t$third = 4;\n\t$fourth\
    \ = 8;\n\t$result = $fourth;\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$result =\
    \ $first + $second + $third + $fourth;\n\t\t$first = $second;\n\t\t$second = $third;\n\
    \t\t$third = $fourth;\n\t\t$fourth = $result;\n\t}\n\treturn $result;\n}\necho\
    \ fib4(5);\necho \"\\n\";\necho fib4(6);\necho \"\\n\";\necho fib4(7);\necho \"\
    \\n\";", "    $result = 0;\n    $count = $n;\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    $cache = [0, 0, 2, 0];\n    while ($count > 3) {\n        $fib4_temp\
    \ = 0;\n        $fib4_temp += $cache[3];\n        $fib4_temp += $cache[2];\n \
    \       $fib4_temp += $cache[1];\n        $fib4_temp += $cache[0];\n        $cache[0]\
    \ = $cache[1];\n        $cache[1] = $cache[2];\n        $cache[2] = $cache[3];\n\
    \        $cache[3] = $fib4_temp;\n        $count--;\n    }\n    return $cache[3];\n\
    }\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";",
  "    $a = 0;\n    $b = 0;\n    $c = 2;\n    $d = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $e = $d;\n        $d = $c;\n        $c = $b;\n        $b = $a;\n\
    \        $a = $e + $d + $c + $b;\n    }\n    return $d;\n}\necho fib4(5) . \"\\\
    n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";", "    if ($n <= 3) {\n\
    \        return [0,0,2,0][$n];\n    }\n    $a = 0;\n    $b = 0;\n    $c = 2;\n\
    \    $d = 0;\n    for ($i = 4; $i <= $n; $i++) {\n        $e = $a + $b + $c +\
    \ $d;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n        $d = $e;\n\
    \    }\n    return $e;\n}", "    if($n == 0) return 0;\n    if($n == 1) return\
    \ 0;\n    if($n == 2) return 2;\n    if($n == 3) return 0;\n    $arr = array(0,0,2,0);\n\
    \    for($i = 4; $i <= $n; $i++) {\n        $arr[$i%4] = $arr[($i-1)%4] + $arr[($i-2)%4]\
    \ + $arr[($i-3)%4] + $arr[($i-4)%4];\n    }\n    return $arr[$n%4];\n}\n", " \
    \   $fib4 = [0, 0, 2, 0];\n    for ($i = 4; $i <= $n; $i++) {\n        $fib4[$i\
    \ % 4] = $fib4[($i - 1) % 4] + $fib4[($i - 2) % 4] + $fib4[($i - 3) % 4] + $fib4[($i\
    \ - 4) % 4];\n    }\n    return $fib4[$n % 4];\n}\n\necho \"fib4(5) = \".fib4(5).\"\
    \\n\";\necho \"fib4(6) = \".fib4(6).\"\\n\";\necho \"fib4(7) = \".fib4(7).\"\\\
    n\";\necho \"fib4(20) = \".fib4(20).\"\\n\";\necho \"fib4(30) = \".fib4(30).\"\
    \\n\";\necho \"fib4(40) = \".fib4(40).\"\\n\";\necho \"fib4(50) = \".fib4(50).\"\
    \\n\";\n", "    if($n < 0) {\n        return -1;\n    }\n    if($n == 0) {\n \
    \       return 0;\n    }\n    if($n == 1) {\n        return 0;\n    }\n    if($n\
    \ == 2) {\n        return 2;\n    }\n    if($n == 3) {\n        return 0;\n  \
    \  }\n    $n_minus_one = 0;\n    $n_minus_two = 0;\n    $n_minus_three = 2;\n\
    \    $n_minus_four = 0;\n    $current = 0;\n    for($i = 4; $i <= $n; $i++) {\n\
    \        $current = $n_minus_one + $n_minus_two + $n_minus_three + $n_minus_four;\n\
    \        $n_minus_four = $n_minus_three;\n        $n_minus_three = $n_minus_two;\n\
    \        $n_minus_two = $n_minus_one;\n        $n_minus_one = $current;\n    }\n\
    \    return $current;\n}\nprint fib4(5) . \"\\n\";\nprint fib4(6) . \"\\n\";\n\
    print fib4(7) . \"\\n\";", "\tif ($n <= 1) {\n\t\treturn 0;\n\t} else if ($n ==\
    \ 2) {\n\t\treturn 2;\n\t} else if ($n == 3) {\n\t\treturn 0;\n\t} else {\n\t\t\
    $f = [0, 0, 2, 0];\n\t\t$fn = 3;\n\t\twhile ($fn < $n) {\n\t\t\t$f[0] = $f[1];\n\
    \t\t\t$f[1] = $f[2];\n\t\t\t$f[2] = $f[3];\n\t\t\t$f[3] = $f[0] + $f[1] + $f[2]\
    \ + $f[3];\n\t\t\t$fn++;\n\t\t}\n\t\treturn $f[3];\n\t}\n}", "    if ($n < 0)\
    \ {\n        return null;\n    }\n\n    if ($n == 0) {\n        return 0;\n  \
    \  }\n\n    if ($n == 1) {\n        return 0;\n    }\n\n    if ($n == 2) {\n \
    \       return 2;\n    }\n\n    if ($n == 3) {\n        return 0;\n    }\n\n \
    \   $values = array();\n    $values[0] = 0;\n    $values[1] = 0;\n    $values[2]\
    \ = 2;\n    $values[3] = 0;\n\n    for ($i = 4; $i <= $n; $i++) {\n        $values[$i]\
    \ = $values[$i - 1] + $values[$i - 2] + $values[$i - 3] + $values[$i - 4];\n \
    \   }\n\n    return $values[$n];\n}\n", "    // your code here\n}\n", "    $cache\
    \ = array();\n    $cache[0] = 0;\n    $cache[1] = 0;\n    $cache[2] = 2;\n   \
    \ $cache[3] = 0;\n    for ($i = 4; $i <= $n; $i++) {\n        $cache[$i] = $cache[$i-1]\
    \ + $cache[$i-2] + $cache[$i-3] + $cache[$i-4];\n    }\n    return $cache[$n];\n\
    }\n\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";\necho fib4(8) . \"\\n\"\
    ;\necho fib4(9) . \"\\n\";\necho fib4(15) . \"\\n\";\necho fib4(5) . \"\\n\";\n\
    echo fib4(1) . \"\\n\";\necho fib4(2) . \"\\n\";\necho fib4(3) . \"\\n\";\necho\
    \ fib4(4) . \"\\n\";\necho fib4(0) . \"\\n\";\n", "    $nums = [0, 0, 2, 0];\n\
    \    if ($n < 4) {\n        return $nums[$n];\n    }\n    for ($i = 4; $i <= $n;\
    \ $i++) {\n        $nums[$i % 4] = $nums[($i - 1) % 4] + $nums[($i - 2) % 4] +\
    \ $nums[($i - 3) % 4] + $nums[($i - 4) % 4];\n    }\n    return $nums[$n % 4];\n\
    }\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\";\necho fib4(7) . \"\\n\";",
  "\n}\n", "  if ($n < 0) {\n    return -1;\n  }\n  if ($n == 0) {\n    return 0;\n\
    \  }\n  if ($n == 1) {\n    return 0;\n  }\n  if ($n == 2) {\n    return 2;\n\
    \  }\n  if ($n == 3) {\n    return 0;\n  }\n  $lastFour = array(0, 0, 2, 0);\n\
    \  for ($i = 4; $i <= $n; $i++) {\n    $lastFour[0] = $lastFour[1];\n    $lastFour[1]\
    \ = $lastFour[2];\n    $lastFour[2] = $lastFour[3];\n    $lastFour[3] = $lastFour[0]\
    \ + $lastFour[1] + $lastFour[2] + $lastFour[3];\n  }\n  return $lastFour[3];\n\
    }\n", "    $arr = [0, 0, 2, 0];\n    if($n < 4) {\n        return $arr[$n];\n\
    \    }\n    for($i = 4; $i <= $n; $i++) {\n        $arr[$i % 4] = $arr[($i - 1)\
    \ % 4] + $arr[($i - 2) % 4] + $arr[($i - 3) % 4] + $arr[($i - 4) % 4];\n    }\n\
    \    return $arr[$n % 4];\n}\necho fib4(5);\necho fib4(6);\necho fib4(7);\n",
  "    // Your code here\n    if ($n == 0) {\n        return 0;\n    } elseif ($n\
    \ == 1) {\n        return 0;\n    } elseif ($n == 2) {\n        return 2;\n  \
    \  } elseif ($n == 3) {\n        return 0;\n    }\n    $sequence = [0, 0, 2, 0];\n\
    \    for ($i = 4; $i <= $n; $i++) {\n        $sequence[$i % 4] = ($sequence[($i\
    \ - 1) % 4] + $sequence[($i - 2) % 4] + $sequence[($i - 3) % 4] + $sequence[($i\
    \ - 4) % 4]);\n    }\n    return $sequence[$n % 4];\n}", "    if ($n <= 3) return\
    \ $n * 0;\n    else if ($n == 4) return 2;\n    else {\n        $sum = 0;\n  \
    \      $first = 0;\n        $second = 0;\n        $third = 0;\n        $fourth\
    \ = 2;\n        for ($i = 5; $i <= $n; $i++) {\n            $sum = $first + $second\
    \ + $third + $fourth;\n            $first = $second;\n            $second = $third;\n\
    \            $third = $fourth;\n            $fourth = $sum;\n        }\n     \
    \   return $sum;\n    }\n}\n", "    // Your code here\n    if ($n === 0) {\n \
    \       return 0;\n    }\n    if ($n === 1) {\n        return 0;\n    }\n    if\
    \ ($n === 2) {\n        return 2;\n    }\n    if ($n === 3) {\n        return\
    \ 0;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 2;\n    $d = 0;\n    for ($i =\
    \ 4; $i <= $n; $i++) {\n        $temp = $a + $b + $c + $d;\n        $a = $b;\n\
    \        $b = $c;\n        $c = $d;\n        $d = $temp;\n    }\n    return $d;\n\
    }", "    $fibs = [0, 0, 2, 0];\n    for ($i = 3; $i < $n; $i++) {\n        $fibs[$i\
    \ % 4] = $fibs[($i - 1) % 4] + $fibs[($i - 2) % 4] + $fibs[($i - 3) % 4] + $fibs[($i\
    \ - 4) % 4];\n    }\n    return $fibs[($n - 1) % 4];\n}\necho fib4(5) . PHP_EOL;\n\
    echo fib4(6) . PHP_EOL;\necho fib4(7) . PHP_EOL;", "    if ($n == 0) {\n     \
    \   return 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n\
    \ == 2) {\n        return 2;\n    } else if ($n == 3) {\n        return 0;\n \
    \   } else {\n        $a = $b = $c = $d = 0;\n        for ($i = 4; $i <= $n; $i++)\
    \ {\n            $e = $a + $b + $c + $d;\n            $a = $b;\n            $b\
    \ = $c;\n            $c = $d;\n            $d = $e;\n        }\n        return\
    \ $e;\n    }\n}\n", "\t$fib4_arr = array(0, 0, 2, 0);\n\tif ($n <= 3) {\n\t\t\
    return $fib4_arr[$n];\n\t}\n\t\n\t$result = $fib4_arr[3];\n\t$prev1 = $fib4_arr[2];\n\
    \t$prev2 = $fib4_arr[1];\n\t$prev3 = $fib4_arr[0];\n\tfor ($i = 4; $i <= $n; $i++)\
    \ {\n\t\t$result = $prev1 + $prev2 + $prev3 + $result;\n\t\t$prev3 = $prev2;\n\
    \t\t$prev2 = $prev1;\n\t\t$prev1 = $result;\n\t}\n\treturn $result;\n}\n", " \
    \   $prev1 = 0;\n    $prev2 = 0;\n    $prev3 = 2;\n    $prev4 = 0;\n    $result\
    \ = 0;\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n   \
    \     return 0;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n\
    \ == 3) {\n        return 0;\n    }\n    for ($i = 4; $i <= $n; $i++) {\n    \
    \    $result = $prev1 + $prev2 + $prev3 + $prev4;\n        $prev1 = $prev2;\n\
    \        $prev2 = $prev3;\n        $prev3 = $prev4;\n        $prev4 = $result;\n\
    \    }\n    return $result;\n}\necho fib4(5) . \"\\n\";\necho fib4(6) . \"\\n\"\
    ;\necho fib4(7) . \"\\n\";", "\tif($n == 0) {\n\t\treturn 0;\n\t}\n\telse if($n\
    \ == 1) {\n\t\treturn 0;\n\t}\n\telse if($n == 2) {\n\t\treturn 2;\n\t}\n\telse\
    \ if($n == 3) {\n\t\treturn 0;\n\t}\n\telse {\n\t\t$a = 0;\n\t\t$b = 0;\n\t\t\
    $c = 2;\n\t\t$d = 0;\n\t\tfor($i = 3; $i < $n; $i++) {\n\t\t\t$e = $a + $b + $c\
    \ + $d;\n\t\t\t$a = $b;\n\t\t\t$b = $c;\n\t\t\t$c = $d;\n\t\t\t$d = $e;\n\t\t\
    }\n\t\treturn $a + $b + $c + $d;\n\t}\n}\necho fib4(5) . \"\\n\";\necho fib4(6)\
    \ . \"\\n\";\necho fib4(7) . \"\\n\";\n", "    // YOUR CODE HERE\n}", "\t// your\
    \ code here\n}\n", "\t$fib4_cache = [0, 0, 2, 0];\n\tif (isset($fib4_cache[$n]))\
    \ {\n\t\treturn $fib4_cache[$n];\n\t} else {\n\t\tfor ($i = count($fib4_cache);\
    \ $i <= $n; $i++) {\n\t\t\t$fib4_cache[$i] = $fib4_cache[$i-1] + $fib4_cache[$i-2]\
    \ + $fib4_cache[$i-3] + $fib4_cache[$i-4];\n\t\t}\n\t\treturn $fib4_cache[$n];\n\
    \t}\n}", "\tif ($n == 0) {\n\t\treturn 0;\n\t}\n\tif ($n == 1) {\n\t\treturn 0;\n\
    \t}\n\tif ($n == 2) {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 0;\n\t\
    }\n\tif ($n > 3) {\n\t\treturn (fib4($n-1) + fib4($n-2) + fib4($n-3) + fib4($n-4));\n\
    \t}\n}\necho fib4(7);", "\t$fib4n = [0, 0, 2, 0];\n\tfor ($i = 4; $i <= $n; $i++)\
    \ {\n\t\t$fib4n[$i%4] = $fib4n[($i+3)%4] + $fib4n[($i+2)%4] + $fib4n[($i+1)%4]\
    \ + $fib4n[$i%4];\n\t}\n\treturn $fib4n[$n%4];\n}\necho fib4(5) . PHP_EOL;\necho\
    \ fib4(6) . PHP_EOL;\necho fib4(7) . PHP_EOL;\n\necho PHP_EOL;\n", "    $arr =\
    \ array(0, 0, 2, 0);\n    for ($i = 4; $i <= $n; $i++) {\n        $arr[$i % 4]\
    \ = $arr[($i - 1) % 4] + $arr[($i - 2) % 4] + $arr[($i - 3) % 4] + $arr[($i -\
    \ 4) % 4];\n    }\n    return $arr[$n % 4];\n}\n", "\tif ($n < 0) {\n\t\treturn\
    \ 0;\n\t}\n\t$fib = array();\n\t$fib[0] = 0;\n\t$fib[1] = 0;\n\t$fib[2] = 2;\n\
    \t$fib[3] = 0;\n\tfor ($i = 4; $i <= $n; $i++) {\n\t\t$fib[$i] = $fib[$i-1] +\
    \ $fib[$i-2] + $fib[$i-3] + $fib[$i-4];\n\t}\n\treturn $fib[$n];\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_134_check_if_last_char_is_a_letter
language: php
results:
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $txtLength = strlen($txt);\n\
    \    $lastChar = $txt[$txtLength - 1];\n    return preg_match(\"/[a-zA-Z]/\",\
    \ $lastChar) && !preg_match(\"/\\w/\", $lastChar);\n}\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplpvbpii_.php:22\n\
    Stack trace:\n#0 /tmp/tmplpvbpii_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplpvbpii_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last = substr($txt, -1);\n\
    \  if(ctype_alpha($last) && $last == \" \"){\n    return false;\n  }else{\n  \
    \  return true;\n  }\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"\
    <br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\");\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>1<br>1<br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpkv_fetod.php:32\nStack trace:\n#0 /tmp/tmpkv_fetod.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpkv_fetod.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$new_txt = trim($txt);\n\t\
    $last_char = substr($new_txt, -1);\n\tif($last_char == \" \"){\n\t\treturn False;\n\
    \t}\n\tif(ctype_alpha($last_char)){\n\t\treturn True;\n\t}\n\telse{\n\t\treturn\
    \ False;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80xh22g2.php:30\n\
    Stack trace:\n#0 /tmp/tmp80xh22g2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp80xh22g2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif(empty($txt)) return false;\n\
    \t$word = explode(\" \",$txt);\n\t$lastword = end($word);\n\t$lastword = str_split($lastword);\n\
    \t$lastchar = end($lastword);\n\tif(preg_match(\"/[a-zA-Z]/\",$lastchar)){\n\t\
    \tif(strlen($lastword) === 1) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: strlen() expects parameter 1 to be string, array given in /tmp/tmp0a796orx.php\
    \ on line 18\n\n\nWarning: strlen() expects parameter 1 to be string, array given\
    \ in /tmp/tmp0a796orx.php on line 18\n\n\n\n\nWarning: strlen() expects parameter\
    \ 1 to be string, array given in /tmp/tmp0a796orx.php on line 18\n\nWarning: strlen()\
    \ expects parameter 1 to be string, array given in /tmp/tmp0a796orx.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a796orx.php:37\n\
    Stack trace:\n#0 /tmp/tmp0a796orx.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp0a796orx.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn ctype_alpha($last) && strpos($txt, ' ') === strlen($txt) - 1;\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\") ? 'True' : 'False';\necho \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") ? 'True' : 'False';\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") ? 'True' :\
    \ 'False';\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\") ? 'True'\
    \ : 'False';\necho \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFalse\nFalse\nFalse\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp2rsrftsz.php:29\nStack trace:\n#0 /tmp/tmp2rsrftsz.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2rsrftsz.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (empty($txt)) {\n    \
    \    return False;\n    } else {\n        $lastChar = substr($txt, -1);\n    \
    \    if (preg_match('/[a-zA-Z]/', $lastChar)) {\n            return True;\n  \
    \      } else {\n            return False;\n        }\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    a\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgetibsz.php:29\n\
    Stack trace:\n#0 /tmp/tmppgetibsz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppgetibsz.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if ($txt == \"\") {\n   \
    \     return False;\n    } elseif (ctype_alpha(substr($txt, -1)) == True && $txt[-1]\
    \ == \" \") {\n        return True;\n    } else {\n        return False;\n   \
    \ }\n}\n\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_te0l29.php:27\n\
    Stack trace:\n#0 /tmp/tmpz_te0l29.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz_te0l29.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastCharacter = substr($txt,\
    \ -1);\n    $result = false;\n    if(ctype_alpha($lastCharacter) && ($lastCharacter\
    \ == \" \" || preg_match(\"/\\w+\\s/\", $txt))){\n        $result = true;\n  \
    \  }\n    return $result;\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    );\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmspntjg.php:28\n\
    Stack trace:\n#0 /tmp/tmpzmspntjg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzmspntjg.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastchar = $txt[strlen($txt)-1];\n\
    \tif($lastchar === \" \" || preg_match(\"/[a-zA-Z]/\", $lastchar) == 0) {\n\t\t\
    return false;\n\t} else {\n\t\treturn true;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdmtl057.php:28\n\
    Stack trace:\n#0 /tmp/tmpzdmtl057.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzdmtl057.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $txtArr = str_split($txt);\n\
    \    $lastLetter = array_pop($txtArr);\n    $currentLetter = '';\n    for ($i\
    \ = count($txtArr) - 1; $i >= 0; $i--) {\n        if ($txtArr[$i] == ' ') {\n\
    \            break;\n        }\n        $currentLetter = $txtArr[$i];\n    }\n\
    \    if ($currentLetter == $lastLetter) {\n        return false;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yvd0ons.php:31\n\
    Stack trace:\n#0 /tmp/tmp8yvd0ons.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8yvd0ons.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif ($txt === \"\") {\n\t\t\
    return false;\n\t}\n\t$lastChar = substr($txt, -1);\n\tif (preg_match(\"/[a-zA-Z]/\"\
    , $lastChar)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_wbmkrdj.php:30\n\
    Stack trace:\n#0 /tmp/tmp_wbmkrdj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_wbmkrdj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $length = strlen($txt);\n\
    \    if ($length == 0) return false;\n    if ($txt[$length - 1] != \" \") return\
    \ true;\n    return false;\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5yzoe1_9.php:22\n\
    Stack trace:\n#0 /tmp/tmp5yzoe1_9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5yzoe1_9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (preg_match(\"/^[a-zA-Z]$/\"\
    , substr($txt, -1))) {\n        return true;\n    }\n    return false;\n}\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk08hz8t.php:22\n\
    Stack trace:\n#0 /tmp/tmplk08hz8t.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplk08hz8t.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    return strlen($txt) == 0\
    \ ? false : !ctype_alpha(strrev($txt)[0]);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu94mncd3.php:24\n\
    Stack trace:\n#0 /tmp/tmpu94mncd3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu94mncd3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last = $txt[strlen($txt) -\
    \ 1];\n  return !ctype_alpha($last) || ctype_alpha($txt[strlen($txt) - 2]);\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplal4w0ir.php:24\n\
    Stack trace:\n#0 /tmp/tmplal4w0ir.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplal4w0ir.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $len = strlen($txt);\n  \
    \  $last = $txt[$len - 1];\n    $last2 = $txt[$len - 2];\n    if ($len > 0 &&\
    \ !ctype_alpha($last) && ctype_alpha($last2)) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\
    <br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzb496hqw.php:31\n\
    Stack trace:\n#0 /tmp/tmpzb496hqw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzb496hqw.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  if (strlen($txt) > 0) {\n \
    \   $str = $txt[strlen($txt) - 1];\n    $str = str_replace(\" \", \"\", $str);\n\
    \    if (ctype_alpha($str)) {\n      return true;\n    } else {\n      return\
    \ false;\n    }\n  } else {\n    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejbzvw5b.php:33\n\
    Stack trace:\n#0 /tmp/tmpejbzvw5b.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpejbzvw5b.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastChar = substr($txt,\
    \ -1);\n    if (preg_match(\"/^[a-z]$/i\", $lastChar)) {\n        $isLetter =\
    \ true;\n    } else {\n        $isLetter = false;\n    }\n    if (preg_match(\"\
    /\\w$/\", $lastChar)) {\n        $isPartOfWord = true;\n    } else {\n       \
    \ $isPartOfWord = false;\n    }\n    if ($isLetter && !$isPartOfWord) {\n    \
    \    return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh7q__ej.php:39\n\
    Stack trace:\n#0 /tmp/tmpyh7q__ej.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpyh7q__ej.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_chr = substr($txt, -1);\n\
    \tif (ctype_alpha($last_chr) && !preg_match('/[A-Za-z]/', $last_chr)) {\n\t\t\
    return 'True';\n\t} else {\n\t\treturn 'False';\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\"\
    );\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFalse\nFalse\nFalse\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpm1u5_1s0.php:32\nStack trace:\n#0 /tmp/tmpm1u5_1s0.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpm1u5_1s0.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif(preg_match('/^(.*[a-zA-Z])\\\
    s([a-zA-Z])$/', $txt, $matches)){\n\t\treturn false;\n\t}else{\n\t\treturn true;\n\
    \t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\") ;\necho \"<br/>\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e\") ;\necho \"<br/>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ;\necho \"<br/>\";\necho check_if_last_char_is_a_letter(\"\") ;\n\
    function candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br/><br/>1<br/>1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_tcegmg.php:30\n\
    Stack trace:\n#0 /tmp/tmpl_tcegmg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpl_tcegmg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (empty($txt)) {\n    \
    \    return false;\n    }\n    $arr = str_split($txt);\n    $lastChar = end($arr);\n\
    \    if (preg_match('/[a-zA-Z]/', $lastChar)) {\n        if (preg_match('/[a-zA-Z][a-zA-Z]/',\
    \ end($arr) . prev($arr))) {\n            return false;\n        }\n        return\
    \ true;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$words = explode(\" \", $txt);\n\
    \t$last = end($words);\n\tif ($last === \"\" || preg_match(\"/[a-zA-Z]$/\", $last)\
    \ === 0) {\n\t\treturn false;\n\t}\n\treturn true;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp53qvsjtc.php:28\n\
    Stack trace:\n#0 /tmp/tmp53qvsjtc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp53qvsjtc.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  return ctype_alpha(substr($txt,\
    \ -1));\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . PHP_EOL;\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\") . PHP_EOL;\n\
    function candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5sw5d1ok.php:23\n\
    Stack trace:\n#0 /tmp/tmp5sw5d1ok.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5sw5d1ok.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  if ($txt == \"\") {\n    return\
    \ false;\n  }\n  if (ctype_alpha(substr($txt, -1))) {\n    return true;\n  }\n\
    \  return false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"\\n\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"\");\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjrf0dj5d.php:33\n\
    Stack trace:\n#0 /tmp/tmpjrf0dj5d.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjrf0dj5d.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  if($txt[strlen($txt)-1]!=\"\
    \ \" && ctype_alpha($txt[strlen($txt)-1])){\n    return true;\n  }else{\n    return\
    \ false;\n  }\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi8q7nwkl.php:23\n\
    Stack trace:\n#0 /tmp/tmpi8q7nwkl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpi8q7nwkl.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  return ctype_alpha(substr($txt,\
    \ -1)) && !ctype_alpha(substr($txt, -2, 1));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\necho \"<hr>\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<br>1<br><br><br><hr>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpk_acsj5r.php:27\nStack trace:\n#0 /tmp/tmpk_acsj5r.php(36): test()\n\
    #1 {main}\n  thrown in /tmp/tmpk_acsj5r.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $x = \"\";\n    $txt = str_split($txt);\n\
    \    $last_char = end($txt);\n    if(ctype_alpha($last_char) && $last_char !=\
    \ \" \"){\n        $x = true;\n    } else {\n        $x = false;\n    }\n    return\
    \ $x;\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp874hoheu.php:28\n\
    Stack trace:\n#0 /tmp/tmp874hoheu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp874hoheu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $arr = explode(\" \", $txt);\n\
    \  $lastIndex = count($arr) - 1;\n  if (is_numeric($arr[$lastIndex][-1])) {\n\
    \    return false;\n  }\n  return true;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_rdx0dih.php:28\n\
    Stack trace:\n#0 /tmp/tmp_rdx0dih.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_rdx0dih.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = $txt[strlen($txt) -\
    \ 1];\n\treturn ctype_alpha($last) && (strlen($txt) == 1 || ctype_space($txt[strlen($txt)\
    \ - 2]));\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  if(strlen($txt) == 0) {\n \
    \   return false;\n  }\n  $last_character = substr($txt, -1);\n  $last_character_ascii\
    \ = ord($last_character);\n  if ($last_character_ascii > 96 && $last_character_ascii\
    \ < 123) {\n    $last_char_index = strrpos($txt, $last_character);\n    $last_char_index_second_last\
    \ = strrpos($txt, $last_character, ($last_char_index - strlen($txt) - 1));\n \
    \   if($last_char_index_second_last !== false) {\n      return false;\n    }\n\
    \    $last_letter_space_index = strrpos($txt, \" \");\n    if($last_letter_space_index\
    \ == $last_char_index - 1) {\n      return true;\n    }\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70g5uetx.php:36\n\
    Stack trace:\n#0 /tmp/tmp70g5uetx.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp70g5uetx.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif(preg_match(\"/[a-zA-Z]$/\"\
    , $txt)){\n\t\tif(preg_match(\"/\\w$/\", $txt)){\n\t\t\treturn false;\n\t\t}\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4gcjsg0.php:30\n\
    Stack trace:\n#0 /tmp/tmpy4gcjsg0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpy4gcjsg0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn ($txt[strlen($txt)-1]\
    \ !== ' ' && ctype_alpha($txt[strlen($txt)-1]));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? 'True' : 'False';\necho '<br>';\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? 'True' : 'False';\necho '<br>';\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? 'True' : 'False';\necho '<br>';\necho check_if_last_char_is_a_letter(\"\
    \") ? 'True' : 'False';\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True<br>True<br>False<br>False\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp5o42sc_k.php:26\nStack trace:\n#0 /tmp/tmp5o42sc_k.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmp5o42sc_k.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif(preg_match('/[^\\w]$/',\
    \ $txt)){\n\t\treturn \"True\";\n\t}\n\treturn \"False\";\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple\").\"\\n\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFalse\nTrue\nFalse\nFalse\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmptf704qhu.php:27\nStack trace:\n#0 /tmp/tmptf704qhu.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmptf704qhu.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\t$last\
    \ = strlen($txt) - 1;\n\tif (ctype_alpha($txt[$last]) && ctype_alpha($txt[$last\
    \ - 1])) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\ntrue\ntrue\ntrue\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpebtptekd.php:32\nStack trace:\n#0 /tmp/tmpebtptekd.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpebtptekd.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $txt = trim($txt);\n  $result\
    \ = true;\n  if ($txt == '' || $txt[strlen($txt) - 1] == ' ') {\n    $result =\
    \ false;\n  } else {\n    $arr = str_split($txt);\n    $i = 0;\n    while ($arr[$i]\
    \ != ' ' && $i < count($arr)) {\n      $i++;\n    }\n    if ($i != count($arr))\
    \ {\n      $result = false;\n    }\n  }\n  return $result;\n}\necho 'function\
    \ #1' . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pie\") . ' should\
    \ be False' . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ ' should be True' . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \") . ' should be False' . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") . ' should be False' . \"<br>\";\n\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "function #1<br> should be False<br> should be True<br> should be False<br>\
    \ should be False<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpolzw026l.php:39\n\
    Stack trace:\n#0 /tmp/tmpolzw026l.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpolzw026l.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = str_split($txt);\n\t\
    $last = end($txt);\n\t$space = \" \";\n\tif ($last == $space) {\n\t\treturn false;\n\
    \t} else {\n\t\treturn true;\n\t}\n}\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpce_o16k9.php:26\n\
    Stack trace:\n#0 /tmp/tmpce_o16k9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpce_o16k9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif(empty($txt)){\n\t\treturn\
    \ false;\n\t}\n\t$words = explode(\" \", $txt);\n\t$last_word = array_pop($words);\n\
    \t$last_char = strtolower(substr($last_word, -1));\n\treturn ($last_char > 'a'\
    \ && $last_char < 'z') ? true : false;\n}\n\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\
    3\") . PHP_EOL;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ywp98u9.php:31\n\
    Stack trace:\n#0 /tmp/tmp5ywp98u9.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5ywp98u9.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last = substr($txt, -1);\n\
    \  if ($last != \" \") {\n    return true;\n  } else {\n    return false;\n  }\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"<br>\";\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br><br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_etq2s9n.php:28\n\
    Stack trace:\n#0 /tmp/tmp_etq2s9n.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_etq2s9n.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$l = strlen($txt);\n\treturn\
    \ $l > 0 && ctype_alpha($txt[$l-1]) && ($l == 1 || !ctype_alpha($txt[$l-2]));\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\
    \\n\";\necho check_if_last_char_is_a_letter(\"\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn preg_match('/^[a-zA-Z]$/', $last);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\"\
    );\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple p2ie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"  \");\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"apple p 2ie\");\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n0\n0\n1\n0\n1\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpnx8n73jq.php:34\nStack trace:\n#0 /tmp/tmpnx8n73jq.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpnx8n73jq.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last_char = substr($txt,\
    \ -1);\n    if($last_char == \" \") {\n        return false;\n    } else {\n \
    \       if(ctype_alpha($last_char)) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnbtcp2mo.php:32\n\
    Stack trace:\n#0 /tmp/tmpnbtcp2mo.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnbtcp2mo.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$arr = str_split($txt);\n\t\
    $char = \"\";\n\tfor ($i=count($arr)-1; $i >= 0; $i--) { \n\t\tif(ctype_alpha($arr[$i])){\n\
    \t\t\t$char = $arr[$i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tif($char != \"\"){\n\t\t\
    for ($i=count($arr)-1; $i >= 0; $i--) { \n\t\t\tif($arr[$i] == \" \"){\n\t\t\t\
    \treturn true;\n\t\t\t}\n\t\t\tif($arr[$i] == $char){\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo77kbwgd.php:38\n\
    Stack trace:\n#0 /tmp/tmpo77kbwgd.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpo77kbwgd.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \treturn (ctype_alpha($last) && !preg_match('/\\s/', $last)) ? True : False;\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7q0n466.php:21\n\
    Stack trace:\n#0 /tmp/tmpm7q0n466.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpm7q0n466.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn preg_match(\"/\\s[a-zA-Z]$/\"\
    , $txt);\n}\necho check_if_last_char_is_a_letter(\"apple pie\") ? \"True\" : \"\
    False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>True<br>False<br>False\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpkw3twrf6.php:26\nStack trace:\n#0 /tmp/tmpkw3twrf6.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkw3twrf6.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  return ctype_alpha(substr($txt,\
    \ -1));\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1vaxyk2.php:19\n\
    Stack trace:\n#0 /tmp/tmpo1vaxyk2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo1vaxyk2.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  if($txt[strlen($txt)-1] >=\
    \ 'a' && $txt[strlen($txt)-1] <= 'z') {\n    if($txt[strlen($txt)-2] === ' ')\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\n ?>\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$len = strlen($txt);\n\t$result\
    \ = '';\n\tif ($len == 0) {\n\t\t$result = false;\n\t} else {\n\t\t$char = substr($txt,\
    \ -1);\n\t\tif (ctype_alpha($char) && !ctype_alpha(substr($txt, -2, 1))) {\n\t\
    \t\t$result = true;\n\t\t} else {\n\t\t\t$result = false;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkyvnx4f.php:34\n\
    Stack trace:\n#0 /tmp/tmpxkyvnx4f.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxkyvnx4f.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$len = strlen($txt);\n\tif(!$len){\n\
    \t\treturn \"False\";\n\t}\n\t$i = $len - 1;\n\t$txt = str_split($txt);\n\t$result\
    \ = true;\n\twhile($i >= 0){\n\t\tif($txt[$i] == \" \"){\n\t\t\treturn \"False\"\
    ;\n\t\t}\n\t\tif(!ctype_alpha($txt[$i])){\n\t\t\treturn \"False\";\n\t\t}\n\t\t\
    $i--;\n\t}\n\treturn \"True\";\n}\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd38ske2y.php:35\n\
    Stack trace:\n#0 /tmp/tmpd38ske2y.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpd38ske2y.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  return ctype_alpha(strrev($txt)[0])\
    \ && substr_count($txt, \" \") >= 1;\n}\n\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabf8jrcv.php:27\n\
    Stack trace:\n#0 /tmp/tmpabf8jrcv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpabf8jrcv.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$letters = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \t$lastChar = substr($txt, -1);\n\tif (in_array($lastChar, $letters)) {\n\t\t\
    $checkSpaces = preg_split('/ /', $txt);\n\t\t$numSpaces = count($checkSpaces);\n\
    \t\t$lastString = $checkSpaces[$numSpaces - 1];\n\t\tif (strlen($lastString) ===\
    \ 1) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    );\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzcqjmwj8.php:36\n\
    Stack trace:\n#0 /tmp/tmpzcqjmwj8.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzcqjmwj8.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $arr = str_split($txt);\n\
    \    $last = $arr[strlen($txt) - 1];\n    if (ctype_alpha($last) && ctype_alpha($arr[strlen($txt)\
    \ - 2])) {\n        return false;\n    } elseif (ctype_alpha($last)) {\n     \
    \   return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $str = preg_replace('/[^a-zA-Z]+/',\
    \ '', $txt);\n    if (strlen($str) == 0) {\n        return false;\n    }\n   \
    \ $last_char = substr($str, -1);\n    if (preg_match('/[a-zA-Z]/', $last_char))\
    \ {\n        return true;\n    }\n    return false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpli6f4ogv.php:31\n\
    Stack trace:\n#0 /tmp/tmpli6f4ogv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpli6f4ogv.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$alpha = '/[a-zA-Z]/';\n\t\
    $lastChar = substr($txt, -1);\n\tif ($lastChar == \" \") {\n\t\treturn False;\n\
    \t} elseif ($lastChar == \" \" && preg_match($alpha, $lastChar)) {\n\t\treturn\
    \ False;\n\t} elseif (preg_match($alpha, $lastChar)) {\n\t\treturn True;\n\t}\
    \ else {\n\t\treturn False;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    2\");\necho \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93va_thl.php:39\n\
    Stack trace:\n#0 /tmp/tmp93va_thl.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp93va_thl.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $array = str_split($txt);\n\
    \    if($array[count($array)-1] == ' ') {\n        return False;\n    }\n    $lastChar\
    \ = $array[count($array)-1];\n    if(ctype_alpha($lastChar)) {\n        return\
    \ True;\n    }\n    return False;\n}\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvlli8wxc.php:27\n\
    Stack trace:\n#0 /tmp/tmpvlli8wxc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvlli8wxc.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $txt = trim($txt);\n  $lastChar\
    \ = substr($txt, -1);\n  $secondLastChar = substr($txt, -2, 1);\n  if (preg_match('/[a-zA-Z]/',\
    \ $lastChar) && !preg_match('/[a-zA-Z]/', $secondLastChar)) {\n    return true;\n\
    \  } else {\n    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>True<br>True<br>False\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpg1cww1z0.php:36\nStack trace:\n#0 /tmp/tmpg1cww1z0.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg1cww1z0.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (strlen($txt) == 0) {\n\
    \        return false;\n    }\n    $lastChar = substr($txt, -1);\n    return !ctype_alpha($lastChar);\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpty_ycqpo.php:25\n\
    Stack trace:\n#0 /tmp/tmpty_ycqpo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpty_ycqpo.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = explode(\" \", $txt);\n\
    \t$txt = end($txt);\n\t$last = substr($txt, -1);\n\tif($last==\" \"){\n\t\treturn\
    \ \"False\";\n\t}elseif(ctype_alpha($last)){\n\t\treturn \"True\";\n\t}else{\n\
    \t\treturn \"False\";\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ).\"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \").\"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \").\"<br>\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True<br>True<br>False<br>False<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpaqqhnhph.php:32\nStack trace:\n#0 /tmp/tmpaqqhnhph.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaqqhnhph.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) === true && ctype_space($last) === false) {\n\t\treturn\
    \ 'True';\n\t} else {\n\t\treturn 'False';\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nTrue\nFalse\nFalse\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpkr6c_2uw.php:29\nStack trace:\n#0 /tmp/tmpkr6c_2uw.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpkr6c_2uw.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $txt = rtrim($txt);\n  if($txt\
    \ === \"\") {\n    return false;\n  } else {\n    if(ctype_alpha(substr($txt,\
    \ -1)) && (strpos($txt, \" \") === false || strrpos($txt, \" \") === strlen($txt)\
    \ - 2)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\
    }\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dvdz7wf.php:28\n\
    Stack trace:\n#0 /tmp/tmp3dvdz7wf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3dvdz7wf.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$len = strlen($txt);\n\t$lastChar\
    \ = $txt[$len-1];\n\tif(ctype_alpha($lastChar) && !ctype_alnum($lastChar)) {\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk85t1ubg.php:32\n\
    Stack trace:\n#0 /tmp/tmpk85t1ubg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk85t1ubg.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$result = preg_match('/[a-z]\\\
    s$/i', $txt);\n\tif ($result == 0) {\n\t\treturn 'False';\n\t} else {\n\t\treturn\
    \ 'True';\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"\
    \\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e \");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple p\");\necho \"\
    \\n\";\necho check_if_last_char_is_a_letter(\"apple  p\");\necho \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"ab \");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    ab c\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"abc\");\necho \"\
    \\n\";\necho check_if_last_char_is_a_letter(\"hello world\");\necho \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"hello world \");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    hello world! \");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"hello\
    \ world! b\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"hello world\
    \ b\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"hello world!b\"\
    );\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"hello worldb\");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"hello\");\necho \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"hello \");\necho \"\\n\";\necho check_if_last_char_is_a\n\
    function candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9agvuujt.php on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = substr($txt, -1);\n\t\
    return ctype_alpha($txt) && !ctype_alnum($txt);\n}\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2n1a3ql9.php:21\n\
    Stack trace:\n#0 /tmp/tmp2n1a3ql9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2n1a3ql9.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txtarr = str_split($txt);\n\
    \t$len = count($txtarr);\n\tif($len==0){\n\t\treturn false;\n\t}\n\tif(preg_match(\"\
    /[^a-zA-Z]/\", $txtarr[$len-1])){\n\t\treturn false;\n\t}else{\n\t\treturn true;\n\
    \t}\n}\n\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy_qwjju.php:36\n\
    Stack trace:\n#0 /tmp/tmpsy_qwjju.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpsy_qwjju.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last = substr($txt, -1);\n\
    \    return (ctype_alpha($last) and $last != \" \") ? true : false;\n}\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pmf0ogn.php:20\n\
    Stack trace:\n#0 /tmp/tmp8pmf0ogn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8pmf0ogn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\tif (strlen($txt)\
    \ == 0) {\n\t\treturn false;\n\t}\n\tif (ctype_alpha($txt[strlen($txt) - 1]))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\"\
    );\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pie.\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pie..\"\
    );\necho \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfkqsjzlw.php:38\n\
    Stack trace:\n#0 /tmp/tmpfkqsjzlw.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpfkqsjzlw.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$words = explode(\" \", $txt);\n\
    \tforeach ($words as $w) {\n\t\t$last_char = substr($w, -1);\n\t\t$last_char =\
    \ preg_replace(\"/[^a-zA-Z]/\", \"\", $last_char);\n\t\tif (strlen($last_char)>0)\
    \ {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn False;\n}\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpplfqwsmt.php:27\n\
    Stack trace:\n#0 /tmp/tmpplfqwsmt.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpplfqwsmt.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \treturn ctype_alpha($lastChar) && ctype_space(substr($txt, -2, 1));\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjrm4xhgp.php:27\n\
    Stack trace:\n#0 /tmp/tmpjrm4xhgp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjrm4xhgp.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n$last = $txt[strlen($txt)-1];\n\
    return ctype_alpha($last) && !ctype_alpha($txt[strlen($txt)-2]);\n}\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7a2xcq0b.php:23\n\
    Stack trace:\n#0 /tmp/tmp7a2xcq0b.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7a2xcq0b.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$letters = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];\n\
    \t$last_letter = substr($txt, -1);\n\t$last_word = end(explode(' ', $txt));\n\t\
    if (in_array($last_letter, $letters) && !in_array($last_letter, str_split($last_word)))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    abc\") . \"\\n\";\necho check_if_last_char_is_a_letter(\" o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_degloh6.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt_array = str_split($txt);\n\
    \t$last_character = array_pop($txt_array);\n\treturn ctype_alpha($last_character)\
    \ && $last_character != \" \";\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0w2g7rjd.php:22\n\
    Stack trace:\n#0 /tmp/tmp0w2g7rjd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0w2g7rjd.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $arr = str_split($txt);\n\
    \    $length = count($arr) - 1;\n    if(ctype_alpha($arr[$length]) && !ctype_alpha($arr[$length\
    \ - 1])) {\n        return \"True\";\n    }\n    return \"False\";\n}\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwawf4ma.php:24\n\
    Stack trace:\n#0 /tmp/tmpmwawf4ma.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmwawf4ma.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\t$flag\
    \ = false;\n\tif(substr($txt, -1) == \" \") {\n\t\t$flag = false;\n\t} else {\n\
    \t\t$flag = true;\n\t}\n\treturn $flag;\n}\n\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>1<br>1<br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp641gjszl.php:35\nStack trace:\n#0 /tmp/tmp641gjszl.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmp641gjszl.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$array=str_split($txt);\n\t\
    $last=end($array);\n\t\n\t$last_two=array_slice($array, -2, 1);\n\t\n\t$last_two=implode(\"\
    \", $last_two);\n\t\n\tif(preg_match(\"/\\s/\", $last_two)){\n\t\tif(preg_match(\"\
    /\\w/\", $last)){\n\t\t\treturn True;\n\t\t}\n\t\telse{\n\t\t\treturn False;\n\
    \t\t}\n\t}\n\telse{\n\t\treturn False;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\n\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzzfd7i6.php:41\n\
    Stack trace:\n#0 /tmp/tmpnzzfd7i6.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpnzzfd7i6.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4vfiggo.php:28\n\
    Stack trace:\n#0 /tmp/tmpd4vfiggo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpd4vfiggo.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif($txt != \"\") {\n\t\tif(ord(substr($txt,\
    \ strlen($txt) - 1)) >= 97 && ord(substr($txt, strlen($txt) - 1)) <= 122) {\n\t\
    \t\tif(ord(substr($txt, strlen($txt) - 2)) != 32) {\n\t\t\t\treturn true;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1i5wt4df.php:26\n\
    Stack trace:\n#0 /tmp/tmp1i5wt4df.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1i5wt4df.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && strlen($txt)>1 && !ctype_alnum(substr($txt, -2,\
    \ 1))) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4du9i1my.php:28\n\
    Stack trace:\n#0 /tmp/tmp4du9i1my.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4du9i1my.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\tif(empty($txt))\
    \ {\n\t\treturn false;\n\t}\n\t$length = strlen($txt);\n\t$last = $txt[$length\
    \ - 1];\n\tif(ctype_alpha($last) && $txt[$length - 2] != \" \") {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkzcuawdz.php:34\n\
    Stack trace:\n#0 /tmp/tmpkzcuawdz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpkzcuawdz.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t// split into array by space\n\
    \t$arr = explode(\" \", $txt);\n\t// get last element\n\t$last_element = array_pop($arr);\n\
    \t// if the last element is empty\n\tif (empty($last_element)) {\n\t\treturn false;\n\
    \t}\n\t// last element is not empty, check the last character if it is a-z, return\
    \ true\n\t// else return false\n\tif (preg_match(\"/[a-z]/\", $last_element[strlen($last_element)\
    \ - 1])) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho \"check_if_last_char_is_a_letter(\\\
    \"apple pie\\\") = \" . check_if_last_char_is_a_letter(\"apple pie\") . \"<br>\"\
    ;\necho \"check_if_last_char_is_a_letter(\\\"apple pi e\\\") = \" . check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"<br>\";\necho \"check_if_last_char_is_a_letter(\\\"apple pi\
    \ e \\\") = \" . check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\";\n\
    echo \"check_if_last_char_is_a_letter(\\\"\\\") = \" . check_if_last_char_is_a_letter(\"\
    \") . \"<br>\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "check_if_last_char_is_a_letter(\"apple pie\") = 1<br>check_if_last_char_is_a_letter(\"\
    apple pi e\") = 1<br>check_if_last_char_is_a_letter(\"apple pi e \") = <br>check_if_last_char_is_a_letter(\"\
    \") = <br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cykuna_.php:37\n\
    Stack trace:\n#0 /tmp/tmp9cykuna_.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp9cykuna_.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$arr = explode(\" \", $txt);\n\
    \t$answer = true;\n\t$lastWord = array_pop($arr);\n\tif($lastWord == \"\" ) {\n\
    \t\t$answer = false;\n\t}\n\tif (strlen($lastWord) == 1) {\n\t\t$answer = true;\n\
    \t}\n\telseif (strlen($lastWord) == 2) {\n\t\tif(!ctype_alpha($lastWord[1])) {\n\
    \t\t\t$answer = false;\n\t\t}\n\t}\n\telseif (strlen($lastWord) > 2) {\n\t\tif(!ctype_alpha($lastWord[1])\
    \ || !ctype_alpha($lastWord[2])) {\n\t\t\t$answer = false;\n\t\t}\n\t}\n\treturn\
    \ $answer;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehkluqle.php:42\n\
    Stack trace:\n#0 /tmp/tmpehkluqle.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpehkluqle.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = str_split($txt);\n\t\
    $last_char = array_pop($txt);\n\t$last_char = trim($last_char);\n\tif ($last_char\
    \ == '') {\n\t\treturn false;\n\t}\n\tif (ctype_alpha($last_char)) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzam_f219.php:28\n\
    Stack trace:\n#0 /tmp/tmpzam_f219.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzam_f219.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $lastChar = $txt[strlen($txt)\
    \ - 1];\n  $wordArray = explode(\" \", $txt);\n  $lastWord = array_pop($wordArray);\n\
    \  $lastCharOfLastWord = $lastWord[strlen($lastWord) - 1];\n  if (strtolower($lastChar)\
    \ != strtolower($lastCharOfLastWord)) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphnr9hddj.php:28\n\
    Stack trace:\n#0 /tmp/tmphnr9hddj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphnr9hddj.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn ctype_alpha(substr($txt,\
    \ -1));\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \");\necho \"<br>\";\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br><br><br><br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpgt85ggz1.php:29\nStack trace:\n#0 /tmp/tmpgt85ggz1.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgt85ggz1.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$str = substr($txt, -1);\n\t\
    return ctype_alpha($str) && $str == ' ' ? false : true;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6qyxk5u_.php:21\n\
    Stack trace:\n#0 /tmp/tmp6qyxk5u_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6qyxk5u_.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $array = explode(\" \", $txt);\n\
    \  $lastWord = end($array);\n  if ($lastWord !== \"\") {\n    $lastLetter = substr($lastWord,\
    \ -1);\n    return ctype_alpha($lastLetter);\n  } else {\n    return false;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp41w1zrgu.php:27\n\
    Stack trace:\n#0 /tmp/tmp41w1zrgu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp41w1zrgu.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn ctype_alpha(substr($txt,\
    \ -1)) && (preg_match('/\\s/', substr($txt, -2, 1)) || $txt == substr($txt, -1));\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last = substr($txt, -1);\n\
    \  if (ctype_alpha($last) && strlen($txt) > 0 && !ctype_alnum($last)){\n    return\
    \ \"True\";\n  } else {\n    return \"False\";\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptrl6xxg3.php:25\n\
    Stack trace:\n#0 /tmp/tmptrl6xxg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptrl6xxg3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif (empty($txt)) {\n\t\treturn\
    \ false;\n\t} else {\n\t\t$last_char = substr($txt, -1);\n\t\tif (ctype_alpha($last_char)\
    \ && strpos($txt, $last_char) == strlen($txt) - 1) {\n\t\t\treturn true;\n\t\t\
    } else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixhfddc8.php:32\n\
    Stack trace:\n#0 /tmp/tmpixhfddc8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpixhfddc8.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t// if(str_word_count($txt)==0)\
    \ {\n\t// \treturn false;\n\t// } else {\n\t// \t$txtArray = str_split($txt);\n\
    \t// \tif(ord($txtArray[count($txtArray)-1]) >= 65 && ord($txtArray[count($txtArray)-1])\
    \ <= 90 || ord($txtArray[count($txtArray)-1]) >= 97 && ord($txtArray[count($txtArray)-1])\
    \ <= 122) {\n\t// \t\treturn true;\n\t// \t} else {\n\t// \t\treturn false;\n\t\
    // \t}\n\t// }\n\treturn ((str_word_count($txt)==0) ? false : ((ord($txt[strlen($txt)-1])\
    \ >= 65 && ord($txt[strlen($txt)-1]) <= 90 || ord($txt[strlen($txt)-1]) >= 97\
    \ && ord($txt[strlen($txt)-1]) <= 122) ? true : false));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple p ie\") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pie 2\") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pie?\") ? \"TRUE\" : \"FALSE\";\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "TRUE<br>TRUE<br>FALSE<br>FALSE<br>TRUE<br>FALSE<br>FALSE<br>FALSE\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp3j8mdqmk.php:44\nStack trace:\n\
    #0 /tmp/tmp3j8mdqmk.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp3j8mdqmk.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn ctype_alpha(substr($txt,\
    \ -1));\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujjjt0hw.php:23\n\
    Stack trace:\n#0 /tmp/tmpujjjt0hw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpujjjt0hw.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif ($txt[strlen($txt)-1] ==\
    \ \" \") {\n\t\treturn false;\n\t}\n\telseif ($txt[strlen($txt)-1] == \"\\t\"\
    ) {\n\t\treturn false;\n\t}\n\telseif ($txt[strlen($txt)-1] == \"\\n\") {\n\t\t\
    return false;\n\t}\n\telseif ($txt[strlen($txt)-1] == \"\\r\") {\n\t\treturn false;\n\
    \t}\n\telseif ($txt[strlen($txt)-1] == \"\\0\") {\n\t\treturn false;\n\t}\n\t\
    elseif ($txt[strlen($txt)-1] == \"\\x0B\") {\n\t\treturn false;\n\t}\n\telse {\n\
    \t\treturn true;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\").\"\
    \\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\").\"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"apple pie\\n\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pie\\t\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pie\\r\"\
    ).\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pie\\0\").\"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\\x0B\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n1\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpxmpwlufc.php:48\nStack trace:\n#0 /tmp/tmpxmpwlufc.php(60): test()\n\
    #1 {main}\n  thrown in /tmp/tmpxmpwlufc.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn ctype_alpha(substr($txt,\
    \ -1)) && ctype_space(substr($txt, -2, 1));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\necho check_if_last_char_is_a_letter(\"a\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \ \").\"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp571cnf37.php:28\n\
    Stack trace:\n#0 /tmp/tmp571cnf37.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp571cnf37.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $lastIndex = strlen($txt) -\
    \ 1;\n  $lastChar = $txt[$lastIndex];\n  if ($lastChar == \" \") {\n    return\
    \ false;\n  } else if (ctype_alpha($lastChar)) {\n    return true;\n  } else {\n\
    \    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dyl8vfp.php:31\n\
    Stack trace:\n#0 /tmp/tmp8dyl8vfp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8dyl8vfp.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (substr($txt, -1) ===\
    \ \" \") {\n        return false;\n    } elseif (substr($txt, -1) === \"?\") {\n\
    \        return false;\n    } elseif (substr($txt, -1) === \"!\") {\n        return\
    \ false;\n    } elseif (substr($txt, -1) === \".\") {\n        return false;\n\
    \    } elseif (substr($txt, -1) === \",\") {\n        return false;\n    } elseif\
    \ (substr($txt, -1) === \":\") {\n        return false;\n    } elseif (substr($txt,\
    \ -1) === \";\") {\n        return false;\n    } elseif (substr($txt, -1) ===\
    \ \"'\") {\n        return false;\n    } elseif (substr($txt, -1) === '\"') {\n\
    \        return false;\n    } elseif (substr($txt, -1) === \")\") {\n        return\
    \ false;\n    } elseif (substr($txt, -1) === \"(\") {\n        return false;\n\
    \    } elseif (substr($txt, -1) === \"0\") {\n        return false;\n    } elseif\
    \ (substr($txt, -1) === \"1\") {\n        return false;\n    } elseif (substr($txt,\
    \ -1) === \"2\") {\n        return false;\n    } elseif (substr($txt, -1) ===\
    \ \"3\") {\n        return false;\n    } elseif (substr($txt, -1) === \"4\") {\n\
    \        return false;\n    } elseif (substr($txt, -1) === \"5\") {\n        return\
    \ false;\n    } elseif (substr($txt, -1) === \"6\") {\n        return false;\n\
    \    } elseif (substr($txt, -1) === \"7\") {\n        return false;\n    } elseif\
    \ (substr($txt, -1) === \"8\") {\n        return false;\n    } elseif (substr($txt,\
    \ -1) === \"9\") {\n        return false;\n    } else {\n        return true;\n\
    \    }\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpua_h3d_f.php on line 74\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last_char = substr($txt, -1);\n\
    \  if (ctype_alpha($last_char) && preg_match('/\\s/', $last_char)) {\n    return\
    \ true;\n  }\n  return false;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zopfx4w.php:25\n\
    Stack trace:\n#0 /tmp/tmp7zopfx4w.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7zopfx4w.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif (strlen($txt) > 0 && str_split($txt)[count(str_split($txt))\
    \ - 1] !== \" \" && ctype_alpha(str_split($txt)[count(str_split($txt)) - 1]))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp438e2hlq.php:28\n\
    Stack trace:\n#0 /tmp/tmp438e2hlq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp438e2hlq.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$i = strlen($txt) - 1;\n\t\
    while($i >= 0 && ctype_alpha($txt[$i])) {\n\t\t$i--;\n\t}\n\t$lastCharIsLetter\
    \ = $i != strlen($txt) - 1;\n\t$lastCharIsLastOfWord = $i == -1 || !ctype_alpha($txt[$i\
    \ + 1]);\n\treturn $lastCharIsLetter && $lastCharIsLastOfWord;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\" : \"False\"; // \u279E False\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\" : \"False\"; // \u279E True\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\"; // \u279E False\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\"; // \u279E False\nfunction candidate(...$args) {\n\
    \    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>False<br>False<br>False\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjnhsm67_.php:32\nStack trace:\n#0 /tmp/tmpjnhsm67_.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjnhsm67_.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $txt = trim($txt);\n    $last\
    \ = $txt[strlen($txt) - 1];\n    return !ctype_alpha($last);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaim204n.php:23\n\
    Stack trace:\n#0 /tmp/tmpaaim204n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpaaim204n.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $len = strlen($txt);\n  \
    \  $last = $txt[$len - 1];\n    if (ctype_alpha($last) && ($last != ' ')) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jjocksp.php:25\n\
    Stack trace:\n#0 /tmp/tmp7jjocksp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7jjocksp.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  if(preg_match(\"/\\W$/\", $txt))\
    \ {\n    return True;\n  } else {\n    return False;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpue_5t8e6.php:28\n\
    Stack trace:\n#0 /tmp/tmpue_5t8e6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpue_5t8e6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastChar = substr($txt,\
    \ -1);\n    if ($lastChar == ' ' || !ctype_alpha($lastChar)) {\n        return\
    \ false;\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpku52gvid.php:23\n\
    Stack trace:\n#0 /tmp/tmpku52gvid.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpku52gvid.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$textArray = str_split($txt);\n\
    \t$lastIndex = count($textArray)-1;\n\t$lastElement = $textArray[$lastIndex];\n\
    \t$patern = '/[a-zA-Z]/';\n\tif(preg_match($patern, $lastElement) != false &&\
    \ $lastElement != ' '){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\
    }\n\necho check_if_last_char_is_a_letter(\"apple pie\") . \"<br/>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"<br/>\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"<br/>\";\necho check_if_last_char_is_a_letter(\"\") . \"<br/>\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br/>1<br/><br/><br/>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2fmw9roe.php:32\nStack trace:\n#0 /tmp/tmp2fmw9roe.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2fmw9roe.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif (empty($txt)) {\n\t\treturn\
    \ false;\n\t}\n\t$is_letter = false;\n\t$txt = str_split($txt);\n\t$txt_len =\
    \ count($txt);\n\tfor ($i = 0; $i < $txt_len; $i++) {\n\t\tif (ctype_alpha($txt[$i]))\
    \ {\n\t\t\t$is_letter = true;\n\t\t} else {\n\t\t\t$is_letter = false;\n\t\t}\n\
    \t}\n\treturn $is_letter;\n}\necho \"True if the last character\\n of a given\
    \ string is an alphabetical character and is not\\n a part of a word, and False\
    \ otherwise\";\necho \"\\n\";\necho \"1: \" . check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho \"2: \" . check_if_last_char_is_a_letter(\"apple\
    \ pi e\") . \"\\n\";\necho \"3: \" . check_if_last_char_is_a_letter(\"apple pi\
    \ e \") . \"\\n\";\necho \"4: \" . check_if_last_char_is_a_letter(\"\") . \"\\\
    n\";\necho \"5: \" . check_if_last_char_is_a_letter(\"|||\") . \"\\n\";\necho\
    \ \"6: \" . check_if_last_char_is_a_letter(\"||| \") . \"\\n\";\necho \"7: \"\
    \ . check_if_last_char_is_a_letter(\"||| e\") . \"\\n\";\necho \"8: \" . check_if_last_char_is_a_letter(\"\
    ||| e \") . \"\\n\";\necho \"9: \" . check_if_last_char_is_a_letter(\"||| eee\
    \ \") . \"\\n\";\necho \"10: \" . check_if_last_char_is_a_letter(\"\") . \"\\\
    n\";\necho \"11: \" . check_if_last_char_is_a_letter(\"\") . \"\\n\";\necho \"\
    12: \" . check_if_last_char_is_a_letter(\"\") . \"\\n\";\necho \"13\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpn776v_at.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $lastChar = substr($txt, -1);\n\
    \  $charIsAlph = ctype_alpha($lastChar);\n  $charIsNotSpace = $lastChar != \"\
    \ \";\n  $charIsNotPartOfWord = !preg_match(\"/\\S\\b/\", $lastChar);\n  return\
    \ $charIsAlph && $charIsNotSpace && $charIsNotPartOfWord;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"true\" : \"false\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"true\" : \"false\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"true\" : \"false\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n \
    \   return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_totoeae.php:32\nStack trace:\n#0 /tmp/tmp_totoeae.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_totoeae.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$trimmed = rtrim($txt);\n\t\
    if(ctype_alpha(substr($trimmed, -1)) and substr($trimmed, -1) == substr($txt,\
    \ -1)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "true\ntrue\nfalse\nfalse\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp4160lctm.php:28\nStack trace:\n#0 /tmp/tmp4160lctm.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4160lctm.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $txtarr = explode(\" \", $txt);\n\
    \  $last = end($txtarr);\n  $lastchar = str_split($last);\n  $lchar = end($lastchar);\n\
    \  if (ctype_alpha($lchar)) {\n    return true;\n  }\n  else {\n    return false;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuodt1_d5.php:28\n\
    Stack trace:\n#0 /tmp/tmpuodt1_d5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpuodt1_d5.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (strlen($txt) === 0) {\n\
    \        return False;\n    } else {\n        return !ctype_alpha(substr($txt,\
    \ -1));\n    }\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxlbqx5i.php:25\n\
    Stack trace:\n#0 /tmp/tmpdxlbqx5i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdxlbqx5i.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (strlen($txt) == 0){\n\
    \        return false;\n    }\n    $last = $txt[strlen($txt) - 1];\n    return\
    \ (ctype_alpha($last) && ! ctype_alpha($txt[strlen($txt) - 2]));\n}\n\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho check_if_last_char_is_a_letter(\"\
    apple pi e \");\necho check_if_last_char_is_a_letter(\"\");\necho check_if_last_char_is_a_letter(\"\
    a\");\necho check_if_last_char_is_a_letter(\"ab \");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjd6s315a.php:33\n\
    Stack trace:\n#0 /tmp/tmpjd6s315a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjd6s315a.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $txt = trim($txt);\n    if\
    \ (strlen($txt) < 1) return false;\n    $last_chr = strtolower(substr($txt, -1));\n\
    \    if (!ctype_alpha($last_chr)) return false;\n    if (ctype_alpha(substr($txt,\
    \ -2, 1))) return false;\n    return true;\n}\nfunction candidate(...$args) {\n\
    \    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijic8v45.php:27\n\
    Stack trace:\n#0 /tmp/tmpijic8v45.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpijic8v45.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $str_arr = str_split($txt);\n\
    \    $len = count($str_arr);\n    $ch = $str_arr[$len - 1];\n    if (!ctype_alpha($ch))\
    \ {\n        return False;\n    }\n    for ($i = 0; $i < $len - 1; $i++) {\n \
    \       if ($str_arr[$i] == \" \") {\n            if ($str_arr[$i + 1] == $ch)\
    \ {\n                return False;\n            }\n        }\n    }\n    return\
    \ True;\n}\n\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lzw5b88.php:33\n\
    Stack trace:\n#0 /tmp/tmp8lzw5b88.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8lzw5b88.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $txt = trim($txt);\n    if($txt\
    \ === \"\") {\n        return false;\n    }\n    $firstLetterIndex = $txt[0];\n\
    \    $lastLetterIndex = $txt[-1];\n    if(ctype_alpha($lastLetterIndex) && !ctype_alpha($firstLetterIndex))\
    \ {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\
    echo check_if_last_char_is_a_letter(\"apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"<br>\";\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp050hojg9.php:35\n\
    Stack trace:\n#0 /tmp/tmp050hojg9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp050hojg9.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$len = strlen($txt);\n\t$last_char\
    \ = $txt[$len-1];\n\tif (preg_match(\"/[a-zA-Z]/\", $last_char) == 1) {\n\t\t\
    if (ctype_alpha($last_char)) {\n\t\t\treturn True;\n\t\t} else {\n\t\t\treturn\
    \ False;\n\t\t}\n\t} else {\n\t\treturn False;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jek_wxy.php:30\n\
    Stack trace:\n#0 /tmp/tmp5jek_wxy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5jek_wxy.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last = substr($txt, -1);\n\
    \tif (is_numeric($last)) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t\
    }\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpek74es_n.php:28\n\
    Stack trace:\n#0 /tmp/tmpek74es_n.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpek74es_n.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = preg_replace('/\\s+/',\
    \ '', $txt);\n\t$last_char = $txt[strlen($txt) - 1];\n\tif (ctype_alpha($last_char))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\\n\" : \"False\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\\n\" : \"False\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\\n\" : \"False\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\\n\" : \"False\\n\";\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nTrue\nTrue\nFalse\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpr365msoz.php:29\nStack trace:\n#0 /tmp/tmpr365msoz.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr365msoz.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if(ctype_alpha(substr($txt,\
    \ -1)) && strlen($txt) > 1 && ctype_alpha(substr($txt, -2, 1)) == false && substr($txt,\
    \ -1) != \" \") {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qr9mlmo.php:33\n\
    Stack trace:\n#0 /tmp/tmp2qr9mlmo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2qr9mlmo.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \treturn preg_match('/[a-zA-Z]/', $lastChar) && strpos($txt, $lastChar) == strlen($txt)\
    \ - 1;\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpza0_mro1.php:27\n\
    Stack trace:\n#0 /tmp/tmpza0_mro1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpza0_mro1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn preg_match(\"/[a-zA-Z]$/\"\
    , $txt);\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbm7nlpsl.php:19\n\
    Stack trace:\n#0 /tmp/tmpbm7nlpsl.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbm7nlpsl.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last_char = substr($txt,\
    \ -1);\n    $alphabets = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n\
    \    if (in_array($last_char, $alphabets)) {\n        return True;\n    } else\
    \ {\n        return False;\n    }\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2v83_2yi.php:29\n\
    Stack trace:\n#0 /tmp/tmp2v83_2yi.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2v83_2yi.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  if (preg_match(\"/[a-z]/i\"\
    , $txt[strlen($txt)-1])) {\n    return True;\n  } else {\n    return False;\n\
    \  }\n}\necho check_if_last_char_is_a_letter(\"apple pie\") ? 'True' : 'False';\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") ? 'True' :\
    \ 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\"\
    ) ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \ \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    a\") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pie \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    b \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    c \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    a \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    a\") ? 'True' : 'False';\necho \"<br\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpowmxixhm.php on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$ltr = $txt[strlen($txt)-1];\n\
    \tif($ltr >= 'a' && $ltr <= 'z' || $ltr >= 'A' && $ltr <= 'Z'){\n\t\t$ltr = true;\n\
    \t} else{\n\t\t$ltr = false;\n\t}\n\treturn $ltr;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtt8lafs.php:26\n\
    Stack trace:\n#0 /tmp/tmpmtt8lafs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmtt8lafs.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $lastChar = substr($txt, -1);\n\
    \  return ctype_alpha($lastChar) && !ctype_alnum($lastChar);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkvg5t5rn.php:22\n\
    Stack trace:\n#0 /tmp/tmpkvg5t5rn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkvg5t5rn.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n   $words = explode(\" \",$txt);\n\
    \   $count = count($words);\n   for($i = 0; $i < $count; $i++){\n       $lastWord\
    \ = $words[$i];\n   }\n   $lastWordLength = strlen($lastWord);\n   $lastWordLastChar\
    \ = $lastWord[$lastWordLength-1];\n   if(ctype_alpha($lastWordLastChar)){\n  \
    \     return true;\n   }else{\n       return false;\n   }\n}\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplyjs7gep.php:30\n\
    Stack trace:\n#0 /tmp/tmplyjs7gep.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplyjs7gep.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $lastChar = substr($txt, -1);\n\
    \  if (ctype_alpha($lastChar) == 1) {\n    $arr = explode(\" \", $txt);\n    $lastWord\
    \ = array_pop($arr);\n    if (strpos($lastWord, $lastChar) === false) {\n    \
    \  return true;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd8_akvje.php:28\n\
    Stack trace:\n#0 /tmp/tmpd8_akvje.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpd8_akvje.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \t$isChar = ctype_alpha($lastChar);\n\t$noSpace = preg_match('/\\s/', $lastChar);\n\
    \treturn $isChar && !$noSpace;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"true\" : \"false\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "true<br>true<br>false<br>false\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpa1no7r_d.php:29\nStack trace:\n#0 /tmp/tmpa1no7r_d.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpa1no7r_d.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if(ctype_alpha(substr($txt,\
    \ -1)) && !ctype_alpha(substr($txt, -2))) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdf6ir1_z.php:26\n\
    Stack trace:\n#0 /tmp/tmpdf6ir1_z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdf6ir1_z.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  if (strlen($txt) == 0) {\n\
    \    return false;\n  }\n  if (ctype_alpha(substr($txt, -1)) && ctype_alpha(substr($txt,\
    \ -2, 1))) {\n    return false;\n  }\n  if (ctype_alpha(substr($txt, -1))) {\n\
    \    return true;\n  }\n  return false;\n}\nfunction candidate(...$args) {\n \
    \   return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphs0_xq8s.php:31\n\
    Stack trace:\n#0 /tmp/tmphs0_xq8s.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphs0_xq8s.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  if (strlen($txt) == 0) {\n\
    \    return false;\n  } else {\n    return ctype_alpha(substr($txt, -1));\n  }\n\
    }\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8vixyte.php:23\n\
    Stack trace:\n#0 /tmp/tmpa8vixyte.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpa8vixyte.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$arr = str_split($txt);\n\t\
    $count = count($arr);\n\t$result = \"\";\n\tif ($count == 0){\n\t\t$result = \"\
    False\";\n\t} else {\n\t\tfor ($i = 0; $i < $count; $i++){\n\t\t\tif ($arr[$i]\
    \ == \" \"){\n\t\t\t\tif (ctype_alpha($arr[$i-1])){\n\t\t\t\t\t$result = \"True\"\
    ;\n\t\t\t\t} else {\n\t\t\t\t\t$result = \"False\";\n\t\t\t\t}\n\t\t\t}\n\t\t\
    }\n\t}\n\tif ($result == \"\"){\n\t\treturn \"False\";\n\t} else {\n\t\treturn\
    \ $result;\n\t}\n}\n\n$txt1 = \"\";\n$txt2 = \"apple pie\";\n$txt3 = \"apple pi\
    \ e\";\n$txt4 = \"apple pi e \";\necho \"1. \", check_if_last_char_is_a_letter($txt1),\
    \ \"<br>\";\necho \"2. \", check_if_last_char_is_a_letter($txt2), \"<br>\";\n\
    echo \"3. \", check_if_last_char_is_a_letter($txt3), \"<br>\";\necho \"4. \",\
    \ check_if_last_char_is_a_letter($txt4), \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1. False<br>2. True<br>3. True<br>4. True<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpsdujpodm.php:48\nStack trace:\n#0 /tmp/tmpsdujpodm.php(60):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsdujpodm.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif(strlen($txt) == 0) return\
    \ false;\n\t$pos = strrpos($txt, \" \");\n\t$pos = $pos === false ? 0 : $pos +\
    \ 1;\n\t$last_word = substr($txt, $pos);\n\tif(ctype_alpha($last_word)){\n\t\t\
    return true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6z48cit6.php:30\n\
    Stack trace:\n#0 /tmp/tmp6z48cit6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp6z48cit6.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t//your code here\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpuuw3w5.php:26\n\
    Stack trace:\n#0 /tmp/tmpjpuuw3w5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjpuuw3w5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastCharacter = substr($txt,\
    \ -1);\n\t$result = true;\n\tif(ctype_alpha($lastCharacter)){\n\t\t$result = false;\n\
    \t}\n\tif(!ctype_alpha($lastCharacter)){\n\t\t$result = true;\n\t}\n\tif($lastCharacter\
    \ == \" \"){\n\t\t$result = false;\n\t}\n\tif($txt == \"\"){\n\t\t$result = false;\n\
    \t}\n\treturn $result;\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2x0qx4k.php:34\n\
    Stack trace:\n#0 /tmp/tmpg2x0qx4k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg2x0qx4k.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txt = trim($txt);\n\tif ($txt\
    \ == '') {\n\t\treturn false;\n\t}\n\treturn ctype_alpha(substr($txt, -1)) &&\
    \ substr($txt, -2, 1) == ' ';\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporoke1bt.php:34\n\
    Stack trace:\n#0 /tmp/tmporoke1bt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmporoke1bt.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (strlen($txt) == 0) {\n\
    \        return false;\n    } else {\n        $txt_last_char = substr($txt, -1);\n\
    \        if (ctype_alpha($txt_last_char) && $txt_last_char != \" \") {\n     \
    \       return true;\n        } else {\n            return false;\n        }\n\
    \    }\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7rvzl6ud.php:32\n\
    Stack trace:\n#0 /tmp/tmp7rvzl6ud.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp7rvzl6ud.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif(preg_match(\"/[^\\w]\\z/\"\
    , $txt)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpymeg8py1.php:27\n\
    Stack trace:\n#0 /tmp/tmpymeg8py1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpymeg8py1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last=substr($txt,-1);\n\t\
    if ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\".\") {\n\t\treturn\
    \ false;\n\t}elseif ($last==\",\") {\n\t\treturn false;\n\t}elseif ($last==\"\
    !\") {\n\t\treturn false;\n\t}elseif ($last==\"?\") {\n\t\treturn false;\n\t}elseif\
    \ ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\treturn\
    \ false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\"\
    \ \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t\
    }elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\t\
    return false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\"\
    \ \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t\
    }elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\t\
    return false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\"\
    \ \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t\
    }elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\t\
    return false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\"\
    \ \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t\
    }elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\t\
    return false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpm5us0wi1.php on line 86\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn ctype_alpha(substr($txt,\
    \ -1));\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hoiyowt.php:19\n\
    Stack trace:\n#0 /tmp/tmp2hoiyowt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2hoiyowt.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$str = $txt;\n\t$strArray =\
    \ explode(\" \", $str);\n\t$arrCount = count($strArray);\n\t$count = strlen($strArray[$arrCount-1]);\n\
    \t$count1 = strlen($strArray[$arrCount-2]);\n\t$count2 = strlen($strArray[$arrCount-3]);\n\
    \t$count3 = strlen($strArray[$arrCount-4]);\n\t$count4 = strlen($strArray[$arrCount-5]);\n\
    \t$count5 = strlen($strArray[$arrCount-6]);\n\t$count6 = strlen($strArray[$arrCount-7]);\n\
    \t$count7 = strlen($strArray[$arrCount-8]);\n\t$count8 = strlen($strArray[$arrCount-9]);\n\
    \t$count9 = strlen($strArray[$arrCount-10]);\n\t$count10 = strlen($strArray[$arrCount-11]);\n\
    \t$count11 = strlen($strArray[$arrCount-12]);\n\t$count12 = strlen($strArray[$arrCount-13]);\n\
    \t$count13 = strlen($strArray[$arrCount-14]);\n\t$count14 = strlen($strArray[$arrCount-15]);\n\
    \t$count15 = strlen($strArray[$arrCount-16]);\n\t$count16 = strlen($strArray[$arrCount-17]);\n\
    \t$count17 = strlen($strArray[$arrCount-18]);\n\t$count18 = strlen($strArray[$arrCount-19]);\n\
    \t$count19 = strlen($strArray[$arrCount-20]);\n\t$count20 = strlen($strArray[$arrCount-21]);\n\
    \t$count21 = strlen($strArray[$arrCount-22]);\n\t$count22 = strlen($strArray[$arrCount-23]);\n\
    \t$count23 = strlen($strArray[$arrCount-24]);\n\t$count24 = strlen($strArray[$arrCount-25]);\n\
    \t$count25 = strlen($strArray[$arrCount-26]);\n\t$count26 = strlen($strArray[$arr\n\
    function candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxugsuafx.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $x = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  $last_index = count($txt)-1;\n  $last_char = $txt[$last_index];\n  if (strpos($x,\
    \ $last_char) === false){\n    return False;\n  }\n  else {\n    if (strpos($txt,\
    \ \" \") === false){\n      return True;\n    }\n    else {\n      return False;\n\
    \    }\n  }\n}\necho check_if_last_char_is_a_letter(\"apple pie\").\"<br>\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e\").\"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \").\"<br>\";\necho check_if_last_char_is_a_letter(\"\").\"<br>\";\n\
    function candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpnk1c9xhr.php on line 13\n<br>\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpnk1c9xhr.php\
    \ on line 13\n<br>\nWarning: count(): Parameter must be an array or an object\
    \ that implements Countable in /tmp/tmpnk1c9xhr.php on line 13\n<br>\nWarning:\
    \ count(): Parameter must be an array or an object that implements Countable in\
    \ /tmp/tmpnk1c9xhr.php on line 13\n\nWarning: strpos(): Empty needle in /tmp/tmpnk1c9xhr.php\
    \ on line 15\n<br>\nWarning: count(): Parameter must be an array or an object\
    \ that implements Countable in /tmp/tmpnk1c9xhr.php on line 13\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpnk1c9xhr.php:36\nStack trace:\n\
    #0 /tmp/tmpnk1c9xhr.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnk1c9xhr.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $lastChar = substr($txt, -1);\n\
    \  if(!ctype_alpha($lastChar)) {\n    return false;\n  }\n  $txt = rtrim($txt);\n\
    \  if(!empty($txt)) {\n    $txt = rtrim($txt);\n    $last = substr($txt, -1);\n\
    \    if($last === ' ') {\n      return false;\n    }\n  }\n  return true;\n}\n\
    function candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp94iqfc5x.php:31\n\
    Stack trace:\n#0 /tmp/tmp94iqfc5x.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp94iqfc5x.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif(strlen($txt)==0){\n\t\t\
    return false;\n\t}\n\t\n\t$count = strlen($txt);\n\t\n\tfor($i=$count-1;$i>=0;$i--){\n\
    \t\tif($txt[$i]==\" \"){\n\t\t\treturn false;\n\t\t}\n\t\tif($txt[$i]!=\" \"){\n\
    \t\t\treturn true;\n\t\t}\n\t}\n\t\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqgwu3vgu.php:40\n\
    Stack trace:\n#0 /tmp/tmpqgwu3vgu.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqgwu3vgu.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $lastChar = substr($txt,\
    \ -1);\n    if ($lastChar === \" \") {\n        return false;\n    }\n    return\
    \ true;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br><br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwydy9o66.php:27\n\
    Stack trace:\n#0 /tmp/tmpwydy9o66.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwydy9o66.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$lastChar = substr($txt, -1);\n\
    \tif (ctype_alpha($lastChar) && str_word_count($txt) == str_word_count($txt, 0,\
    \ strlen($txt) - 1)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n\
    }\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw967ch_1.php:24\n\
    Stack trace:\n#0 /tmp/tmpw967ch_1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpw967ch_1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$txtLength = strlen($txt);\n\
    \tif($txtLength == 0) {\n\t\treturn \"false\";\n\t}\n\t$txtExplode = explode(\"\
    \ \", $txt);\n\t$txtExplodeLength = count($txtExplode);\n\t$lastChar = substr($txtExplode[$txtExplodeLength\
    \ - 1], -1);\n\tif(ord($lastChar) >= 97 && ord($lastChar) <= 122) {\n\t\treturn\
    \ \"true\";\n\t} else {\n\t\treturn \"false\";\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "true<br>true<br>false<br>false\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp3r5dpf6a.php:37\nStack trace:\n#0 /tmp/tmp3r5dpf6a.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp3r5dpf6a.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last = substr($txt, -1);\n\
    \  if ($last === ' ') {\n    return false;\n  } else {\n    return ctype_alpha($last);\n\
    \  }\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hiue35k.php:24\n\
    Stack trace:\n#0 /tmp/tmp7hiue35k.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7hiue35k.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $x = \"\";\n    $len = strlen($txt);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($txt[$i] != \" \") {\n     \
    \       $x .= $txt[$i];\n        }\n    }\n    if (strlen($x) > 0) {\n       \
    \ if (ctype_alpha($x[strlen($x) - 1])) {\n            return true;\n        }\
    \ else {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfz1s16_c.php:38\n\
    Stack trace:\n#0 /tmp/tmpfz1s16_c.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpfz1s16_c.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last = substr($txt, -1);\n\
    \  if (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n    return\
    \ \"True\";\n  } else {\n    return \"False\";\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\nFalse\nFalse\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp2daegufm.php:28\nStack trace:\n#0 /tmp/tmp2daegufm.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2daegufm.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  if (strlen($txt)>0) {\n   \
    \ $tmp = trim($txt);\n    if (strlen($tmp)>0) {\n      $lastChar = substr($tmp,\
    \ -1);\n      if ($lastChar === ' ') {\n        return false;\n      } else {\n\
    \        return true;\n      }\n    } else {\n      return false;\n    }\n  }\
    \ else {\n    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdd8khby.php:34\n\
    Stack trace:\n#0 /tmp/tmpxdd8khby.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpxdd8khby.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn (bool) preg_match('/\\\
    s[a-zA-Z]$/', $txt);\n}\n\necho check_if_last_char_is_a_letter(\"apple pie\");\
    \ //false\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\
    \ //true\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\
    \ //false\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\"); //false\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"apple piE\"); //true\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi@\"); //false\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi3\"); //false\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple \"); //false\necho \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple\"); //false\necho \"\\n\";\n\
    function candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xxw1uky.php:41\n\
    Stack trace:\n#0 /tmp/tmp8xxw1uky.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8xxw1uky.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn !preg_match('/\\w$/',\
    \ $txt);\n}\necho check_if_last_char_is_a_letter(\"apple pie\") ? 'true' : 'false';\n\
    echo '<br>';\necho check_if_last_char_is_a_letter(\"apple pi e\") ? 'true' : 'false';\n\
    echo '<br>';\necho check_if_last_char_is_a_letter(\"apple pi e \") ? 'true' :\
    \ 'false';\necho '<br>';\necho check_if_last_char_is_a_letter(\"\") ? 'true' :\
    \ 'false';\necho '<br>';\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "false<br>false<br>true<br>true<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnlk541oi.php:28\nStack trace:\n#0 /tmp/tmpnlk541oi.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnlk541oi.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  return preg_match(\"/[a-z]\\\
    b/i\", $txt);\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwv8r2y2e.php:19\n\
    Stack trace:\n#0 /tmp/tmpwv8r2y2e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwv8r2y2e.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $char = substr($txt, -1);\n\
    \    if (ctype_alpha($char) && $char != ' ') {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\n\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_x25k6qz.php:28\n\
    Stack trace:\n#0 /tmp/tmp_x25k6qz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_x25k6qz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  if (empty($txt)) return false;\n\
    \  $arr = str_split($txt);\n  $lastChar = array_pop($arr);\n  return is_numeric($lastChar)\
    \ ? false : true;\n}\n\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffjd6xky.php:23\n\
    Stack trace:\n#0 /tmp/tmpffjd6xky.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpffjd6xky.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last_char = substr($txt,\
    \ -1);\n    if (ctype_alpha($last_char) && ctype_space(substr($txt, -2, 1))) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho check_if_last_char_is_a_letter(\"\
    apple pi e \");\necho check_if_last_char_is_a_letter(\"\");\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl5j6c_9_.php:31\n\
    Stack trace:\n#0 /tmp/tmpl5j6c_9_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpl5j6c_9_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn (ctype_alpha(substr($txt,\
    \ -1)) and (strpos($txt, ' ') !== strlen($txt) - 1));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    Aa\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"aA\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ktxmq4c.php:25\n\
    Stack trace:\n#0 /tmp/tmp0ktxmq4c.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0ktxmq4c.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$str = substr($txt, strlen($txt)\
    \ - 1);\n\tif (ctype_alpha($str) && !ctype_alpha(substr($txt, strlen($txt) - 2,\
    \ 1))) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3caz_ilh.php:31\n\
    Stack trace:\n#0 /tmp/tmp3caz_ilh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3caz_ilh.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last_char = substr($txt, -1);\n\
    \  if($last_char == '') return false;\n  return preg_match('/[a-zA-Z]/', $last_char)\
    \ && !preg_match('/\\w/', $last_char);\n}\nfunction candidate(...$args) {\n  \
    \  return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmru8k0e.php:22\n\
    Stack trace:\n#0 /tmp/tmpkmru8k0e.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkmru8k0e.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn ctype_alpha(substr($txt,\
    \ -1));\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1y0kxsly.php:26\n\
    Stack trace:\n#0 /tmp/tmp1y0kxsly.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1y0kxsly.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    return ctype_alpha(substr($txt,\
    \ -1));\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6q6oxtee.php:19\n\
    Stack trace:\n#0 /tmp/tmp6q6oxtee.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6q6oxtee.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last=substr($txt,-1);\n\t\
    return ctype_alpha($last);\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ).\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pie\").\"\\n\";\nfunction\
    \ candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnysfx_5.php:25\n\
    Stack trace:\n#0 /tmp/tmpdnysfx_5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdnysfx_5.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn (ctype_alpha(substr($txt,\
    \ -1)) && !ctype_alpha(substr($txt, -2, 1)));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6727iwcy.php:26\n\
    Stack trace:\n#0 /tmp/tmp6727iwcy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6727iwcy.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  return preg_match(\"/\\b[A-Za-z]\\\
    b$/\", $txt);\n}\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplzuhnxjw.php:19\n\
    Stack trace:\n#0 /tmp/tmplzuhnxjw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplzuhnxjw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $last_index = strlen($txt)-1;\n\
    \    if($last_index < 0) return false;\n    if($txt[$last_index] == \" \") return\
    \ false;\n    for($i = $last_index-1; $i >= 0; $i--){\n        if($txt[$i] ==\
    \ \" \") return true;\n    }\n    return false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoyvbxzgs.php:29\n\
    Stack trace:\n#0 /tmp/tmpoyvbxzgs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoyvbxzgs.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\tif(empty($txt)) {\n\t\treturn\
    \ false;\n\t} elseif(!empty($txt)) {\n\t\tif(ctype_alpha(str_split($txt)[strlen($txt)\
    \ - 1])) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7bvsj3d0.php:31\n\
    Stack trace:\n#0 /tmp/tmp7bvsj3d0.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7bvsj3d0.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn preg_match(\"/[a-z]/i\"\
    , $txt[strlen($txt) - 1]) && !preg_match(\"/[a-z]/i\", $txt[strlen($txt) - 2]);\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") ? \"True\" : \"False\";\
    \ echo \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") ? \"True\"\
    \ : \"False\"; echo \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \") ? \"True\" : \"False\"; echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\"; echo \"<br>\";\nfunction candidate(...$args) {\n \
    \   return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>True<br>False<br>False<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp1yit1m56.php:26\nStack trace:\n#0 /tmp/tmp1yit1m56.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1yit1m56.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $arr = explode(\" \", $txt);\n\
    \  $lastEl = end($arr);\n  if(ctype_alpha($lastEl[strlen($lastEl)-1])) {\n   \
    \ return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fy_clou.php:25\n\
    Stack trace:\n#0 /tmp/tmp1fy_clou.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1fy_clou.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn preg_match(\"/[a-zA-Z]\\\
    s$/\", $txt);\n}\necho check_if_last_char_is_a_letter(\"apple pie\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\") ? \"true\" : \"false\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"true\" : \"false\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n \
    \   return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\nfalse\ntrue\nfalse\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp76c2xtwr.php:27\nStack trace:\n#0 /tmp/tmp76c2xtwr.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmp76c2xtwr.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n  $last = substr($txt, -1);\n\
    \  if (is_numeric($last)) {\n    return false;\n  } else {\n    if (preg_match(\"\
    /[a-zA-Z]/\", $last)) {\n      return true;\n    } else {\n      return false;\n\
    \    }\n  }\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"a\");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"a \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    a  \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"3\");\necho \"\
    <br>\";\necho check_if_last_char_is_a_letter(\"3 \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    3  \");\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br><br><br>1<br><br><br><br><br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmplbcds_i9.php:47\nStack trace:\n#0 /tmp/tmplbcds_i9.php(59):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplbcds_i9.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    $len = strlen($txt);\n  \
    \  if ($len == 0) {\n        return false;\n    }\n    if (ctype_alpha($txt[$len\
    \ - 1])) {\n        return true;\n    }\n    return false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp0el3zx0.php:30\n\
    Stack trace:\n#0 /tmp/tmpp0el3zx0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp0el3zx0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t$last_char = substr($txt, -1);\n\
    \treturn ctype_alpha($last_char) && !ctype_alpha(substr($txt, -2, 1));\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s_7jf33.php:31\n\
    Stack trace:\n#0 /tmp/tmp8s_7jf33.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8s_7jf33.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\t// get last character\n\t$last_char\
    \ = substr($txt, -1);\n\t// find out if last character is letter\n\t$is_letter\
    \ = ctype_alpha($last_char);\n\t// find out if last character is a letter but\
    \ not part of a word\n\t$is_part_of_word = preg_match('/[^A-Za-z]([A-Za-z])/',\
    \ $txt);\n\t// evaluate if last character is letter and not part of a word\n\t\
    if ($is_letter == true && $is_part_of_word == false) {\n\t\treturn true;\n\t}\
    \ else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpymj3w_om.php:38\n\
    Stack trace:\n#0 /tmp/tmpymj3w_om.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpymj3w_om.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n    if (empty($txt)) return false;\n\
    \    $arr = explode(\" \", $txt);\n    $last = array_pop($arr);\n    return ctype_alpha($last);\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\
    \\n\";\necho check_if_last_char_is_a_letter(\"\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_if_last_char_is_a_letter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"apple\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Pumpkin pie \") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie 1\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee e \")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50ulb132.php:26\n\
    Stack trace:\n#0 /tmp/tmp50ulb132.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp50ulb132.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that returns True if the last character\n\
    // of a given string is an alphabetical character and is not\n// a part of a word,\
    \ and False otherwise.\n// Note: \"word\" is a group of characters separated by\
    \ space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E\
    \ False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
    apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
    function check_if_last_char_is_a_letter($txt) {\n\treturn preg_match(\"/\\s[a-zA-Z]$/\"\
    , $txt);\n}\necho check_if_last_char_is_a_letter(\"apple pie\") ? \"True\\n\"\
    \ : \"False\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") ? \"True\\\
    n\" : \"False\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") ? \"\
    True\\n\" : \"False\\n\";\necho check_if_last_char_is_a_letter(\"\") ? \"True\\\
    n\" : \"False\\n\";\nfunction candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
    \ pie \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Pumpkin pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"eeeee e \") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"apple pie\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"apple pi e \") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\nFalse\nFalse\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp1dycpo7s.php:23\nStack trace:\n#0 /tmp/tmp1dycpo7s.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1dycpo7s.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_137_compare_one
language: php
results:
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (is_numeric($a) && is_numeric($b)) {\n    if ($a > $b) {\n     \
    \ echo $a;\n    } elseif ($a < $b) {\n      echo $b;\n    } else {\n      echo\
    \ \"None\";\n    }\n  } elseif (is_string($a) && is_string($b)) {\n    if ($a\
    \ > $b) {\n      echo $a;\n    } elseif ($a < $b) {\n      echo $b;\n    } else\
    \ {\n      echo \"None\";\n    }\n  } elseif (is_float($a) && is_float($b)) {\n\
    \    if ($a > $b) {\n      echo $a;\n    } elseif ($a < $b) {\n      echo $b;\n\
    \    } else {\n      echo \"None\";\n    }\n  } elseif (is_string($a) && is_float($b))\
    \ {\n    if (floatval($a) > $b) {\n      echo $a;\n    } elseif (floatval($a)\
    \ < $b) {\n      echo $b;\n    } else {\n      echo \"None\";\n    }\n  } elseif\
    \ (is_float($a) && is_string($b)) {\n    if ($a > floatval($b)) {\n      echo\
    \ $a;\n    } elseif ($a < floatval($b)) {\n      echo $b;\n    } else {\n    \
    \  echo \"None\";\n    }\n  } elseif (is_string($a) && is_int($b)) {\n    if (floatval($a)\
    \ > $b) {\n      echo $a;\n    } elseif (floatval($a) < $b) {\n      echo $b;\n\
    \    } else {\n      echo \"None\";\n    }\n  } elseif (is_int($a) && is_string($b))\
    \ {\n    if ($a > floatval($b)) {\n      echo $a;\n    } elseif ($a < floatval($b))\
    \ {\n      echo $b;\n    } else {\n      echo \"None\";\n    }\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn54vf64m.php:74\n\
    Stack trace:\n#0 /tmp/tmpn54vf64m.php(84): test()\n#1 {main}\n  thrown in /tmp/tmpn54vf64m.php\
    \ on line 74\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if($a == $b) {\n    return null;\n  }\n  if(is_string($a) || is_string($b))\
    \ {\n    return (float)$a > (float)$b ? $a : $b;\n  }\n  return $a > $b ? $a :\
    \ $b;\n}\necho compare_one(1, 2.5);\necho \"<br>\";\necho compare_one(1, \"2,3\"\
    );\necho \"<br>\";\necho compare_one(\"5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"\
    1\", 1);\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 2.5<br>2,3<br>6<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a == $b) {\n\t\treturn \"None\";\n\t}elseif ($a > $b) {\n\t\t\
    return $a;\n\t}else{\n\t\treturn $b;\n\t}\n}\necho compare_one(1,2.5).\"\\n\"\
    ;\necho compare_one(1,\"2,3\").\"\\n\";\necho compare_one(\"5,1\",\"6\").\"\\\
    n\";\necho compare_one(\"1\",1).\"\\n\";\nfunction candidate(...$args) {\n   \
    \ return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcy14s0r.php:35\n\
    Stack trace:\n#0 /tmp/tmpfcy14s0r.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfcy14s0r.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\t$a = (float)$a;\n\t$b = (float)$b;\n\tif ($a == $b) {\n\t\treturn \"\
    None\";\n\t} elseif ($a > $b) {\n\t\treturn $a;\n\t} else {\n\t\treturn $b;\n\t\
    }\n}\necho compare_one(1, 2.5);\necho \"<br>\";\necho compare_one(1, \"2,3\");\n\
    echo \"<br>\";\necho compare_one(\"5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"\
    1\", 1);\necho \"<br>\";\necho compare_one(1, 2);\necho \"<br>\";\necho compare_one(1,\
    \ 2.1);\necho \"<br>\";\necho compare_one(1, 0.99999999999999999999999999);\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2<br>6<br>None<br>2<br>2.1<br>None\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmppd6j_zjb.php:39\nStack trace:\n#0 /tmp/tmppd6j_zjb.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppd6j_zjb.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if($a == $b) {\n    return null;\n  } else if(is_numeric($a) && is_numeric($b))\
    \ {\n    return max($a, $b);\n  } else if(is_string($a) && is_string($b)) {\n\
    \    return max($a, $b);\n  } else if(is_float($a) && is_float($b)) {\n    return\
    \ max($a, $b);\n  } else if(is_integer($a) && is_integer($b)) {\n    return max($a,\
    \ $b);\n  } else {\n    return null;\n  }\n}\necho compare_one(1, 2.5) . PHP_EOL;\n\
    echo compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\n\
    echo compare_one(\"1\", 1) . PHP_EOL;\n ?>\nfunction candidate(...$args) {\n \
    \   return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n\n6\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if(gettype($a) == \"integer\" && gettype($b) == \"integer\") {\n  \
    \  return $a > $b ? $a : $b;\n  } else if(gettype($a) == \"float\" && gettype($b)\
    \ == \"float\") {\n    return $a > $b ? $a : $b;\n  } else if(gettype($a) == \"\
    string\" && gettype($b) == \"string\") {\n    $a = str_replace(\",\", \".\", $a);\n\
    \    $b = str_replace(\",\", \".\", $b);\n    $a = floatval($a);\n    $b = floatval($b);\n\
    \    return $a > $b ? $a : $b;\n  } else if(gettype($a) == \"integer\" && gettype($b)\
    \ == \"float\") {\n    return $a > $b ? $a : $b;\n  } else if(gettype($a) == \"\
    float\" && gettype($b) == \"integer\") {\n    return $a > $b ? $a : $b;\n  } else\
    \ if(gettype($a) == \"integer\" && gettype($b) == \"string\") {\n    $b = str_replace(\"\
    ,\", \".\", $b);\n    $b = floatval($b);\n    return $a > $b ? $a : $b;\n  } else\
    \ if(gettype($a) == \"string\" && gettype($b) == \"integer\") {\n    $a = str_replace(\"\
    ,\", \".\", $a);\n    $a = floatval($a);\n    return $a > $b ? $a : $b;\n  } else\
    \ if(gettype($a) == \"float\" && gettype($b) == \"string\") {\n    $b = str_replace(\"\
    ,\", \".\", $b);\n    $b = floatval($b);\n    return $a > $b ? $a : $b;\n  } else\
    \ if(gettype($a) == \"string\" && gettype($b) == \"float\") {\n    $a = str_replace(\"\
    ,\", \".\", $a);\n    $a = floatval($a);\n    return $\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4z_cl51s.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (gettype($a) === gettype($b)) {\n      if ($a > $b) {\n        return\
    \ $a;\n      } else if ($a < $b) {\n        return $b;\n      } else {\n     \
    \   return \"None\";\n      }\n  } else {\n    if (gettype($a) === \"string\"\
    ) {\n      return $a;\n    } else {\n      return $b;\n    }\n  }\n}\necho compare_one(1,\
    \ 2.5).\"\\n\";\necho compare_one(1, \"2,3\").\"\\n\";\necho compare_one(\"5,1\"\
    , \"6\").\"\\n\";\necho compare_one(\"1\", 1).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplpxse4f3.php:43\n\
    Stack trace:\n#0 /tmp/tmplpxse4f3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmplpxse4f3.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_numeric($a) && is_numeric($b)) {\n\t\tif ($a > $b) {\n\t\t\t\
    return $a;\n\t\t} elseif ($a < $b) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t} else {\n\t\treturn \"Invalid Inputs\";\n\t}\n}\necho compare_one(1,\
    \ 2.5);\necho \"\\n\";\necho compare_one(1, \"2,3\");\necho \"\\n\";\necho compare_one(\"\
    5,1\", \"6\");\necho \"\\n\";\necho compare_one(\"1\", 1);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\nInvalid Inputs\nInvalid Inputs\nNone\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp1t0se_ma.php:40\nStack trace:\n#0 /tmp/tmp1t0se_ma.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1t0se_ma.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a == $b) {\n        return None;\n    } elseif ($a > $b) {\n\
    \        return $a;\n    } else {\n        return $b;\n    }\n}\necho \"<h3>Return\
    \ Larger</h3>\";\necho compare_one(1, 2.5) . \"<br />\";\necho compare_one(1,\
    \ \"2,3\") . \"<br />\";\necho compare_one(\"5,1\", \"6\") . \"<br />\";\necho\
    \ compare_one(\"1\", 1) . \"<br />\";\n\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<h3>Return Larger</h3>2.5<br />2,3<br />6<br />\nWarning: Use of undefined\
    \ constant None - assumed 'None' (this will throw an Error in a future version\
    \ of PHP) in /tmp/tmp8snggc7d.php on line 12\nNone<br />\nWarning: Use of undefined\
    \ constant None - assumed 'None' (this will throw an Error in a future version\
    \ of PHP) in /tmp/tmp8snggc7d.php on line 12\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp8snggc7d.php:37\nStack trace:\n#0 /tmp/tmp8snggc7d.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8snggc7d.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if($a == $b) {\n        return \"None\";\n    }\n    elseif ($a >\
    \ $b) {\n        return $a;\n    }\n    else {\n        return $b;\n    }\n}\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg04ibemo.php:33\n\
    Stack trace:\n#0 /tmp/tmpg04ibemo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpg04ibemo.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a==$b) {\n        return 'None';\n    } elseif ($a > $b) {\n\
    \        return $a;\n    } else {\n        return $b;\n    }\n}\n\necho compare_one(1,\
    \ 2.5).PHP_EOL;\necho compare_one(1, \"2,3\").PHP_EOL;\necho compare_one(\"5,1\"\
    , \"6\").PHP_EOL;\necho compare_one(\"1\", 1).PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzx6c8vub.php:36\n\
    Stack trace:\n#0 /tmp/tmpzx6c8vub.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzx6c8vub.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\t$a = gettype($a)==\"string\" ? str_replace(\",\",\".\",$a) : $a;\n\t\
    $b = gettype($b)==\"string\" ? str_replace(\",\",\".\",$b) : $b;\n\tif ($a==$b)\
    \ return \"None\";\n\telseif ($a>$b) return gettype($a)==\"string\" ? \"'$a'\"\
    \ : $a;\n\telse return gettype($b)==\"string\" ? \"'$b'\" : $b;\n}\necho compare_one(1,\
    \ 2.5);\necho \"<br>\";\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"\
    5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"1\", 1);\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>'2.3'<br>'6'<br>None\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpkgow6oew.php:33\nStack trace:\n#0 /tmp/tmpkgow6oew.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpkgow6oew.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a === $b) {\n\t\treturn null;\n\t}\n\tif (is_numeric($a) && is_numeric($b))\
    \ {\n\t\treturn $a > $b ? $a : $b;\n\t} else {\n\t\tif (is_numeric($a)) {\n\t\t\
    \t$a = str_replace(',', '.', $a);\n\t\t}\n\t\tif (is_numeric($b)) {\n\t\t\t$b\
    \ = str_replace(',', '.', $b);\n\t\t}\n\t\treturn $a > $b ? $a : $b;\n\t}\n}\n\
    echo compare_one(1, 2.5) . '<br>';\necho compare_one(1, \"2,3\") . '<br>';\necho\
    \ compare_one(\"5,1\", \"6\") . '<br>';\necho compare_one(\"1\", 1) . '<br>';\n\
    \nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>1<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpta_z_vut.php:43\nStack trace:\n#0 /tmp/tmpta_z_vut.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpta_z_vut.php on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } elseif ($a < $b) {\n            return $b;\n     \
    \   } else {\n            return \"None\";\n        }\n    } elseif (is_float($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } elseif ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return \"None\";\n        }\n    } elseif (is_string($a) && is_string($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return \"None\";\n    \
    \    }\n    } elseif (is_float($a) && is_int($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return \"None\";\n        }\n    } elseif (is_float($b)\
    \ && is_int($a)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ \"None\";\n        }\n    } elseif (is_string($a) && is_int($b)) {\n       \
    \ if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n     \
    \       return $b;\n        } else {\n            return \"None\";\n        }\n\
    \    } elseif (is_string($b) && is_int($a)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return \"None\";\n        }\n    } elseif (is_string($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpc8v9iiso.php on line 86\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_numeric($a) && is_numeric($b)) {\n\t\t$a = (float)$a;\n\t\t\
    $b = (float)$b;\n\t\treturn $a > $b ? $a : $b;\n\t} elseif (is_string($a) && is_string($b))\
    \ {\n\t\t$a = (float)str_replace(',', '.', $a);\n\t\t$b = (float)str_replace(',',\
    \ '.', $b);\n\t\treturn $a > $b ? $a : $b;\n\t} elseif (is_string($a) && is_numeric($b))\
    \ {\n\t\t$a = (float)str_replace(',', '.', $a);\n\t\treturn $a > $b ? $a : $b;\n\
    \t} elseif (is_numeric($a) && is_string($b)) {\n\t\t$b = (float)str_replace(',',\
    \ '.', $b);\n\t\treturn $a > $b ? $a : $b;\n\t} else {\n\t\treturn null;\n\t}\n\
    }\nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0entvu_2.php:34\n\
    Stack trace:\n#0 /tmp/tmp0entvu_2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0entvu_2.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if($a == $b) {\n        return null;\n    } else if($a < $b) {\n\
    \        return $b;\n    } else {\n        return $a;\n    }\n}\necho compare_one(1,\
    \ 2.5) . \"\\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"\
    5,1\", \"6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a == $b) {\n    return null;\n  } else if (gettype($a) == gettype($b))\
    \ {\n    return max($a, $b);\n  } else if (gettype($a) == \"integer\" && gettype($b)\
    \ == \"string\") {\n    return $b;\n  } else if (gettype($a) == \"string\" &&\
    \ gettype($b) == \"integer\") {\n    return $a;\n  } else if (gettype($a) == \"\
    integer\" && gettype($b) == \"float\") {\n    return $b;\n  } else if (gettype($a)\
    \ == \"float\" && gettype($b) == \"integer\") {\n    return $a;\n  } else if (gettype($a)\
    \ == \"string\" && gettype($b) == \"float\") {\n    return $b;\n  } else if (gettype($a)\
    \ == \"float\" && gettype($b) == \"string\") {\n    return $a;\n  }\n}\n\necho\
    \ compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\n\
    echo compare_one(\"1\", 1) . PHP_EOL;\necho compare_one(1, 2.5) . PHP_EOL;\necho\
    \ compare_one(5, 6) . PHP_EOL;\necho compare_one(7, 7) . PHP_EOL;\necho compare_one(7,\
    \ 7.0) . PHP_EOL;\necho compare_one(7.0, 7) . PHP_EOL;\necho compare_one(7.0,\
    \ 7.0) . PHP_EOL;\necho compare_one(7.1, 7.0) . PHP_EOL;\necho compare_one(7.0,\
    \ 7.1) . PHP_EOL;\necho compare_one(7.2, 7.0) . PHP_EOL;\necho compare_one(7.0,\
    \ 7.2) . PHP_EOL;\necho compare_one(7.2, 7.2) . PHP_EOL;\necho compare_one(7.2,\
    \ 7\nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqlnidro_.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (gettype($a) === gettype($b)) {\n        if ($a > $b) {\n    \
    \        return $a;\n        } else if ($a < $b) {\n            return $b;\n \
    \       } else {\n            return \"None\";\n        }\n    } else {\n    \
    \    return gettype($a) === \"integer\" ? $a : $b;\n    }\n}\necho compare_one(1,\
    \ 2.5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"\
    5,1\", \"6\") . \"<br>\";\necho compare_one(\"1\", 1) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>6<br>1<br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpfklb76fb.php:33\nStack trace:\n#0 /tmp/tmpfklb76fb.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpfklb76fb.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a > $b) {\n        return $a;\n    } elseif ($a < $b) {\n  \
    \      return $b;\n    } else {\n        return 'None';\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpklpw2ghw.php:32\n\
    Stack trace:\n#0 /tmp/tmpklpw2ghw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpklpw2ghw.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_string($a) && is_string($b)) {\n\t\t$a = (int)str_replace(',',\
    \ '.', $a);\n\t\t$b = (int)str_replace(',', '.', $b);\n\t}\n\tif ($a === $b) {\n\
    \t\treturn NULL;\n\t}\n\tif ($a > $b) {\n\t\treturn $a;\n\t}\n\treturn $b;\n}\n\
    echo compare_one(1, 2.5) . PHP_EOL;\necho compare_one(1, \"2,3\") . PHP_EOL;\n\
    echo compare_one(\"5,1\", \"6\") . PHP_EOL;\necho compare_one(\"1\", 1) . PHP_EOL;\n\
    \nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_yh9b_8.php:38\n\
    Stack trace:\n#0 /tmp/tmp2_yh9b_8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2_yh9b_8.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif(is_string($a) && is_string($b)){\n\t\t$a = str_replace(',', '.',\
    \ $a);\n\t\t$b = str_replace(',', '.', $b);\n\t\tif($a < $b){\n\t\t\treturn $b;\n\
    \t\t}elseif($a > $b){\n\t\t\treturn $a;\n\t\t}else{\n\t\t\treturn \"None\";\n\t\
    \t}\n\t}elseif(is_numeric($a) && is_numeric($b)){\n\t\tif($a < $b){\n\t\t\treturn\
    \ $b;\n\t\t}elseif($a > $b){\n\t\t\treturn $a;\n\t\t}else{\n\t\t\treturn \"None\"\
    ;\n\t\t}\n\t}elseif(is_string($a) && is_numeric($b)){\n\t\t$a = str_replace(',',\
    \ '.', $a);\n\t\tif($a < $b){\n\t\t\treturn $b;\n\t\t}elseif($a > $b){\n\t\t\t\
    return $a;\n\t\t}else{\n\t\t\treturn \"None\";\n\t\t}\n\t}elseif(is_numeric($a)\
    \ && is_string($b)){\n\t\t$b = str_replace(',', '.', $b);\n\t\tif($a < $b){\n\t\
    \t\treturn $b;\n\t\t}elseif($a > $b){\n\t\t\treturn $a;\n\t\t}else{\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t}\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2mishss5.php:58\n\
    Stack trace:\n#0 /tmp/tmp2mishss5.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp2mishss5.php\
    \ on line 58\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ( $a != $b ) {\n        $a = floatval($a);\n        $b = floatval($b);\n\
    \        return $a > $b ? $a : $b;\n    }\n    return 'None';\n}\necho compare_one(\"\
    1\", 1);\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "None\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_q8yxi6s.php:24\n\
    Stack trace:\n#0 /tmp/tmp_q8yxi6s.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_q8yxi6s.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a = (float) $a;\n    $b = (float) $b;\n    if ($a > $b) {\n    \
    \    return $a;\n    } elseif ($a < $b) {\n        return $b;\n    } else {\n\
    \        return \"None\";\n    }\n}\necho compare_one(1, \"2,3\") . PHP_EOL;\n\
    echo compare_one(\"5,1\", \"6\") . PHP_EOL;\necho compare_one(\"1\", 1) . PHP_EOL;\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4yqhafi.php:29\n\
    Stack trace:\n#0 /tmp/tmp_4yqhafi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_4yqhafi.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if($a === $b) {\n        return null;\n    }\n    if (is_int($a)\
    \ && is_int($b)) {\n        return $a > $b ? $a : $b;\n    }\n    if (is_string($a)\
    \ && is_string($b)) {\n        $a = (float)str_replace(',', '.', $a);\n      \
    \  $b = (float)str_replace(',', '.', $b);\n        return $a > $b ? $a : $b;\n\
    \    }\n    if (is_float($a) && is_float($b)) {\n        return $a > $b ? $a :\
    \ $b;\n    }\n    if (is_string($a) && is_float($b)) {\n        $a = (float)str_replace(',',\
    \ '.', $a);\n        return $a > $b ? $a : $b;\n    }\n    if (is_float($a) &&\
    \ is_string($b)) {\n        $b = (float)str_replace(',', '.', $b);\n        return\
    \ $a > $b ? $a : $b;\n    }\n    if (is_int($a) && is_string($b)) {\n        $b\
    \ = (float)str_replace(',', '.', $b);\n        return $a > $b ? $a : $b;\n   \
    \ }\n    if (is_string($a) && is_int($b)) {\n        $a = (float)str_replace(',',\
    \ '.', $a);\n        return $a > $b ? $a : $b;\n    }\n}\necho compare_one(1,\
    \ 2.5);\necho compare_one(1, \"2,3\");\necho compare_one(\"5,1\", \"6\");\necho\
    \ compare_one(\"1\", 1);\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.361\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7cxqxv5x.php:52\n\
    Stack trace:\n#0 /tmp/tmp7cxqxv5x.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp7cxqxv5x.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) == gettype($b)) {\n\t\tif ($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else if ($a < $b) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t} else if (gettype($a) == \"string\" && gettype($b) == \"\
    integer\") {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else if ($a < $b) {\n\
    \t\t\treturn $b;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} else if (gettype($a)\
    \ == \"integer\" && gettype($b) == \"string\") {\n\t\tif ($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else if ($a < $b) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t} else if (gettype($a) == \"string\" && gettype($b) == \"\
    float\") {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else if ($a < $b) {\n\t\
    \t\treturn $b;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} else if (gettype($a)\
    \ == \"float\" && gettype($b) == \"string\") {\n\t\tif ($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else if ($a < $b) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t} else if (gettype($a) == \"integer\" && gettype($b) ==\
    \ \"float\") {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else if ($a < $b)\
    \ {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} else if\
    \ (gettype($a) == \"float\" && gettype\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplm4sxs3q.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if(gettype($a) === gettype($b)){\n        if($a>$b){\n          \
    \  return $a;\n        }elseif($a === $b){\n            return \"None\";\n   \
    \     }else{\n            return $b;\n        }\n    }else{\n        if(gettype($a)\
    \ === \"string\"){\n            if(str_replace(',', '.', $a)>$b){\n          \
    \      return $a;\n            }else{\n                return $b;\n          \
    \  }\n        }elseif(gettype($b) === \"string\"){\n            if($a>str_replace(',',\
    \ '.', $b)){\n                return $a;\n            }else{\n               \
    \ return $b;\n            }\n        }\n    }\n}\necho compare_one(1, \"2,3\"\
    );\nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2,3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ecw2bz8.php:42\n\
    Stack trace:\n#0 /tmp/tmp3ecw2bz8.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp3ecw2bz8.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a == $b) {\n    return \"None\";\n  } elseif (is_int($a) && is_int($b))\
    \ {\n    return max($a, $b);\n  } elseif (is_float($a) && is_float($b)) {\n  \
    \  return max($a, $b);\n  } elseif (is_string($a) && is_string($b)) {\n    return\
    \ max($a, $b);\n  } elseif (is_string($a) && is_int($b)) {\n    return max($a,\
    \ $b);\n  } elseif (is_int($a) && is_string($b)) {\n    return max($a, $b);\n\
    \  } elseif (is_string($a) && is_float($b)) {\n    return max($a, $b);\n  } elseif\
    \ (is_float($a) && is_string($b)) {\n    return max($a, $b);\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmcun2sdq.php:36\n\
    Stack trace:\n#0 /tmp/tmpmcun2sdq.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmcun2sdq.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif($a === $b) {\n\t\treturn \"None\";\n\t}\n\telseif(is_int($a) &&\
    \ is_int($b)) {\n\t\treturn ($a > $b) ? $a : $b;\n\t}\n\telseif(is_float($a) &&\
    \ is_float($b)) {\n\t\treturn ($a > $b) ? $a : $b;\n\t}\n\telseif(is_string($a)\
    \ && is_string($b)) {\n\t\treturn ($a > $b) ? $a : $b;\n\t}\n\telseif(is_string($a)\
    \ && is_int($b)) {\n\t\treturn ($a > $b) ? $a : $b;\n\t}\n\telseif(is_int($a)\
    \ && is_string($b)) {\n\t\treturn ($a > $b) ? $a : $b;\n\t}\n\telseif(is_string($a)\
    \ && is_float($b)) {\n\t\treturn ($a > $b) ? $a : $b;\n\t}\n\telseif(is_float($a)\
    \ && is_string($b)) {\n\t\treturn ($a > $b) ? $a : $b;\n\t}\n\telseif(is_int($a)\
    \ && is_float($b)) {\n\t\treturn ($a > $b) ? $a : $b;\n\t}\n\telseif(is_float($a)\
    \ && is_int($b)) {\n\t\treturn ($a > $b) ? $a : $b;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8up3936t.php:54\n\
    Stack trace:\n#0 /tmp/tmp8up3936t.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp8up3936t.php\
    \ on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (is_string($a) && is_string($b)) {\n    $a = str_replace(',', '.',\
    \ $a);\n    $b = str_replace(',', '.', $b);\n    if ($a > $b) {\n      return\
    \ $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else {\n      return\
    \ null;\n    }\n  } elseif (is_int($a) && is_int($b)) {\n    if ($a > $b) {\n\
    \      return $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else {\n\
    \      return null;\n    }\n  } elseif (is_float($a) && is_float($b)) {\n    if\
    \ ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return $b;\n\
    \    } else {\n      return null;\n    }\n  } elseif (is_int($a) && is_float($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_float($a) && is_int($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return null;\n    }\n  } elseif (is_int($a) && is_string($b))\
    \ {\n    $b = str_replace(',', '.', $b);\n    if ($a > $b) {\n      return $a;\n\
    \    } elseif ($a < $b) {\n      return $b;\n    } else {\n      return null;\n\
    \    }\n  } elseif (is_string($a) && is_int($b)) {\n    $a = str_replace(',',\
    \ '.', $a);\n    if ($a > $b) {\n      return $a;\n    } elseif ($a <\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgnkyjy71.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_string($a) && is_string($b)) {\n\t\tif (max($a, $b) === $a)\
    \ {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_float($a)\
    \ && is_float($b)) {\n\t\tif (max($a, $b) === $a) {\n\t\t\treturn $a;\n\t\t} else\
    \ {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_int($a) && is_int($b)) {\n\t\tif\
    \ (max($a, $b) === $a) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\
    \t}\n\t} else {\n\t\treturn \"None\";\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst9q7jif.php:40\n\
    Stack trace:\n#0 /tmp/tmpst9q7jif.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpst9q7jif.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_numeric($a) && is_numeric($b)) {\n\t\tif ($a == $b) {\n\t\t\t\
    return \"None\";\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\
    \t\treturn $b;\n\t\t}\n\t} elseif (is_string($a) && is_string($b)) {\n\t\tif ($a\
    \ == $b) {\n\t\t\treturn \"None\";\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\
    \t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_string($a) && is_numeric($b))\
    \ {\n\t\tif ($a == $b) {\n\t\t\treturn \"None\";\n\t\t} elseif ($a > $b) {\n\t\
    \t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_numeric($a)\
    \ && is_string($b)) {\n\t\tif ($a == $b) {\n\t\t\treturn \"None\";\n\t\t} elseif\
    \ ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t}\n\
    }\necho compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"5,1\", \"6\")\
    \ . \"<br>\";\necho compare_one(\"1\", 1) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2,3<br>6<br>None<br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpipetj3td.php:60\nStack trace:\n#0 /tmp/tmpipetj3td.php(63): test()\n\
    #1 {main}\n  thrown in /tmp/tmpipetj3td.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\t\treturn $a == $b ? \"None\" : max($a, $b);\n}\necho compare_one(1,\
    \ 2.5);\necho \"<br>\";\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"\
    5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"1\", 1);\necho \"<br>\";\n\
    echo \"<br>\";\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>None<br><br><br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjul4e7tu.php:36\nStack trace:\n#0 /tmp/tmpjul4e7tu.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjul4e7tu.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a == $b) {\n    return null;\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    return strval(max(floatval($a), floatval($b)));\n  } elseif (is_int($a)\
    \ && is_int($b)) {\n    return max($a, $b);\n  } elseif (is_float($a) && is_float($b))\
    \ {\n    return max($a, $b);\n  } elseif (is_int($a) && is_float($b)) {\n    return\
    \ max($a, $b);\n  } elseif (is_float($a) && is_int($b)) {\n    return max($a,\
    \ $b);\n  } elseif (is_string($a) && is_int($b)) {\n    return max(floatval($a),\
    \ $b);\n  } elseif (is_string($a) && is_float($b)) {\n    return max(floatval($a),\
    \ $b);\n  } elseif (is_int($a) && is_string($b)) {\n    return max($a, floatval($b));\n\
    \  } elseif (is_float($a) && is_string($b)) {\n    return max($a, floatval($b));\n\
    \  }\n}\necho \"compare_one(\\\"5,1\\\", \\\"6\\\") \u279E \" . compare_one(\"\
    5,1\", \"6\") . PHP_EOL;\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "compare_one(\"5,1\", \"6\") \u279E 6\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpa80mojkf.php:43\nStack trace:\n#0 /tmp/tmpa80mojkf.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpa80mojkf.php on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (is_int($a) && is_int($b)) {\n    return $a > $b ? $a : $b;\n  }\
    \ else if (is_float($a) && is_float($b)) {\n    return $a > $b ? $a : $b;\n  }\
    \ else if (is_string($a) && is_string($b)) {\n    return $a > $b ? $a : $b;\n\
    \  } else {\n    return null;\n  }\n}\n\necho \"compare_one(1, 2.5) \u279E 2.5:\
    \ \" . compare_one(1, 2.5) . \"\\n\";\necho \"compare_one(1, \\\"2,3\\\") \u279E\
    \ \\\"2,3\\\": \" . compare_one(1, \"2,3\") . \"\\n\";\necho \"compare_one(\\\"\
    5,1\\\", \\\"6\\\") \u279E \\\"6\\\": \" . compare_one(\"5,1\", \"6\") . \"\\\
    n\";\necho \"compare_one(\\\"1\\\", 1) \u279E None: \" . compare_one(\"1\", 1)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "compare_one(1, 2.5) \u279E 2.5: \ncompare_one(1, \"2,3\") \u279E \"2,3\"\
    : \ncompare_one(\"5,1\", \"6\") \u279E \"6\": 6\ncompare_one(\"1\", 1) \u279E\
    \ None: \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdygrubkh.php:33\n\
    Stack trace:\n#0 /tmp/tmpdygrubkh.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdygrubkh.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if(is_numeric($a) && is_numeric($b)) {\n        if($a == $b) {\n\
    \            return \"None\";\n        } elseif($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif(is_string($a)\
    \ && is_string($b)) {\n        if($a == $b) {\n            return \"None\";\n\
    \        } elseif($a > $b) {\n            return $a;\n        } else {\n     \
    \       return $b;\n        }\n    } elseif(is_numeric($a) && is_string($b)) {\n\
    \        if(floatval($a) == floatval($b)) {\n            return \"None\";\n  \
    \      } elseif(floatval($a) > floatval($b)) {\n            return $a;\n     \
    \   } else {\n            return $b;\n        }\n    } elseif(is_string($a) &&\
    \ is_numeric($b)) {\n        if(floatval($a) == floatval($b)) {\n            return\
    \ \"None\";\n        } elseif(floatval($a) > floatval($b)) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    }\n}\necho compare_one(1,\
    \ 2.5);\necho compare_one(1, \"2,3\");\necho compare_one(\"5,1\", \"6\");\necho\
    \ compare_one(\"1\", 1);\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.52,36None\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphan42jn_.php:61\n\
    Stack trace:\n#0 /tmp/tmphan42jn_.php(64): test()\n#1 {main}\n  thrown in /tmp/tmphan42jn_.php\
    \ on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_float($a) || is_int($a)) {\n        $a = floatval($a);\n \
    \   }\n    if (is_float($b) || is_int($b)) {\n        $b = floatval($b);\n   \
    \ }\n    if (strpos($a, \",\") !== false) {\n        $a = str_replace(\",\", \"\
    .\", $a);\n    }\n    if (strpos($b, \",\") !== false) {\n        $b = str_replace(\"\
    ,\", \".\", $b);\n    }\n    if ($a == $b) {\n        return \"None\";\n    }\n\
    \    if ($a > $b) {\n        return $a;\n    } else {\n        return $b;\n  \
    \  }\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzo1apou8.php:37\n\
    Stack trace:\n#0 /tmp/tmpzo1apou8.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpzo1apou8.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_numeric($a) && is_numeric($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return NULL;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return NULL;\n        }\n    } elseif (is_string($a) && is_numeric($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return NULL;\n        }\n\
    \    } elseif (is_numeric($a) && is_string($b)) {\n        if ($a > $b) {\n  \
    \          return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return NULL;\n        }\n    }\n}\necho compare_one(1,\
    \ 2.5) . PHP_EOL;\necho compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"\
    5,1\", \"6\") . PHP_EOL;\necho compare_one(\"1\", 1) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $aa = (float) $a;\n    $bb = (float) $b;\n    if ($aa == $bb) {\n\
    \        return null;\n    } elseif ($aa > $bb) {\n        return $a;\n    } else\
    \ {\n        return $b;\n    }\n}\n$a = compare_one(1, 2.5);\necho $a;\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '2.5'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_float($a) or is_float($b)) {\n\t\tif ($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else if ($b > $a) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t} else if (is_int($a) or is_int($b)) {\n\t\tif ($a > $b)\
    \ {\n\t\t\treturn $a;\n\t\t} else if ($b > $a) {\n\t\t\treturn $b;\n\t\t} else\
    \ {\n\t\t\treturn \"None\";\n\t\t}\n\t} else if (is_string($a) or is_string($b))\
    \ {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else if ($b > $a) {\n\t\t\treturn\
    \ $b;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t}\n}\necho compare_one(1,\
    \ 2.5);\necho \"<br>\";\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"\
    5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"1\", 1);\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>None\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpynqaxbl2.php:56\nStack trace:\n#0 /tmp/tmpynqaxbl2.php(59): test()\n\
    #1 {main}\n  thrown in /tmp/tmpynqaxbl2.php on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a_type = gettype($a);\n    $b_type = gettype($b);\n    if($a_type\
    \ != $b_type) {\n        if(($a_type == \"string\" && $b_type == \"integer\")\
    \ || ($a_type == \"integer\" && $b_type == \"string\")) {\n            if($a_type\
    \ == \"string\") {\n                $temp = floatval($a);\n                $a\
    \ = floatval($b);\n                $b = $temp;\n            } else {\n       \
    \         $temp = floatval($b);\n                $b = floatval($a);\n        \
    \        $a = $temp;\n            }\n        } else if($a_type == \"string\" &&\
    \ $b_type == \"float\") {\n            $a = floatval($a);\n        } else if($a_type\
    \ == \"float\" && $b_type == \"string\") {\n            $b = floatval($b);\n \
    \       }\n    }\n    return $a > $b ? $a : ($a < $b ? $b : null);\n}\necho compare_one(1,\
    \ 2.5) . \"\\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"\
    5,1\", \"6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2\n6\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpregepjvd.php:45\n\
    Stack trace:\n#0 /tmp/tmpregepjvd.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpregepjvd.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if(is_float($a) || is_float($b)){\n        if(is_string($a)){\n \
    \           $a = (float) str_replace(',', '.', $a);\n        }\n        if(is_string($b)){\n\
    \            $b = (float) str_replace(',', '.', $b);\n        }\n        if($a\
    \ == $b){\n            return \"None\";\n        } else {\n            return\
    \ $a > $b ? $a : $b;\n        }\n    } else {\n        if($a == $b){\n       \
    \     return \"None\";\n        } else {\n            return $a > $b ? $a : $b;\n\
    \        }\n    }\n}\necho compare_one(1, 2.5);\necho \"<br>\";\necho compare_one(1,\
    \ \"2,3\");\necho \"<br>\";\necho compare_one(\"5,1\", \"6\");\necho \"<br>\"\
    ;\necho compare_one(\"1\", 1);\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>None\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_0ubgims.php:50\nStack trace:\n#0 /tmp/tmp_0ubgims.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_0ubgims.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if( is_numeric($a) && is_numeric($b) ) {\n        if($a == $b) {\n\
    \            return null;\n        } else if( floatval($a) > floatval($b) ) {\n\
    \            return $a;\n        } else {\n            return $b;\n        }\n\
    \    } else if( is_numeric($a) && is_string($b) ) {\n        if(floatval($a) ==\
    \ floatval($b)) {\n            return null;\n        } else if( floatval($a) >\
    \ floatval($b) ) {\n            return $a;\n        } else {\n            return\
    \ $b;\n        }\n    } else if( is_string($a) && is_numeric($b) ) {\n       \
    \ if(floatval($a) == floatval($b)) {\n            return null;\n        } else\
    \ if( floatval($a) > floatval($b) ) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    } else if( is_string($a) && is_string($b)\
    \ ) {\n        if(floatval($a) == floatval($b)) {\n            return null;\n\
    \        } else if( floatval($a) > floatval($b) ) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if($a == $b) {\n        return \"None\";\n    }\n    if(is_string($a)\
    \ || is_string($b)) {\n        return $a > $b ? $a : $b;\n    }\n    return $a\
    \ > $b ? $a : $b;\n}\n\necho compare_one(1, 2.5) . PHP_EOL;\necho compare_one(1,\
    \ \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\necho compare_one(\"\
    1\", 1) . PHP_EOL;\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33osdfa2.php:37\n\
    Stack trace:\n#0 /tmp/tmp33osdfa2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp33osdfa2.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_int($a) && is_int($b)) {\n        return ($a > $b) ? $a :\
    \ $b;\n    } elseif (is_float($a) && is_float($b)) {\n        return ($a > $b)\
    \ ? $a : $b;\n    } elseif (is_string($a) && is_string($b)) {\n        $a = str_replace(',',\
    \ '.', $a);\n        $b = str_replace(',', '.', $b);\n        return ($a > $b)\
    \ ? $a : $b;\n    } else {\n        return null;\n    }\n}\necho compare_one(1,\
    \ \"2,3\");\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmuc3wmxl.php:30\n\
    Stack trace:\n#0 /tmp/tmpmuc3wmxl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmuc3wmxl.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a == $b) {\n    return \"None\";\n  }\n  if (is_numeric($a) &&\
    \ is_numeric($b)) {\n    if (floatval($a) == floatval($b)) {\n      return \"\
    None\";\n    }\n    return (floatval($a) > floatval($b)) ? $a : $b;\n  }\n  if\
    \ (is_numeric($a) && !is_numeric($b)) {\n    return $b;\n  }\n  if (!is_numeric($a)\
    \ && is_numeric($b)) {\n    return $a;\n  }\n  if (is_string($a) && is_string($b))\
    \ {\n    return (strlen($a) > strlen($b)) ? $a : $b;\n  }\n}\necho compare_one(1,\
    \ 2.5);\necho \"<br>\";\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"\
    5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"1\", 1);\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>5,1<br>None\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpi24j5rf8.php:47\nStack trace:\n#0 /tmp/tmpi24j5rf8.php(52): test()\n\
    #1 {main}\n  thrown in /tmp/tmpi24j5rf8.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a = is_string($a) ? floatval(str_replace(',', '.', $a)) : $a;\n\
    \    $b = is_string($b) ? floatval(str_replace(',', '.', $b)) : $b;\n    if($a\
    \ > $b) {\n        return $a;\n    } elseif($a < $b) {\n        return $b;\n \
    \   } else {\n        return 'None';\n    }\n}\nfunction candidate(...$args) {\n\
    \    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphl0g89nu.php:30\n\
    Stack trace:\n#0 /tmp/tmphl0g89nu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphl0g89nu.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\t$int_a = (int)$a;\n\t$int_b = (int)$b;\n\t$float_a = (float)$a;\n\t\
    $float_b = (float)$b;\n\tif ($int_a == $int_b && $float_a == $float_b) {\n\t\t\
    return null;\n\t}\n\tif ($int_a > $int_b) {\n\t\treturn $int_a;\n\t}\n\tif ($int_a\
    \ < $int_b) {\n\t\treturn $int_b;\n\t}\n\tif ($float_a > $float_b) {\n\t\treturn\
    \ $float_a;\n\t}\n\tif ($float_a < $float_b) {\n\t\treturn $float_b;\n\t}\n}\n\
    echo compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"5,1\", \"6\") . \"\
    <br>\";\necho compare_one(\"1\", 1) . \"<br>\";\necho compare_one(1, 2.5) . \"\
    <br>\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2<br>6<br><br>2<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoett5swx.php:41\n\
    Stack trace:\n#0 /tmp/tmpoett5swx.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpoett5swx.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif(gettype($a) == gettype($b)){\n\t\tif($a == $b){\n\t\t\treturn null;\n\
    \t\t}\n\t\tif($a > $b){\n\t\t\treturn $a;\n\t\t}\n\t\tif($a < $b){\n\t\t\treturn\
    \ $b;\n\t\t}\n\t}else{\n\t\treturn 'None';\n\t}\n}\necho compare_one(1, \"2,3\"\
    ) . \"<br>\";\necho compare_one(\"5,1\", \"6\") . \"<br>\";\necho compare_one(\"\
    1\", 1) . \"<br>\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "None<br>6<br>None<br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpseoj61gw.php:34\nStack trace:\n#0 /tmp/tmpseoj61gw.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpseoj61gw.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (is_string($a) && is_string($b)) {\n    $compare = strcmp($a, $b);\n\
    \    if ($compare == 0) {\n      return None;\n    } elseif ($compare < 0) {\n\
    \      return $b;\n    } else {\n      return $a;\n    }\n  } elseif (is_float($a)\
    \ && is_float($b)) {\n    if ($a == $b) {\n      return None;\n    } elseif ($a\
    \ < $b) {\n      return $b;\n    } else {\n      return $a;\n    }\n  } elseif\
    \ (is_int($a) && is_int($b)) {\n    if ($a == $b) {\n      return None;\n    }\
    \ elseif ($a < $b) {\n      return $b;\n    } else {\n      return $a;\n    }\n\
    \  } elseif (is_string($a) && is_float($b)) {\n    if ($a > $b) {\n      return\
    \ $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_string($a) && is_int($b))\
    \ {\n    if ($a > $b) {\n      return $a;\n    } else {\n      return $b;\n  \
    \  }\n  } elseif (is_string($b) && is_float($a)) {\n    if ($b > $a) {\n     \
    \ return $b;\n    } else {\n      return $a;\n    }\n  } elseif (is_string($b)\
    \ && is_int($a)) {\n    if ($b > $a) {\n      return $b;\n    } else {\n     \
    \ return $a;\n    }\n  } elseif (is_float($a) && is_int($b)) {\n    if ($a > $b)\
    \ {\n      return $a;\n    } else {\n      return $b;\n    }\n  } elseif (is_float($b)\
    \ && is_int($a)) {\n    if ($b > $a) {\n      return $b;\n    } else {\n     \
    \ return $a;\n   \nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9lmcxqmo.php on line 87\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a == $b) {\n        return \"None\";\n    }\n    else if (gettype($a)\
    \ == gettype($b)) {\n        if ($a > $b) {\n            return $a;\n        }\n\
    \        else {\n            return $b;\n        }\n    }\n    else if (gettype($a)\
    \ == \"string\") {\n        $new_a = str_replace(\",\", \".\", $a);\n        $new_a\
    \ = floatval($new_a);\n        if ($new_a > $b) {\n            return $a;\n  \
    \      }\n        else {\n            return $b;\n        }\n    }\n    else if\
    \ (gettype($b) == \"string\") {\n        $new_b = str_replace(\",\", \".\", $b);\n\
    \        $new_b = floatval($new_b);\n        if ($a > $new_b) {\n            return\
    \ $a;\n        }\n        else {\n            return $b;\n        }\n    }\n \
    \   else {\n        return \"Something went wrong\";\n    }\n}\necho compare_one(1,\
    \ 2.5);\necho \"<br>\";\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"\
    5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"1\", 1);\necho \"<br>\";\n\
    echo compare_one(\"3.3\", \"3,3\");\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Something went wrong<br>2,3<br>6<br>None<br>3.3\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpem4m5zih.php:61\nStack trace:\n#0 /tmp/tmpem4m5zih.php(70):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpem4m5zih.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (is_string($a) && is_string($b)) {\n    if (floatval($a) == floatval($b))\
    \ {\n      return null;\n    } else {\n      return floatval($a) > floatval($b)\
    \ ? $a : $b;\n    }\n  } elseif (is_int($a) && is_string($b)) {\n    if ($a ==\
    \ floatval($b)) {\n      return null;\n    } else {\n      return $a > floatval($b)\
    \ ? $a : $b;\n    }\n  } elseif (is_string($a) && is_int($b)) {\n    if (floatval($a)\
    \ == $b) {\n      return null;\n    } else {\n      return floatval($a) > $b ?\
    \ $a : $b;\n    }\n  } elseif (is_float($a) && is_string($b)) {\n    if ($a ==\
    \ floatval($b)) {\n      return null;\n    } else {\n      return $a > floatval($b)\
    \ ? $a : $b;\n    }\n  } elseif (is_string($a) && is_float($b)) {\n    if (floatval($a)\
    \ == $b) {\n      return null;\n    } else {\n      return floatval($a) > $b ?\
    \ $a : $b;\n    }\n  } elseif (is_int($a) && is_float($b)) {\n    if ($a == $b)\
    \ {\n      return null;\n    } else {\n      return $a > $b ? $a : $b;\n    }\n\
    \  } elseif (is_float($a) && is_int($b)) {\n    if ($a == $b) {\n      return\
    \ null;\n    } else {\n      return $a > $b ? $a : $b;\n    }\n  } elseif (is_int($a)\
    \ && is_int($b)) {\n    if ($a == $b) {\n      return null;\n    } else {\n  \
    \    return $a > $b ? $a : $b;\n    }\n  } elseif (is_float($a) && is\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgkuqtn1c.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_int($a) && is_int($b)) {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\
    \t\t} elseif ($a < $b) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn \"None\"\
    ;\n\t\t}\n\t} elseif (is_int($a) && is_float($b)) {\n\t\tif ($a > $b) {\n\t\t\t\
    return $a;\n\t\t} elseif ($a < $b) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t} elseif (is_int($a) && is_string($b)) {\n\t\tif ($a > $b)\
    \ {\n\t\t\treturn $a;\n\t\t} elseif ($a < $b) {\n\t\t\treturn $b;\n\t\t} else\
    \ {\n\t\t\treturn \"None\";\n\t\t}\n\t} elseif (is_float($a) && is_int($b)) {\n\
    \t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} elseif ($a < $b) {\n\t\t\treturn $b;\n\
    \t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} elseif (is_float($a) && is_float($b))\
    \ {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} elseif ($a < $b) {\n\t\t\treturn\
    \ $b;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} elseif (is_float($a) &&\
    \ is_string($b)) {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} elseif ($a < $b)\
    \ {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} elseif\
    \ (is_string($a) && is_int($b)) {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t\
    } elseif ($\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_man1ra8.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_numeric($a) && is_numeric($b)) {\n\t\tif ($a > $b) {\n\t\t\t\
    return $a;\n\t\t} elseif ($a < $b) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t} else {\n\t\treturn \"None\";\n\t}\n}\necho compare_one(3,\
    \ 2.5) . \"\\n\";\necho compare_one(3, \"2,3\") . \"\\n\";\necho compare_one(\"\
    5,1\", \"6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\nNone\nNone\nNone\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpvaiapsd3.php:36\nStack trace:\n#0 /tmp/tmpvaiapsd3.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvaiapsd3.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a > $b) {\n        return $a;\n    } elseif ($a < $b) {\n  \
    \      return $b;\n    } else {\n        return \"None\";\n    }\n}\n\necho compare_one(1,\
    \ 2.5);\necho \"<br>\";\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"\
    5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"1\", 1);\necho \"<br>\";\n\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>None<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpitbxs07i.php:41\nStack trace:\n#0 /tmp/tmpitbxs07i.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpitbxs07i.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_string($a) && is_string($b)) {\n\t\t$a = str_replace(',', '.',\
    \ $a);\n\t\t$b = str_replace(',', '.', $b);\n\t\tif ($a == $b) {\n\t\t\treturn\
    \ NULL;\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn\
    \ $b;\n\t\t}\n\t} elseif (is_string($a) && is_float($b)) {\n\t\t$a = str_replace(',',\
    \ '.', $a);\n\t\tif ($a == $b) {\n\t\t\treturn NULL;\n\t\t} elseif ($a > $b) {\n\
    \t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_string($a)\
    \ && is_int($b)) {\n\t\t$a = str_replace(',', '.', $a);\n\t\tif ($a == $b) {\n\
    \t\t\treturn NULL;\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\
    \t\t\treturn $b;\n\t\t}\n\t} elseif (is_string($b) && is_float($a)) {\n\t\t$b\
    \ = str_replace(',', '.', $b);\n\t\tif ($a == $b) {\n\t\t\treturn NULL;\n\t\t\
    } elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\
    \t} elseif (is_string($b) && is_int($a)) {\n\t\t$b = str_replace(',', '.', $b);\n\
    \t\tif ($a == $b) {\n\t\t\treturn NULL;\n\t\t} elseif ($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_float($a) && is_string($b))\
    \ {\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5t_n_fr8.php on line 74\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a === $b) {\n\t\treturn \"None\";\n\t} elseif ($a > $b) {\n\t\t\
    return $a;\n\t} else {\n\t\treturn $b;\n\t}\n}\necho compare_one(1, 2.5).\"\\\
    n\";\necho compare_one(1, \"2,3\").\"\\n\";\necho compare_one(\"5,1\", \"6\").\"\
    \\n\";\necho compare_one(\"1\", 1).\"\\n\";\nfunction candidate(...$args) {\n\
    \    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjsrz1z7.php:35\n\
    Stack trace:\n#0 /tmp/tmppjsrz1z7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppjsrz1z7.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a == $b) {\n        return null;\n    } else if (gettype($a)\
    \ == gettype($b)) {\n        return $a > $b ? $a : $b;\n    } else if (gettype($a)\
    \ == \"integer\" && gettype($b) == \"float\") {\n        return $b;\n    } else\
    \ if (gettype($a) == \"float\" && gettype($b) == \"integer\") {\n        return\
    \ $a;\n    } else if (gettype($a) == \"string\" && gettype($b) == \"integer\"\
    ) {\n        return $a;\n    } else if (gettype($a) == \"integer\" && gettype($b)\
    \ == \"string\") {\n        return $b;\n    } else if (gettype($a) == \"string\"\
    \ && gettype($b) == \"float\") {\n        return $a;\n    } else if (gettype($a)\
    \ == \"float\" && gettype($b) == \"string\") {\n        return $b;\n    }\n}\n\
    echo compare_one(1, 2.5);\necho \"\\n\";\necho compare_one(1, \"2,3\");\necho\
    \ \"\\n\";\necho compare_one(\"5,1\", \"6\");\necho \"\\n\";\necho compare_one(\"\
    1\", 1);\necho \"\\n\";\necho compare_one(6, \"6,7\");\necho \"\\n\";\necho compare_one(\"\
    3,1\", 4);\necho \"\\n\";\necho compare_one(\"5\", \"2,1\");\necho \"\\n\";\n\
    echo compare_one(5, \"2,1\");\necho \"\\n\";\necho compare_one(\"5,1\", 2);\n\
    echo \"\\n\";\necho compare_one(4, 2.1);\necho \"\\n\";\necho compare_one(4, \"\
    2,1\");\necho \"\\n\";\necho compare_one(\"4,1\", 2);\necho \"\\n\";\necho compare_one(\"\
    4\", 2.5);\necho \"\\n\";\necho compare_one(\"4\", \"2,5\");\necho \"\\n\";\n\
    echo compare_one(3.1, 2);\necho \"\\n\";\necho compare_one(3\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp34nhrs5c.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a == $b) {\n        return \"None\";\n    } else if ($a < $b)\
    \ {\n        return $b;\n    } else {\n        return $a;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vyx3ocg.php:31\n\
    Stack trace:\n#0 /tmp/tmp0vyx3ocg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0vyx3ocg.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_string($a) && is_string($b)) {\n        return (double)$a\
    \ > (double)$b ? $a : $b;\n    } elseif (is_int($a) && is_int($b)) {\n       \
    \ return $a > $b ? $a : $b;\n    } elseif (is_float($a) && is_float($b)) {\n \
    \       return $a > $b ? $a : $b;\n    } elseif (is_string($a) && is_int($b))\
    \ {\n        return (double)$a > $b ? $a : $b;\n    } elseif (is_string($a) &&\
    \ is_float($b)) {\n        return (double)$a > $b ? $a : $b;\n    } elseif (is_int($a)\
    \ && is_string($b)) {\n        return $a > (double)$b ? $a : $b;\n    } elseif\
    \ (is_float($a) && is_string($b)) {\n        return $a > (double)$b ? $a : $b;\n\
    \    } else {\n        return null;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt83faj4r.php:35\n\
    Stack trace:\n#0 /tmp/tmpt83faj4r.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpt83faj4r.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_string($a) && is_string($b)) {\n        if (is_numeric($a)\
    \ && is_numeric($b)) {\n            $a = (float) str_replace(',', '.', $a);\n\
    \            $b = (float) str_replace(',', '.', $b);\n        }\n    }\n    if\
    \ ($a === $b) {\n        return NULL;\n    }\n    return $a > $b ? $a : $b;\n\
    }\necho compare_one(1, 2.5) . '<br>';\necho compare_one(1, \"2,3\") . '<br>';\n\
    echo compare_one(\"5,1\", \"6\") . '<br>';\necho compare_one(\"1\", 1) . '<br>';\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>1<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpppp0fz2x.php:37\nStack trace:\n#0 /tmp/tmpppp0fz2x.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpppp0fz2x.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a_is_string = is_string($a);\n    $b_is_string = is_string($b);\n\
    \    if($a_is_string && $b_is_string) {\n        return max($a, $b);\n    }\n\
    \    if(!$a_is_string && !$b_is_string) {\n        return max($a, $b);\n    }\n\
    \    if($a_is_string) {\n        $a = floatval(str_replace(',', '.', $a));\n \
    \   }\n    if($b_is_string) {\n        $b = floatval(str_replace(',', '.', $b));\n\
    \    }\n    return max($a, $b);\n}\necho compare_one(1, 2.5).'<br>';\necho compare_one(1,\
    \ \"2,3\").'<br>';\necho compare_one(\"5,1\", \"6\").'<br>';\necho compare_one(\"\
    1\", 1).'<br>';\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2.3<br>6<br>1<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpfco9i2wm.php:40\nStack trace:\n#0 /tmp/tmpfco9i2wm.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpfco9i2wm.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\t$int = 1;\n\t$float = 1.1;\n\t$string = \"1.1\";\n\t$other = \"2,3\"\
    ;\n\tif (is_int($a) == true && is_int($b) == true) {\n\t\tif ($a > $b) {\n\t\t\
    \treturn $a;\n\t\t} elseif ($a < $b) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\t\
    return \"None\";\n\t\t}\n\t} elseif (is_float($a) == true && is_float($b) == true)\
    \ {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} elseif ($a < $b) {\n\t\t\treturn\
    \ $b;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} elseif (is_string($a)\
    \ == true && is_string($b) == true) {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\
    \t} elseif ($a < $b) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn \"None\"\
    ;\n\t\t}\n\t} elseif (is_int($a) == true && is_float($b) == true) {\n\t\tif ($a\
    \ > $b) {\n\t\t\treturn $a;\n\t\t} elseif ($a < $b) {\n\t\t\treturn $b;\n\t\t\
    } else {\n\t\t\treturn \"None\";\n\t\t}\n\t} elseif (is_int($a) == true && is_string($b)\
    \ == true) {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} elseif ($a < $b) {\n\
    \t\t\treturn $b;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} elseif (is_float($a)\
    \ == true && is_int($b) == true) {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t\
    } elseif ($a < $b) {\n\t\t\treturn $\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgh3nedq6.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a === $b) {\n\t\treturn None;\n\t}\n\telseif ($a > $b) {\n\t\t\
    return $a;\n\t}\n\telse {\n\t\treturn $b;\n\t}\n}\necho compare_one(1, 2.5) .\
    \ PHP_EOL;\necho compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\"\
    , \"6\") . PHP_EOL;\necho compare_one(\"1\", 1) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplp0y1ou8.php:38\n\
    Stack trace:\n#0 /tmp/tmplp0y1ou8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmplp0y1ou8.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\n}\necho compare_one(1, 2.5);\necho compare_one(1, \"2,3\");\necho compare_one(\"\
    5,1\", \"6\");\necho compare_one(\"1\", 1);\nfunction candidate(...$args) {\n\
    \    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_p2yn_z.php:22\n\
    Stack trace:\n#0 /tmp/tmpa_p2yn_z.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpa_p2yn_z.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_int($a) && is_int($b)) {\n\t\tif ($a === $b) {\n\t\t\treturn\
    \ 'None';\n\t\t} else {\n\t\t\treturn $a > $b ? $a : $b;\n\t\t}\n\t} elseif (is_float($a)\
    \ && is_float($b)) {\n\t\tif ($a === $b) {\n\t\t\treturn 'None';\n\t\t} else {\n\
    \t\t\treturn $a > $b ? $a : $b;\n\t\t}\n\t} elseif (is_string($a) && is_string($b))\
    \ {\n\t\tif ($a === $b) {\n\t\t\treturn 'None';\n\t\t} else {\n\t\t\treturn strlen($a)\
    \ > strlen($b) ? $a : $b;\n\t\t}\n\t} elseif (is_int($a) && is_float($b)) {\n\t\
    \tif ($a === $b) {\n\t\t\treturn 'None';\n\t\t} else {\n\t\t\treturn $a > $b ?\
    \ $a : $b;\n\t\t}\n\t} elseif (is_int($a) && is_string($b)) {\n\t\tif ($a ===\
    \ $b) {\n\t\t\treturn 'None';\n\t\t} else {\n\t\t\treturn strlen($a) > strlen($b)\
    \ ? $a : $b;\n\t\t}\n\t} elseif (is_float($a) && is_int($b)) {\n\t\tif ($a ===\
    \ $b) {\n\t\t\treturn 'None';\n\t\t} else {\n\t\t\treturn $a > $b ? $a : $b;\n\
    \t\t}\n\t} elseif (is_float($a) && is_string($b)) {\n\t\tif ($a === $b) {\n\t\t\
    \treturn 'None';\n\t\t} else {\n\t\t\treturn strlen($a) > strlen($b) ? $a : $b;\n\
    \t\t}\n\t} elseif (is_string($a) && is_int($b)) {\n\t\tif ($a === $b) {\n\t\t\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpddbffupv.php on line 71\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if(is_numeric($a) && is_numeric($b)){\n        if($a == $b){\n  \
    \          return \"None\";\n        }\n        if($a > $b){\n            return\
    \ $a;\n        }\n        else{\n            return $b;\n        }\n    }\n  \
    \  elseif(is_numeric($a) && !is_numeric($b)){\n        if(substr($b, -1) === \"\
    ,\"){\n            $b = str_replace(\",\", \".\", $b);\n        }\n        if(substr($b,\
    \ -1) === \".\"){\n            $b = str_replace(\".\", \"\", $b);\n        }\n\
    \        if($a > $b){\n            return $a;\n        }\n        else{\n    \
    \        return $b;\n        }\n    }\n    elseif(!is_numeric($a) && is_numeric($b)){\n\
    \        if(substr($a, -1) === \",\"){\n            $a = str_replace(\",\", \"\
    .\", $a);\n        }\n        if(substr($a, -1) === \".\"){\n            $a =\
    \ str_replace(\".\", \"\", $a);\n        }\n        if($a > $b){\n           \
    \ return $a;\n        }\n        else{\n            return $b;\n        }\n  \
    \  }\n    else{\n        if(substr($a, -1) === \",\"){\n            $a = str_replace(\"\
    ,\", \".\", $a);\n        }\n        if(substr($a, -1) === \".\"){\n         \
    \   $a = str_replace(\".\", \"\", $a);\n        }\n        if(substr($b, -1) ===\
    \ \",\"){\n            $b = str_replace(\",\", \".\", $b);\n        }\n      \
    \  if(substr($b, -1) === \".\"){\n            $b = str_replace(\".\", \"\", $b);\n\
    \        }\n        if($a > $b){\n            return $a;\n        }\n        else{\n\
    \            return $b;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4qqrv1h.php:84\n\
    Stack trace:\n#0 /tmp/tmpl4qqrv1h.php(87): test()\n#1 {main}\n  thrown in /tmp/tmpl4qqrv1h.php\
    \ on line 84\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (is_numeric($a) && is_numeric($b)) {\n    if ($a == $b) {\n    \
    \  return NULL;\n    } else {\n      if ($a > $b) {\n        return $a;\n    \
    \  } else {\n        return $b;\n      }\n    }\n  } else {\n    $newA = str_replace(\"\
    ,\", \".\", $a);\n    $newB = str_replace(\",\", \".\", $b);\n    if ($newA ==\
    \ $newB) {\n      return NULL;\n    } else {\n      if ($newA > $newB) {\n   \
    \     return $a;\n      } else {\n        return $b;\n      }\n    }\n  }\n}\n\
    echo compare_one(1, 2.5) . \"\\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\n\
    echo compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_int($a) && is_int($b)) {\n\t\treturn max($a, $b);\n\t} elseif\
    \ (is_string($a) && is_string($b)) {\n\t\treturn floatval(max($a, $b));\n\t} elseif\
    \ (is_float($a) && is_float($b)) {\n\t\treturn max($a, $b);\n\t} else {\n\t\t\
    return \"None\";\n\t}\n}\necho compare_one(1, 2.5).\"\\n\";\necho compare_one(1,\
    \ \"2,3\").\"\\n\";\necho compare_one(\"5,1\", \"6\").\"\\n\";\necho compare_one(\"\
    1\", 1).\"\\n\";\necho compare_one(1, 1).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "None\nNone\n6\nNone\n1\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj9tcmc04.php:32\nStack trace:\n#0 /tmp/tmpj9tcmc04.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj9tcmc04.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\t$a = is_numeric($a) ? $a : floatval(str_replace(',', '.', $a));\n\t\
    $b = is_numeric($b) ? $b : floatval(str_replace(',', '.', $b));\n\tif ($a > $b)\
    \ return $a;\n\tif ($b > $a) return $b;\n\treturn null;\n}\necho compare_one(1,\
    \ \"2,3\") . \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6pj1fc3.php:27\n\
    Stack trace:\n#0 /tmp/tmpi6pj1fc3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpi6pj1fc3.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a == $b) {\n    return \"None\";\n  } elseif ($a > $b) {\n   \
    \ return $a;\n  } else {\n    return $b;\n  }\n}\necho compare_one(1, 2.5) . PHP_EOL;\n\
    echo compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\n\
    echo compare_one(\"1\", 1) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd8ldyn9i.php:35\n\
    Stack trace:\n#0 /tmp/tmpd8ldyn9i.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd8ldyn9i.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (gettype($a) == gettype($b)) {\n    if ($a == $b) {\n      return\
    \ \"None\";\n    } else {\n      return max($a, $b);\n    }\n  } else {\n    return\
    \ \"None\";\n  }\n}\necho compare_one(1, 2.5);\necho \"<br>\";\necho compare_one(1,\
    \ \"2,3\");\necho \"<br>\";\necho compare_one(\"5,1\", \"6\");\necho \"<br>\"\
    ;\necho compare_one(\"1\", 1);\necho \"<br>\";\necho compare_one(1, 2);\necho\
    \ \"<br>\";\necho compare_one(1, 1);\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "None<br>None<br>6<br>None<br>2<br>None\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp3feejfu0.php:38\nStack trace:\n#0 /tmp/tmp3feejfu0.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3feejfu0.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a = (float) $a;\n    $b = (float) $b;\n    if ($a == $b) {\n   \
    \     return null;\n    } elseif ($a > $b) {\n        return $a;\n    } else {\n\
    \        return $b;\n    }\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwj4r72tv.php:26\n\
    Stack trace:\n#0 /tmp/tmpwj4r72tv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwj4r72tv.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a == $b) {\n    return \"None\";\n  } elseif ($a > $b) {\n   \
    \ return \"$a\";\n  } else {\n    return \"$b\";\n  }\n}\n\necho compare_one(1,\
    \ 2.5) . \"\\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"\
    5,1\", \"6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_taw_2z6.php:29\n\
    Stack trace:\n#0 /tmp/tmp_taw_2z6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_taw_2z6.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (gettype($a) == \"integer\" && gettype($b) == \"integer\") {\n \
    \   if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return $b;\n\
    \    } else {\n      return \"None\";\n    }\n  } elseif (gettype($a) == \"double\"\
    \ && gettype($b) == \"double\") {\n    if ($a > $b) {\n      return $a;\n    }\
    \ elseif ($a < $b) {\n      return $b;\n    } else {\n      return \"None\";\n\
    \    }\n  } elseif (gettype($a) == \"string\" && gettype($b) == \"string\") {\n\
    \    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return\
    \ $b;\n    } else {\n      return \"None\";\n    }\n  } elseif (gettype($a) ==\
    \ \"integer\" && gettype($b) == \"double\") {\n    if ($a > $b) {\n      return\
    \ $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else {\n      return\
    \ \"None\";\n    }\n  } elseif (gettype($a) == \"integer\" && gettype($b) == \"\
    string\") {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n\
    \      return $b;\n    } else {\n      return \"None\";\n    }\n  } elseif (gettype($a)\
    \ == \"double\" && gettype($b) == \"integer\") {\n    if ($a > $b) {\n      return\
    \ $a;\n    } elseif ($a < $b) {\n      return $b;\n    } else {\n      return\
    \ \"None\";\n    }\n  } elseif (gettype($a) == \"double\" && gettype($b) == \"\
    string\") {\n    if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n\
    \      return $b;\n    } else {\n      return \"None\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpimc46ypc.php on line 71\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a = (float)$a;\n    $b = (float)$b;\n    if($a > $b) {\n       \
    \ return $a;\n    } elseif($a < $b) {\n        return $b;\n    } else {\n    \
    \    return \"None\";\n    }\n}\necho compare_one(5,5);\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "None\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70qhr3cp.php:27\n\
    Stack trace:\n#0 /tmp/tmp70qhr3cp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp70qhr3cp.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\treturn $a == $b ? null : max($a, $b);\n}\necho compare_one(1, 2.5)\
    \ . PHP_EOL;\necho compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\"\
    , \"6\") . PHP_EOL;\necho compare_one(\"1\", 1) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a == $b) {\n        return \"None\";\n    } else if ($a > $b)\
    \ {\n        return $a;\n    } else {\n        return $b;\n    }\n}\necho \"1,\
    \ 2.5 : \" . compare_one(1, 2.5) . \"<br>\";\necho \"1, '2,3' : \" . compare_one(1,\
    \ \"2,3\") . \"<br>\";\necho \"'5,1', '6' : \" . compare_one(\"5,1\", \"6\") .\
    \ \"<br>\";\necho \"'1', 1 : \" . compare_one(\"1\", 1) . \"<br>\";\necho \"<hr>\"\
    ;\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1, 2.5 : 2.5<br>1, '2,3' : 2,3<br>'5,1', '6' : 6<br>'1', 1 : None<br><hr>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmppt6d5t40.php:37\nStack\
    \ trace:\n#0 /tmp/tmppt6d5t40.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppt6d5t40.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a = floatval($a);\n    $b = floatval($b);\n    return $a > $b ?\
    \ $a : ($a == $b ? null : $b);\n}\necho compare_one(1, 2.5);\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_s6tmfxj.php:21\n\
    Stack trace:\n#0 /tmp/tmp_s6tmfxj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_s6tmfxj.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_int($a) == true && is_int($b) == true) {\n\t\tif ($a == $b)\
    \ {\n\t\t\treturn 'None';\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else\
    \ {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_float($a) == true && is_float($b)\
    \ == true) {\n\t\tif ($a == $b) {\n\t\t\treturn 'None';\n\t\t} elseif ($a > $b)\
    \ {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_string($a)\
    \ == true && is_string($b) == true) {\n\t\tif ($a == $b) {\n\t\t\treturn 'None';\n\
    \t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\
    \t}\n\t} elseif (is_int($a) == true && is_float($b) == true) {\n\t\treturn $b;\n\
    \t} elseif (is_float($a) == true && is_int($b) == true) {\n\t\treturn $a;\n\t\
    } elseif (is_int($a) == true && is_string($b) == true) {\n\t\treturn $b;\n\t}\
    \ elseif (is_string($a) == true && is_int($b) == true) {\n\t\treturn $a;\n\t}\
    \ elseif (is_float($a) == true && is_string($b) == true) {\n\t\treturn $b;\n\t\
    } elseif (is_string($a) == true && is_float($b) == true) {\n\t\treturn $a;\n\t\
    }\n}\necho compare_one(1, '2,3') . '<br>';\necho compare_one('5,1', '6') . '<br>';\n\
    echo compare_one('1', 1) . '<br>';\necho compare_one(1, 2.5) . '\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyx3blvbx.php on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_numeric($a) && is_numeric($b)) {\n\t\tif ($a == $b) {\n\t\t\t\
    return 'None';\n\t\t} else {\n\t\t\treturn $a > $b ? $a : $b;\n\t\t}\n\t} else\
    \ {\n\t\treturn $a;\n\t}\n}\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_c3tm9x4.php:31\n\
    Stack trace:\n#0 /tmp/tmp_c3tm9x4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_c3tm9x4.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a == $b) {\n\t\treturn false;\n\t} elseif ($a > $b) {\n\t\treturn\
    \ $a;\n\t} else {\n\t\treturn $b;\n\t}\n}\necho compare_one(1, 2.5) . \"\\n\"\
    ;\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") .\
    \ \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_ezwig9.php:36\n\
    Stack trace:\n#0 /tmp/tmpq_ezwig9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq_ezwig9.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif($a == $b) {\n\t\treturn \"None\";\n\t} else if($a > $b) {\n\t\t\
    return $a;\n\t} else {\n\t\treturn $b;\n\t}\n}\necho compare_one(1, 2.5) . \"\
    <br>\";\necho compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"5,1\", \"\
    6\") . \"<br>\";\necho compare_one(\"1\", 1) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>None<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpf8g02b1p.php:35\nStack trace:\n#0 /tmp/tmpf8g02b1p.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmpf8g02b1p.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (filter_var($a, FILTER_VALIDATE_INT) && filter_var($b, FILTER_VALIDATE_INT))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return \"None\";\n\
    \        }\n    } elseif (filter_var($a, FILTER_VALIDATE_FLOAT) && filter_var($b,\
    \ FILTER_VALIDATE_FLOAT)) {\n        if ($a > $b) {\n            return $a;\n\
    \        } elseif ($a < $b) {\n            return $b;\n        } else {\n    \
    \        return \"None\";\n        }\n    } elseif (filter_var($a, FILTER_VALIDATE_FLOAT)\
    \ && filter_var($b, FILTER_VALIDATE_FLOAT)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } elseif ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return \"None\";\n        }\n    } elseif (filter_var($a,\
    \ FILTER_VALIDATE_FLOAT) && filter_var($b, FILTER_VALIDATE_FLOAT)) {\n       \
    \ if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n     \
    \       return $b;\n        } else {\n            return \"None\";\n        }\n\
    \    } elseif (filter_var($a, FILTER_VALIDATE_FLOAT) && is_string($b)) {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n \
    \           return $b;\n        } else {\n            return \"None\";\n     \
    \   }\n    } elseif (filter_var($a, FILTER_VALIDATE_FLOAT) && is_string($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return \"None\";\n    \
    \    }\nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3xwepejt.php on line 74\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if(is_numeric($a) && is_numeric($b)) {\n        if(gettype($a) ===\
    \ gettype($b)) {\n            if($a < $b) {\n                return $b;\n    \
    \        } else if($a > $b) {\n                return $a;\n            } else\
    \ {\n                return null;\n            }\n        } else {\n         \
    \   return null;\n        }\n    } else {\n        return null;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4sw15t3f.php:33\n\
    Stack trace:\n#0 /tmp/tmp4sw15t3f.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4sw15t3f.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a == $b) {\n        return \"None\";\n    } elseif ($a > $b)\
    \ {\n        return $a;\n    } else {\n        return $b;\n    }\n}\necho compare_one(1,\
    \ 2.5) . \"\\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"\
    5,1\", \"6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5d6fc3b.php:36\n\
    Stack trace:\n#0 /tmp/tmpc5d6fc3b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc5d6fc3b.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  $a = floatval($a);\n  $b = floatval($b);\n  if ($a === $b) {\n    return\
    \ NULL;\n  } elseif ($a > $b) {\n    return $a;\n  } else {\n    return $b;\n\
    \  }\n}\necho compare_one(\"5,1\", \"6\");\nfunction candidate(...$args) {\n \
    \   return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt72zy8h4.php:27\n\
    Stack trace:\n#0 /tmp/tmpt72zy8h4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpt72zy8h4.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_int($a) && is_int($b)) {\n        return $a > $b ? $a : $b;\n\
    \    } elseif (is_float($a) && is_float($b)) {\n        return $a > $b ? $a :\
    \ $b;\n    } elseif (is_string($a) && is_string($b)) {\n        return $a > $b\
    \ ? $a : $b;\n    } else {\n        return null;\n    }\n}\necho compare_one(1,\
    \ 2.5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"\
    5,1\", \"6\") . \"<br>\";\necho compare_one(\"1\", 1) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br>6<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvp6vslp.php:31\n\
    Stack trace:\n#0 /tmp/tmpsvp6vslp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsvp6vslp.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_int($a) and is_int($b)) {\n        if ($a > $b) {\n      \
    \      return $a;\n        } else if ($a < $b) {\n            return $b;\n   \
    \     } else {\n            return null;\n        }\n    } else if (is_float($a)\
    \ and is_float($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } else if ($a < $b) {\n            return $b;\n        } else {\n         \
    \   return null;\n        }\n    } else if (is_string($a) and is_string($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } else if ($a < $b) {\n\
    \            return $b;\n        } else {\n            return null;\n        }\n\
    \    } else {\n        return null;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7cwef2uh.php:45\n\
    Stack trace:\n#0 /tmp/tmp7cwef2uh.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp7cwef2uh.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a == $b) {\n\t\treturn \"None\";\n\t} else if ($a > $b) {\n\t\t\
    return $a;\n\t} else {\n\t\treturn $b;\n\t}\n}\nfunction candidate(...$args) {\n\
    \    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1o96fkm.php:31\n\
    Stack trace:\n#0 /tmp/tmpk1o96fkm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk1o96fkm.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a == $b) {\n\t\treturn null;\n\t} elseif ($a > $b) {\n\t\treturn\
    \ $a;\n\t} else {\n\t\treturn $b;\n\t}\n}\necho compare_one(2, 2);\necho compare_one(5,\
    \ 4);\necho compare_one(5, 5);\necho compare_one(\"5\", 5);\necho compare_one(\"\
    5\", \"3\");\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '55'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_string($a) && is_string($b)) {\n\t\t$a = str_replace(',', '.',\
    \ $a);\n\t\t$b = str_replace(',', '.', $b);\n\t\tif ($a == $b) {\n\t\t\treturn\
    \ NULL;\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn\
    \ $b;\n\t\t}\n\t} elseif (is_float($a) && is_float($b)) {\n\t\tif ($a == $b) {\n\
    \t\t\treturn NULL;\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\
    \t\t\treturn $b;\n\t\t}\n\t} elseif (is_int($a) && is_int($b)) {\n\t\tif ($a ==\
    \ $b) {\n\t\t\treturn NULL;\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t\
    } else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_string($a) && is_float($b))\
    \ {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t\
    }\n\t} elseif (is_string($a) && is_int($b)) {\n\t\tif ($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_float($a) && is_string($b))\
    \ {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t\
    }\n\t} elseif (is_float($a) && is_int($b)) {\n\t\tif ($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_int($a) && is_string($b))\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7tsyj47p.php on line 62\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a == $b) {\n\t\treturn \"None\";\n\t}\n\t$a = str_replace(\",\"\
    , \".\", $a);\n\t$b = str_replace(\",\", \".\", $b);\n\tif (is_numeric($a) &&\
    \ is_numeric($b)) {\n\t\tif (floatval($a) > floatval($b)) {\n\t\t\treturn floatval($a);\n\
    \t\t} else {\n\t\t\treturn floatval($b);\n\t\t}\n\t} else {\n\t\tif (strlen($a)\
    \ > strlen($b)) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t\
    }\n}\necho compare_one(1, 2.5);\necho \"\\n\";\necho compare_one(1, \"2,3\");\n\
    echo \"\\n\";\necho compare_one(\"5,1\", \"6\");\necho \"\\n\";\necho compare_one(\"\
    1\", 1);\necho \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2.3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzd2th_6e.php:43\n\
    Stack trace:\n#0 /tmp/tmpzd2th_6e.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpzd2th_6e.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if($a > $b) {\n    return $a;\n  }\n  elseif($b > $a) {\n    return\
    \ $b;\n  }\n  else {\n    return \"None\";\n  }\n}\necho compare_one(1, 2.5) .\
    \ \"\\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"5,1\"\
    , \"6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdysso6w.php:37\n\
    Stack trace:\n#0 /tmp/tmpsdysso6w.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsdysso6w.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) !== gettype($b)) {\n\t\treturn max($a, $b);\n\t} else\
    \ {\n\t\treturn null;\n\t}\n}\necho compare_one(1, 2.5) . PHP_EOL;\necho compare_one(1,\
    \ \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\necho compare_one(\"\
    1\", 1) . PHP_EOL;\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6p177eje.php:26\n\
    Stack trace:\n#0 /tmp/tmp6p177eje.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6p177eje.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a = floatval($a);\n    $b = floatval($b);\n    return $a != $b ?\
    \ ($a > $b ? $a : $b) : null;\n}\necho compare_one(1, 2.5);\necho \"\\n\";\necho\
    \ compare_one(1, \"2,3\");\necho \"\\n\";\necho compare_one(\"5,1\", \"6\");\n\
    echo \"\\n\";\necho compare_one(\"1\", 1);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2\n6\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8nonyndy.php:28\n\
    Stack trace:\n#0 /tmp/tmp8nonyndy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8nonyndy.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a = floatval($a);\n    $b = floatval($b);\n    return $a == $b ?\
    \ NULL : $a > $b ? $a : $b;\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3euh1k9.php:20\n\
    Stack trace:\n#0 /tmp/tmpt3euh1k9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpt3euh1k9.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a === $b) {\n    return \"None\";\n  }\n  if (is_numeric($a) &&\
    \ is_numeric($b)) {\n    if (floatval($a) > floatval($b)) {\n      return $a;\n\
    \    } else {\n      return $b;\n    }\n  } else {\n    if (strlen($a) > strlen($b))\
    \ {\n      return $a;\n    } else {\n      return $b;\n    }\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp30oeq71.php:39\n\
    Stack trace:\n#0 /tmp/tmpp30oeq71.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpp30oeq71.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_string($a) && is_string($b)) {\n        $p = floatval(str_replace(',',\
    \ '.', $a));\n        $q = floatval(str_replace(',', '.', $b));\n        if ($p\
    \ == $q) {\n            return null;\n        } elseif ($p > $q) {\n         \
    \   return $a;\n        } else {\n            return $b;\n        }\n    } elseif\
    \ (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n            return\
    \ null;\n        } elseif ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    } elseif (is_float($a) && is_float($b))\
    \ {\n        if ($a == $b) {\n            return null;\n        } elseif ($a >\
    \ $b) {\n            return $a;\n        } else {\n            return $b;\n  \
    \      }\n    } elseif (is_int($a) && is_int($b)) {\n        if ($a == $b) {\n\
    \            return null;\n        } elseif ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_float($b)) {\n        $c = floatval(str_replace(',', '.', $a));\n    \
    \    if ($c == $b) {\n            return null;\n        } elseif ($c > $b) {\n\
    \            return $a;\n        } else {\n            return $b;\n        }\n\
    \    } elseif (is_string($a) && is_int($b)) {\n        $c = floatval(str_replace(',',\
    \ '.', $a));\n        if ($c == $b) {\n            return null;\n        } elseif\
    \ ($c > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    } elseif (is_float($a) && is_string($b)) {\n        $d = floatval(str_\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpc1bdfs5t.php on line 65\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $c = max($a, $b);\n    if (is_string($a) && is_string($b)) {\n  \
    \      return $c;\n    } elseif (is_string($a) && is_numeric($b)) {\n        return\
    \ (float) $c;\n    } elseif (is_numeric($a) && is_string($b)) {\n        return\
    \ (float) $c;\n    } elseif (is_numeric($a) && is_numeric($b)) {\n        return\
    \ $c;\n    } else {\n        return \"None\";\n    }\n}\necho compare_one(1, 2.5).\"\
    \\n\";\necho compare_one(1, \"2,3\").\"\\n\";\necho compare_one(\"5,1\", \"6\"\
    ).\"\\n\";\necho compare_one(\"1\", 1).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2\n6\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7pfa1sjj.php:37\n\
    Stack trace:\n#0 /tmp/tmp7pfa1sjj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7pfa1sjj.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a > $b) {\n        return $a;\n    } elseif ($a < $b) {\n  \
    \      return $b;\n    } else {\n        return null;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\t$a = (is_numeric($a)) ? (int)$a : $a;\n\t$b = (is_numeric($b)) ? (int)$b\
    \ : $b;\n\tif ($a === $b) {\n\t\treturn \"None\";\n\t} elseif ($a > $b) {\n\t\t\
    return $a;\n\t} else {\n\t\treturn $b;\n\t}\n}\n\necho compare_one(1, 2.5) . PHP_EOL;\n\
    echo compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\n\
    echo compare_one(\"1\", 1) . PHP_EOL;\n\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n2,3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mz3fsxm.php:33\n\
    Stack trace:\n#0 /tmp/tmp4mz3fsxm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4mz3fsxm.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $typeA = gettype($a);\n    $typeB = gettype($b);\n    if ($typeA\
    \ == $typeB) {\n        if ($a > $b) {\n            return $a;\n        } elseif\
    \ ($a < $b) {\n            return $b;\n        } else {\n            return \"\
    None\";\n        }\n    } else {\n        if ($typeA == \"string\") {\n      \
    \      $a = str_replace(\",\", \".\", $a);\n            $a = floatval($a);\n \
    \       }\n        if ($typeB == \"string\") {\n            $b = str_replace(\"\
    ,\", \".\", $b);\n            $b = floatval($b);\n        }\n        if ($a >\
    \ $b) {\n            return $a;\n        } elseif ($a < $b) {\n            return\
    \ $b;\n        } else {\n            return \"None\";\n        }\n    }\n}\necho\
    \ compare_one(1, 2.5) . \"\\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\necho\
    \ compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2.3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd_apqjt.php:52\n\
    Stack trace:\n#0 /tmp/tmprd_apqjt.php(58): test()\n#1 {main}\n  thrown in /tmp/tmprd_apqjt.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $typeA = gettype($a);\n    $typeB = gettype($b);\n    if ($typeA\
    \ === $typeB) {\n        if ($a === $b) {\n            return NULL;\n        }\
    \ elseif ($a > $b) {\n            return $a;\n        } else {\n            return\
    \ $b;\n        }\n    } elseif ($typeA === \"string\") {\n        if ($a > $b)\
    \ {\n            return $a;\n        } else {\n            return $b;\n      \
    \  }\n    } elseif ($typeB === \"string\") {\n        if ($a > $b) {\n       \
    \     return $a;\n        } else {\n            return $b;\n        }\n    } elseif\
    \ ($typeA === \"integer\") {\n        if ($a > $b) {\n            return $a;\n\
    \        } else {\n            return $b;\n        }\n    } elseif ($typeB ===\
    \ \"integer\") {\n        if ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    } elseif ($typeA === \"float\") {\n\
    \        if ($a > $b) {\n            return $a;\n        } else {\n          \
    \  return $b;\n        }\n    } elseif ($typeB === \"float\") {\n        if ($a\
    \ > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    }\n}\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"\
    5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"1\", 1);\necho \"<br>\";\n\
    echo compare_one(1, 2.5);\necho \"<br>\";\necho compare_one(5, 4);\necho \"<br>\"\
    ;\necho compare_one(3, 3);\necho \"<br>\";\necho compare_one(0, 0);\necho \"<br>\"\
    ;\necho compare_one(1, 0);\necho \"<br>\";\necho compare_one(0, 1);\necho \"<br>\"\
    ;\necho compare_one(1, 0.0);\necho \"<br\nfunction candidate(...$args) {\n   \
    \ return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkdk7tw20.php on line 84\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_numeric($a) && is_numeric($b)) {\n\t\tif ($a == $b) {\n\t\t\t\
    return 'None';\n\t\t} elseif (is_float($a) || is_float($b)) {\n\t\t\tif ($a >\
    \ $b) {\n\t\t\t\treturn $a;\n\t\t\t} else {\n\t\t\t\treturn $b;\n\t\t\t}\n\t\t\
    } elseif (is_string($a) || is_string($b)) {\n\t\t\tif ($a > $b) {\n\t\t\t\treturn\
    \ $a;\n\t\t\t} else {\n\t\t\t\treturn $b;\n\t\t\t}\n\t\t} elseif (is_int($a) ||\
    \ is_int($b)) {\n\t\t\tif ($a > $b) {\n\t\t\t\treturn $a;\n\t\t\t} else {\n\t\t\
    \t\treturn $b;\n\t\t\t}\n\t\t}\n\t}\n}\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp120so48b.php:44\n\
    Stack trace:\n#0 /tmp/tmp120so48b.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp120so48b.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if($a === $b) {\n        return \"None\";\n    } else if(is_string($a)\
    \ && is_string($b)) {\n        return floatval($a) > floatval($b) ? floatval($a)\
    \ : floatval($b);\n    } else if(is_string($a) && is_float($b)) {\n        return\
    \ floatval($a) > $b ? floatval($a) : $b;\n    } else if(is_float($a) && is_string($b))\
    \ {\n        return $a > floatval($b) ? $a : floatval($b);\n    } else if(is_float($a)\
    \ && is_float($b)) {\n        return $a > $b ? $a : $b;\n    } else if(is_int($a)\
    \ && is_int($b)) {\n        return $a > $b ? $a : $b;\n    } else if(is_int($a)\
    \ && is_float($b)) {\n        return $a > $b ? $a : $b;\n    } else if(is_float($a)\
    \ && is_int($b)) {\n        return $a > $b ? $a : $b;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavptvg6u.php:38\n\
    Stack trace:\n#0 /tmp/tmpavptvg6u.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpavptvg6u.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if(!is_int($a) && !is_float($a) && !is_string($a)){\n        return\
    \ null;\n    }\n    if(!is_int($b) && !is_float($b) && !is_string($b)){\n    \
    \    return null;\n    }\n    if(is_string($a)){\n        $a = str_replace(\"\
    ,\", \".\", $a);\n    }\n    if(is_string($b)){\n        $b = str_replace(\",\"\
    , \".\", $b);\n    }\n    if($a == $b){\n        return null;\n    }\n    if($a\
    \ < $b){\n        return $b;\n    }\n    if($a > $b){\n        return $a;\n  \
    \  }\n}\necho compare_one(1, 2.5);\necho \"<br>\";\necho compare_one(1, \"2,3\"\
    );\necho \"<br>\";\necho compare_one(\"5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"\
    1\", 1);\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2.3<br>6<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm65lfv1l.php:49\n\
    Stack trace:\n#0 /tmp/tmpm65lfv1l.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpm65lfv1l.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\treturn $a !== $b ? max([$a, $b]) : null;\n}\necho compare_one(\"1\"\
    , 1);\necho \"<br>\";\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"\
    5,1\", \"6\");\necho \"<br>\";\necho compare_one(1, 2.5);\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>2,3<br>6<br>2.5\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpbkwekv5i.php:32\nStack trace:\n#0 /tmp/tmpbkwekv5i.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbkwekv5i.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a === $b) {\n        return null;\n    }\n    if (is_int($a)\
    \ && is_int($b)) {\n        return $a > $b ? $a : $b;\n    }\n    if (is_string($a)\
    \ && is_string($b)) {\n        $a = str_replace(',', '.', $a);\n        $b = str_replace(',',\
    \ '.', $b);\n        return $a > $b ? $a : $b;\n    }\n    if (is_int($a) && is_string($b))\
    \ {\n        $b = str_replace(',', '.', $b);\n        return $a > $b ? $a : $b;\n\
    \    }\n    if (is_string($a) && is_int($b)) {\n        $a = str_replace(',',\
    \ '.', $a);\n        return $a > $b ? $a : $b;\n    }\n    if (is_float($a) &&\
    \ is_float($b)) {\n        return $a > $b ? $a : $b;\n    }\n    if (is_float($a)\
    \ && is_int($b)) {\n        return $a > $b ? $a : $b;\n    }\n    if (is_int($a)\
    \ && is_float($b)) {\n        return $a > $b ? $a : $b;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6nxs_xa.php:50\n\
    Stack trace:\n#0 /tmp/tmpi6nxs_xa.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpi6nxs_xa.php\
    \ on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (is_numeric($a) && is_numeric($b)) {\n    if ($a === $b) {\n   \
    \   return;\n    } else {\n      return $a > $b ? $a : $b;\n    }\n  } else if\
    \ (!is_numeric($a) && !is_numeric($b)) {\n    if ($a === $b) {\n      return;\n\
    \    } else {\n      return $a > $b ? $a : $b;\n    }\n  } else {\n    if ($a\
    \ === $b) {\n      return;\n    } else {\n      return $a > $b ? $a : $b;\n  \
    \  }\n  }\n}\necho compare_one(1, 2.5) . \"<br />\";\necho compare_one(1, \"2,3\"\
    ) . \"<br />\";\necho compare_one(\"5,1\", \"6\") . \"<br />\";\necho compare_one(\"\
    1\", 1) . \"<br />\";\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br />2,3<br />6<br />1<br />\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmph2uz2niy.php:48\nStack trace:\n#0 /tmp/tmph2uz2niy.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmph2uz2niy.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif($a == $b) {\n\t\treturn 'None';\n\t}\n\tif(is_numeric($a) && is_numeric($b))\
    \ {\n\t\tif($a < $b) {\n\t\t\treturn $b;\n\t\t}\n\t\treturn $a;\n\t}\n\tif(is_numeric($a)\
    \ && !is_numeric($b)) {\n\t\treturn $b;\n\t}\n\tif(!is_numeric($a) && is_numeric($b))\
    \ {\n\t\treturn $a;\n\t}\n\tif(!is_numeric($a) && !is_numeric($b)) {\n\t\t$a =\
    \ floatval(str_replace(',', '.', $a));\n\t\t$b = floatval(str_replace(',', '.',\
    \ $b));\n\t\tif($a > $b) {\n\t\t\treturn $a;\n\t\t}\n\t\treturn $b;\n\t}\n}\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6xrk97q.php:45\n\
    Stack trace:\n#0 /tmp/tmpa6xrk97q.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpa6xrk97q.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_numeric($a) && is_numeric($b)) {\n\t\t$a = (float)$a;\n\t\t\
    $b = (float)$b;\n\t\treturn $a < $b ? $b : ($a > $b ? $a : NULL);\n\t}\n\telseif\
    \ (is_string($a) && is_string($b)) {\n\t\t$a = (float)str_replace(',', '.', $a);\n\
    \t\t$b = (float)str_replace(',', '.', $b);\n\t\treturn $a < $b ? $b : ($a > $b\
    \ ? $a : NULL);\n\t}\n\telseif ((is_string($a) && is_numeric($b)) || (is_numeric($a)\
    \ && is_string($b))) {\n\t\t$a = (float)str_replace(',', '.', $a);\n\t\t$b = (float)str_replace(',',\
    \ '.', $b);\n\t\treturn $a < $b ? $b : ($a > $b ? $a : NULL);\n\t}\n\telse {\n\
    \t\treturn NULL;\n\t}\n}\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9ipusl6.php:36\n\
    Stack trace:\n#0 /tmp/tmpw9ipusl6.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpw9ipusl6.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if(!$a || !$b) {\n    return null;\n  }\n  if(is_int($a) && is_int($b))\
    \ {\n    return $a > $b ? $a : $b;\n  }\n  if(is_string($a) && is_string($b))\
    \ {\n    return strlen($a) > strlen($b) ? $a : $b;\n  }\n  if(is_float($a) &&\
    \ is_float($b)) {\n    return $a > $b ? $a : $b;\n  }\n  if((is_int($a) || is_float($a))\
    \ && (is_int($b) || is_float($b))) {\n    return $a > $b ? $a : $b;\n  }\n  if((is_int($a)\
    \ || is_float($a) || is_string($a)) && (is_int($b) || is_float($b) || is_string($b)))\
    \ {\n    return $a > $b ? $a : $b;\n  }\n  return null;\n}\necho compare_one(1,\
    \ 2.5) . \"\\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"\
    5,1\", \"6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n5,1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7vczcgt.php:45\n\
    Stack trace:\n#0 /tmp/tmp_7vczcgt.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp_7vczcgt.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) == gettype($b)){\n\t\tif ($a == $b){\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t\telse if ($a > $b){\n\t\t\treturn $a;\n\t\t}\n\t\telse{\n\
    \t\t\treturn $b;\n\t\t}\n\t}\n\telse if (gettype($a) == \"integer\" || gettype($a)\
    \ == \"float\"){\n\t\tif (gettype($b) == \"string\"){\n\t\t\t$b = str_replace(\"\
    ,\", \".\", $b);\n\t\t\tif ($a == $b){\n\t\t\t\treturn \"None\";\n\t\t\t}\n\t\t\
    \telse if ($a > $b){\n\t\t\t\treturn $a;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn\
    \ $b;\n\t\t\t}\n\t\t}\n\t}\n\telse if (gettype($b) == \"integer\" || gettype($b)\
    \ == \"float\"){\n\t\tif (gettype($a) == \"string\"){\n\t\t\t$a = str_replace(\"\
    ,\", \".\", $a);\n\t\t\tif ($a == $b){\n\t\t\t\treturn \"None\";\n\t\t\t}\n\t\t\
    \telse if ($a > $b){\n\t\t\t\treturn $a;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn\
    \ $b;\n\t\t\t}\n\t\t}\n\t}\n}\necho compare_one(1, 2.5) . \"\\n\";\necho compare_one(1,\
    \ \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"\
    1\", 1) . \"\\n\";\necho compare_one(\"5,5\", \"6\") . \"\\n\";\necho compare_one(\"\
    6\", \"5,5\") . \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n2.3\n6\nNone\n6\n6\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp7y899xmq.php:63\nStack trace:\n#0 /tmp/tmp7y899xmq.php(72): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7y899xmq.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ( gettype($a) == \"integer\" && gettype($b) == \"integer\" ) {\n\
    \t\tif ( $a > $b ) {\n\t\t\treturn $a;\n\t\t} else if ( $a < $b ) {\n\t\t\treturn\
    \ $b;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} else if ( gettype($a)\
    \ == \"float\" && gettype($b) == \"float\" ) {\n\t\tif ( $a > $b ) {\n\t\t\treturn\
    \ $a;\n\t\t} else if ( $a < $b ) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t} else if ( gettype($a) == \"string\" && gettype($b) ==\
    \ \"string\" ) {\n\t\tif ( $a > $b ) {\n\t\t\treturn $a;\n\t\t} else if ( $a <\
    \ $b ) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} else\
    \ if ( gettype($a) == \"integer\" && gettype($b) == \"float\" ) {\n\t\tif ( $a\
    \ > $b ) {\n\t\t\treturn $a;\n\t\t} else if ( $a < $b ) {\n\t\t\treturn $b;\n\t\
    \t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} else if ( gettype($a) == \"integer\"\
    \ && gettype($b) == \"string\" ) {\n\t\tif ( $a > $b ) {\n\t\t\treturn $a;\n\t\
    \t} else if ( $a < $b ) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn \"None\"\
    ;\n\t\t}\n\t} else if ( gettype($a) == \"float\" && gettype($b) == \"integer\"\
    \ ) {\n\t\tif ( $a > $b ) {\n\t\t\treturn $a;\n\t\t} else if ( $a < $b ) {\n\t\
    \t\treturn $b;\n\t\t} else {\n\t\t\t\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpo1rdfb8q.php on line 73\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) === \"string\" && gettype($b) === \"string\") {\n\t\
    \t$a = str_replace(\",\", \".\", $a);\n\t\t$b = str_replace(\",\", \".\", $b);\n\
    \t\tif (floatval($a) === floatval($b)) {\n\t\t\treturn \"None\";\n\t\t} else if\
    \ (floatval($a) > floatval($b)) {\n\t\t\treturn strval($a);\n\t\t} else {\n\t\t\
    \treturn strval($b);\n\t\t}\n\t} else if (gettype($a) === \"integer\" && gettype($b)\
    \ === \"integer\") {\n\t\tif ($a === $b) {\n\t\t\treturn \"None\";\n\t\t} else\
    \ if ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t\
    } else if (gettype($a) === \"float\" && gettype($b) === \"float\") {\n\t\tif ($a\
    \ === $b) {\n\t\t\treturn \"None\";\n\t\t} else if ($a > $b) {\n\t\t\treturn $a;\n\
    \t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} else if (gettype($a) === \"string\"\
    \ && gettype($b) === \"integer\") {\n\t\t$a = str_replace(\",\", \".\", $a);\n\
    \t\tif (floatval($a) === $b) {\n\t\t\treturn \"None\";\n\t\t} else if (floatval($a)\
    \ > $b) {\n\t\t\treturn strval($a);\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t\
    } else if (gettype($a) === \"string\" && gettype($b) === \"float\") {\n\t\t$a\
    \ = str_replace(\",\", \".\", $a);\n\t\tif (floatval($a) === $b) {\n\t\t\treturn\
    \ \"None\";\n\t\t} else if (floatval($a) > $b) {\n\t\t\treturn strval($a);\n\t\
    \t} else {\n\t\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpv2jdmdej.php on line 69\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_numeric($a) && is_numeric($b)) {\n\t\t$a = floatval($a);\n\t\
    \t$b = floatval($b);\n\t\tif ($a < $b) {\n\t\t\treturn $b;\n\t\t} elseif ($a >\
    \ $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t} else {\n\
    \t\treturn null;\n\t}\n}\necho compare_one(1, 2.5) . \"\\n\";\necho compare_one(1,\
    \ \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"\
    1\", 1) . \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7l517af.php:34\n\
    Stack trace:\n#0 /tmp/tmpe7l517af.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe7l517af.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a == $b) {\n        return null;\n    }\n    if (gettype($a)\
    \ == \"string\") {\n        $a = floatval(str_replace(\",\", \".\", $a));\n  \
    \  }\n    if (gettype($b) == \"string\") {\n        $b = floatval(str_replace(\"\
    ,\", \".\", $b));\n    }\n    return gettype($a) == gettype($b) ?\n    max($a,\
    \ $b) :\n    max($a, $b) == $a ? gettype($a) : gettype($b);\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65ppgjy7.php:30\n\
    Stack trace:\n#0 /tmp/tmp65ppgjy7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp65ppgjy7.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif($a == $b) {\n\t\treturn \"None\";\n\t} else if($a < $b) {\n\t\t\
    return $b;\n\t} else {\n\t\treturn $a;\n\t}\n}\n\necho compare_one(1, 2.5) . \"\
    \\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"\
    6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsbrfwguo.php:37\n\
    Stack trace:\n#0 /tmp/tmpsbrfwguo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsbrfwguo.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a = is_numeric($a) ? floatval($a) : $a;\n    $b = is_numeric($b)\
    \ ? floatval($b) : $b;\n    return ($a == $b) ? NULL : max($a, $b);\n}\necho compare_one(1,\
    \ 2.5) . PHP_EOL;\necho compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"\
    5,1\", \"6\") . PHP_EOL;\necho compare_one(\"1\", 1) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr02zo95g.php:25\n\
    Stack trace:\n#0 /tmp/tmpr02zo95g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpr02zo95g.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_int($a) && is_int($b)) {\n        if ($a === $b) {\n     \
    \       return null;\n        } else {\n            return max($a, $b);\n    \
    \    }\n    }\n    if (is_string($a) && is_string($b)) {\n        if (floatval($a)\
    \ === floatval($b)) {\n            return null;\n        } else {\n          \
    \  return (floatval($a) > floatval($b)) ? $a : $b;\n        }\n    }\n    if (is_float($a)\
    \ && is_float($b)) {\n        if ($a === $b) {\n            return null;\n   \
    \     } else {\n            return max($a, $b);\n        }\n    }\n    if (is_string($a)\
    \ && is_float($b)) {\n        if (floatval($a) === $b) {\n            return null;\n\
    \        } else {\n            return (floatval($a) > $b) ? $a : $b;\n       \
    \ }\n    }\n    if (is_float($a) && is_string($b)) {\n        if ($a === floatval($b))\
    \ {\n            return null;\n        } else {\n            return ($a > floatval($b))\
    \ ? $a : $b;\n        }\n    }\n    if (is_string($a) && is_int($b)) {\n     \
    \   if (floatval($a) === $b) {\n            return null;\n        } else {\n \
    \           return (floatval($a) > $b) ? $a : $b;\n        }\n    }\n    if (is_int($a)\
    \ && is_string($b)) {\n        if ($a === floatval($b)) {\n            return\
    \ null;\n        } else {\n            return ($a > floatval($b)) ? $a : $b;\n\
    \        }\n    }\n}\necho compare_one(1, 2.5) . \"<br>\";\necho compare_one(1,\
    \ \"2,3\") . \"<br>\";\necho compare_one(\"5,1\", \"6\") . \"<br>\";\necho compare_one(\"\
    1\", 1) . \"<br\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppgb2__pn.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) == gettype($b)) {\n\t\treturn max($a, $b);\n\t}\n\t\
    return null;\n}\necho compare_one(1, 2.5) . PHP_EOL;\necho compare_one(1, \"2,3\"\
    ) . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\necho compare_one(\"\
    1\", 1) . PHP_EOL;\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n6\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07lo8vjb.php:26\n\
    Stack trace:\n#0 /tmp/tmp07lo8vjb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp07lo8vjb.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\t// check if strings are numbers\n\tif (is_numeric($a) && is_numeric($b))\
    \ {\n\t\t// convert string to float\n\t\tif (is_string($a)) {\n\t\t\t$a = floatval($a);\n\
    \t\t}\n\t\tif (is_string($b)) {\n\t\t\t$b = floatval($b);\n\t\t}\n\t\t// compare\
    \ converted numbers and return larger number\n\t\tif ($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} elseif ($a < $b) {\n\t\t\treturn $b;\n\t\t} else {\n\t\t\treturn\
    \ 'None';\n\t\t}\n\t// return string if not numeric\n\t} else {\n\t\treturn $a\
    \ . $b;\n\t}\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzuk52xdy.php:42\n\
    Stack trace:\n#0 /tmp/tmpzuk52xdy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzuk52xdy.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (is_int($a) && is_int($b)) {\n    return max($a, $b);\n  } elseif\
    \ (is_float($a) && is_float($b)) {\n    return max($a, $b);\n  } elseif (is_string($a)\
    \ && is_string($b)) {\n    return max($a, $b);\n  } else {\n    return;\n  }\n\
    }\necho compare_one(1, 2.5) . PHP_EOL;\necho compare_one(1, \"2,3\") . PHP_EOL;\n\
    echo compare_one(\"5,1\", \"6\") . PHP_EOL;\necho compare_one(\"1\", 1) . PHP_EOL;\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n6\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz78kkno9.php:31\n\
    Stack trace:\n#0 /tmp/tmpz78kkno9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpz78kkno9.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (gettype($a) !== gettype($b)) {\n    if (gettype($a) === \"integer\"\
    ) {\n      return $b;\n    } else {\n      return $a;\n    }\n  } else {\n   \
    \ if ($a > $b) {\n      return $a;\n    } elseif ($a < $b) {\n      return $b;\n\
    \    } else {\n      return \"None\";\n    }\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpys_e5_jq.php:40\n\
    Stack trace:\n#0 /tmp/tmpys_e5_jq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpys_e5_jq.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_numeric($a) && is_numeric($b)) {\n        if (floatval($a)\
    \ == floatval($b)) {\n            return \"None\";\n        } else {\n       \
    \     if (floatval($a) > floatval($b)) {\n                return $a;\n       \
    \     } else {\n                return $b;\n            }\n        }\n    } else\
    \ {\n        return \"None\";\n    }\n}\necho compare_one(1, 2.5);\necho \"<br>\"\
    ;\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"5,1\", \"\
    6\");\necho \"<br>\";\necho compare_one(\"1\", 1);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>None<br>None<br>None<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpyc_gci5t.php:42\nStack trace:\n#0 /tmp/tmpyc_gci5t.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpyc_gci5t.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_string($a) && is_string($b)) {\n\t\tif (floatval($a) === floatval($b))\
    \ {\n\t\t\treturn null;\n\t\t} else if (floatval($a) > floatval($b)) {\n\t\t\t\
    return $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} else if (is_numeric($a)\
    \ && is_numeric($b)) {\n\t\tif ($a === $b) {\n\t\t\treturn null;\n\t\t} else if\
    \ ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} else\
    \ if (is_numeric($a) && is_string($b)) {\n\t\tif (floatval($a) === floatval($b))\
    \ {\n\t\t\treturn null;\n\t\t} else if (floatval($a) > floatval($b)) {\n\t\t\t\
    return $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} else if (is_string($a)\
    \ && is_numeric($b)) {\n\t\tif (floatval($a) === floatval($b)) {\n\t\t\treturn\
    \ null;\n\t\t} else if (floatval($a) > floatval($b)) {\n\t\t\treturn $a;\n\t\t\
    } else {\n\t\t\treturn $b;\n\t\t}\n\t}\n}\necho compare_one(1, 2.5) . PHP_EOL;\n\
    echo compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\n\
    echo compare_one(\"1\", 1) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4el5l01o.php:61\n\
    Stack trace:\n#0 /tmp/tmp4el5l01o.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp4el5l01o.php\
    \ on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n       \
    \     return $a;\n        } else if ($a < $b) {\n            return $b;\n    \
    \    } else {\n            return \"None\";\n        }\n    } else if (is_float($a)\
    \ && is_float($b)) {\n        if ($a > $b) {\n            return $a;\n       \
    \ } else if ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return \"None\";\n        }\n    } else if (is_string($a) && is_string($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } else if ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return \"None\";\n\
    \        }\n    } else {\n        return \"None\";\n    }\n}\necho compare_one(1,\
    \ 2.5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"\
    5,1\", \"6\") . \"<br>\";\necho compare_one(\"1\", 1) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "None<br>None<br>6<br>None<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpt1_z_s0_.php:49\nStack trace:\n#0 /tmp/tmpt1_z_s0_.php(58): test()\n\
    #1 {main}\n  thrown in /tmp/tmpt1_z_s0_.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_string($a) && is_string($b)) {\n\t\t$a = str_replace(',', '.',\
    \ $a);\n\t\t$b = str_replace(',', '.', $b);\n\t\treturn $a > $b ? $a : $b;\n\t\
    }\n\treturn $a === $b ? null : $a > $b ? $a : $b;\n}\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp620n5_ux.php:30\n\
    Stack trace:\n#0 /tmp/tmp620n5_ux.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp620n5_ux.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  $a = floatval($a);\n  $b = floatval($b);\n  if($a == $b) {\n    return\
    \ NULL;\n  } else if($a > $b) {\n    return $a;\n  } else {\n    return $b;\n\
    \  }\n}\necho compare_one(\"1\", 1);\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqeogp_qt.php:27\n\
    Stack trace:\n#0 /tmp/tmpqeogp_qt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqeogp_qt.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a == $b) {\n    return \"None\";\n  } else if (is_numeric($a)\
    \ && is_numeric($b)) {\n    return max($a, $b);\n  } else if (is_string($a) &&\
    \ is_string($b)) {\n    return strcmp($a, $b) > 0 ? $a : $b;\n  } else if ((is_string($a)\
    \ && is_numeric($b)) || (is_numeric($a) && is_string($b))) {\n    return (is_numeric($a)\
    \ && is_string($b)) ? strcmp($a, $b) < 0 ? $b : $a : strcmp($a, $b) > 0 ? $a :\
    \ $b;\n  }\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpda2jvrl2.php:30\n\
    Stack trace:\n#0 /tmp/tmpda2jvrl2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpda2jvrl2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n// \tif ($a === $b) {\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbuz4fefg.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  $v1 = is_numeric($a) ? $a : (float)str_replace(\",\", \".\", $a);\n\
    \  $v2 = is_numeric($b) ? $b : (float)str_replace(\",\", \".\", $b);\n  if ($v1\
    \ == $v2) return null;\n  return $v1 > $v2 ? $a : $b;\n}\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if (gettype($a) === gettype($b)) {\n    if ($a == $b) {\n      return\
    \ null;\n    } else {\n      return $a > $b ? $a : $b;\n    }\n  } else {\n  \
    \  return $a;\n  }\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ayme3he.php:27\n\
    Stack trace:\n#0 /tmp/tmp2ayme3he.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2ayme3he.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if($a == $b) {\n        return NULL;\n    }\n    elseif($a > $b)\
    \ {\n        return $a;\n    }\n    elseif($a < $b) {\n        return $b;\n  \
    \  }\n}\necho compare_one(2, 5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"\
    <br>\";\necho compare_one(\"5,1\", \"6\") . \"<br>\";\necho compare_one(\"1\"\
    , 1) . \"<br>\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 5<br>2,3<br>6<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_string($a) && is_string($b)) {\n\t\tif ($a < $b) {\n\t\t\treturn\
    \ $b;\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t} elseif (is_int($a) && is_int($b)) {\n\t\tif ($a < $b)\
    \ {\n\t\t\treturn $b;\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else\
    \ {\n\t\t\treturn \"None\";\n\t\t}\n\t} elseif (is_float($a) && is_float($b))\
    \ {\n\t\tif ($a < $b) {\n\t\t\treturn $b;\n\t\t} elseif ($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} elseif (is_int($a) &&\
    \ is_float($b)) {\n\t\tif ($a < $b) {\n\t\t\treturn $b;\n\t\t} elseif ($a > $b)\
    \ {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} elseif\
    \ (is_float($a) && is_int($b)) {\n\t\tif ($a < $b) {\n\t\t\treturn $b;\n\t\t}\
    \ elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn \"None\";\n\
    \t\t}\n\t} elseif (is_int($a) && is_string($b)) {\n\t\t$b = (float) $b;\n\t\t\
    if ($a < $b) {\n\t\t\treturn $b;\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\
    \t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} elseif (is_string($a) && is_int($b))\
    \ {\n\t\t$a = (float) $a;\n\t\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp42yreqtv.php on line 78\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a == $b) {\n    return null;\n  } elseif (is_numeric($a) && is_numeric($b))\
    \ {\n    return $a > $b ? $a : $b;\n  } elseif (is_string($a) && is_string($b))\
    \ {\n    return $a > $b ? $a : $b;\n  } elseif (is_numeric($a) && is_string($b))\
    \ {\n    $b = (float)$b;\n    return $a > $b ? $a : $b;\n  } elseif (is_string($a)\
    \ && is_numeric($b)) {\n    $a = (float)$a;\n    return $a > $b ? $a : $b;\n \
    \ }\n}\n$result = compare_one(1, 2.5);\necho \"$result<br>\";\n$result = compare_one(1,\
    \ \"2,3\");\necho \"$result<br>\";\n$result = compare_one(\"5,1\", \"6\");\necho\
    \ \"$result<br>\";\n$result = compare_one(\"1\", 1);\necho \"$result<br>\";\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2<br>6<br><br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpxhbwoc_p.php:42\nStack trace:\n#0 /tmp/tmpxhbwoc_p.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpxhbwoc_p.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif($a == $b) {\n\t\treturn \"None\";\n\t} elseif (intval($a) == $a\
    \ && intval($b) == $b) {\n\t\tif($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\
    \t\treturn $b;\n\t\t}\n\t} elseif (floatval($a) == $a && floatval($b) == $b) {\n\
    \t\tif($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t\
    } elseif (intval($a) == $a && floatval($b) == $b) {\n\t\treturn $b;\n\t} elseif\
    \ (floatval($a) == $a && intval($b) == $b) {\n\t\treturn $a;\n\t} elseif (strval($a)\
    \ == $a && strval($b) == $b) {\n\t\tif($a > $b) {\n\t\t\treturn $a;\n\t\t} else\
    \ {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (strval($a) == $a && floatval($b) ==\
    \ $b) {\n\t\treturn $b;\n\t} elseif (floatval($a) == $a && strval($b) == $b) {\n\
    \t\treturn $a;\n\t} elseif (strval($a) == $a && intval($b) == $b) {\n\t\treturn\
    \ $b;\n\t} elseif (intval($a) == $a && strval($b) == $b) {\n\t\treturn $a;\n\t\
    }\n}\necho compare_one(1, 2.5);\necho \"<br>\";\necho compare_one(1, \"2,3\");\n\
    echo \"<br>\";\necho compare_one(\"5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"\
    1\", 1);\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>None\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpca5q9t3x.php:64\nStack trace:\n#0 /tmp/tmpca5q9t3x.php(67): test()\n\
    #1 {main}\n  thrown in /tmp/tmpca5q9t3x.php on line 64\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif(gettype($a) == gettype($b)){\n\t\tif($a>$b){\n\t\t\treturn $a;\n\
    \t\t}else if($a<$b){\n\t\t\treturn $b;\n\t\t}else{\n\t\t\treturn 'None';\n\t\t\
    }\n\t}else{\n\t\tif(gettype($a)==\"integer\"){\n\t\t\treturn $b;\n\t\t}else{\n\
    \t\t\treturn $a;\n\t\t}\n\t}\n}\necho compare_one(1, 2.5);\necho '<br>';\necho\
    \ compare_one(1, \"2,3\");\necho '<br>';\necho compare_one(\"5,1\", \"6\");\n\
    echo '<br>';\necho compare_one(\"1\", 1);\nfunction candidate(...$args) {\n  \
    \  return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>1\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpp63e1sjt.php:46\nStack trace:\n#0 /tmp/tmpp63e1sjt.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpp63e1sjt.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) == gettype($b)) {\n\t\treturn $a > $b ? $a : $b;\n\t\
    }\n\treturn \"None\";\n}\necho compare_one(1, 2.5) . \"\\n\";\necho compare_one(1,\
    \ \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"\
    1\", 1) . \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "None\nNone\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmps1b3nmdp.php:26\nStack trace:\n#0 /tmp/tmps1b3nmdp.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmps1b3nmdp.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a == $b) {\n    return \"None\";\n  } elseif ($a > $b) {\n   \
    \ return $a;\n  } else {\n    return $b;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyryf3sue.php:31\n\
    Stack trace:\n#0 /tmp/tmpyryf3sue.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpyryf3sue.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (gettype($a) == \"integer\" && gettype($b) == \"float\") {\n \
    \       if ($a < $b) {\n            return $b;\n        } else {\n           \
    \ return $a;\n        }\n    } elseif (gettype($a) == \"integer\" && gettype($b)\
    \ == \"string\") {\n        if ($a < (float)$b) {\n            return $b;\n  \
    \      } else {\n            return $a;\n        }\n    } elseif (gettype($a)\
    \ == \"float\" && gettype($b) == \"integer\") {\n        if ($a > $b) {\n    \
    \        return $a;\n        } else {\n            return $b;\n        }\n   \
    \ } elseif (gettype($a) == \"float\" && gettype($b) == \"string\") {\n       \
    \ if ($a > (float)$b) {\n            return $a;\n        } else {\n          \
    \  return $b;\n        }\n    } elseif (gettype($a) == \"string\" && gettype($b)\
    \ == \"integer\") {\n        if ((float)$a > $b) {\n            return $a;\n \
    \       } else {\n            return $b;\n        }\n    } elseif (gettype($a)\
    \ == \"string\" && gettype($b) == \"float\") {\n        if ((float)$a < $b) {\n\
    \            return $b;\n        } else {\n            return $a;\n        }\n\
    \    } elseif (gettype($a) == \"string\" && gettype($b) == \"string\") {\n   \
    \     if ((float)$a > (float)$b) {\n            return $a;\n        } elseif ((float)$a\
    \ < (float)$b) {\n            return $b;\n        } else {\n            return\
    \ \"None\";\n        }\n    } elseif (gettype($a) == \"integer\" && gettype($b)\
    \ == \"integer\") {\n        if ($a > $b) {\n            return $a;\n        }\
    \ elseif ($a < $b) {\n            return $b;\n        } else {\n            return\
    \ \"None\";\n        }\n    } elseif (\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6a5n8vrn.php on line 64\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a == $b) {\n    return \"None\";\n  } else if (is_int($a) && is_int($b))\
    \ {\n    return ($a > $b) ? $a : $b;\n  } else if (is_float($a) && is_float($b))\
    \ {\n    return ($a > $b) ? $a : $b;\n  } else if (is_string($a) && is_string($b))\
    \ {\n    return ($a > $b) ? $a : $b;\n  } else if (is_string($a) && is_int($b))\
    \ {\n    return $b;\n  } else if (is_int($a) && is_string($b)) {\n    return $b;\n\
    \  } else if (is_string($a) && is_float($b)) {\n    return $b;\n  } else if (is_float($a)\
    \ && is_string($b)) {\n    return $b;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbei3jt_a.php:36\n\
    Stack trace:\n#0 /tmp/tmpbei3jt_a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbei3jt_a.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  $a1 = $a;\n  $b1 = $b;\n  if (is_numeric($a)){\n    $a1 = floatval($a);\n\
    \  }\n  if (is_numeric($b)){\n    $b1 = floatval($b);\n  }\n  if ($a1 == $b1){\n\
    \    return \"None\";\n  } elseif ($a1 > $b1){\n    return $a;\n  } else {\n \
    \   return $b;\n  }\n}\necho compare_one(1, 2.5) . \"<br>\";\necho compare_one(1,\
    \ \"2,3\") . \"<br>\";\necho compare_one(\"5,1\", \"6\") . \"<br>\";\necho compare_one(\"\
    1\", 1) . \"<br>\";\n ?>\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>None<br>function candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_string($a) || is_string($b)) {\n        if ((int)$a > (int)$b)\
    \ {\n            return $a;\n        } elseif ((int)$a < (int)$b) {\n        \
    \    return $b;\n        } else {\n            return null;\n        }\n    }\
    \ else {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a\
    \ < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    }\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_numeric($a) && is_numeric($b)) {\n        if ($a > $b) {\n\
    \            return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return \"None\";\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a > $b) {\n            return $a;\n      \
    \  } elseif ($a < $b) {\n            return $b;\n        } else {\n          \
    \  return \"None\";\n        }\n    } elseif (is_float($a) && is_float($b)) {\n\
    \        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n\
    \            return $b;\n        } else {\n            return \"None\";\n    \
    \    }\n    } elseif (is_int($a) && is_int($b)) {\n        if ($a > $b) {\n  \
    \          return $a;\n        } elseif ($a < $b) {\n            return $b;\n\
    \        } else {\n            return \"None\";\n        }\n    } else {\n   \
    \     if ($a > $b) {\n            return $a;\n        } elseif ($a < $b) {\n \
    \           return $b;\n        } else {\n            return \"None\";\n     \
    \   }\n    }\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrt2qg_p.php:65\n\
    Stack trace:\n#0 /tmp/tmpbrt2qg_p.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpbrt2qg_p.php\
    \ on line 65\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a = floatval($a);\n    $b = floatval($b);\n    if($a == $b) {\n\
    \        return null;\n    } elseif($a > $b) {\n        return $a;\n    } else\
    \ {\n        return $b;\n    }\n}\necho compare_one(1, 2.5) . \"\\n\";\necho compare_one(1,\
    \ \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"\
    1\", 1) . \"\\n\";\necho compare_one(1, 1) . \"\\n\";\necho compare_one(1, 2)\
    \ . \"\\n\";\necho compare_one(2, 1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2\n6\n\n\n2\n2\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpmbxzw2r5.php:33\nStack trace:\n#0 /tmp/tmpmbxzw2r5.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpmbxzw2r5.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) === gettype($b)) {\n\t\tif ($a === $b) {\n\t\t\treturn\
    \ 'None';\n\t\t} else {\n\t\t\treturn ($a > $b) ? $a : $b;\n\t\t}\n\t} else {\n\
    \t\tif (gettype($a) === 'string') {\n\t\t\t$a = floatval(str_replace(',', '.',\
    \ $a));\n\t\t}\n\t\tif (gettype($b) === 'string') {\n\t\t\t$b = floatval(str_replace(',',\
    \ '.', $b));\n\t\t}\n\t\tif ($a === $b) {\n\t\t\treturn 'None';\n\t\t} else {\n\
    \t\t\treturn ($a > $b) ? $a : $b;\n\t\t}\n\t}\n}\necho compare_one(1, 2.5) . '<br>';\n\
    echo compare_one(1, \"2,3\") . '<br>';\necho compare_one(\"5,1\", \"6\") . '<br>';\n\
    echo compare_one(\"1\", 1) . '<br>';\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2.3<br>6<br>1<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpau_2j2fe.php:44\nStack trace:\n#0 /tmp/tmpau_2j2fe.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpau_2j2fe.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  $a = (is_string($a)) ? floatval(str_replace(',', '.', $a)) : $a;\n\
    \  $b = (is_string($b)) ? floatval(str_replace(',', '.', $b)) : $b;\n  if ($a\
    \ == $b) {\n    return null;\n  }\n  return ($a > $b) ? $a : $b;\n}\necho compare_one(1,\
    \ 2.5) . '<br>';\necho compare_one(1, \"2,3\") . '<br>';\necho compare_one(\"\
    5,1\", \"6\") . '<br>';\necho compare_one(\"1\", 1) . '<br>';\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2.3<br>6<br><br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmplmthxabh.php:31\nStack trace:\n#0 /tmp/tmplmthxabh.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmplmthxabh.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\treturn $a == $b ? \"None\" : ($a > $b ? $a : $b);\n}\necho compare_one(1,\
    \ 2.5);\necho compare_one(1, \"2,3\");\necho compare_one(\"5,1\", \"6\");\necho\
    \ compare_one(\"1\", 1);\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.52,36None\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7q3gqaf7.php:29\n\
    Stack trace:\n#0 /tmp/tmp7q3gqaf7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7q3gqaf7.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a === $b) {\n\t\treturn NULL;\n\t} elseif (is_int($a) && is_float($b))\
    \ {\n\t\treturn $b;\n\t} elseif (is_float($a) && is_int($b)) {\n\t\treturn $a;\n\
    \t} elseif (is_int($a) && is_string($b)) {\n\t\treturn $b;\n\t} elseif (is_string($a)\
    \ && is_int($b)) {\n\t\treturn $a;\n\t} elseif (is_float($a) && is_string($b))\
    \ {\n\t\treturn $b;\n\t} elseif (is_string($a) && is_float($b)) {\n\t\treturn\
    \ $a;\n\t} elseif (is_string($a) && is_string($b)) {\n\t\treturn $a > $b ? $a\
    \ : $b;\n\t}\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp41eeewfg.php:34\n\
    Stack trace:\n#0 /tmp/tmp41eeewfg.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp41eeewfg.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_int($a) && is_int($b)) {\n        return max($a, $b);\n  \
    \  }\n    if (is_float($a) && is_float($b)) {\n        return max($a, $b);\n \
    \   }\n    if (is_string($a) && is_string($b)) {\n        return max($a, $b);\n\
    \    }\n    return 'None';\n}\necho compare_one(1, 2.5) . '<br>';\necho compare_one(1,\
    \ \"2,3\") . '<br>';\necho compare_one(\"5,1\", \"6\") . '<br>';\necho compare_one(\"\
    1\", 1) . '<br>';\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "None<br>None<br>6<br>None<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvzvackfp.php:32\nStack trace:\n#0 /tmp/tmpvzvackfp.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvzvackfp.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) == gettype($b)) {\n\t\tif ($a == $b) {\n\t\t\treturn\
    \ null;\n\t\t} elseif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn\
    \ $b;\n\t\t}\n\t} elseif (gettype($a) == \"string\" && gettype($b) == \"integer\"\
    ) {\n\t\treturn $a;\n\t} elseif (gettype($a) == \"integer\" && gettype($b) ==\
    \ \"string\") {\n\t\treturn $b;\n\t} elseif (gettype($a) == \"integer\" && gettype($b)\
    \ == \"float\") {\n\t\treturn $b;\n\t} elseif (gettype($a) == \"float\" && gettype($b)\
    \ == \"integer\") {\n\t\treturn $a;\n\t} elseif (gettype($a) == \"float\" && gettype($b)\
    \ == \"string\") {\n\t\treturn $b;\n\t} elseif (gettype($a) == \"string\" && gettype($b)\
    \ == \"float\") {\n\t\treturn $a;\n\t}\n}\nfunction candidate(...$args) {\n  \
    \  return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1f821p_d.php:39\n\
    Stack trace:\n#0 /tmp/tmp1f821p_d.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1f821p_d.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_numeric($a) && is_numeric($b)) {\n        if (gettype($a)\
    \ == \"integer\" && gettype($b) == \"string\") {\n            $b = floatval(str_replace(\"\
    ,\", \".\", $b));\n        } elseif (gettype($a) == \"string\" && gettype($b)\
    \ == \"integer\") {\n            $a = floatval(str_replace(\",\", \".\", $a));\n\
    \        }\n        if ($a === $b) {\n            return null;\n        } elseif\
    \ ($a > $b) {\n            return $a;\n        } else {\n            return $b;\n\
    \        }\n    } else {\n        return null;\n    }\n}\necho compare_one(5,\
    \ 5) . \"\\n\";\necho compare_one(5, \"5\") . \"\\n\";\necho compare_one(5, \"\
    6,5\") . \"\\n\";\necho compare_one(\"5,6\", \"6\") . \"\\n\";\necho compare_one(\"\
    1\", 1) . \"\\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"\
    5,1\", \"6\") . \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n5\n\n\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbpgcek7.php:44\n\
    Stack trace:\n#0 /tmp/tmpxbpgcek7.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpxbpgcek7.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a === $b) {\n        return;\n    } else if (is_string($a) &&\
    \ is_string($b)) {\n        if (floatval($a) > floatval($b)) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } else if (is_int($a)\
    \ && is_int($b)) {\n        if ($a > $b) {\n            return $a;\n        }\
    \ else {\n            return $b;\n        }\n    } else if (is_float($a) && is_float($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    } else if (is_string($a) && is_int($b)) {\n\
    \        if (floatval($a) > $b) {\n            return $a;\n        } else {\n\
    \            return $b;\n        }\n    } else if (is_string($a) && is_float($b))\
    \ {\n        if (floatval($a) > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    } else if (is_int($a) && is_string($b))\
    \ {\n        if ($a > floatval($b)) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    } else if (is_float($a) && is_string($b))\
    \ {\n        if ($a > floatval($b)) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpni71ufea.php:63\n\
    Stack trace:\n#0 /tmp/tmpni71ufea.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpni71ufea.php\
    \ on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif(is_numeric($a) && is_numeric($b)){\n\t\t$a = (float)$a;\n\t\t$b\
    \ = (float)$b;\n\t\treturn ($a >= $b) ? $a : $b;\n\t}\n\telse {\n\t\tif($a ===\
    \ $b){\n\t\t\treturn 'None';\n\t\t}\n\t\telse {\n\t\t\treturn ($a >= $b) ? $a\
    \ : $b;\n\t\t}\n\t}\n}\necho compare_one(\"5,1\", \"6\");\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdwamltcb.php:31\n\
    Stack trace:\n#0 /tmp/tmpdwamltcb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdwamltcb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if($a == $b) return \"None\";\n    else if ($a > $b) return $a;\n\
    \    else return $b;\n}\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"\
    5,1\", \"6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2,3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8utmpdnt.php:30\n\
    Stack trace:\n#0 /tmp/tmp8utmpdnt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8utmpdnt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a > $b) {\n    return $a;\n  } elseif ($a < $b) {\n    return\
    \ $b;\n  } else {\n    return \"None\";\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gnu23ok.php:32\n\
    Stack trace:\n#0 /tmp/tmp9gnu23ok.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9gnu23ok.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_numeric($a) && is_numeric($b)) {\n        if ($a == $b) {\n\
    \            return \"None\";\n        } elseif ($a > $b) {\n            return\
    \ $a;\n        } else {\n            return $b;\n        }\n    } elseif (is_string($a)\
    \ && is_string($b)) {\n        if ($a == $b) {\n            return \"None\";\n\
    \        } elseif ($a > $b) {\n            return $a;\n        } else {\n    \
    \        return $b;\n        }\n    } elseif ((is_int($a) || is_float($a)) &&\
    \ (is_int($b) || is_float($b))) {\n        if ($a == $b) {\n            return\
    \ \"None\";\n        } elseif ($a > $b) {\n            return $a;\n        } else\
    \ {\n            return $b;\n        }\n    } elseif (is_string($a) && (is_int($b)\
    \ || is_float($b))) {\n        if ($a == $b) {\n            return \"None\";\n\
    \        } elseif ($a > $b) {\n            return $a;\n        } else {\n    \
    \        return $b;\n        }\n    } elseif (is_string($b) && (is_int($a) ||\
    \ is_float($a))) {\n        if ($a == $b) {\n            return \"None\";\n  \
    \      } elseif ($a > $b) {\n            return $a;\n        } else {\n      \
    \      return $b;\n        }\n    }\n}\necho compare_one(1, 2.5) . PHP_EOL;\n\
    echo compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\n\
    echo compare_one(\"1\", 1) . PHP_EOL;\necho compare_one(1, 2.5) . PHP_EOL;\necho\
    \ compare_one(5, 6) . PHP_EOL;\necho compare_one(10, \"10\") . PHP_EOL;\necho\
    \ compare_one(\"10\", \"9\") . PHP\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplkcvy3i8.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) === gettype($b)) {\n\t\tif ($a === $b) {\n\t\t\treturn\
    \ null;\n\t\t} else {\n\t\t\treturn $a > $b ? $a : $b;\n\t\t}\n\t} else {\n\t\t\
    if (gettype($a) === \"string\") {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn\
    \ $b;\n\t\t}\n\t}\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_pz2nhd.php:37\n\
    Stack trace:\n#0 /tmp/tmp0_pz2nhd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0_pz2nhd.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if(is_string($a) && is_string($b)){\n        if (str_replace(\",\"\
    , \".\", $a) < str_replace(\",\", \".\", $b)){\n            return $b;\n     \
    \   } elseif (str_replace(\",\", \".\", $a) > str_replace(\",\", \".\", $b)){\n\
    \            return $a;\n        } else {\n            return \"None\";\n    \
    \    }\n    } elseif (is_int($a) && is_int($b)){\n        if ($a < $b){\n    \
    \        return $b;\n        } elseif ($a > $b){\n            return $a;\n   \
    \     } else {\n            return \"None\";\n        }\n    } elseif (is_float($a)\
    \ && is_float($b)){\n        if ($a < $b){\n            return $b;\n        }\
    \ elseif ($a > $b){\n            return $a;\n        } else {\n            return\
    \ \"None\";\n        }\n    } elseif (is_string($a) && is_int($b)){\n        return\
    \ $a;\n    } elseif (is_string($a) && is_float($b)){\n        return $a;\n   \
    \ } elseif (is_int($a) && is_string($b)){\n        return $b;\n    } elseif (is_float($a)\
    \ && is_string($b)){\n        return $b;\n    } elseif (is_float($a) && is_int($b)){\n\
    \        return $a;\n    } elseif (is_int($a) && is_float($b)){\n        return\
    \ $b;\n    }\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz04jz64e.php:61\n\
    Stack trace:\n#0 /tmp/tmpz04jz64e.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpz04jz64e.php\
    \ on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a == $b) {\n\t\treturn NULL;\n\t}\n\telseif (gettype($a) == \"\
    integer\" && gettype($b) == \"integer\") {\n\t\treturn max($a, $b);\n\t}\n\telseif\
    \ (gettype($a) == \"double\" && gettype($b) == \"double\") {\n\t\treturn max($a,\
    \ $b);\n\t}\n\telseif (gettype($a) == \"string\" && gettype($b) == \"string\"\
    ) {\n\t\treturn max($a, $b);\n\t}\n\telseif (gettype($a) == \"string\" && gettype($b)\
    \ == \"integer\") {\n\t\treturn $b;\n\t}\n\telseif (gettype($a) == \"integer\"\
    \ && gettype($b) == \"string\") {\n\t\treturn $a;\n\t}\n\telseif (gettype($a)\
    \ == \"string\" && gettype($b) == \"double\") {\n\t\treturn $b;\n\t}\n\telseif\
    \ (gettype($a) == \"double\" && gettype($b) == \"string\") {\n\t\treturn $a;\n\
    \t}\n\telseif (gettype($a) == \"integer\" && gettype($b) == \"double\") {\n\t\t\
    return $b;\n\t}\n\telseif (gettype($a) == \"double\" && gettype($b) == \"integer\"\
    ) {\n\t\treturn $a;\n\t}\n}\n\necho compare_one(1, 2.5) . \"\\n\";\necho compare_one(1,\
    \ \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"\
    1\", 1) . \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n1\n6\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7avc7j2.php:56\n\
    Stack trace:\n#0 /tmp/tmpn7avc7j2.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpn7avc7j2.php\
    \ on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (gettype($a) == \"string\" && gettype($b) == \"string\") {\n \
    \       return floatval($a) > floatval($b) ? floatval($a) : floatval($b);\n  \
    \  } elseif (gettype($a) == \"integer\" && gettype($b) == \"integer\") {\n   \
    \     return $a > $b ? $a : $b;\n    } elseif (gettype($a) == \"double\" && gettype($b)\
    \ == \"double\") {\n        return $a > $b ? $a : $b;\n    } elseif (gettype($a)\
    \ == \"integer\" && gettype($b) == \"double\") {\n        return $a > $b ? $a\
    \ : $b;\n    } elseif (gettype($a) == \"double\" && gettype($b) == \"integer\"\
    ) {\n        return $a > $b ? $a : $b;\n    } elseif (gettype($a) == \"string\"\
    \ && gettype($b) == \"integer\") {\n        return floatval($a) > $b ? floatval($a)\
    \ : $b;\n    } elseif (gettype($a) == \"integer\" && gettype($b) == \"string\"\
    ) {\n        return $a > floatval($b) ? $a : floatval($b);\n    } elseif (gettype($a)\
    \ == \"string\" && gettype($b) == \"double\") {\n        return floatval($a) >\
    \ $b ? floatval($a) : $b;\n    } elseif (gettype($a) == \"double\" && gettype($b)\
    \ == \"string\") {\n        return $a > floatval($b) ? $a : floatval($b);\n  \
    \  } else {\n        return \"None\";\n    }\n}\n\necho compare_one(1, 2.5);\n\
    echo \"<br>\";\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"\
    5,1\", \"6\");\necho \"<br>\";\necho compare_one(\"1\", 1);\necho \"<br>\";\n\
    echo compare_one(5, \"6\");\necho \"<br>\";\necho compare_one(\"\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp97ck2x97.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif(is_numeric($a) && is_numeric($b)){\n\t\treturn max($a, $b);\n\t\
    } elseif(is_numeric($a) && is_string($b)){\n\t\t$b = str_replace(\",\", \".\"\
    , $b);\n\t\treturn max($a, $b);\n\t} elseif(is_string($a) && is_numeric($b)){\n\
    \t\t$a = str_replace(\",\", \".\", $a);\n\t\treturn max($a, $b);\n\t} elseif(is_string($a)\
    \ && is_string($b)){\n\t\t$a = str_replace(\",\", \".\", $a);\n\t\t$b = str_replace(\"\
    ,\", \".\", $b);\n\t\treturn max($a, $b);\n\t} else {\n\t\treturn \"None\";\n\t\
    }\n}\necho compare_one(1, 2.5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"\
    <br>\";\necho compare_one(\"5,1\", \"6\") . \"<br>\";\necho compare_one(\"1\"\
    , 1) . \"<br>\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2.3<br>6<br>1<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpno4496_7.php:40\nStack trace:\n#0 /tmp/tmpno4496_7.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpno4496_7.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  \n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpin6s28ko.php:18\n\
    Stack trace:\n#0 /tmp/tmpin6s28ko.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpin6s28ko.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a == $b) {\n\t\treturn null;\n\t} elseif (is_string($a) && is_string($b))\
    \ {\n\t\tif (strpos($a, \".\") !== false) {\n\t\t\t$a = floatval($a);\n\t\t} else\
    \ {\n\t\t\t$a = intval($a);\n\t\t}\n\t\tif (strpos($b, \".\") !== false) {\n\t\
    \t\t$b = floatval($b);\n\t\t} else {\n\t\t\t$b = intval($b);\n\t\t}\n\t\tif ($a\
    \ > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif\
    \ (is_string($a) && is_int($b)) {\n\t\t$a = floatval($a);\n\t\tif ($a > $b) {\n\
    \t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_int($a)\
    \ && is_string($b)) {\n\t\t$b = floatval($b);\n\t\tif ($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_int($a) && is_float($b))\
    \ {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t\
    }\n\t} elseif (is_float($a) && is_int($b)) {\n\t\tif ($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif (is_float($a) && is_float($b))\
    \ {\n\t\tif ($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t\
    }\n\t}\n}\n\necho compare_one(1, \"2,3\");\necho compare_one(\"5,1\", \"\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5vwevj9h.php on line 71\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if($a === $b) {\n    return null;\n  }\n  return $a > $b ? $a : $b;\n\
    }\nfunction candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzeidcoc.php:28\n\
    Stack trace:\n#0 /tmp/tmpuzeidcoc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpuzeidcoc.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if(is_int($a) && is_int($b)) {\n    if($a > $b) {\n      return $a;\n\
    \    } elseif($a == $b) {\n      return \"None\";\n    } else {\n      return\
    \ $b;\n    }\n  }\n  if(is_float($a) && is_float($b)) {\n    if($a > $b) {\n \
    \     return $a;\n    } elseif($a == $b) {\n      return \"None\";\n    } else\
    \ {\n      return $b;\n    }\n  }\n  if(is_string($a) && is_string($b)) {\n  \
    \  if($a > $b) {\n      return $a;\n    } elseif($a == $b) {\n      return \"\
    None\";\n    } else {\n      return $b;\n    }\n  }\n  if(is_string($a) && is_int($b))\
    \ {\n    $a = (float)$a;\n    if($a > $b) {\n      return $a;\n    } elseif($a\
    \ == $b) {\n      return \"None\";\n    } else {\n      return $b;\n    }\n  }\n\
    \  if(is_string($b) && is_int($a)) {\n    $b = (float)$b;\n    if($a > $b) {\n\
    \      return $a;\n    } elseif($a == $b) {\n      return \"None\";\n    } else\
    \ {\n      return $b;\n    }\n  }\n  if(is_string($a) && is_float($b)) {\n   \
    \ $a = (float)$a;\n    if($a > $b) {\n      return $a;\n    } elseif($a == $b)\
    \ {\n      return \"None\";\n    } else {\n      return $b;\n    }\n  }\n  if(is_string($b)\
    \ && is_float($a)) {\n    $b = (float)$b;\n    if($a > $b) {\n      return $a;\n\
    \    } elseif($a == $b) {\n      return \"None\";\n   \nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7un3d98q.php on line 90\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a > $b) {\n        return $a;\n    } elseif ($a < $b) {\n  \
    \      return $b;\n    } else {\n        return \"None\";\n    }\n}\necho compare_one(1,\
    \ 2.5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"\
    5,1\", \"6\") . \"<br>\";\necho compare_one(\"1\", 1) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>None<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj3t0qx72.php:35\nStack trace:\n#0 /tmp/tmpj3t0qx72.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj3t0qx72.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  $a1 = (int) $a;\n  $b1 = (int) $b;\n  $a2 = (float) $a;\n  $b2 = (float)\
    \ $b;\n  $a3 = (string) $a;\n  $b3 = (string) $b;\n  if ($a1 == $b1 || $a2 ==\
    \ $b2 || $a3 == $b3) {\n    return null;\n  } else if ($a1 > $b1 || $a2 > $b2\
    \ || $a3 > $b3) {\n    return $a;\n  } else {\n    return $b;\n  }\n}\necho compare_one(1,\
    \ 2.5);\necho compare_one(1, \"2,3\");\necho compare_one(\"5,1\", \"6\");\necho\
    \ compare_one(\"1\", 1);\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 2.52,36
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (is_int($a) && is_int($b)) {\n        return ($a > $b) ? $a :\
    \ $b;\n    }\n    if (is_float($a) && is_float($b)) {\n        return ($a > $b)\
    \ ? $a : $b;\n    }\n    if (is_string($a) && is_string($b)) {\n        return\
    \ ($a > $b) ? $a : $b;\n    }\n    if (is_string($a) && is_int($b)) {\n      \
    \  return $b;\n    }\n    if (is_int($a) && is_string($b)) {\n        return $a;\n\
    \    }\n    if (is_string($a) && is_float($b)) {\n        return $b;\n    }\n\
    \    if (is_float($a) && is_string($b)) {\n        return $a;\n    }\n    if ($a\
    \ == $b) {\n        return null;\n    }\n}\necho compare_one(1, 2.5) . \"\\n\"\
    ;\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") .\
    \ \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n6\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplobwzb4z.php:46\n\
    Stack trace:\n#0 /tmp/tmplobwzb4z.php(55): test()\n#1 {main}\n  thrown in /tmp/tmplobwzb4z.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if ($a == $b) {\n    return \"None\";\n  } else if (is_numeric($a)\
    \ && is_numeric($b)) {\n    return max($a, $b);\n  } else if (is_numeric($a) &&\
    \ !is_numeric($b)) {\n    return $b;\n  } else if (!is_numeric($a) && is_numeric($b))\
    \ {\n    return $a;\n  } else {\n    return $a;\n  }\n}\necho compare_one(5,5);\n\
    function candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "None\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_eluq_mz.php:34\n\
    Stack trace:\n#0 /tmp/tmp_eluq_mz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_eluq_mz.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a == $b) {\n\t\treturn NULL;\n\t} elseif ($a > $b) {\n\t\treturn\
    \ $a;\n\t} else {\n\t\treturn $b;\n\t}\n}\necho compare_one(1, 2.5);\necho \"\
    <br>\";\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"5,1\"\
    , \"6\");\necho \"<br>\";\necho compare_one(\"1\", 1);\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 2.5<br>2,3<br>6<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (filter_var($a, FILTER_VALIDATE_INT) && filter_var($b, FILTER_VALIDATE_INT))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return 'None';\n  \
    \      }\n    } elseif (filter_var($a, FILTER_VALIDATE_FLOAT) && filter_var($b,\
    \ FILTER_VALIDATE_FLOAT)) {\n        if ($a > $b) {\n            return $a;\n\
    \        } elseif ($a < $b) {\n            return $b;\n        } else {\n    \
    \        return 'None';\n        }\n    } elseif (is_string($a) && is_string($b))\
    \ {\n        if ($a > $b) {\n            return $a;\n        } elseif ($a < $b)\
    \ {\n            return $b;\n        } else {\n            return 'None';\n  \
    \      }\n    } else {\n        return 'None';\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezk8ecxe.php:48\n\
    Stack trace:\n#0 /tmp/tmpezk8ecxe.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpezk8ecxe.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  if(is_int($a) && is_int($b)){\n    if($a > $b){\n      return $a;\n\
    \    } elseif($a < $b){\n      return $b;\n    } else {\n      return 'None';\n\
    \    }\n  } elseif(is_int($a) && is_float($b)){\n    if($a > $b){\n      return\
    \ $a;\n    } elseif($a < $b){\n      return $b;\n    } else {\n      return 'None';\n\
    \    }\n  } elseif(is_float($a) && is_int($b)){\n    if($a > $b){\n      return\
    \ $a;\n    } elseif($a < $b){\n      return $b;\n    } else {\n      return 'None';\n\
    \    }\n  } elseif(is_float($a) && is_float($b)){\n    if($a > $b){\n      return\
    \ $a;\n    } elseif($a < $b){\n      return $b;\n    } else {\n      return 'None';\n\
    \    }\n  } elseif(is_int($a) && is_string($b)){\n    if($a > $b){\n      return\
    \ $a;\n    } elseif($a < $b){\n      return $b;\n    } else {\n      return 'None';\n\
    \    }\n  } elseif(is_string($a) && is_int($b)){\n    if($a > $b){\n      return\
    \ $a;\n    } elseif($a < $b){\n      return $b;\n    } else {\n      return 'None';\n\
    \    }\n  } elseif(is_float($a) && is_string($b)){\n    if($a > $b){\n      return\
    \ $a;\n    } elseif($a < $b){\n      return $b;\n    } else {\n      return 'None';\n\
    \    }\n  } elseif(is_string($a) && is_float($b)){\n    if($a > $b){\n      return\
    \ $a;\n    } elseif($a < $b){\n      return $b;\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8ddzuu2z.php on line 87\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6m5orzf.php:18\n\
    Stack trace:\n#0 /tmp/tmpj6m5orzf.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpj6m5orzf.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif(is_string($a) && is_string($b)) {\n\t\treturn (floatval($a) > floatval($b))\
    \ ? $a : (floatval($a) < floatval($b)) ? $b : \"None\";\n\t} elseif(is_string($a)\
    \ && is_float($b)) {\n\t\treturn (floatval($a) > $b) ? $a : (floatval($a) < $b)\
    \ ? $b : \"None\";\n\t} elseif(is_string($a) && is_int($b)) {\n\t\treturn (floatval($a)\
    \ > $b) ? $a : (floatval($a) < $b) ? $b : \"None\";\n\t} elseif(is_float($a) &&\
    \ is_string($b)) {\n\t\treturn ($a > floatval($b)) ? $a : ($a < floatval($b))\
    \ ? $b : \"None\";\n\t} elseif(is_float($a) && is_float($b)) {\n\t\treturn ($a\
    \ > $b) ? $a : ($a < $b) ? $b : \"None\";\n\t} elseif(is_float($a) && is_int($b))\
    \ {\n\t\treturn ($a > $b) ? $a : ($a < $b) ? $b : \"None\";\n\t} elseif(is_int($a)\
    \ && is_string($b)) {\n\t\treturn ($a > floatval($b)) ? $a : ($a < floatval($b))\
    \ ? $b : \"None\";\n\t} elseif(is_int($a) && is_float($b)) {\n\t\treturn ($a >\
    \ $b) ? $a : ($a < $b) ? $b : \"None\";\n\t} elseif(is_int($a) && is_int($b))\
    \ {\n\t\treturn ($a > $b) ? $a : ($a < $b) ? $b : \"None\";\n\t}\n}\necho compare_one(1,\
    \ 2.5) . \"\\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"\
    5,1\", \"6\") . \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmke_r2nd.php:46\n\
    Stack trace:\n#0 /tmp/tmpmke_r2nd.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpmke_r2nd.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\t// if ($a == $b) {\n\t// \treturn 'None';\n\t// }\n\t// elseif ($a\
    \ > $b) {\n\t// \treturn $a;\n\t// }\n\t// else {\n\t// \treturn $b;\n\t// }\n\
    \treturn $a == $b ? 'None' : $a > $b ? $a : $b;\n}\necho compare_one(1, 2.5) .\
    \ PHP_EOL;\necho compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\"\
    , \"6\") . PHP_EOL;\necho compare_one(\"1\", 1) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvffq47e6.php:38\n\
    Stack trace:\n#0 /tmp/tmpvffq47e6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvffq47e6.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (gettype($a) == gettype($b)) {\n        if (gettype($a) == \"\
    string\") {\n            if (str_replace(\",\", \".\", $a) > str_replace(\",\"\
    , \".\", $b)) {\n                return $a;\n            } else if (str_replace(\"\
    ,\", \".\", $a) < str_replace(\",\", \".\", $b)) {\n                return $b;\n\
    \            } else {\n                return \"None\";\n            }\n     \
    \   } else {\n            if ($a > $b) {\n                return $a;\n       \
    \     } else if ($a < $b) {\n                return $b;\n            } else {\n\
    \                return \"None\";\n            }\n        }\n    } else {\n  \
    \      return \"None\";\n    }\n}\necho compare_one(1, 2.5) . \"<br>\";\necho\
    \ compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"5,1\", \"6\") . \"<br>\"\
    ;\necho compare_one(\"1\", 1) . \"<br>\";\necho compare_one(0, 0) . \"<br>\";\n\
    echo compare_one(0, \"0,0\") . \"<br>\";\necho compare_one(\"2,2\", 2) . \"<br>\"\
    ;\necho compare_one(\"2,2\", \"2,2\") . \"<br>\";\necho compare_one(\"10\", 10)\
    \ . \"<br>\";\necho compare_one(\"7,5\", 8) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "None<br>None<br>6<br>None<br>None<br>None<br>None<br>None<br>None<br>None<br>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpguwh5q7e.php:49\nStack\
    \ trace:\n#0 /tmp/tmpguwh5q7e.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpguwh5q7e.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  $num1 = floatval($a);\n  $num2 = floatval($b);\n  if($num1==$num2){\n\
    \    return \"None\";\n  }\n  if($num1>$num2){\n    return $num1;\n  }else {\n\
    \    return $num2;\n  }\n}\necho compare_one(1, 2.5) . \"\\n\";\necho compare_one(1,\
    \ \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"\
    1\", 1) . \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgeesu5la.php:31\n\
    Stack trace:\n#0 /tmp/tmpgeesu5la.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgeesu5la.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) == gettype($b)) {\n\t\treturn max($a, $b);\n\t} else\
    \ {\n\t\treturn \"None\";\n\t}\n}\necho compare_one(1, 2.5) . \"\\n\";\necho compare_one(1,\
    \ \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"\
    1\", 1) . \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "None\nNone\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp27k9jg3k.php:27\nStack trace:\n#0 /tmp/tmp27k9jg3k.php(36): test()\n\
    #1 {main}\n  thrown in /tmp/tmp27k9jg3k.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif(gettype($a)==\"string\"&&gettype($b)==\"string\"){\n\t\tif($a>$b){\n\
    \t\t\treturn $a;\n\t\t}elseif($a<$b){\n\t\t\treturn $b;\n\t\t}else{\n\t\t\treturn\
    \ \"None\";\n\t\t}\n\t}elseif(gettype($a)==\"integer\"&&gettype($b)==\"integer\"\
    ){\n\t\tif($a>$b){\n\t\t\treturn $a;\n\t\t}elseif($a<$b){\n\t\t\treturn $b;\n\t\
    \t}else{\n\t\t\treturn \"None\";\n\t\t}\n\t}elseif(gettype($a)==\"double\"&&gettype($b)==\"\
    double\"){\n\t\tif($a>$b){\n\t\t\treturn $a;\n\t\t}elseif($a<$b){\n\t\t\treturn\
    \ $b;\n\t\t}else{\n\t\t\treturn \"None\";\n\t\t}\n\t}elseif(gettype($a)==\"string\"\
    &&gettype($b)==\"integer\"){\n\t\tif($a>$b){\n\t\t\treturn $a;\n\t\t}elseif($a<$b){\n\
    \t\t\treturn $b;\n\t\t}else{\n\t\t\treturn \"None\";\n\t\t}\n\t}elseif(gettype($a)==\"\
    string\"&&gettype($b)==\"double\"){\n\t\tif($a>$b){\n\t\t\treturn $a;\n\t\t}elseif($a<$b){\n\
    \t\t\treturn $b;\n\t\t}else{\n\t\t\treturn \"None\";\n\t\t}\n\t}elseif(gettype($a)==\"\
    integer\"&&gettype($b)==\"string\"){\n\t\tif($a>$b){\n\t\t\treturn $a;\n\t\t}elseif($a<$b){\n\
    \t\t\treturn $b;\n\t\t}else{\n\t\t\treturn \"None\";\n\t\t}\n\t}elseif(gettype($a)==\"\
    double\"&&gettype($b)==\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfomd9f_b.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_numeric($a) and is_numeric($b)) {\n\t\tif (floatval($a) > floatval($b))\
    \ {\n\t\t\treturn $a;\n\t\t} elseif (floatval($a) < floatval($b)) {\n\t\t\treturn\
    \ $b;\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} else {\n\t\treturn \"\
    None\";\n\t}\n}\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpan9s9j8r.php:33\n\
    Stack trace:\n#0 /tmp/tmpan9s9j8r.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpan9s9j8r.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (gettype($a) === gettype($b)) {\n        if ($a === $b) {\n  \
    \          return \"None\";\n        } else {\n            return $a > $b ? $a\
    \ : $b;\n        }\n    } elseif (gettype($a) === \"string\" && gettype($b) ===\
    \ \"integer\") {\n        $b = strval($b);\n        return $a > $b ? $a : $b;\n\
    \    } elseif (gettype($a) === \"integer\" && gettype($b) === \"string\") {\n\
    \        $a = strval($a);\n        return $a > $b ? $a : $b;\n    } elseif (gettype($a)\
    \ === \"integer\" && gettype($b) === \"float\") {\n        $a = floatval($a);\n\
    \        return $a > $b ? $a : $b;\n    } elseif (gettype($a) === \"float\" &&\
    \ gettype($b) === \"integer\") {\n        $b = floatval($b);\n        return $a\
    \ > $b ? $a : $b;\n    } elseif (gettype($a) === \"string\" && gettype($b) ===\
    \ \"float\") {\n        $a = floatval($a);\n        return $a > $b ? $a : $b;\n\
    \    } elseif (gettype($a) === \"float\" && gettype($b) === \"string\") {\n  \
    \      $b = floatval($b);\n        return $a > $b ? $a : $b;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare_one(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpss1kyvgi.php:44\n\
    Stack trace:\n#0 /tmp/tmpss1kyvgi.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpss1kyvgi.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n  $a=is_numeric($a) ? floatval($a) : $a;\n  $b=is_numeric($b) ? floatval($b)\
    \ : $b;\n  if ($a > $b) {\n    return $a;\n  } elseif ($a < $b) {\n    return\
    \ $b;\n  } else {\n    return null;\n  }\n}\nfunction candidate(...$args) {\n\
    \    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hhxij2p.php:26\n\
    Stack trace:\n#0 /tmp/tmp7hhxij2p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7hhxij2p.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) == gettype($b)) {\n\t\tif (gettype($a) == \"integer\"\
    ) {\n\t\t\treturn max($a, $b);\n\t\t} elseif (gettype($a) == \"float\") {\n\t\t\
    \treturn max($a, $b);\n\t\t} elseif (gettype($a) == \"string\") {\n\t\t\tif (strpos($a,\
    \ \",\") != false && strpos($b, \",\") != false) {\n\t\t\t\treturn max($a, $b);\n\
    \t\t\t} elseif (strpos($a, \".\") != false && strpos($b, \".\") != false) {\n\t\
    \t\t\treturn max($a, $b);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\
    }\n\t} else {\n\t\treturn null;\n\t}\n}\necho compare_one(1, 2.5) . \"<br>\";\n\
    echo compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"5,1\", \"6\") . \"\
    <br>\";\necho compare_one(\"1\", 1) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptg7xim1u.php:39\n\
    Stack trace:\n#0 /tmp/tmptg7xim1u.php(48): test()\n#1 {main}\n  thrown in /tmp/tmptg7xim1u.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a == $b) return \"None\";\n\tif (is_int($a) && is_int($b)) return\
    \ max($a, $b);\n\tif (is_float($a) && is_float($b)) return max($a, $b);\n\tif\
    \ (is_string($a) && is_string($b)) return max($a, $b);\n\tif (is_string($a) &&\
    \ is_int($b)) return $b;\n\tif (is_string($a) && is_float($b)) return $b;\n\t\
    if (is_int($a) && is_string($b)) return $b;\n\tif (is_float($a) && is_string($b))\
    \ return $b;\n}\necho compare_one(1, 2.5) . \"\\n\";\necho compare_one(1, \"2,3\"\
    ) . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"\
    1\", 1) . \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n2,3\n6\nNone\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaz5mcmtn.php:30\n\
    Stack trace:\n#0 /tmp/tmpaz5mcmtn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpaz5mcmtn.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\t$arr = [$a, $b];\n\tsort($arr);\n\tif($arr[0] == $arr[1]) return 'None';\n\
    \telse return $arr[1];\n}\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw67ndwvr.php:28\n\
    Stack trace:\n#0 /tmp/tmpw67ndwvr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpw67ndwvr.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if (intval($a) != $a && floatval($a) != $a) {\n        $a = intval($a);\n\
    \    }\n    if (intval($b) != $b && floatval($b) != $b) {\n        $b = intval($b);\n\
    \    }\n    if ($a == $b) {\n        return null;\n    }\n    if ($a > $b) {\n\
    \        return $a;\n    } else {\n        return $b;\n    }\n}\n\necho compare_one(1,\
    \ \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"\
    1\", 1) . \"\\n\";\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2,3\n6\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if(is_int($a) && is_int($b)) {\n        if($a > $b) {\n         \
    \   return $a;\n        } elseif($a < $b) {\n            return $b;\n        }\
    \ else {\n            return null;\n        }\n    } elseif(is_int($a) && is_float($b))\
    \ {\n        if($a > $b) {\n            return $a;\n        } elseif($a < $b)\
    \ {\n            return $b;\n        } else {\n            return null;\n    \
    \    }\n    } elseif(is_int($a) && is_string($b)) {\n        if($a > $b) {\n \
    \           return $a;\n        } elseif($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif(is_float($a)\
    \ && is_int($b)) {\n        if($a > $b) {\n            return $a;\n        } elseif($a\
    \ < $b) {\n            return $b;\n        } else {\n            return null;\n\
    \        }\n    } elseif(is_float($a) && is_float($b)) {\n        if($a > $b)\
    \ {\n            return $a;\n        } elseif($a < $b) {\n            return $b;\n\
    \        } else {\n            return null;\n        }\n    } elseif(is_float($a)\
    \ && is_string($b)) {\n        if($a > $b) {\n            return $a;\n       \
    \ } elseif($a < $b) {\n            return $b;\n        } else {\n            return\
    \ null;\n        }\n    } elseif(is_string($a) && is_int($b)) {\n        if($a\
    \ > $b) {\n            return $a;\n        } elseif($a < $b) {\n            return\
    \ $b;\n        } else {\n            return null;\n        }\n    } elseif(is_string($a)\
    \ && is_float($b)) {\n        if($a > $b) {\n            return $a;\n        }\
    \ elseif($a < $\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp13vnzfmn.php on line 71\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a > $b) {\n        return $a;\n    } elseif ($a < $b) {\n  \
    \      return $b;\n    } else {\n        return \"None\";\n    }\n}\necho compare_one(1,\
    \ 2.5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"\
    5,1\", \"6\") . \"<br>\";\necho compare_one(\"1\", 1) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>None<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpmty1x8pe.php:35\nStack trace:\n#0 /tmp/tmpmty1x8pe.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmpmty1x8pe.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a == $b) {\n        return null;\n    } else if ($a > $b) {\n\
    \        return $a;\n    } else {\n        return $b;\n    }\n}\n\necho compare_one(1,\
    \ 2.5) . \"\\n\";\necho compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"\
    5,1\", \"6\") . \"\\n\";\necho compare_one(\"1\", 1) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\t$num1 = (int) $a;\n\t$num2 = (int) $b;\n\tif ($num1 > $num2) {\n\t\t\
    echo $a;\n\t} elseif ($num1 < $num2) {\n\t\techo $b;\n\t} else {\n\t\techo \"\
    None\";\n\t}\n}\ncompare_one(1, \"2,3\");\nfunction candidate(...$args) {\n  \
    \  return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2,32\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpid3p_ln6.php:27\n\
    Stack trace:\n#0 /tmp/tmpid3p_ln6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpid3p_ln6.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif(is_int($a) && is_int($b)) {\n\t\tif($a == $b) {\n\t\t\treturn NULL;\n\
    \t\t} elseif($a > $b) {\n\t\t\treturn $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t\
    }\n\t} elseif(is_int($a) && is_float($b)) {\n\t\treturn $b;\n\t} elseif(is_float($a)\
    \ && is_int($b)) {\n\t\treturn $a;\n\t} elseif(is_float($a) && is_float($b)) {\n\
    \t\tif($a == $b) {\n\t\t\treturn NULL;\n\t\t} elseif($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif(is_string($a) && is_string($b))\
    \ {\n\t\tif($a == $b) {\n\t\t\treturn NULL;\n\t\t} elseif($a > $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} elseif(is_int($a) && is_string($b))\
    \ {\n\t\treturn $b;\n\t} elseif(is_string($a) && is_int($b)) {\n\t\treturn $a;\n\
    \t} elseif(is_float($a) && is_string($b)) {\n\t\treturn $b;\n\t} elseif(is_string($a)\
    \ && is_float($b)) {\n\t\treturn $a;\n\t}\n}\necho compare_one(1, 2.5);\necho\
    \ \"<br />\";\necho compare_one(1, \"2,3\");\necho \"<br />\";\necho compare_one(\"\
    5,1\", \"6\");\necho \"<br />\";\necho compare_one(\"1\", 1);\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br />2,3<br />6<br />1\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmptksth9lc.php:68\nStack trace:\n#0 /tmp/tmptksth9lc.php(71): test()\n\
    #1 {main}\n  thrown in /tmp/tmptksth9lc.php on line 68\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if($a == $b) {\n        return \"None\";\n    }else if ($a > $b)\
    \ {\n        return $a;\n    }else {\n        return $b;\n    }\n}\necho compare_one(1,\
    \ 2.5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"<br>\";\necho compare_one(\"\
    5,1\", \"6\") . \"<br>\";\necho compare_one(\"1\", 1) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5<br>2,3<br>6<br>None<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmptm18ps_v.php:35\nStack trace:\n#0 /tmp/tmptm18ps_v.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmptm18ps_v.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif ($a === $b) {\n\t\treturn \"None\";\n\t} elseif ($a > $b) {\n\t\t\
    return $a;\n\t} else {\n\t\treturn $b;\n\t}\n}\necho compare_one(1, 2.5) . PHP_EOL;\n\
    echo compare_one(1, \"2,3\") . PHP_EOL;\necho compare_one(\"5,1\", \"6\") . PHP_EOL;\n\
    echo compare_one(\"1\", 1) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaah7jwm9.php:35\n\
    Stack trace:\n#0 /tmp/tmpaah7jwm9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpaah7jwm9.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (is_float($a) && is_float($b)) {\n\t\treturn max($a, $b);\n\t}\n\
    \telseif (is_string($a) && is_string($b)) {\n\t\t$a = (float)str_replace(\",\"\
    , \".\", $a);\n\t\t$b = (float)str_replace(\",\", \".\", $b);\n\t\treturn max($a,\
    \ $b);\n\t}\n\telseif (is_int($a) && is_int($b)) {\n\t\treturn max($a, $b);\n\t\
    }\n\telse {\n\t\treturn false;\n\t}\n}\necho compare_one(1, 2.5) . \"\\n\";\n\
    echo compare_one(1, \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\
    \\n\";\necho compare_one(\"1\", 1) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n6\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_es6awy.php:36\n\
    Stack trace:\n#0 /tmp/tmpc_es6awy.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpc_es6awy.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n    if ($a == $b) {\n   \
    \     return \"None\";\n    } else {\n        if (is_numeric($a) && is_numeric($b))\
    \ {\n            return max($a, $b);\n        } elseif (is_numeric($a) && !is_numeric($b))\
    \ {\n            return $b;\n        } elseif (!is_numeric($a) && is_numeric($b))\
    \ {\n            return $a;\n        } else {\n            return $a;\n      \
    \  }\n    }\n}\necho compare_one(1, \"2,3\");\necho \"<br>\";\necho compare_one(\"\
    1\", 1);\necho \"<br>\";\necho compare_one(\"1\", 1.0);\necho \"<br>\";\necho\
    \ compare_one(\"1.0\", 1);\necho \"<br>\";\necho compare_one(\"1.0\", 1.0);\n\
    echo \"<br>\";\necho compare_one(\"1.0\", \"1\");\necho \"<br>\";\necho compare_one(\"\
    1.1\", \"1.1\");\necho \"<br>\";\necho compare_one(\"1.1\", \"1.2\");\necho \"\
    <br>\";\necho compare_one(\"1.1\", \"1.0\");\necho \"<br>\";\necho compare_one(\"\
    1.0\", \"1.1\");\necho \"<br>\";\necho compare_one(\"1.1\", \"1.0.0\");\necho\
    \ \"<br>\";\necho compare_one(\"1.1\", \"1.1.0\");\necho \"<br>\";\necho compare_one(\"\
    1.1\", \"1.0.0.0\");\necho \"<br>\";\necho compare_one(\"1.1\", \"1.0.0.0.0\"\
    );\necho \"<br>\";\necho compare_one(\"1.1\", \"1.2.3.4.5.6.7.8.9.0\");\necho\
    \ \"<br>\";\necho compare_one(\"1.1\", \"1.1.1.1.1.1.1.1.1.1.1.1\nfunction candidate(...$args)\
    \ {\n    return compare_one(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 2) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 2.5)\
    \ !== 2.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3)\
    \ !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !==\
    \ 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, \"2,3\"\
    ) !== \"2,3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    5,1\", \"6\") !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", \"2\") !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1\", 1) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgqg4ksj3.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n    if ($a == $b) {\n        return null;\n    }\n    if (is_int($a)\
    \ && is_int($b)) {\n        return max($a, $b);\n    }\n    if (is_float($a) &&\
    \ is_float($b)) {\n        return max($a, $b);\n    }\n    if (is_string($a) &&\
    \ is_string($b)) {\n        return max($a, $b);\n    }\n    if (is_int($a) &&\
    \ is_float($b)) {\n        return $b;\n    }\n    if (is_float($a) && is_int($b))\
    \ {\n        return $a;\n    }\n    if (is_int($a) && is_string($b)) {\n     \
    \   return $b;\n    }\n    if (is_string($a) && is_int($b)) {\n        return\
    \ $a;\n    }\n    if (is_float($a) && is_string($b)) {\n        return $b;\n \
    \   }\n    if (is_string($a) && is_float($b)) {\n        return $a;\n    }\n}\n\
    echo compare_one(1, 2.5) . \"<br>\";\necho compare_one(1, \"2,3\") . \"<br>\"\
    ;\necho compare_one(\"5,1\", \"6\") . \"<br>\";\necho compare_one(\"1\", 1) .\
    \ \"<br>\";\n\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 2.5<br>2,3<br>6<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\treturn $a == $b ? NULL : max(is_numeric($a) ? floatval($a) : $a, is_numeric($b)\
    \ ? floatval($b) : $b);\n}\necho compare_one(1, 2.5) . \"\\n\";\necho compare_one(1,\
    \ \"2,3\") . \"\\n\";\necho compare_one(\"5,1\", \"6\") . \"\\n\";\necho compare_one(\"\
    1\", 1) . \"\\n\";\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2.5\n2,3\n6\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluwmbpbi.php:22\n\
    Stack trace:\n#0 /tmp/tmpluwmbpbi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpluwmbpbi.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes integers, floats, or strings representing\n\
    // real numbers, and returns the larger variable in its given variable type.\n\
    // Return None if the values are equal.\n// Note: If a real number is represented\
    \ as a string, the floating point might be . or ,\n// compare_one(1, 2.5) \u279E\
    \ 2.5\n// compare_one(1, \"2,3\") \u279E \"2,3\"\n// compare_one(\"5,1\", \"6\"\
    ) \u279E \"6\"\n// compare_one(\"1\", 1) \u279E None\nfunction compare_one($a,\
    \ $b) {\n\tif (gettype($a) == gettype($b)) {\n\t\tif ($a >= $b) {\n\t\t\treturn\
    \ $a;\n\t\t} else {\n\t\t\treturn $b;\n\t\t}\n\t} else {\n\t\treturn 'None';\n\
    \t}\n}\necho compare_one('1', 1);\necho '<br>';\necho compare_one(1, '2,3');\n\
    echo '<br>';\necho compare_one(1, 2.5);\necho '<br>';\necho compare_one('5,1',\
    \ '6');\necho '<br>';\nfunction candidate(...$args) {\n    return compare_one(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 2) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2.5) !== 2.5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 6) !== 6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, \"2,3\") !== \"2,3\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"5,1\", \"6\") !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", \"2\") !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1\", 1) !== null) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "None<br>None<br>None<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpobie4x7n.php:35\nStack trace:\n#0 /tmp/tmpobie4x7n.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpobie4x7n.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception

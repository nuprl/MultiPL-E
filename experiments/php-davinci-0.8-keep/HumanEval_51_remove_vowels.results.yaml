name: HumanEval_51_remove_vowels
language: php
results:
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  return\
    \ str_replace($vowels, '', $text);\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    $new_text = '';\n\t$len = strlen($text);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\
    \tif (!in_array($text[$i], $vowels)) {\n\t\t\t$new_text .= $text[$i];\n\t\t}\n\
    \t}\n\treturn $new_text;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $result = \"\";\n    $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E',\
    \ 'I', 'O', 'U');\n    for ($i = 0; $i < strlen($text); $i++) {\n        if (in_array($text[$i],\
    \ $vowels)) {\n            continue;\n        }\n        $result .= $text[$i];\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\tif ($text == '') {\n\t\treturn '';\n\t}\n\t$newText = '';\n\tfor ($i =\
    \ 0; $i < strlen($text); $i++) {\n\t\t$char = $text[$i];\n\t\tif ($char != 'a'\
    \ && $char != 'e' && $char != 'i' && $char != 'o' && $char != 'u' && $char !=\
    \ 'A' && $char != 'E' && $char != 'I' && $char != 'O' && $char != 'U') {\n\t\t\
    \t$newText .= $char;\n\t\t}\n\t}\n\treturn $newText;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/i', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $chars = str_split($text);\n  $ret = array();\n  foreach ($chars as $char)\
    \ {\n    if (!is_vowel($char)) {\n      $ret[] = $char;\n    }\n  }\n  return\
    \ implode($ret);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_vowel() in\
    \ /tmp/tmptbgey49b.php:17\nStack trace:\n#0 /tmp/tmptbgey49b.php(25): remove_vowels('')\n\
    #1 /tmp/tmptbgey49b.php(29): candidate('')\n#2 /tmp/tmptbgey49b.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmptbgey49b.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $text_arr = str_split($text);\n\
    \  for ($i = 0; $i < sizeof($text_arr); $i++) {\n    $letter = $text_arr[$i];\n\
    \    if (in_array($letter, $vowels)) {\n      unset($text_arr[$i]);\n    }\n \
    \ }\n  return implode('', $text_arr);\n}\nfunction candidate(...$args) {\n   \
    \ return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt27jsjog.php:31\n\
    Stack trace:\n#0 /tmp/tmpt27jsjog.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt27jsjog.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n  $new_text = str_replace($vowels, \"\", $text);\n  return $new_text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn $text;\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpet78mncx.php:22\n\
    Stack trace:\n#0 /tmp/tmpet78mncx.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpet78mncx.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $result = \"\";\n    $vowels = array('a', 'A', 'e', 'E', 'i', 'I', 'o',\
    \ 'O', 'u', 'U');\n    for ($i = 0; $i < strlen($text); $i++) {\n        if (!in_array($text[$i],\
    \ $vowels)) {\n            $result .= $text[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$text = str_replace('a', '', $text);\n\t$text = str_replace('e', '', $text);\n\
    \t$text = str_replace('i', '', $text);\n\t$text = str_replace('o', '', $text);\n\
    \t$text = str_replace('u', '', $text);\n\treturn $text;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1xv2bnmo.php:31\n\
    Stack trace:\n#0 /tmp/tmp1xv2bnmo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1xv2bnmo.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $pattern = '/[aeiou]/i';\n    return preg_replace($pattern, '', $text);\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\necho remove_vowels('aaBAA');\necho remove_vowels('zbcd');\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: Bzbcd
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$pattern = '/[aeiouAEIOU]/';\n\t$string = preg_replace($pattern, '', $text);\n\
    \treturn $string;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    //put your code here\n    return $text;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxuom7j0w.php:24\n\
    Stack trace:\n#0 /tmp/tmpxuom7j0w.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxuom7j0w.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\
    \    $text = str_replace($vowels, '', $text);\n    return $text;\n}\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    return str_replace($vowels, '', $text);\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $word = str_replace($vowels, \"\", $text);\n    return $word;\n\
    }\n\necho remove_vowels(\"sajjad\");\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: sjjd
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n  $text = str_replace($vowels, \"\", $text);\n  return $text;\n\
    }\n\necho 'Test 1: \"\"' . PHP_EOL;\necho remove_vowels('') . PHP_EOL;\necho 'Test\
    \ 2: \"abcdef\"' . PHP_EOL;\necho remove_vowels('abcdef') . PHP_EOL;\necho 'Test\
    \ 3: \"aaaaa\"' . PHP_EOL;\necho remove_vowels('aaaaa') . PHP_EOL;\necho 'Test\
    \ 4: \"aaBAA\"' . PHP_EOL;\necho remove_vowels('aaBAA') . PHP_EOL;\necho 'Test\
    \ 5: \"zbcd\"' . PHP_EOL;\necho remove_vowels('zbcd') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Test 1: \"\"\n\nTest 2: \"abcdef\"\nbcdf\nTest 3: \"aaaaa\"\n\nTest 4:\
    \ \"aaBAA\"\nB\nTest 5: \"zbcd\"\nzbcd\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    // Using str_split to split the string into array.\n    $text_array =\
    \ str_split($text);\n    // Using array_filter to remove vowels from the array.\n\
    \    $text_array = array_filter($text_array, 'is_not_vowel');\n    // Using implode\
    \ to join the array into string.\n    return implode('', $text_array);\n}\n\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'is_not_vowel' not found or invalid function name in /tmp/tmpztx8c9mh.php on\
    \ line 17\n\nWarning: implode(): Invalid arguments passed in /tmp/tmpztx8c9mh.php\
    \ on line 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztx8c9mh.php:27\n\
    Stack trace:\n#0 /tmp/tmpztx8c9mh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpztx8c9mh.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $result = str_replace($vowels, \"\", $text);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n  $text = str_replace($vowels, \"\", $text);\n  return $text;\n\
    }\necho \"remove_vowels('aaBAA')\\n\";\necho remove_vowels('aaBAA').\"\\n\";\n\
    echo \"remove_vowels('zbcd')\\n\";\necho remove_vowels('zbcd').\"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "remove_vowels('aaBAA')\nB\nremove_vowels('zbcd')\nzbcd\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = str_split($text);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    for ($i = 0; $i < count($text); $i++) {\n        if (in_array($text[$i],\
    \ $vowels)) {\n            unset($text[$i]);\n        }\n    }\n    return implode('',\
    \ $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpo667xj.php:30\n\
    Stack trace:\n#0 /tmp/tmpbpo667xj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbpo667xj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    // TODO: Implement me\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuefy40w.php:22\n\
    Stack trace:\n#0 /tmp/tmpvuefy40w.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpvuefy40w.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a', 'A', 'e', 'E', 'i', 'I', 'o', 'O', 'u', 'U');\n\
    \    return str_replace($vowels, '', $text);\n}\n\necho remove_vowels('zbcd');\n\
    echo remove_vowels('aaaaa');\necho remove_vowels('aaBAA');\necho remove_vowels('zbcd');\n\
    \nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: zbcdBzbcd
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$result = \"\";\n\tfor ($i = 0; $i < strlen($text); $i++) {\n\t\tif (in_array($text[$i],\
    \ array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'))) {\n\t\t\tcontinue;\n\
    \t\t}\n\t\t$result .= $text[$i];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $char_array = str_split($text);\n    $to_remove = array('a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n    $result = array_diff($char_array, $to_remove);\n\
    \    return implode($result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    // return preg_replace('/[aeiou]/', '', $text);\n    return preg_replace('/[aeiouAEIOU]/',\
    \ '', $text);\n}\necho \"remove_vowels('') = \" . remove_vowels('') . \"\\n\"\
    ;\necho \"remove_vowels('abcdef') = \" . remove_vowels('abcdef') . \"\\n\";\n\
    echo \"remove_vowels('aaaaa') = \" . remove_vowels('aaaaa') . \"\\n\";\necho \"\
    remove_vowels('aaBAA') = \" . remove_vowels('aaBAA') . \"\\n\";\necho \"remove_vowels('zbcd')\
    \ = \" . remove_vowels('zbcd') . \"\\n\";\necho \"remove_vowels('aAAb') = \" .\
    \ remove_vowels('aAAb') . \"\\n\";\necho \"remove_vowels('aoaBAA') = \" . remove_vowels('aoaBAA')\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "remove_vowels('') = \nremove_vowels('abcdef') = bcdf\nremove_vowels('aaaaa')\
    \ = \nremove_vowels('aaBAA') = B\nremove_vowels('zbcd') = zbcd\nremove_vowels('aAAb')\
    \ = b\nremove_vowels('aoaBAA') = B\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $new_text = '';\n    $new_text_arr\
    \ = str_split($text);\n    foreach ($new_text_arr as $letter) {\n        if (!in_array($letter,\
    \ $vowels)) {\n            $new_text .= $letter;\n        }\n    }\n    return\
    \ $new_text;\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0p65c9w.php:33\n\
    Stack trace:\n#0 /tmp/tmp_0p65c9w.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_0p65c9w.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_gittxq.php:22\n\
    Stack trace:\n#0 /tmp/tmp9_gittxq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9_gittxq.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/i', '', $text);\n}\necho \"\\n\\n\" . remove_vowels('')\
    \ . \"\\n\";\necho remove_vowels('abcdef') . \"\\n\";\necho remove_vowels('aaaaa')\
    \ . \"\\n\";\necho remove_vowels('aaBAA') . \"\\n\";\necho remove_vowels('zbcd')\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\nbcdf\n\nB\nzbcd\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t// remove vowels from text\n\t$string = '';\n\t$len = strlen($text);\n\t\
    for ($i = 0; $i < $len; $i++) {\n\t\tif (!is_vowel($text[$i])) {\n\t\t\t$string\
    \ .= $text[$i];\n\t\t}\n\t}\n\treturn $string;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_vowel() in\
    \ /tmp/tmplfoigiyc.php:18\nStack trace:\n#0 /tmp/tmplfoigiyc.php(26): remove_vowels('abcdef\\\
    nghijklm')\n#1 /tmp/tmplfoigiyc.php(31): candidate('abcdef\\nghijklm')\n#2 /tmp/tmplfoigiyc.php(39):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmplfoigiyc.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  $result\
    \ = str_replace($vowels, '', $text);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiouAEIOU]/', '', $text);\n}\n\nvar_dump(remove_vowels(''));\n\
    var_dump(remove_vowels('abcdef'));\nvar_dump(remove_vowels('aaaaa'));\nvar_dump(remove_vowels('aaBAA'));\n\
    var_dump(remove_vowels('zbcd'));\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "string(0) \"\"\nstring(4) \"bcdf\"\nstring(0) \"\"\nstring(1) \"B\"\nstring(4)\
    \ \"zbcd\"\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  $text\
    \ = str_replace($vowels, '', $text);\n  return $text;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $chars = str_split($text);\n    $vowels = array('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U');\n    foreach ($chars as $char) {\n        if (in_array($char,\
    \ $vowels)) {\n            unset($char);\n        }\n    }\n    return implode($chars);\n\
    }\n\necho remove_vowels('aeiouAEOIU');\n\nfunction candidate(...$args) {\n   \
    \ return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "aeiouAEOIU\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mgc_1sa.php:32\n\
    Stack trace:\n#0 /tmp/tmp1mgc_1sa.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1mgc_1sa.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $out = \"\";\n  for ($i = 0; $i < strlen($text); $i++) {\n    $letter =\
    \ $text[$i];\n    if (strpos(\"aeiouAEIOU\", $letter) !== false) {\n      $out\
    \ .= $letter;\n    }\n  }\n  return $out;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7cq3fxn.php:30\n\
    Stack trace:\n#0 /tmp/tmp_7cq3fxn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_7cq3fxn.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n   $text = str_replace(array('a', 'e', 'i', 'o', 'u'), \"\", $text);\n  \
    \ return $text;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnp7gr_bw.php:27\n\
    Stack trace:\n#0 /tmp/tmpnp7gr_bw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnp7gr_bw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t// $text = strtolower($text);\n\t$chars = str_split($text);\n\t$vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n\t$result = [];\n\tforeach ($chars as $char) {\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\tcontinue;\n\t\t}\n\t\t$result[] = $char;\n\
    \t}\n\t$result = implode($result);\n\treturn $result;\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr48b5_0s.php:36\n\
    Stack trace:\n#0 /tmp/tmpr48b5_0s.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr48b5_0s.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = str_split($text);\n    $vowels = array('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U');\n    $text = array_diff($text, $vowels);\n    return\
    \ implode('', $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $text = preg_replace('/[a, e, i, o, u]/', '', $text);\n  return $text;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5cwrrn7w.php:26\n\
    Stack trace:\n#0 /tmp/tmp5cwrrn7w.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5cwrrn7w.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\
    \    return str_replace($vowels, '', $text);\n}\n\necho remove_vowels('aaaaa')\
    \ . \"\\n\";\necho remove_vowels('aaBAA') . \"\\n\";\necho remove_vowels('zbcd')\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nB\nzbcd\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/i', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return str_replace(array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'), '', $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $result = '';\n  for ($i = 0; $i < strlen($text); $i++) {\n    if (!in_array($text[$i],\
    \ array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'))) {\n      $result .=\
    \ $text[$i];\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n  $text = str_replace($vowels, \"\", $text);\n  return $text;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$replace = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    $output = str_replace($replace, '', $text);\n\treturn $output;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = 'aeiouAEIOU';\n\treturn str_replace(str_split($vowels), '', $text);\n\
    }\n\necho remove_vowels('aaaaa');\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    $new_text = str_replace($vowels, '', $text);\n\t\n\treturn $new_text;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiouAEIOU\";\n    $result = \"\";\n    for ($i = 0; $i <\
    \ strlen($text); $i++) {\n        if (strpos($vowels, $text[$i]) === false) {\n\
    \            $result .= $text[$i];\n        }\n    }\n    return $result;\n}\n\
    \necho remove_vowels(\"aaaaa\");\necho \"\\n\";\necho remove_vowels(\"zbcd\");\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nzbcd\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $new_text = str_replace($vowels, \"\", $text);\n    return\
    \ $new_text;\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $result = '';\n    for ($i = 0; $i < strlen($text); $i++) {\n       \
    \ if (!in_array($text[$i], array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'))) {\n            $result .= $text[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $pattern = \"/[a|e|i|o|u]/\";\n  return preg_replace($pattern, \"\", $text);\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa79gefq7.php:27\n\
    Stack trace:\n#0 /tmp/tmpa79gefq7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpa79gefq7.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $s1 = str_replace($vowels, \"\", $text);\n    return $s1;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\treturn str_replace($vowels, \"\", $text);\n}\n\n$testArray\
    \ = array(\"\", \"abcdef\", \"aaaaa\", \"aaBAA\", \"zbcd\");\nfor ($i = 0; $i\
    \ < count($testArray); $i++) {\n\techo remove_vowels($testArray[$i]) . \"\\n\"\
    ;\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nbcdf\n\nB\nzbcd\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/i', '', $text);\n}\n\nprint remove_vowels('zbcd');\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: zbcd
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $string = str_replace($vowels, \"\", $text);\n    return\
    \ $string;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9bgw90j.php:26\n\
    Stack trace:\n#0 /tmp/tmpl9bgw90j.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpl9bgw90j.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = str_split($text);\n    foreach ($text as $key => $value) {\n\
    \        if (preg_match('/[aeiouAEIOU]/', $value)) {\n            unset($text[$key]);\n\
    \        }\n    }\n    return join('', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = preg_replace('/[aeiouAEIOU]/', '', $text);\n    return $text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $text = str_split($text);\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U');\n  $text = array_diff($text, $vowels);\n  return implode('',\
    \ $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$string_length = strlen($text);\n\t$string_without_vowels = '';\n\t\n\t\
    $vowels = array(\n\t\t'a',\n\t\t'e',\n\t\t'i',\n\t\t'o',\n\t\t'u',\n\t\t'A',\n\
    \t\t'E',\n\t\t'I',\n\t\t'O',\n\t\t'U'\n\t);\n\t\n\tfor ($i = 0; $i < $string_length;\
    \ $i++) {\n\t\tif (in_array($text[$i], $vowels)) {\n\t\t\tcontinue;\n\t\t}\n\t\
    \t\n\t\t$string_without_vowels .= $text[$i];\n\t}\n\t\n\treturn $string_without_vowels;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $letters = str_split($text);\n\
    \  $result = [];\n  foreach ($letters as $letter) {\n    if (!in_array($letter,\
    \ $vowels)) {\n      $result[] = $letter;\n    }\n  }\n  return implode($result);\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc42b8o69.php:34\n\
    Stack trace:\n#0 /tmp/tmpc42b8o69.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc42b8o69.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'A', 'e', 'E', 'i', 'I', 'o', 'O', 'u', 'U'];\n    return\
    \ str_replace($vowels, '', $text);\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $result = \"\";\n    for ($i = 0; $i < strlen($text); $i++)\
    \ {\n        if (!in_array($text[$i], $vowels)) {\n            $result .= $text[$i];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $result = '';\n    $text = preg_replace('/[^a-zA-Z]/', '', $text);\n\
    \    for ($i = 0; $i < strlen($text); $i++) {\n        $currentChar = strtolower($text[$i]);\n\
    \        if ($currentChar != 'a' && $currentChar != 'e' && $currentChar != 'i'\
    \ && $currentChar != 'o' && $currentChar != 'u') {\n            $result .= $text[$i];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvauwetvp.php:31\n\
    Stack trace:\n#0 /tmp/tmpvauwetvp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvauwetvp.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$textToArray = str_split($text);\n\
    \t$result = [];\n\tforeach ($textToArray as $char) {\n\t\tif (!in_array($char,\
    \ $vowels)) {\n\t\t\t$result[] = $char;\n\t\t}\n\t}\n\treturn implode($result);\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3wrrohf.php:34\n\
    Stack trace:\n#0 /tmp/tmpn3wrrohf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn3wrrohf.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$text = str_replace('a', '', $text);\n\t$text = str_replace('e', '', $text);\n\
    \t$text = str_replace('i', '', $text);\n\t$text = str_replace('o', '', $text);\n\
    \t$text = str_replace('u', '', $text);\n\treturn $text;\n}\necho remove_vowels('zbcd');\n\
    \nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "zbcd\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtehcrst.php:32\n\
    Stack trace:\n#0 /tmp/tmpdtehcrst.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdtehcrst.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$text = str_split($text);\n\tforeach\
    \ ($text as $i => $char) {\n\t\tif (in_array($char, $vowels)) unset($text[$i]);\n\
    \t}\n\treturn implode('', $text);\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxcq9rlfv.php:31\n\
    Stack trace:\n#0 /tmp/tmpxcq9rlfv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxcq9rlfv.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = 'aeiouAEIOU';\n    $str = '';\n    for ($i = 0; $i < strlen($text);\
    \ $i++) {\n        if (strpos($vowels, $text[$i]) === false) {\n            $str\
    \ .= $text[$i];\n        }\n    }\n    return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouAEIOU]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n  $newText = \"\";\n  for ($i = 0; $i < strlen($text); $i++)\
    \ {\n    if (!in_array($text[$i], $vowels)) {\n      $newText .= $text[$i];\n\
    \    }\n  }\n  return $newText;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = str_split($text);\n    $vowels = array_flip(str_split('aeiouAEIOU'));\n\
    \    $result = array();\n    foreach ($text as $c) {\n        if (!isset($vowels[$c]))\
    \ {\n            $result[] = $c;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return $text;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmporhwx.php:23\n\
    Stack trace:\n#0 /tmp/tmpnmporhwx.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnmporhwx.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\tif(strlen($text) === 0) {\n\t\treturn '';\n\t} else {\n\t\t$c = $text[0];\n\
    \t\tif($c === 'a' || $c === 'e' || $c === 'i' || $c === 'o' || $c === 'u' || $c\
    \ === 'A' || $c === 'E' || $c === 'I' || $c === 'O' || $c === 'U') {\n\t\t\treturn\
    \ remove_vowels(substr($text, 1));\n\t\t} else {\n\t\t\treturn $c . remove_vowels(substr($text,\
    \ 1));\n\t\t}\n\t}\n}\n\necho '<pre>';\n\necho remove_vowels('');\necho '<br>';\n\
    echo remove_vowels('abcdef');\necho '<br>';\necho remove_vowels('aaaaa');\necho\
    \ '<br>';\necho remove_vowels('aaBAA');\necho '<br>';\necho remove_vowels('zbcd');\n\
    echo '<br>';\n\necho '</pre>';\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <pre><br>bcdf<br><br>B<br>zbcd<br></pre>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  $text\
    \ = str_replace($vowels, '', $text);\n  return $text;\n}\n\n$test_str_1 = '';\n\
    $test_str_2 = 'abcdef';\n$test_str_3 = 'aaaaa';\n$test_str_4 = 'aaBAA';\n$test_str_5\
    \ = 'zbcd';\n\necho remove_vowels($test_str_1);\necho '<br>';\necho remove_vowels($test_str_2);\n\
    echo '<br>';\necho remove_vowels($test_str_3);\necho '<br>';\necho remove_vowels($test_str_4);\n\
    echo '<br>';\necho remove_vowels($test_str_5);\necho '<br>';\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: <br>bcdf<br><br>B<br>zbcd<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = 'aeiouAEIOU';\n    $vowelsArray = str_split($vowels);\n   \
    \ $result = '';\n    $textArray = str_split($text);\n    foreach ($textArray as\
    \ $value) {\n        if (!in_array($value, $vowelsArray)) {\n            $result\
    \ .= $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    $output = '';\n\t$length = strlen($text);\n\tfor ($i = 0; $i < $length; $i++)\
    \ {\n\t\tif (!in_array($text[$i], $vowels)) {\n\t\t\t$output .= $text[$i];\n\t\
    \t}\n\t}\n\treturn $output;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    return str_replace($vowels,\
    \ '', $text);\n}\necho remove_vowels('') . '<br>';\necho remove_vowels('abcdef')\
    \ . '<br>';\necho remove_vowels('aaaaa') . '<br>';\necho remove_vowels('aaBAA')\
    \ . '<br>';\necho remove_vowels('zbcd') . '<br>';\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<br>bcdf<br><br>BAA<br>zbcd<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmphrluy3ax.php:32\nStack trace:\n#0 /tmp/tmphrluy3ax.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphrluy3ax.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $result = \"\";\n    for ($i = 0; $i < strlen($text); $i++) {\n     \
    \   if (strpos(\"aeiouAEIOU\", $text[$i]) === false) {\n            $result .=\
    \ $text[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $n = strlen($text);\n    $ans = '';\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $c = $text[$i];\n        if (!($c == 'a' || $c == 'e' || $c == 'i'\
    \ || $c == 'o' || $c == 'u' || $c == 'A' || $c == 'E' || $c == 'I' || $c == 'O'\
    \ || $c == 'U')) {\n            $ans .= $c;\n        }\n    }\n    return $ans;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\treturn str_replace($vowels, \"\", $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $text = str_split($text);\n  foreach ($text as $key => $value) {\n    if\
    \ ($value == 'a' || $value == 'e' || $value == 'i' || $value == 'o' || $value\
    \ == 'u' || $value == 'A' || $value == 'E' || $value == 'I' || $value == 'O' ||\
    \ $value == 'U') {\n      unset($text[$key]);\n    }\n  }\n  return join($text);\n\
    }\necho remove_vowels('aaBAA');\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: B
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouAEIOU]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $newText = \"\";\n  $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\",\
    \ \"A\", \"E\", \"I\", \"O\", \"U\");\n  for ($i = 0; $i < strlen($text); $i++)\
    \ {\n    if (!in_array($text[$i], $vowels)) {\n      $newText .= $text[$i];\n\
    \    }\n  }\n  return $newText;\n}\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/i', '', $text);\n}\n\nprint_r(remove_vowels(''));\n\
    echo \"\\n\";\nprint_r(remove_vowels('abcdef'));\necho \"\\n\";\nprint_r(remove_vowels('aaaaa'));\n\
    echo \"\\n\";\nprint_r(remove_vowels('aaBAA'));\necho \"\\n\";\nprint_r(remove_vowels('zbcd'));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nbcdf\n\nB\nzbcd\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t// TODO\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ws1_z7r.php:22\n\
    Stack trace:\n#0 /tmp/tmp2ws1_z7r.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2ws1_z7r.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = str_split($text);\n    $vowels = array('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U');\n    for ($i = 0; $i < count($text); $i++) {\n   \
    \     if (in_array($text[$i], $vowels)) {\n            unset($text[$i]);\n   \
    \     }\n    }\n    return implode('', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgdqt8whr.php:30\n\
    Stack trace:\n#0 /tmp/tmpgdqt8whr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgdqt8whr.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t// get the list of vowels.\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t\
    // create an empty string to hold the new string.\n\t$new_text = '';\n\t// loop\
    \ through the text and add non-vowels to the new string.\n\tfor ($i = 0; $i <\
    \ strlen($text); $i++) {\n\t\t// if the current letter is not in the vowels, add\
    \ it to the new string.\n\t\tif (!in_array($text[$i], $vowels)) {\n\t\t\t$new_text\
    \ .= $text[$i];\n\t\t}\n\t}\n\t// return the new string.\n\treturn $new_text;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5zefeb9.php:37\n\
    Stack trace:\n#0 /tmp/tmpk5zefeb9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpk5zefeb9.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  $result\
    \ = '';\n  $len = strlen($text);\n  for ($i = 0; $i < $len; $i++) {\n    if (!in_array($text[$i],\
    \ $vowels)) {\n      $result .= $text[$i];\n    }\n  }\n  return $result;\n}\n\
    \n$input = array('', 'abcdef', 'aaaaa', 'aaBAA', 'zbcd');\n$expected = array('',\
    \ 'bcdf', '', 'B', 'zbcd');\nforeach ($input as $index => $item) {\n  $result\
    \ = remove_vowels($item);\n  if ($result == $expected[$index]) {\n    echo \"\
    $index: PASSED\\n\";\n  } else {\n    echo \"$index: FAILED\\n\";\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0: PASSED\n1: PASSED\n2: PASSED\n3: PASSED\n4: PASSED\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $new_text = \"\";\n  for ($i = 0; $i < strlen($text); $i++) {\n    $c =\
    \ $text[$i];\n    if ($c !== 'a' && $c !== 'e' && $c !== 'i' && $c !== 'o' &&\
    \ $c !== 'u') {\n      $new_text .= $c;\n    }\n  }\n  return $new_text;\n}\n\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_bj3cyg.php:33\n\
    Stack trace:\n#0 /tmp/tmpu_bj3cyg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpu_bj3cyg.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    $result = str_replace($vowels, '', $text);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $replaced = str_replace(array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'), '', $text);\n    return $replaced;\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  $text_array\
    \ = str_split($text);\n  $result = array();\n  foreach ($text_array as $text_char)\
    \ {\n    if (!in_array($text_char, $vowels)) {\n      $result[] = $text_char;\n\
    \    }\n  }\n  return implode($result);\n}\n\n$text = 'ertyuioBbbbbba';\necho\
    \ remove_vowels($text);\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: rtyBbbbbb
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t// Remove vowels from the string\n\t$text = preg_replace('/[aeiou]/i',\
    \ '', $text);\n\treturn $text;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/i', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = trim($text);\n    if ($text === '') {\n        return '';\n \
    \   }\n    $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\
    \    $text_chars = str_split($text);\n    $result = '';\n    foreach ($text_chars\
    \ as $text_char) {\n        if (!in_array($text_char, $vowels)) {\n          \
    \  $result .= $text_char;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aouei]/i', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$text = str_replace('a', '', $text);\n\t$text = str_replace('e', '', $text);\n\
    \t$text = str_replace('i', '', $text);\n\t$text = str_replace('o', '', $text);\n\
    \t$text = str_replace('u', '', $text);\n\t$text = str_replace('A', '', $text);\n\
    \t$text = str_replace('E', '', $text);\n\t$text = str_replace('I', '', $text);\n\
    \t$text = str_replace('O', '', $text);\n\t$text = str_replace('U', '', $text);\n\
    \treturn $text;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  // TODO: Implement this function.\n  $newText = \"\";\n  for ($i = 0; $i\
    \ < strlen($text); $i++) {\n    if ($text[$i] !== \"a\" && $text[$i] !== \"e\"\
    \ && $text[$i] !== \"i\" && $text[$i] !== \"o\" && $text[$i] !== \"u\") {\n  \
    \    $newText .= $text[$i];\n    }\n  }\n  return $newText;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnx7roex.php:33\n\
    Stack trace:\n#0 /tmp/tmpcnx7roex.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcnx7roex.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    $text = str_replace($vowels, '', $text);\n\treturn $text;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$temp = $text;\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U');\n\tforeach ($vowels as $vowel) {\n\t\t$temp = str_replace($vowel,\
    \ '', $temp);\n\t}\n\treturn $temp;\n}\n\nfunction candidate(...$args) {\n   \
    \ return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\treturn str_replace($vowels, \"\", $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/i', '', $text);\n}\n\necho remove_vowels('')\
    \ . \"\\n\";\necho remove_vowels('abcdef') . \"\\n\";\necho remove_vowels('aaaaa')\
    \ . \"\\n\";\necho remove_vowels('aaBAA') . \"\\n\";\necho remove_vowels('zbcd')\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nbcdf\n\nB\nzbcd\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $new_string = str_replace($vowels, \"\", $text);\n    return\
    \ $new_string;\n}\necho remove_vowels(\"abcdef\").\"\\n\";\necho remove_vowels(\"\
    aaaaa\").\"\\n\";\necho remove_vowels(\"aaBAA\").\"\\n\";\necho remove_vowels(\"\
    zbcd\").\"\\n\";\necho remove_vowels(\"\").\"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bcdf\n\nB\nzbcd\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiouAEIOU]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = \"aeiouAEIOU\";\n\t$arr = str_split($text);\n\t$newArr = [];\n\
    \tforeach ($arr as $val) {\n\t\tif (strpos($vowels, $val) === false) {\n\t\t\t\
    $newArr[] = $val;\n\t\t}\n\t}\n\treturn implode($newArr);\n}\n\necho remove_vowels(\"\
    \") . \"<br>\";\necho remove_vowels(\"abcdef\") . \"<br>\";\necho remove_vowels(\"\
    aaaaa\") . \"<br>\";\necho remove_vowels(\"aaBAA\") . \"<br>\";\necho remove_vowels(\"\
    zbcd\") . \"<br>\";\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: strpos(): Empty needle in /tmp/tmpqeivqq3j.php on line 18\n\
    <br>bcdf<br><br>B<br>zbcd<br>\nWarning: strpos(): Empty needle in /tmp/tmpqeivqq3j.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $split_text = str_split($text);\n\
    \  $result = '';\n  foreach ($split_text as $letter) {\n    if (!in_array($letter,\
    \ $vowels)) {\n      $result .= $letter;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbcg48691.php:34\n\
    Stack trace:\n#0 /tmp/tmpbcg48691.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbcg48691.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $result = $text;\n    foreach ($vowels as $vowel) {\n  \
    \      $result = str_replace($vowel, \"\", $result);\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  return str_replace($vowels, '',\
    \ $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxn_sq8n7.php:27\n\
    Stack trace:\n#0 /tmp/tmpxn_sq8n7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxn_sq8n7.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $regexp = '/[aeiou]/i';\n  return preg_replace($regexp, '', $text);\n}\n\
    \necho remove_vowels('abcdef');\necho \"<br>\";\necho remove_vowels('aaaaa');\n\
    echo \"<br>\";\necho remove_vowels('aaBAA');\necho \"<br>\";\necho remove_vowels('zbcd');\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: bcdf<br><br>B<br>zbcd<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $result = \"\";\n    for ($i = 0; $i < strlen($text); $i++) {\n     \
    \   if (!is_vowel($text[$i])) {\n            $result .= $text[$i];\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_vowel() in\
    \ /tmp/tmpotzus3xd.php:16\nStack trace:\n#0 /tmp/tmpotzus3xd.php(24): remove_vowels('abcdef\\\
    nghijklm')\n#1 /tmp/tmpotzus3xd.php(29): candidate('abcdef\\nghijklm')\n#2 /tmp/tmpotzus3xd.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpotzus3xd.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\necho remove_vowels('aaBAA') . PHP_EOL;\n\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "B\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$result = [];\n\tforeach\
    \ (str_split($text) as $char) {\n\t\tif (!in_array($char, $vowels)) {\n\t\t\t\
    $result[] = $char;\n\t\t}\n\t}\n\treturn implode($result);\n}\necho remove_vowels(\"\
    aaBAA\") . \"\\n\";\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "BAA\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpirim46.php:33\n\
    Stack trace:\n#0 /tmp/tmpfpirim46.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfpirim46.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/i', '', $text);\n}\n\necho remove_vowels('This\
    \ is a string');\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Ths s  strng\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    // Test if text is empty\n    if ($text == '') {\n        return '';\n\
    \    }\n\n    // Test if first character is not a vowel.\n    if (!is_vowel($text[0]))\
    \ {\n        // Recursively get the string without vowels other than the first\
    \ character.\n        $r = remove_vowels(substr($text, 1));\n        // Return\
    \ the first character and the other characters without vowels.\n        return\
    \ $text[0] . $r;\n    }\n\n    // Recursively get the string without vowels other\
    \ than the first character.\n    $r = remove_vowels(substr($text, 1));\n    //\
    \ Return the other characters without vowels.\n    return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_vowel() in\
    \ /tmp/tmpo_m9ur67.php:20\nStack trace:\n#0 /tmp/tmpo_m9ur67.php(34): remove_vowels('abcdef\\\
    nghijklm')\n#1 /tmp/tmpo_m9ur67.php(39): candidate('abcdef\\nghijklm')\n#2 /tmp/tmpo_m9ur67.php(47):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpo_m9ur67.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$result = \"\";\n\tfor ($i = 0; $i < strlen($text); $i++) {\n\t\t$char\
    \ = $text[$i];\n\t\tif ($char != 'a' && $char != 'e' && $char != 'i' && $char\
    \ != 'o' && $char != 'u') {\n\t\t\t$result = $result . $char;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3myvxn5v.php:33\n\
    Stack trace:\n#0 /tmp/tmp3myvxn5v.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3myvxn5v.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $result = '';\n    for ($i\
    \ = 0; $i < strlen($text); $i++) {\n        if (!in_array($text[$i], $vowels))\
    \ {\n            $result .= $text[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5ups0sq.php:33\n\
    Stack trace:\n#0 /tmp/tmpx5ups0sq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpx5ups0sq.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/i', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $no_vowels = preg_replace('/[aeiou]/i', '', $text);\n    return $no_vowels;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return str_replace(array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'),\
    \ '', $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\
    \    return str_replace($vowels, '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\tif (strlen($text) > 0) {\n\t\tif ($text[0] == 'a' || $text[0] == 'e' ||\
    \ $text[0] == 'i' || $text[0] == 'o' || $text[0] == 'u') {\n\t\t\treturn remove_vowels(substr($text,\
    \ 1));\n\t\t} else {\n\t\t\treturn $text[0] . remove_vowels(substr($text, 1));\n\
    \t\t}\n\t} else {\n\t\treturn $text;\n\t}\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpye4m9ra_.php:34\n\
    Stack trace:\n#0 /tmp/tmpye4m9ra_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpye4m9ra_.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t// Your code here.\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjnz7si3q.php:21\n\
    Stack trace:\n#0 /tmp/tmpjnz7si3q.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjnz7si3q.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $result = \"\";\n    for ($i = 0; $i < strlen($text); $i++)\
    \ {\n        if (!in_array($text[$i], $vowels)) {\n            $result .= $text[$i];\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    $result = str_replace($vowels, '', $text);\n\treturn $result;\n}\necho remove_vowels('zbcd');\n\
    echo PHP_EOL;\necho remove_vowels('aaBAA');\necho PHP_EOL;\necho remove_vowels('aaaaa');\n\
    echo PHP_EOL;\necho remove_vowels('abcdef');\necho PHP_EOL;\necho remove_vowels('');\n\
    echo PHP_EOL;\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "zbcd\nB\n\nbcdf\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    return str_replace($vowels,\
    \ '', $text);\n}\n\n$tests = [\n    ['input' => '', 'expected' => ''],\n    ['input'\
    \ => 'abcdef', 'expected' => 'bcdf'],\n    ['input' => 'aaaaa', 'expected' =>\
    \ ''],\n    ['input' => 'aaBAA', 'expected' => 'B'],\n    ['input' => 'zbcd',\
    \ 'expected' => 'zbcd'],\n];\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6279y_ue.php:35\n\
    Stack trace:\n#0 /tmp/tmp6279y_ue.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6279y_ue.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  return\
    \ str_replace($vowels, '', $text);\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$res = '';\n\tfor ($i = 0; $i < strlen($text); $i++) {\n\t\tif (!is_vowel($text[$i]))\
    \ {\n\t\t\t$res .= $text[$i];\n\t\t}\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_vowel() in\
    \ /tmp/tmp0aoiy98y.php:16\nStack trace:\n#0 /tmp/tmp0aoiy98y.php(24): remove_vowels('abcdef\\\
    nghijklm')\n#1 /tmp/tmp0aoiy98y.php(29): candidate('abcdef\\nghijklm')\n#2 /tmp/tmp0aoiy98y.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp0aoiy98y.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aoeiuy]/i', '', $text);\n}\necho remove_vowels('')\
    \ . \"\\n\";\necho remove_vowels('abcdef') . \"\\n\";\necho remove_vowels('aaaaa')\
    \ . \"\\n\";\necho remove_vowels('aaBAA') . \"\\n\";\necho remove_vowels('zbcd')\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nbcdf\n\nB\nzbcd\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7z54fp1.php:33\n\
    Stack trace:\n#0 /tmp/tmpl7z54fp1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl7z54fp1.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$text = str_replace('a', '', $text);\n\t$text = str_replace('e', '', $text);\n\
    \t$text = str_replace('i', '', $text);\n\t$text = str_replace('o', '', $text);\n\
    \t$text = str_replace('u', '', $text);\n\treturn $text;\n}\n\necho remove_vowels('aaBAA');\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "BAA\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasjq4_nu.php:34\n\
    Stack trace:\n#0 /tmp/tmpasjq4_nu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpasjq4_nu.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/i', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  // write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8rrkrdw.php:21\n\
    Stack trace:\n#0 /tmp/tmpv8rrkrdw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpv8rrkrdw.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $result = \"\";\n    $text = strtolower($text);\n    for ($i = 0; $i\
    \ < strlen($text); $i++) {\n        if ($text[$i] != 'a' && $text[$i] != 'e' &&\
    \ $text[$i] != 'i' && $text[$i] != 'o' && $text[$i] != 'u') {\n            $result\
    \ .= $text[$i];\n        }\n    }\n    return $result;\n}\n\necho remove_vowels(\"\
    abcdef\") . \"\\n\"; // bcdf\necho remove_vowels(\"aaaaa\") . \"\\n\"; // \"\"\
    \necho remove_vowels(\"aaBAA\") . \"\\n\"; // B\necho remove_vowels(\"zbcd\")\
    \ . \"\\n\"; // zbcd\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bcdf\n\nb\nzbcd\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuw0c9vi_.php:37\n\
    Stack trace:\n#0 /tmp/tmpuw0c9vi_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpuw0c9vi_.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return str_replace(['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'],\
    \ '', $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $len = strlen($text);\n    $newtext = \"\";\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        $ch = substr($text, $i, 1);\n        if (strpos(\"aeiouAEIOU\"\
    , $ch) === false) {\n            $newtext .= $ch;\n        }\n    }\n    return\
    \ $newtext;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  return\
    \ str_replace($vowels, '', $text);\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$text = str_split($text);\n\tforeach\
    \ ($text as $key => $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t\
    unset($text[$key]);\n\t\t}\n\t}\n\treturn implode($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcyg5qxlk.php:33\n\
    Stack trace:\n#0 /tmp/tmpcyg5qxlk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcyg5qxlk.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = 'aeiouAEIOU';\n    $newText = '';\n    for ($i = 0; $i < strlen($text);\
    \ $i++) {\n        if (strpos($vowels, $text[$i]) === false) {\n            $newText\
    \ .= $text[$i];\n        }\n    }\n    return $newText;\n}\necho remove_vowels('zbcd');\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: zbcd
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphin9pbee.php:26\n\
    Stack trace:\n#0 /tmp/tmphin9pbee.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphin9pbee.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$str = '';\n\t$len = strlen($text);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\tif (in_array($text[$i], $vowels)) {\n\t\
    \t\tcontinue;\n\t\t}\n\t\t$str .= $text[$i];\n\t}\n\treturn $str;\n}\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxib6kqt.php:34\n\
    Stack trace:\n#0 /tmp/tmpwxib6kqt.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwxib6kqt.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$new = str_replace($vowels, \"\", $text);\n\treturn $new;\n\
    }\necho remove_vowels(\"aaeiouAAeiou\");\n\nfunction candidate(...$args) {\n \
    \   return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  // preg_replace is like search replace\n  return preg_replace('/[aeiou]/i',\
    \ '', $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/i', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/i', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  // TODO: implement this function\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawvld7j7.php:22\n\
    Stack trace:\n#0 /tmp/tmpawvld7j7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpawvld7j7.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $regex = '/(?<=\\s)a|A|e|E|i|I|o|O|u|U(?=\\s)/';\n    preg_match_all($regex,\
    \ $text, $result);\n    $text = str_replace($result[0], '', $text);\n    return\
    \ $text;\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hfgq_he.php:25\n\
    Stack trace:\n#0 /tmp/tmp8hfgq_he.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8hfgq_he.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $result = \"\";\n  for ($i = 0; $i < strlen($text); $i++) {\n    if ($text[$i]\
    \ != 'a' && $text[$i] != 'e' && $text[$i] != 'i' && $text[$i] != 'o' && $text[$i]\
    \ != 'u') {\n      $result .= $text[$i];\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamk7rorr.php:32\n\
    Stack trace:\n#0 /tmp/tmpamk7rorr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpamk7rorr.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouAEIOU]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = [\"a\", \"A\", \"e\", \"E\", \"i\", \"I\", \"o\", \"O\", \"u\"\
    , \"U\"];\n\t$text = str_split($text);\n\t$new_text = \"\";\n\tforeach ($text\
    \ as $char) {\n\t\tif (!in_array($char, $vowels)) {\n\t\t\t$new_text .= $char;\n\
    \t\t}\n\t}\n\treturn $new_text;\n}\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  $new_string\
    \ = str_replace($vowels, '', $text);\n  return $new_string;\n}\necho remove_vowels('abcdef');\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: bcdf
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = \"aeiouAEIOU\";\n\t$text = str_split($text);\n\t$text = array_diff($text,\
    \ str_split($vowels));\n\t$text = implode($text);\n\treturn $text;\n}\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    // write your code here\n    $vowels = array(\"a\", \"e\", \"i\", \"\
    o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\");\n    $text = str_replace($vowels,\
    \ \"\", $text);\n    return $text;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $newString = preg_replace('/[aeiou]/i', '', $text);\n    return $newString;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpml079eie.php:26\n\
    Stack trace:\n#0 /tmp/tmpml079eie.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpml079eie.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $new_text = '';\n  for ($i = 0; $i < strlen($text); $i++) {\n    $letter\
    \ = strtolower($text[$i]);\n    if ($letter != 'a' && $letter != 'e' && $letter\
    \ != 'i' && $letter != 'o' && $letter != 'u') {\n      $new_text .= $text[$i];\n\
    \    }\n  }\n  return $new_text;\n}\n\necho remove_vowels('') . PHP_EOL;\necho\
    \ remove_vowels('abcdef') . PHP_EOL;\necho remove_vowels('aaaaa') . PHP_EOL;\n\
    echo remove_vowels('aaBAA') . PHP_EOL;\necho remove_vowels('zbcd') . PHP_EOL;\n\
    \nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nbcdf\n\nB\nzbcd\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  $new_text\
    \ = '';\n  for ($i = 0; $i < strlen($text); $i++) {\n    if (!in_array($text[$i],\
    \ $vowels)) {\n      $new_text .= $text[$i];\n    }\n  }\n  return $new_text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz18bswp3.php:26\n\
    Stack trace:\n#0 /tmp/tmpz18bswp3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz18bswp3.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $letter = \"\";\n  $result = \"\";\n  $vowels = array(\"a\", \"A\", \"\
    e\", \"E\", \"i\", \"I\", \"o\", \"O\", \"u\", \"U\");\n  $letters = str_split($text);\n\
    \  foreach ($letters as $letter) {\n    if (!in_array($letter, $vowels)) {\n \
    \     $result .= $letter;\n    }\n  }\n  return $result;\n}\necho remove_vowels(\"\
    Bryan\");\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Bryn
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a', 'A', 'e', 'E', 'i', 'I', 'o', 'O', 'u', 'U');\n\
    \    $text = str_replace($vowels, '', $text);\n    return $text;\n}\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\treturn str_replace($vowels, \"\", $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text_array = str_split($text);\n    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U');\n    $result = array();\n    foreach ($text_array\
    \ as $value) {\n        if (!in_array($value, $vowels)) {\n            $result[]\
    \ = $value;\n        }\n    }\n    return implode($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n   // $text is a string to be processed\n   // YOUR CODE HERE\n   $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"\
    );\n   $chars = str_split($text);\n   $no_vowels = array();\n   foreach ($chars\
    \ as $char) {\n       if (!in_array($char, $vowels)) {\n           array_push($no_vowels,\
    \ $char);\n       }\n   }\n   return implode($no_vowels);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    $text = str_replace($vowels, '', $text);\n\treturn $text;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    return str_replace($vowels, '', $text);\n}\n\n$str_test = '';\nassert(remove_vowels($str_test)\
    \ == '');\n\n$str_test = 'abcdef';\nassert(remove_vowels($str_test) == 'bcdf');\n\
    \n$str_test = 'aaaaa';\nassert(remove_vowels($str_test) == '');\n\n$str_test =\
    \ 'aaBAA';\nassert(remove_vowels($str_test) == 'B');\n\n$str_test = 'zbcd';\n\
    assert(remove_vowels($str_test) == 'zbcd');\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t// your code here\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76ls6k8r.php:21\n\
    Stack trace:\n#0 /tmp/tmp76ls6k8r.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp76ls6k8r.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiouAEIOU]/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $new_text = \"\";\n  $alphabet = range('a', 'z');\n  $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n  for ($i = 0; $i < strlen($text); $i++) {\n    if (!in_array($text[$i],\
    \ $vowels)) {\n      $new_text .= $text[$i];\n    }\n  }\n  return $new_text;\n\
    }\n\nvar_dump(remove_vowels(''));\nvar_dump(remove_vowels('abcdef'));\nvar_dump(remove_vowels('aaaaa'));\n\
    var_dump(remove_vowels('aaBAA'));\nvar_dump(remove_vowels('zbcd'));\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string(0) \"\"\nstring(4) \"bcdf\"\nstring(0) \"\"\nstring(3) \"BAA\"\n\
    string(4) \"zbcd\"\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuap9q317.php:39\n\
    Stack trace:\n#0 /tmp/tmpuap9q317.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpuap9q317.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6jy4k8g.php:26\n\
    Stack trace:\n#0 /tmp/tmpr6jy4k8g.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpr6jy4k8g.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $pattern = '/[aeiou]/i';\n    return preg_replace($pattern, '', $text);\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n   return str_replace([\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"\
    I\", \"O\", \"U\"], \"\", $text);\n}\necho remove_vowels(\"abcdef\") . \"<br>\"\
    ;\necho remove_vowels(\"aaaaa\") . \"<br>\";\necho remove_vowels(\"aaBAA\") .\
    \ \"<br>\";\necho remove_vowels(\"zbcd\") . \"<br>\";\necho remove_vowels(\"\"\
    ) . \"<br>\";\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: bcdf<br><br>B<br>zbcd<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  return\
    \ str_replace($vowels, '', $text);\n}\n\necho remove_vowels('');\necho '<br>';\n\
    echo remove_vowels('abcdef');\necho '<br>';\necho remove_vowels('aaaaa');\necho\
    \ '<br>';\necho remove_vowels('aaBAA');\necho '<br>';\necho remove_vowels('zbcd');\n\
    echo '<br>';\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>bcdf<br><br>B<br>zbcd<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $text = str_split($text);\n  $vowels = str_split('aeiouAEIOU');\n  $result\
    \ = [];\n  foreach ($text as $letter) {\n    if (!in_array($letter, $vowels))\
    \ {\n      $result[] = $letter;\n    }\n  }\n  return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $result = '';\n    for ($i\
    \ = 0; $i < strlen($text); $i++) {\n        if (!in_array($text[$i], $vowels))\
    \ {\n            $result .= $text[$i];\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpltuuwoip.php:32\n\
    Stack trace:\n#0 /tmp/tmpltuuwoip.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpltuuwoip.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception

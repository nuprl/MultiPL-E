name: HumanEval_57_monotonic
language: php
results:
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    // TODO: Use monotonic function\n    if (count($l) == 1) return true;\n\
    \    $is_increasing = $l[0] < $l[1];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($is_increasing) {\n            if ($l[$i] < $l[$i - 1]) return false;\n\
    \        } else {\n            if ($l[$i] > $l[$i - 1]) return false;\n      \
    \  }\n    }\n    return true;\n}\n\n$input = array(1, 20, 4, 10);\nvar_dump(monotonic($input));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if ($l == null) {\n        return true;\n    }\n    if (count($l) ==\
    \ 1) {\n        return true;\n    }\n    $lcomp = $l;\n    $lcomp[0] = $l[1];\n\
    \    $increasing = false;\n    $increasing = $l[0] < $l[1];\n    $decreasing =\
    \ $l[0] > $l[1];\n    $lcomp[0] = $l[0];\n    $lcomp[1] = $l[1];\n    while ($increasing\
    \ || $decreasing) {\n        $lcomp[0] = $lcomp[1];\n        $lcomp[1] = array_shift($l);\n\
    \        if ($increasing && $lcomp[0] > $lcomp[1]) {\n            return false;\n\
    \        }\n        if ($decreasing && $lcomp[0] < $lcomp[1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphiry25kp.php:40\n\
    Stack trace:\n#0 /tmp/tmphiry25kp.php(50): test()\n#1 {main}\n  thrown in /tmp/tmphiry25kp.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) < 2) return true;\n    if ($l[0] < $l[1]) {\n        for\
    \ ($i = 1; $i < count($l) - 1; $i++) {\n            if ($l[$i] > $l[$i + 1]) return\
    \ false;\n        }\n    } else {\n        for ($i = 1; $i < count($l) - 1; $i++)\
    \ {\n            if ($l[$i] < $l[$i + 1]) return false;\n        }\n    }\n  \
    \  return true;\n}\n\nprint_r(monotonic([4, 1, 0, -10]));\nprint_r(monotonic([1,\
    \ 20, 4, 10]));\nprint_r(monotonic([1, 2, 4, 20]));\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) < 2) {\n        return True;\n    }\n    $diff = $l[1]\
    \ - $l[0];\n    for ($i = 2; $i < count($l); $i++) {\n        if (($l[$i] - $l[$i\
    \ - 1]) * $diff < 0) {\n            return False;\n        }\n    }\n    return\
    \ True;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $inc = True;\n    $dec = True;\n    $i = 1;\n    while ($i < count($l))\
    \ {\n        if ($l[$i] > $l[$i - 1])\n            $dec = False;\n        if ($l[$i]\
    \ < $l[$i - 1])\n            $inc = False;\n        $i += 1;\n    }\n    return\
    \ $inc or $dec;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (empty($l)) {\n        return True;\n    }\n    $op = $l[0] < $l[1]\
    \ ? '<' : '>';\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i]\
    \ == $l[$i + 1]) {\n            continue;\n        }\n        $f = $l[$i] . $op\
    \ . $l[$i + 1];\n        if (!eval(\"return $f;\")) {\n            return False;\n\
    \        }\n    }\n    return True;\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn False;\n\t}\n\tif ($l[0]\
    \ < $l[1]) {\n\t\t$inc = True;\n\t} else if ($l[0] > $l[1]) {\n\t\t$inc = False;\n\
    \t} else {\n\t\treturn False;\n\t}\n\tfor ($i = 1; $i < $len - 1; $i++) {\n\t\t\
    if ($inc && $l[$i] > $l[$i + 1]) {\n\t\t\treturn False;\n\t\t} else if (!$inc\
    \ && $l[$i] < $l[$i + 1]) {\n\t\t\treturn False;\n\t\t}\n\t}\n\treturn True;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_a81ssmu.php:43\n\
    Stack trace:\n#0 /tmp/tmp_a81ssmu.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_a81ssmu.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $inc = true;\n    $dec = true;\n    for ($i = 0; $i < count($l) - 1;\
    \ $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] < $l[$i + 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n$list = [1, 2, 4, 20];\nif (monotonic($list))\
    \ {\n    echo 'True';\n} else {\n    echo 'False';\n}\necho PHP_EOL;\n$list =\
    \ [1, 20, 4, 10];\nif (monotonic($list)) {\n    echo 'True';\n} else {\n    echo\
    \ 'False';\n}\necho PHP_EOL;\n$list = [4, 1, 0, -10];\nif (monotonic($list)) {\n\
    \    echo 'True';\n} else {\n    echo 'False';\n}\necho PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFalse\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$len = count($l);\n\tif ($len === 0) {\n\t\treturn false;\n\t}\n\tif ($len\
    \ === 1) {\n\t\treturn true;\n\t}\n\tif ($l[0] < $l[1]) {\n\t\tfor ($i = 1; $i\
    \ < $len - 1; $i++) {\n\t\t\tif ($l[$i] > $l[$i + 1]) {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t} else {\n\t\tfor ($i = 1; $i < $len - 1; $i++) {\n\t\t\tif\
    \ ($l[$i] < $l[$i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ true;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tif ($i > 0) {\n\t\t\tif ($l[$i]\
    \ < $l[$i - 1]) {\n\t\t\t\treturn False;\n\t\t\t}\n\t\t}\n\t}\n\treturn True;\n\
    }\n\necho monotonic([1, 2, 4, 20]);\necho monotonic([1, 20, 4, 10]);\necho monotonic([4,\
    \ 1, 0, -10]);\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jtvdjuc.php:32\n\
    Stack trace:\n#0 /tmp/tmp7jtvdjuc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7jtvdjuc.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  // your code here\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgccl1k88.php:18\n\
    Stack trace:\n#0 /tmp/tmpgccl1k88.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgccl1k88.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $i = 0;\n    $asc = true;\n    $desc = true;\n    while($i < count($l)-1)\
    \ {\n        if($l[$i] < $l[$i+1]) $desc = false;\n        if($l[$i] > $l[$i+1])\
    \ $asc = false;\n        $i++;\n    }\n    return $asc || $desc;\n}\n\n$l = [1,\
    \ 2, 4, 20];\nif(monotonic($l)) {\n    echo \"True\\n\";\n} else {\n    echo \"\
    False\\n\";\n}\n\n$l = [1, 20, 4, 10];\nif(monotonic($l)) {\n    echo \"True\\\
    n\";\n} else {\n    echo \"False\\n\";\n}\n\n$l = [4, 1, 0, -10];\nif(monotonic($l))\
    \ {\n    echo \"True\\n\";\n} else {\n    echo \"False\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFalse\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$i = 0;\n\t$inc = True;\n\t$dec = True;\n\twhile ($i < count($l)-1 && ($inc\
    \ || $dec)) {\n\t\tif ($l[$i] < $l[$i+1]) {\n\t\t\t$dec = False;\n\t\t} elseif\
    \ ($l[$i] > $l[$i+1]) {\n\t\t\t$inc = False;\n\t\t}\n\t\t$i++;\n\t}\n\treturn\
    \ $inc || $dec;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$s = 0;\n\tfor ($i = 0; $i < count($l) - 1; $i++) {\n\t\tif ($l[$i] !=\
    \ $l[$i + 1]) {\n\t\t\t$c = $l[$i] - $l[$i + 1];\n\t\t\tif ($s * $c < 0) {\n\t\
    \t\t\treturn false;\n\t\t\t}\n\t\t\t$s = $c;\n\t\t}\n\t}\n\treturn true;\n}\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $i = 0;\n  $increase = null;\n  $decrease = null;\n  foreach ($l as $e)\
    \ {\n    if ($increase === null && ($e > $l[$i - 1])) {\n      $increase = true;\n\
    \    }\n    if ($decrease === null && ($e < $l[$i - 1])) {\n      $decrease =\
    \ true;\n    }\n    if ($increase && $decrease) {\n      return false;\n    }\n\
    \    $i++;\n  }\n  return true;\n}\n\nvar_dump(monotonic([1, 2, 4, 20]));\nvar_dump(monotonic([1,\
    \ 20, 4, 10]));\nvar_dump(monotonic([4, 1, 0, -10]));\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(false)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpd0g7x8p7.php:39\nStack trace:\n#0 /tmp/tmpd0g7x8p7.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpd0g7x8p7.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $isIncreasing = $isDecreasing = true;\n  for ($i = 0; $i < count($l) -\
    \ 1; $i++) {\n    if ($l[$i] > $l[$i + 1]) {\n      $isIncreasing = false;\n \
    \   }\n    if ($l[$i] < $l[$i + 1]) {\n      $isDecreasing = false;\n    }\n \
    \ }\n  return $isIncreasing || $isDecreasing;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $inc = true;\n  $dec = true;\n  for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n    if ($l[$i] > $l[$i + 1]) {\n      $inc = false;\n    }\n    if ($l[$i]\
    \ < $l[$i + 1]) {\n      $dec = false;\n    }\n  }\n  return $inc || $dec;\n}\n\
    \n$test1 = [1, 2, 4, 20];\n$test2 = [1, 20, 4, 10];\n$test3 = [4, 1, 0, -10];\n\
    \necho monotonic($test1) . PHP_EOL;\necho monotonic($test2) . PHP_EOL;\necho monotonic($test3)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $is_increasing = $is_decreasing = true;\n    for ($i = 0; $i < count($l)\
    \ - 1; $i++) {\n        if ($l[$i] < $l[$i + 1]) $is_decreasing = false;\n   \
    \     if ($l[$i] > $l[$i + 1]) $is_increasing = false;\n    }\n    return $is_increasing\
    \ || $is_decreasing;\n}\n\nprint_r(monotonic([1, 2, 4, 20])); // true\nprint_r(monotonic([1,\
    \ 20, 4, 10])); // false\nprint_r(monotonic([4, 1, 0, -10])); // true\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$inc = 0;\n\t$dec = 0;\n\t$c = count($l);\n\tif ($c > 1) {\n\t\tfor ($i\
    \ = 0; $i < $c-1; $i++) {\n\t\t\tif ($l[$i] < $l[$i+1]) {\n\t\t\t\t$inc++;\n\t\
    \t\t} elseif ($l[$i] > $l[$i+1]) {\n\t\t\t\t$dec++;\n\t\t\t}\n\t\t}\n\t}\n\tif\
    \ ($inc == $c-1 || $dec == $c-1) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvx4s1s5t.php:38\n\
    Stack trace:\n#0 /tmp/tmpvx4s1s5t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpvx4s1s5t.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $n = count($l);\n  $inc = true;\n  $dec = true;\n  for ($i = 1; $i < $n;\
    \ $i++) {\n    if ($l[$i] < $l[$i - 1]) {\n      $inc = false;\n    }\n    if\
    \ ($l[$i] > $l[$i - 1]) {\n      $dec = false;\n    }\n  }\n  return $inc || $dec;\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$is_monotonic = true;\n\tif (sizeof($l) < 2) {\n\t\treturn $is_monotonic;\n\
    \t}\n\t$sign = $l[1] - $l[0];\n\tfor ($i = 2; $i < sizeof($l); $i++) {\n\t\tif\
    \ ($sign * ($l[$i] - $l[$i - 1]) < 0) {\n\t\t\t$is_monotonic = false;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn $is_monotonic;\n}\n\n$a = array(1, 2, 4, 20);\necho\
    \ monotonic($a);\necho \"\\n\";\n$a = array(1, 20, 4, 10);\necho monotonic($a);\n\
    echo \"\\n\";\n$a = array(4, 1, 0, -10);\necho monotonic($a);\necho \"\\n\";\n\
    $a = array(4, 1, -10);\necho monotonic($a);\necho \"\\n\";\n$a = array(4, 1);\n\
    echo monotonic($a);\necho \"\\n\";\n$a = array(4);\necho monotonic($a);\necho\
    \ \"\\n\";\n$a = array();\necho monotonic($a);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n1\n1\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_map(\n        function($x) { return (int)$x; },\n        $l\n\
    \    );\n    $direction = 0;\n    for ($i = 1; $i < count($l); $i++) {\n     \
    \   if ($l[$i] - $l[$i - 1] > 0) {\n            if ($direction < 0) {\n      \
    \          return false;\n            }\n            $direction = 1;\n       \
    \ } elseif ($l[$i] - $l[$i - 1] < 0) {\n            if ($direction > 0) {\n  \
    \              return false;\n            }\n            $direction = -1;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $flag = null;\n  for ($i = 0; $i < count($l) - 1; $i++) {\n    if ($l[$i]\
    \ == $l[$i + 1]) continue;\n    if ($flag === null) $flag = $l[$i] < $l[$i + 1];\n\
    \    if ($flag != ($l[$i] < $l[$i + 1])) return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $i = 0;\n    $j = 1;\n    $k = count($l);\n    $p = true;\n    while\
    \ ($i < $k) {\n        if ($j < $k) {\n            if ($l[$i] < $l[$j]) {\n  \
    \              $p = true;\n            } elseif ($l[$i] > $l[$j]) {\n        \
    \        $p = false;\n            }\n            $i++;\n            $j++;\n  \
    \      } else {\n            break;\n        }\n    }\n    return $p;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9mqdoksv.php:37\n\
    Stack trace:\n#0 /tmp/tmp9mqdoksv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9mqdoksv.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  if ($l) {\n    $inc = true;\n    $dec = true;\n    $last = $l[0];\n   \
    \ for ($i = 1; $i < count($l); $i++) {\n      if ($l[$i] < $last) {\n        $inc\
    \ = false;\n      }\n      if ($l[$i] > $last) {\n        $dec = false;\n    \
    \  }\n      $last = $l[$i];\n    }\n    return $inc || $dec;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  if (count($l) <= 1) {\n    return True;\n  }\n  $increasing = ($l[0] <=\
    \ $l[1]);\n  for ($i = 0; $i < count($l) - 1; $i++) {\n    if (($l[$i] <= $l[$i\
    \ + 1]) != $increasing) {\n      return False;\n    }\n  }\n  return True;\n}\n\
    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf7w0ayd.php:31\n\
    Stack trace:\n#0 /tmp/tmpmf7w0ayd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmf7w0ayd.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) <= 1) {\n        return true;\n    }\n    else {\n    \
    \    $i = 1;\n        $prev = $l[0];\n        $asc = false;\n        $desc = false;\n\
    \        while ($i < count($l)) {\n            if ($l[$i] > $prev) {\n       \
    \         $asc = true;\n            }\n            else if ($l[$i] < $prev) {\n\
    \                $desc = true;\n            }\n            if ($asc && $desc)\
    \ {\n                return false;\n            }\n            $prev = $l[$i];\n\
    \            $i++;\n        }\n        return true;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $result = true;\n    if (count($l) <= 1) {\n        return $result;\n\
    \    }\n    // TODO: Implement Me!\n    $prev = $l[0];\n    $increase = null;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($increase == null) {\n\
    \            if ($l[$i] > $prev) {\n                $increase = true;\n      \
    \      } elseif ($l[$i] < $prev) {\n                $increase = false;\n     \
    \       }\n        } else {\n            if ($increase == true && $l[$i] < $prev)\
    \ {\n                $result = false;\n                break;\n            } elseif\
    \ ($increase == false && $l[$i] > $prev) {\n                $result = false;\n\
    \                break;\n            }\n        }\n        $prev = $l[$i];\n \
    \   }\n    return $result;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $inc = True;\n    $dec = True;\n    $last = count($l) - 1;\n    for ($i\
    \ = 0; $i < $last; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n            $inc\
    \ = False;\n        }\n        if ($l[$i] < $l[$i + 1]) {\n            $dec =\
    \ False;\n        }\n    }\n    return $inc || $dec;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $asc = $desc = true;\n    $len = count($l);\n    for ($i = 0; $i < $len\
    \ - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n            $asc = false;\n\
    \        }\n        if ($l[$i] < $l[$i + 1]) {\n            $desc = false;\n \
    \       }\n    }\n    return $asc || $desc;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $t = true;\n    if (is_array($l)) {\n        for ($i = 0; $i < count($l)\
    \ - 1; $i++) {\n            if (($l[$i] < $l[$i + 1]) || ($l[$i] > $l[$i + 1]))\
    \ {\n                $t = true;\n            } else {\n                $t = false;\n\
    \                break;\n            }\n        }\n    }\n    return $t;\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppc7efd_3.php:31\n\
    Stack trace:\n#0 /tmp/tmppc7efd_3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppc7efd_3.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) <= 1) {\n        return true;\n    }\n    else {\n    \
    \    if ($l[0] < $l[1]) {\n            if (monotonic(array_slice($l, 1))) {\n\
    \                return true;\n            }\n            else {\n           \
    \     return false;\n            }\n        }\n        else if ($l[0] > $l[1])\
    \ {\n            if (monotonic(array_slice($l, 1))) {\n                return\
    \ true;\n            }\n            else {\n                return false;\n  \
    \          }\n        }\n        else {\n            return monotonic(array_slice($l,\
    \ 1));\n        }\n    }\n}\n\n$l = [1, 2, 4, 20];\nprint monotonic($l);\nprint\
    \ \"\\n\";\n$l = [1, 20, 4, 10];\nprint monotonic($l);\nprint \"\\n\";\n$l = [4,\
    \ 1, 0, -10];\nprint monotonic($l);\nprint \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpszoabzlx.php:52\n\
    Stack trace:\n#0 /tmp/tmpszoabzlx.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpszoabzlx.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if(!is_array($l)) {\n        return false;\n    }\n    $x = $l[0];\n\
    \    $s = 0;\n    for($i = 1; $i < count($l); $i++) {\n        if($x == $l[$i])\
    \ {\n            continue;\n        }\n        if($s != 0 && $s != ($l[$i] - $x)\
    \ / abs($l[$i] - $x)) {\n            return false;\n        }\n        $s = ($l[$i]\
    \ - $x) / abs($l[$i] - $x);\n        $x = $l[$i];\n    }\n    return true;\n}\n\
    \nif(!empty($_POST['l'])) {\n    echo monotonic($_POST['l']);\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $len = count($l);\n  if ($len == 1) {\n    return true;\n  }\n  if ($len\
    \ == 2) {\n    return $l[0] == $l[1] || abs($l[0] - $l[1]) == 1;\n  }\n  $diff\
    \ = $l[1] - $l[0];\n  for ($i = 1; $i < $len; $i++) {\n    if (($l[$i] - $l[$i\
    \ - 1]) != $diff) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps02tg4wn.php:31\n\
    Stack trace:\n#0 /tmp/tmps02tg4wn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmps02tg4wn.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $n = count($l);\n    $increasing = false;\n    $decreasing = false;\n\
    \    for ($i = 0; $i < $n - 1; $i++) {\n        if ($l[$i] < $l[$i + 1]) {\n \
    \           $increasing = true;\n        }\n        if ($l[$i] > $l[$i + 1]) {\n\
    \            $decreasing = true;\n        }\n    }\n    return $increasing &&\
    \ !$decreasing || $decreasing && !$increasing;\n}\n\n$l = [1, 2, 4, 20];\nvar_dump(monotonic($l));\n\
    \n$l = [1, 20, 4, 10];\nvar_dump(monotonic($l));\n\n$l = [4, 1, 0, -10];\nvar_dump(monotonic($l));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp1frt7vj9.php:44\nStack trace:\n#0 /tmp/tmp1frt7vj9.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1frt7vj9.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $o = null;\n  $p = null;\n  foreach ($l as $v) {\n    if ($o !== null)\
    \ {\n      if ($o > $v) {\n        if ($p !== null && $p < $v) {\n          return\
    \ false;\n        }\n        $p = $v;\n      } else if ($o < $v) {\n        if\
    \ ($p !== null && $p > $v) {\n          return false;\n        }\n        $p =\
    \ $v;\n      }\n    }\n    $o = $v;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpty5dav6b.php:38\n\
    Stack trace:\n#0 /tmp/tmpty5dav6b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpty5dav6b.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n   $sign = 0;\n   for ($i = 0; $i < count($l); $i++) {\n      $v = $l[$i];\n\
    \      $n = $l[$i + 1];\n      if ($n != 0) {\n         $nSign = $v / $n;\n  \
    \       if ($sign == 0) {\n            $sign = $nSign;\n         } else {\n  \
    \          if ($sign != $nSign) {\n               return false;\n            }\n\
    \         }\n      }\n   }\n   return true;\n}\n\nvar_dump(monotonic([1, 2, 4,\
    \ 20]));\nvar_dump(monotonic([1, 20, 4, 10]));\nvar_dump(monotonic([4, 1, 0, -10]));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(false)\nbool(false)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpizgaw3ce.php:36\nStack trace:\n#0 /tmp/tmpizgaw3ce.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpizgaw3ce.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$asc = $l[0] <= $l[1];\n\tfor ($i = 1; $i < count($l) - 1; $i++) {\n\t\t\
    if ($asc && $l[$i] > $l[$i + 1]) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!$asc\
    \ && $l[$i] < $l[$i + 1]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\tif (count($l) <= 1) return true;\n\t$d = array_diff($l);\n\tforeach ($d\
    \ as $i => $x) {\n\t\tif ($x > 0) {\n\t\t\tforeach ($d as $j => $y) {\n\t\t\t\t\
    if ($j > $i) {\n\t\t\t\t\tif ($y < 0) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\
    return true;\n\t\t}\n\t\tif ($x < 0) {\n\t\t\tforeach ($d as $j => $y) {\n\t\t\
    \t\tif ($j > $i) {\n\t\t\t\t\tif ($y > 0) return false;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t\treturn true;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_diff(): at least 2 parameters are required, 1 given in\
    \ /tmp/tmpwqoez32b.php on line 11\n\nWarning: Invalid argument supplied for foreach()\
    \ in /tmp/tmpwqoez32b.php on line 12\n\nWarning: array_diff(): at least 2 parameters\
    \ are required, 1 given in /tmp/tmpwqoez32b.php on line 11\n\nWarning: Invalid\
    \ argument supplied for foreach() in /tmp/tmpwqoez32b.php on line 12\n\nWarning:\
    \ array_diff(): at least 2 parameters are required, 1 given in /tmp/tmpwqoez32b.php\
    \ on line 11\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpwqoez32b.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqoez32b.php:40\n\
    Stack trace:\n#0 /tmp/tmpwqoez32b.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpwqoez32b.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\tif (empty($l))\n\t\treturn True;\n\t$x = array_shift($l);\n\twhile (!empty($l))\
    \ {\n\t\t$y = array_shift($l);\n\t\tif ($x > $y) {\n\t\t\treturn all_dec($l, $y);\n\
    \t\t} elseif ($x < $y) {\n\t\t\treturn all_inc($l, $y);\n\t\t}\n\t\t$x = $y;\n\
    \t}\n\treturn True;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function all_inc() in\
    \ /tmp/tmp68og4kk3.php:18\nStack trace:\n#0 /tmp/tmp68og4kk3.php(26): monotonic(Array)\n\
    #1 /tmp/tmp68og4kk3.php(30): candidate(Array)\n#2 /tmp/tmp68og4kk3.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmp68og4kk3.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $ascending = $descending = True;\n  for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n    if ($l[$i] >= $l[$i + 1]) {\n      $ascending = False;\n    }\n    if\
    \ ($l[$i] <= $l[$i + 1]) {\n      $descending = False;\n    }\n  }\n  return $ascending\
    \ || $descending;\n}\n\necho monotonic([1, 2, 4, 20]);\necho monotonic([1, 20,\
    \ 4, 10]);\necho monotonic([4, 1, 0, -10]);\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_fti250.php:34\n\
    Stack trace:\n#0 /tmp/tmp8_fti250.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8_fti250.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $count = count($l);\n    if ($count < 2) return true;\n    for ($i =\
    \ 1; $i < $count; $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            if\
    \ ($l[$i - 1] - $l[$i] > 1) return false;\n        } else if ($l[$i] > $l[$i -\
    \ 1]) {\n            if ($l[$i] - $l[$i - 1] > 1) return false;\n        }\n \
    \   }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvjyzjx8v.php:27\n\
    Stack trace:\n#0 /tmp/tmpvjyzjx8v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvjyzjx8v.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $out = True;\n    for ($i = 0; $i < sizeof($l) - 1; $i++) {\n       \
    \ if (($l[$i] < $l[$i + 1]) && ($l[$i + 1] < $l[$i + 2])) {\n            $out\
    \ = False;\n        }\n        if (($l[$i] > $l[$i + 1]) && ($l[$i + 1] > $l[$i\
    \ + 2])) {\n            $out = False;\n        }\n    }\n    return $out;\n}\n\
    \n$tests = array(\n    array(1,2,4,20),\n    array(1,20,4,10),\n    array(4,1,0,-10),\n\
    );\n\nforeach ($tests as $test) {\n    echo implode(',', $test);\n    echo \"\
    : \";\n    echo monotonic($test);\n    echo \"\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1,2,4,20: \n1,20,4,10: 1\n4,1,0,-10: \n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp1tkxhznr.php:39\nStack trace:\n#0 /tmp/tmp1tkxhznr.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1tkxhznr.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $p = True;\n    $np = True;\n    for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n        if ($l[$i] > $l[$i + 1]) {\n            $p = False;\n        }\n\
    \        if ($l[$i] < $l[$i + 1]) {\n            $np = False;\n        }\n   \
    \ }\n    return $p || $np;\n}\necho monotonic([1, 2, 4, 20]) . PHP_EOL;\necho\
    \ monotonic([1, 20, 4, 10]) . PHP_EOL;\necho monotonic([4, 1, 0, -10]) . PHP_EOL;\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$count = count($l);\n\t$i = 0;\n\t$increasing = true;\n\twhile ($i < $count\
    \ - 1) {\n\t\tif ($l[$i + 1] < $l[$i]) {\n\t\t\t$increasing = false;\n\t\t\tbreak;\n\
    \t\t}\n\t\t$i++;\n\t}\n\tif ($increasing) {\n\t\treturn true;\n\t}\n\n\t$i = 0;\n\
    \t$decreasing = true;\n\twhile ($i < $count - 1) {\n\t\tif ($l[$i + 1] > $l[$i])\
    \ {\n\t\t\t$decreasing = false;\n\t\t\tbreak;\n\t\t}\n\t\t$i++;\n\t}\n\tif ($decreasing)\
    \ {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$monotonic = False;\n\t$i = 0;\n\t$n = count($l);\n\twhile (($i < $n -\
    \ 1) && ($monotonic == False)) {\n\t\tif ($l[$i] < $l[$i + 1]) {\n\t\t\t$mode\
    \ = 1;\n\t\t\t$i = $i + 1;\n\t\t\twhile (($i < $n - 1) && ($monotonic == False))\
    \ {\n\t\t\t\tif ($l[$i] < $l[$i + 1]) {\n\t\t\t\t\t$i = $i + 1;\n\t\t\t\t} else\
    \ {\n\t\t\t\t\t$monotonic = False;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$monotonic = True;\n\
    \t\t} else if ($l[$i] > $l[$i + 1]) {\n\t\t\t$mode = -1;\n\t\t\t$i = $i + 1;\n\
    \t\t\twhile (($i < $n - 1) && ($monotonic == False)) {\n\t\t\t\tif ($l[$i] > $l[$i\
    \ + 1]) {\n\t\t\t\t\t$i = $i + 1;\n\t\t\t\t} else {\n\t\t\t\t\t$monotonic = False;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\t$monotonic = True;\n\t\t} else {\n\t\t\t$monotonic =\
    \ False;\n\t\t}\n\t}\n\treturn $monotonic;\n}\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $n = count($l);\n  if ($n <= 1) {\n    return true;\n  }\n  $i = 1;\n \
    \ while ($i < $n && $l[$i] == $l[$i - 1]) {\n    $i++;\n  }\n  if ($i == $n) {\n\
    \    return true;\n  }\n  $is_increasing = $l[$i] > $l[$i - 1];\n  for ($i++;\
    \ $i < $n; $i++) {\n    if ($is_increasing && $l[$i] < $l[$i - 1]) {\n      return\
    \ false;\n    }\n    if (!$is_increasing && $l[$i] > $l[$i - 1]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\necho monotonic([1, 2, 4, 20]) ? 'true'\
    \ : 'false'; // true\necho monotonic([1, 20, 4, 10]) ? 'true' : 'false'; // false\n\
    echo monotonic([4, 1, 0, -10]) ? 'true' : 'false'; // true\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: truefalsetrue
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $count = count($l);\n  $result = false;\n  $is_increasing = $l[0] < $l[1];\n\
    \  $is_decreasing = $l[0] > $l[1];\n  for ($i = 0; $i < $count - 1; $i++) {\n\
    \    if ($is_increasing && $l[$i] > $l[$i + 1]) {\n      $is_increasing = false;\n\
    \    }\n    if ($is_decreasing && $l[$i] < $l[$i + 1]) {\n      $is_decreasing\
    \ = false;\n    }\n  }\n  if ($is_increasing || $is_decreasing) {\n    $result\
    \ = true;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wow2fhz.php:40\n\
    Stack trace:\n#0 /tmp/tmp4wow2fhz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4wow2fhz.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  if (sizeof($l) == 1) return true;\n  if (sizeof($l) == 2) return ($l[0]\
    \ <= $l[1]);\n  if ($l[0] < $l[1]) {\n    for ($i = 1; $i < sizeof($l) - 1; $i++)\
    \ {\n      if ($l[$i] > $l[$i + 1]) {\n        return false;\n      }\n    }\n\
    \  } else {\n    for ($i = 1; $i < sizeof($l) - 1; $i++) {\n      if ($l[$i] <\
    \ $l[$i + 1]) {\n        return false;\n      }\n    }\n  }\n  return true;\n\
    }\n\n$l = [1, 2, 4, 20];\nprint(monotonic($l));\n\n$l = [1, 20, 4, 10];\nprint(monotonic($l));\n\
    \n$l = [4, 1, 0, -10];\nprint(monotonic($l));\n\n$l = [1, 2, 1, 1];\nprint(monotonic($l));\n\
    \n$l = [1, 1, 1, 1];\nprint(monotonic($l));\n\n$l = [1, 2, 3, 4];\nprint(monotonic($l));\n\
    \n$l = [4, 3, 2, 1];\nprint(monotonic($l));\n\n$l = [1];\nprint(monotonic($l));\n\
    \n$l = [1, 2];\nprint(monotonic($l));\n\n$l = [2, 1];\nprint(monotonic($l));\n\
    \n$l = [];\nprint(monotonic($l));\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11111111'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $n = count($l);\n    $increasing = false;\n    $decreasing = false;\n\
    \    for ($i = 0; $i < $n-1; $i++) {\n        if ($l[$i] < $l[$i+1]) {\n     \
    \       $increasing = true;\n        }\n        if ($l[$i] > $l[$i+1]) {\n   \
    \         $decreasing = true;\n        }\n    }\n    return $increasing && !$decreasing\
    \ || $decreasing && !$increasing;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8xnodr2.php:36\n\
    Stack trace:\n#0 /tmp/tmpn8xnodr2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn8xnodr2.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  \t$n = count($l);\n  \tif ($n <= 1) return true;\n  \t$is_increasing =\
    \ $l[1] > $l[0];\n  \tfor ($i = 1; $i < $n; $i++) {\n    \tif ($is_increasing)\
    \ {\n      \t\tif ($l[$i] < $l[$i - 1]) return false;\n    \t} else {\n      \t\
    \tif ($l[$i] > $l[$i - 1]) return false;\n    \t}\n  \t}\n  \treturn true;\n}\n\
    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\tif(empty($l)) {\n\t\treturn true;\n\t}\n\t\n\t$is_increasing = ($l[0] <=\
    \ $l[1]);\n\t$result = true;\n\tfor($i = 1; $i < count($l) - 1; $i++) {\n\t\t\
    if($is_increasing) {\n\t\t\tif($l[$i] > $l[$i + 1]) {\n\t\t\t\t$result = false;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tif($l[$i] < $l[$i + 1]) {\n\t\t\t\
    \t$result = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $c = count($l);\n    if ($c < 2) {\n        return True;\n    }\n   \
    \ $a = $l[0];\n    $b = $l[1];\n    if ($a == $b) {\n        return monotonic(array_slice($l,\
    \ 1));\n    }\n    $i = ($a < $b) ? 1 : -1;\n    foreach ($l as $x) {\n      \
    \  if (($a + $i) != $x) {\n            return False;\n        }\n        $a =\
    \ $x;\n    }\n    return True;\n}\n$l = [4, 1, 0, -10];\nvar_dump(monotonic($l));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg049vtld.php:35\n\
    Stack trace:\n#0 /tmp/tmpg049vtld.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg049vtld.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$count = count($l);\n\tif($count<2) return true;\n\t$d = $l[1] - $l[0];\n\
    \tfor($i=1; $i<$count; $i++) {\n\t\tif(($l[$i] - $l[$i-1]) * $d < 0) return false;\n\
    \t}\n\treturn true;\n}\n$l = array(1, 2, 4, 20);\necho monotonic($l) ? \"True\\\
    n\" : \"False\\n\";\n$l = array(1, 20, 4, 10);\necho monotonic($l) ? \"True\\\
    n\" : \"False\\n\";\n$l = array(4, 1, 0, -10);\necho monotonic($l) ? \"True\\\
    n\" : \"False\\n\";\n$l = array(1);\necho monotonic($l) ? \"True\\n\" : \"False\\\
    n\";\n$l = array();\necho monotonic($l) ? \"True\\n\" : \"False\\n\";\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFalse\nTrue\nTrue\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$rising = $falling = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\t\
    if ($l[$i] < $l[$i - 1]) {\n\t\t\t$rising = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i\
    \ - 1]) {\n\t\t\t$falling = false;\n\t\t}\n\t}\n\treturn $rising || $falling;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) < 3) {\n        return True;\n    }\n    $i = 1;\n    $n\
    \ = count($l);\n    $mult = ($l[1] - $l[0]) < 0 ? -1 : 1;\n    while ($i < $n)\
    \ {\n        if (($l[$i] - $l[$i - 1]) * $mult < 0) {\n            return False;\n\
    \        }\n        $i++;\n    }\n    return True;\n}\n$l = [1, 2, 4, 20];\nprint_r(monotonic($l));\n\
    echo \"\\n\";\n$l = [1, 20, 4, 10];\nprint_r(monotonic($l));\necho \"\\n\";\n\
    $l = [4, 1, 0, -10];\nprint_r(monotonic($l));\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  return false;\n}\n\nif (!assert('monotonic([1, 2, 4, 20])')) echo \"ERROR\\\
    n\";\nif (!assert('monotonic([1, 20, 4, 10])', false)) echo \"ERROR\\n\";\nif\
    \ (!assert('monotonic([4, 1, 0, -10])')) echo \"ERROR\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): Assertion \"monotonic([1, 2, 4, 20])\" failed in /tmp/tmp_5jh3goy.php\
    \ on line 13\nERROR\n\nWarning: assert(): : \"monotonic([1, 20, 4, 10])\" failed\
    \ in /tmp/tmp_5jh3goy.php on line 14\nERROR\n\nWarning: assert(): Assertion \"\
    monotonic([4, 1, 0, -10])\" failed in /tmp/tmp_5jh3goy.php on line 15\nERROR\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_5jh3goy.php:22\nStack\
    \ trace:\n#0 /tmp/tmp_5jh3goy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_5jh3goy.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $len = count($l);\n    $mono = True;\n    $c = 0;\n    $diff = $l[1]\
    \ - $l[0];\n    for ($i = 1; $i < $len; $i++) {\n        if ($c == 0) {\n    \
    \        if ($l[$i] > $l[$i - 1]) {\n                $c = 1;\n            } elseif\
    \ ($l[$i] < $l[$i - 1]) {\n                $c = -1;\n            }\n        }\
    \ else {\n            if ($l[$i] > $l[$i - 1] && $c == -1) {\n               \
    \ $mono = False;\n                break;\n            } elseif ($l[$i] < $l[$i\
    \ - 1] && $c == 1) {\n                $mono = False;\n                break;\n\
    \            }\n        }\n    }\n    return $mono;\n}\n\n$l = array(1, 2, 4,\
    \ 20);\nvar_dump(monotonic($l));\n\n$l = array(1, 20, 4, 10);\nvar_dump(monotonic($l));\n\
    \n$l = array(4, 1, 0, -10);\nvar_dump(monotonic($l));\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $result = 0;\n    $len = count($l);\n    for ($i = 0; $i < $len - 1;\
    \ $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n            $result += 1;\n   \
    \     } elseif ($l[$i] < $l[$i + 1]) {\n            $result -= 1;\n        }\n\
    \    }\n    return $result == $len - 1 || $result == 1 - $len;\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ky_ta0d.php:30\n\
    Stack trace:\n#0 /tmp/tmp7ky_ta0d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7ky_ta0d.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $t = [];\n    for ($i = 0; $i < count($l); $i++) {\n        $s = $l[$i]\
    \ - $l[$i - 1];\n        $t[] = $s;\n    }\n    $out = [];\n    for ($i = 0; $i\
    \ < count($t); $i++) {\n        if ($t[$i] != 0) {\n            $out[] = $t[$i];\n\
    \        }\n    }\n    $out[] = $t[count($t) - 1];\n    $c = array_count_values($out);\n\
    \    if (count($c) <= 1) {\n        return True;\n    } else {\n        return\
    \ False;\n    }\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeq90pzjb.php:34\n\
    Stack trace:\n#0 /tmp/tmpeq90pzjb.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpeq90pzjb.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $length = count($l);\n    if ($length <= 1) {\n        return True;\n\
    \    }\n    else {\n        $diff = $l[1] - $l[0];\n        if ($diff == 0) {\n\
    \            return False;\n        }\n        else {\n            $sign = $diff\
    \ / abs($diff);\n            $test = True;\n            for ($i = 1; $i < $length\
    \ - 1; $i++) {\n                $diff = $l[$i + 1] - $l[$i];\n               \
    \ if ($diff == 0 || $sign * $diff < 0) {\n                    $test = False;\n\
    \                    break;\n                }\n            }\n            return\
    \ $test;\n        }\n    }\n}\n\nprint_r(monotonic([4, 1, 0, -10]));\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4k6owt0j.php:44\n\
    Stack trace:\n#0 /tmp/tmp4k6owt0j.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp4k6owt0j.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$isAsc = isAsc($l);\n\t$isDesc = isDesc($l);\n\t\n\treturn $isAsc || $isDesc;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isAsc() in /tmp/tmpt_w65ee3.php:10\n\
    Stack trace:\n#0 /tmp/tmpt_w65ee3.php(17): monotonic(Array)\n#1 /tmp/tmpt_w65ee3.php(21):\
    \ candidate(Array)\n#2 /tmp/tmpt_w65ee3.php(31): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpt_w65ee3.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) < 2) return true;\n    return $l[0] < $l[1]\n        ?\
    \ array_reduce(array_slice($l, 1), function($carry, $item) { return $carry &&\
    \ $item > $carry; })\n        : array_reduce(array_slice($l, 1), function($carry,\
    \ $item) { return $carry && $item < $carry; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_r8am8w.php:21\n\
    Stack trace:\n#0 /tmp/tmpf_r8am8w.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpf_r8am8w.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$flag = 0;\n\t$len = count($l);\n\tfor ($i = 0; $i < $len - 1; $i++) {\n\
    \t\tif ($l[$i] > $l[$i + 1]) {\n\t\t\tif ($flag == 0) {\n\t\t\t\t$flag = -1;\n\
    \t\t\t} elseif ($flag == 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} elseif ($l[$i]\
    \ < $l[$i + 1]) {\n\t\t\tif ($flag == 0) {\n\t\t\t\t$flag = 1;\n\t\t\t} elseif\
    \ ($flag == -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $prev = $l[0];\n    $flag = false;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $prev) {\n            if ($flag) {\n         \
    \       return false;\n            }\n        } elseif ($l[$i] < $prev) {\n  \
    \          if (!$flag) {\n                $flag = true;\n            }\n     \
    \   }\n        $prev = $l[$i];\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $is_increasing = false;\n    $is_decreasing = false;\n    for ($i = 0;\
    \ $i < count($l) - 1; $i++) {\n        if ($l[$i] < $l[$i + 1]) {\n          \
    \  $is_increasing = true;\n        }\n        if ($l[$i] > $l[$i + 1]) {\n   \
    \         $is_decreasing = true;\n        }\n    }\n    return $is_increasing\
    \ ^ $is_decreasing;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0onj0xoi.php:28\n\
    Stack trace:\n#0 /tmp/tmp0onj0xoi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0onj0xoi.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if(count($l) <= 1) return true;\n    if($l[0] <= $l[1]) {\n        $incr\
    \ = true;\n    } elseif($l[0] >= $l[1]) {\n        $incr = false;\n    } else\
    \ {\n        return false;\n    }\n    for($i = 1; $i < count($l) - 1; $i++) {\n\
    \        if($incr && $l[$i] > $l[$i + 1]) {\n            return false;\n     \
    \   } elseif(!$incr && $l[$i] < $l[$i + 1]) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\necho monotonic([4, 1, 0, -10]) ? \"true\"\
    \ : \"false\";\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 'true'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) < 2) return true;\n    $first = $l[0];\n    $flag = ($l[1]\
    \ - $first);\n    $increase = (bool) $flag;\n    $decrease = !$increase;\n   \
    \ for ($i = 1; $i < count($l); $i++) {\n        $n = $l[$i];\n        if ($increase\
    \ && $n < $first) return false;\n        if ($decrease && $n > $first) return\
    \ false;\n        $first = $n;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6tl8sal.php:32\n\
    Stack trace:\n#0 /tmp/tmpa6tl8sal.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa6tl8sal.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $increasing = False;\n  $decreasing = False;\n  $prev = -INF;\n  foreach\
    \ ($l as $x) {\n    if ($x > $prev) {\n      $increasing = True;\n    } else if\
    \ ($x < $prev) {\n      $decreasing = True;\n    }\n    if ($increasing and $decreasing)\
    \ {\n      return False;\n    }\n    $prev = $x;\n  }\n  return True;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp662e2lrp.php:35\n\
    Stack trace:\n#0 /tmp/tmp662e2lrp.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp662e2lrp.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) < 2) {\n        return True;\n    }\n    for ($i = 1; $i\
    \ < count($l); $i++) {\n        if ($l[$i] == $l[$i - 1]) {\n            continue;\n\
    \        }\n        if ($l[$i] > $l[$i - 1]) {\n            $increasing = True;\n\
    \            $decreasing = False;\n        } else {\n            $increasing =\
    \ False;\n            $decreasing = True;\n        }\n        break;\n    }\n\
    \    for ($i = 2; $i < count($l); $i++) {\n        if ($l[$i] == $l[$i - 1]) {\n\
    \            continue;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n      \
    \      if ($decreasing) {\n                return False;\n            }\n    \
    \    } else {\n            if ($increasing) {\n                return False;\n\
    \            }\n        }\n    }\n    return True;\n}\n\n$l = [1, 2, 4, 20];\n\
    $result = monotonic($l);\nvar_dump($result);\n\n$l = [1, 20, 4, 10];\n$result\
    \ = monotonic($l);\nvar_dump($result);\n\n$l = [4, 1, 0, -10];\n$result = monotonic($l);\n\
    var_dump($result);\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if(count($l) <= 1) return True;\n    $dir = $l[1] - $l[0];\n    $n =\
    \ count($l);\n    for($i = 2; $i < $n; $i++) {\n        if($dir < 0) {\n     \
    \       if($l[$i] > $l[$i - 1]) return False;\n        } else {\n            if($l[$i]\
    \ < $l[$i - 1]) return False;\n        }\n    }\n    return True;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $current = 0;\n    for ($i = 0; $i < count($l); $i++) {\n        if ($i\
    \ == 0) {\n            $current = $l[$i];\n        } else {\n            if ($l[$i]\
    \ > $current) {\n                $ascending = true;\n            } elseif ($l[$i]\
    \ < $current) {\n                $descending = true;\n            }\n        \
    \    $current = $l[$i];\n        }\n    }\n    if ($ascending == true && $descending\
    \ == true) {\n        return false;\n    } else {\n        return true;\n    }\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\tif(isIncreasing($l)) {\n\t\treturn true;\n\t}\n\tif(isDecreasing($l)) {\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isIncreasing()\
    \ in /tmp/tmpyjg9lw16.php:10\nStack trace:\n#0 /tmp/tmpyjg9lw16.php(20): monotonic(Array)\n\
    #1 /tmp/tmpyjg9lw16.php(24): candidate(Array)\n#2 /tmp/tmpyjg9lw16.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyjg9lw16.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $countPositive = 0;\n    $countNegative = 0;\n    $countEqual = 0;\n\
    \    $count = count($l);\n    for ($i = 0; $i < $count - 1; $i++) {\n        if\
    \ ($l[$i] < $l[$i + 1]) {\n            $countPositive++;\n        } elseif ($l[$i]\
    \ > $l[$i + 1]) {\n            $countNegative++;\n        } else {\n         \
    \   $countEqual++;\n        }\n    }\n    return ($countPositive == $count - 1\
    \ || $countNegative == $count - 1 || $countEqual == $count - 1);\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9bbufqt.php:35\n\
    Stack trace:\n#0 /tmp/tmpt9bbufqt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpt9bbufqt.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $increasing = true;\n  $decreasing = true;\n  $n = count($l);\n  for ($i\
    \ = 0; $i < $n - 1; $i++) {\n    if ($l[$i] > $l[$i + 1]) {\n      $increasing\
    \ = false;\n    }\n    if ($l[$i] < $l[$i + 1]) {\n      $decreasing = false;\n\
    \    }\n  }\n  return $increasing || $decreasing;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t// Make list of deltas\n\t$del = [];\n\tfor ($i = 1; $i < count($l); $i++)\
    \ {\n\t\t$del[] = $l[$i] - $l[$i - 1];\n\t}\n\tif (allPositive($del) || allNegative($del))\
    \ {\n\t\treturn True;\n\t}\n\treturn False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function allPositive()\
    \ in /tmp/tmpo1myu_jj.php:15\nStack trace:\n#0 /tmp/tmpo1myu_jj.php(22): monotonic(Array)\n\
    #1 /tmp/tmpo1myu_jj.php(26): candidate(Array)\n#2 /tmp/tmpo1myu_jj.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpo1myu_jj.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n   if (count($l) <= 1) {\n       return True;\n   }\n   $inc = ($l[1] > $l[0]);\n\
    \   for ($i = 2; $i < count($l); $i++) {\n       if ($inc) {\n           if ($l[$i]\
    \ < $l[$i - 1]) {\n               return False;\n           }\n       } else {\n\
    \           if ($l[$i] > $l[$i - 1]) {\n               return False;\n       \
    \    }\n       }\n   }\n   return True;\n}\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $direction = $l[1] > $l[0] ? 1 : ($l[1] < $l[0] ? -1 : 0);\n  if ($direction\
    \ == 0) {\n    return true;\n  }\n  for ($i = 2; $i < count($l); $i++) {\n   \
    \ if ($direction == 1 && $l[$i] < $l[$i - 1]) {\n      return false;\n    }\n\
    \    if ($direction == -1 && $l[$i] > $l[$i - 1]) {\n      return false;\n   \
    \ }\n  }\n  return true;\n}\n\necho \"Test 1: \" . (monotonic([1, 2, 4, 20]) ?\
    \ \"Pass\" : \"Fail\") . \"\\n\";\necho \"Test 2: \" . (monotonic([1, 20, 4, 10])\
    \ ? \"Pass\" : \"Fail\") . \"\\n\";\necho \"Test 3: \" . (monotonic([4, 1, 0,\
    \ -10]) ? \"Pass\" : \"Fail\") . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Test 1: Pass\nTest 2: Fail\nTest 3: Pass\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $length = count($l);\n  $increasing = false;\n  $decreasing = false;\n\
    \  for ($i = 0; $i < $length - 1; $i++) {\n    if ($l[$i] < $l[$i + 1]) {\n  \
    \    $increasing = true;\n    } else if ($l[$i] > $l[$i + 1]) {\n      $decreasing\
    \ = true;\n    }\n  }\n  return $increasing == $decreasing;\n}\n\n$input1 = [1,\
    \ 2, 4, 20];\n$input2 = [1, 20, 4, 10];\n$input3 = [4, 1, 0, -10];\necho monotonic($input1);\n\
    echo \"\\n\";\necho monotonic($input2);\necho \"\\n\";\necho monotonic($input3);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2rs_6lw.php:37\n\
    Stack trace:\n#0 /tmp/tmpc2rs_6lw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpc2rs_6lw.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $increasing = true;\n    $decreasing = true;\n    $i = 1;\n    while\
    \ ($i < count($l)) {\n        if ($l[$i] < $l[$i - 1]) {\n            $increasing\
    \ = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing\
    \ = false;\n        }\n        $i++;\n    }\n    return $increasing || $decreasing;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $inc = $dec = true;\n    for ($i = 0; $i < count($l)-1; $i++) {\n   \
    \     if ($l[$i] < $l[$i+1]) {\n            $dec = false;\n        }\n       \
    \ if ($l[$i] > $l[$i+1]) {\n            $inc = false;\n        }\n    }\n    return\
    \ $inc || $dec;\n}\n\n$l = [1, 2, 4, 20];\nvar_dump(monotonic($l));\n$l = [1,\
    \ 20, 4, 10];\nvar_dump(monotonic($l));\n$l = [4, 1, 0, -10];\nvar_dump(monotonic($l));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $check = null;\n    for ($i = 0; $i < count($l); $i++) {\n        if\
    \ ($check == null) {\n            $check = $l[$i] - $l[$i + 1];\n        } else\
    \ {\n            if ($check < 0) {\n                if ($l[$i] - $l[$i + 1] >\
    \ 0) {\n                    return false;\n                }\n            } else\
    \ {\n                if ($l[$i] - $l[$i + 1] < 0) {\n                    return\
    \ false;\n                }\n            }\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3b3903cz.php:34\n\
    Stack trace:\n#0 /tmp/tmp3b3903cz.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3b3903cz.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) == 1) {\n        return true;\n    }\n    $increasing =\
    \ true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n \
    \       if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n       \
    \ }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n  \
    \      }\n    }\n    return $increasing || $decreasing;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $s = null;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if\
    \ (is_null($s)) {\n            $s = $l[$i] < $l[$i + 1];\n        } else {\n \
    \           if ($s != ($l[$i] < $l[$i + 1])) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\tif (count($l) < 2) {\n\t\treturn true;\n\t}\n\t$increasing = null;\n\t\
    $decreasing = null;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] >\
    \ $l[$i - 1]) {\n\t\t\t$increasing = true;\n\t\t} else if ($l[$i] < $l[$i - 1])\
    \ {\n\t\t\t$decreasing = true;\n\t\t}\n\t\tif ($increasing && $decreasing) {\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (sizeof($l) < 2) {\n        return true;\n    }\n    $increasing =\
    \ ($l[0] < $l[1]);\n    for ($i = 1; $i < sizeof($l) - 1; $i++) {\n        if\
    \ ($increasing) {\n            if ($l[$i] > $l[$i + 1]) {\n                return\
    \ false;\n            }\n        } else {\n            if ($l[$i] < $l[$i + 1])\
    \ {\n                return false;\n            }\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $increasing = false;\n  $decreasing = false;\n  for ($i = 0; $i < count($l);\
    \ $i++) {\n    if ($i == 0) {\n      $increasing = true;\n      $decreasing =\
    \ true;\n    } else {\n      if ($l[$i] > $l[$i - 1]) {\n        $decreasing =\
    \ false;\n      } elseif ($l[$i] < $l[$i - 1]) {\n        $increasing = false;\n\
    \      }\n    }\n  }\n  return $increasing || $decreasing;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $dif = 0;\n  $flag = False;\n  foreach($l as $k => $v) {\n    if ($k ==\
    \ 0) {\n      $prev = $v;\n      continue;\n    }\n    if ($dif == 0) {\n    \
    \  $dif = $v - $prev;\n      if ($dif != 0) {\n        $flag = True;\n      }\n\
    \    } else {\n      if ($flag && ($dif * ($v - $prev)) < 0) {\n        return\
    \ False;\n      }\n    }\n    $prev = $v;\n  }\n  return True;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $len = count($l);\n    $increasing = False;\n    $decreasing = False;\n\
    \    for ($i = 0; $i < $len - 1; $i++) {\n        if ($l[$i + 1] - $l[$i] > 0)\
    \ {\n            $increasing = True;\n        } elseif ($l[$i + 1] - $l[$i] <\
    \ 0) {\n            $decreasing = True;\n        }\n        if ($increasing &&\
    \ $decreasing) {\n            return False;\n        }\n    }\n    return True;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $dec = false;\n    $inc = false;\n    if (count($l) < 3) return true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            if ($inc) return false;\n            $dec = true;\n        } else\
    \ if ($l[$i] > $l[$i - 1]) {\n            if ($dec) return false;\n          \
    \  $inc = true;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $increase = 0;\n    $decrease = 0;\n    for ($i = 0; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $l[$i - 1]) {\n            $increase++;\n    \
    \    } else if ($l[$i] < $l[$i - 1]) {\n            $decrease++;\n        }\n\
    \    }\n    if ($increase == 0 || $decrease == 0) {\n        return true;\n  \
    \  } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7fpatlxe.php:33\n\
    Stack trace:\n#0 /tmp/tmp7fpatlxe.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7fpatlxe.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  if (sizeof($l) <= 1) {\n    return True;\n  }\n  $sign = $l[1] - $l[0];\n\
    \  $i = 2;\n  while ($i < sizeof($l)) {\n    if ($sign == 0) {\n      $sign =\
    \ $l[$i] - $l[$i - 1];\n    } else {\n      if ($sign * ($l[$i] - $l[$i - 1])\
    \ < 0) {\n        return False;\n      }\n    }\n    $i++;\n  }\n  return True;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$c = count($l);\n\tif ($c <= 1) {\n\t\treturn True;\n\t}\n\t$negative =\
    \ True;\n\t$positive = True;\n\tfor ($i = 1; $i < $c; $i++) {\n\t\tif ($l[$i]\
    \ > $l[$i - 1]) {\n\t\t\t$negative = False;\n\t\t}\n\t\tif ($l[$i] < $l[$i - 1])\
    \ {\n\t\t\t$positive = False;\n\t\t}\n\t}\n\treturn $negative or $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $diff = null;\n    $prev = $l[0];\n    foreach ($l as $k => $v) {\n \
    \       if ($k > 0) {\n            $d = $v - $prev;\n            if ($diff ===\
    \ null) {\n                $diff = $d;\n            } else {\n               \
    \ if ($diff * $d < 0) {\n                    return false;\n                }\n\
    \            }\n            $prev = $v;\n        }\n    }\n    return true;\n\
    }\n\n$l = [1, 2, 4, 20];\necho monotonic($l) ? 'True' : 'False';\necho PHP_EOL;\n\
    $l = [1, 20, 4, 10];\necho monotonic($l) ? 'True' : 'False';\necho PHP_EOL;\n\
    $l = [4, 1, 0, -10];\necho monotonic($l) ? 'True' : 'False';\necho PHP_EOL;\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFalse\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if(count($l) < 2) return true;\n    if(($l[0] - $l[1]) > 0) {\n     \
    \   for($i = 0; $i < count($l) - 1; $i++) {\n            if(($l[$i] - $l[$i +\
    \ 1]) < 0) return false;\n        }\n    } else {\n        for($i = 0; $i < count($l)\
    \ - 1; $i++) {\n            if(($l[$i] - $l[$i + 1]) > 0) return false;\n    \
    \    }\n    }\n    return true;\n}\n$a = array(1, 20, 4, 10);\n$b = array(4, 1,\
    \ 0, -10);\n\necho monotonic($a) . '<br>';\necho monotonic($b) . '<br>';\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $n = count($l);\n  $increasing = true;\n  $decreasing = true;\n  for ($i\
    \ = 0; $i < $n - 1; $i++) {\n    if ($l[$i] > $l[$i + 1]) {\n      $increasing\
    \ = false;\n    }\n    if ($l[$i] < $l[$i + 1]) {\n      $decreasing = false;\n\
    \    }\n  }\n  return $increasing || $decreasing;\n}\n\n$tests = [\n  [[1, 2,\
    \ 4, 20], true],\n  [[1, 20, 4, 10], false],\n  [[4, 1, 0, -10], true],\n];\n\
    foreach ($tests as [$l, $e]) {\n  $r = monotonic($l);\n  if ($r === $e) {\n  \
    \  echo \"PASS\\n\";\n  } else {\n    echo \"FAIL\\n\";\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "PASS\nPASS\nPASS\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  // TODO\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tk_2nsj.php:18\n\
    Stack trace:\n#0 /tmp/tmp6tk_2nsj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6tk_2nsj.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $d = 0;\n  foreach ($l as $i => $v) {\n    if ($i > 0) {\n      $d += $v\
    \ - $l[$i - 1];\n    }\n  }\n  return ($d == 0) || ($d == count($l) - 1) || ($d\
    \ == 1 - count($l));\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1c7fayao.php:24\n\
    Stack trace:\n#0 /tmp/tmp1c7fayao.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1c7fayao.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $increasing = true;\n    $decreasing = true;\n    for ($i = 0; $i < count($l)\
    \ - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n            $increasing =\
    \ false;\n        }\n        if ($l[$i] < $l[$i + 1]) {\n            $decreasing\
    \ = false;\n        }\n    }\n    return $increasing || $decreasing;\n}\n\n$l\
    \ = [1, 2, 4, 20];\nvar_dump(monotonic($l));\n$l = [1, 20, 4, 10];\nvar_dump(monotonic($l));\n\
    $l = [4, 1, 0, -10];\nvar_dump(monotonic($l));\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $len = count($l);\n    $positive = false;\n    $negative = false;\n \
    \   for ($i = 0; $i < $len-1; $i++) {\n        if ($l[$i] < $l[$i+1]) {\n    \
    \        $positive = true;\n        } elseif ($l[$i] > $l[$i+1]) {\n         \
    \   $negative = true;\n        }\n    }\n    return $positive xor $negative;\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0ynm8tk.php:34\n\
    Stack trace:\n#0 /tmp/tmpm0ynm8tk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm0ynm8tk.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) == 1) {\n        return true;\n    } else {\n        if\
    \ ($l[0] > $l[1]) {\n            $flag = true;\n        } else {\n           \
    \ $flag = false;\n        }\n        for ($i = 0; $i < count($l) - 1; $i++) {\n\
    \            if ($flag) {\n                if ($l[$i] < $l[$i + 1]) {\n      \
    \              return false;\n                }\n            } else {\n      \
    \          if ($l[$i] > $l[$i + 1]) {\n                    return false;\n   \
    \             }\n            }\n        }\n        return true;\n    }\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$diff = [];\n\tfor ($i = 0; $i < count($l) - 1; $i++) {\n\t\t$diff[] =\
    \ $l[$i + 1] - $l[$i];\n\t}\n\t$prev = $diff[0];\n\tfor ($i = 1; $i < count($diff);\
    \ $i++) {\n\t\tif ($prev * $diff[$i] < 0) {\n\t\t\treturn False;\n\t\t}\n\t\t\
    $prev = $diff[$i];\n\t}\n\treturn True;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $result = false;\n    if (count($l) > 1) {\n        $inc = ($l[1] - $l[0])\
    \ > 0;\n        for ($i = 0; $i < count($l) - 1; $i++) {\n            if (($l[$i\
    \ + 1] - $l[$i]) > 0 != $inc) {\n                $result = false;\n          \
    \      break;\n            }\n            $result = true;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    // FILL IN CODE\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq88nr2vj.php:18\n\
    Stack trace:\n#0 /tmp/tmpq88nr2vj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpq88nr2vj.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) == 1) return true;\n    $t = $l[0] - $l[1];\n    for ($i\
    \ = 0; $i < count($l) - 1; $i++) {\n        if (($l[$i] - $l[$i + 1]) * $t < 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\necho\
    \ monotonic([1, 2, 4, 20]) . \"\\n\";\necho monotonic([1, 20, 4, 10]) . \"\\n\"\
    ;\necho monotonic([4, 1, 0, -10]) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $mono = null;\n    $i = 0;\n    while ($i < count($l) - 1) {\n      \
    \  if ($l[$i] === $l[$i + 1]) {\n            $i++;\n            continue;\n  \
    \      }\n        $inc = $l[$i] < $l[$i + 1];\n        if ($mono !== null) {\n\
    \            if ($inc !== $mono) {\n                return false;\n          \
    \  }\n        } else {\n            $mono = $inc;\n        }\n        $i++;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $increasing = True;\n    $decreasing = True;\n    for ($i = 0; $i < count($l)\
    \ - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n            $increasing =\
    \ False;\n        }\n        if ($l[$i] < $l[$i + 1]) {\n            $decreasing\
    \ = False;\n        }\n    }\n    return $increasing || $decreasing;\n}\n\n$l\
    \ = [1, 2, 4, 20];\n$actual = monotonic($l);\n$expected = True;\nassert($actual\
    \ === $expected);\n\n$l = [1, 20, 4, 10];\n$actual = monotonic($l);\n$expected\
    \ = False;\nassert($actual === $expected);\n\n$l = [4, 1, 0, -10];\n$actual =\
    \ monotonic($l);\n$expected = True;\nassert($actual === $expected);\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    // Code here\n    if (sizeof($l) > 1) {\n        if ($l[0] < $l[1]) {\n\
    \            $sign = \"+\";\n        } elseif ($l[0] > $l[1]) {\n            $sign\
    \ = \"-\";\n        }\n        for ($i = 1; $i < sizeof($l) - 1; $i++) {\n   \
    \         if ($sign == \"+\") {\n                if ($l[$i] > $l[$i + 1]) {\n\
    \                    return false;\n                }\n            } elseif ($sign\
    \ == \"-\") {\n                if ($l[$i] < $l[$i + 1]) {\n                  \
    \  return false;\n                }\n            }\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $reverse_l = array_reverse($l);\n    if ($l == $reverse_l) return true;\n\
    \    $ascending = true;\n    $descending = true;\n    for ($i = 0; $i < count($l)\
    \ - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) $ascending = false;\n       \
    \ if ($l[$i] < $l[$i + 1]) $descending = false;\n    }\n    return $ascending\
    \ || $descending;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $dec = true;\n    $inc = true;\n    for ($i = 0; $i < count($l) - 1;\
    \ $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] < $l[$i + 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $dec || $inc;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $result = true;\n  $is_increasing = true;\n  $is_decreasing = true;\n \
    \ for ($i = 0; $i < count($l) - 1; $i++) {\n    if ($l[$i] > $l[$i + 1]) {\n \
    \     $is_increasing = false;\n    }\n    if ($l[$i] < $l[$i + 1]) {\n      $is_decreasing\
    \ = false;\n    }\n  }\n  if (!$is_increasing && !$is_decreasing) {\n    $result\
    \ = false;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if(!is_array($l)) return false;\n    $len = count($l);\n    if($len <=\
    \ 1) return true;\n    $inc = $l[1] >= $l[0];\n    for($i = 1; $i < $len; $i++)\
    \ {\n        if($inc != ($l[$i] >= $l[$i-1])) {\n            return false;\n \
    \       }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7d85c4kt.php:31\n\
    Stack trace:\n#0 /tmp/tmp7d85c4kt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7d85c4kt.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  // your code\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy12xa6_y.php:17\n\
    Stack trace:\n#0 /tmp/tmpy12xa6_y.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpy12xa6_y.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $i = 0;\n    $res = '';\n    $inc = '';\n    $dec = '';\n    $prev =\
    \ 0;\n    foreach ($l as $e) {\n        if ($i == 0) {\n            $i++;\n  \
    \          $prev = $e;\n            continue;\n        }\n        if ($e > $prev)\
    \ {\n            $inc .= '1';\n            $dec .= '0';\n        } elseif ($e\
    \ < $prev) {\n            $inc .= '0';\n            $dec .= '1';\n        } else\
    \ {\n            $inc .= '1';\n            $dec .= '1';\n        }\n        $prev\
    \ = $e;\n    }\n    return $inc == '0' xor $dec == '0';\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ly87jw7.php:44\n\
    Stack trace:\n#0 /tmp/tmp9ly87jw7.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp9ly87jw7.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $monotonic = true;\n    $len = count($l);\n    if ($len <= 1) return\
    \ $monotonic;\n    for ($i = 1; $i < $len; $i++) {\n        if ($l[$i] > $l[$i\
    \ - 1]) {\n            for ($j = $i + 1; $j < $len; $j++) {\n                if\
    \ ($l[$j] < $l[$j - 1]) {\n                    $monotonic = false;\n         \
    \           break;\n                }\n            }\n            break;\n   \
    \     } else if ($l[$i] < $l[$i - 1]) {\n            for ($j = $i + 1; $j < $len;\
    \ $j++) {\n                if ($l[$j] > $l[$j - 1]) {\n                    $monotonic\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         break;\n        }\n    }\n    return $monotonic;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $num_pos = 0;\n    $num_neg = 0;\n    $l_cnt = count($l);\n    for ($i\
    \ = 0; $i < $l_cnt - 1; $i++) {\n        if ($l[$i] < $l[$i + 1]) {\n        \
    \    $num_pos++;\n        } else if ($l[$i] > $l[$i + 1]) {\n            $num_neg++;\n\
    \        }\n    }\n    return ($num_pos == $l_cnt - 1 || $num_neg == $l_cnt -\
    \ 1);\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmjyr9s9.php:32\n\
    Stack trace:\n#0 /tmp/tmpsmjyr9s9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsmjyr9s9.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if(empty($l)){\n        return True;\n    }\n    $len = count($l);\n\
    \    $incr = 0;\n    for($i = 0; $i < $len - 1; $i++){\n        if($l[$i] < $l[$i\
    \ + 1]){\n            $incr++;\n        }\n    }\n    if($incr === 0 || $incr\
    \ === $len - 1){\n        return True;\n    }else{\n        return False;\n  \
    \  }\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $is_monotonic = true;\n    if (count($l) >= 2) {\n        $diff = $l[1]\
    \ - $l[0];\n        for ($i = 1; $i < count($l); $i++) {\n            if ($l[$i]\
    \ - $l[$i - 1] !== $diff) {\n                $is_monotonic = false;\n        \
    \        break;\n            }\n        }\n    }\n    return $is_monotonic;\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns_pempj.php:27\n\
    Stack trace:\n#0 /tmp/tmpns_pempj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpns_pempj.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) <= 1) {\n        return true;\n    }\n    $inc = true;\n\
    \    $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ - $l[$i - 1] < 0) {\n            $inc = false;\n        }\n        if ($l[$i]\
    \ - $l[$i - 1] > 0) {\n            $dec = false;\n        }\n    }\n    return\
    \ $inc || $dec;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$d = $l[1] - $l[0];\n\tfor ($i = 2; $i < count($l); $i++) {\n\t\tif (($l[$i]\
    \ - $l[$i - 1]) * $d < 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $length = count($l);\n  $is_inc = true;\n  $is_dec = true;\n  for ($i =\
    \ 0; $i < $length - 1; $i++) {\n    if ($l[$i] < $l[$i + 1]) {\n      $is_dec\
    \ = false;\n    }\n    if ($l[$i] > $l[$i + 1]) {\n      $is_inc = false;\n  \
    \  }\n  }\n  return $is_inc || $is_dec;\n}\n\n$l = array(1, 2, 4, 20);\nprint\
    \ monotonic($l);\n\n$l = array(1, 20, 4, 10);\nprint monotonic($l);\n\n$l = array(4,\
    \ 1, 0, -10);\nprint monotonic($l);\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $up = false;\n  $down = false;\n  for ($i = 1; $i < count($l); $i++) {\n\
    \    if ($l[$i] - $l[$i - 1] > 0) {\n      $up = true;\n    } else if ($l[$i]\
    \ - $l[$i - 1] < 0) {\n      $down = true;\n    }\n  }\n  return $up && !$down\
    \ || !$up && $down;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp532he87z.php:34\n\
    Stack trace:\n#0 /tmp/tmp532he87z.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp532he87z.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\tif(count($l) > 1) {\n\t\t$r = ( $l[0] < $l[1] ) ? \">\" : \"<\";\n\n\t\t\
    for($i = 1; $i < count($l); $i++) {\n\t\t\tif( $l[$i - 1] $r $l[$i] ) {\n\t\t\t\
    \treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphzv8xy08.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $len = count($l);\n  if ($len == 1) return true;\n  $inc = $l[1] > $l[0];\n\
    \  for ($i = 1; $i < $len; $i++) {\n    if ($inc) {\n      if ($l[$i] < $l[$i\
    \ - 1]) {\n        return false;\n      }\n    } else {\n      if ($l[$i] > $l[$i\
    \ - 1]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  // +++your code here+++\n  $l = array(4, 1, 0, -10);\n  return $l;\n}\n\
    \n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tgdhpj2.php:21\n\
    Stack trace:\n#0 /tmp/tmp6tgdhpj2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6tgdhpj2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $monotonic = null;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n  \
    \      if ($l[$i] > $l[$i + 1]) {\n            if (is_null($monotonic)) {\n  \
    \              $monotonic = 'asc';\n            } else if ($monotonic == 'desc')\
    \ {\n                return false;\n            }\n        } else if ($l[$i] <\
    \ $l[$i + 1]) {\n            if (is_null($monotonic)) {\n                $monotonic\
    \ = 'desc';\n            } else if ($monotonic == 'asc') {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;\n}\n\necho monotonic([1,\
    \ 2, 4, 20]) . \"\\n\";\necho monotonic([1, 20, 4, 10]) . \"\\n\";\necho monotonic([4,\
    \ 1, 0, -10]) . \"\\n\";\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) < 2) {\n        return true;\n    }\n    $sign = 0;\n \
    \   $prev = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        $delta =\
    \ $l[$i] - $prev;\n        if ($delta == 0) {\n            continue;\n       \
    \ }\n        if ($sign == 0) {\n            $sign = $delta / abs($delta);\n  \
    \      } else if ($sign * $delta < 0) {\n            return false;\n        }\n\
    \        $prev = $l[$i];\n    }\n    return true;\n}\n\n$l = [1, 2, 4, 20];\n\
    var_dump(monotonic($l));\n$l = [1, 20, 4, 10];\nvar_dump(monotonic($l));\n$l =\
    \ [4, 1, 0, -10];\nvar_dump(monotonic($l));\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) < 2) {\n        return true;\n    }\n    $i = 1;\n    while\
    \ ($i < count($l)) {\n        if ($l[$i] < $l[$i - 1]) {\n            break;\n\
    \        }\n        $i++;\n    }\n    if ($i == count($l)) {\n        return true;\n\
    \    }\n    $i = 1;\n    while ($i < count($l)) {\n        if ($l[$i] > $l[$i\
    \ - 1]) {\n            break;\n        }\n        $i++;\n    }\n    if ($i ==\
    \ count($l)) {\n        return true;\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$len = count($l);\n\tif($len <= 1) {\n\t\treturn True;\n\t}\n\t$dir = $l[1]\
    \ - $l[0];\n\tfor($i = 2; $i < $len; $i++) {\n\t\tif($dir * ($l[$i] - $l[$i -\
    \ 1]) < 0) {\n\t\t\treturn False;\n\t\t}\n\t}\n\treturn True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) == 1) return true;\n    if ($l[0] < $l[1]) {\n        for\
    \ ($i = 1; $i < count($l); $i++) {\n            if ($l[$i] < $l[$i - 1]) return\
    \ false;\n        }\n    } else {\n        for ($i = 1; $i < count($l); $i++)\
    \ {\n            if ($l[$i] > $l[$i - 1]) return false;\n        }\n    }\n  \
    \  return true;\n}\necho \"===== monotonic =====<br>\";\nvar_dump(monotonic([1,\
    \ 2, 4, 20]));\nvar_dump(monotonic([1, 20, 4, 10]));\nvar_dump(monotonic([4, 1,\
    \ 0, -10]));\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "===== monotonic =====<br>bool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) < 3) {\n        return true;\n    }\n    $inc = true;\n\
    \    $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc\
    \ || $dec;\n}\n\nvar_dump(monotonic([1, 2, 4, 20]));\nvar_dump(monotonic([1, 20,\
    \ 4, 10]));\nvar_dump(monotonic([4, 1, 0, -10]));\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$inc = $dec = false;\n\t$len = count($l);\n\tfor ($i = 0; $i < $len - 1;\
    \ $i++) {\n\t\tif ($l[$i] < $l[$i + 1])\n\t\t\t$inc = true;\n\t\tif ($l[$i] >\
    \ $l[$i + 1])\n\t\t\t$dec = true;\n\t}\n\treturn ($inc and !$dec) or (!$inc and\
    \ $dec);\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_iq52xq0.php:33\n\
    Stack trace:\n#0 /tmp/tmp_iq52xq0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_iq52xq0.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\tif (count($l) < 2) {\n\t\treturn true;\n\t}\n\t$order = ($l[1] - $l[0])\
    \ > 0 ? 1 : -1;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif (($l[$i] - $l[$i\
    \ - 1]) * $order < 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$len = count($l);\n\t$inc = $l[0] < $l[1];\n\t$dec = $l[0] > $l[1];\n\t\
    for ($i = 1; $i < $len; $i++) {\n\t\tif ($l[$i] < $l[$i-1]) {\n\t\t\tif ($inc)\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$dec = true;\n\t\t} elseif ($l[$i]\
    \ > $l[$i-1]) {\n\t\t\tif ($dec) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$inc\
    \ = true;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $m = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $m) {\n            $p = True;\n            break;\n        } elseif ($l[$i]\
    \ < $m) {\n            $p = False;\n            break;\n        }\n    }\n   \
    \ for ($i = 1; $i < count($l); $i++) {\n        if ($p) {\n            if ($l[$i]\
    \ > $m) {\n                $m = $l[$i];\n            } else {\n              \
    \  return False;\n            }\n        } else {\n            if ($l[$i] < $m)\
    \ {\n                $m = $l[$i];\n            } else {\n                return\
    \ False;\n            }\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkob27pzc.php:47\n\
    Stack trace:\n#0 /tmp/tmpkob27pzc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpkob27pzc.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  if (count($l) == 1) {\n    return true;\n  }\n  $trend = $l[1] - $l[0];\n\
    \  $i = 1;\n  while ($i < count($l)) {\n    if (($l[$i] - $l[$i - 1]) * $trend\
    \ < 0) {\n      return false;\n    }\n    $i++;\n  }\n  return true;\n}\necho\
    \ monotonic([1, 2, 4, 20]) . PHP_EOL;\necho monotonic([1, 20, 4, 10]) . PHP_EOL;\n\
    echo monotonic([4, 1, 0, -10]) . PHP_EOL;\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tif ($i == 0) {\n\t\t\t$p = $l[$i];\n\
    \t\t\tcontinue;\n\t\t}\n\t\t$c = $l[$i];\n\t\tif ($p != $c) {\n\t\t\t$inc = $p\
    \ < $c;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\t\
    if ($i == 0) {\n\t\t\t$p = $l[$i];\n\t\t\tcontinue;\n\t\t}\n\t\t$c = $l[$i];\n\
    \t\tif ($inc) {\n\t\t\tif ($p > $c) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\tif ($p < $c) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t$p = $c;\n\
    \t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\tif ($l[0] < $l[1]) {\n\t\tfor ($i = 1; $i < count($l) - 1; $i++) {\n\t\t\
    \tif ($l[$i] > $l[$i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else\
    \ {\n\t\tfor ($i = 1; $i < count($l) - 1; $i++) {\n\t\t\tif ($l[$i] < $l[$i +\
    \ 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$length = count($l);\n\tif ($length == 1) {\n\t\treturn true;\n\t} else\
    \ {\n\t\t$increase = false;\n\t\t$decrease = false;\n\t\t$max = max($l);\n\t\t\
    $min = min($l);\n\t\tfor ($i = 0; $i < $length; $i++) {\n\t\t\tif ($l[$i] == $max)\
    \ {\n\t\t\t\t$increase = true;\n\t\t\t}\n\t\t\tif ($l[$i] == $min) {\n\t\t\t\t\
    $decrease = true;\n\t\t\t}\n\t\t}\n\t\treturn $increase || $decrease;\n\t}\n}\n\
    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnbjl5ddo.php:37\n\
    Stack trace:\n#0 /tmp/tmpnbjl5ddo.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpnbjl5ddo.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 3) {\n\t\treturn True;\n\t}\n\t$dec = false;\n\
    \t$inc = false;\n\tfor ($i = 1; $i < $len; $i++) {\n\t\tif ($l[$i] > $l[$i - 1])\
    \ {\n\t\t\t$inc = true;\n\t\t}\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t$dec = true;\n\
    \t\t}\n\t\tif ($inc && $dec) {\n\t\t\treturn False;\n\t\t}\n\t}\n\treturn True;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if ($l == null) {\n        return True;\n    }\n    $isAscending = $l[0]\
    \ <= $l[1];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($isAscending\
    \ && $l[$i - 1] > $l[$i]) {\n            return False;\n        }\n        if\
    \ (!$isAscending && $l[$i - 1] < $l[$i]) {\n            return False;\n      \
    \  }\n    }\n    return True;\n}\necho monotonic([1, 2, 4, 20]);\necho \"<br>\"\
    ;\necho monotonic([1, 20, 4, 10]);\necho \"<br>\";\necho monotonic([4, 1, 0, -10]);\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $mono = true;\n  $type = \"\";\n  $type_count = 0;\n  $last = $l[0];\n\
    \  foreach ($l as $item) {\n    if ($item > $last) {\n      $type = \"up\";\n\
    \    } elseif ($item < $last) {\n      $type = \"down\";\n    } else {\n     \
    \ $type = \"flat\";\n    }\n    if ($type == \"flat\") {\n      $type_count++;\n\
    \    } elseif ($type_count > 0) {\n      $mono = false;\n      break;\n    }\n\
    \    $last = $item;\n  }\n  return $mono;\n}\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcbqep5pb.php:37\n\
    Stack trace:\n#0 /tmp/tmpcbqep5pb.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpcbqep5pb.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $desc = false;\n    $asc = false;\n    for ($i = 0; $i < count($l); $i++)\
    \ {\n        if ($i == 0) {\n            $desc = $asc = true;\n        } else\
    \ {\n            if ($desc && ($l[$i - 1] < $l[$i])) {\n                $desc\
    \ = false;\n            }\n            if ($asc && ($l[$i - 1] > $l[$i])) {\n\
    \                $asc = false;\n            }\n        }\n    }\n    return $desc\
    \ || $asc;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  if (count($l) <= 1) return true;\n  $trend = 0;\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] == $l[$i - 1]) continue;\n    $trend += $l[$i] > $l[$i\
    \ - 1] ? 1 : -1;\n    if ($trend == 0) continue;\n    if ($trend < 0) break;\n\
    \  }\n  return abs($trend) == 1;\n}\n\n/*\n  Split an array into two halves\n\
    */\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidgb9s2t.php:29\n\
    Stack trace:\n#0 /tmp/tmpidgb9s2t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpidgb9s2t.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l_is_desc = $l_is_asc = True;\n    for ($i = 0; $i < count($l) - 1;\
    \ $i++) {\n        if ($l[$i] < $l[$i + 1]) {\n            $l_is_desc = False;\n\
    \        }\n        if ($l[$i] > $l[$i + 1]) {\n            $l_is_asc = False;\n\
    \        }\n    }\n    return $l_is_desc || $l_is_asc;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $direction = null;\n    $last = null;\n    foreach ($l as $current) {\n\
    \        if ($last !== null) {\n            if ($direction === null) {\n     \
    \           $direction = $current > $last ? \"up\" : \"down\";\n            }\
    \ else {\n                if ($direction === \"up\" && $current < $last) {\n \
    \                   return false;\n                } elseif ($direction === \"\
    down\" && $current > $last) {\n                    return false;\n           \
    \     }\n            }\n        }\n        $last = $current;\n    }\n    return\
    \ true;\n}\n\n$list = [1, 2, 4, 20];\nvar_dump(monotonic($list));\n$list = [1,\
    \ 20, 4, 10];\nvar_dump(monotonic($list));\n$list = [4, 1, 0, -10];\nvar_dump(monotonic($list));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$direction = 0;\n\t$length = count($l);\n\tfor ($i = 0; $i < $length -\
    \ 1; $i++) {\n\t\t$compare = $l[$i + 1] - $l[$i];\n\t\tif ($compare == 0) continue;\n\
    \t\telse if ($compare > 0) {\n\t\t\tif ($direction == -1) return false;\n\t\t\t\
    $direction = 1;\n\t\t} else {\n\t\t\tif ($direction == 1) return false;\n\t\t\t\
    $direction = -1;\n\t\t}\n\t}\n\treturn true;\n}\n\nprint_r(monotonic([1, 2, 4,\
    \ 20]));\nprint_r(monotonic([1, 20, 4, 10]));\nprint_r(monotonic([4, 1, 0, -10]));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    return monotonicHelper($l, 'increasing') || monotonicHelper($l, 'decreasing');\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function monotonicHelper()\
    \ in /tmp/tmpm9e342_j.php:10\nStack trace:\n#0 /tmp/tmpm9e342_j.php(14): monotonic(Array)\n\
    #1 /tmp/tmpm9e342_j.php(18): candidate(Array)\n#2 /tmp/tmpm9e342_j.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmpm9e342_j.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $isMono = null;\n  foreach ($l as $k => $v) {\n    if ($k > 0) {\n    \
    \  if ($isMono === null) {\n        $isMono = $v - $l[$k - 1];\n      } else {\n\
    \        if ($isMono < 0) {\n          if ($v - $l[$k - 1] > 0) {\n          \
    \  return false;\n          }\n        } else {\n          if ($v - $l[$k - 1]\
    \ < 0) {\n            return false;\n          }\n        }\n      }\n    }\n\
    \  }\n  return true;\n}\n\nvar_dump(monotonic([1, 2, 4, 20]));\nvar_dump(monotonic([1,\
    \ 20, 4, 10]));\nvar_dump(monotonic([4, 1, 0, -10]));\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\tif (count($l) < 2) {\n\t\treturn True;\n\t}\n\telse {\n\t\t$i = 0;\n\t\t\
    $b = (($l[$i] > $l[$i+1]) || ($l[$i] < $l[$i+1]));\n\t\twhile ($b && ($i < count($l)-2))\
    \ {\n\t\t\t$i++;\n\t\t\t$b = (($l[$i] > $l[$i+1]) || ($l[$i] < $l[$i+1]));\n\t\
    \t}\n\t\treturn $b;\n\t}\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9jvhsex.php:31\n\
    Stack trace:\n#0 /tmp/tmpj9jvhsex.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj9jvhsex.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l_length = count($l);\n  if ($l_length == 1 || $l_length == 0) {\n   \
    \ return true;\n  }\n  $direction = ($l[1] > $l[0]) ? true : false;\n  if ($direction\
    \ == true) {\n    for ($i = 0; $i < $l_length; $i++) {\n      if ($l[$i + 1] >\
    \ $l[$i]) {\n        continue;\n      } else {\n        return false;\n      }\n\
    \    }\n  } else {\n    for ($i = 0; $i < $l_length; $i++) {\n      if ($l[$i\
    \ + 1] < $l[$i]) {\n        continue;\n      } else {\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxm6b80gj.php:39\n\
    Stack trace:\n#0 /tmp/tmpxm6b80gj.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpxm6b80gj.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if(count($l) == 1) {\n        return True;\n    }\n    if($l[0] <= $l[1])\
    \ {\n        $inc = True;\n    } else {\n        $inc = False;\n    }\n    for($i\
    \ = 1; $i < count($l); $i++) {\n        if($inc) {\n            if($l[$i-1] >\
    \ $l[$i]) {\n                return False;\n            }\n        } else {\n\
    \            if($l[$i-1] < $l[$i]) {\n                return False;\n        \
    \    }\n        }\n    }\n    return True;\n}\necho(monotonic([4, 1, 0, -10]).\"\
    \\n\");\necho(monotonic([1, 20, 4, 10]).\"\\n\");\necho(monotonic([1, 2, 4, 20]).\"\
    \\n\");\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $sign = 1;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i\
    \ - 1] < $l[$i]) {\n            if ($sign < 0) {\n                return false;\n\
    \            }\n        } else if ($l[$i - 1] > $l[$i]) {\n            if ($sign\
    \ > 0) {\n                return false;\n            }\n            $sign = -1;\n\
    \        }\n    }\n    return true;\n}\n$l = [1, 2, 4, 20];\nif (monotonic($l))\
    \ {\n    echo \"True\\n\";\n} else {\n    echo \"False\\n\";\n}\n$l = [1, 20,\
    \ 4, 10];\nif (monotonic($l)) {\n    echo \"True\\n\";\n} else {\n    echo \"\
    False\\n\";\n}\n$l = [4, 1, 0, -10];\nif (monotonic($l)) {\n    echo \"True\\\
    n\";\n} else {\n    echo \"False\\n\";\n}\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFalse\nFalse\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpeqz25bqt.php:51\nStack trace:\n#0 /tmp/tmpeqz25bqt.php(58): test()\n\
    #1 {main}\n  thrown in /tmp/tmpeqz25bqt.php on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $result = array_diff_assoc($l, array_unique($l));\n    if (count($result)\
    \ > 0) {\n        return True;\n    } else {\n        return False;\n    }\n}\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzn8gvngu.php:22\n\
    Stack trace:\n#0 /tmp/tmpzn8gvngu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzn8gvngu.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    return array_sum(array_map('strcmp', $l, array_slice($l, 1))) <= 0;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1a09ojh.php:18\n\
    Stack trace:\n#0 /tmp/tmpl1a09ojh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpl1a09ojh.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if(count($l) < 3) {\n        return true;\n    }\n    $increasing = ($l[0]\
    \ < $l[1]);\n    $decreasing = ($l[0] > $l[1]);\n    $previous = $l[1];\n    for($i\
    \ = 2; $i < count($l); $i++) {\n        if(($increasing && $l[$i] < $previous)\
    \ || ($decreasing && $l[$i] > $previous)) {\n            return false;\n     \
    \   }\n        $previous = $l[$i];\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$order = 0;\n\t$length = count($l);\n\tfor ($i = 0; $i < $length - 1; $i++)\
    \ {\n\t\tif ($l[$i] < $l[$i + 1]) {\n\t\t\tif ($order == 0) {\n\t\t\t\t$order\
    \ = 1;\n\t\t\t} elseif ($order == -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\
    } elseif ($l[$i] > $l[$i + 1]) {\n\t\t\tif ($order == 0) {\n\t\t\t\t$order = -1;\n\
    \t\t\t} elseif ($order == 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if(count($l) == 1) {\n        return true;\n    }\n    $i = 0;\n    while($i\
    \ < count($l)-1) {\n        if(($l[$i] > $l[$i+1]) && (array_sum($l) >= 0)) {\n\
    \            return false;\n        }\n        if(($l[$i] < $l[$i+1]) && (array_sum($l)\
    \ <= 0)) {\n            return false;\n        }\n        $i++;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsl6cc73.php:34\n\
    Stack trace:\n#0 /tmp/tmppsl6cc73.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppsl6cc73.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (empty($l)) {\n        return true;\n    }\n    $prev = $l[0];\n \
    \   $increasing = null;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($prev == $l[$i]) {\n            continue;\n        }\n        if ($increasing\
    \ === null) {\n            $increasing = $prev < $l[$i];\n        }\n        if\
    \ ($increasing && $prev > $l[$i]) {\n            return false;\n        }\n  \
    \      if (!$increasing && $prev < $l[$i]) {\n            return false;\n    \
    \    }\n        $prev = $l[$i];\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (empty($l)) {\n        return true;\n    }\n\n    $direction = $l[0]\
    \ > $l[1] ? -1 : 1;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if\
    \ ($direction * ($l[$i] - $l[$i + 1]) < 0) {\n            return false;\n    \
    \    }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfm53u8l.php:27\n\
    Stack trace:\n#0 /tmp/tmphfm53u8l.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphfm53u8l.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $diff = array_diff($l, $l);\n    foreach ($diff as $key => $d) {\n  \
    \      $diff[$key] = abs($d);\n    }\n    $max = max($diff);\n    return $max\
    \ === 0 || $max === min($diff);\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmp0lv0rz2o.php\
    \ on line 14\n\nWarning: min(): Array must contain at least one element in /tmp/tmp0lv0rz2o.php\
    \ on line 15\n\nWarning: max(): Array must contain at least one element in /tmp/tmp0lv0rz2o.php\
    \ on line 14\n\nWarning: min(): Array must contain at least one element in /tmp/tmp0lv0rz2o.php\
    \ on line 15\n\nWarning: max(): Array must contain at least one element in /tmp/tmp0lv0rz2o.php\
    \ on line 14\n\nWarning: min(): Array must contain at least one element in /tmp/tmp0lv0rz2o.php\
    \ on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0lv0rz2o.php:25\n\
    Stack trace:\n#0 /tmp/tmp0lv0rz2o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0lv0rz2o.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  if (count($l) > 1) {\n    $first = $l[0];\n    $increasing = $first < $l[1];\n\
    \    for ($i = 2; $i < count($l); $i++) {\n      if (($increasing && $l[$i] <\
    \ $l[$i - 1]) || (!$increasing && $l[$i] > $l[$i - 1])) {\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\n\nvar_dump(monotonic([1, 2, 4, 20]));\n\
    var_dump(monotonic([1, 20, 4, 10]));\nvar_dump(monotonic([4, 1, 0, -10]));\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $t = true;\n    $t2 = true;\n    for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n        if ($l[$i] < $l[$i + 1]) {\n            $t = false;\n        }\n\
    \        if ($l[$i] > $l[$i + 1]) {\n            $t2 = false;\n        }\n   \
    \ }\n    return $t || $t2;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $inc = false;\n  $dec = false;\n  $prev = 0;\n  foreach ($l as $i) {\n\
    \    if ($i > $prev) {\n      $inc = true;\n    } else if ($i < $prev) {\n   \
    \   $dec = true;\n    }\n    $prev = $i;\n  }\n  return $inc && !$dec || !$inc\
    \ && $dec;\n}\n$list = [1, 2, 4, 20];\n$list = [1, 20, 4, 10];\n$list = [4, 1,\
    \ 0, -10];\necho monotonic($list) ? 'True' : 'False';\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfwlbh8w.php:35\n\
    Stack trace:\n#0 /tmp/tmpnfwlbh8w.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnfwlbh8w.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $len = count($l);\n    $is_monotonic = true;\n    for ($i = 0; $i < $len\
    \ - 1; $i++) {\n        if ($is_monotonic) {\n            if ($l[$i] < $l[$i +\
    \ 1]) {\n                $is_monotonic = 1;\n            } else if ($l[$i] > $l[$i\
    \ + 1]) {\n                $is_monotonic = -1;\n            } else {\n       \
    \         $is_monotonic = false;\n            }\n        } else {\n          \
    \  if ($is_monotonic > 0 && $l[$i] > $l[$i + 1]) {\n                return false;\n\
    \            } else if ($is_monotonic < 0 && $l[$i] < $l[$i + 1]) {\n        \
    \        return false;\n            }\n        }\n    }\n    return true;\n}\n\
    \necho monotonic([1, 2, 4, 20]);\necho \"\\n\";\necho monotonic([1, 20, 4, 10]);\n\
    echo \"\\n\";\necho monotonic([4, 1, 0, -10]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mrkdm_r.php:45\n\
    Stack trace:\n#0 /tmp/tmp0mrkdm_r.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp0mrkdm_r.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  if (count($l) <= 1) {\n    return true;\n  }\n  $diff = $l[1] - $l[0];\n\
    \  $flag = true;\n  for ($i = 1; $i < count($l); $i++) {\n    if ($diff * ($l[$i]\
    \ - $l[$i - 1]) < 0) {\n      $flag = false;\n      break;\n    }\n  }\n  return\
    \ $flag;\n}\n\n$l = [1, 2, 4, 20];\nvar_dump(monotonic($l));\n$l = [1, 20, 4,\
    \ 10];\nvar_dump(monotonic($l));\n$l = [4, 1, 0, -10];\nvar_dump(monotonic($l));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $b = true;\n    $n = count($l);\n    for ($i = 0; $i < $n-1; $i++) {\n\
    \        if ($l[$i] < $l[$i+1]) {\n            $s = 1;\n            break;\n \
    \       } elseif ($l[$i] > $l[$i+1]) {\n            $s = -1;\n            break;\n\
    \        }\n    }\n    for ($i = 0; $i < $n-1; $i++) {\n        if ($s*($l[$i]\
    \ - $l[$i+1]) < 0) {\n            $b = false;\n            break;\n        }\n\
    \    }\n    return $b;\n}\n\n$l = [1, 2, 4, 20];\n$b = monotonic($l);\nprint $b;\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv_n6vl4.php:38\n\
    Stack trace:\n#0 /tmp/tmpuv_n6vl4.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpuv_n6vl4.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $result = true;\n    $inc = $l[0] < $l[1];\n    $dec = $l[0] > $l[1];\n\
    \    for ($i = 1; $i < count($l) - 1; $i++) {\n        if ($inc) {\n         \
    \   if ($l[$i] > $l[$i + 1]) {\n                $result = false;\n           \
    \     break;\n            }\n        } elseif ($dec) {\n            if ($l[$i]\
    \ < $l[$i + 1]) {\n                $result = false;\n                break;\n\
    \            }\n        } else {\n            $result = false;\n            break;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0co5rh6.php:44\n\
    Stack trace:\n#0 /tmp/tmpx0co5rh6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpx0co5rh6.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $state = 0;\n  foreach ($l as $i => $v) {\n    if ($i === 0) {\n      continue;\n\
    \    }\n    if ($state === 0) {\n      if ($v > $l[$i - 1]) {\n        $state\
    \ = 1;\n      } else if ($v < $l[$i - 1]) {\n        $state = -1;\n      }\n \
    \   } else if ($state > 0) {\n      if ($v < $l[$i - 1]) {\n        return false;\n\
    \      }\n    } else if ($state < 0) {\n      if ($v > $l[$i - 1]) {\n       \
    \ return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3d0vvwj.php:18\n\
    Stack trace:\n#0 /tmp/tmpp3d0vvwj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp3d0vvwj.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $d = $l[1] - $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n     \
    \   if ($d == 0) {\n            $d = $l[$i] - $l[$i - 1];\n        } elseif ($d\
    \ > 0) {\n            if ($l[$i] - $l[$i - 1] < 0) {\n                return false;\n\
    \            }\n        } else {\n            if ($l[$i] - $l[$i - 1] > 0) {\n\
    \                return false;\n            }\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  if(count($l) <= 1) return True;\n  else if($l[0] < $l[1]) {\n    for($i\
    \ = 0; $i < count($l) - 1; $i++) {\n      if($l[$i] > $l[$i + 1]) return False;\n\
    \    }\n  } else if($l[0] > $l[1]) {\n    for($i = 0; $i < count($l) - 1; $i++)\
    \ {\n      if($l[$i] < $l[$i + 1]) return False;\n    }\n  }\n  return True;\n\
    }\n\n$a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n$b = [9, 8, 7, 6, 5, 4, 3, 2, 1, 0];\n\
    $c = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18];\n$d = [18, 16, 14, 12, 10, 8, 6, 4,\
    \ 2, 0];\n$e = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$f = [9, 8, 7, 6, 5, 4, 3,\
    \ 2, 1, 0, 1];\n$g = [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1];\n$h = [1, 2, 3, 4, 5,\
    \ 4, 3, 2, 1, 0, -1];\n$i = [1, 2, 3, 4, 5, 6, 4, 3, 2, 1, 0];\n$j = [0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 9];\n$k = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\nassert(monotonic($a));\n\
    assert(monotonic($b));\nassert(monotonic($c));\nassert(monotonic($d));\nassert(monotonic($e));\n\
    assert(!monotonic($f));\nassert(monotonic($g));\nassert(!monot\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpob_0xak6.php on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$ascending = $descending = true;\n\tfor ($i = 0; $i < count($l)-1; $i++)\
    \ {\n\t\tif ($l[$i] > $l[$i+1]) {\n\t\t\t$ascending = false;\n\t\t}\n\t\tif ($l[$i]\
    \ < $l[$i+1]) {\n\t\t\t$descending = false;\n\t\t}\n\t}\n\treturn $ascending ||\
    \ $descending;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $monotonic = true;\n  $monotonic = $monotonic && $l[0] <= $l[1];\n  $monotonic\
    \ = $monotonic && $l[1] <= $l[2];\n  $monotonic = $monotonic && $l[2] <= $l[3];\n\
    \  return $monotonic;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvx4daztt.php:24\n\
    Stack trace:\n#0 /tmp/tmpvx4daztt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpvx4daztt.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $n = sizeof($l);\n  if ($n < 2) {\n    return TRUE;\n  }\n  $sign = $l[1]\
    \ - $l[0];\n  for ($i = 2; $i < $n; $i++) {\n    if ($sign * ($l[$i] - $l[$i -\
    \ 1]) < 0) {\n      return FALSE;\n    }\n  }\n  return TRUE;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $inc = false;\n    $dec = false;\n    $last = $l[0];\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] > $last) {\n            $inc = true;\n\
    \        } else if ($l[$i] < $last) {\n            $dec = true;\n        }\n \
    \       $last = $l[$i];\n    }\n    return $inc && !$dec || !$inc && $dec;\n}\n\
    \necho monotonic([1, 2, 4, 20]);\necho \"<br>\";\necho monotonic([1, 20, 4, 10]);\n\
    echo \"<br>\";\necho monotonic([4, 1, 0, -10]);\necho \"<br>\";\necho monotonic([4,\
    \ 4, 4, -10]);\necho \"<br>\";\necho monotonic([1, 1, 1, -10]);\necho \"<br>\"\
    ;\necho monotonic([-10, -10, -10, -10]);\necho \"<br>\";\necho monotonic([-10,\
    \ -10, -20, -30]);\necho \"<br>\";\necho monotonic([-10, -20, -30, -30]);\necho\
    \ \"<br>\";\necho monotonic([-30, -20, -10, -10]);\necho \"<br>\";\necho monotonic([-30,\
    \ -30, -20, -10]);\necho \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br>1<br>1<br><br>1<br>1<br>1<br>1<br>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpv94umihd.php:56\nStack trace:\n#0 /tmp/tmpv94umihd.php(59):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpv94umihd.php on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $increasing = $decreasing = true;\n  for ($i = 0; $i < count($l)-1; $i++)\
    \ {\n    if ($l[$i] > $l[$i+1]) {\n      $increasing = false;\n    }\n    if ($l[$i]\
    \ < $l[$i+1]) {\n      $decreasing = false;\n    }\n  }\n  return $increasing\
    \ || $decreasing;\n}\n\n$a = [1, 2, 4, 20];\n$b = [1, 20, 4, 10];\n$c = [4, 1,\
    \ 0, -10];\n\necho monotonic($a);\necho \"\\n\";\necho monotonic($b);\necho \"\
    \\n\";\necho monotonic($c);\necho \"\\n\";\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $length = count($l);\n    for ($i = 0; $i < $length - 1; $i++) {\n  \
    \      if (($l[$i] < $l[$i + 1]) && ($l[$i + 1] < $l[$i + 2])) {\n           \
    \ return false;\n        }\n        if (($l[$i] > $l[$i + 1]) && ($l[$i + 1] >\
    \ $l[$i + 2])) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tf057ka.php:27\n\
    Stack trace:\n#0 /tmp/tmp2tf057ka.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2tf057ka.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (sizeof($l) <= 1) {\n        return true;\n    }\n\n    $increasing\
    \ = true;\n    for ($i = 1; $i < sizeof($l); $i++) {\n        if ($l[$i] > $l[$i\
    \ - 1]) {\n            $increasing = false;\n            break;\n        }\n \
    \   }\n\n    if ($increasing) {\n        return true;\n    }\n\n    $decreasing\
    \ = true;\n    for ($i = 1; $i < sizeof($l); $i++) {\n        if ($l[$i] < $l[$i\
    \ - 1]) {\n            $decreasing = false;\n            break;\n        }\n \
    \   }\n\n    return $decreasing;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $previous = null;\n    $increasing = null;\n    foreach ($l as $current)\
    \ {\n        if ($previous === null) {\n            $previous = $current;\n  \
    \          continue;\n        }\n        if ($increasing === null) {\n       \
    \     $increasing = $current > $previous;\n            $previous = $current;\n\
    \            continue;\n        }\n        if ($increasing && $current < $previous)\
    \ {\n            return false;\n        }\n        if (!$increasing && $current\
    \ > $previous) {\n            return false;\n        }\n        $previous = $current;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (sizeof($l) == 1) {\n        return True;\n    }\n    if ($l[0] >\
    \ $l[1]) {\n        $ascending = False;\n    } else {\n        $ascending = True;\n\
    \    }\n    for ($i = 1; $i < sizeof($l) - 1; $i++) {\n        if ($ascending\
    \ && $l[$i] > $l[$i + 1]) {\n            return False;\n        }\n        if\
    \ (!$ascending && $l[$i] < $l[$i + 1]) {\n            return False;\n        }\n\
    \    }\n    return True;\n}\n$l = [1, 20, 4, 10];\n$output = monotonic($l);\n\
    print_r($output);\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) <= 1) {\n        return true;\n    }\n    $flag = ($l[1]\
    \ <=> $l[0]);\n    for ($i = 1; $i < count($l); $i++) {\n        if ($flag !=\
    \ ($l[$i] <=> $l[$i - 1])) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\n$l = [1, 2, 4, 20];\nvar_dump(monotonic($l));\n\n$l = [1,\
    \ 20, 4, 10];\nvar_dump(monotonic($l));\n\n$l = [4, 1, 0, -10];\nvar_dump(monotonic($l));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp5x7azlyl.php:39\nStack trace:\n#0 /tmp/tmp5x7azlyl.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5x7azlyl.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$l = array_diff($l, [$l[0]]);\n\treturn all(function($i) use ($l){\n\t\t\
    return $i == max($l) || $i == min($l);\n\t}, $l);\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function all() in /tmp/tmpn3siy6ou.php:11\n\
    Stack trace:\n#0 /tmp/tmpn3siy6ou.php(16): monotonic(Array)\n#1 /tmp/tmpn3siy6ou.php(20):\
    \ candidate(Array)\n#2 /tmp/tmpn3siy6ou.php(30): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpn3siy6ou.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  if (empty($l)) return True;\n  $is_increasing = null;\n  $last = $l[0];\n\
    \  for ($i = 1; $i < count($l); $i++) {\n    if ($is_increasing == null) {\n \
    \     if ($l[$i] > $last) {\n        $is_increasing = True;\n      } else if ($l[$i]\
    \ < $last) {\n        $is_increasing = False;\n      }\n    } else if ($is_increasing\
    \ == True && $l[$i] < $last) {\n      return False;\n    } else if ($is_increasing\
    \ == False && $l[$i] > $last) {\n      return False;\n    }\n    $last = $l[$i];\n\
    \  }\n  return True;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) <= 1) {\n        return true;\n    }\n    $isIncreasing\
    \ = $l[0] < $l[1];\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if ($isIncreasing\
    \ && $l[$i] > $l[$i + 1]) {\n            return false;\n        }\n        if\
    \ (!$isIncreasing && $l[$i] < $l[$i + 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $s = $l[0];\n    $i = 1;\n    while ($i < count($l)) {\n        if ($l[$i]\
    \ == $s) {\n            $i++;\n            continue;\n        }\n        elseif\
    \ (($l[$i] > $s && $l[$i-1] > $s) || ($l[$i] < $s && $l[$i-1] < $s)) {\n     \
    \       $i++;\n            continue;\n        }\n        else {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n$l = [1, 2, 4, 20];\necho \"\
    monotonic([1, 2, 4, 20]) = \" . monotonic($l) . \"\\n\";\n$l = [1, 20, 4, 10];\n\
    echo \"monotonic([1, 20, 4, 10]) = \" . monotonic($l) . \"\\n\";\n$l = [4, 1,\
    \ 0, -10];\necho \"monotonic([4, 1, 0, -10]) = \" . monotonic($l) . \"\\n\";\n\
    $l = [20, 20, 4, 10];\necho \"monotonic([20, 20, 4, 10]) = \" . monotonic($l)\
    \ . \"\\n\";\n$l = [4, 1, 1, 0, -10];\necho \"monotonic([4, 1, 1, 0, -10]) = \"\
    \ . monotonic($l) . \"\\n\";\n$l = [4, 1, 1, 0, -10, -10];\necho \"monotonic([4,\
    \ 1, 1, 0, -10, -10]) = \" . monotonic($l) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "monotonic([1, 2, 4, 20]) = \nmonotonic([1, 20, 4, 10]) = \nmonotonic([4,\
    \ 1, 0, -10]) = \nmonotonic([20, 20, 4, 10]) = \nmonotonic([4, 1, 1, 0, -10])\
    \ = \nmonotonic([4, 1, 1, 0, -10, -10]) = \n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmprr5ztmyg.php:45\nStack trace:\n#0 /tmp/tmprr5ztmyg.php(55):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprr5ztmyg.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) < 3) {\n        return true;\n    }\n    $increasing =\
    \ $l[0] < $l[1];\n    for ($i = 1; $i < count($l) - 1; $i++) {\n        if ($increasing)\
    \ {\n            if ($l[$i] > $l[$i + 1]) {\n                return false;\n \
    \           }\n        } else {\n            if ($l[$i] < $l[$i + 1]) {\n    \
    \            return false;\n            }\n        }\n    }\n    return true;\n\
    }\necho monotonic([1, 2, 4, 20]) ? 'True' : 'False';\necho PHP_EOL;\necho monotonic([1,\
    \ 20, 4, 10]) ? 'True' : 'False';\necho PHP_EOL;\necho monotonic([4, 1, 0, -10])\
    \ ? 'True' : 'False';\necho PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFalse\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$i = 1;\n\t$isIncreasing = $l[0] < $l[1];\n\twhile ($i < count($l) - 1)\
    \ {\n\t\tif ($isIncreasing) {\n\t\t\tif ($l[$i] > $l[$i + 1]) {\n\t\t\t\treturn\
    \ False;\n\t\t\t}\n\t\t} else {\n\t\t\tif ($l[$i] < $l[$i + 1]) {\n\t\t\t\treturn\
    \ False;\n\t\t\t}\n\t\t}\n\t\t$i += 1;\n\t}\n\treturn True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) === 0) {\n        return true;\n    }\n\n    $dir = 0;\n\
    \n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $l[$i - 1]) {\n\
    \            if ($dir < 0) {\n                return false;\n            }\n \
    \           $dir = 1;\n        } elseif ($l[$i] < $l[$i - 1]) {\n            if\
    \ ($dir > 0) {\n                return false;\n            }\n            $dir\
    \ = -1;\n        }\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $ans = true;\n  for ($i = 0; $i < count($l) - 1; $i++) {\n    if ($l[$i]\
    \ > $l[$i + 1]) {\n      $ans = false;\n      break;\n    }\n  }\n  return $ans;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeemqv_9j.php:28\n\
    Stack trace:\n#0 /tmp/tmpeemqv_9j.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpeemqv_9j.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $len = count($l);\n    if ($len === 0) {\n        return true;\n    }\n\
    \    $i = 0;\n    $inc = 0;\n    $dec = 0;\n    while ($i < $len - 1) {\n    \
    \    if ($l[$i] > $l[$i + 1]) {\n            $dec++;\n        } else if ($l[$i]\
    \ < $l[$i + 1]) {\n            $inc++;\n        }\n        $i++;\n    }\n    return\
    \ $inc === 0 || $dec === 0;\n}\n\necho monotonic([1, 2, 4, 20]);\necho monotonic([1,\
    \ 20, 4, 10]);\necho monotonic([4, 1, 0, -10]);\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $monotonic = TRUE;\n    $increase = 0;\n    for ($i = 0; $i < count($l);\
    \ $i++) {\n        if ($increase == 0) {\n            if ($l[$i] > $l[$i+1]) {\n\
    \                $increase = -1;\n            } elseif ($l[$i] < $l[$i+1]) {\n\
    \                $increase = 1;\n            }\n        } elseif ($increase ==\
    \ 1) {\n            if ($l[$i] > $l[$i+1]) {\n                $monotonic = FALSE;\n\
    \                break;\n            }\n        } elseif ($increase == -1) {\n\
    \            if ($l[$i] < $l[$i+1]) {\n                $monotonic = FALSE;\n \
    \               break;\n            }\n        }\n    }\n    return $monotonic;\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp9nf7m_u.php:38\n\
    Stack trace:\n#0 /tmp/tmpp9nf7m_u.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpp9nf7m_u.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $s = $l[0];\n    $res = 1;\n    foreach ($l as $e) {\n        if (($s\
    \ > $e && $res < 0) || ($s < $e && $res > 0)) {\n            return False;\n \
    \       }\n        if ($s < $e) {\n            $res = 1;\n        } elseif ($s\
    \ > $e) {\n            $res = -1;\n        }\n        $s = $e;\n    }\n    return\
    \ True;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3jzila5.php:31\n\
    Stack trace:\n#0 /tmp/tmpz3jzila5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpz3jzila5.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $monotonic = \"\";\n    for ($i = 0; $i < count($l) - 1; $i++) {\n  \
    \      if ($l[$i] == $l[$i + 1]) {\n            $monotonic = \"true\";\n     \
    \   } elseif ($l[$i] < $l[$i + 1]) {\n            $monotonic = \"descending\"\
    ;\n        } elseif ($l[$i] > $l[$i + 1]) {\n            $monotonic = \"ascending\"\
    ;\n        }\n    }\n    if ($monotonic == \"true\") {\n        return \"True\"\
    ;\n    } elseif ($monotonic == \"descending\" || $monotonic == \"ascending\")\
    \ {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n\
    }\necho monotonic([4, 1, 0, -10]) . \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbesj44u.php:35\n\
    Stack trace:\n#0 /tmp/tmplbesj44u.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplbesj44u.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if(count($l)<2) return true;\n    $decreasing=true;\n    $increasing=true;\n\
    \    for($i=1;$i<count($l);$i++) {\n        if($l[$i]<$l[$i-1]) {\n          \
    \  $increasing=false;\n        }\n        if($l[$i]>$l[$i-1]) {\n            $decreasing=false;\n\
    \        }\n    }\n    return $increasing || $decreasing;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $lmonotonic = true;\n    $lincreasing = null;\n    $lprev = null;\n \
    \   foreach ($l as $litem) {\n        if ($lprev !== null) {\n            if ($lincreasing\
    \ === null) {\n                $lincreasing = $litem > $lprev;\n            }\
    \ else {\n                if ($lincreasing !== ($litem > $lprev)) {\n        \
    \            $lmonotonic = false;\n                    break;\n              \
    \  }\n            }\n        }\n        $lprev = $litem;\n    }\n    return $lmonotonic;\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    // YOUR CODE HERE\n    return FALSE;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qxy17_w.php:19\n\
    Stack trace:\n#0 /tmp/tmp7qxy17_w.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7qxy17_w.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    if (count($l) == 1) {\n        return true;\n    }\n    else {\n    \
    \    if ($l[0] < $l[1]) {\n            for ($i = 1; $i < count($l); $i++) {\n\
    \                if ($l[$i - 1] > $l[$i]) {\n                    return false;\n\
    \                }\n            }\n            return true;\n        }\n     \
    \   else if ($l[0] > $l[1]) {\n            for ($i = 1; $i < count($l); $i++)\
    \ {\n                if ($l[$i - 1] < $l[$i]) {\n                    return false;\n\
    \                }\n            }\n            return true;\n        }\n     \
    \   else {\n            return monotonic(array_slice($l, 1));\n        }\n   \
    \ }\n}\n\n$l = [1, 2, 4, 20];\necho monotonic($l) . PHP_EOL;\n$l = [1, 20, 4,\
    \ 10];\necho monotonic($l) . PHP_EOL;\n$l = [4, 1, 0, -10];\necho monotonic($l)\
    \ . PHP_EOL;\n$l = [1, 1, 1, 2];\necho monotonic($l) . PHP_EOL;\n$l = [4, 1, 1,\
    \ -10];\necho monotonic($l) . PHP_EOL;\n$l = [1, 2, 3, 4];\necho monotonic($l)\
    \ . PHP_EOL;\n$l = [1, 2, 2, 2];\necho monotonic($l) . PHP_EOL;\n$l = [1, 1, 1,\
    \ 1];\necho monotonic($l) . PHP_EOL;\n$l = [1];\necho monotonic($l) . PHP_EOL;\n\
    $l = [];\necho monotonic($l) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n1\n1\n1\n1\n1\n1\n\nFatal error: Allowed memory size of 134217728\
    \ bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmp3sro6zy1.php on\
    \ line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n\t$compare = null;\n\tforeach ($l as $i) {\n\t\tif ($compare === null) {\n\
    \t\t\t$compare = $i;\n\t\t} else {\n\t\t\tif (($compare > $i && $compare < $i)\
    \ || ($compare < $i && $compare > $i)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\
    \t$compare = $i;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ijcc0or.php:31\n\
    Stack trace:\n#0 /tmp/tmp7ijcc0or.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ijcc0or.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $inc = true;\n    $dec = true;\n    for ($i = 0; $i < count($l) - 1;\
    \ $i++) {\n        if ($l[$i] < $l[$i + 1]) {\n            $dec = false;\n   \
    \     }\n        if ($l[$i] > $l[$i + 1]) {\n            $inc = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\nprint (monotonic([1, 2, 4, 20]));\n\
    print (\"\\n\");\nprint (monotonic([1, 20, 4, 10]));\nprint (\"\\n\");\nprint\
    \ (monotonic([4, 1, 0, -10]));\nprint (\"\\n\");\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK

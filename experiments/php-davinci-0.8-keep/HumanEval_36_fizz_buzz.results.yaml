name: HumanEval_36_fizz_buzz
language: php
results:
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 7; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            if (contains($i, 7)) {\n                $count\
    \ += 1;\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function contains() in\
    \ /tmp/tmpxtdi7gg7.php:13\nStack trace:\n#0 /tmp/tmpxtdi7gg7.php(22): fizz_buzz(50)\n\
    #1 /tmp/tmpxtdi7gg7.php(26): candidate(50)\n#2 /tmp/tmpxtdi7gg7.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxtdi7gg7.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $num = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0) {\n\
    \            $num += substr_count($i, '7');\n        } elseif ($i % 13 == 0) {\n\
    \            $num += substr_count($i, '7');\n        }\n    }\n    return $num;\n\
    }\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\necho fizz_buzz(79)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $str = '';\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $str .= $i;\n        }\n    }\n    return substr_count($str,\
    \ '7');\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $out = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $num = (string)$i;\n            for ($j = 0; $j\
    \ < strlen($num); $j++) {\n                if ($num[$j] == 7) {\n            \
    \        $out++;\n                }\n            }\n        }\n    }\n    return\
    \ $out;\n}\necho fizz_buzz(50);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: '0'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if ($n < 0) {\n        return -1;\n    }\n    $count = 0;\n    $n2 = $n;\n\
    \    while ($n2 > 0) {\n        if ($n2 % 10 == 7) {\n            $count++;\n\
    \        }\n        $n2 = floor($n2 / 10);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmsmxnelu.php:30\n\
    Stack trace:\n#0 /tmp/tmpmsmxnelu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmsmxnelu.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0)\
    \ || ($i % 13 == 0)) {\n            $count += substr_count(strval($i), '7');\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (($i % 11 == 0 || $i % 13\
    \ == 0) && strstr($i, '7')) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\necho fizz_buzz(79)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn758_3pb.php:28\n\
    Stack trace:\n#0 /tmp/tmpn758_3pb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpn758_3pb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    if($n % 11 == 0 || $n % 13 == 0) {\n\t\treturn preg_match_all('/7/', $n);\n\t\
    }\n\telse {\n\t\treturn fizz_buzz($n - 1);\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpqhgar1.php:24\n\
    Stack trace:\n#0 /tmp/tmpfpqhgar1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfpqhgar1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (($i % 11 == 0 || $i % 13\
    \ == 0) && strpos($i, \"7\") !== false) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3xh8xp6.php:25\n\
    Stack trace:\n#0 /tmp/tmpm3xh8xp6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpm3xh8xp6.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $counter = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i\
    \ % 13 == 0) {\n      $numbers = preg_split('//', $i, -1, PREG_SPLIT_NO_EMPTY);\n\
    \      for ($j = 0; $j < count($numbers); $j++) {\n        if ($numbers[$j] ==\
    \ 7) {\n          $counter++;\n        }\n      }\n    }\n  }\n  return $counter;\n\
    }\n\necho fizz_buzz(50) . \"<br />\";\necho fizz_buzz(78) . \"<br />\";\necho\
    \ fizz_buzz(79) . \"<br />\";\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: 0<br />2<br />3<br />
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count=0;\n    for($i=0;$i<$n;$i++){\n        if((($i % 11) == 0) || (($i\
    \ % 13) == 0)){\n            $numArr = str_split($i);\n            foreach($numArr\
    \ as $num){\n                if($num == 7){\n                    $count++;\n \
    \               }\n            }\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $total = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $total += number_of_7($i);\n        }\n    }\n\
    \    return $total;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_of_7()\
    \ in /tmp/tmpyaaljwsq.php:13\nStack trace:\n#0 /tmp/tmpyaaljwsq.php(20): fizz_buzz(50)\n\
    #1 /tmp/tmpyaaljwsq.php(24): candidate(50)\n#2 /tmp/tmpyaaljwsq.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyaaljwsq.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $cnt = 0;\n\tfor ($i = 11; $i < $n; $i += 11) {\n\t\tif ($i % 13 == 0) {\n\t\t\
    \t$i += 11;\n\t\t}\n\t\t$cnt += substr_count(strval($i), '7');\n\t}\n\treturn\
    \ $cnt;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt40ex5hw.php:27\n\
    Stack trace:\n#0 /tmp/tmpt40ex5hw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt40ex5hw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $num = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $count = substr_count((string)$i, '7');\n     \
    \       $num += $count;\n        }\n    }\n    return $num;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  if ($n < 0) return false;\n  $times = 0;\n  for ($i = 1; $i < $n; $i++) {\n\
    \    if (($i % 11 == 0 || $i % 13 == 0) && strpos(strval($i), '7') != false) {\n\
    \      $times++;\n    }\n  }\n  return $times;\n}\necho fizz_buzz(50);\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpet3h13ag.php:26\n\
    Stack trace:\n#0 /tmp/tmpet3h13ag.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpet3h13ag.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $result = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $num_str = strval($i);\n      $seven_cnt = substr_count($num_str,\
    \ '7');\n      $result += $seven_cnt;\n    }\n  }\n  return $result;\n}\n\n$ret\
    \ = fizz_buzz(50);\nvar_dump($ret);\n\n$ret = fizz_buzz(78);\nvar_dump($ret);\n\
    \n$ret = fizz_buzz(79);\nvar_dump($ret);\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(0)\nint(2)\nint(3)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            $arr = str_split($i);\n            for ($j\
    \ = 0; $j < count($arr); $j++) {\n                if ($arr[$j] == 7) {\n     \
    \               $counter++;\n                }\n            }\n        }\n   \
    \ }\n    return $counter;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 11; $i < $n; $i+=11) {\n        if ($i % 11 ===\
    \ 0) {\n            $count += 1;\n        }\n    }\n    for ($i = 13; $i < $n;\
    \ $i+=13) {\n        if ($i % 13 === 0) {\n            $count += 1;\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnibftb6.php:28\n\
    Stack trace:\n#0 /tmp/tmpcnibftb6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcnibftb6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if (!is_numeric($n)) {\n        return false;\n    }\n    $sum = 0;\n   \
    \ for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n\
    \            $sum += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 7; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      if (strpos($i, '7') !== false) {\n        $count++;\n    \
    \  }\n    }\n  }\n  return $count;\n}\n\necho fizz_buzz(50);\necho \"\\n\";\n\
    echo fizz_buzz(78);\necho \"\\n\";\necho fizz_buzz(79);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ehgmrm6.php:33\n\
    Stack trace:\n#0 /tmp/tmp0ehgmrm6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0ehgmrm6.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count=0;\n\t$num=11;\n\twhile ($num < $n) {\n\t\t$count += subStr_count($num,\
    \ 7);\n\t\t$num += 11;\n\t}\n\t$num=13;\n\twhile ($num < $n) {\n\t\t$count +=\
    \ subStr_count($num, 7);\n\t\t$num += 13;\n\t}\n\treturn $count;\n}\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahgo7c8o.php:33\n\
    Stack trace:\n#0 /tmp/tmpahgo7c8o.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpahgo7c8o.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\t$number = $n;\n\twhile ($number > 0) {\n\t\tif (($number % 10)\
    \ == 7) {\n\t\t\t$count++;\n\t\t}\n\t\t$number = (int)($number / 10);\n\t}\n\t\
    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgke8me8w.php:27\n\
    Stack trace:\n#0 /tmp/tmpgke8me8w.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgke8me8w.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  // your code here\n  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if (($i\
    \ % 11 == 0 || $i % 13 == 0) && strpos($i, \"7\") !== false) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfizz_buzz(50);\nfizz_buzz(78);\nfizz_buzz(79);\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpet9ka8p6.php:29\n\
    Stack trace:\n#0 /tmp/tmpet9ka8p6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpet9ka8p6.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (digits($i, 7)\
    \ && ($i % 11 == 0 || $i % 13 == 0))\n            $count++;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function digits() in /tmp/tmp1hb0e7kw.php:12\n\
    Stack trace:\n#0 /tmp/tmp1hb0e7kw.php(19): fizz_buzz(50)\n#1 /tmp/tmp1hb0e7kw.php(23):\
    \ candidate(50)\n#2 /tmp/tmp1hb0e7kw.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp1hb0e7kw.php\
    \ on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (0 == $i % 11\
    \ || 0 == $i % 13) {\n            $counter += substr_count($i, 7);\n        }\n\
    \    }\n    return $counter;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $p = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n\t\t\t$p += substr_count((string)$i, \"7\");\n\t\t}\n\t}\n\treturn $p;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    // your code here\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppaebovq5.php:17\n\
    Stack trace:\n#0 /tmp/tmppaebovq5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppaebovq5.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $result = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $result += count_digit($i, 7);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_digit()\
    \ in /tmp/tmpnw_wek0c.php:13\nStack trace:\n#0 /tmp/tmpnw_wek0c.php(20): fizz_buzz(50)\n\
    #1 /tmp/tmpnw_wek0c.php(24): candidate(50)\n#2 /tmp/tmpnw_wek0c.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnw_wek0c.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // Your code here\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk34z5g06.php:18\n\
    Stack trace:\n#0 /tmp/tmpk34z5g06.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpk34z5g06.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $sum = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0)\
    \ || ($i % 13 == 0)) {\n            $tmp = $i;\n            while ($tmp != 0)\
    \ {\n                if ($tmp % 10 == 7) {\n                    $sum += 1;\n \
    \               }\n                $tmp = (int)($tmp / 10);\n            }\n \
    \       }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ or $i % 13 == 0) {\n            $count += substr_count($i, 7);\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $digit = 7;\n    $number_times = 0;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        if ($i % 11 == 0 || $i % 13 == 0) {\n            $number_times += substr_count((string)$i,\
    \ (string)$digit);\n        }\n    }\n    return $number_times;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $count += substr_count($i, 7);\n    }\n  }\n  return $count;\n\
    }\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$count += substr_count($i, 7);\n\t\t}\n\t}\n\treturn $count;\n\
    }\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $mod = 11;\n    $div = 13;\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        if (nummod($i, $mod) == 0 || nummod($i, $div) == 0) {\n         \
    \   $sum += strlen(str_replace('7', '', (string)$i));\n        }\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function nummod() in /tmp/tmp4y9pu5yh.php:14\n\
    Stack trace:\n#0 /tmp/tmp4y9pu5yh.php(22): fizz_buzz(50)\n#1 /tmp/tmp4y9pu5yh.php(26):\
    \ candidate(50)\n#2 /tmp/tmp4y9pu5yh.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp4y9pu5yh.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (($i % 11 === 0 || $i % 13\
    \ === 0) && strpos($i, \"7\") !== false) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\necho fizz_buzz(50);\necho \"\\n\";\necho fizz_buzz(78);\necho\
    \ \"\\n\";\necho fizz_buzz(79);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7lt7muv.php:32\n\
    Stack trace:\n#0 /tmp/tmpr7lt7muv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr7lt7muv.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $i = (string)$i;\n            $count += substr_count($i,\
    \ '7');\n        }\n    }\n    return $count;\n}\n\necho fizz_buzz(50) . \"\\\
    n\";\necho fizz_buzz(78) . \"\\n\";\necho fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $result = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$currentNumber = (string)$i;\n\t\t\tfor ($k = 0; $k < strlen($currentNumber);\
    \ $k++) {\n\t\t\t\tif ($currentNumber[$k] == '7') {\n\t\t\t\t\t$result++;\n\t\t\
    \t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if (($i % 11 == 0 || $i %\
    \ 13 == 0) && strpos($i, '7') !== false) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6461std.php:24\n\
    Stack trace:\n#0 /tmp/tmpl6461std.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl6461std.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0)\
    \ || ($i % 13 == 0)) {\n            $i = (string)$i;\n            $i = str_split($i);\n\
    \            for ($j = 0; $j < count($i); $j++) {\n                if ($i[$j]\
    \ == 7) {\n                    $count++;\n                }\n            }\n \
    \       }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcp6414pf.php:30\n\
    Stack trace:\n#0 /tmp/tmpcp6414pf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcp6414pf.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            if (substr_count($i, 7) > 0) {\n           \
    \     $result++;\n            }\n        }\n    }\n    return $result;\n}\n\n\
    echo fizz_buzz(89);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2bwgosk.php:28\n\
    Stack trace:\n#0 /tmp/tmpv2bwgosk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv2bwgosk.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if ($n < 11) {\n        return 0;\n    }\n\n    $count = 0;\n    $nb_7 =\
    \ '';\n    $i = 11;\n    while (strlen($nb_7) < $n) {\n        $nb_7 .= '7';\n\
    \        $count += substr_count($nb_7, '7');\n        $i += 11;\n    }\n\n   \
    \ return $count;\n}\n\necho fizz_buzz(50);\necho PHP_EOL;\necho fizz_buzz(78);\n\
    echo PHP_EOL;\necho fizz_buzz(79);\necho PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1275\n3081\n3160\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoj9auh8b.php:37\n\
    Stack trace:\n#0 /tmp/tmpoj9auh8b.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpoj9auh8b.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $numbers_list = range(1, $n);\n\t$divisible_eleven_thirteen = array_filter($numbers_list,\
    \ function($v) {\n\t\treturn $v % 11 == 0 || $v % 13 == 0;\n\t});\n\t$seven_count\
    \ = 0;\n\tforeach ($divisible_eleven_thirteen as $v) {\n\t\t$seven_count += substr_count($v,\
    \ '7');\n\t}\n\treturn $seven_count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjzjdtyn6.php:27\n\
    Stack trace:\n#0 /tmp/tmpjzjdtyn6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjzjdtyn6.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $result = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if (($i % 11 === 0 || $i\
    \ % 13 === 0) && strpos((string)$i, '7') !== false) {\n      $result++;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3l387j77.php:25\n\
    Stack trace:\n#0 /tmp/tmp3l387j77.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3l387j77.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (strpos((string)$i,\
    \ '7') !== false && ($i % 11 == 0 || $i % 13 == 0)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfyiw0uv_.php:24\n\
    Stack trace:\n#0 /tmp/tmpfyiw0uv_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfyiw0uv_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0) {\n   \
    \   $count += substr_count($i, '7');\n    } else if ($i % 13 == 0) {\n      $count\
    \ += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, \"7\");\n\
    \        }\n    }\n    return $count;\n}\n\necho fizz_buzz(50) . \"\\n\";\necho\
    \ fizz_buzz(78) . \"\\n\";\necho fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (($i % 11 == 0 || $i %\
    \ 13 == 0) && strpos((string)$i, '7') !== false) {\n      $count++;\n    }\n \
    \ }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptu3n67my.php:25\n\
    Stack trace:\n#0 /tmp/tmptu3n67my.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptu3n67my.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $result = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $result += substr_count(strval($i), '7');\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $num = $i;\n            while ($num > 0) {\n\
    \                if ($num % 10 == 7) {\n                    $count++;\n      \
    \          }\n                $num = (int)($num / 10);\n            }\n      \
    \  }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // return $n;\n    $arr = array();\n    for ($i = 0; $i < $n; $i++) {\n \
    \       if ($i % 11 == 0 || $i % 13 == 0) {\n            $arr[] = $i;\n      \
    \  }\n    }\n    $result = 0;\n    foreach ($arr as $num) {\n        $num = (string)$num;\n\
    \        $result += substr_count($num, \"7\");\n    }\n    return $result;\n}\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (($i % 11 == 0 || $i %\
    \ 13 == 0) && stripos($i, '7') !== false) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\n\
    echo fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwb0tj0lq.php:28\n\
    Stack trace:\n#0 /tmp/tmpwb0tj0lq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwb0tj0lq.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $sum = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $sum += count_seven($i);\n        }\n    }\n  \
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_seven()\
    \ in /tmp/tmp24x89pdx.php:13\nStack trace:\n#0 /tmp/tmp24x89pdx.php(20): fizz_buzz(50)\n\
    #1 /tmp/tmp24x89pdx.php(24): candidate(50)\n#2 /tmp/tmp24x89pdx.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmp24x89pdx.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    $fizz_buzz = 0;\n    while ($fizz_buzz <= $n) {\n      \
    \  if ($fizz_buzz % 11 == 0 || $fizz_buzz % 13 == 0) {\n            if (strpos($fizz_buzz,\
    \ \"7\") !== false) {\n                $count++;\n            }\n        }\n \
    \       $fizz_buzz++;\n    }\n    return $count;\n}\necho fizz_buzz(79);\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwp5rowgu.php:30\n\
    Stack trace:\n#0 /tmp/tmpwp5rowgu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwp5rowgu.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $number = (string)$i;\n            $count +=\
    \ substr_count($number, '7');\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count($i, 7);\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif (substr_count($i, '7') >\
    \ 0 && ($i % 11 == 0 || $i % 13 == 0)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\n$ret = fizz_buzz(50);\necho $ret;\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfozkuaok.php:27\n\
    Stack trace:\n#0 /tmp/tmpfozkuaok.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfozkuaok.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $arr = [];\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $arr[] = $i;\n        }\n    }\n    $str = implode($arr);\n\
    \    return substr_count($str, 7);\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            $string = (string)$i;\n            $arr =\
    \ str_split($string);\n            foreach ($arr as $val) {\n                if\
    \ ($val == 7) {\n                    $counter++;\n                }\n        \
    \    }\n        }\n    }\n    return $counter;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ or $i % 13 == 0) {\n            $arr = str_split($i);\n            for ($j =\
    \ 0; $j < count($arr); $j++) {\n                if ($arr[$j] == 7) {\n       \
    \             $count += 1;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\necho fizz_buzz(79);\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '3'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if($n <= 0) return 0;\n    $counter = 0;\n    for($i = 1; $i < $n; $i++)\
    \ {\n        if(($i % 11 === 0) || ($i % 13 === 0)) {\n            if(has_seven($i))\
    \ $counter++;\n        }\n    }\n    return $counter;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_seven() in\
    \ /tmp/tmp931rcat5.php:14\nStack trace:\n#0 /tmp/tmp931rcat5.php(21): fizz_buzz(50)\n\
    #1 /tmp/tmp931rcat5.php(25): candidate(50)\n#2 /tmp/tmp931rcat5.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp931rcat5.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $n %= 47;\n    $n %= 13;\n    $n %= 11;\n    return $n;\n}\necho fizz_buzz(47);\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1f8hk7vz.php:21\n\
    Stack trace:\n#0 /tmp/tmp1f8hk7vz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1f8hk7vz.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 ===\
    \ 0 || $i % 13 === 0) && $i !== 0) {\n            $string = (string)$i;\n    \
    \        $counter += substr_count($string, '7');\n        }\n    }\n    return\
    \ $counter;\n}\n\necho fizz_buzz(79);\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '3'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0) {\n\t\t\t\
    $count += substr_count((string)$i, '7');\n\t\t}\n\t\tif ($i % 13 == 0) {\n\t\t\
    \t$count += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\
    echo fizz_buzz(50).\"\\n\";\necho fizz_buzz(78).\"\\n\";\necho fizz_buzz(79).\"\
    \\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n2\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpirz_ggn9.php:34\n\
    Stack trace:\n#0 /tmp/tmpirz_ggn9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpirz_ggn9.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\t$nums = array(11, 13);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tforeach\
    \ ($nums as $num) {\n\t\t\tif ($i % $num == 0) {\n\t\t\t\t$num_str = (string)$i;\n\
    \t\t\t\t$num_arr = str_split($num_str);\n\t\t\t\tforeach ($num_arr as $char) {\n\
    \t\t\t\t\tif ($char == 7) {\n\t\t\t\t\t\t$count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptziv3m4f.php:37\n\
    Stack trace:\n#0 /tmp/tmptziv3m4f.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptziv3m4f.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $str_i = strval($i);\n            for ($j = 0;\
    \ $j < strlen($str_i); $j++) {\n                if ($str_i[$j] == '7') {\n   \
    \                 $sum += 1;\n                }\n            }\n        }\n  \
    \  }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $str = '';\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $str .= (string)$i;\n        }\n    }\n    return\
    \ substr_count($str, '7');\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && strpos($i, '7') !== false) {\n            $count++;\n  \
    \      }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93a_g3dr.php:25\n\
    Stack trace:\n#0 /tmp/tmp93a_g3dr.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp93a_g3dr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            if (strpos($i, '7') !== false) {\n       \
    \         $counter++;\n            }\n        }\n    }\n    return $counter;\n\
    }\necho fizz_buzz(50).\"\\n\";\necho fizz_buzz(78).\"\\n\";\necho fizz_buzz(79).\"\
    \\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwidulvp.php:29\n\
    Stack trace:\n#0 /tmp/tmpfwidulvp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfwidulvp.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$count += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\necho fizz_buzz(50);\necho \"<br>\";\necho fizz_buzz(78);\necho\
    \ \"<br>\";\necho fizz_buzz(79);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: 0<br>2<br>3
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $nums = range(1, $n);\n    $new_nums = array_filter($nums, function($num)\
    \ {\n        return ($num % 11 == 0 || $num % 13 == 0);\n    });\n    $new_nums\
    \ = array_map(function($num) {\n        return strval($num);\n    }, $new_nums);\n\
    \    $new_nums = implode('', $new_nums);\n    return substr_count($new_nums, '7');\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcccd2_b.php:27\n\
    Stack trace:\n#0 /tmp/tmplcccd2_b.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplcccd2_b.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $cnt = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (($i % 11 == 0) || ($i % 13\
    \ == 0)) {\n\t\t\t$str = strval($i);\n\t\t\t$cnt += substr_count($str, '7');\n\
    \t\t}\n\t}\n\treturn $cnt;\n}\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78)\
    \ . \"\\n\";\necho fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return\
    \ $count;\n}\n\necho fizz_buzz(50) . '<br>';\necho fizz_buzz(78) . '<br>';\necho\
    \ fizz_buzz(79) . '<br>';\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: 0<br>2<br>3<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\necho fizz_buzz(50) . PHP_EOL;\necho fizz_buzz(78)\
    \ . PHP_EOL;\necho fizz_buzz(79) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    for ($c = 1; $c <= $n; $c++) {\n\t\techo $c % 3 ? '' : 'Fizz';\n\t\techo $c %\
    \ 5 ? '' : 'Buzz';\n\t\techo $c % 3 && $c % 5 ? $c : '';\n\t\techo '<br>';\n\t\
    }\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "1<br>2<br>Fizz<br>4<br>Buzz<br>Fizz<br>7<br>8<br>Fizz<br>Buzz<br>11<br>Fizz<br>13<br>14<br>FizzBuzz<br>16<br>17<br>Fizz<br>19<br>Buzz<br>Fizz<br>22<br>23<br>Fizz<br>Buzz<br>26<br>Fizz<br>28<br>29<br>FizzBuzz<br>31<br>32<br>Fizz<br>34<br>Buzz<br>Fizz<br>37<br>38<br>Fizz<br>Buzz<br>41<br>Fizz<br>43<br>44<br>FizzBuzz<br>46<br>47<br>Fizz<br>49<br>Buzz<br>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmppcmxqi3r.php:23\nStack\
    \ trace:\n#0 /tmp/tmppcmxqi3r.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppcmxqi3r.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $num = $i;\n            while ($num) {\n   \
    \             if ($num % 10 == 7) {\n                    $count++;\n         \
    \       }\n                $num = (int)($num / 10);\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $n = intval($n);\n\t$result = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif ($i\
    \ % 11 == 0 || $i % 13 == 0) {\n\t\t\t$result += check_digit($i, 7);\n\t\t}\n\t\
    }\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function check_digit()\
    \ in /tmp/tmp94s63gei.php:14\nStack trace:\n#0 /tmp/tmp94s63gei.php(21): fizz_buzz(50)\n\
    #1 /tmp/tmp94s63gei.php(25): candidate(50)\n#2 /tmp/tmp94s63gei.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp94s63gei.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (strpos((string)$i, '7')\
    \ !== false) {\n\t\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\necho fizz_buzz(50);\necho '<br>';\n\
    echo fizz_buzz(78);\necho '<br>';\necho fizz_buzz(79);\necho '<br>';\n\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0<br>1<br>2<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8wft07l8.php:34\n\
    Stack trace:\n#0 /tmp/tmp8wft07l8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8wft07l8.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $res = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $str = strval($i);\n            for ($j = 0; $j\
    \ < strlen($str); $j++) {\n                if ($str[$j] == '7') {\n          \
    \          $res++;\n                }\n            }\n        }\n    }\n    return\
    \ $res;\n}\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\necho\
    \ fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $s = strval($i);\n            if (strpos($s,\
    \ '7') !== false) {\n                $count++;\n            }\n        }\n   \
    \ }\n    return $count;\n}\necho fizz_buzz(50);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14560wr9.php:28\n\
    Stack trace:\n#0 /tmp/tmp14560wr9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp14560wr9.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (($i % 11 == 0) || ($i %\
    \ 13 == 0)) {\n\t\t\t$count += substr_count((string)$i, \"7\");\n\t\t}\n\t}\n\t\
    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $digits = str_split(strval($n));\n    $count = 0;\n    foreach ($digits as\
    \ $digit) {\n        if($digit == 7) {\n            $count++;\n        }\n   \
    \ }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwo8jgg2w.php:25\n\
    Stack trace:\n#0 /tmp/tmpwo8jgg2w.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwo8jgg2w.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (is_integer($i\
    \ / 11) || is_integer($i / 13)) {\n            if (substr_count($i, 7) > 0) {\n\
    \                $counter++;\n            }\n        }\n    }\n    return $counter;\n\
    }\necho fizz_buzz(50);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3z957xvs.php:27\n\
    Stack trace:\n#0 /tmp/tmp3z957xvs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3z957xvs.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $numbers = range(1, $n);\n    $seven = array_filter($numbers, function($item)\
    \ {\n        return $item % 11 == 0 || $item % 13 == 0;\n    });\n    $seven =\
    \ array_filter($seven, function($item) {\n        return strpos($item, '7') !==\
    \ false;\n    });\n    return count($seven);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjptdq_wt.php:27\n\
    Stack trace:\n#0 /tmp/tmpjptdq_wt.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjptdq_wt.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    for ($i = 0; $i < $n; $i++) {\n\t\t$i = str_replace(\"7\", \"\", $i);\n\t\tif\
    \ ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\tprint $i . \"<br>\";\n\t\t}\n\t}\n}\n\
    fizz_buzz(79);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "b'0<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tmp/tmp6zqwnd1i.php\
    \ on line 12\\n<br>\\nWarning: A non-numeric value encountered in /tm"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $arr = [];\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $arr[] = $i;\n        }\n    }\n    $str = implode($arr);\n\
    \    return substr_count($str, 7);\n}\n\necho fizz_buzz(78);\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '2'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $str = (string)$i;\n            for ($j = 0;\
    \ $j < strlen($str); $j++) {\n                if ($str[$j] == '7') {\n       \
    \             $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \   $count = 0;\n   for ($i = 1; $i < $n; $i++) {\n      if ($i % 11 == 0 || $i\
    \ % 13 == 0) {\n         $number = (string)$i;\n         $char = \"7\";\n    \
    \     for ($j = 0; $j < strlen($number); $j++) {\n            if ($number[$j]\
    \ == $char) {\n               $count++;\n            }\n         }\n      }\n\
    \   }\n   return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $digits = str_split($i);\n            foreach\
    \ ($digits as $digit) {\n                if ($digit == 7) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (($i % 11 == 0 || $i % 13\
    \ == 0) && (strpos((string)$i, '7') != false)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\
    \treturn $count;\n}\n\necho fizz_buzz(50) . '<br />';\necho fizz_buzz(78) . '<br\
    \ />';\necho fizz_buzz(79) . '<br />';\n\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0<br />0<br />0<br />\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpzl_t3vyl.php:29\nStack trace:\n#0 /tmp/tmpzl_t3vyl.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmpzl_t3vyl.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $total = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            if (strpos($i, '7') !== false) {\n         \
    \       $total++;\n            }\n        }\n    }\n    return $total;\n}\n\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplebzte0q.php:27\n\
    Stack trace:\n#0 /tmp/tmplebzte0q.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplebzte0q.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $n = min($n,1000);\n    $str= '';\n    for($i=1;$i<=$n;$i++){\n        if(($i%11\
    \ == 0 || $i%13 == 0) && strpos((string)$i,'7') !== false){\n            $str\
    \ .= $i.' ';\n        }\n    }\n    return trim($str);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43oltqjz.php:25\n\
    Stack trace:\n#0 /tmp/tmp43oltqjz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp43oltqjz.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\t$count_7 = 0;\n\t$count_11 = 0;\n\t$count_13 = 0;\n\t\n\twhile\
    \ ($count <= $n) {\n\t\t$count_7 = 0;\n\t\t$count_11 = 0;\n\t\t$count_13 = 0;\n\
    \t\tfor ($i = 0; $i < strlen($count); $i++) {\n\t\t\tif (substr($count, $i, 1)\
    \ == 7) {\n\t\t\t\t$count_7++;\n\t\t\t}\n\t\t}\n\t\tfor ($i = 0; $i < strlen($count);\
    \ $i++) {\n\t\t\tif (substr($count, $i, 1) == 11) {\n\t\t\t\t$count_11++;\n\t\t\
    \t}\n\t\t}\n\t\tfor ($i = 0; $i < strlen($count); $i++) {\n\t\t\tif (substr($count,\
    \ $i, 1) == 13) {\n\t\t\t\t$count_13++;\n\t\t\t}\n\t\t}\n\t\tif ($count_7 && ($count_11\
    \ || $count_13)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count_7;\n}\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$digits = str_split($i);\n\t\t\tforeach ($digits as $dig) {\n\
    \t\t\t\tif ($dig == 7) {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn $count;\n}\n\necho fizz_buzz(50);\necho fizz_buzz(78);\necho fizz_buzz(79);\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '023'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (($i % 11 == 0) || ($i\
    \ % 13 == 0)) {\n      $seven_count = substr_count((string)$i, \"7\");\n     \
    \ $count += $seven_count;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $num = 0;\n    $ary = [];\n    $ary[0] = $n % 11;\n    $ary[1] = $n % 13;\n\
    \    $ary[2] = $n % 7;\n    $ary[3] = $n / 7;\n    if ($ary[0] == 0 && $ary[1]\
    \ == 0) {\n        $num = $ary[3];\n    } else if ($ary[0] == 0 && $ary[1] !=\
    \ 0) {\n        $num = substr_count(strval($ary[2]), '7');\n    } else if ($ary[0]\
    \ != 0 && $ary[1] == 0) {\n        $num = substr_count(strval($ary[2]), '7');\n\
    \    } else {\n        $num = 0;\n    }\n    return $num;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxq_snx_6.php:34\n\
    Stack trace:\n#0 /tmp/tmpxq_snx_6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxq_snx_6.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$count += substr_count(strval($i), \"7\");\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\necho fizz_buzz(50);\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '0'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if ($n < 78) return 0;\n    if ($n === 78) return 2;\n    $count = 2;\n \
    \   $pow = 1;\n    $i = 79;\n    $start = 11;\n    $step = 110;\n    for (;$i\
    \ < $n;$i += $step) {\n        $count += count_seven($i, $pow) + count_seven($i\
    \ + $start, $pow);\n        $pow++;\n        $start *= 10;\n        $step *= 10;\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5if0zuja.php:33\n\
    Stack trace:\n#0 /tmp/tmp5if0zuja.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5if0zuja.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      if (strpos((string)$i, '7') !== false) {\n        $sum += 1;\n\
    \      }\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqzstpa4.php:27\n\
    Stack trace:\n#0 /tmp/tmphqzstpa4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphqzstpa4.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $x = 1;\n\t$y = 1;\n\t$z = 1;\n\t$count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\
    \t\tif ($x % 7 == 0) {\n\t\t\t$count += 1;\n\t\t}\n\t\tif ($y % 7 == 0) {\n\t\t\
    \t$count += 1;\n\t\t}\n\t\tif ($z % 7 == 0) {\n\t\t\t$count += 1;\n\t\t}\n\t\t\
    $x += 3;\n\t\t$y += 4;\n\t\t$z += 5;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp22veo5hr.php:36\n\
    Stack trace:\n#0 /tmp/tmp22veo5hr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp22veo5hr.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // If you need to loop over the numbers, use a for loop like this:\n    //\
    \ for ($i = 1; $i <= $n; $i++) { ... }\n}\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8zqn3kl2.php:18\n\
    Stack trace:\n#0 /tmp/tmp8zqn3kl2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp8zqn3kl2.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n\necho fizz_buzz(50) . \"\\n\";\necho\
    \ fizz_buzz(78) . \"\\n\";\necho fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    for ($i = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t\
    if (strpos($i, \"7\") !== false) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpelh58lnp.php:25\n\
    Stack trace:\n#0 /tmp/tmpelh58lnp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpelh58lnp.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if (($i % 11 === 0 || $i\
    \ % 13 === 0) && strpos($i, '7') > -1) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxgzlopbx.php:25\n\
    Stack trace:\n#0 /tmp/tmpxgzlopbx.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxgzlopbx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $num = $n;\n    $count = 0;\n    while ($num > 0) {\n        if (substr($num,\
    \ -1) == 7) {\n            $count++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwz_dgxd_.php:26\n\
    Stack trace:\n#0 /tmp/tmpwz_dgxd_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwz_dgxd_.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $counter = 0;\n\tfor ($i = 7; $i < $n; $i++) {\n\t\tif ($i % 11 == 0) {\n\t\t\t\
    $counter += count_digit($i, 7);\n\t\t} else if ($i % 13 == 0) {\n\t\t\t$counter\
    \ += count_digit($i, 7);\n\t\t}\n\t}\n\treturn $counter;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_digit()\
    \ in /tmp/tmpi0xxn4mv.php:13\nStack trace:\n#0 /tmp/tmpi0xxn4mv.php(22): fizz_buzz(50)\n\
    #1 /tmp/tmpi0xxn4mv.php(26): candidate(50)\n#2 /tmp/tmpi0xxn4mv.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi0xxn4mv.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 11; $i < $n; $i += 11) {\n        if ($i % 13\
    \ !== 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n \
    \   for ($i = 13; $i < $n; $i += 13) {\n        $count += substr_count($i, '7');\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $digits = str_split($n);\n    $digits_7 = array_filter($digits, function($digit)\
    \ {\n        return $digit == 7;\n    });\n    return count($digits_7);\n}\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphbj0rtzv.php:22\n\
    Stack trace:\n#0 /tmp/tmphbj0rtzv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphbj0rtzv.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $sum = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $num = $i;\n            while ($num > 0) {\n  \
    \              if ($num % 10 == 7) {\n                    $sum += 1;\n       \
    \         }\n                $num = (int)($num / 10);\n            }\n       \
    \ }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 7; $i < $n; $i++) {\n    if (($i % 11 === 0 || $i\
    \ % 13 === 0) && substr_count($i, 7) > 0) {\n      $count += substr_count($i,\
    \ 7);\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $times = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $str = strval($i);\n      for ($j = 0; $j < strlen($str);\
    \ $j++) {\n        if ($str[$j] == '7') {\n          $times++;\n        }\n  \
    \    }\n    }\n  }\n  return $times;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  if ($n % 11 == 0 || $n % 13 == 0) {\n    $n_arr = str_split($n);\n    $count\
    \ = 0;\n    foreach ($n_arr as $num) {\n      if ($num == 7) {\n        $count++;\n\
    \      }\n    }\n    return $count;\n  }\n  return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiucp229i.php:29\n\
    Stack trace:\n#0 /tmp/tmpiucp229i.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpiucp229i.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $counter = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0) {\n \
    \     $counter += count7s($i);\n    } else if ($i % 13 == 0) {\n      $counter\
    \ += count7s($i);\n    }\n  }\n  return $counter;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count7s() in\
    \ /tmp/tmplucim4xo.php:13\nStack trace:\n#0 /tmp/tmplucim4xo.php(22): fizz_buzz(50)\n\
    #1 /tmp/tmplucim4xo.php(26): candidate(50)\n#2 /tmp/tmplucim4xo.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmplucim4xo.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            $counter += substr_count((string)$i, '7');\n\
    \        }\n    }\n    return $counter;\n}\n\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  if ($n < 7) {\n    return 0;\n  }\n\n  $number_of_times = 0;\n  for ($i = 7;\
    \ $i < $n; $i += 11) {\n    if ($i % 13 == 0) {\n      continue;\n    }\n    if\
    \ (contains_digit($i, 7)) {\n      $number_of_times++;\n    }\n  }\n\n  for ($i\
    \ = 0; $i < $n; $i += 13) {\n    if ($i % 11 == 0) {\n      continue;\n    }\n\
    \    if (contains_digit($i, 7)) {\n      $number_of_times++;\n    }\n  }\n\n \
    \ return $number_of_times;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function contains_digit()\
    \ in /tmp/tmpgm58l6b6.php:19\nStack trace:\n#0 /tmp/tmpgm58l6b6.php(37): fizz_buzz(50)\n\
    #1 /tmp/tmpgm58l6b6.php(41): candidate(50)\n#2 /tmp/tmpgm58l6b6.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmpgm58l6b6.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            if (strpos($i, '7') !== false) {\n         \
    \       $count++;\n            }\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfvagzyk.php:27\n\
    Stack trace:\n#0 /tmp/tmphfvagzyk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphfvagzyk.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $n = (int)$n;\n    $i = 0;\n    $return = 0;\n    while($i < $n) {\n    \
    \    if(($i % 11 == 0 || $i % 13 == 0) && strpos($i, '7') !== false) {\n     \
    \       $return += 1;\n        }\n        $i++;\n    }\n    return $return;\n\
    }\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprhso3u6v.php:27\n\
    Stack trace:\n#0 /tmp/tmprhso3u6v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprhso3u6v.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $digit_array = str_split($i);\n            foreach\
    \ ($digit_array as $digit) {\n                if ($digit == 7) {\n           \
    \         $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\n\
    echo fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $num = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if (($i % 11 == 0 || $i % 13\
    \ == 0) && preg_match('/7/', $i)) {\n      $num++;\n    }\n  }\n  return $num;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lxgv36n.php:25\n\
    Stack trace:\n#0 /tmp/tmp8lxgv36n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8lxgv36n.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $digits = getDigits($n);\n    $sevens = 0;\n    for ($i = 7; $i < $n; $i+=11)\
    \ {\n        if(in_array(7, getDigits($i))) {\n            $sevens++;\n      \
    \  }\n    }\n    for ($i = 7; $i < $n; $i+=13) {\n        if(in_array(7, getDigits($i)))\
    \ {\n            $sevens++;\n        }\n    }\n    return $sevens;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function getDigits() in\
    \ /tmp/tmp5jkrfb2c.php:10\nStack trace:\n#0 /tmp/tmp5jkrfb2c.php(26): fizz_buzz(50)\n\
    #1 /tmp/tmp5jkrfb2c.php(30): candidate(50)\n#2 /tmp/tmp5jkrfb2c.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5jkrfb2c.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // print $n . \"\\n\";\n    if (strpos($n, \"7\") !== false) {\n        return\
    \ 1;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jr5hpk0.php:24\n\
    Stack trace:\n#0 /tmp/tmp8jr5hpk0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jr5hpk0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $cnt = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $cnt += substr_count((string)$i, '7');\n    }\n  }\n  return\
    \ $cnt;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $a = str_split($i);\n            $count += array_count_values($a)[7];\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if (($i % 11 == 0 || $i %\
    \ 13 == 0) && str_word_count($i) > 0) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\necho fizz_buzz(50) . PHP_EOL;\necho fizz_buzz(78) . PHP_EOL;\necho\
    \ fizz_buzz(79) . PHP_EOL;\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9u4whd0e.php:28\n\
    Stack trace:\n#0 /tmp/tmp9u4whd0e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9u4whd0e.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      if (strpos($i, '7') !== false) {\n        $count++;\n    \
    \  }\n    }\n  }\n  return $count;\n}\n\necho fizz_buzz(50);\necho \"<br>\";\n\
    echo fizz_buzz(78);\necho \"<br>\";\necho fizz_buzz(79);\necho \"<br>\";\n\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0<br>1<br>2<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf4e0d24w.php:34\n\
    Stack trace:\n#0 /tmp/tmpf4e0d24w.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpf4e0d24w.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (($i % 11 === 0 || $i\
    \ % 13 === 0) && (strpos($i, '7') !== false)) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6gtqbq8.php:24\n\
    Stack trace:\n#0 /tmp/tmpg6gtqbq8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg6gtqbq8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            if (strpos($i, '7') !== false) {\n         \
    \       $count += 1;\n            }\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj67hxld.php:27\n\
    Stack trace:\n#0 /tmp/tmpkj67hxld.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkj67hxld.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $arr = str_split($i);\n            foreach ($arr\
    \ as $v) {\n                if ($v == 7) {\n                    $count++;\n  \
    \              }\n            }\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $output = 0;\n\t$a = [];\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n\t\t\t$a = str_split($i);\n\t\t\tforeach ($a as $key =>\
    \ $value) {\n\t\t\t\tif ($value == 7) {\n\t\t\t\t\t$output++;\n\t\t\t\t}\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn $output;\n}\necho fizz_buzz(50) . PHP_EOL;\necho fizz_buzz(78)\
    \ . PHP_EOL;\necho fizz_buzz(79) . PHP_EOL;\n\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $sum = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $sum += count_digit($i, 7);\n        }\n    }\n\
    \    return $sum;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_digit()\
    \ in /tmp/tmprn1qirhj.php:13\nStack trace:\n#0 /tmp/tmprn1qirhj.php(19): fizz_buzz(50)\n\
    #1 /tmp/tmprn1qirhj.php(23): candidate(50)\n#2 /tmp/tmprn1qirhj.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmprn1qirhj.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && strpos((string)$i, '7') !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp232uyknf.php:24\n\
    Stack trace:\n#0 /tmp/tmp232uyknf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp232uyknf.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count($i, 7);\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$count += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count=0;\n    for($i=1;$i<$n;$i++){\n        if(($i%11==0 || $i%13==0) &&\
    \ $i%10==7){\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26aaf_xy.php:25\n\
    Stack trace:\n#0 /tmp/tmp26aaf_xy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp26aaf_xy.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $total = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $total += substr_count(strval($i), '7');\n    }\n  }\n  return\
    \ $total;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 7; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && strpos((string)$i, '7') !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwcglmi92.php:24\n\
    Stack trace:\n#0 /tmp/tmpwcglmi92.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwcglmi92.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    $is_11 = false;\n    $is_13 = false;\n    for ($i = 1;\
    \ $i < $n; $i++) {\n        $is_11 = ($i % 11 === 0);\n        $is_13 = ($i %\
    \ 13 === 0);\n        if ($is_11 || $is_13) {\n            $str = (string)$i;\n\
    \            $result += substr_count($str, '7');\n        }\n    }\n    return\
    \ $result;\n}\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\n\
    echo fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $total = 0;\n    $start = 1;\n    while ($start < $n) {\n        if ($start\
    \ % 11 == 0 || $start % 13 == 0) {\n            $total += count_seven($start);\n\
    \        }\n        $start += 1;\n    }\n    return $total;\n}\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_seven()\
    \ in /tmp/tmpmu9szvjy.php:14\nStack trace:\n#0 /tmp/tmpmu9szvjy.php(21): fizz_buzz(50)\n\
    #1 /tmp/tmpmu9szvjy.php(25): candidate(50)\n#2 /tmp/tmpmu9szvjy.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmu9szvjy.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $num = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $num += substr_count($i, '7');\n        }\n   \
    \ }\n    return $num;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $cnt = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if (($i % 11 == 0 || $i % 13\
    \ == 0) && strpos((string)$i, '7') !== false) {\n      $cnt++;\n    }\n  }\n \
    \ return $cnt;\n}\n\necho fizz_buzz(50);\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp651d0o5z.php:26\n\
    Stack trace:\n#0 /tmp/tmp651d0o5z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp651d0o5z.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && substr_count((string)$i, \"7\") > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\necho fizz_buzz(50);\necho \"<br>\"\
    ;\necho fizz_buzz(78);\necho \"<br>\";\necho fizz_buzz(79);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0<br>1<br>2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0rdasrnd.php:30\n\
    Stack trace:\n#0 /tmp/tmp0rdasrnd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0rdasrnd.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $cnt = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $i_str = strval($i);\n            $cnt += substr_count($i_str,\
    \ '7');\n        }\n    }\n    return $cnt;\n}\n\necho fizz_buzz(50);\necho fizz_buzz(78);\n\
    echo fizz_buzz(79);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: '023'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 7; $i < $n; $i++) {\n\t\tif (0 == $i % 11 or 0 == $i\
    \ % 13) {\n\t\t\t$count += substr_count((string)$i, \"7\");\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $num = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $num += substr_count($i, '7');\n        }\n   \
    \ }\n    return $num;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $i = 1;\n\t$answer = 0;\n\twhile ($i < $n) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\tif (substr_count($i, '7') > 0) {\n\t\t\t\t$answer++;\n\t\t\t\
    }\n\t\t}\n\t\t$i++;\n\t}\n\treturn $answer;\n}\n\necho fizz_buzz(50);\necho '<br>';\n\
    echo fizz_buzz(78);\necho '<br>';\necho fizz_buzz(79);\necho '<br>';\necho fizz_buzz(47);\n\
    echo '<br>';\necho fizz_buzz(97);\necho '<br>';\necho fizz_buzz(107);\necho '<br>';\n\
    echo fizz_buzz(207);\necho '<br>';\necho fizz_buzz(707);\necho '<br>';\necho fizz_buzz(7777);\n\
    echo '<br>';\necho fizz_buzz(70000);\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0<br>1<br>2<br>0<br>2<br>2<br>5<br>22<br>424<br>3860\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpfbuq9d4e.php:48\nStack trace:\n#0 /tmp/tmpfbuq9d4e.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfbuq9d4e.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // Your code here\n    $count = 0;\n    for ($i = 7; $i < $n; $i++) {\n \
    \       if ($i % 11 == 0 || $i % 13 == 0) {\n            if (strpos((string)$i,\
    \ '7') !== false) {\n                $count++;\n            }\n        }\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplkfdvvky.php:28\n\
    Stack trace:\n#0 /tmp/tmplkfdvvky.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplkfdvvky.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    if ($n < 7) return 0;\n\t$count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif\
    \ (($i % 11 == 0 || $i % 13 == 0) && substr_count($i, '7') > 0) $count++;\n\t\
    }\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqu6v4muh.php:24\n\
    Stack trace:\n#0 /tmp/tmpqu6v4muh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqu6v4muh.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if ($n < 0) {\n        return '-1';\n    }\n    $cnt = 0;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n         \
    \   $cnt += substr_count((string)$i, '7');\n        }\n    }\n    return $cnt;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && strpos($i, \"7\") !== false)\n            $count++;\n  \
    \  }\n    return $count;\n}\n\necho fizz_buzz(50);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpni6nv2ln.php:25\n\
    Stack trace:\n#0 /tmp/tmpni6nv2ln.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpni6nv2ln.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $str = '';\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n\t\t\t$str .= $i;\n\t\t}\n\t}\n\treturn substr_count($str, '7');\n}\n\n\
    echo fizz_buzz(50);\necho '<br>';\necho fizz_buzz(78);\necho '<br>';\necho fizz_buzz(79);\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 0<br>2<br>3
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    $i = 0;\n    while ($i < $n) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $str = (string)$i;\n            $len = strlen($str);\n\
    \            for ($j = 0; $j < $len; $j++) {\n                if ($str[$j] ==\
    \ 7) {\n                    $count++;\n                }\n            }\n    \
    \    }\n        $i++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $result = 0;\n  for ($i = 11; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i\
    \ % 13 == 0) {\n      $result += substr_count($i, '7');\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nprint(fizz_buzz(50) . \"\\n\");\nprint(fizz_buzz(78) . \"\\n\");\nprint(fizz_buzz(79)\
    \ . \"\\n\");\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $retval = 0;\n  for ($i = 7; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $retval += substr_count((string)$i, '7');\n    }\n  }\n  return\
    \ $retval;\n}\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\n\
    echo fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n    $num = 0;\n    for\
    \ ($i = 7; $i < $n; $i++) {\n        if (($i % 11 == 0 || $i % 13 == 0) && strpos($i,\
    \ '7') !== false) {\n            $num++;\n        }\n    }\n    return $num;\n\
    }\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_nfgfvi.php:27\n\
    Stack trace:\n#0 /tmp/tmpd_nfgfvi.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpd_nfgfvi.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if (!is_int($n)) {\n        throw new InvalidArgumentException('Parameter\
    \ $n must be an integer');\n    }\n\n    $count = 0;\n    for ($i = 1; $i < $n;\
    \ $i++) {\n        if (($i % 11 == 0 || $i % 13 == 0) && strpos($i, '7') !== false)\
    \ {\n            $count++;\n        }\n    }\n\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbduuvh0.php:29\n\
    Stack trace:\n#0 /tmp/tmplbduuvh0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplbduuvh0.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $cnt = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $num = $i;\n            while ($num) {\n      \
    \          if ($num % 10 == 7) {\n                    $cnt++;\n              \
    \  }\n                $num /= 10;\n            }\n        }\n    }\n    return\
    \ $cnt;\n}\n\necho fizz_buzz(50);\necho '<br>';\necho fizz_buzz(78);\necho '<br>';\n\
    echo fizz_buzz(79);\necho '<br>';\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 0<br>2<br>3<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $total = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            if (strpos($i, '7') !== false) {\n         \
    \       $total++;\n            }\n        }\n    }\n    return $total;\n}\n\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnj4ea2gk.php:27\n\
    Stack trace:\n#0 /tmp/tmpnj4ea2gk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnj4ea2gk.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    // Create empty array to store number\n\t$arr = [];\n\t// Use a for loop to find\
    \ numbers to be inserted in array\n\tfor ($i = 0; $i < $n; $i++) {\n\t\t// Check\
    \ if $i is divisible by 11\n\t\tif ($i % 11 == 0) {\n\t\t\t// If so, run variable\
    \ through function to check for digit 7\n\t\t\tif (has_seven($i)) {\n\t\t\t\t\
    // If variable has 7 in it, push variable to array\n\t\t\t\tarray_push($arr, $i);\n\
    \t\t\t}\n\t\t}\n\t\t// Do the same for numbers divisible by 13\n\t\tif ($i % 13\
    \ == 0) {\n\t\t\tif (has_seven($i)) {\n\t\t\t\tarray_push($arr, $i);\n\t\t\t}\n\
    \t\t}\n\t}\n\t// Return number of elements in the array\n\treturn count($arr);\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_seven() in\
    \ /tmp/tmpy7qbn9fl.php:17\nStack trace:\n#0 /tmp/tmpy7qbn9fl.php(34): fizz_buzz(50)\n\
    #1 /tmp/tmpy7qbn9fl.php(38): candidate(50)\n#2 /tmp/tmpy7qbn9fl.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy7qbn9fl.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && strpos($i, '7') !== false) {\n            $count++;\n  \
    \      }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4d0ia0n.php:24\n\
    Stack trace:\n#0 /tmp/tmpl4d0ia0n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl4d0ia0n.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $nb7 = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (($i % 11 == 0) || ($i %\
    \ 13 == 0)) {\n      $nb7 += digit7($i);\n    }\n  }\n  return $nb7;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function digit7() in /tmp/tmp9lnzwip4.php:13\n\
    Stack trace:\n#0 /tmp/tmp9lnzwip4.php(20): fizz_buzz(50)\n#1 /tmp/tmp9lnzwip4.php(24):\
    \ candidate(50)\n#2 /tmp/tmp9lnzwip4.php(34): test()\n#3 {main}\n  thrown in /tmp/tmp9lnzwip4.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (($i % 11 == 0 || $i %\
    \ 13 == 0) && strpos($i, \"7\") !== false) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp587uzzzq.php:24\n\
    Stack trace:\n#0 /tmp/tmp587uzzzq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp587uzzzq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 11; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count($i, '7');\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $seven = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $str = strval($i);\n      for ($j = 0; $j < strlen($str);\
    \ $j++) {\n        if ($str[$j] == '7') {\n          $seven++;\n        }\n  \
    \    }\n    }\n  }\n  return $seven;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif (($i % 11 == 0) || ($i %\
    \ 13 == 0)) {\n\t\t\t$count += substr_count((string)$i, \"7\");\n\t\t}\n\t}\n\t\
    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $r = 0;\n  for ($i = 7; $i < $n; $i++) {\n    if (($i % 11 == 0 || $i % 13\
    \ == 0) && strpos((string)$i, '7') !== false) {\n      $r++;\n    }\n  }\n  return\
    \ $r;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmv8h1k3e.php:25\n\
    Stack trace:\n#0 /tmp/tmpmv8h1k3e.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmv8h1k3e.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $res = 0;\n    $count = 0;\n    while($n >= 7) {\n        $remainder = $n\
    \ % 10;\n        if($remainder == 7) $count++;\n        $n = floor($n / 10);\n\
    \    }\n    return $count;\n}\necho fizz_buzz(50) . PHP_EOL;\necho fizz_buzz(78)\
    \ . PHP_EOL;\necho fizz_buzz(79) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fbk3kfj.php:28\n\
    Stack trace:\n#0 /tmp/tmp1fbk3kfj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1fbk3kfj.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $result = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0) {\n  \
    \    $result += strlen(strval(str_replace('7', '', $i)));\n    } else if ($i %\
    \ 13 == 0) {\n      $result += strlen(strval(str_replace('7', '', $i)));\n   \
    \ }\n  }\n  return $result;\n}\n\necho fizz_buzz(50) . PHP_EOL;\necho fizz_buzz(78)\
    \ . PHP_EOL;\necho fizz_buzz(79) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n22\n23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppyimnnjx.php:29\n\
    Stack trace:\n#0 /tmp/tmppyimnnjx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppyimnnjx.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (($i % 11 == 0 || $i % 13\
    \ == 0) && strpos($i, '7') !== false) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7c1lwas6.php:24\n\
    Stack trace:\n#0 /tmp/tmp7c1lwas6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7c1lwas6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $res = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $res += substr_count($i, '7');\n    }\n  }\n  return $res;\n\
    }\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\necho fizz_buzz(79)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n2\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $a = 0;\n    $b = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i %\
    \ 11 == 0) {\n            $a++;\n        }\n        if ($i % 13 == 0) {\n    \
    \        $b++;\n        }\n    }\n    $c = $a + $b;\n    $str = \"\";\n    $count\
    \ = 0;\n    for ($i = 0; $i < $c; $i++) {\n        $str .= \"7\";\n    }\n   \
    \ for ($i = 0; $i < strlen($str); $i++) {\n        if ($str[$i] == \"7\") {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnsl_p5yl.php:39\n\
    Stack trace:\n#0 /tmp/tmpnsl_p5yl.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpnsl_p5yl.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0)\
    \ {\n            $count += 1;\n        } elseif ($i % 13 == 0) {\n           \
    \ $count += 1;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahcq33uf.php:25\n\
    Stack trace:\n#0 /tmp/tmpahcq33uf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpahcq33uf.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    $numbers = array();\n    for ($i = 1; $i < $n; $i++) {\n\
    \        if ($i % 11 == 0 || $i % 13 == 0) {\n            $numbers[] = $i;\n \
    \       }\n    }\n    foreach ($numbers as $number) {\n        for ($i = 0; $i\
    \ < strlen($number); $i++) {\n            if ($number[$i] == '7') {\n        \
    \        $count++;\n            }\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mhdg232.php:32\n\
    Stack trace:\n#0 /tmp/tmp8mhdg232.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8mhdg232.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && contains_seven($i)) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function contains_seven()\
    \ in /tmp/tmpds5brypw.php:12\nStack trace:\n#0 /tmp/tmpds5brypw.php(20): fizz_buzz(50)\n\
    #1 /tmp/tmpds5brypw.php(24): candidate(50)\n#2 /tmp/tmpds5brypw.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpds5brypw.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $total = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (strpos($i, '7')\
    \ !== false && ($i % 11 == 0 || $i % 13 == 0)) {\n            $total++;\n    \
    \    }\n    }\n    return $total;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb7_xcv6s.php:25\n\
    Stack trace:\n#0 /tmp/tmpb7_xcv6s.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpb7_xcv6s.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 11; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    $i = 0;\n    while($i < $n) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $str = (string)$i;\n            for ($j = 0;\
    \ $j < strlen($str); $j++) {\n                if ($str[$j] == 7) {\n         \
    \           $result++;\n                }\n            }\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n\necho fizz_buzz(50);\necho fizz_buzz(78);\necho\
    \ fizz_buzz(79);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: '023'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $i = strval($i);\n            for ($x = 0; $x\
    \ < strlen($i); $x++) {\n                if ($i[$x] == 7) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $str = (string)$i;\n            $str_arr = str_split($str);\n\
    \            foreach ($str_arr as $str_char) {\n                if ($str_char\
    \ == 7) {\n                    $count++;\n                }\n            }\n \
    \       }\n    }\n    return $count;\n}\n\necho fizz_buzz(50);\necho \"<br>\"\
    ;\necho fizz_buzz(78);\necho \"<br>\";\necho fizz_buzz(79);\necho \"<br>\";\n\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 0<br>2<br>3<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count($i, '7');\n        }\n\
    \    }\n    return $count;\n}\n\necho fizz_buzz(79);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '3'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $m = 0;\n\tfor ($i = 11; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n\t\t\t$str = strval($i);\n\t\t\tfor ($j = 0; $j < strlen($str); $j++)\
    \ {\n\t\t\t\tif ($str[$j] == 7) {\n\t\t\t\t\t$m++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn $m;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $numbers = [];\n\t$counter = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif ($i %\
    \ 11 == 0) {\n\t\t\t$numbers[] = $i;\n\t\t} elseif ($i % 13 == 0) {\n\t\t\t$numbers[]\
    \ = $i;\n\t\t}\n\t}\n\tforeach ($numbers as $number) {\n\t\t$digits = str_split($number);\n\
    \t\tforeach ($digits as $digit) {\n\t\t\tif ($digit == 7) {\n\t\t\t\t$counter++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $counter;\n}\nfunction candidate(...$args) {\n \
    \   return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n    \n    $count = 0;\n\
    \    $index = 0;\n    while ($index < $n) {\n        if (($index % 11 == 0) ||\
    \ ($index % 13 == 0)) {\n            $number = $index;\n            while ($number\
    \ > 0) {\n                if ($number % 10 == 7) {\n                    $count++;\n\
    \                }\n                $number = intval($number / 10);\n        \
    \    }\n        }\n        $index++;\n    }\n    print $count;\n}\n\nfizz_buzz(50);\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "00\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7op9e113.php:37\n\
    Stack trace:\n#0 /tmp/tmp7op9e113.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7op9e113.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\necho fizz_buzz(50) . '<br>';\necho fizz_buzz(78)\
    \ . '<br>';\necho fizz_buzz(79) . '<br>';\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 0<br>2<br>3<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $sum = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $sum += substr_count((string)$i, \"7\");\n    \
    \    }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, \"7\");\n\
    \        }\n    }\n    return $count;\n}\necho fizz_buzz(50);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '0'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $num = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $num += substr_count(strval($i), '7');\n      \
    \  }\n    }\n    return $num;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\tif (strpos($i, '7') !== false) $count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\necho fizz_buzz(50);\necho \"\\n\";\necho fizz_buzz(78);\necho\
    \ \"\\n\";\necho fizz_buzz(79);\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo54djdfs.php:31\n\
    Stack trace:\n#0 /tmp/tmpo54djdfs.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpo54djdfs.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    // $n = 78;\n\t$num_count = 0;\n\tfor ($i=0; $i <= $n; $i++) { \n\t\tif (($i %\
    \ 11 == 0) || ($i % 13 == 0)) {\n\t\t\t$num_count = substr_count($i, '7');\n\t\
    \t}\n\t}\n\treturn $num_count;\n}\n\necho fizz_buzz(50);\necho fizz_buzz(78);\n\
    echo fizz_buzz(79);\necho \"<br>\";\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "011<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k47we6p.php:32\n\
    Stack trace:\n#0 /tmp/tmp2k47we6p.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2k47we6p.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $num_str = (string)$i;\n      for ($j = 0; $j < strlen($num_str);\
    \ $j++) {\n        if ($num_str[$j] == 7) {\n          $count++;\n        }\n\
    \      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_103_rounded_avg
language: php
prompt: "<?php\n// You are given two positive integers n and m, and your task is to\
  \ compute the\n// average of the integers from n through m (including n and m).\
  \ \n// Round the answer to the nearest integer and convert that to binary.\n// If\
  \ n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"0b11\"\
  \n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
  \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n"
tests: "function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"\
  0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
  \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
  \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350,\
  \ 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
  }\n\ntest();"
completions: ["    $aver = round(($n + $m) / 2);\n    if ($n > $m) {\n        return\
    \ -1;\n    } else {\n        return decbin($aver);\n    }\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\n", "\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = $n;\n\tfor ($i = $n + 1; $i <= $m; $i++) {\n\t\t$sum += $i;\n\
    \t}\n\t$ans = decbin(round($sum / ($m - $n + 1)));\n\treturn \"0b$ans\";\n}\n\
    echo rounded_avg(20, 33);", "    $output = round(($n + $m) / 2);\n    if ($n >\
    \ $m) {\n        return -1;\n    }\n    return decbin($output);\n}\necho rounded_avg(1,\
    \ 5);", "  if ($n > $m) return -1;\n  $avg = round(($n + $m) / 2);\n  return '0b'\
    \ . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $n_array =\
    \ array();\n    for ($i = $n; $i <= $m; $i++) {\n        $n_array[] = $i;\n  \
    \  }\n    $avg = array_sum($n_array) / count($n_array);\n    $avg = round($avg);\n\
    \    $avg = decbin($avg);\n    return \"0b{$avg}\";\n}\n", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}", "    $result = $m < $n ? -1 : bindec(intval(($n + $m) / 2));\n\
    \    return sprintf(\"0b%s\", decbin($result));\n}\n\necho rounded_avg(1, 5) .\
    \ \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\\
    n\";\necho rounded_avg(20, 33) . \"\\n\";", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    $sum = round($sum / ($m - $n + 1));\n    return decbin($sum);\n\
    }\n\necho rounded_avg(1, 5) . PHP_EOL; // 0b11\necho rounded_avg(7, 5) . PHP_EOL;\
    \ // -1\necho rounded_avg(10, 20) . PHP_EOL; // 0b1111\necho rounded_avg(20, 33)\
    \ . PHP_EOL; // 0b11010", "    $binary = \"\";\n    $sum = 0;\n    $avg = 0;\n\
    \    $n = abs($n);\n    $m = abs($m);\n    if ($n == $m) {\n        $num = decbin($n);\n\
    \        return \"0b$num\";\n    }\n    if ($n > $m) {\n        return -1;\n \
    \   }\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg\
    \ = round($sum / ($m - $n + 1));\n    $binary = decbin($avg);\n    return \"0b$binary\"\
    ;\n}\n\n$n = 20;\n$m = 33;\necho rounded_avg($n, $m);", "  $avg = round((($n +\
    \ $m) / 2));\n  return $n > $m ? -1 : decbin($avg);\n}", "    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return decbin($avg);\n}\n\
    echo rounded_avg(20, 33) . \"\\n\";", "\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\
    \t$nums = range($n, $m);\n\t$avg = round(array_sum($nums) / count($nums));\n\t\
    return '0b' . decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;", "    if ($n > $m) return -1;\n    $average = round(($n + $m) /\
    \ 2);\n    return \"0b\" . decbin($average);\n}\n\nprint_r(rounded_avg(10, 20));",
  "  $min = $n < $m ? $n : $m;\n  $max = $n > $m ? $n : $m;\n  $sum = 0;\n  $total\
    \ = 0;\n  for ($i = $min; $i <= $max; $i++) {\n    $sum += $i;\n    $total++;\n\
    \  }\n  $avg = round($sum / $total);\n  return $avg === 0 ? '0b0' : '0b' . decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "  $avg\
    \ = round(($n + $m) / 2);\n  if ($n > $m) {\n    return -1;\n  }\n  return decbin($avg);\n\
    }", "   $avg = round(($n + $m) / 2);\n   if ($n > $m) {\n      return -1;\n  \
    \ }\n   return base_convert($avg, 10, 2);\n}\n\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";", "\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\
    \t$sum = array_sum(range($n, $m));\n\t$avg = intval(round($sum / ($m - $n + 1)));\n\
    \treturn decbin($avg);\n}", "\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$sum = 0;\n\
    \tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$avg = round($sum /\
    \ ($m - $n + 1));\n\treturn decbin($avg);\n}\n", "  if ($n > $m) return -1;\n\
    \  $average = floor( ($n + $m) / 2 );\n  return ( decbin($average) );\n}\n", " \
    \ \n}\n", "    if ($n > $m) {\n        return -1;\n    }\n    return decbin(round(($n\
    \ + $m) / 2));\n}", "  if ($n > $m) return -1;\n  $avg = round(($n + $m) / 2);\n\
    \  return \"0b\" . decbin($avg);\n}\nprint_r(rounded_avg(1, 5));\nprint_r(rounded_avg(7,\
    \ 5));\nprint_r(rounded_avg(10, 20));\nprint_r(rounded_avg(20, 33));\n", "   \
    \ if ($n > $m) {\n        return -1;\n    }\n    $average = round(($n + $m) /\
    \ 2);\n    return decbin($average);\n}\n", "  if ($n > $m) return -1;\n  $sum\
    \ = ($n + $m) * (($m - $n) + 1) / 2;\n  $rounded = round($sum / ($m - $n + 1));\n\
    \  return \"0b\".decbin($rounded);\n}", "\t$a = floor(($n + $m) / 2);\n\treturn\
    \ $n > $m ? -1 : decbin($a);\n}\n\necho rounded_avg(1, 5) . '<br>';\necho rounded_avg(7,\
    \ 5) . '<br>';\necho rounded_avg(10, 20) . '<br>';\necho rounded_avg(20, 33) .\
    \ '<br>';", "    if ($n > $m) {\n        return -1;\n    }\n    $x = ($n + $m)\
    \ / 2;\n    $x = round($x);\n    $x = decbin($x);\n    return \"0b\" . $x;\n}",
  "    $avg = round(($n + $m) / 2);\n    if ($n < $m) {\n        return decbin($avg);\n\
    \    } else {\n        return -1;\n    }\n}", "    $sum = 0;\n    $count = 0;\n\
    \    if ($n > $m) return -1;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    $avg = floor($sum / $count);\n    return\
    \ '0b' . decbin($avg);\n}", "    $avg = round(($n + $m) / 2);\n    if ($n > $m)\
    \ {\n        return -1;\n    }\n    return \"0b\" . decbin($avg);\n}", "  if ($n\
    \ > $m) {\n    return -1;\n  }\n  $array = range($n, $m);\n  $avg = array_sum($array)\
    \ / count($array);\n  $avg_rounded = round($avg);\n  return decbin($avg_rounded);\n\
    }\n\necho rounded_avg(1, 5) . PHP_EOL; // => \"0b11\"\necho rounded_avg(7, 5)\
    \ . PHP_EOL; // => -1\necho rounded_avg(10, 20) . PHP_EOL; // => \"0b1111\"\n\
    echo rounded_avg(20, 33) . PHP_EOL; // => \"0b11010\"", "  if ($n > $m) {\n  \
    \  return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum +=\
    \ $i;\n  }\n  $sum = round($sum / ($m - $n + 1));\n  return \"0b\".decbin($sum);\n\
    }\n\necho rounded_avg(1, 5).\"\\n\";\necho rounded_avg(7, 5).\"\\n\";\necho rounded_avg(10,\
    \ 20).\"\\n\";\necho rounded_avg(20, 33).\"\\n\";\n", "    $sum = 0;\n    if ($n\
    \ > $m) {\n        return -1;\n    } else {\n        for ($i = $n; $i <= $m; $i++)\
    \ {\n            $sum += $i;\n        }\n        $avg = round($sum / $m);\n  \
    \      return decbin($avg);\n    }\n}\necho rounded_avg(1, 5); // 0b11\necho rounded_avg(7,\
    \ 5); // -1\necho rounded_avg(10, 20); // 0b1111\necho rounded_avg(20, 33); //\
    \ 0b11010", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = array_sum(range($n,\
    \ $m));\n    $avg = round($sum / ($m - $n + 1));\n    return decbin($avg);\n}",
  "\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$average = round(($n + $m) / 2);\n\treturn\
    \ decbin($average);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "    $avg = round(($n + $m) / 2);\n    if ($n > $m) {\n       \
    \ return -1;\n    }\n    return \"0b\" . decbin($avg);\n}", "    if ($n > $m)\
    \ return -1;\n    $total = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $total\
    \ += $i;\n    }\n    $answer = round($total / ($m - $n + 1));\n    return \"0b\"\
    \ . decbin($answer);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $result = round(($n\
    \ + $m) / 2);\n    return decbin($result);\n}\necho rounded_avg(1, 5) . PHP_EOL;\
    \ // => \"0b11\"\necho rounded_avg(7, 5) . PHP_EOL; // => -1\necho rounded_avg(10,\
    \ 20) . PHP_EOL; // => \"0b1111\"\necho rounded_avg(20, 33) . PHP_EOL; // => \"\
    0b11010\"", "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n;\
    \ $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $sum /= $m - $n + 1;\n  return decbin(round($sum));\n\
    }\n\necho rounded_avg(1, 5);", "    // Write code here...\n}\n$result = rounded_avg(7,\
    \ 5);\necho $result;", "    $avg = round(($n + $m) / 2);\n    return ($n > $m)\
    \ ? -1 : decbin($avg);\n}", "    if ($n > $m) {\n        return -1;\n    }\n \
    \   $average = round(($n + $m) / 2);\n    return '0b' . decbin($average);\n}\n\
    print_r(rounded_avg(1, 5) . PHP_EOL);\nprint_r(rounded_avg(7, 5) . PHP_EOL);\n\
    print_r(rounded_avg(10, 20) . PHP_EOL);\nprint_r(rounded_avg(20, 33) . PHP_EOL);",
  "  if ($n > $m) return -1;\n  return decbin(round(($n + $m) / 2));\n}\n\necho rounded_avg(1,\
    \ 5).\"\\n\";\necho rounded_avg(7, 5).\"\\n\";\necho rounded_avg(10, 20).\"\\\
    n\";\necho rounded_avg(20, 33).\"\\n\";\n", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return \"0b\" .\
    \ base_convert($avg, 10, 2);\n}\n\necho rounded_avg(1, 5) . \"\\n\"; // => \"\
    0b11\"\necho rounded_avg(7, 5) . \"\\n\"; // => -1\necho rounded_avg(10, 20) .\
    \ \"\\n\"; // => \"0b1111\"\necho rounded_avg(20, 33) . \"\\n\"; // => \"0b11010\"\
    \n", "  $avg = round(($n + $m) / 2);\n  return ($n > $m) ? -1 : base_convert($avg,\
    \ 10, 2);\n}", "  if ($n > $m) return -1;\n  return decbin(round(($n + $m) / 2));\n\
    }\n", "   if ($n > $m) {\n      return -1;\n   }\n   $numbers = range($n, $m);\n\
    \   $avg = floor(array_sum($numbers) / count($numbers));\n   return base_convert($avg,\
    \ 10, 2);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\n\
    echo rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "\t\
    if ($n > $m) {\n\t\treturn -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++)\
    \ {\n\t\t$sum += $i;\n\t}\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n\
    }\necho rounded_avg(1, 5);", "    $x = floor(($n + $m) / 2);\n    return $n >\
    \ $m ? -1 : \"0b\" . decbin($x);\n}\n\necho(rounded_avg(1, 5) . \"\\n\");\necho(rounded_avg(7,\
    \ 5) . \"\\n\");\necho(rounded_avg(10, 20) . \"\\n\");\necho(rounded_avg(20, 33)\
    \ . \"\\n\");", "\tif ($n > $m) return -1;\n\t$num = floor(($n + $m) / 2);\n\t\
    $bin = decbin($num);\n\treturn \"0b$bin\";\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;", "  $avg = ($n + $m) / 2;\n  if ($n > $m) {\n    return -1;\n\
    \  }\n  return decbin(round($avg));\n}\n\necho rounded_avg(10, 20) . PHP_EOL;",
  "    $avg = round(($n + $m) / 2);\n    if ($n < $m) {\n        return decbin($avg);\n\
    \    } elseif ($n > $m) {\n        return -1;\n    }\n}\n\necho rounded_avg(20,\
    \ 33);", "  if ($n > $m) {\n    return -1;\n  }\n  $avg = round(($n + $m) / 2);\n\
    \  return \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "\t// Return -1 if n is greater than m.\n\tif ($n > $m) {\n\t\t\
    return -1;\n\t}\n\t// Add n and m together and then divide by 2, rounding to the\
    \ nearest integer.\n\t$average = round(($n + $m) / 2);\n\t// Convert the average\
    \ to binary, and then return \"0b\" + the binary number.\n\treturn \"0b\" . decbin($average);\n\
    }", "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho\
    \ rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20,\
    \ 33) . \"\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n\n    $sum\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\n  \
    \  $avg = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\n\
    \necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "    if ($n > $m) return\
    \ -1;\n    return decbin(round(($n + $m) / 2));\n}", "  if ($n > $m) return -1;\n\
    \  $avg = round(($n + $m) / 2);\n  return \"0b\".str_pad(decbin($avg), ceil(log($avg,\
    \ 2)), '0', STR_PAD_LEFT);\n}", "    $sum = 0;\n    $count = 0;\n    for ($i =\
    \ $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    if\
    \ ($n > $m) {\n        return -1;\n    }\n    return decbin(round($sum / $count));\n\
    }\nprint(rounded_avg(1, 5) . \"\\n\");\nprint(rounded_avg(7, 5) . \"\\n\");\n\
    print(rounded_avg(10, 20) . \"\\n\");\nprint(rounded_avg(20, 33) . \"\\n\");",
  "  $avg = round(($n + $m) / 2);\n  return decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "    if ($n > $m) return -1;\n\
    \    return decbin(round(($n + $m) / 2));\n}", "  $sum = 0;\n  $count = 0;\n \
    \ for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n    $count++;\n  }\n  $average\
    \ = round($sum / $count);\n  if ($average > $m) {\n    return -1;\n  }\n  return\
    \ decbin($average);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "  if ($n > $m) return -1;\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return \"0b\" . decbin($avg);\n}\n", "  $sum = 0;\n  for ($i = $n; $i <= $m;\
    \ $i++) {\n    $sum += $i;\n  }\n  $avg = $sum / ($m - $n + 1);\n  return decbin(round($avg));\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\"; // \"0b11\"\necho rounded_avg(7, 5) . \"\
    \\n\"; // -1\necho rounded_avg(10, 20) . \"\\n\"; // \"0b1111\"\necho rounded_avg(20,\
    \ 33) . \"\\n\"; // \"0b11010\"", "    if ($n > $m) return -1;\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) $sum += $i;\n    $number = ceil($sum / ($m\
    \ - $n + 1));\n    return '0b' . decbin($number);\n}\n", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $average = (int) round(($n + $m) / 2);\n    return\
    \ decbin($average);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n\
    \ + $m) / 2);\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"<br />\"\
    ;\necho rounded_avg(7, 5) . \"<br />\";\necho rounded_avg(10, 20) . \"<br />\"\
    ;\necho rounded_avg(20, 33) . \"<br />\";", "  if ($n > $m) {\n    return -1;\n\
    \  }\n  return decbin(round(($n + $m) / 2));\n}\necho rounded_avg(20, 33);", " \
    \  $t = 0;\n   if ($n < $m) {\n    for ($i = $n; $i <= $m; $i++) {\n      $t +=\
    \ $i;\n    }\n    $t = ($t / ($m - $n + 1));\n    $t = round($t);\n    return\
    \ decbin($t);\n   } else {\n    return -1;\n   }\n}", "  if ($n > $m) {\n    return\
    \ -1;\n  }\n  return \"0b\" . decbin(round(($n + $m) / 2));\n}", "\tif ($n < $m)\
    \ {\n\t\t$avg = round(($n + $m) / 2);\n\t\treturn base_convert($avg, 10, 2);\n\
    \t} else {\n\t\treturn -1;\n\t}\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;", "    $sum = ($n + $m) / 2;\n    if ($n > $m) {\n        return\
    \ -1;\n    } else {\n        return decbin(round($sum));\n    }\n}\n", "    $sum\
    \ = 0;\n    if ($n > $m) {\n        return -1;\n    } else {\n        for ($i\
    \ = $n; $i <= $m; $i++) {\n            $sum += $i;\n        }\n        $avg =\
    \ round($sum / ($m - $n + 1));\n        return decbin($avg);\n    }\n}", "  if\
    \ ($n > $m) {\n    return -1;\n  }\n  $nums = range($n, $m);\n  $avg = round(array_sum($nums)\
    \ / count($nums));\n  return '0b' . decbin($avg);\n}\n", "  if ($n > $m) {\n \
    \   return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum\
    \ += $i;\n  }\n  $average = $sum / ($m - $n + 1);\n  $average = round($average);\n\
    \  return decbin($average);\n}\n\necho rounded_avg(20, 33);", "  if ($n > $m)\
    \ return -1;\n  $mean = (int) round(($n + $m) / 2);\n  return decbin($mean);\n\
    }\n", "    $sum = array_sum(range($n, $m));\n    $avg = round($sum / ($m - $n\
    \ + 1));\n    if ($n > $m) {\n        return -1;\n    }\n    return decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\n", "\t\
    if ($n > $m) {\n\t\treturn -1;\n\t}\n\t$average = round(($n + $m) / 2);\n\treturn\
    \ decbin($average);\n}\nprint_r(rounded_avg(1, 5));", "\t// your code goes here\n\
    \t$mid = ceil(($n + $m) / 2);\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\treturn\
    \ decbin($mid);\n}\n\nprint_r(rounded_avg(10, 20));", "    if ($n > $m) {\n  \
    \      return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = (int) ($sum / ($m - $n + 1));\n    return\
    \ '0b' . decbin($avg);\n}\necho rounded_avg(1, 5); // 0b11\necho rounded_avg(7,\
    \ 5); // -1\necho rounded_avg(10, 20); // 0b1111\necho rounded_avg(20, 33); //\
    \ 0b11010", "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  $count = 0;\n\
    \  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n    $count++;\n  }\n  $avg\
    \ = floor($sum / $count);\n  return \"0b\" . decbin($avg);\n}\n\n$results = [\n\
    \  '0b11' => rounded_avg(1, 5),\n  '-1' => rounded_avg(7, 5),\n  '0b1111' => rounded_avg(10,\
    \ 20),\n  '0b11010' => rounded_avg(20, 33)\n];\n\nprint_r($results);", '    //
    Edg', "  if ($n > $m) {\n    return -1;\n  }\n  $total = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $total += $i;\n  }\n  $avg = round($total / ($m - $n + 1));\n\
    \  return \"0b\" . decbin($avg);\n}\necho rounded_avg(20, 33) . PHP_EOL;", " \
    \ //base cases\n  if($n > $m){\n    return -1;\n  } elseif($n == $m){\n    return\
    \ \"0b\" . decbin($n);\n  } else {\n    $sum = 0;\n    //loops through numbers\
    \ and sums them together\n    for($i = $n; $i <= $m; $i++){\n      $sum += $i;\n\
    \    }\n    //divides the sum by how many numbers there are, rounds it and changes\
    \ it to a binary\n    return \"0b\" . decbin(round($sum / ($m - $n + 1)));\n \
    \ }\n}\n", "    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n +\
    \ 1));\n    return '0b' . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\"\
    ;\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho\
    \ rounded_avg(20, 33) . \"\\n\";", "    if ($n > $m) return -1;\n    $sum = $n;\n\
    \    for ($i = $n+1; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg =\
    \ round($sum/($m-$n+1));\n    return \"0b\".decbin($avg);\n}", "  if ($n>$m) {\n\
    \    return -1;\n  }\n  $res = round(($n+$m)/2);\n  return \"0b\".decbin($res);\n\
    }\necho rounded_avg(7, 5);", "  if ($n > $m) {\n    return -1;\n  }\n  $sum =\
    \ 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $rounded_avg\
    \ = (int) round($sum / ($m - $n + 1));\n  return '0b' . decbin($rounded_avg);\n\
    }", "    if ($n > $m) {\n        return -1;\n    }\n    $rounded = round(($n +\
    \ $m) / 2);\n    return decbin($rounded);\n}\n", "    if ($n > $m) {\n       \
    \ return -1;\n    }\n    $total = 0;\n    for ($i = $n; $i <= $m; $i++) {\n  \
    \      $total += $i;\n    }\n    $average = floor($total / ($m - $n + 1));\n \
    \   return \"0b\" . decbin($average);\n}", "  // your code here\n  if($n > $m)\
    \ {\n  \treturn -1;\n  }\n  $avg = ceil(($n + $m) / 2);\n  return decbin($avg);\n\
    }\necho rounded_avg(20, 33);", "  if ($n > $m) {\n    return -1;\n  } else {\n\
    \    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n      $sum += $i;\n    }\n\
    \    $avg = round($sum / ($m - $n + 1));\n    return '0b' . decbin($avg);\n  }\n\
    }\necho rounded_avg(10, 20);", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    return \"0b\" . decbin(round(($n + $m) / 2));\n}\n\necho rounded_avg(1, 5)\
    \ . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\n\
    echo rounded_avg(20, 33) . PHP_EOL;", "    $val = round(($n + $m) / 2);\n    if\
    \ ($n > $m) return -1;\n    return \"0b\" . decbin($val);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\n", "    if ($n > $m) return -1;\n\
    \    $avg = round(($n + $m) / 2);\n    return \"0b\" . decbin($avg);\n}", "  $sum\
    \ = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $result = round($sum\
    \ / ($m - $n + 1));\n  return $result > $m ? -1 : \"0b\" . decbin($result);\n}",
  "  // Your code here\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n   \
    \ $total = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $total += $i;\n  \
    \  }\n    $avg = round($total / ($m - $n + 1));\n    return decbin($avg);\n}",
  "  $result = round(($n + $m) / 2);\n  if ($n > $m) {\n    return -1;\n  }\n  return\
    \ decbin($result);\n}", "    if ($n > $m) {\n        return -1;\n    }\n    $sum\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg\
    \ = round($sum / ($m - $n + 1));\n    return '0b' . decbin($avg);\n}", "    if\
    \ ($n > $m) return -1;\n    $numbers = range($n, $m);\n    $sum = array_sum($numbers);\n\
    \    $avg = round($sum/count($numbers));\n    return \"0b\".decbin($avg);\n}\n\
    echo rounded_avg(1, 5) . PHP_EOL; //=> \"0b11\"\necho rounded_avg(7, 5) . PHP_EOL;\
    \ //=> -1\necho rounded_avg(10, 20) . PHP_EOL; //=> \"0b1111\"\necho rounded_avg(20,\
    \ 33) . PHP_EOL; //=> \"0b11010\"", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "    if\
    \ ($n > $m) {\n        return -1;\n    }\n    $sum = $n;\n    for ($i = $n; $i\
    \ < $m; $i++) {\n        $sum += ++$n;\n    }\n    $rounded = round($sum / ($m\
    \ - $i + 1));\n    return '0b' . decbin($rounded);\n}\n\necho rounded_avg(1, 5);\n\
    echo PHP_EOL;\necho rounded_avg(7, 5);\necho PHP_EOL;\necho rounded_avg(10, 20);\n\
    echo PHP_EOL;\necho rounded_avg(20, 33);\necho PHP_EOL;", "    $sum = 0;\n   \
    \ if ($n > $m) return -1;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum +=\
    \ $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return decbin($avg);\n\
    }\n\necho rounded_avg(10, 20) . \"\\n\";\n", "  // your code here\n}\n", "  if\
    \ ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++)\
    \ {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"\
    0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"<br />\";\necho rounded_avg(7,\
    \ 5) . \"<br />\";\necho rounded_avg(10, 20) . \"<br />\";\necho rounded_avg(20,\
    \ 33) . \"<br />\";", "  if ($n > $m) {\n    return -1;\n  }\n  $average = round(($n\
    \ + $m) / 2);\n  return \"0b\" . decbin($average);\n}", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return \"0b\"\
    \ . decbin($avg);\n}\n", "  // Your code here\n}\n", "    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $result = ($n + $m) / 2;\n    return \"0b\" . decbin(round($result));\n\
    }\n", "  \n}\n\necho rounded_avg(1, 5); //=> \"0b11\"\necho rounded_avg(7, 5);\
    \ //=> -1\necho rounded_avg(10, 20); //=> \"0b1111\"\necho rounded_avg(20, 33);\
    \ //=> \"0b11010\"", "    if ($n > $m) {\n        return -1;\n    }\n    $sum\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg\
    \ = round($sum / ($m - $n + 1));\n    return \"0b\" . base_convert($avg, 10, 2);\n\
    }\nprint_r(rounded_avg(1, 5));\nprint_r(rounded_avg(7, 5));\nprint_r(rounded_avg(10,\
    \ 20));\nprint_r(rounded_avg(20, 33));\n", "  $avg = round(($n + $m) / 2);\n \
    \ return $n > $m ? -1 : '0b' . decbin($avg);\n}\n\necho rounded_avg(1, 5), PHP_EOL;\n\
    echo rounded_avg(7, 5), PHP_EOL;\necho rounded_avg(10, 20), PHP_EOL;\necho rounded_avg(20,\
    \ 33), PHP_EOL;", "  if ($n > $m) return -1;\n  $avg = round(($n + $m) / 2);\n\
    \  return \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;", "  $result = round(($n + $m) / 2);\n  if ($n > $m) return -1;\n\
    \  return base_convert($result, 10, 2);\n}\n", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $total = 0;\n    $count = 0;\n    while ($n <= $m) {\n     \
    \   $total += $n;\n        $count++;\n        $n++;\n    }\n    $avg = $total\
    \ / $count;\n    $rounded = round($avg);\n    return decbin($rounded);\n}\necho\
    \ rounded_avg(10, 20);\n", "\t$result = $n>$m ? -1 : decbin(round(($n+$m)/2));\n\
    \    return \"0b$result\";\n}\n", "    if ($n > $m) {\n        return -1;\n  \
    \  }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $average = round($sum / ($m - $n + 1));\n    return decbin($average);\n\
    }", "\n}\n", "\n}\n", "  $sum = 0;\n  if ($n < $m) {\n    for ($i = $n; $i <=\
    \ $m; $i++) {\n      $sum += $i;\n    }\n    $avg = intval(round($sum / ($m -\
    \ $n + 1)));\n    return \"0b\" . decbin($avg);\n  } else if ($n > $m) {\n   \
    \ return -1;\n  }\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";", "    $avg = round(($n + $m) / 2);\n    return $n > $m ? -1 : decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "  if\
    \ ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++)\
    \ {\n    $sum += $i;\n  }\n  $sum = floor($sum / ($m - $n + 1));\n  return decbin($sum);\n\
    }\necho rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\\
    n\";\necho rounded_avg(10, 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho\
    \ \"\\n\";", "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i =\
    \ $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = $sum / ($m - $n + 1);\n\
    \  $rounded_avg = round($avg);\n  return \"0b\" . decbin($rounded_avg);\n}", "\t\
    // Write your code here\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$total = 0;\n\
    \tfor ($i = $n; $i <= $m; $i++) {\n\t\t$total += $i;\n\t}\n\t$total /= $m - $n\
    \ + 1;\n\t$total = round($total);\n\t$return = decbin($total);\n\treturn \"0b\"\
    \ . $return;\n}\necho rounded_avg(20, 33);", "    // iterate through all numbers\
    \ in range, round, convert to binary\n    $sum = 0;\n    if ($n <= $m) {\n   \
    \     for ($i = $n; $i <= $m; $i++) {\n            $sum += $i;\n        }\n  \
    \      $avg = round($sum / ($m - $n + 1));\n        $bin = decbin($avg);\n   \
    \     return \"0b$bin\";\n    } else {\n        return -1;\n    }\n}", "\t$sum\
    \ = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\tif ($n > $m)\
    \ return -1;\n\treturn decbin(round($sum / ($m - $n + 1)));\n}\n", "  if ($n >\
    \ $m) return -1;\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) $sum += $i;\n \
    \ $avg = round($sum / ($m - $n + 1));\n  return \"0b\".decbin($avg);\n}\n\nvar_dump(rounded_avg(1,\
    \ 5));\nvar_dump(rounded_avg(7, 5));\nvar_dump(rounded_avg(10, 20));\nvar_dump(rounded_avg(20,\
    \ 33));", "    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n\
    \    $rounded = round($avg);\n    return '0b' . decbin($rounded);\n}\n", "  if\
    \ ($n>$m) return -1;\n  $result = round(($n+$m)/2);\n  return '0b'.decbin($result);\n\
    }\n", "    if ($n > $m) return -1;\n    // your code here\n}\n", "  if ($n > $m)\
    \ return -1;\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = intval(round($sum / ($m - $n + 1)));\n  return \"0b\".decbin($avg);\n\
    }\necho rounded_avg(1, 5).\"\\n\";\necho rounded_avg(7, 5).\"\\n\";\necho rounded_avg(10,\
    \ 20).\"\\n\";\necho rounded_avg(20, 33).\"\\n\";", "    if ($n > $m) {\n    \
    \    return -1;\n    }\n    $avg = (int) (($n + $m) / 2);\n    return decbin($avg);\n\
    }\necho rounded_avg(1, 5);", "  $s = 0;\n  for ($i = $n; $i <= $m; $i++) {\n \
    \   $s += $i;\n  }\n  if ($n > $m) {\n    return -1;\n  }\n  else {\n    return\
    \ decbin(round($s / ($m - $n + 1)));\n  }\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;", "    if ($n > $m) {\n        return -1;\n    }\n    $sum =\
    \ 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg\
    \ = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    return '0b' . decbin($avg);\n\
    }\necho rounded_avg(20, 33);", "  if ($n > $m) {\n    return -1;\n  }\n  $average\
    \ = round((($n + $m) / 2));\n  return decbin($average);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "    $max = max($n, $m);\n \
    \   $min = min($n, $m);\n    if ($max === $min) {\n        return decbin($max);\n\
    \    }\n    $avg = ($max + $min) / 2;\n    $avg = $avg > floor($avg) ? round($avg)\
    \ : floor($avg);\n    return $max < $min ? -1 : \"0b\" . decbin($avg);\n}\necho\
    \ rounded_avg(20, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(1, 5) .\
    \ \"\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $result = array_sum(range($n,\
    \ $m)) / ($m - $n + 1);\n    $result = round($result);\n    return decbin($result);\n\
    }\n", "    if ($n > $m) {\n        return -1;\n    }\n    $num_sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $num_sum += $i;\n    }\n    $rounded_avg\
    \ = round($num_sum / ($m - $n + 1));\n    return \"0b\" . decbin($rounded_avg);\n\
    }\n", "    if ($n > $m) return -1;\n    $avg = round(($n + $m) / 2);\n    return\
    \ \"0b\" . decbin($avg);\n}\n", "   if ($n > $m) {\n      return -1;\n   }\n \
    \  $sum = $n;\n   for ($i = $n; $i < $m; $i++) {\n      $sum += $i + 1;\n   }\n\
    \   $avg = round($sum / ($m - $n + 1));\n   return \"0b\" . decbin($avg);\n}",
  "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++)\
    \ {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"\
    0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL; // \"0b11\"\necho\
    \ rounded_avg(7, 5) . PHP_EOL; // -1\necho rounded_avg(10, 20) . PHP_EOL; // \"\
    0b1111\"\necho rounded_avg(20, 33) . PHP_EOL; // \"0b11010\"", "  if ($n > $m)\
    \ {\n    return -1;\n  } else {\n    return decbin(round(($n + $m) / 2));\n  }\n\
    }\n", "    $average = round(($n + $m) / 2);\n    if ($n > $m) {\n        return\
    \ -1;\n    }\n    return decbin($average);\n}\n\necho(rounded_avg(1, 5) . \"\\\
    n\");\necho(rounded_avg(7, 5) . \"\\n\");\necho(rounded_avg(10, 20) . \"\\n\"\
    );\necho(rounded_avg(20, 33) . \"\\n\");", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return '0b' . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "  if\
    \ ($n > $m) return -1;\n  return decbin(round(($n + $m) / 2));\n}\n", "    $sum\
    \ = 0;\n    if ($n > $m) {\n        return -1;\n    }\n    for ($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n +\
    \ 1));\n    return \"0b\" . decbin($avg);\n}", "\tif ($n > $m) {\n\t\treturn -1;\n\
    \t}\n\t$count = 0;\n\t$result = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$result\
    \ += $i;\n\t\t$count++;\n\t}\n\t$average = round($result / $count);\n\treturn\
    \ decbin($average);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return '0b' . decbin($avg);\n}", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return \"0b\"\
    \ . decbin($avg);\n}\n", "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n\
    \  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum\
    \ / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n}\n", "    if ($n > $m)\
    \ return -1;\n    $binary = decbin(round(($n + $m) / 2));\n    return \"0b$binary\"\
    ;\n}\necho rounded_avg(20, 33);", "  if ($n > $m) {\n    return -1;\n  }\n  $sum\
    \ = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = $sum\
    \ / ($m - $n + 1);\n  $int = floor($avg);\n  $bin = decbin($int);\n  return \"\
    0b$bin\";\n}\n\nprint rounded_avg(1, 5) . \"\\n\";\nprint rounded_avg(7, 5) .\
    \ \"\\n\";\nprint rounded_avg(10, 20) . \"\\n\";\nprint rounded_avg(20, 33) .\
    \ \"\\n\";", "    if ($n > $m) return -1;\n    $avg = round(($n + $m) / 2);\n\
    \    return \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho\
    \ rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20,\
    \ 33) . \"\\n\";\necho rounded_avg(2, 3) . \"\\n\";", "    if ($n > $m) {\n  \
    \      return -1;\n    }\n    $avg = ($n + $m) / 2;\n    $rounded = round($avg);\n\
    \    return decbin($rounded);\n}\n", "    if ($n > $m) return -1;\n    $avg =\
    \ round((($n + $m) / 2));\n    return decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\necho rounded_avg(10,\
    \ 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho \"\\n\";", "    if ($n\
    \ > $m) {\n        return -1;\n    }\n    $res = round(($n + $m) / 2);\n    return\
    \ decbin($res);\n}", "  if ($n > $m) return -1;\n  $avg = floor(($n + $m) / 2);\n\
    \  return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL; // \"0b11\"\necho\
    \ rounded_avg(7, 5) . PHP_EOL; // -1\necho rounded_avg(10, 20) . PHP_EOL; // \"\
    0b1111\"\necho rounded_avg(20, 33) . PHP_EOL; // \"0b11010\"", "    if ($n > $m)\
    \ {\n        return -1;\n    }\n    $total = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $total += $i;\n    }\n    $average = $total / ($m - $n + 1);\n  \
    \  $rounded = round($average);\n    return \"0b\" . decbin($rounded);\n}", "\t\
    if ($n > $m) return -1;\n\t$avg = round(($n + $m) / 2);\n\treturn \"0b\". decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "    if\
    \ ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n + $m) / 2);\n \
    \   return base_convert($avg, 10, 2);\n}\n", "    $sum = array_sum(range($n, $m));\n\
    \    $avg = $sum / ($m - $n + 1);\n    $rounded = round($avg);\n    return $n\
    \ > $m ? -1 : decbin($rounded);\n}", "  $sum = 0;\n  for ($i = $n; $i <= $m; $i++)\
    \ {\n    $sum += $i;\n  }\n  $avg = (int)round($sum / ($m - $n + 1));\n  return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"<br>\";\necho rounded_avg(7,\
    \ 5) . \"<br>\";\necho rounded_avg(10, 20) . \"<br>\";\necho rounded_avg(20, 33)\
    \ . \"<br>\";", "    if ($n > $m) return -1;\n    return decbin(round(($n + $m)\
    \ / 2));\n}\n\n$examples = [\n    [1, 5], // \"0b11\"\n    [7, 5], // -1\n   \
    \ [10, 20], // \"0b1111\"\n    [20, 33], // \"0b11010\"\n];\n\nforeach ($examples\
    \ as $ex) {\n    echo rounded_avg($ex[0], $ex[1]) . \"\\n\";\n}", "\tif ($n >\
    \ $m) return -1;\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) $sum += $i;\n\t\
    $avg = round($sum / ($m - $n + 1));\n\treturn \"0b\" . decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\n", "    // Enter code here\n\
    }\n", "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = $sum / ($m - $n + 1);\n  $avg\
    \ = round($avg);\n  return \"0b\" . decbin($avg);\n}\n\necho rounded_avg(7, 5);",
  "    if ($n > $m) return -1;\n    $sum = 0;\n    $count = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    $avg =\
    \ (int) ($sum / $count);\n    return \"0b\" . decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL; // => \"0b11\"\necho rounded_avg(7, 5) . PHP_EOL; // => -1\necho\
    \ rounded_avg(10, 20) . PHP_EOL; // => \"0b1111\"\necho rounded_avg(20, 33) .\
    \ PHP_EOL; // => \"0b11010\"", "    $sum = 0;\n    if ($n > $m) {\n        return\
    \ -1;\n    }\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    return decbin($sum);\n\
    }", "  $avg = floor(($n + $m) / 2);\n  return $n > $m ? -1 : \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(10, 20) . \"\\n\";", "  if ($n > $m) {\n    return -1;\n\
    \  }\n  $value = floor(($n + $m) / 2);\n  return decbin($value);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\n", "  if ($n > $m) return -1;\n\
    \  $avg = floor(($n + $m) / 2);\n  return base_convert($avg, 10, 2);\n}\n", " \
    \   $sum = 0;\n    $count = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    $avg = $sum / $count;\n    $rounded =\
    \ round($avg);\n    return base_convert($rounded, 10, 2);\n}\n", "    if ($n >\
    \ $m) {\n        return -1;\n    }\n    $total = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $total += $i;\n    }\n    $average = round($total / ($m - $n\
    \ + 1));\n    return \"0b\" . decbin($average);\n}\n", "  if ($n > $m) return\
    \ -1;\n  $a = ceil(($n + $m) / 2);\n  return '0b' . decbin($a);\n}\n\necho rounded_avg(20,\
    \ 33);", "  $round_avg = ceil(($n + $m) / 2);\n  if ($n > $m) {\n    return -1;\n\
    \  }\n  else {\n    return '0b' . decbin($round_avg);\n  }\n}\necho rounded_avg(10,\
    \ 20);", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}", "    if ($n > $m)\
    \ return -1;\n    $r = round(($n + $m) / 2);\n    return decbin($r);\n}\n", " \
    \ if ($n > $m) {\n    return -1;\n  } else {\n    return '0b' . decbin(round(($n\
    \ + $m) / 2));\n  }\n}", "    if ($n > $m) return -1;\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}", "\t$range = range($n, $m);\n\
    \t$avg = intval(array_sum($range) / count($range));\n\treturn decbin($avg);\n\
    }\n", "\t$avg = round(($n + $m) / 2);\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\
    \treturn decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;", "  if ($n > $m) return -1;\n  $avg = round(($n + $m) / 2);\n  return\
    \ decbin($avg);\n}\necho rounded_avg(7, 5);", "  if ($n > $m) {\n    return -1;\n\
    \  }\n  $avg = round(($n + $m) / 2);\n  return '0b' . decbin($avg);\n}\necho rounded_avg(10,\
    \ 20) . PHP_EOL;", "  if ($n > $m) return -1;\n  $avg = round(($n + $m) / 2);\n\
    \  return decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(7,\
    \ 5);\necho \"\\n\";\necho rounded_avg(10, 20);\necho \"\\n\";\necho rounded_avg(20,\
    \ 33);\necho \"\\n\";\n", "  if ($n > $m) return -1;\n  $count = 1;\n  $average\
    \ = ($n + $m) / 2;\n  $result = floor($average);\n  return '0b' . decbin($result);\n\
    }\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "    $avg\
    \ = round(($n + $m) / 2);\n    if ($n > $m) {\n        return -1;\n    }\n   \
    \ return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\n", "\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$count = 0;\n\t$sum\
    \ = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\t$count++;\n\t\
    }\n\treturn decbin(round($sum / $count));\n}\necho rounded_avg(1, 5);", "    $avg\
    \ = round(($n + $m) / 2);\n    if ($n > $m) {\n        return -1;\n    }\n   \
    \ return \"0b\" . decbin($avg);\n}\n", "    if ($n > $m) return -1;\n    $sum\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum\
    \ = round($sum / ($m - $n + 1));\n    return decbin($sum);\n}\nprint_r(rounded_avg(1,\
    \ 5));\nprint_r(rounded_avg(10, 20));\nprint_r(rounded_avg(20, 33));", "    $avg\
    \ = round(($n + $m) / 2);\n    if ($n > $m) return -1;\n    return base_convert($avg,\
    \ 10, 2);\n}\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10,\
    \ 20);\necho rounded_avg(20, 33);", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $average = round($sum / ($m - $n + 1));\n    return decbin($average);\n\
    }\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "    if\
    \ ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n    }\n    $binary = decbin(round($sum\
    \ / ($m - $n + 1)));\n    return \"0b\" . $binary;\n}\necho rounded_avg(20,33);",
  "  if ($n > $m) return -1;\n  return decbin(round(($n + $m) / 2));\n}", "  $count\
    \ = 0;\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n    $count++;\n\
    \  }\n  $sum = round($sum / $count);\n  if ($sum >= 0) {\n    return decbin($sum);\n\
    \  } else {\n    return -1;\n  }\n}\n", "  if ($n > $m) {\n    return -1;\n  }\n\
    \  $nums = range($n, $m);\n  $avg = round(array_sum($nums) / count($nums));\n\
    \  return \"0b\" . decbin($avg);\n}", "    $avg = $n > $m ? -1 : $n + (round(($m\
    \ - $n) / 2) + 1);\n    return '0b' . strval(decbin($avg));\n}", "  if ($n > $m)\
    \ return -1;\n  $arr = [];\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n \
    \   $arr[] = $i;\n    $sum += $i;\n  }\n  $avg = $sum / count($arr);\n  return\
    \ '0b' . decbin(round($avg));\n}", "  $diff = $m - $n;\n  $avg = $n + floor($diff\
    \ / 2);\n  return decbin($avg);\n}\n", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $rounded_avg = round($sum / ($m - $n + 1));\n    return decbin($rounded_avg);\n\
    }\n", "  $sum = 0;\n  if ($n > $m) {\n    return -1;\n  } else {\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n      $sum += $i;\n    }\n    $avg = round($sum / ($m\
    \ - $n + 1));\n    return decbin($avg);\n  }\n}\necho rounded_avg(10, 20);"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_18_how_many_times
language: php
results:
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  if ($substring == \"\") {\n\
    \    return 0;\n  }\n\n  $string_length = strlen($string);\n  $substring_length\
    \ = strlen($substring);\n  $length_difference = $string_length - $substring_length;\n\
    \  $matches = 0;\n\n  for ($i = 0; $i <= $length_difference; $i++) {\n    if (substr($string,\
    \ $i, $substring_length) == $substring) {\n      $matches++;\n    }\n  }\n\n \
    \ return $matches;\n}\n\n$substring = \"aa\";\n$string = \"aaa\";\n\necho how_many_times($string,\
    \ $substring);\necho PHP_EOL;\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  for ($i = 0;\
    \ $i < strlen($string); $i++) {\n    if (strpos($string, $substring, $i) === $i)\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\tif($string == \"\" || $substring\
    \ == \"\") return 0;\n\t$matches = [];\n\tpreg_match_all(\"/\".$substring.\"/\"\
    , $string, $matches);\n\treturn count($matches[0]);\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffl7sma9.php:23\n\
    Stack trace:\n#0 /tmp/tmpffl7sma9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpffl7sma9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  $last_position\
    \ = -1;\n  $substring_len = strlen($substring);\n  while(($last_position = strpos($string,\
    \ $substring, $last_position + 1)) !== false) {\n    $count++;\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            if (substr($string, $i, strlen($substring)) == $substring) {\n\
    \                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }\n\necho how_many_times('aaa', 'a');\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '3'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $counter = 0;\n  for ($i = 0;\
    \ $i < strlen($string); $i++) {\n    if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n      $counter++;\n    }\n  }\n  return $counter;\n}\n\necho\
    \ how_many_times('aaa', 'a');\necho how_many_times('aaaa', 'aa');\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '33'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    // Your code here\n    if($string\
    \ == \"\" || $substring == \"\"){\n      return 0;\n    }else{\n      $i = 0;\n\
    \      $len = strlen($string);\n      $offset = strlen($substring);\n      $count\
    \ = 0;\n      for($i; $i<$len; $i++){\n        if(strpos($string, $substring,\
    \ $i) !== false){\n          $count++;\n          $i = $i + $offset;\n       \
    \ }\n      }\n      return $count;\n    }\n}\n\n$string = \"abracadabra\";\n$substring\
    \ = \"ab\";\necho how_many_times($string, $substring);\necho \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpune9x7wj.php:40\n\
    Stack trace:\n#0 /tmp/tmpune9x7wj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpune9x7wj.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$index = 0;\n\t$count = 0;\n\
    \t$length = strlen($string);\n\t$substring_length = strlen($substring);\n\twhile\
    \ ($index < $length) {\n\t\t$found = strpos($string, $substring, $index);\n\t\t\
    if ($found !== false) {\n\t\t\t$count++;\n\t\t\t$index = $found + $substring_length;\n\
    \t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $count;\n}\n\necho how_many_times('',\
    \ 'a') . \"\\n\";\necho how_many_times('aaa', 'a') . \"\\n\";\necho how_many_times('aaaa',\
    \ 'aa') . \"\\n\";\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2n9j6zvg.php:36\n\
    Stack trace:\n#0 /tmp/tmp2n9j6zvg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2n9j6zvg.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    if (empty($string) || empty($substring))\
    \ {\n        return 0;\n    }\n    $count = 0;\n    $pos = 0;\n    while (($pos\
    \ = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n     \
    \   $pos++;\n    }\n    return $count;\n}\n\necho how_many_times('', 'a');\necho\
    \ PHP_EOL;\necho how_many_times('aaa', 'a');\necho PHP_EOL;\necho how_many_times('aaaa',\
    \ 'aa');\necho PHP_EOL;\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    // Your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7onvmeur.php:18\n\
    Stack trace:\n#0 /tmp/tmp7onvmeur.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7onvmeur.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $string_length\
    \ = strlen($string);\n    $substring_length = strlen($substring);\n    if ($substring_length\
    \ > $string_length) {\n        return $count;\n    }\n    if ($substring_length\
    \ == $string_length) {\n        if ($string == $substring) {\n            return\
    \ 1;\n        } else {\n            return $count;\n        }\n    }\n    for\
    \ ($i = 0; $i < $string_length; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $temp_string = '';\n            for ($j = 0; $j < $substring_length;\
    \ $j++) {\n                $temp_string .= $string[$i + $j];\n            }\n\
    \            if ($temp_string == $substring) {\n                $count++;\n  \
    \          }\n        }\n    }\n    return $count;\n}\n\necho how_many_times('',\
    \ 'a');\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: '0'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (true) {\n        $offset = strpos($string, $substring, $offset);\n\
    \        if ($offset === false) break;\n        $count++;\n        $offset++;\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  // your code\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmrqqvarw.php:17\n\
    Stack trace:\n#0 /tmp/tmpmrqqvarw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpmrqqvarw.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$counter = 0;\n\t$length = strlen($substring);\n\
    \t$string_length = strlen($string);\n\t\n\tfor ($i = 0; $i < $string_length; $i++)\
    \ {\n\t\t$compare = substr($string, $i, $length);\n\t\t\n\t\tif ($compare == $substring)\
    \ {\n\t\t\t$counter++;\n\t\t}\n\t}\n\t\n\treturn $counter;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  for ($i = 0;\
    \ $i < strlen($string); $i++) {\n    if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos++;\n\t}\n\treturn $count;\n}\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $total_times = 0;\n    $length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $length) == $substring) {\n            $total_times++;\n\
    \        }\n    }\n    return $total_times;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$substring_length\
    \ = strlen($substring);\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif\
    \ ($string[$i] == $substring[0]) {\n\t\t\t$sub_string = substr($string, $i, $substring_length);\n\
    \t\t\tif ($sub_string == $substring) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn $count;\n}\necho how_many_times('', 'a') . PHP_EOL;\necho how_many_times('aaa',\
    \ 'a') . PHP_EOL;\necho how_many_times('aaaa', 'aa') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    // your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn4sjfphw.php:18\n\
    Stack trace:\n#0 /tmp/tmpn4sjfphw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpn4sjfphw.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $occurences = 0;\n    for\
    \ ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $substring_length = strlen($substring);\n            $substring_occurence\
    \ = true;\n            for ($j = 1; $j < $substring_length; $j++) {\n        \
    \        if ($string[$i + $j] != $substring[$j]) {\n                    $substring_occurence\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if ($substring_occurence) {\n                $occurences++;\n      \
    \      }\n        }\n    }\n    return $occurences;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\necho how_many_times('',\
    \ 'a') . \"\\n\";\necho how_many_times('aaa', 'a') . \"\\n\";\necho how_many_times('aaaa',\
    \ 'aa') . \"\\n\";\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpg7j2fp.php:29\n\
    Stack trace:\n#0 /tmp/tmptpg7j2fp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptpg7j2fp.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $string .= ' ';\n  $substring\
    \ .= ' ';\n  $index = 0;\n  $count = 0;\n  $string_length = strlen($string);\n\
    \  $substring_length = strlen($substring);\n  while($index < $string_length) {\n\
    \    $num = 0;\n    while(($string[$index + $num] == $substring[$num]) && ($num\
    \ < $substring_length)) {\n      $num++;\n    }\n    if($num == $substring_length)\
    \ {\n      $count++;\n    }\n    $index++;\n  }\n  return $count;\n}\necho how_many_times('',\
    \ 'a') . \"\\n\";\necho how_many_times('aaa', 'a') . \"\\n\";\necho how_many_times('aaaa',\
    \ 'aa') . \"\\n\";\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpre8oh2hf.php:37\n\
    Stack trace:\n#0 /tmp/tmpre8oh2hf.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpre8oh2hf.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    //i: string, substring\n \
    \   //o: count\n    //c: -\n    //e: -\n    if ($substring == '') {\n        return\
    \ 0;\n    }\n    $counter = 0;\n    $index = 0;\n    while ($index !== false)\
    \ {\n        $index = strpos($string, $substring, $index);\n        if ($index\
    \ !== false) {\n            $counter++;\n            $index += strlen($substring);\n\
    \        }\n    }\n    return $counter;\n}\n$string = 'aaaa';\n$substring = 'aa';\n\
    var_dump(how_many_times($string, $substring));\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "int(2)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjr7rvai.php:38\n\
    Stack trace:\n#0 /tmp/tmpqjr7rvai.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqjr7rvai.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $times = 0;\n  $end = strlen($string);\n\
    \  for ($i = 0; $i < $end; $i++) {\n    if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n      $times++;\n    }\n  }\n  return $times;\n}\n\n$str =\
    \ 'aaaa';\n$substr = 'aa';\necho 'The string: ' . $str . '<br>';\necho 'The substring:\
    \ ' . $substr . '<br>';\necho 'The substring appears ' . how_many_times($str,\
    \ $substr) . ' times in the original string.<br>';\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'The string: aaaa<br>The substring: aa<br>The substring appears 3 times
    in the original string.<br>'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $result = 0;\n    $string_len\
    \ = strlen($string);\n    $substring_len = strlen($substring);\n    for ($i =\
    \ 0; $i < $string_len; $i++) {\n        $str = substr($string, $i, $substring_len);\n\
    \        if ($str == $substring) {\n            $result++;\n        }\n    }\n\
    \    return $result;\n}\necho how_many_times('', 'a');\necho how_many_times('aaa',\
    \ 'a');\necho how_many_times('aaaa', 'aa');\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '033'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $result = 0;\n    $length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $length) == $substring) {\n            $result++;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  if (strlen($substring) == 0)\
    \ {\n    return 0;\n  }\n\n  $n = 0;\n  for ($i = 0; $i < strlen($string); $i++)\
    \ {\n    if (substr($string, $i, strlen($substring)) == $substring) {\n      $n++;\n\
    \    }\n  }\n\n  return $n;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\tfor ($i = 0;\
    \ $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, strlen($substring))\
    \ == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  if (strlen($substring) == 0)\
    \ return 0;\n  if (strlen($string) == 0) return 0;\n  if (strlen($string) == 1)\
    \ return strstr($string, $substring) ? 1 : 0;\n  $index = 0;\n  $count = 0;\n\
    \  $search = str_replace($substring, \"*\", $string, $count);\n  return $count;\n\
    }\n\necho how_many_times('', 'a') . PHP_EOL;\necho how_many_times('aaa', 'a')\
    \ . PHP_EOL;\necho how_many_times('aaaa', 'aa') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7oohr84l.php:29\n\
    Stack trace:\n#0 /tmp/tmp7oohr84l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7oohr84l.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pointer\
    \ = 0;\n    while (($pointer = strpos($string, $substring, $pointer)) !== false)\
    \ {\n        $count++;\n        $pointer++;\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$i = 0;\n\t$strlen\
    \ = strlen($string);\n\t$substrlen = strlen($substring);\n\twhile ($i < $strlen\
    \ - 1) {\n\t\tif (substr($string, $i, $substrlen) == $substring) {\n\t\t\t$count++;\n\
    \t\t\t$i = $i + $substrlen;\n\t\t} else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\necho how_many_times('', 'a') . \"\\n\";\necho how_many_times('aaa', 'a')\
    \ . \"\\n\";\necho how_many_times('aaaa', 'aa') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl_zpds5.php:34\n\
    Stack trace:\n#0 /tmp/tmpyl_zpds5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyl_zpds5.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\tif ($substring == '') {\n\t\t\
    return 0;\n\t}\n\t\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($string); $i++)\
    \ {\n\t\tif (substr($string, $i, strlen($substring)) == $substring) {\n\t\t\t\
    $count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\tfor ($i = 0;\
    \ $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, strlen($substring))\
    \ == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  \n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe64dd_wt.php:17\n\
    Stack trace:\n#0 /tmp/tmpe64dd_wt.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpe64dd_wt.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $temp = substr($string, $i, strlen($substring));\n          \
    \  if ($temp == $substring) {\n                $count++;\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho how_many_times('', 'a') . \"\\n\";\n\
    echo how_many_times('aaa', 'a') . \"\\n\";\necho how_many_times('aaaa', 'aa')\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  for ($i = 0;\
    \ $i < strlen($string); $i++) {\n    if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$result = 0;\n\tfor ($i = 0;\
    \ $i < strlen($string); $i++) {\n\t\tif ($string[$i] == $substring[0]) {\n\t\t\
    \t$is_substr = true;\n\t\t\tfor ($j = 1; $j < strlen($substring); $j++) {\n\t\t\
    \t\tif ($string[$i + $j] != $substring[$j]) {\n\t\t\t\t\t$is_substr = false;\n\
    \t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($is_substr) {\n\t\t\t\t$result++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\necho how_many_times('', 'a') . '<br>';\n\
    echo how_many_times('aaa', 'a') . '<br>';\necho how_many_times('aaaa', 'aa') .\
    \ '<br>';\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: 0<br>3<br>3<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$p = 0;\n\t$offset\
    \ = strlen($substring);\n\twhile (($i = strpos($string, $substring, $p)) !== false)\
    \ {\n\t\t$count++;\n\t\t$p = $i + $offset;\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpncaa37sz.php:27\n\
    Stack trace:\n#0 /tmp/tmpncaa37sz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpncaa37sz.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$found = 0;\n\t$length = strlen($substring);\n\
    \tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, $length)\
    \ == $substring) {\n\t\t\t$found++;\n\t\t}\n\t}\n\treturn $found;\n}\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $string_length = strlen($string);\n\
    \  $substring_length = strlen($substring);\n  $times = 0;\n  for ($i = 0; $i <\
    \ $string_length; $i++) {\n    if (substr($string, $i, $substring_length) == $substring)\
    \ {\n      $times++;\n    }\n  }\n  return $times;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n   $start = 0;\n   $count = 0;\n\
    \   while(($pos = strpos($string, $substring, $start)) !== false) {\n      $start\
    \ = $pos + 1;\n      $count++;\n   }\n   return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzmr7njy.php:17\n\
    Stack trace:\n#0 /tmp/tmpwzmr7njy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwzmr7njy.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$result = 0;\n\tfor ($i = 0;\
    \ $i < strlen($string); $i++) {\n\t\tif (strpos($string, $substring, $i) == $i)\
    \ {\n\t\t\t$result++;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$how_many_times = 0;\n\t$substring_len\
    \ = strlen($substring);\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif\
    \ ($string[$i] == $substring[0]) {\n\t\t\t$is_substring = true;\n\t\t\tfor ($j\
    \ = 1; $j < $substring_len; $j++) {\n\t\t\t\tif ($string[$i + $j] != $substring[$j])\
    \ {\n\t\t\t\t\t$is_substring = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t\tif ($is_substring) {\n\t\t\t\t$how_many_times++;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $how_many_times;\n}\n\n$test_data = [\n\t[\"\", \"a\", 0],\n\t[\"aaa\"\
    , \"a\", 3],\n\t[\"aaaa\", \"aa\", 3],\n\t[\"aa\", \"a\", 2],\n\t[\"aaa\", \"\
    aa\", 2],\n\t[\"aaa\", \"ab\", 0],\n\t[\"aaaaaaaaaa\", \"aaaaa\", 4],\n\t[\"aaaaaaaaaa\"\
    , \"aaaaaa\", 3],\n\t[\"abababa\", \"aba\", 3],\n\t[\"abababa\", \"baba\", 2],\n\
    \t[\"abababa\", \"abababa\", 1],\n\t[\"aaaa\", \"aaaaa\", 0],\n\t[\"aaaaa\", \"\
    aaaaaa\", 0],\n\t[\"abababab\", \"abab\", 2],\n\t[\"abababab\", \"bab\", 2],\n\
    \t[\"abababab\", \"aba\", 2],\n\t[\"abababab\", \"baba\", 1],\n\t[\"bababab\"\
    , \"bab\", 2],\n\t[\"bababab\", \"aba\", 2],\n\t[\"bababab\", \"baba\", 1],\n\t\
    [\"aabababab\", \"bab\", 2],\n\t[\"aabababab\", \"aba\", 2],\n\t[\"aabababab\"\
    , \"baba\", 1],\n\t[\"aababababa\", \"bab\", 2\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2w8kcvbr.php on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($substring);\n    for ($i = 0; $i < strlen($string); $i += 1) {\n   \
    \     if (substr($string, $i, $length) === $substring) {\n            $count +=\
    \ 1;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  $str_len = strlen($string);\n\
    \  $substr_len = strlen($substring);\n  for ($i = 0; $i < $str_len; $i++) {\n\
    \    if (substr($string, $i, $substr_len) == $substring) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $start = 0;\n    $count =\
    \ 0;\n    while(strpos($string, $substring, $start) !== false) {\n        $start\
    \ = strpos($string, $substring, $start) + 1;\n        $count += 1;\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$times = 0;\n\t$start = 0;\n\
    \twhile (strpos($string, $substring, $start) !== false) {\n\t\t$start = strpos($string,\
    \ $substring, $start) + 1;\n\t\t$times++;\n\t}\n\treturn $times;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_count\
    \ = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i]\
    \ == $substring[$substring_count]) {\n            $substring_count++;\n      \
    \      if ($substring_count == strlen($substring)) {\n                $count++;\n\
    \                $substring_count = 0;\n            }\n        } else {\n    \
    \        $substring_count = 0;\n        }\n    }\n    return $count;\n}\n\necho\
    \ how_many_times('', 'a') . \"\\n\";\necho how_many_times('aaa', 'a') . \"\\n\"\
    ;\necho how_many_times('aaaa', 'aa') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4pdg7h71.php:36\n\
    Stack trace:\n#0 /tmp/tmp4pdg7h71.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4pdg7h71.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $substring_length = strlen($substring);\n            $substring_is_found\
    \ = true;\n            for ($j = 0; $j < $substring_length; $j++) {\n        \
    \        if ($string[$i + $j] != $substring[$j]) {\n                    $substring_is_found\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if ($substring_is_found) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $start_from\
    \ = 0;\n    $len = strlen($substring);\n    while(($new_start_from = strpos($string,\
    \ $substring, $start_from)) !== false) {\n        $count++;\n        $start_from\
    \ = $new_start_from + $len;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4pkainn_.php:27\n\
    Stack trace:\n#0 /tmp/tmp4pkainn_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4pkainn_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$start = 0;\n\
    \t$len = strlen($substring);\n\twhile ($start < strlen($string)) {\n\t\t$pos =\
    \ strpos($string, $substring, $start);\n\t\tif ($pos === false) {\n\t\t\tbreak;\n\
    \t\t}\n\t\t$count++;\n\t\t$start = $pos + $len;\n\t}\n\treturn $count;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgn0_g5yq.php:31\n\
    Stack trace:\n#0 /tmp/tmpgn0_g5yq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgn0_g5yq.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\necho how_many_times('aaa', 'a');\necho how_many_times('aaaa', 'aa');\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '33'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$cnt = 0;\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$str = substr($string, $i, strlen($substring));\n\
    \t\tif ($str == $substring) $cnt++;\n\t}\n\treturn $cnt;\n}\n\necho how_many_times('',\
    \ 'a') . \"\\n\";\necho how_many_times('aaa', 'a') . \"\\n\";\necho how_many_times('aaaa',\
    \ 'aa') . \"\\n\";\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $s = str_split($string);\n\
    \    $i = str_split($substring);\n    $c = 0;\n    $found = 0;\n    foreach ($s\
    \ as $k => $v) {\n        if ($v == $i[$c]) {\n            $c++;\n           \
    \ if ($c == count($i)) {\n                $found++;\n                $c = 0;\n\
    \            }\n        } else {\n            $c = 0;\n        }\n    }\n    return\
    \ $found;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0ilvztm.php:34\n\
    Stack trace:\n#0 /tmp/tmps0ilvztm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmps0ilvztm.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    // ToDo\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzw_yztnu.php:18\n\
    Stack trace:\n#0 /tmp/tmpzw_yztnu.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpzw_yztnu.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $string_array = str_split($string);\n\
    \    $substring_array = str_split($substring);\n    $counter = 0;\n    for ($i\
    \ = 0; $i < count($string_array); $i++) {\n        if ($string_array[$i] == $substring_array[0])\
    \ {\n            $found = true;\n            for ($j = 1; $j < count($substring_array);\
    \ $j++) {\n                if (!isset($string_array[$i + $j]) || $string_array[$i\
    \ + $j] != $substring_array[$j]) {\n                    $found = false;\n    \
    \                break;\n                }\n            }\n            if ($found)\
    \ {\n                $counter++;\n            }\n        }\n    }\n    return\
    \ $counter;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $num = 0;\n    $check = 0;\n\
    \    while ($check < strlen($string)) {\n        if (substr($string, $check, strlen($substring))\
    \ == $substring) {\n            $num += 1;\n            $check += strlen($substring);\n\
    \        } else {\n            $check += 1;\n        }\n    }\n    return $num;\n\
    }\necho how_many_times('aaaa', 'aa');\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dwpgfq1.php:30\n\
    Stack trace:\n#0 /tmp/tmp3dwpgfq1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3dwpgfq1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    // your code here\n}\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmi6_jk7.php:17\n\
    Stack trace:\n#0 /tmp/tmpwmi6_jk7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwmi6_jk7.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\tfor ($i = 0;\
    \ $i < strlen($string); $i++) {\n\t\t$pos = strpos($string, $substring, $i);\n\
    \t\tif ($pos !== false) {\n\t\t\t$count++;\n\t\t\t$i = $pos;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while(($pos = strpos($string, $substring, $offset)) !== false) {\n \
    \       $count++;\n        $offset = $pos + 1;\n    }\n    return $count;\n}\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $sublen = strlen($substring);\n\
    \    $subresult = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n       \
    \ if (substr($string, $i, $sublen) == $substring) {\n            $subresult++;\n\
    \        }\n    }\n    return $subresult;\n}\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $offset = 0;\n    $times =\
    \ 0;\n    $sublen = strlen($substring);\n    $strlen = strlen($string);\n    while\
    \ ($offset + $sublen <= $strlen) {\n        if (substr($string, $offset, $sublen)\
    \ == $substring) {\n            $times++;\n            $offset += $sublen;\n \
    \       } else {\n            $offset++;\n        }\n    }\n    return $times;\n\
    }\necho how_many_times('aaaa', 'aa') . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvisjv4d.php:33\n\
    Stack trace:\n#0 /tmp/tmpgvisjv4d.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgvisjv4d.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $answer = 0;\n    for ($i\
    \ = 0; $i < strlen($string); $i++) {\n        if (strpos($string, $substring,\
    \ $i) === $i) {\n            $answer++;\n        }\n    }\n    return $answer;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\tfor ($i = 0;\
    \ $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, strlen($substring))\
    \ == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$count\
    \ = how_many_times('ababababab','ab');\necho $count;\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '5'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6dab5505.php:18\n\
    Stack trace:\n#0 /tmp/tmp6dab5505.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6dab5505.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $i = 0;\n    $len = strlen($string);\n\
    \    $n = strlen($substring);\n    while($i < $len) {\n        if($string[$i]\
    \ == $substring[0]) {\n            $j = 0;\n            $match = true;\n     \
    \       while($j < $n) {\n                if($string[$i + $j] != $substring[$j])\
    \ {\n                    $match = false;\n                    break;\n       \
    \         }\n                $j++;\n            }\n            if($match) {\n\
    \                $count++;\n                $i += $n;\n            } else {\n\
    \                $i++;\n            }\n        } else {\n            $i++;\n \
    \       }\n    }\n    return $count;\n}\n\n$string = 'aaaa';\n$substring = 'aa';\n\
    echo '<br>count = ' . how_many_times($string, $substring);\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br>count = 2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_g6v5ap.php:45\n\
    Stack trace:\n#0 /tmp/tmpa_g6v5ap.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpa_g6v5ap.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\treturn substr_count($string,\
    \ $substring);\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgn4_eqws.php:20\n\
    Stack trace:\n#0 /tmp/tmpgn4_eqws.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgn4_eqws.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$sublength =\
    \ strlen($substring);\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string,\
    \ $i, $sublength) == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$pattern = '/' . $substring\
    \ . '/';\n\tpreg_match_all($pattern, $string, $matches);\n\t$matches = $matches[0];\n\
    \treturn count($matches);\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzkc_xzs2.php:23\n\
    Stack trace:\n#0 /tmp/tmpzkc_xzs2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzkc_xzs2.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $times = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $match = '';\n            for ($j = 0; $j < strlen($substring);\
    \ $j++) {\n                if (isset($string[$i + $j])) {\n                  \
    \  $match .= $string[$i + $j];\n                }\n            }\n           \
    \ if ($match == $substring) {\n                $times++;\n            }\n    \
    \    }\n    }\n    return $times;\n}\necho how_many_times('', 'a') . PHP_EOL;\n\
    echo how_many_times('aaa', 'a') . PHP_EOL;\necho how_many_times('aaaa', 'aa')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $length = strlen($string);\n\
    \  $position = 0;\n  $i = 0;\n  while($i < $length) {\n    $position = strpos($string,\
    \ $substring, $position);\n    if($position !== false) {\n      $i++;\n      $position++;\n\
    \    } else {\n      break;\n    }\n  }\n  return $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  $offset = 0;\n\
    \  while ($offset = strpos($string, $substring, $offset)) {\n    $count++;\n \
    \   $offset++;\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zekfnbf.php:25\n\
    Stack trace:\n#0 /tmp/tmp0zekfnbf.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0zekfnbf.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3r3n2ant.php:18\n\
    Stack trace:\n#0 /tmp/tmp3r3n2ant.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3r3n2ant.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\treturn preg_match_all('/'.$substring.'/',\
    \ $string, $matches, PREG_OFFSET_CAPTURE);\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7oaxusoi.php:20\n\
    Stack trace:\n#0 /tmp/tmp7oaxusoi.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7oaxusoi.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $index =\
    \ 0;\n    while (($index = strpos($string, $substring, $index)) !== false) {\n\
    \        $count++;\n        $index++;\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\tfor ($i = 0;\
    \ $i < strlen($string); $i++) {\n\t\tif ($string[$i] == $substring[0]) {\n\t\t\
    \tif (substr($string, $i, strlen($substring)) == $substring) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (isset($string[$offset])) {\n        $offset = strpos($string,\
    \ $substring, $offset);\n        if ($offset === false) {\n            break;\n\
    \        }\n        ++$count;\n        ++$offset;\n    }\n    return $count;\n\
    }\n\necho how_many_times('', 'a') . \"\\n\";\necho how_many_times('aaa', 'a')\
    \ . \"\\n\";\necho how_many_times('aaaa', 'aa') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos++;\n\t}\n\treturn $count;\n}\n\necho how_many_times('aa', 'a');\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '2'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$result = 0;\n\tfor ($i = 0;\
    \ $i < strlen($string); $i++) {\n\t\t$stop = false;\n\t\tfor ($j = 0; $j < strlen($substring);\
    \ $j++) {\n\t\t\tif ($string[$i + $j] != $substring[$j]) {\n\t\t\t\t$stop = true;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$stop) {\n\t\t\t$result++;\n\t\t\t$i\
    \ += strlen($substring) - 1;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp49p1rw4c.php:34\n\
    Stack trace:\n#0 /tmp/tmp49p1rw4c.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp49p1rw4c.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $start = 0;\n  $end = strlen($substring);\n\
    \  $count = 0;\n  while ($end <= strlen($string)) {\n    if (substr($string, $start,\
    \ $end) == $substring) {\n      $count++;\n    }\n    $start++;\n    $end++;\n\
    \  }\n  return $count;\n}\n\necho how_many_times('', 'a');\necho \"\\n\";\necho\
    \ how_many_times('aaa', 'a');\necho \"\\n\";\necho how_many_times('aaaa', 'aa');\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n2\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprrimtt03.php:36\n\
    Stack trace:\n#0 /tmp/tmprrimtt03.php(41): test()\n#1 {main}\n  thrown in /tmp/tmprrimtt03.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $string = str_split($string);\n\
    \    $substring = str_split($substring);\n    $n = 0;\n    $k = 0;\n    $answer\
    \ = 0;\n    foreach ($string as $i => $char) {\n        if ($char == $substring[$k])\
    \ {\n            $k++;\n            if ($k == count($substring)) {\n         \
    \       $k = 0;\n                $answer++;\n            }\n        } else {\n\
    \            $k = 0;\n        }\n    }\n    return $answer;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp94408efl.php:36\n\
    Stack trace:\n#0 /tmp/tmp94408efl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp94408efl.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $i = 0;\n\
    \    while(isset($string[$i])) {\n        if ($string[$i] == $substring[0]) {\n\
    \            $s = $i;\n            $j = 0;\n            while(isset($substring[$j]))\
    \ {\n                if ($string[$s] == $substring[$j]) {\n                  \
    \  $s++;\n                    $j++;\n                } else {\n              \
    \      break;\n                }\n            }\n            if ($j == strlen($substring))\
    \ {\n                $count++;\n            }\n        }\n        $i++;\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$string = strtolower($string);\n\
    \t$substring = strtolower($substring);\n\t$i = 0;\n\twhile(($i = strpos($string,\
    \ $substring, $i)) !== false) {\n\t\t$count++;\n\t\t$i++;\n\t}\n\treturn $count;\n\
    }\n\necho how_many_times('', 'a');\necho \"<br>\";\necho how_many_times('aaa',\
    \ 'a');\necho \"<br>\";\necho how_many_times('aaaa', 'aa');\necho \"<br>\";\n\
    echo how_many_times('aabcabcabcabcabcabcabcabcabcabc', 'abc');\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 0<br>3<br>3<br>10
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $length = strlen($string);\n\
    \    $count = 0;\n    for ($i = 0; $i < $length; $i++) {\n        if (substr($string,\
    \ $i, strlen($substring)) == $substring) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $matches = array();\n  $count\
    \ = preg_match_all(\"/$substring/\", $string, $matches);\n  return count($matches[0]);\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1httacx.php:22\n\
    Stack trace:\n#0 /tmp/tmpw1httacx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpw1httacx.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        $substr = substr($string, $i, strlen($substring));\n\
    \        if ($substr == $substring) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\necho how_many_times('', 'a') . \"\\n\";\necho how_many_times('aaa',\
    \ 'a') . \"\\n\";\necho how_many_times('aaaa', 'aa') . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\necho how_many_times('aaaa',\
    \ 'aa');\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: '3'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n      \
    \  if (substr($string, $i, $length) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\tif (strlen($substring) == 0)\
    \ {\n\t\treturn 0;\n\t}\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($string); $i++)\
    \ {\n\t\tif (substr($string, $i, strlen($substring)) == $substring) {\n\t\t\t\
    $count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  $strlen = strlen($string);\n\
    \  $substrlen = strlen($substring);\n  for ($i = 0; $i < $strlen; $i++) {\n  \
    \  if (substr($string, $i, $substrlen) == $substring) {\n      $count++;\n   \
    \ }\n  }\n  return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while(($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos++;\n\t}\n\treturn $count;\n}\n$string = '';\n$substring = 'a';\necho\
    \ '<pre>';\necho how_many_times($string, $substring);\necho '</pre>';\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <pre>0</pre>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq3667vfx.php:17\n\
    Stack trace:\n#0 /tmp/tmpq3667vfx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpq3667vfx.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$times = 0;\n\t$string_length\
    \ = strlen($string);\n\t$substring_length = strlen($substring);\n\t$i = 0;\n\t\
    while($i < $string_length) {\n\t\tif(substr($string, $i, $substring_length) ==\
    \ $substring) {\n\t\t\t$times++;\n\t\t\t$i += $substring_length;\n\t\t} else {\n\
    \t\t\t$i++;\n\t\t}\n\t}\n\treturn $times;\n}\n\n$string = 'aaaaaa';\n$substring\
    \ = 'aa';\necho how_many_times($string, $substring);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcya6vv1g.php:36\n\
    Stack trace:\n#0 /tmp/tmpcya6vv1g.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpcya6vv1g.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\tif ($substring === '') {\n\t\
    \treturn 0;\n\t}\n\treturn preg_match_all('/' . preg_quote($substring, '/') .\
    \ '/', $string, $dummy);\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ccrc_ue.php:23\n\
    Stack trace:\n#0 /tmp/tmp2ccrc_ue.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2ccrc_ue.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$match_count = 0;\n\t$position\
    \ = 0;\n\twhile ($position < strlen($string)) {\n\t\t$matched_position = strpos($string,\
    \ $substring, $position);\n\t\tif ($matched_position === false) {\n\t\t\treturn\
    \ $match_count;\n\t\t}\n\t\t$match_count++;\n\t\t$position = $matched_position\
    \ + 1;\n\t}\n\treturn $match_count;\n}\n\nfunction candidate(...$args) {\n   \
    \ return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t// return count occurrences\
    \ of $substring in $string\n\tif (strlen($substring) > strlen($string)) return\
    \ 0;\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string,\
    \ $i, strlen($substring)) == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $result = 0;\n  $n = strlen($string);\n\
    \  $m = strlen($substring);\n  for ($i = 0; $i < $n; $i++) {\n    if ($string[$i]\
    \ == $substring[0]) {\n      $equal = true;\n      for ($j = 1; $j < $m; $j++)\
    \ {\n        if ($string[$i + $j] != $substring[$j]) {\n          $equal = false;\n\
    \          break;\n        }\n      }\n      if ($equal) {\n        $result++;\n\
    \      }\n    }\n  }\n  return $result;\n}\n\n$string = '';\n$substring = 'a';\n\
    echo '>>> how_many_times(\"\", \"a\")'.\"\\n\";\necho how_many_times($string,\
    \ $substring).\"\\n\";\n$string = 'aaa';\n$substring = 'a';\necho '>>> how_many_times(\"\
    aaa\", \"a\")'.\"\\n\";\necho how_many_times($string, $substring).\"\\n\";\n$string\
    \ = 'aaaa';\n$substring = 'aa';\necho '>>> how_many_times(\"aaaa\", \"aa\")'.\"\
    \\n\";\necho how_many_times($string, $substring).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ">>> how_many_times(\"\", \"a\")\n0\n>>> how_many_times(\"aaa\", \"a\")\n\
    3\n>>> how_many_times(\"aaaa\", \"aa\")\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    if (empty($string) || empty($substring))\
    \ {\n        return 0;\n    }\n    $string = trim($string);\n    $substring =\
    \ trim($substring);\n    $total_length = strlen($string);\n    $substring_length\
    \ = strlen($substring);\n    $counter = 0;\n    for ($i = 0; $i < $total_length;\
    \ $i++) {\n        if ($string[$i] == $substring[0]) {\n            $is_equal\
    \ = true;\n            for ($j = 1; $j < $substring_length; $j++) {\n        \
    \        if ($string[$i + $j] != $substring[$j]) {\n                    $is_equal\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if ($is_equal) {\n                $counter++;\n            }\n     \
    \   }\n    }\n    return $counter;\n}\n\n$string = 'aaaa';\n$substring = 'aa';\n\
    echo how_many_times($string, $substring);\nfunction candidate(...$args) {\n  \
    \  return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '3'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    if (empty($string) || empty($substring))\
    \ {\n        return 0;\n    }\n    if (strlen($substring) > strlen($string)) {\n\
    \        return 0;\n    }\n    if ($string == $substring) {\n        return 1;\n\
    \    }\n    $sub_len = strlen($substring);\n    $st_len = strlen($string);\n \
    \   $counter = 0;\n    for ($i = 0; $i < $st_len; $i++) {\n        if (substr($string,\
    \ $i, $sub_len) == $substring) {\n            $counter++;\n        }\n    }\n\
    \    return $counter;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $len_string = strlen($string);\n\
    \    $len_substring = strlen($substring);\n    $found = 0;\n    for ($i = 0; $i\
    \ < $len_string; $i++) {\n        if ($string[$i] == $substring[0]) {\n      \
    \      $found = 1;\n            for ($j = 1; $j < $len_substring; $j++) {\n  \
    \              if ($string[$i + $j] != $substring[$j]) {\n                   \
    \ $found = 0;\n                    break;\n                }\n            }\n\
    \            if ($found) {\n                $count++;\n            }\n       \
    \ }\n    }\n    return $count;\n}\n\nvar_dump(how_many_times('', 'a'));\nvar_dump(how_many_times('aaa',\
    \ 'a'));\nvar_dump(how_many_times('aaaa', 'aa'));\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "NULL\nint(3)\nint(3)\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpla3bn3md.php:38\nStack trace:\n#0 /tmp/tmpla3bn3md.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpla3bn3md.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $times = 0;\n    $substring_len\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_len) == $substring) {\n            $times++;\n\
    \        }\n    }\n    return $times;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    $offset = 0;\n\twhile (($pos = strpos($string, $substring, $offset)) !== false)\
    \ {\n\t\t$count++;\n\t\t$offset = $pos + 1;\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  $remain = $string;\n\
    \  while (strpos($remain, $substring) !== false) {\n    $count++;\n    $remain\
    \ = substr($remain, strpos($remain, $substring) + 1);\n  }\n  return $count;\n\
    }\necho how_many_times('', 'a') . \"\\n\";\necho how_many_times('aaa', 'a') .\
    \ \"\\n\";\necho how_many_times('aaaa', 'aa') . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$pos = 0;\n\t$i = 0;\n\twhile\
    \ (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$i++;\n\t\t$pos\
    \ += strlen($substring);\n\t}\n\treturn $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidvnnfk6.php:26\n\
    Stack trace:\n#0 /tmp/tmpidvnnfk6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpidvnnfk6.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$position = 0;\n\
    \twhile (($position = strpos($string, $substring, $position)) !== false) {\n\t\
    \t$count++;\n\t\t$position++;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$offset = 0;\n\
    \twhile(($offset = strpos($string, $substring, $offset)) !== false) {\n\t\t$count++;\n\
    \t\t$offset += strlen($substring);\n\t}\n\treturn $count;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn5g94o0e.php:25\n\
    Stack trace:\n#0 /tmp/tmpn5g94o0e.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpn5g94o0e.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $pos = 0;\n    $counter =\
    \ 0;\n    while(($pos = strpos($string, $substring, $pos)) !== false) {\n    \
    \    $counter++;\n        $pos++;\n    }\n    return $counter;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$string_pos =\
    \ 0;\n\t$substring_pos = 0;\n\t\n\twhile($string_pos < strlen($string)) {\n\t\t\
    $string_pos = strpos($string, $substring, $string_pos);\n\t\tif($string_pos !==\
    \ false) {\n\t\t\t$count++;\n\t\t\t$string_pos++;\n\t\t}\n\t}\n\t\n\treturn $count;\n\
    }\n\nprint_r(how_many_times('', 'a'));\nprint_r(how_many_times('aaa', 'a'));\n\
    print_r(how_many_times('aaaa', 'aa'));\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: b'03'
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$sum = 0;\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\tif (substr($string, $i, strlen($substring))\
    \ == $substring) {\n\t\t\t$sum++;\n\t\t}\n\t}\n\treturn $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    //your code goes here!\n \
    \   $total = 0;\n    $sub_length = strlen($substring);\n    $sub_length_counter\
    \ = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i]\
    \ == $substring[$sub_length_counter]) {\n            $sub_length_counter++;\n\
    \            if ($sub_length_counter == $sub_length) {\n                $total++;\n\
    \                $sub_length_counter = 0;\n            }\n        } else {\n \
    \           $sub_length_counter = 0;\n        }\n    }\n    return $total;\n}\n\
    \nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0svsj11d.php:35\n\
    Stack trace:\n#0 /tmp/tmp0svsj11d.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0svsj11d.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  if(strlen($substring) == 0)\
    \ return 0;\n  $times = substr_count($string, $substring);\n  if(strlen($substring)\
    \ == 1) return $times;\n  $i = 1;\n  while(strlen($substring) - $i > 0) {\n  \
    \  $times += substr_count($string, substr($substring, $i, strlen($substring) -\
    \ $i));\n    $i++;\n  }\n  return $times;\n}\necho how_many_times('aaaa', 'aa');\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6dpdfl7s.php:28\n\
    Stack trace:\n#0 /tmp/tmp6dpdfl7s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6dpdfl7s.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$i = 0;\n\twhile\
    \ ($i <= strlen($string) - strlen($substring)) {\n\t\tif (substr($string, $i,\
    \ strlen($substring)) == $substring) {\n\t\t\t$count++;\n\t\t\t$i += strlen($substring);\n\
    \t\t} else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpc2d6fm.php:30\n\
    Stack trace:\n#0 /tmp/tmpwpc2d6fm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwpc2d6fm.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$len = strlen($substring);\n\
    \tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, $len)\
    \ == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $start = 0;\n    $count =\
    \ 0;\n    while (strpos($string, $substring, $start) !== false) {\n        $start\
    \ = strpos($string, $substring, $start) + 1;\n        $count++;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\tif (strlen($substring) > strlen($string))\
    \ return 0;\n\tif ($substring == '') return 0;\n\tif ($string == '') return 0;\n\
    \t$times = 0;\n\t$current_index = 0;\n\twhile(1) {\n\t\t$last_match = strpos($string,\
    \ $substring, $current_index);\n\t\tif ($last_match === false) break;\n\t\t$times++;\n\
    \t\t$current_index = $last_match + 1;\n\t}\n\treturn $times;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $occurrences = 0;\n    $position\
    \ = 0;\n    while (($position = strpos($string, $substring, $position)) !== false)\
    \ {\n        $position++;\n        $occurrences++;\n    }\n    return $occurrences;\n\
    }\n\necho how_many_times('', 'a');\necho '<br>';\necho how_many_times('aaa', 'a');\n\
    echo '<br>';\necho how_many_times('aaaa', 'aa');\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 0<br>3<br>3
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $times = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $exists = true;\n            for ($j = 0; $j < strlen($substring);\
    \ $j++) {\n                if (!isset($string[$i + $j]) || $string[$i + $j] !=\
    \ $substring[$j]) {\n                    $exists = false;\n                  \
    \  break;\n                }\n            }\n            if ($exists) {\n    \
    \            $times++;\n            }\n        }\n    }\n    return $times;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $matches = [];\n  if (empty($string)\
    \ || empty($substring)) {\n    return 0;\n  }\n  $count = 0;\n  $last_index =\
    \ 0;\n  while (strpos($string, $substring, $last_index) !== false) {\n    $last_index\
    \ = strpos($string, $substring, $last_index) + 1;\n    $count++;\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\tfor ($i = 0;\
    \ $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, strlen($substring))\
    \ == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nprint_r(how_many_times('',\
    \ 'a'));\necho '<br>';\nprint_r(how_many_times('aaa', 'a'));\necho '<br>';\nprint_r(how_many_times('aaaa',\
    \ 'aa'));\necho '<br>';\nprint_r(how_many_times('lorem ipsum dolor sit amet lorem\
    \ ipsum dolor sit amet', 'lorem'));\necho '<br>';\nprint_r(how_many_times('lorem\
    \ ipsum dolor sit amet lorem ipsum dolor sit amet', 'ipsum'));\necho '<br>';\n\
    print_r(how_many_times('lorem ipsum dolor sit amet lorem ipsum dolor sit amet',\
    \ 'dolor'));\necho '<br>';\nprint_r(how_many_times('lorem ipsum dolor sit amet\
    \ lorem ipsum dolor sit amet', 'sit'));\necho '<br>';\nprint_r(how_many_times('lorem\
    \ ipsum dolor sit amet lorem ipsum dolor sit amet', 'amet'));\necho '<br>';\n\
    print_r(how_many_times('lorem ipsum dolor sit amet lorem ipsum dolor sit amet',\
    \ 'loremipsum'));\necho '<br>';\nprint_r(how_many_times('lorem ipsum dolor sit\
    \ amet lorem ipsum dolor sit amet', 'loremipsumamet'));\necho '<br>';\nprint_r(how_many_times('lorem\
    \ ipsum dolor sit amet lorem ipsum dolor sit amet', 'loremipsumdolorsitamet'));\n\
    echo '<br>';\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: 0<br>3<br>3<br>2<br>2<br>2<br>2<br>2<br>0<br>0<br>0<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  for ($i = 0;\
    \ $i < strlen($string); $i++) {\n    if ($string[$i] == $substring[0]) {\n   \
    \   if (substr($string, $i, strlen($substring)) == $substring) {\n        $count++;\n\
    \      }\n    }\n  }\n  return $count;\n}\n\nprint_r(how_many_times('', 'a'));\
    \ // 0\nprint_r(how_many_times('aaa', 'a')); // 3\nprint_r(how_many_times('aaaa',\
    \ 'aa')); // 3\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: '033'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  for ($i = 0;\
    \ $i < strlen($string); $i++) {\n    if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        $match = true;\n        for ($j =\
    \ 0; $j < strlen($substring); $j++) {\n            if ($string[$i + $j] != $substring[$j])\
    \ {\n                $match = false;\n                break;\n            }\n\
    \        }\n        if ($match) {\n            $count++;\n        }\n    }\n \
    \   return $count;\n}\n\necho how_many_times('aaaa', 'aa');\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '3'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $counter = 0;\n  for ($i = 0;\
    \ $i < strlen($string); $i++) {\n    if ($string[$i] == $substring[0]) {\n   \
    \   $tempString = substr($string, $i, strlen($substring));\n      if ($tempString\
    \ == $substring) {\n        $counter++;\n      }\n    }\n  }\n  return $counter;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $len = strlen($substring);\n\
    \    if ($len > strlen($string)) {\n        return 0;\n    }\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        if (substr($string, $i,\
    \ $len) == $substring) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    if ($substring === '') return\
    \ 0;\n    $count = 0;\n    $substring_length = strlen($substring);\n    for ($i\
    \ = 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, $substring_length)\
    \ === $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nassert(how_many_times('', 'a') === 0);\nassert(how_many_times('aaa', 'a')\
    \ === 3);\nassert(how_many_times('aaaa', 'aa') === 3);\nassert(how_many_times('aa',\
    \ 'aa') === 1);\nassert(how_many_times('hello', 'l') === 2);\nassert(how_many_times('hello',\
    \ 'lo') === 1);\nassert(how_many_times('hello', 'h') === 1);\nassert(how_many_times('hello',\
    \ 'hello') === 1);\nassert(how_many_times('hello', 'helloo') === 0);\nassert(how_many_times('hello',\
    \ 'hell') === 0);\necho 'Passed!';\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): assert(how_many_times('hello', 'hell') === 0) failed\
    \ in /tmp/tmp1udqw8lq.php on line 30\nPassed!"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $position\
    \ = 0;\n    $length = strlen($substring);\n    while (($position = strpos($string,\
    \ $substring, $position)) !== false) {\n        $count++;\n        $position +=\
    \ $length;\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3qa6w1m.php:26\n\
    Stack trace:\n#0 /tmp/tmpj3qa6w1m.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpj3qa6w1m.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$i = 0;\n\t$len = strlen($string);\n\
    \t$str_arr = str_split($string);\n\t$substring_arr = str_split($substring);\n\t\
    $sub_len = strlen($substring);\n\twhile($i < $len) {\n\t\tif($str_arr[$i] == $substring_arr[0])\
    \ {\n\t\t\tif(substr($string, $i, $sub_len) == $substring) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t\t$i++;\n\t}\n\treturn $count;\n}\n\necho how_many_times('aaaa',\
    \ 'aa');\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0rld5wn5.php:33\n\
    Stack trace:\n#0 /tmp/tmp0rld5wn5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0rld5wn5.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$length = strlen($string);\n\
    \t$sub_length = strlen($substring);\n\t$total = 0;\n\tfor ($i = 0; $i < $length;\
    \ $i++) {\n\t\t$k = 0;\n\t\tfor ($j = 0; $j < $sub_length; $j++) {\n\t\t\tif ($string[$i\
    \ + $j] == $substring[$j]) {\n\t\t\t\t$k++;\n\t\t\t}\n\t\t}\n\t\tif ($k == $sub_length)\
    \ {\n\t\t\t$total++;\n\t\t}\n\t}\n\treturn $total;\n}\necho how_many_times('',\
    \ 'a') . '<br />';\necho how_many_times('aaa', 'a') . '<br />';\necho how_many_times('aaaa',\
    \ 'aa') . '<br />';\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: 0<br />3<br />3<br />
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$string_length\
    \ = strlen($string);\n\t$substring_length = strlen($substring);\n\tfor ($i = 0;\
    \ $i < $string_length; $i++) {\n\t\tif ($string[$i] == $substring[0]) {\n\t\t\t\
    $is_substring = true;\n\t\t\tfor ($j = 1; $j < $substring_length; $j++) {\n\t\t\
    \t\tif ($string[$i + $j] != $substring[$j]) {\n\t\t\t\t\t$is_substring = false;\n\
    \t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($is_substring) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args) {\n   \
    \ return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $num = 0;\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $num++;\n        }\n    }\n    return $num;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$new_string = $string;\n\t$number_of_substrings\
    \ = 0;\n\twhile (strpos($new_string, $substring) !== false) {\n\t\t$new_string\
    \ = substr($new_string, strpos($new_string, $substring) + 1);\n\t\t$number_of_substrings++;\n\
    \t}\n\treturn $number_of_substrings;\n}\n\n$string = 'aaaa';\n$substring = 'aa';\n\
    echo how_many_times($string, $substring);\nfunction candidate(...$args) {\n  \
    \  return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '3'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\necho how_many_times('', 'a') . \"\\n\";\necho how_many_times('aaa', 'a')\
    \ . \"\\n\";\necho how_many_times('aaaa', 'aa') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $i = 0;\n  $count = 0;\n  $length\
    \ = strlen($string);\n  $find = strlen($substring);\n  while ($i <= $length) {\n\
    \    if (strpos($string, $substring, $i) !== false) {\n      $i = strpos($string,\
    \ $substring, $i) + $find;\n      $count++;\n    } else {\n      $i++;\n    }\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpompdjg79.php:32\n\
    Stack trace:\n#0 /tmp/tmpompdjg79.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpompdjg79.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  for ($i = 0;\
    \ $i < strlen($string); $i++) {\n    if ($string[$i] == $substring[0]) {\n   \
    \   $flag = true;\n      for ($j = 0; $j < strlen($substring); $j++) {\n     \
    \   if ($string[$i + $j] != $substring[$j]) {\n          $flag = false;\n    \
    \      break;\n        }\n      }\n      if ($flag) {\n        $count++;\n   \
    \   }\n    }\n  }\n  return $count;\n}\n\n$string = 'aaaa';\n$substring = 'aa';\n\
    echo how_many_times($string, $substring) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\tif ($substring == '') {\n\t\t\
    return 0;\n\t}\n\n\tif (strlen($string) <= strlen($substring)) {\n\t\tif ($string\
    \ == $substring) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t\
    }\n\n\t$times = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif ($string[$i]\
    \ == $substring[0]) {\n\t\t\t$flag = 1;\n\t\t\tfor ($j = 1; $j < strlen($substring);\
    \ $j++) {\n\t\t\t\tif ($string[$i + $j] != $substring[$j]) {\n\t\t\t\t\t$flag\
    \ = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($flag) {\n\t\t\t\t$times++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $times;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $last_pos\
    \ = 0;\n    while(($last_pos = strpos($string, $substring, $last_pos)) !== false)\
    \ {\n        $count += 1;\n        $last_pos += strlen($substring);\n    }\n \
    \   return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2mjtir36.php:26\n\
    Stack trace:\n#0 /tmp/tmp2mjtir36.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2mjtir36.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t// Your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc__ueor5.php:18\n\
    Stack trace:\n#0 /tmp/tmpc__ueor5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpc__ueor5.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  while (substr_count($string,\
    \ $substring) > 0) {\n    $string = str_replace($substring, '', $string, $count);\n\
    \  }\n  return $count;\n}\n\necho how_many_times('', 'a') . \"\\n\";\necho how_many_times('aaa',\
    \ 'a') . \"\\n\";\necho how_many_times('aaaa', 'aa') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffxbje26.php:27\n\
    Stack trace:\n#0 /tmp/tmpffxbje26.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpffxbje26.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    if (strlen($substring) ==\
    \ 0) {\n        return 0;\n    }\n    $count = 0;\n    $start = strpos($string,\
    \ $substring);\n    while ($start !== false) {\n        $count += 1;\n       \
    \ $start = strpos($string, $substring, $start + 1);\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\tfor ($i = 0;\
    \ $i < strlen($string); $i++) {\n\t\tif ($string[$i] == $substring[0]) {\n\t\t\
    \t$match = true;\n\t\t\tfor ($j = 1; $j < strlen($substring); $j++) {\n\t\t\t\t\
    if ($string[$i + $j] != $substring[$j]) {\n\t\t\t\t\t$match = false;\n\t\t\t\t\
    \tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($match) {\n\t\t\t\t$count++;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn $count;\n}\necho how_many_times('', 'a');\necho how_many_times('aaa',\
    \ 'a');\necho how_many_times('aaaa', 'aa');\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '033'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $match_count = 0;\n  $match_index\
    \ = -1;\n  $substring_length = strlen($substring);\n  $index = 0;\n  while (($match_index\
    \ = strpos($string, $substring, $index)) !== false) {\n    ++$match_count;\n \
    \   $index = $match_index + $substring_length;\n  }\n  return $match_count;\n\
    }\n\necho how_many_times('aaaa', 'aa') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjmn3uk0w.php:29\n\
    Stack trace:\n#0 /tmp/tmpjmn3uk0w.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjmn3uk0w.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $start =\
    \ 0;\n    while (($start = strpos($string, $substring, $start)) !== false) {\n\
    \        $count++;\n        $start += strlen($substring);\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekhpkoet.php:25\n\
    Stack trace:\n#0 /tmp/tmpekhpkoet.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpekhpkoet.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $pos = 0;\n    $cnt = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $pos\
    \ += strlen($substring);\n        $cnt++;\n    }\n    return $cnt;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevm2fey8.php:26\n\
    Stack trace:\n#0 /tmp/tmpevm2fey8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpevm2fey8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $len = strlen($substring);\n\
    \    $result = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if\
    \ (substr($string, $i, $len) == $substring) {\n            $result++;\n      \
    \  }\n    }\n    return $result;\n}\n\necho how_many_times('', 'a') . \"\\n\"\
    ;\necho how_many_times('aaa', 'a') . \"\\n\";\necho how_many_times('aaaa', 'aa')\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $start =\
    \ 0;\n    while ( $start < strlen($string) ) {\n        $pos = strpos($string,\
    \ $substring, $start);\n        if ( $pos !== false ) {\n            $count++;\n\
    \            $start = $pos + 1;\n        } else {\n            break;\n      \
    \  }\n    }\n    return $count;\n}\n\n$string = 'baab';\n$substring = 'aa';\n\
    echo how_many_times($string, $substring);\nfunction candidate(...$args) {\n  \
    \  return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $string_length = strlen($string);\n\
    \    $substring_length = strlen($substring);\n    $times = 0;\n    for ($i = 0;\
    \ $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $times++;\n        }\n    }\n    return $times;\n\
    }\necho how_many_times('', 'a');\necho '<br>';\necho how_many_times('aaa', 'a');\n\
    echo '<br>';\necho how_many_times('aaaa', 'aa');\necho '<br>';\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 0<br>3<br>3<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  $start = 0;\n\
    \  while ($start = strpos($string, $substring, $start)) {\n    $count++;\n   \
    \ $start++;\n  }\n  return $count;\n}\n\nvar_dump(how_many_times('', 'a'));\n\
    var_dump(how_many_times('aaa', 'a'));\nvar_dump(how_many_times('aaaa', 'aa'));\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(0)\nint(0)\nint(0)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp47wlumus.php:28\nStack trace:\n#0 /tmp/tmp47wlumus.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmp47wlumus.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $times = 0;\n    $start =\
    \ 0;\n    $len = strlen($substring);\n    while(($start = strpos($string, $substring,\
    \ $start)) !== false) {\n        $times++;\n        $start += $len;\n    }\n \
    \   return $times;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6fhevni.php:27\n\
    Stack trace:\n#0 /tmp/tmpb6fhevni.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpb6fhevni.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $result = 0;\n    $len = strlen($substring);\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        if (substr($string, $i,\
    \ $len) == $substring) {\n            $result++;\n        }\n    }\n    return\
    \ $result;\n}\n\n$string = '';\n$substring = 'a';\necho how_many_times($string,\
    \ $substring);\necho \"\\n\";\n\n$string = 'aaa';\n$substring = 'a';\necho how_many_times($string,\
    \ $substring);\necho \"\\n\";\n\n$string = 'aaaa';\n$substring = 'aa';\necho how_many_times($string,\
    \ $substring);\necho \"\\n\";\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    // 0,0 => 0\n    if ($string\
    \ == '' || $substring == '') {\n        return 0;\n    }\n    $count = 0;\n  \
    \  for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $j = 1;\n            while ($j < strlen($substring) && $i + $j\
    \ < strlen($string) && $string[$i + $j] == $substring[$j]) {\n               \
    \ $j++;\n            }\n            if ($j == strlen($substring)) {\n        \
    \        $count++;\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ how_many_times('', 'a') . \"\\n\";\necho how_many_times('aaa', 'a') . \"\\n\"\
    ;\necho how_many_times('aaaa', 'aa') . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $start =\
    \ 0;\n    while ($start + strlen($substring) <= strlen($string)) {\n        if\
    \ (substr($string, $start, strlen($substring)) == $substring) {\n            $count++;\n\
    \        }\n        $start++;\n    }\n    return $count;\n}\n\necho how_many_times('',\
    \ 'a');\necho \"\\n\";\necho how_many_times('aaa', 'a');\necho \"\\n\";\necho\
    \ how_many_times('aaaa', 'aa');\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $counter = 0;\n    for ($i\
    \ = 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $counter++;\n        }\n    }\n    return $counter;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  return substr_count($string,\
    \ $substring);\n}\n\necho how_many_times('aa', 'a');\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp2t9c1c.php:22\n\
    Stack trace:\n#0 /tmp/tmpjp2t9c1c.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjp2t9c1c.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    // This variable will store\
    \ the number of times $substring can be found in $string\n    $count = 0;\n  \
    \  // This loop will go over every possible index of $string to see if $substring\
    \ can be found there\n    for ($i = 0; $i < strlen($string); $i++) {\n       \
    \ // This if statement checks if $substring starts at the current index\n    \
    \    if (substr($string, $i, strlen($substring)) == $substring) {\n          \
    \  // If it does, add 1 to $count\n            $count++;\n        }\n    }\n \
    \   // Finally, return the $count variable\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $times = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $times++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $times;\n}\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$result = 0;\n\tif (strlen($substring)\
    \ == 0) {\n\t\treturn $result;\n\t}\n\t$len_string = strlen($string);\n\t$len_substring\
    \ = strlen($substring);\n\tfor ($i = 0; $i < $len_string; $i++) {\n\t\tif ($string[$i]\
    \ == $substring[0]) {\n\t\t\t$found = true;\n\t\t\tfor ($j = 1; $j < $len_substring;\
    \ $j++) {\n\t\t\t\tif ($string[$i + $j] != $substring[$j]) {\n\t\t\t\t\t$found\
    \ = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($found) {\n\t\t\t\t\
    $result++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$position = 0;\n\
    \t\n\t// While the position is less than the length of the string.\n\twhile($position\
    \ < strlen($string)) {\n\t\t// If the substring exists in the string at the position.\n\
    \t\tif(strpos($string, $substring, $position) !== false) {\n\t\t\t// Increment\
    \ count and set position to the end of the substring.\n\t\t\t$count++;\n\t\t\t\
    $position = strpos($string, $substring, $position) + strlen($substring);\n\t\t\
    // Otherwise\n\t\t} else {\n\t\t\t// Break.\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t\
    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcwk_i054.php:36\n\
    Stack trace:\n#0 /tmp/tmpcwk_i054.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpcwk_i054.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $start =\
    \ 0;\n    $len = strlen($substring);\n    while (true) {\n        $found = strpos($string,\
    \ $substring, $start);\n        if ($found === false) {\n            break;\n\
    \        }\n        $count++;\n        $start = $found + $len;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ypxezjz.php:31\n\
    Stack trace:\n#0 /tmp/tmp7ypxezjz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7ypxezjz.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $times = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $times++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $times;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $num = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $num++;\n\
    \        $pos += strlen($substring);\n    }\n    return $num;\n}\n\nvar_dump(how_many_times('',\
    \ 'a'));\nvar_dump(how_many_times('aaa', 'a'));\nvar_dump(how_many_times('aaaa',\
    \ 'aa'));\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "int(0)\nint(3)\nint(2)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpkqpjyc7w.php:29\nStack trace:\n#0 /tmp/tmpkqpjyc7w.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpkqpjyc7w.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\tif ($substring === '') {\n\t\
    \treturn 0;\n\t}\n\n\t$len = strlen($string);\n\t$sub_len = strlen($substring);\n\
    \t$count = 0;\n\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tif (substr($string, $i,\
    \ $sub_len) === $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\n\treturn $count;\n\
    }\n\necho how_many_times('aaaa', 'aa');\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '3'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $times = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        $x = $i;\n        $y = 0;\n      \
    \  $times_to_add = 0;\n        while ($x < strlen($string) && $y < strlen($substring)\
    \ && $string[$x] == $substring[$y]) {\n            $x++;\n            $y++;\n\
    \            $times_to_add++;\n        }\n        if ($times_to_add == strlen($substring))\
    \ {\n            $times++;\n        }\n    }\n    return $times;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $string = str_split($string);\n\
    \    $substring = str_split($substring);\n    $result = [];\n    $times = 0;\n\
    \    $i = 0;\n    while ($i <= count($string) - count($substring)) {\n       \
    \ if ($string[$i] == $substring[0]) {\n            $j = 0;\n            while\
    \ ($j < count($substring)) {\n                if ($string[$i+$j] == $substring[$j])\
    \ {\n                    $j++;\n                } else {\n                   \
    \ break;\n                }\n            }\n            if ($j == count($substring))\
    \ {\n                $times++;\n                $i = $i + $j - 1;\n          \
    \  }\n        }\n        $i++;\n    }\n    return $times;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllwffcyx.php:42\n\
    Stack trace:\n#0 /tmp/tmpllwffcyx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpllwffcyx.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $index = 0;\n    $count =\
    \ 0;\n    while (strpos($string, $substring, $index) != false) {\n        $index\
    \ = strpos($string, $substring, $index) + 1;\n        $count++;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzlxhgwp.php:25\n\
    Stack trace:\n#0 /tmp/tmpgzlxhgwp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgzlxhgwp.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$length_string\
    \ = strlen($string);\n\t$length_substring = strlen($substring);\n\tfor ($i = 0;\
    \ $i < $length_string; $i++){\n\t\tif (substr($string, $i, $length_substring)\
    \ == $substring){\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\nprint_r(how_many_times('',\
    \ 'a'));\necho \"<br>\";\nprint_r(how_many_times('aaa', 'a'));\necho \"<br>\"\
    ;\nprint_r(how_many_times('aaaa', 'aa'));\necho \"<br>\";\nprint_r(how_many_times('aaa',\
    \ 'aaaa'));\necho \"<br>\";\nprint_r(how_many_times('abb', 'ab'));\necho \"<br>\"\
    ;\nprint_r(how_many_times('abababab', 'aba'));\necho \"<br>\";\nprint_r(how_many_times('abababab',\
    \ 'abab'));\necho \"<br>\";\nprint_r(how_many_times('aaabaaa', 'aa'));\necho \"\
    <br>\";\nprint_r(how_many_times('', 'a'));\necho \"<br>\";\nprint_r(how_many_times('aaa',\
    \ 'a'));\necho \"<br>\";\nprint_r(how_many_times('aaaa', 'aa'));\necho \"<br>\"\
    ;\nprint_r(how_many_times('aaa', 'aaaa'));\necho \"<br>\";\nprint_r(how_many_times('abb',\
    \ 'ab'));\necho \"<br>\";\nprint_r(how_many_times('abababab', 'aba'));\necho \"\
    <br>\";\nprint_r(how_many_times('abababab', 'abab'));\necho \"<br>\";\nprint_r(how_many_times('aaabaaa',\
    \ 'aa'));\necho \"<br>\";\nprint_r(how_many_times('aaabaaa', 'aaa'));\necho \"\
    <br>\";\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: 0<br>3<br>3<br>0<br>1<br>3<br>3<br>4<br>0<br>3<br>3<br>0<br>1<br>3<br>3<br>4<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $times = 0;\n  $sub_length =\
    \ strlen($substring);\n  $str_length = strlen($string);\n  for ($i = 0; $i < $str_length;\
    \ $i += 1) {\n    if (substr($string, $i, $sub_length) === $substring) {\n   \
    \   $times += 1;\n    }\n  }\n  return $times;\n}\necho how_many_times('', 'a')\
    \ . \"\\n\";\necho how_many_times('aaa', 'a') . \"\\n\";\necho how_many_times('aaaa',\
    \ 'aa') . \"\\n\";\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $result = 0;\n    $str_len\
    \ = strlen($string);\n    $substr_len = strlen($substring);\n    for ($i = 0;\
    \ $i < $str_len; $i++) {\n        $substr = substr($string, $i, $substr_len);\n\
    \        if ($substr == $substring) {\n            $result++;\n        }\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $string = str_split($string);\n\
    \    $substring = str_split($substring);\n    $stringLen = count($string);\n \
    \   $substringLen = count($substring);\n    $count = 0;\n    for ($i = 0; $i <\
    \ $stringLen; $i++) {\n        if ($string[$i] == $substring[0]) {\n         \
    \   $isMatched = true;\n            for ($j = 1; $j < $substringLen; $j++) {\n\
    \                if ($string[$i + $j] != $substring[$j]) {\n                 \
    \   $isMatched = false;\n                    break;\n                }\n     \
    \       }\n            if ($isMatched) {\n                $count++;\n        \
    \    }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $counter = 0;\n    $len =\
    \ strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n      \
    \  if (substr($string, $i, $len) == $substring) {\n            $counter++;\n \
    \       }\n    }\n    return $counter;\n}\n\necho how_many_times('aaaa', 'aa');\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '3'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$counter = 0;\n\t$length = strlen($substring);\n\
    \tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, $length)\
    \ == $substring) {\n\t\t\t$counter++;\n\t\t}\n\t}\n\treturn $counter;\n}\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  $index = 0;\n\
    \  $substring_length = strlen($substring);\n  while (strpos($string, $substring,\
    \ $index) !== false) {\n    $index = strpos($string, $substring, $index) + $substring_length;\n\
    \    $count++;\n  }\n  return $count;\n}\n\necho how_many_times('aaa', 'a');\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8z3v43o4.php:28\n\
    Stack trace:\n#0 /tmp/tmp8z3v43o4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8z3v43o4.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    return substr_count($string,\
    \ $substring);\n}\necho \">>> how_many_times('', 'a')\\n\";\necho how_many_times('',\
    \ 'a') . \"\\n\";\necho \">>> how_many_times('aaa', 'a')\\n\";\necho how_many_times('aaa',\
    \ 'a') . \"\\n\";\necho \">>> how_many_times('aaaa', 'aa')\\n\";\necho how_many_times('aaaa',\
    \ 'aa') . \"\\n\";\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ">>> how_many_times('', 'a')\n0\n>>> how_many_times('aaa', 'a')\n3\n>>>\
    \ how_many_times('aaaa', 'aa')\n2\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpra832ln2.php:26\nStack trace:\n#0 /tmp/tmpra832ln2.php(30): test()\n\
    #1 {main}\n  thrown in /tmp/tmpra832ln2.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    if ($substring === '') {\n\
    \        return 0;\n    }\n    if ($string === '') {\n        return 0;\n    }\n\
    \    $count = 0;\n    $subLen = strlen($substring);\n    $strLen = strlen($string);\n\
    \    for ($i = 0; $i < $strLen; $i++) {\n        $sub = substr($string, $i, $subLen);\n\
    \        if ($sub === $substring) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $result = 0;\n    for ($i\
    \ = 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\n\n$string = \"aaacdddabbccaaabb\";\n$substring = \"aabb\";\necho how_many_times($string,\
    \ $substring);\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $occurences = 0;\n    $start\
    \ = 0;\n    while (($start = strpos($string, $substring, $start)) !== false) {\n\
    \        $occurences++;\n        $start += strlen($substring);\n    }\n    return\
    \ $occurences;\n}\n\n$string = \"\";\n$substring = \"a\";\necho how_many_times($string,\
    \ $substring) . \"\\n\";\n\n$string = \"aaa\";\n$substring = \"a\";\necho how_many_times($string,\
    \ $substring) . \"\\n\";\n\n$string = \"aaaa\";\n$substring = \"aa\";\necho how_many_times($string,\
    \ $substring) . \"\\n\";\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2_3hned.php:37\n\
    Stack trace:\n#0 /tmp/tmpa2_3hned.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpa2_3hned.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $string = strtolower($string);\n\
    \    $substring = strtolower($substring);\n    if (empty($substring)) {\n    \
    \    return 0;\n    }\n    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string,\
    \ $substring, $pos)) !== false) {\n        $count++;\n        $pos += strlen($substring);\n\
    \    }\n    return $count;\n}\n\necho how_many_times('', 'a');\necho '<br>';\n\
    echo how_many_times('aaa', 'a');\necho '<br>';\necho how_many_times('aaaa', 'aa');\n\
    echo '<br>';\necho how_many_times('This is a test that is a test that', 'is');\n\
    echo '<br>';\necho how_many_times('This is a test', 'is');\necho '<br>';\necho\
    \ how_many_times('This is a test that is a test that', 'that');\necho '<br>';\n\
    echo how_many_times('This is a test that is a test that', 'the');\necho '<br>';\n\
    echo how_many_times('This is a test that is a test that', 'thi');\necho '<br>';\n\
    echo how_many_times('This is a test that is a test that', 'his');\necho '<br>';\n\
    echo how_many_times('This is a test that is a test that', 'th');\necho '<br>';\n\
    echo how_many_times('This is a test that is a test that', 'te');\necho '<br>';\n\
    echo how_many_times('This is a test that is a test that', 'test');\necho '<br>';\n\
    echo how_many_times('This is a test that is a test that', 'testt');\necho '<br>';\n\
    echo how_many_times('This is a test that is a test that', 'testtt');\necho '<br>';\n\
    echo how_many_times('This is a test that is a test that', 'estt');\necho '<br>';\n\
    echo how_many_times('\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmp3tdvpj26.php on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\treturn (strlen($string) - strlen(str_replace($substring,\
    \ '', $string))) / strlen($substring);\n}\n\necho how_many_times('', 'a');\necho\
    \ \"\\n\";\necho how_many_times('aaa', 'a');\necho \"\\n\";\necho how_many_times('aaaa',\
    \ 'aa');\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbu2ch5eq.php:27\n\
    Stack trace:\n#0 /tmp/tmpbu2ch5eq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbu2ch5eq.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\tif ($substring == '') {\n\t\t\
    return 0;\n\t}\n\n\t$first_char = $substring[0];\n\t$substring_length = strlen($substring);\n\
    \t$string_length = strlen($string);\n\t$count = 0;\n\t$limit = $string_length\
    \ - $substring_length + 1;\n\n\tfor ($i = 0; $i < $limit; $i++) {\n\t\tif ($string[$i]\
    \ == $first_char) {\n\t\t\t$sub_str = substr($string, $i, $substring_length);\n\
    \t\t\tif ($sub_str == $substring) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\n\
    \treturn $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length_of_substring\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $length_of_substring) == $substring) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$haystack_length = strlen($string);\n\
    \t$needle_length = strlen($substring);\n\tif ($haystack_length < $needle_length)\
    \ {\n\t\treturn 0;\n\t}\n\t$count = 0;\n\tfor ($i = 0; $i < $haystack_length;\
    \ $i++) {\n\t\t$string_to_compare = substr($string, $i, $needle_length);\n\t\t\
    if ($string_to_compare == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\necho how_many_times('', 'a');\necho how_many_times('aaa', 'a');\n\
    echo how_many_times('aaaa', 'aa');\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '033'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $counter = 0;\n  $n = strlen($string);\n\
    \  $m = strlen($substring);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = 0;\
    \ $j < $m; $j++) {\n      if ($string[$i + $j] == $substring[$j]) {\n        if\
    \ ($j == $m - 1) {\n          $counter++;\n        }\n      } else {\n       \
    \ break;\n      }\n    }\n  }\n  return $counter;\n}\n\n$string = \"abcaabcaabca\"\
    ;\n$substring = \"aab\";\necho how_many_times($string, $substring);\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '2'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$times = 0;\n\t$lenght = strlen($substring);\n\
    \t$string = explode($substring, $string);\n\t$times = count($string) - 1;\n\t\
    return $times;\n}\n\necho how_many_times('aaa', 'a');\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_oz7f6lu.php:25\n\
    Stack trace:\n#0 /tmp/tmp_oz7f6lu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_oz7f6lu.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $i = 0;\n    $count = 0;\n\
    \    while ($pos = strpos($string, $substring, $i)) {\n        $i = $pos + 1;\n\
    \        $count++;\n    }\n    return $count;\n}\necho how_many_times('aaaa',\
    \ 'aa');\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug82iug3.php:25\n\
    Stack trace:\n#0 /tmp/tmpug82iug3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpug82iug3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    return substr_count($string,\
    \ $substring);\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3jjmkjm.php:20\n\
    Stack trace:\n#0 /tmp/tmp_3jjmkjm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_3jjmkjm.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $i = 0;\n    while ($pos =\
    \ strpos($string, $substring, $i)) {\n        $i = $pos + 1;\n        $count++;\n\
    \    }\n    return $count;\n}\necho how_many_times('aaaa', 'aa');\n\necho \"<br>\"\
    ;\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsj6vctq7.php:26\n\
    Stack trace:\n#0 /tmp/tmpsj6vctq7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsj6vctq7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $string_length = strlen($string);\n\
    \    $substring_length = strlen($substring);\n    $count = 0;\n    for ($i = 0;\
    \ $i < $string_length; $i++) {\n        $match = true;\n        for ($j = 0; $j\
    \ < $substring_length; $j++) {\n            if ($string[$i + $j] != $substring[$j])\
    \ {\n                $match = false;\n                break;\n            }\n\
    \        }\n        if ($match) {\n            $count++;\n        }\n    }\n \
    \   return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

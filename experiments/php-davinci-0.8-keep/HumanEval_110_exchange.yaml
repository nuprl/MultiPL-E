name: HumanEval_110_exchange
language: php
prompt: "<?php\n// In this problem, you will implement a function that takes two lists\
  \ of numbers,\n// and determines whether it is possible to perform an exchange of\
  \ elements\n// between them to make lst1 a list of only even numbers.\n// There\
  \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
  \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
  \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
  .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
  \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
  \ be non-empty.\nfunction exchange($lst1, $lst2) {\n"
tests: "function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"\
  YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2,\
  \ 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
  \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
  \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"NO\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 200),\
  \ array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n}\n\n\
  test();"
completions: ["    $count = count($lst1);\n    $evenLst1 = array_filter($lst1, function($num)\
    \ {\n        return !($num % 2);\n    });\n    $evenLst2 = array_filter($lst2,\
    \ function($num) {\n        return !($num % 2);\n    });\n    if (count($evenLst1)\
    \ == $count) {\n        return \"YES\";\n    }\n    if (count($evenLst2) == $count)\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "  $evens = 0;\n\
    \  $odds = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] %\
    \ 2 == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  for\
    \ ($i = 0; $i < count($lst2); $i++) {\n    if ($lst2[$i] % 2 == 0) {\n      $evens++;\n\
    \    } else {\n      $odds++;\n    }\n  }\n  if ($evens % 2 == 0) {\n    return\
    \ \"YES\";\n  } else {\n    return \"NO\";\n  }\n}", "  $lst1_count = count($lst1);\n\
    \  $lst2_count = count($lst2);\n  $count = $lst1_count + $lst2_count;\n  $new_lst1\
    \ = [];\n  $new_lst2 = [];\n  $result = false;\n  for ($i = 0; $i < $count; $i++)\
    \ {\n    $new_lst1 = array_merge($new_lst1, $lst1);\n    $new_lst2 = array_merge($new_lst2,\
    \ $lst2);\n  }\n  for ($i = 0; $i < $count; $i++) {\n    for ($j = 0; $j < $count;\
    \ $j++) {\n      $tmp = $new_lst1[$i];\n      $new_lst1[$i] = $new_lst2[$j];\n\
    \      $new_lst2[$j] = $tmp;\n      if (check_lst($new_lst1)) {\n        $result\
    \ = true;\n        break;\n      }\n    }\n  }\n  return $result ? \"YES\" : \"\
    NO\";\n}\n", "  $odds = 0;\n  $evens = 0;\n  foreach ($lst1 as $value) {\n   \
    \ if ($value % 2 == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n\
    \  }\n  foreach ($lst2 as $value) {\n    if ($value % 2 == 0) {\n      $evens++;\n\
    \    } else {\n      $odds++;\n    }\n  }\n  if ($evens > $odds) {\n    return\
    \ \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]);\necho \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]);\n\
    echo \"\\n\";", "    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example: print \"Hello world!\";\n}\n\n$lst1\
    \ = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\n$result = exchange($lst1, $lst2);\n\
    print $result;", "  $result1 = $result2 = false;\n  foreach ($lst1 as $v) {\n\
    \    if ($v % 2 == 0) {\n      $result1 = true;\n      break;\n    }\n  }\n  foreach\
    \ ($lst2 as $v) {\n    if ($v % 2 == 0) {\n      $result2 = true;\n      break;\n\
    \    }\n  }\n  return $result1 === $result2 ? \"YES\" : \"NO\";\n}", "    $even\
    \ = 0;\n    $odd = 0;\n    foreach ($lst1 as $v) {\n        if ($v % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    foreach ($lst2 as $v) {\n        if ($v % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    if ($even % 2 ==\
    \ 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n\
    }", "    $odds_in_lst1 = array_filter($lst1, function($i) { return $i % 2; });\n\
    \    $odds_in_lst2 = array_filter($lst2, function($i) { return $i % 2; });\n \
    \   return count($odds_in_lst1) === count($odds_in_lst2) ? \"YES\" : \"NO\";\n\
    }\n", "    $output = \"YES\";\n    foreach ($lst1 as $num) {\n        if ($num\
    \ % 2 !== 0) {\n            $output = \"NO\";\n        }\n    }\n    return $output;\n\
    }\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\nprint_r(exchange($lst1, $lst2));",
  "    if (empty($lst1) || empty($lst2)) {\n        return \"NO\";\n    }\n    $sum\
    \ = array_sum($lst1);\n    if ($sum % 2 !== 0) {\n        return \"NO\";\n   \
    \ }\n    $odd = $even = [];\n    foreach ($lst2 as $k => $v) {\n        if ($v\
    \ % 2 !== 0) {\n            $odd[] = $k;\n        } else {\n            $even[]\
    \ = $k;\n        }\n    }\n    if (count($odd) >= count($even)) {\n        return\
    \ \"NO\";\n    }\n    return \"YES\";\n}\n\nvar_dump(exchange([1, 2, 3, 4], [1,\
    \ 2, 3, 4]));\nvar_dump(exchange([1, 2, 3, 4], [1, 5, 3, 4]));", "    $even_number\
    \ = 0;\n    $odd_number = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n  \
    \      if ($lst1[$i] % 2 == 0) {\n            $even_number++;\n        } else\
    \ {\n            $odd_number++;\n        }\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        if ($lst2[$i] % 2 == 0) {\n            $even_number++;\n  \
    \      } else {\n            $odd_number++;\n        }\n    }\n    if ($even_number\
    \ % 2 == 0 && $odd_number % 2 == 0) {\n        return \"YES\";\n    } else {\n\
    \        return \"NO\";\n    }\n}", "    $lst1_odds = array_filter($lst1, function($n)\
    \ { return $n % 2; });\n    $lst2_evens = array_filter($lst2, function($n) { return\
    \ !($n % 2); });\n    return count($lst1_odds) === count($lst2_evens) ? \"YES\"\
    \ : \"NO\";\n}", "  $count = 0;\n  foreach ($lst1 as $key => $value) {\n    if\
    \ ($value % 2 !== 0) {\n      $count++;\n    }\n  }\n  foreach ($lst2 as $key\
    \ => $value) {\n    if ($value % 2 === 0) {\n      $count--;\n    }\n  }\n  if\
    \ ($count <= 0) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n\
    }\n", "\t$odd1 = 0;\n\t$odd2 = 0;\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\
    \t\tif ($lst1[$i] % 2 == 1) $odd1++;\n\t}\n\tfor ($i = 0; $i < count($lst2); $i++)\
    \ {\n\t\tif ($lst2[$i] % 2 == 1) $odd2++;\n\t}\n\treturn $odd1 != $odd2 ? \"NO\"\
    \ : \"YES\";\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [5, 6, 7, 8])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 7, 9]) . \"\\n\";", '}', "}\n\
    echo exchange([1, 2, 3, 4], [1, 2, 3, 4]).\"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4]).\"\\n\";", "  $flag = 0;\n  for ($i = 0; $i < count($lst1); $i++)\
    \ {\n    if ($lst1[$i] % 2 == 1) {\n      for ($j = 0; $j < count($lst2); $j++)\
    \ {\n        if ($lst2[$j] % 2 == 0) {\n          $lst1[$i] = $lst2[$j];\n   \
    \       $lst2[$j] = 0;\n          $flag = 1;\n          break;\n        }\n  \
    \    }\n    }\n    if ($flag == 0) {\n      return \"NO\";\n    }\n  }\n  return\
    \ \"YES\";\n}", "  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example: print \"Hello world!\";\n  $odd = 0;\n\
    \  $even = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] %\
    \ 2 === 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n  }\n  for ($i\
    \ = 0; $i < count($lst2); $i++) {\n    if ($lst2[$i] % 2 === 0) {\n      $even++;\n\
    \    } else {\n      $odd++;\n    }\n  }\n  if ($odd % 2 === 0) {\n    return\
    \ \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\necho exchange([1,2,3,4], [1,2,3,4]).\"\
    \\n\";\necho exchange([1,2,3,4], [1,5,3,4]).\"\\n\";", "  $count = 0;\n  for ($i\
    \ = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 != 0) {\n      $count++;\n\
    \    }\n  }\n  if ($count == 0) {\n    return \"YES\";\n  } else {\n    return\
    \ \"NO\";\n  }\n}", "    $i = 0;\n    $cnt1 = count($lst1);\n    $cnt2 = count($lst2);\n\
    \    while ($i < $cnt1) {\n        if ($lst1[$i] % 2 != 0) {\n            $j =\
    \ 0;\n            while ($j < $cnt2) {\n                if ($lst2[$j] % 2 == 0)\
    \ {\n                    $temp = $lst1[$i];\n                    $lst1[$i] = $lst2[$j];\n\
    \                    $lst2[$j] = $temp;\n                    $i++;\n         \
    \           break;\n                }\n                $j++;\n            }\n\
    \            if ($j == $cnt2) {\n                return \"NO\";\n            }\n\
    \        } else {\n            $i++;\n        }\n    }\n    return \"YES\";\n\
    }\n", "    $result = array_diff($lst1, array_filter($lst1, function($v) { return\
    \ $v % 2 === 0; }));\n    foreach ($result as $num) {\n        $key = array_search($num,\
    \ $lst2);\n        if ($key !== false) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return empty($result) ? \"YES\" : \"NO\";\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if\
    \ ($lst1[$i] % 2 == 0) {\n            $even++;\n        } else {\n           \
    \ $odd++;\n        }\n    }\n    for ($i = 0; $i < count($lst2); $i++) {\n   \
    \     if ($lst2[$i] % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\n$lst1\
    \ = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1, $lst2) . \"\\n\"\
    ;\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2)\
    \ . \"\\n\";\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 5];\necho exchange($lst1,\
    \ $lst2) . \"\\n\";\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4, 5];\necho exchange($lst1,\
    \ $lst2) . \"\\n\";\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [6, 2, 3, 4];\necho exchange($lst1,\
    \ $lst2) . \"\\n\";\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [6, 2, 3, 4, 7];\necho exchange($lst1,\
    \ $lst2) . \"\\n\";\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [6, 2, 3, 4, 5];\necho exchange($lst1,\
    \ $lst2) . \"\\", "  $even_in_lst1 = 0;\n  $odd_in_lst1 = 0;\n  $even_in_lst2\
    \ = 0;\n  $odd_in_lst2 = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n    if\
    \ ($lst1[$i] % 2 == 0) {\n      $even_in_lst1++;\n    } else {\n      $odd_in_lst1++;\n\
    \    }\n  }\n  for ($i = 0; $i < count($lst2); $i++) {\n    if ($lst2[$i] % 2\
    \ == 0) {\n      $even_in_lst2++;\n    } else {\n      $odd_in_lst2++;\n    }\n\
    \  }\n  if ($even_in_lst1 > $odd_in_lst2) {\n    return \"NO\";\n  } else {\n\
    \    return \"YES\";\n  }\n}", "  $is_odd = function($v) {\n    return $v % 2\
    \ != 0;\n  };\n  if (count(array_filter($lst1, $is_odd)) == 0) {\n    return \"\
    YES\";\n  } else {\n    for ($i = 0; $i < count($lst1); $i++) {\n      for ($j\
    \ = 0; $j < count($lst2); $j++) {\n        $lst2[$j] = $lst1[$i];\n        if\
    \ (count(array_filter($lst1, $is_odd)) == 0) {\n          return \"YES\";\n  \
    \      }\n      }\n    }\n  }\n  return \"NO\";\n}\n", "\t$lst1_odds = [];\n\t\
    $lst2_evens = [];\n\t$lst1_evens = [];\n\tforeach ($lst1 as $n) {\n\t\tif ($n\
    \ % 2 == 0) {\n\t\t\t$lst1_evens[] = $n;\n\t\t} else {\n\t\t\t$lst1_odds[] = $n;\n\
    \t\t}\n\t}\n\tforeach ($lst2 as $n) {\n\t\tif ($n % 2 == 0) {\n\t\t\t$lst2_evens[]\
    \ = $n;\n\t\t}\n\t}\n\treturn count($lst1_odds) <= count($lst2_evens) ? \"YES\"\
    \ : \"NO\";\n}\n", "    $lst1_even = 0;\n    $lst2_even = 0;\n    $lst1_odd =\
    \ 0;\n    $lst2_odd = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n      \
    \  if ($lst1[$i] % 2 == 0) {\n            $lst1_even++;\n        } else {\n  \
    \          $lst1_odd++;\n        }\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        if ($lst2[$i] % 2 == 0) {\n            $lst2_even++;\n    \
    \    } else {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_even\
    \ == count($lst1) || $lst2_even == count($lst2)) {\n        return \"YES\";\n\
    \    } else if ($lst1_even >= $lst2_odd && $lst2_even >= $lst1_odd) {\n      \
    \  return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n", "  foreach\
    \ ($lst1 as $item) {\n    if ($item % 2 == 0) {\n      continue;\n    } else {\n\
    \      if (in_array($item - 1, $lst2) || in_array($item + 1, $lst2)) {\n     \
    \   continue;\n      } else {\n        return \"NO\";\n      }\n    }\n  }\n \
    \ return \"YES\";\n}\n", "    $isEven = function($value) {\n        return $value\
    \ % 2 == 0;\n    };\n    if (array_filter($lst1, $isEven) === $lst1) {\n     \
    \   return \"YES\";\n    }\n    if (array_filter($lst2, $isEven) === $lst2) {\n\
    \        return \"YES\";\n    }\n    return \"NO\";\n}\n\necho exchange([1, 2,\
    \ 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) .\
    \ \"\\n\";", "  $evens = 0;\n  $odds = 0;\n  foreach ($lst1 as $item) {\n    if\
    \ ($item % 2 === 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n\
    \  }\n  foreach ($lst2 as $item) {\n    if ($item % 2 === 0) {\n      $evens++;\n\
    \    } else {\n      $odds++;\n    }\n  }\n  if ($evens > $odds) {\n    return\
    \ \"YES\";\n  } else {\n    return \"NO\";\n  }\n}", "  $lst1Even = array_reduce($lst1,\
    \ function($acc, $v) {\n    return $acc && $v % 2 == 0;\n  }, true);\n  if ($lst1Even)\
    \ {\n    return \"YES\";\n  }\n  $lst2Even = array_reduce($lst2, function($acc,\
    \ $v) {\n    return $acc && $v % 2 == 0;\n  }, true);\n  if ($lst2Even) {\n  \
    \  return \"YES\";\n  }\n  $lst1Odd = array_reduce($lst1, function($acc, $v) {\n\
    \    return $acc && $v % 2 != 0;\n  }, true);\n  if ($lst1Odd) {\n    return \"\
    NO\";\n  }\n  $lst2Odd = array_reduce($lst2, function($acc, $v) {\n    return\
    \ $acc && $v % 2 != 0;\n  }, true);\n  if ($lst2Odd) {\n    return \"NO\";\n \
    \ }\n  return \"YES\";\n}\n", "    $evens = 0;\n    $odds = 0;\n    foreach ($lst1\
    \ as $number) {\n        if ($number % 2 == 0) {\n            $evens++;\n    \
    \    } else {\n            $odds++;\n        }\n    }\n    foreach ($lst2 as $number)\
    \ {\n        if ($number % 2 == 0) {\n            $evens++;\n        } else {\n\
    \            $odds++;\n        }\n    }\n    if ($evens >= count($lst1)) {\n \
    \       return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\necho\
    \ exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"<br>\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4]) . \"<br>\";\necho exchange([1, 2, 3, 4], []) . \"<br>\";", " \
    \ $res1 = array_search(1, $lst1);\n  $res2 = array_search(1, $lst2);\n  if ($res1\
    \ === false && $res2 === false) {\n    return \"YES\";\n  } else if ($res1 !==\
    \ false && $res2 !== false) {\n    return \"NO\";\n  } else if ($res1 !== false)\
    \ {\n    unset($lst1[$res1]);\n    $lst1 = array_values($lst1);\n    if (array_search(1,\
    \ $lst1) === false) {\n      return \"YES\";\n    } else {\n      return \"NO\"\
    ;\n    }\n  } else if ($res2 !== false) {\n    unset($lst2[$res2]);\n    $lst2\
    \ = array_values($lst2);\n    if (array_search(1, $lst2) === false) {\n      return\
    \ \"YES\";\n    } else {\n      return \"NO\";\n    }\n  }\n}\n", "  $lst1 = array_map('intval',\
    \ $lst1);\n  $lst2 = array_map('intval', $lst2);\n  if (array_sum($lst1) % 2 ==\
    \ 1) {\n    return 'NO';\n  }\n  foreach ($lst1 as $i) {\n    if (in_array($i,\
    \ $lst2)) {\n      return 'YES';\n    }\n  }\n  return 'NO';\n}\n", "  // Write\
    \ your code here\n  // To print results to the standard output you can use print\n\
    \  // Example: print \"Hello world!\";\n  $len1 = count($lst1);\n  $len2 = count($lst2);\n\
    \  $odd_cnt = 0;\n  for ($i = 0; $i < $len1; $i++) {\n    if ($lst1[$i] % 2 ==\
    \ 1) {\n      $odd_cnt++;\n    }\n  }\n  for ($i = 0; $i < $len2; $i++) {\n  \
    \  if ($lst2[$i] % 2 == 1) {\n      $odd_cnt++;\n    }\n  }\n  if ($odd_cnt %\
    \ 2 == 0) {\n    print \"YES\";\n  } else {\n    print \"NO\";\n  }\n}", "  //\
    \ Implement the solution here.\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]);\
    \ // \"YES\"\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]); // \"NO\"\necho exchange([3,\
    \ 4, 8, 9], [2, 6, 8, 7]); // \"YES\"\necho exchange([2, 3, 8, 9], [2, 6, 8, 7]);\
    \ // \"YES\"\necho exchange([3, 4, 8, 9], [2, 6, 7, 1]); // \"NO\"\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]); // \"YES\"\necho exchange([2, 3, 4, 8], [1, 2, 3, 8]);\
    \ // \"YES\"\necho exchange([2, 3, 4, 8], [1, 2, 3, 4]); // \"NO\"\necho exchange([3,\
    \ 6, 1, 4], [3, 5, 6, 4]); // \"YES\"\necho exchange([3, 5, 1, 4], [2, 3, 6, 4]);\
    \ // \"YES\"\necho exchange([3, 5, 1, 4], [2, 6, 1, 4]); // \"YES\"\necho exchange([5,\
    \ 6, 1, 4], [1, 2, 3, 4]); // \"NO\"\necho exchange([3, 8, 9, 5], [1, 2, 7, 4]);\
    \ // \"NO\"\necho exchange([3, 8, 9, 5], [7, 8, 9, 6]); // \"YES\"\necho exchange([7,\
    \ 8, 9, 6], [3, 8, 9, 5]); // \"YES\"\necho exchange([7, 8, 9, 6], [1, 2, 3, 4]);\
    \ // \"NO\"\necho exchange([7, 8, 9, 6], [3, 8, 9, 5]); // \"YES\"\necho exchange([7,\
    \ 8, 9, 6], [3, 8, 9, 5]); // \"YES\"\necho exchange([7, 8, 9, 6], [2, 3, 4, 5]);\
    \ // \"YES\"\necho exchange([1, 2, 3, 4], [4, 3, 2, 1]); // \"YES\"\n", "  $odd_lst1\
    \ = [];\n  foreach ($lst1 as $key => $num) {\n    if ($num % 2 != 0) {\n     \
    \ $odd_lst1[] = $num;\n    }\n  }\n  $odd_lst2 = [];\n  foreach ($lst2 as $key\
    \ => $num) {\n    if ($num % 2 != 0) {\n      $odd_lst2[] = $num;\n    }\n  }\n\
    \  $odd_lst = array_merge($odd_lst1, $odd_lst2);\n  $odd_lst = array_unique($odd_lst);\n\
    \  if (count($odd_lst) == count($odd_lst1)) {\n    return \"YES\";\n  } else {\n\
    \    return \"NO\";\n  }\n}\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho\
    \ exchange($lst1, $lst2) . PHP_EOL;\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3,\
    \ 4];\necho exchange($lst1, $lst2) . PHP_EOL;\n$lst1 = [1, 2, 3, 4];\n$lst2 =\
    \ [5, 6, 7, 8];\necho exchange($lst1, $lst2) . PHP_EOL;\n$lst1 = [1, 3, 5, 7];\n\
    $lst2 = [2, 4, 6, 8];\necho exchange($lst1, $lst2) . PHP_EOL;\n$lst1 = [1, 3,\
    \ 5, 7];\n$lst2 = [2, 4, 6, 8, 10];\necho exchange($lst1, $lst2) . PHP_EOL;\n\
    $lst1 = [1, 3, 5, 7];\n$lst2 = [2, 4, 6, 8, 10, 12];\necho exchange($lst1, $lst2)\
    \ . PHP_EOL;", "    $possible = true;\n    $lst1 = array_map('getEven', $lst1);\n\
    \    $lst2 = array_map('getEven', $lst2);\n    $even1 = array_filter($lst1);\n\
    \    $even2 = array_filter($lst2);\n    if (count($even1) === count($lst1)) {\n\
    \        return \"YES\";\n    }\n    if (count($even2) === count($lst2)) {\n \
    \       return \"YES\";\n    }\n    return \"NO\";\n}", "\n}\n", "  $s = array_sum($lst1);\n\
    \  $evens = 0;\n  $odds = 0;\n  foreach ($lst1 as $value) {\n    if ($value %\
    \ 2 == 0) {\n      $evens += $value;\n    } else {\n      $odds += $value;\n \
    \   }\n  }\n  $odds2 = $s - $evens;\n  $evens2 = $s - $odds;\n  $lst2_evens =\
    \ 0;\n  $lst2_odds = 0;\n  foreach ($lst2 as $value) {\n    if ($value % 2 ==\
    \ 0) {\n      $lst2_evens += $value;\n    } else {\n      $lst2_odds += $value;\n\
    \    }\n  }\n  if ($odds == $lst2_evens || $evens == $lst2_odds) {\n    return\
    \ \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\necho \"Exercise 1\";\necho\
    \ \"<br>\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1,\
    \ $lst2);\necho \"<br>\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\necho\
    \ exchange($lst1, $lst2);\necho \"<br>\";\n", "    $exchange = \"NO\";\n    $lst1_odds\
    \ = array_filter($lst1, function($v) { return $v % 2 == 1; });\n    $lst2_evens\
    \ = array_filter($lst2, function($v) { return $v % 2 == 0; });\n    if (count($lst1_odds)\
    \ === count($lst2_evens)) {\n        $exchange = \"YES\";\n    }\n    return $exchange;\n\
    }\n", "  $evens = array_filter($lst1, function($x) { return $x % 2 == 0; });\n\
    \  $odds = array_filter($lst2, function($x) { return $x % 2 == 1; });\n  if(count($evens)\
    \ >= count($odds)) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n\
    }", "\t$even = [];\n\t$odd = [];\n\tforeach ($lst1 as $val) {\n\t\tif ($val %\
    \ 2 == 0) {\n\t\t\t$even[] = $val;\n\t\t} else {\n\t\t\t$odd[] = $val;\n\t\t}\n\
    \t}\n\tforeach ($lst2 as $val) {\n\t\tif ($val % 2 == 0) {\n\t\t\t$even[] = $val;\n\
    \t\t} else {\n\t\t\t$odd[] = $val;\n\t\t}\n\t}\n\t$diff1 = count($odd) - count($even);\n\
    \t$diff2 = count($even) - count($odd);\n\treturn $diff1 == 0 || $diff2 == 0 ?\
    \ \"YES\" : \"NO\";\n}\n\necho exchange([ 1, 2, 3, 4 ], [ 1, 2, 3, 4 ]);", " \
    \ $total_odds = 0;\n  $mismatch = false;\n  foreach ($lst1 as $num) {\n    if\
    \ ($num % 2 !== 0) {\n      $total_odds++;\n    }\n  }\n  foreach ($lst2 as $num)\
    \ {\n    if ($num % 2 === 0) {\n      $total_odds--;\n    }\n  }\n  if ($total_odds\
    \ < 0) {\n    $mismatch = true;\n  }\n  foreach ($lst1 as $num) {\n    if ($num\
    \ % 2 === 0) {\n      $total_odds++;\n    }\n  }\n  foreach ($lst2 as $num) {\n\
    \    if ($num % 2 !== 0) {\n      $total_odds--;\n    }\n  }\n  if ($total_odds\
    \ < 0) {\n    $mismatch = true;\n  }\n  if ($mismatch) {\n    return \"NO\";\n\
    \  } else {\n    return \"YES\";\n  }\n}\n", "    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        for ($j = 0; $j < count($lst2); $j++) {\n            if ($lst1[$i]\
    \ % 2 != 0) {\n                if ($lst2[$j] % 2 == 0) {\n                   \
    \ $temp = $lst1[$i];\n                    $lst1[$i] = $lst2[$j];\n           \
    \         $lst2[$j] = $temp;\n                }\n            }\n        }\n  \
    \  }\n    $check = true;\n    for ($i = 0; $i < count($lst1); $i++) {\n      \
    \  if ($lst1[$i] % 2 != 0) {\n            $check = false;\n        }\n    }\n\
    \    if ($check) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "  $allEven = true;\n  foreach ($lst1 as $value) {\n    if ($value\
    \ % 2 != 0) {\n      $allEven = false;\n    }\n  }\n  if ($allEven) {\n    return\
    \ \"YES\";\n  }\n  $allEven = true;\n  foreach ($lst2 as $value) {\n    if ($value\
    \ % 2 != 0) {\n      $allEven = false;\n    }\n  }\n  if ($allEven) {\n    return\
    \ \"YES\";\n  }\n  foreach ($lst1 as $value) {\n    foreach ($lst2 as $value2)\
    \ {\n      if ($value % 2 != 0 && $value2 % 2 == 0) {\n        return \"YES\"\
    ;\n      }\n    }\n  }\n  return \"NO\";\n}\n", "\t$flag = true;\n\tif(count($lst1)\
    \ > 0 && count($lst2) > 0) {\n\t\tfor($i = 0; $i < count($lst1); $i++) {\n\t\t\
    \tif($lst1[$i] % 2 != 0) {\n\t\t\t\t$flag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\
    \t}\n\t\tif($flag) {\n\t\t\treturn \"YES\";\n\t\t}\n\t\telse {\n\t\t\tfor($i =\
    \ 0; $i < count($lst2); $i++) {\n\t\t\t\tif($lst2[$i] % 2 == 0) {\n\t\t\t\t\t\
    return \"YES\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"NO\";\n\t\t}\n\t}\n\telse\
    \ {\n\t\treturn \"NO\";\n\t}\n}\n", "  $str = \"NO\";\n  $odds = 0;\n  $evens\
    \ = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 != 0)\
    \ {\n      $odds += 1;\n    } else {\n      $evens += 1;\n    }\n  }\n  for ($i\
    \ = 0; $i < count($lst2); $i++) {\n    if ($lst2[$i] % 2 != 0) {\n      $odds\
    \ += 1;\n    } else {\n      $evens += 1;\n    }\n  }\n  if ($odds % 2 == 0) {\n\
    \    $str = \"YES\";\n  }\n  return $str;\n}\n\nprint_r(exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]));", "\t$is_possible = false;\n\tforeach ($lst1 as $i => $num)\
    \ {\n\t\tif ($num % 2 === 0) {\n\t\t\tunset($lst1[$i]);\n\t\t\t$is_possible =\
    \ true;\n\t\t}\n\t}\n\tforeach ($lst2 as $i => $num) {\n\t\tif ($num % 2 !== 0)\
    \ {\n\t\t\tunset($lst2[$i]);\n\t\t\t$is_possible = true;\n\t\t}\n\t}\n\tif ($is_possible)\
    \ {\n\t\t$check = array_filter($lst1, function($x) {\n\t\t\treturn $x % 2 ===\
    \ 0;\n\t\t});\n\t\tif (count($check) === count($lst1)) {\n\t\t\treturn \"YES\"\
    ;\n\t\t}\n\t}\n\treturn \"NO\";\n}\n", "  $even = [];\n  $odd = [];\n  foreach\
    \ ($lst1 as $i) {\n    if ($i % 2 == 0) {\n      $even[] = $i;\n    } else {\n\
    \      $odd[] = $i;\n    }\n  }\n  foreach ($lst2 as $i) {\n    if ($i % 2 ==\
    \ 0) {\n      $even[] = $i;\n    } else {\n      $odd[] = $i;\n    }\n  }\n  $result\
    \ = \"NO\";\n  if (count($even) >= count($odd)) {\n    $result = \"YES\";\n  }\n\
    \  return $result;\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . PHP_EOL;\n\
    echo exchange([1, 2, 3, 4], [1, 5, 3, 4]) . PHP_EOL;", "  $sum = 0;\n  foreach\
    \ ($lst1 as $num) {\n    $sum += $num;\n  }\n  if ($sum % 2 === 0) {\n    return\
    \ \"YES\";\n  }\n  $count = 0;\n  foreach ($lst2 as $num) {\n    if ($num % 2\
    \ !== 0) {\n      $count++;\n    }\n  }\n  if ($count >= 1) {\n    return \"YES\"\
    ;\n  }\n  return \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\\
    n\"; // => \"YES\"\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"; // =>\
    \ \"NO\"\necho exchange([1, 2, 3, 4], [1, 2, 2, 4]) . \"\\n\"; // => \"YES\"\n\
    echo exchange([1, 2, 3, 4], [1, 2, 3, 2]) . \"\\n\"; // => \"YES\"\necho exchange([1,\
    \ 3, 5, 7], [1, 2, 2, 4]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2, 3, 4],\
    \ [1, 3, 5, 7]) . \"\\n\"; // => \"NO\"\necho exchange([1, 3, 5, 7], [1, 2, 2,\
    \ 4]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2, 2, 4], [1, 3, 5, 7]) . \"\\\
    n\"; // => \"YES\"\necho exchange([1, 2, 2, 4], [1, 2, 4, 7]) . \"\\n\"; // =>\
    \ \"YES\"\necho exchange([1, 2, 3, 5], [1, 2, 4, 7]) . \"\\n\"; // => \"NO\"\n\
    echo exchange([1, 2, 2, 4], [1, 2, 4, 8]) . \"\\n\"; // => \"YES\"\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 4, 8]) . \"\\n\"; // => \"YES\"\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 4, 4]) . \"\\n\"; // => \"YES\"\n", "    $odds1 = array_filter($lst1,\
    \ function($number) {\n        return $number % 2;\n    });\n    $odds2 = array_filter($lst2,\
    \ function($number) {\n        return $number % 2;\n    });\n    if (count($odds1)\
    \ == count($odds2)) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
  "    if (is_array($lst1) && is_array($lst2)) {\n        $count1 = count($lst1);\n\
    \        $count2 = count($lst2);\n        $lst1_even = 0;\n        $lst2_even\
    \ = 0;\n        $exchange_possible = false;\n        $flag = true;\n        for\
    \ ($i = 0; $i < $count1; $i++) {\n            if ($lst1[$i] % 2 == 0) {\n    \
    \            $lst1_even++;\n            }\n        }\n        for ($i = 0; $i\
    \ < $count2; $i++) {\n            if ($lst2[$i] % 2 == 0) {\n                $lst2_even++;\n\
    \            }\n        }\n        if ($lst1_even == $count1) {\n            $exchange_possible\
    \ = true;\n        } elseif ($lst2_even == $count2) {\n            $exchange_possible\
    \ = true;\n        } elseif ($lst1_even == $count1 - 1 && $lst2_even > 0) {\n\
    \            $exchange_possible = true;\n        } elseif ($lst2_even == $count2\
    \ - 1 && $lst1_even > 0) {\n            $exchange_possible = true;\n        }\
    \ elseif ($lst1_even == $count1 - 2 && $lst2_even > 1) {\n            $exchange_possible\
    \ = true;\n        } elseif ($lst2_even == $count2 - 2 && $lst1_even > 1) {\n\
    \            $exchange_possible = true;\n        }\n        if ($exchange_possible)\
    \ {\n            return \"YES\";\n        } else {\n            return \"NO\"\
    ;\n        }\n    } else {\n        return false;\n    }\n}", "  if ($lst1 ===\
    \ null || $lst2 === null) return 'error';\n  if (isAllEven($lst1)) return 'YES';\n\
    \  $lst2 = $lst2;\n  if (isAllEven($lst1)) return 'YES';\n  if (empty($lst2))\
    \ return 'NO';\n  $val = array_shift($lst2);\n  array_push($lst1, $val);\n  return\
    \ exchange($lst1, $lst2);\n}\n", "\t$allEven = true;\n\tforeach ($lst1 as $num)\
    \ {\n\t\tif ($num % 2 !== 0) {\n\t\t\t$allEven = false;\n\t\t}\n\t}\n\tif ($allEven)\
    \ {\n\t\treturn \"YES\";\n\t}\n\t$even = [];\n\t$odd = [];\n\tforeach ($lst1 as\
    \ $num) {\n\t\tif ($num % 2 === 0) {\n\t\t\t$even[] = $num;\n\t\t} else {\n\t\t\
    \t$odd[] = $num;\n\t\t}\n\t}\n\tforeach ($even as $num) {\n\t\t$index = array_search($num,\
    \ $lst1);\n\t\tif (array_search($num, $lst2) !== false) {\n\t\t\tunset($lst1[$index]);\n\
    \t\t\t$index = array_search($num, $lst2);\n\t\t\tunset($lst2[$index]);\n\t\t}\n\
    \t}\n\tforeach ($odd as $num) {\n\t\t$index = array_search($num, $lst1);\n\t\t\
    if (array_search($num, $lst2) !== false) {\n\t\t\tunset($lst1[$index]);\n\t\t\t\
    $index = array_search($num, $lst2);\n\t\t\tunset($lst2[$index]);\n\t\t}\n\t}\n\
    \t$allEven = true;\n\tforeach ($lst1 as $num) {\n\t\tif ($num % 2 !== 0) {\n\t\
    \t\t$allEven = false;\n\t\t}\n\t}\n\tif ($allEven) {\n\t\treturn \"YES\";\n\t\
    }\n\treturn \"NO\";\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]); // => \"YES\"\
    \necho exchange([1, 2, 3, 4], [1, 5, 3, 4]); // => \"NO\"\necho exchange([1, 2,\
    \ 3, 4], [1, 2, 3, 4, 5]); // => \"YES\"\necho exchange([1, 2, 3,", "    // your\
    \ code here\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . PHP_EOL;\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . PHP_EOL;", "  // write your code here\n  $lst1odds\
    \ = 0;\n  $lst2odds = 0;\n  foreach ($lst1 as $item) {\n    if ($item % 2 != 0)\
    \ {\n      $lst1odds++;\n    }\n  }\n  foreach ($lst2 as $item) {\n    if ($item\
    \ % 2 != 0) {\n      $lst2odds++;\n    }\n  }\n  return $lst1odds == $lst2odds\
    \ ? \"YES\" : \"NO\";\n}", "    $evenNums = 0;\n    $oddNums = 0;\n    for ($i\
    \ = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 == 0) {\n       \
    \     $evenNums++;\n        } else {\n            $oddNums++;\n        }\n   \
    \ }\n    if ($evenNums == count($lst1)) {\n        return \"YES\";\n    }\n  \
    \  if ($oddNums > count($lst2)) {\n        return \"NO\";\n    }\n    return \"\
    YES\";\n}", "  // Your code here\n}\n", "  $n = count($lst1);\n  $m = count($lst2);\n\
    \  $c1 = 0;\n  $c2 = 0;\n  $even = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if\
    \ ($lst1[$i] % 2 == 0) $even++;\n  }\n  for ($i = 0; $i < $m; $i++) {\n    if\
    \ ($lst2[$i] % 2 == 0) $even++;\n  }\n  if ($even == $n + $m) return \"YES\";\n\
    \  return \"NO\";\n}", "  $allEven = true;\n  for ($i = 0; $i < count($lst1);\
    \ $i++) {\n    if ($lst1[$i] % 2 != 0) {\n      $allEven = false;\n      for ($j\
    \ = 0; $j < count($lst2); $j++) {\n        if ($lst2[$j] % 2 != 0) {\n       \
    \   $even = true;\n          for ($n = 0; $n < count($lst1); $n++) {\n       \
    \     if ($n != $i && $lst1[$n] % 2 != 0) {\n              $even = false;\n  \
    \          }\n          }\n          if ($even) {\n            return \"YES\"\
    ;\n          }\n        }\n      }\n    }\n  }\n  if ($allEven) {\n    return\
    \ \"YES\";\n  }\n  return \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3,\
    \ 4]);", "    $evenCount1 = 0;\n    $evenCount2 = 0;\n    $oddCount1 = 0;\n  \
    \  $oddCount2 = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i]\
    \ % 2 == 0) {\n            $evenCount1++;\n        } else {\n            $oddCount1++;\n\
    \        }\n    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i]\
    \ % 2 == 0) {\n            $evenCount2++;\n        } else {\n            $oddCount2++;\n\
    \        }\n    }\n    if ($evenCount1 >= $oddCount2 && $evenCount2 >= $oddCount1)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "\t$isEven = function($num) {\n\t\treturn $num % 2 == 0;\n\t};\n\t$output = \"NO\"\
    ;\n\t$firstLst1EvenIndex = array_search(true, array_map($isEven, $lst1));\n\t\
    if ($firstLst1EvenIndex !== false) {\n\t\t$lst1Even = array_slice($lst1, $firstLst1EvenIndex);\n\
    \t\t$lst1Odd = array_slice($lst1, 0, $firstLst1EvenIndex);\n\t\t$lst2Even = array_filter($lst2,\
    \ $isEven);\n\t\t$lst2Odd = array_diff($lst2, $lst2Even);\n\t\t$lst1OddCount =\
    \ count($lst1Odd);\n\t\t$lst2EvenCount = count($lst2Even);\n\t\tif ($lst1OddCount\
    \ === $lst2EvenCount) {\n\t\t\t$output = \"YES\";\n\t\t}\n\t}\n\treturn $output;\n\
    }\n", "    // Implement this function\n    $n_evens = 0;\n    foreach ($lst1 as\
    \ $n) {\n        if ($n % 2 == 0) {\n            $n_evens++;\n        }\n    }\n\
    \    $n_odds = count($lst1) - $n_evens;\n    $n_evens_1 = 0;\n    foreach ($lst2\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $n_evens_1++;\n        }\n\
    \    }\n    $n_odds_1 = count($lst2) - $n_evens_1;\n    return $n_evens >= $n_odds_1\
    \ && $n_odds >= $n_evens_1 ? \"YES\" : \"NO\";\n}", "  $odds = array_filter($lst1,\
    \ function($v) { return $v % 2 !== 0; });\n  $evens = array_filter($lst2, function($v)\
    \ { return $v % 2 === 0; });\n  return count($odds) === count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n", "    // Your code here\n    $total = count($lst1);\n    $isValid\
    \ = true;\n    for ($i = 0; $i < $total; $i++) {\n        if ($lst1[$i] % 2 !==\
    \ 0) {\n            $isValid = false;\n            for ($j = 0; $j < $total; $j++)\
    \ {\n                if ($lst2[$j] % 2 === 0) {\n                    $temp = $lst1[$i];\n\
    \                    $lst1[$i] = $lst2[$j];\n                    $lst2[$j] = $temp;\n\
    \                    $isValid = true;\n                    break;\n          \
    \      }\n            }\n        }\n        if (!$isValid) break;\n    }\n   \
    \ return $isValid ? \"YES\" : \"NO\";\n}\n", "  if (empty($lst1) || empty($lst2))\
    \ return \"NO\";\n  foreach ($lst1 as $key => $value) {\n    if ($value % 2 !==\
    \ 0) {\n      if (in_array($value + 1, $lst2) || in_array($value - 1, $lst2))\
    \ {\n        continue;\n      } else {\n        return \"NO\";\n      }\n    }\n\
    \  }\n  return \"YES\";\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . PHP_EOL;\n\
    echo exchange([1, 2, 3, 4], [1, 5, 3, 4]) . PHP_EOL;", "    foreach ($lst1 as\
    \ $v) {\n        if ($v % 2 == 1) {\n            return \"NO\";\n        }\n \
    \   }\n    return \"YES\";\n}\necho \"EX 1.1: \" . exchange([1, 2, 3, 4], [1,\
    \ 2, 3, 4]) . \"\\n\";\necho \"EX 1.2: \" . exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\n", "    // Write your code here\n    // To print results to the\
    \ standard output you can use print\n    // Example: print \"Hello world!\";\n\
    }", "    $odds = array_filter($lst1, function($val) {\n        return $val % 2\
    \ == 1;\n    });\n    $evens = array_filter($lst2, function($val) {\n        return\
    \ $val % 2 == 0;\n    });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n", "    // Write your code here\n    // To print results to the\
    \ standard output you can use print\n    // Example: print \"Hello world!\";\n\
    }\n\n$handle = fopen (\"php://stdin\",\"r\");\nfscanf($handle,\"%d\",$n);\n$A_temp\
    \ = fgets($handle);\n$A = explode(\" \",$A_temp);\narray_walk($A,'intval');\n\
    $B_temp = fgets($handle);\n$B = explode(\" \",$B_temp);\narray_walk($B,'intval');\n\
    $result = exchange($A, $B);\necho $result . \"\\n\";", "    // Your code here.\n\
    }\n", '}', "  $odd1 = array_filter($lst1, function($x) {\n    return $x % 2 ==\
    \ 1;\n  });\n  $odd2 = array_filter($lst2, function($x) {\n    return $x % 2 ==\
    \ 1;\n  });\n  if (count($odd1) < count($odd2)) {\n    return \"YES\";\n  }\n\
    \  return \"NO\";\n}\n", "    $lst1_even = array_filter($lst1, function($val)\
    \ {\n        return $val % 2 == 0;\n    });\n    $lst2_odd = array_filter($lst2,\
    \ function($val) {\n        return $val % 2 == 1;\n    });\n    if (count($lst1_even)\
    \ == count($lst1)) {\n        return \"YES\";\n    } elseif (count($lst1_even)\
    \ == count($lst1) - 1 && count($lst2_odd) > 0) {\n        return \"YES\";\n  \
    \  } else {\n        return \"NO\";\n    }\n}", "    $count = 0;\n    foreach\
    \ ($lst1 as $key1 => $value1) {\n        foreach ($lst2 as $key2 => $value2) {\n\
    \            if ($value1 % 2 != 0 && $value2 % 2 == 0) {\n                $count++;\n\
    \            }\n        }\n    }\n    return ($count > 0) ? \"YES\" : \"NO\";\n\
    }", "    $odd = 0;\n    $isPossible = true;\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        if ($lst1[$i] % 2 !== 0) {\n            $odd++;\n        }\n\
    \    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2\
    \ === 0) {\n            $odd--;\n        }\n    }\n    if ($odd > 0) {\n     \
    \   $isPossible = false;\n    }\n    return $isPossible ? \"YES\" : \"NO\";\n}",
  "\t$unpaired = [];\n\tforeach ($lst1 as $v) {\n\t\tif ($v % 2 !== 0) $unpaired[]\
    \ = $v;\n\t}\n\tforeach ($lst2 as $v) {\n\t\tif ($v % 2 !== 0) $unpaired[] = $v;\n\
    \t}\n\t$count = count($unpaired);\n\tif ($count == 0) return \"YES\";\n\tif ($count\
    \ % 2 == 0) return \"YES\";\n\treturn \"NO\";\n}\nexchange([1, 2, 3, 4], [1, 2,\
    \ 3, 4]); // => \"YES\"\nexchange([1, 2, 3, 4], [1, 5, 3, 4]); // => \"NO\"\n\
    exchange([1, 2, 3, 4], [2, 4, 6, 8]); // => \"YES\"\nexchange([1, 2, 3, 4], [1,\
    \ 2, 3, 4]); // => \"YES\"\nexchange([1, 2, 3, 4], [1, 5, 3, 4]); // => \"NO\"\
    \nexchange([1, 2, 3, 4], [2, 4, 6, 8]); // => \"YES\"\nexchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4]); // => \"NO\"\nexchange([1, 2, 3, 4], [2, 4, 6, 8]); // => \"\
    YES\"\nexchange([1, 2, 3, 4], [2, 4, 6, 8]); // => \"YES\"\nexchange([1, 2, 3,\
    \ 4], [1, 5, 3, 4]); // => \"NO\"\nexchange([1, 2, 3, 4], [2, 4, 6, 8]); // =>\
    \ \"YES\"\nexchange([1, 2, 3, 4], [1, 5, 3, 4]); // => \"NO\"\nexchange([1, 2,\
    \ 3, 4], [2, 4, 6, 8]); // => \"YES\"\nexchange([1, 2, 3, 4], [2, 4, 6, 8]); //\
    \ => \"YES\"\nexchange([1, 2, 3, 4], [1, 5, 3, 4]);", "\t$ret = \"NO\";\n\t$even1\
    \ = getEven($lst1);\n\t$even2 = getEven($lst2);\n\t$diff1 = array_diff($lst1,\
    \ $even1);\n\t$diff2 = array_diff($lst2, $even2);\n\tif ($diff1 && $diff2) {\n\
    \t\t$ret = check($lst1, $lst2, $even1, $even2, $diff1, $diff2);\n\t}\n\treturn\
    \ $ret;\n}", "    $newLst1 = array_map(function($x) { return $x % 2; }, $lst1);\n\
    \    $newLst2 = array_map(function($x) { return $x % 2; }, $lst2);\n    if (array_sum($newLst1)\
    \ == 0) {\n        return \"YES\";\n    }\n    for ($i = 0; $i < count($newLst1);\
    \ $i++) {\n        if ($newLst1[$i] == 1) {\n            if (in_array(1, $newLst2))\
    \ {\n                return \"NO\";\n            } else {\n                $newLst1[$i]\
    \ = 0;\n            }\n        }\n    }\n    return \"YES\";\n}\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]);\necho \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5,\
    \ 3, 4]);\necho \"\\n\";", "  $temp = 0;\n  $lst1_str = join('', $lst1);\n  $lst2_str\
    \ = join('', $lst2);\n  // we need to check if the sum of lst1 is even\n  $sum\
    \ = array_sum($lst1);\n  if ($sum % 2 === 0) {\n    return \"YES\";\n  } else\
    \ {\n    for ($i = 0; $i < count($lst1); $i++) {\n      for ($j = 0; $j < count($lst2);\
    \ $j++) {\n        $temp = $lst1[$i];\n        $lst1[$i] = $lst2[$j];\n      \
    \  $lst2[$j] = $temp;\n        $lst1_temp = join('', $lst1);\n        $lst2_temp\
    \ = join('', $lst2);\n        if ($lst1_temp === $lst1_str && $lst2_temp === $lst2_str)\
    \ {\n          return \"YES\";\n        }\n      }\n    }\n  }\n  return \"NO\"\
    ;\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]);", "  $lst1evens = array_filter($lst1,\
    \ function($n) {\n    return $n % 2 == 0;\n  });\n  $lst2evens = array_filter($lst2,\
    \ function($n) {\n    return $n % 2 == 0;\n  });\n  $lst1odds = array_filter($lst1,\
    \ function($n) {\n    return $n % 2 != 0;\n  });\n  $lst2odds = array_filter($lst2,\
    \ function($n) {\n    return $n % 2 != 0;\n  });\n  $lst1_total = count($lst1);\n\
    \  $lst2_total = count($lst2);\n  $lst1evens_total = count($lst1evens);\n  $lst2evens_total\
    \ = count($lst2evens);\n  $lst1odds_total = count($lst1odds);\n  $lst2odds_total\
    \ = count($lst2odds);\n  $odds_match = $lst1odds_total === $lst2odds_total ? 1\
    \ : 0;\n  $evens_match = $lst1evens_total === $lst2evens_total ? 1 : 0;\n  $odds_greater\
    \ = $lst1odds_total > $lst2odds_total ? 1 : 0;\n  $evens_greater = $lst1evens_total\
    \ > $lst2evens_total ? 1 : 0;\n  $can_swap = $odds_match && $evens_match && ($odds_greater\
    \ || $evens_greater);\n  $odds_swap = $odds_match && $evens_greater && $lst1odds_total\
    \ > 0 && $lst2odds_total > 0;\n  $evens_swap = $evens_match && $odds_greater &&\
    \ $lst1evens_total > 0 && $lst2evens_total > 0;\n  $are_no_evens = $lst1evens_total\
    \ === 0;\n", "  $newLst1 = [];\n  $newLst2 = [];\n  $lst1Odd = 0;\n  $lst2Odd\
    \ = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 == 0)\
    \ {\n      $newLst1[] = $lst1[$i];\n    } else {\n      $lst1Odd++;\n    }\n \
    \ }\n  for ($i = 0; $i < count($lst2); $i++) {\n    if ($lst2[$i] % 2 == 0) {\n\
    \      $newLst2[] = $lst2[$i];\n    } else {\n      $lst2Odd++;\n    }\n  }\n\
    \  if (count($newLst1) + $lst2Odd == count($lst1) && count($newLst2) + $lst1Odd\
    \ == count($lst2)) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n\
    }", "  $exchange = \"NO\";\n  $odds = array_filter($lst1, function($elem) { return\
    \ $elem % 2 !== 0; });\n  $evns = array_filter($lst2, function($elem) { return\
    \ $elem % 2 === 0; });\n  if (count($odds) === count($evns)) {\n    $exchange\
    \ = \"YES\";\n  }\n  return $exchange;\n}\n", "    $oddsInLst1 = 0;\n    $oddsInLst2\
    \ = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 != 0) {\n        \
    \    $oddsInLst1++;\n        }\n    }\n    foreach ($lst2 as $num) {\n       \
    \ if ($num % 2 != 0) {\n            $oddsInLst2++;\n        }\n    }\n    return\
    \ $oddsInLst1 == $oddsInLst2 ? \"YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3,\
    \ 4], [1, 2, 3, 4]) . PHP_EOL;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . PHP_EOL;",
  "  // Your code here\n}", "    $odds = array_filter($lst1, function($n) { return\
    \ $n % 2 !== 0; });\n    $evens = array_filter($lst2, function($n) { return $n\
    \ % 2 === 0; });\n    return count($odds) <= count($evens) ? \"YES\" : \"NO\"\
    ;\n}\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1, $lst2)\
    \ . \"\\n\"; // YES\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1,\
    \ $lst2) . \"\\n\"; // NO", "  $result = \"YES\";\n  foreach ($lst1 as $value)\
    \ {\n    if ($value % 2 != 0) {\n      $result = \"NO\";\n      break;\n    }\n\
    \  }\n  return $result;\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . PHP_EOL;\n\
    echo exchange([1, 2, 3, 4], [1, 5, 3, 4]) . PHP_EOL;", "  for ($i = 0; $i < count($lst1);\
    \ $i++) {\n    if ($lst1[$i] % 2 !== 0) {\n      for ($j = 0; $j < count($lst2);\
    \ $j++) {\n        if ($lst2[$j] % 2 === 0) {\n          $lst1[$i] = $lst2[$j];\n\
    \          $lst2[$j] = $lst1[$i];\n          $temp = $lst1[$i];\n          $lst1[$i]\
    \ = $lst2[$j];\n          $lst2[$j] = $temp;\n          break;\n        }\n  \
    \    }\n    }\n  }\n  $areAllEven = true;\n  for ($i = 0; $i < count($lst1); $i++)\
    \ {\n    if ($lst1[$i] % 2 !== 0) {\n      $areAllEven = false;\n      break;\n\
    \    }\n  }\n  if ($areAllEven) {\n    return \"YES\";\n  } else {\n    return\
    \ \"NO\";\n  }\n}\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1,\
    \ $lst2);", "  $is_exchange_possible = true;\n  foreach ($lst1 as $lst1_value)\
    \ {\n    if ($lst1_value % 2 != 0) {\n      $is_exchange_possible = false;\n \
    \     break;\n    }\n  }\n  if ($is_exchange_possible) {\n    return \"YES\";\n\
    \  }\n  else {\n    foreach ($lst2 as $lst2_value) {\n      if ($lst2_value %\
    \ 2 == 0) {\n        return \"YES\";\n      }\n    }\n    return \"NO\";\n  }\n\
    }\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4]) . \"\\n\";", "  $arr1 = array_count_values($lst1);\n  $arr2\
    \ = array_count_values($lst2);\n  // $arr = array_merge($arr1, $arr2);\n  $odds\
    \ = [];\n  $evens = [];\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i]\
    \ % 2 === 0) {\n      $evens[] = $lst1[$i];\n    } else {\n      $odds[] = $lst1[$i];\n\
    \    }\n  }\n  for ($i = 0; $i < count($lst2); $i++) {\n    if ($lst2[$i] % 2\
    \ === 0) {\n      $evens[] = $lst2[$i];\n    } else {\n      $odds[] = $lst2[$i];\n\
    \    }\n  }\n  $arr = array_count_values($evens);\n  $arr2 = array_count_values($odds);\n\
    \  if (count($arr) === count($arr2)) {\n    return \"YES\";\n  } else if (count($arr)\
    \ > count($arr2)) {\n    for ($i = 0; $i < count($arr); $i++) {\n      if ($arr[$i]\
    \ % 2 === 0) {\n        return \"YES\";\n      }\n    }\n  } else {\n    for ($i\
    \ = 0; $i < count($arr2); $i++) {\n      if ($arr2[$i] % 2 === 0) {\n        return\
    \ \"YES\";\n      }\n    }\n  }\n  return \"NO\";\n}\n\necho exchange([1,2,3,4],\
    \ [1,2,3,4]) . PHP_EOL;\necho exchange([1,2,3,4], [1,5,3,4]) . PHP_EOL;\necho\
    \ exchange([1,1,1,1], [1,1,1,1]) . PHP_EOL;\necho exchange([1,1,1,1], [1,1,1,2])\
    \ . PHP_EOL;\necho exchange([", "    $odds = array_filter($lst1, function($x)\
    \ { return $x % 2 == 1; });\n    $evens = array_filter($lst2, function($x) { return\
    \ $x % 2 == 0; });\n    return count($odds) == count($evens) ? \"YES\" : \"NO\"\
    ;\n}\n", "\t$odds = 0;\n\t$evens = 0;\n\tforeach ($lst1 as $num) {\n\t\tif ($num\
    \ % 2 == 0) {\n\t\t\t$evens++;\n\t\t} else {\n\t\t\t$odds++;\n\t\t}\n\t}\n\tforeach\
    \ ($lst2 as $num) {\n\t\tif ($num % 2 == 0) {\n\t\t\t$evens++;\n\t\t} else {\n\
    \t\t\t$odds++;\n\t\t}\n\t}\n\treturn $odds <= $evens ? \"YES\" : \"NO\";\n}\n\
    $lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1, $lst2) . \"\
    \\n\";", "  // TODO: Implement this function.\n}\n\nexchange([1, 2, 3, 4], [1,\
    \ 2, 3, 4]);", "  $odds = array_filter($lst1, function($num) { return $num % 2\
    \ !== 0; });\n  $evens = array_filter($lst2, function($num) { return $num % 2\
    \ === 0; });\n  return count($odds) == count($evens) ? \"YES\" : \"NO\";\n}\n\
    $test_cases = array(\n  array(\n    'lst1' => [1, 2, 3, 4],\n    'lst2' => [1,\
    \ 2, 3, 4],\n    'expect' => \"YES\"\n  ),\n  array(\n    'lst1' => [1, 2, 3,\
    \ 4],\n    'lst2' => [1, 5, 3, 4],\n    'expect' => \"NO\"\n  ),\n  array(\n \
    \   'lst1' => [2, 4, 6, 8],\n    'lst2' => [2, 3, 6, 8],\n    'expect' => \"YES\"\
    \n  ),\n  array(\n    'lst1' => [1, 2, 3, 4],\n    'lst2' => [2, 3, 4, 5],\n \
    \   'expect' => \"YES\"\n  ),\n  array(\n    'lst1' => [1, 2, 3, 4],\n    'lst2'\
    \ => [5, 6, 7, 8],\n    'expect' => \"NO\"\n  ),\n  array(\n    'lst1' => [1,\
    \ 1, 1, 1],\n    'lst2' => [1, 1, 1, 1],\n    'expect' => \"YES\"\n  ),\n  array(\n\
    \    'lst1' => [1, 2, 3, 4],\n    'lst2' => [2, 4, 6, 8],\n    'expect' => \"\
    YES\"\n  ),\n  array(\n    'lst1' => [1, 2, 3, 4],\n    'lst2' => [2, 2, 2, 2],\n\
    \    'expect' => \"YES\"\n  ),\n  array(\n    'lst1' => [2,", "    $needCheck\
    \ = true;\n    while ($needCheck) {\n        $needCheck = false;\n        foreach\
    \ ($lst1 as $key => $value) {\n            if ($value % 2 !== 0) {\n         \
    \       $needCheck = true;\n                foreach ($lst2 as $key2 => $value2)\
    \ {\n                    if ($value2 % 2 == 0) {\n                        $lst1[$key]\
    \ = $value2;\n                        $lst2[$key2] = $value;\n               \
    \         break;\n                    }\n                }\n            }\n  \
    \      }\n    }\n    $lst2Even = array_filter($lst2, function ($num) {\n     \
    \   return $num % 2 == 0;\n    });\n    if (count($lst2Even) > 0) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n", "    $lst1odd =\
    \ [];\n    $lst2even = [];\n    foreach ($lst1 as $num) {\n        if ($num %\
    \ 2 != 0) {\n            $lst1odd[] = $num;\n        }\n    }\n    foreach ($lst2\
    \ as $num) {\n        if ($num % 2 == 0) {\n            $lst2even[] = $num;\n\
    \        }\n    }\n    if (count($lst1odd) == count($lst2even)) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\n$lst1 = [1, 2, 3,\
    \ 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1, $lst2);\necho \"<br>\";\n\n\
    $lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2);\necho\
    \ \"<br>\";", "  $result = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n   \
    \ if ($lst1[$i] % 2 === 1) {\n      $result += $lst1[$i];\n    }\n  }\n  for ($i\
    \ = 0; $i < count($lst2); $i++) {\n    if ($lst2[$i] % 2 === 1) {\n      $result\
    \ -= $lst2[$i];\n    }\n  }\n  if ($result == 0) {\n    return \"YES\";\n  } else\
    \ {\n    return \"NO\";\n  }\n}\n", "  // Build a linked-list of both lists,\n\
    \  // and merge them together to create a new list.\n  // Then, examine each number\
    \ in the new list,\n  // and check if it is even.\n  // If it is not even, remove\
    \ it from the new list.\n  // If you are able to remove all odd numbers from the\
    \ new list,\n  // return \"YES\".\n  // If you are not able to remove all odd\
    \ numbers from the new list,\n  // return \"NO\".\n  $merged_list = [];\n  $merged_list\
    \ = array_merge($lst1, $lst2);\n  // $odd_numbers = [];\n  $lst1_index = 0;\n\
    \  $lst2_index = 0;\n  $list_index = 0;\n  for ($i = 0; $i < count($merged_list);\
    \ $i++) {\n    if ($merged_list[$i] % 2 == 1) {\n      // $odd_numbers[] = $merged_list[$i];\n\
    \      // $merged_list[$i] = $merged_list[$i+1];\n      // unset($merged_list[$i]);\n\
    \      if ($i < count($lst1)) {\n        $merged_list[$i] = $lst2[$lst2_index];\n\
    \        $lst2_index++;\n      } else {\n        $merged_list[$i] = $lst1[$lst1_index];\n\
    \        $lst1_index++;\n      }\n    }\n  }\n  // var_dump($merged_list);\n \
    \ if (count($merged_list) == count($lst1)) {\n    return \"YES\";\n  } else {\n\
    \    return \"NO\";\n  }\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"<br>\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"<br>\";\necho exchange([1, 2,\
    \ 3, 4], [4, 5, 6, 7]) . \"<br>\";\necho exchange([1,", "    $result = \"NO\"\
    ;\n    foreach ($lst1 as $key1 => $value1) {\n        foreach ($lst2 as $key2\
    \ => $value2) {\n            if ($value1 % 2 == 1 && $value2 % 2 == 0) {\n   \
    \             $lst1[$key1] = $value2;\n                $lst2[$key2] = $value1;\n\
    \                $result = \"YES\";\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "  $oddsInOne = 0;\n  $oddsInTwo = 0;\n  foreach ($lst1 as $num)\
    \ {\n    if ($num % 2 != 0) {\n      $oddsInOne++;\n    }\n  }\n  foreach ($lst2\
    \ as $num) {\n    if ($num % 2 != 0) {\n      $oddsInTwo++;\n    }\n  }\n  if\
    \ ($oddsInOne == $oddsInTwo) {\n    return \"YES\";\n  } else {\n    return \"\
    NO\";\n  }\n}", "    // Write your code here...\n}", "  // your code here\n}\n",
  "  $result = \"NO\";\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i]\
    \ % 2 != 0) {\n      for ($j = 0; $j < count($lst2); $j++) {\n        if ($lst2[$j]\
    \ % 2 != 0) {\n          $temp = $lst1[$i];\n          $lst1[$i] = $lst2[$j];\n\
    \          $lst2[$j] = $temp;\n          $result = \"YES\";\n          break;\n\
    \        }\n      }\n    }\n  }\n  return $result;\n}\necho exchange([1, 2, 3,\
    \ 4], [1, 2, 3, 4]) . \"<br>\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\
    <br>\";", "    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example: print \"Hello world!\";\n}", "  $even\
    \ = array_filter($lst1, function($v) { return $v % 2 == 0; });\n  $odd = array_filter($lst2,\
    \ function($v) { return $v % 2 != 0; });\n  if (count($even) + count($odd) >=\
    \ count($lst1)) {\n    return \"YES\";\n  }\n  return \"NO\";\n}\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]) . PHP_EOL;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . PHP_EOL;", "    if (checkEven($lst1)) {\n        return \"YES\";\n    }\n\
    \    foreach ($lst1 as $index => $item) {\n        if ($item % 2 != 0) {\n   \
    \         // if odd item in lst1\n            // check if odd item exists in lst2\n\
    \            if (in_array($item, $lst2)) {\n                // if yes, swap the\
    \ value\n                $lst1[$index] = $lst2[array_search($item, $lst2)];\n\
    \                $lst2[array_search($item, $lst2)] = $item;\n            } else\
    \ {\n                // if no, check for even value\n                $found =\
    \ false;\n                foreach ($lst2 as $lst2_item) {\n                  \
    \  if ($lst2_item % 2 == 0) {\n                        $lst1[$index] = $lst2_item;\n\
    \                        $lst2[array_search($lst2_item, $lst2)] = $item;\n   \
    \                     $found = true;\n                        break;\n       \
    \             }\n                }\n                if (!$found) {\n         \
    \           return \"NO\";\n                }\n            }\n        }\n    }\n\
    \    if (checkEven($lst1)) {\n        return \"YES\";\n    }\n    return \"NO\"\
    ;\n}\n", "  $max_even = max(array_filter($lst1, function($n) { return $n % 2 ==\
    \ 0; }));\n  $max_odd = max(array_filter($lst2, function($n) { return $n % 2 !=\
    \ 0; }));\n  return $max_even >= $max_odd ? \"YES\" : \"NO\";\n}", "  $lst1HasEven\
    \ = false;\n  $lst2HasEven = false;\n  foreach ($lst1 as $v) {\n    if (isEven($v))\
    \ {\n      $lst1HasEven = true;\n      break;\n    }\n  }\n  foreach ($lst2 as\
    \ $v) {\n    if (isEven($v)) {\n      $lst2HasEven = true;\n      break;\n   \
    \ }\n  }\n  return $lst1HasEven && $lst2HasEven ? \"YES\" : \"NO\";\n}\n", "\n}",
  "  // Your code here\n}", "    $result = \"NO\";\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        for ($j = 0; $j < count($lst2); $j++) {\n            $temp\
    \ = $lst1[$i];\n            $lst1[$i] = $lst2[$j];\n            $lst2[$j] = $temp;\n\
    \            if (all_even($lst1)) {\n                $result = \"YES\";\n    \
    \            break;\n            }\n        }\n    }\n    return $result;\n}\n",
  "  $total = count($lst1) + count($lst2);\n  for ($i = 0; $i < $total; $i++) {\n\
    \    if (count($lst1) == 0 || count($lst2) == 0) {\n      return 'NO';\n    }\n\
    \    $lst1_value = array_shift($lst1);\n    $lst2_value = array_shift($lst2);\n\
    \    if ($lst1_value % 2 == 0) {\n      array_push($lst1, $lst1_value);\n    }\
    \ else {\n      array_push($lst2, $lst2_value);\n    }\n  }\n  return 'YES';\n\
    }\n", "    $odds = [];\n    $evens = [];\n    $lst1Odds = 0;\n    $lst2Odds =\
    \ 0;\n    foreach ($lst1 as $number) {\n        if ($number % 2 == 0) {\n    \
    \        $evens[] = $number;\n        } else {\n            $odds[] = $number;\n\
    \            $lst1Odds++;\n        }\n    }\n    foreach ($lst2 as $number) {\n\
    \        if ($number % 2 != 0) {\n            $lst2Odds++;\n        }\n    }\n\
    \    if (count($odds) <= count($evens) && $lst2Odds <= count($evens)) {\n    \
    \    return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n", "   \
    \ $lst1_copy = $lst1;\n    $lst2_copy = $lst2;\n    foreach ($lst1 as $item) {\n\
    \        if (!($item % 2 == 0)) {\n            // Find an even number in lst2\
    \ to exchange the odd number with\n            for ($j = 0; $j < count($lst2);\
    \ $j++) {\n                if ($lst2[$j] % 2 == 0) {\n                    // Swap\
    \ the two numbers\n                    $temp = $lst1_copy[$j];\n             \
    \       $lst1_copy[$j] = $lst2_copy[$j];\n                    $lst2_copy[$j] =\
    \ $temp;\n                    break;\n                }\n            }\n     \
    \   }\n    }\n    $all_even = true;\n    foreach ($lst1_copy as $item) {\n   \
    \     if (!($item % 2 == 0)) {\n            $all_even = false;\n            break;\n\
    \        }\n    }\n    if ($all_even) {\n        return \"YES\";\n    } else {\n\
    \        return \"NO\";\n    }\n}\n", "  $odd_count = 0;\n  $even_count = 0;\n\
    \  foreach ($lst1 as $num) {\n    if ($num % 2 != 0) {\n      $odd_count += 1;\n\
    \    } else {\n      $even_count += 1;\n    }\n  }\n  foreach ($lst2 as $num)\
    \ {\n    if ($num % 2 != 0) {\n      $odd_count -= 1;\n    } else {\n      $even_count\
    \ -= 1;\n    }\n  }\n  if ($odd_count == 0 && $even_count >= 0) {\n    return\
    \ \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"\
    ;", "  $odds = [];\n  foreach ($lst1 as $value) {\n    if ($value % 2 != 0) $odds[]\
    \ = $value;\n  }\n  foreach ($lst2 as $value) {\n    if ($value % 2 != 0) {\n\
    \      $odd_index = array_search($value, $odds);\n      if ($odd_index !== false)\
    \ {\n        unset($odds[$odd_index]);\n      }\n    }\n  }\n  return count($odds)\
    \ == 0 ? \"YES\" : \"NO\";\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\
    <br>\"; // => \"YES\"\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"<br>\"; //\
    \ => \"NO\"", "    $count1 = count($lst1);\n    $count2 = count($lst2);\n    for\
    \ ($i = 0; $i < $count1; $i++) {\n        if ($lst1[$i] % 2 != 0) {\n        \
    \    for ($j = 0; $j < $count2; $j++) {\n                if ($lst2[$j] % 2 !=\
    \ 0) {\n                    continue;\n                } else {\n            \
    \        $temp = $lst1[$i];\n                    $lst1[$i] = $lst2[$j];\n    \
    \                $lst2[$j] = $temp;\n                    break;\n            \
    \    }\n            }\n        }\n    }\n    $result = \"YES\";\n    for ($i =\
    \ 0; $i < $count1; $i++) {\n        if ($lst1[$i] % 2 != 0) {\n            $result\
    \ = \"NO\";\n            break;\n        }\n    }\n    return $result;\n}", " \
    \ if(are_list_items_even($lst1)) return \"YES\";\n  foreach($lst1 as $key => $value)\
    \ {\n    if($value % 2 == 1) {\n      $odd_lst1_item = $value;\n      foreach($lst2\
    \ as $key2 => $value2) {\n        if($value2 % 2 == 0) {\n          $even_lst2_item\
    \ = $value2;\n          // Exchange elements\n          $lst1[$key] = $even_lst2_item;\n\
    \          $lst2[$key2] = $odd_lst1_item;\n          if(are_list_items_even($lst1))\
    \ return \"YES\";\n          // Un-exchange\n          $lst1[$key] = $odd_lst1_item;\n\
    \          $lst2[$key2] = $even_lst2_item;\n        }\n      }\n    }\n  }\n \
    \ return \"NO\";\n}", "  $len1 = count($lst1);\n  $len2 = count($lst2);\n  for\
    \ ($i = 0; $i < $len1; $i++) {\n    for ($j = 0; $j < $len2; $j++) {\n      if\
    \ ($lst1[$i] % 2 !== 0 && $lst2[$j] % 2 === 0) {\n        $lst1[$i] = $lst2[$j];\n\
    \        $lst2[$j] = $lst1[$i];\n      }\n    }\n  }\n  $lst1 = array_filter($lst1,\
    \ function($v) { return $v % 2 === 0; });\n  return count($lst1) === $len1 ? \"\
    YES\" : \"NO\";\n}\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\n$lst3 = [1,\
    \ 2, 3, 4];\n$lst4 = [1, 5, 3, 4];\necho exchange($lst1, $lst2);\necho \"<br>\"\
    ;\necho exchange($lst3, $lst4);", "    $c1 = array_filter($lst1, function($item)\
    \ { return $item % 2 === 0; });\n    $c2 = array_filter($lst2, function($item)\
    \ { return $item % 2 === 0; });\n    return count($c1) === count($lst1) || count($c2)\
    \ === count($lst2) ? 'YES' : 'NO';\n}\n", "\t$arr2 = [];\n\t$arr1 = [];\n\t$num\
    \ = 0;\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\tarray_push($arr1, $lst1[$i]);\n\
    \t}\n\tfor ($i = 0; $i < count($lst2); $i++) {\n\t\tarray_push($arr2, $lst2[$i]);\n\
    \t}\n\tfor ($i = 0; $i < count($arr1); $i++) {\n\t\tif ($arr1[$i] % 2 != 0) {\n\
    \t\t\tfor ($j = 0; $j < count($arr2); $j++) {\n\t\t\t\tif ($arr2[$j] % 2 == 0)\
    \ {\n\t\t\t\t\t$temp = $arr1[$i];\n\t\t\t\t\t$arr1[$i] = $arr2[$j];\n\t\t\t\t\t\
    $arr2[$j] = $temp;\n\t\t\t\t\t$num++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t}\n\t}\n\t$num_even = 0;\n\tfor ($i = 0; $i < count($arr1); $i++) {\n\t\tif\
    \ ($arr1[$i] % 2 == 0) {\n\t\t\t$num_even++;\n\t\t}\n\t}\n\tif ($num_even == count($arr1))\
    \ {\n\t\treturn \"YES\";\n\t} else {\n\t\treturn \"NO\";\n\t}\n}\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";", "    $odd1 = array_filter($lst1, function($element) {\n       \
    \ return $element % 2 != 0;\n    });\n    $odd2 = array_filter($lst2, function($element)\
    \ {\n        return $element % 2 != 0;\n    });\n    return count($odd1) === count($odd2)\
    \ ? \"YES\" : \"NO\";\n}\n\nprint(exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\\
    n\");\nprint(exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\");\nprint(exchange([4,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\");\nprint(exchange([4, 4, 2, 4], [4, 4, 4,\
    \ 4]) . \"\\n\");", "    if (min($lst1) % 2 === 0) return \"YES\";\n    foreach\
    \ ($lst1 as $key1 => $value1) {\n        foreach ($lst2 as $key2 => $value2) {\n\
    \            if (($value1 + $value2) % 2 === 0) {\n                $lst1[$key1]\
    \ = $value2;\n                $lst2[$key2] = $value1;\n                if (min($lst1)\
    \ % 2 === 0) return \"YES\";\n            }\n        }\n    }\n    return \"NO\"\
    ;\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . PHP_EOL;\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . PHP_EOL;", "\t$evens = 0;\n\tforeach ($lst1 as $n)\
    \ {\n\t\tif (!($n % 2)) $evens++;\n\t}\n\t$unevens = count($lst1) - $evens;\n\t\
    $evens2 = 0;\n\tforeach ($lst2 as $n) {\n\t\tif (!($n % 2)) $evens2++;\n\t}\n\t\
    $unevens2 = count($lst2) - $evens2;\n\treturn $evens2 >= $unevens ? \"YES\" :\
    \ \"NO\";\n}", "    // your code here...\n    $evens = array_filter($lst1, function($n)\
    \ { return $n % 2 == 0; });\n    $odds = array_filter($lst2, function($n) { return\
    \ $n % 2 == 1; });\n    if (count($evens) + count($odds) >= count($lst1)) {\n\
    \        return \"YES\";\n    }\n    return \"NO\";\n}\n$lst1 = [1, 2, 3, 4];\n\
    $lst2 = [1, 2, 3, 4];\nprint_r(exchange($lst1, $lst2));\necho \"\\n\";\n$lst1\
    \ = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1, $lst2));\necho\
    \ \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst", "    // Write your code here.\n}", "\t$changes = 0;\n\tforeach ($lst1\
    \ as $key => $value) {\n\t\tif ($value % 2 === 1) {\n\t\t\tforeach ($lst2 as $k\
    \ => $v) {\n\t\t\t\tif ($v % 2 === 0) {\n\t\t\t\t\t$lst1[$key] = $v;\n\t\t\t\t\
    \t$lst2[$k] = $value;\n\t\t\t\t\t$changes++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\
    \t}\n\t\t}\n\t}\n\t$result = \"NO\";\n\tforeach ($lst1 as $value) {\n\t\tif ($value\
    \ % 2 === 0) {\n\t\t\t$result = \"YES\";\n\t\t} else {\n\t\t\t$result = \"NO\"\
    ;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}", "  foreach ($lst1 as $el1)\
    \ {\n    if ($el1 % 2 != 0) {\n      foreach ($lst2 as $el2) {\n        if ($el2\
    \ % 2 == 0) {\n          return \"YES\";\n        }\n      }\n    }\n  }\n  return\
    \ \"NO\";\n}", "    if (empty($lst1) || empty($lst2)) {\n        return \"YES\"\
    ;\n    }\n    $res = \"YES\";\n    $odd = [];\n    $even = [];\n    foreach ($lst1\
    \ as $num) {\n        if (($num % 2) === 0) {\n            $even[] = $num;\n \
    \       } else {\n            $odd[] = $num;\n        }\n    }\n    foreach ($lst2\
    \ as $num) {\n        if (($num % 2) === 0) {\n            $even[] = $num;\n \
    \       } else {\n            $odd[] = $num;\n        }\n    }\n    $evenCount\
    \ = count($even);\n    $oddCount = count($odd);\n    if ($evenCount < $oddCount)\
    \ {\n        $res = \"NO\";\n    }\n    return $res;\n}\n", "  $lst1 = array_values(array_filter($lst1,\
    \ function($n) {\n    return $n % 2 == 0;\n  }));\n  $lst2 = array_values(array_filter($lst2,\
    \ function($n) {\n    return $n % 2 != 0;\n  }));\n  return count($lst1) >= count($lst2)\
    \ ? \"YES\" : \"NO\";\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]);\necho \"\\\
    n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]);\necho \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 6, 7]);\necho \"\\n\";\necho exchange([1, 3, 5, 7], [2, 4,\
    \ 6, 8]);\necho \"\\n\";\necho exchange([1, 2, 3, 4], [2, 4, 6, 8]);\necho \"\\\
    n\";\necho exchange([2, 4, 6, 8], [1, 2, 3, 4]);\necho \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 6, 7]);\necho \"\\n\";\necho exchange([1, 3, 5, 7], [2, 4,\
    \ 6, 8]);\necho \"\\n\";\necho exchange([1, 2, 3, 4], [2, 4, 6, 8]);\necho \"\\\
    n\";\necho exchange([2, 4, 6, 8], [1, 2, 3, 4]);\necho \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 6, 7]);\necho \"\\n\";\necho exchange([1, 3, 5, 7], [2, 4,\
    \ 6, 8]);\necho \"\\n\";\necho exchange([1, 2, 3, 4], [2, 4, 6, 8]);\necho \"\\\
    n\";\necho exchange([2, 4, 6, 8], [1, 2, 3, 4]);\necho \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 6, 7]);\necho \"\\n\";\necho exchange([1, 3, 5, 7], [2, 4,\
    \ 6, 8", "\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\tif ($lst1[$i] % 2 ==\
    \ 1) {\n\t\t\tfor ($j = 0; $j < count($lst2); $j++) {\n\t\t\t\tif ($lst2[$j] %\
    \ 2 == 0) {\n\t\t\t\t\t$temp = $lst1[$i];\n\t\t\t\t\t$lst1[$i] = $lst2[$j];\n\t\
    \t\t\t\t$lst2[$j] = $temp;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\
    \tif (count(array_filter($lst1, function($x) { return $x % 2 == 1; })) == 0) {\n\
    \t\treturn \"YES\";\n\t} else {\n\t\treturn \"NO\";\n\t}\n}\n\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 3, 5, 7], [2, 4, 6, 8]) . \"\\n\";\necho exchange([1,\
    \ 3, 5, 7], [2, 4, 6, 8, 10]) . \"\\n\";", "  $counter = 0;\n  $isEven = false;\n\
    \  $hasChanged = false;\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i]\
    \ % 2 == 0) {\n      $counter++;\n    }\n  }\n  if ($counter === count($lst1))\
    \ {\n    $isEven = true;\n  } else {\n    $isEven = false;\n  }\n  if ($isEven)\
    \ {\n    return \"YES\";\n  } else {\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n      if ($lst1[$i] % 2 !== 0) {\n        for ($j = 0; $j < count($lst2);\
    \ $j++) {\n          if ($lst2[$j] % 2 !== 0) {\n            $temp = $lst1[$i];\n\
    \            $lst1[$i] = $lst2[$j];\n            $lst2[$j] = $temp;\n        \
    \    $hasChanged = true;\n            break;\n          }\n        }\n      }\n\
    \      if ($hasChanged) {\n        break;\n      }\n    }\n    if ($hasChanged)\
    \ {\n      return exchange($lst1, $lst2);\n    } else {\n      return \"NO\";\n\
    \    }\n  }\n}", "  $exchange = 'NO';\n  $oddIndex = -1;\n  foreach ($lst1 as\
    \ $index => $num) {\n    if ($num % 2 != 0) {\n      $oddIndex = $index;\n   \
    \   break;\n    }\n  }\n  if ($oddIndex != -1) {\n    foreach ($lst2 as $index\
    \ => $num) {\n      if ($num % 2 == 0) {\n        $lst1[$oddIndex] = $num;\n \
    \       $lst2[$index] = $lst1[$oddIndex];\n        $exchange = 'YES';\n      \
    \  break;\n      }\n    }\n  } else {\n    $exchange = 'YES';\n  }\n  return $exchange;\n\
    }", "  $count = 0;\n  foreach ($lst1 as $key => $value) {\n    if ($value % 2\
    \ == 1) {\n      foreach ($lst2 as $key2 => $value2) {\n        if ($value2 %\
    \ 2 == 0) {\n          $temp = $lst1[$key];\n          $lst1[$key] = $lst2[$key2];\n\
    \          $lst2[$key2] = $temp;\n          $count++;\n          break;\n    \
    \    }\n      }\n    }\n  }\n  $oddCount = 0;\n  foreach ($lst1 as $key => $value)\
    \ {\n    if ($value % 2 == 1) {\n      $oddCount++;\n    }\n  }\n  if ($oddCount\
    \ > 0) {\n    return \"NO\";\n  } else {\n    return \"YES\";\n  }\n}", "  if(!$lst1\
    \ || !$lst2) return false;\n  $len1 = count($lst1);\n  $len2 = count($lst2);\n\
    \  $odd1 = [];\n  $odd2 = [];\n  for($i = 0; $i < $len1; $i++) {\n    if($lst1[$i]\
    \ % 2 != 0) {\n      $odd1[] = $lst1[$i];\n    }\n  }\n  for($i = 0; $i < $len2;\
    \ $i++) {\n    if($lst2[$i] % 2 != 0) {\n      $odd2[] = $lst2[$i];\n    }\n \
    \ }\n  return count($odd1) == count($odd2) ? \"YES\" : \"NO\";\n}\n", "    $numEvens\
    \ = 0;\n    foreach ($lst1 as $n) {\n        if ($n % 2 == 0) $numEvens++;\n \
    \   }\n    foreach ($lst2 as $n) {\n        if ($n % 2 == 0) $numEvens--;\n  \
    \  }\n    return $numEvens == 0 ? \"YES\" : \"NO\";\n}", "    // TODO\n}\n", " \
    \   $odd_lst1 = array_values(array_filter($lst1, function($x) { return $x % 2\
    \ == 1; }));\n    $even_lst2 = array_values(array_filter($lst2, function($x) {\
    \ return $x % 2 == 0; }));\n    $min_odd_lst1 = $odd_lst1[0];\n    $max_even_lst2\
    \ = $even_lst2[count($even_lst2) - 1];\n    return $min_odd_lst1 < $max_even_lst2\
    \ ? \"YES\" : \"NO\";\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 5, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 3]) .\
    \ \"\\n\";", "  // Your code here...\n}", "    foreach ($lst1 as $n) {\n     \
    \   if ($n % 2 == 1) {\n            foreach ($lst2 as $j) {\n                if\
    \ ($j % 2 == 0) {\n                    return \"YES\";\n                }\n  \
    \          }\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}", "    $odds = array_diff($lst1, array_filter($lst1, function($v) {\n   \
    \     return $v % 2 == 0;\n    }));\n    $evens = array_diff($lst2, array_filter($lst2,\
    \ function($v) {\n        return $v % 2 == 1;\n    }));\n    return (sizeof($odds)\
    \ == sizeof($evens)) ? \"YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1,\
    \ 2, 3, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\"; // => \"NO\"\necho exchange([1, 3, 4], [1, 2, 2]) . \"\\n\"; // =>\
    \ \"YES\"\necho exchange([1, 2, 3, 4], [1, 5, 4, 4]) . \"\\n\"; // => \"YES\"\n\
    echo exchange([1, 3, 4], [1, 2, 2, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1,\
    \ 3, 4], [1, 2, 2, 4, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1, 3, 4], [1,\
    \ 2, 2, 4, 4, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1, 3, 4], [1, 2, 2,\
    \ 4, 4, 4, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1, 3, 4], [1, 2, 2, 4,\
    \ 4, 4, 4, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1, 3, 4], [1, 2, 2, 4,\
    \ 4, 4, 4, 4, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1, 3, 4], [1, 2, 2,\
    \ 4, 4, 4, 4, 4, 4, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1, 3, 4], [1,\
    \ 2, 2, 4, 4, 4, 4, 4, 4, 4, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1, 3",
  "    $odd_count = 0;\n    $even_count = 0;\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        if ($lst1[$i] % 2 == 0) {\n            $even_count++;\n   \
    \     } else {\n            $odd_count++;\n        }\n    }\n    for ($i = 0;\
    \ $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count\
    \ > 0 && $odd_count > 0) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n\
    \    $index = 0;\n    $found = false;\n    $is_odd = false;\n    $curr_odd = 0;\n\
    \    while($index < $lst1_len) {\n        if($lst1[$index] % 2 == 1) {\n     \
    \       $found = true;\n            $is_odd = true;\n            $curr_odd = $lst1[$index];\n\
    \            break;\n        }\n        $index++;\n    }\n    if(!$found) {\n\
    \        return \"YES\";\n    }\n    else {\n        for($i = 0; $i < $lst2_len;\
    \ $i++) {\n            if($lst2[$i] % 2 == 0) {\n                $curr_odd = $lst2[$i];\n\
    \                break;\n            }\n        }\n        if($curr_odd % 2 ==\
    \ 0) {\n            return \"YES\";\n        }\n        else {\n            return\
    \ \"NO\";\n        }\n    }\n}", "  $even1 = $odd1 = 0;\n  $even2 = $odd2 = 0;\n\
    \  foreach ($lst1 as $num) {\n    if ($num % 2 === 0) {\n      $even1++;\n   \
    \ } else {\n      $odd1++;\n    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num\
    \ % 2 === 0) {\n      $even2++;\n    } else {\n      $odd2++;\n    }\n  }\n  if\
    \ ($even1 - $even2 === 0) {\n    return \"YES\";\n  } elseif (($even1 - $even2)\
    \ % 2 === 0) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\
    $ans = exchange([1, 2, 3, 4], [1, 2, 3, 4]);\nprint_r($ans);", "    // Write your\
    \ code here\n    // To print results to the standard output you can use print\n\
    \    // Example: print \"Hello world!\";\n}", "    $c1 = 0;\n    $c2 = 0;\n  \
    \  for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 == 0) {\n\
    \            $c1++;\n        }\n    }\n    for ($i = 0; $i < count($lst2); $i++)\
    \ {\n        if ($lst2[$i] % 2 == 0) {\n            $c2++;\n        }\n    }\n\
    \    if ($c1 > $c2) {\n        return \"YES\";\n    } else {\n        return \"\
    NO\";\n    }\n}\n", "  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example: print \"Hello world!\";\n  $lst1 = array_filter($lst1,\
    \ function($a) { return $a % 2; });\n  $lst2 = array_filter($lst2, function($a)\
    \ { return !($a % 2); });\n  $odd = count($lst1);\n  $even = count($lst2);\n \
    \ return $odd && $even ? \"YES\" : \"NO\";\n}\n", "    $odd_count = 0;\n    $flag\
    \ = \"NO\";\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i]\
    \ % 2 !== 0) {\n            $odd_count++;\n        }\n    }\n    for ($i = 0;\
    \ $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2 === 0) {\n           \
    \ $odd_count--;\n        }\n    }\n    if ($odd_count <= 0) {\n        $flag =\
    \ \"YES\";\n    }\n    return $flag;\n}", "    if ($lst1 === $lst2) {\n      \
    \  return \"YES\";\n    }\n    foreach ($lst1 as $value) {\n        if ($value\
    \ % 2 === 1) {\n            if (($key = array_search($value, $lst2)) !== false)\
    \ {\n                unset($lst2[$key]);\n            } else {\n             \
    \   return \"NO\";\n            }\n        }\n    }\n    return \"YES\";\n}\n",
  "    // Write your code here.\n}\n", "    $count1 = 0;\n    $count2 = 0;\n    for\
    \ ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 == 0) {\n   \
    \         $count1++;\n        }\n    }\n    for ($i = 0; $i < count($lst2); $i++)\
    \ {\n        if ($lst2[$i] % 2 == 0) {\n            $count2++;\n        }\n  \
    \  }\n    if ($count1 == count($lst1) || $count2 == count($lst2)) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n$arr1 = [1, 2, 3,\
    \ 4];\n$arr2 = [1, 2, 3, 4];\n$arr3 = [1, 2, 3, 4];\n$arr4 = [1, 5, 3, 4];\n$arr5\
    \ = [1, 2, 3, 4];\n$arr6 = [1, 2, 3, 5];\necho exchange($arr1, $arr2) . PHP_EOL;\n\
    echo exchange($arr3, $arr4) . PHP_EOL;\necho exchange($arr5, $arr6) . PHP_EOL;",
  "  $a = $b = 0;\n  foreach ($lst1 as $num) {\n    if ($num % 2 !== 0) $a++;\n  }\n\
    \  foreach ($lst2 as $num) {\n    if ($num % 2 === 0) $b++;\n  }\n  return $a\
    \ === $b ? \"YES\" : \"NO\";\n}", "  $is_possible = false;\n  foreach ($lst1 as\
    \ $val1) {\n    if ($val1 % 2 === 0) {\n      $is_possible = true;\n    }\n  }\n\
    \  if ($is_possible) {\n    return \"YES\";\n  } else {\n    foreach ($lst2 as\
    \ $val2) {\n      if ($val2 % 2 === 0) {\n        return \"YES\";\n      }\n \
    \   }\n  }\n  return \"NO\";\n}\n", "  $oddCount = 0;\n  foreach ($lst1 as $n)\
    \ {\n    if ($n % 2 != 0) {\n      $oddCount++;\n    }\n  }\n  foreach ($lst2\
    \ as $n) {\n    if ($n % 2 != 0) {\n      $oddCount--;\n    }\n  }\n  return $oddCount\
    \ == 0 ? \"YES\" : \"NO\";\n}", "    $result = \"NO\";\n    foreach ($lst1 as\
    \ $item) {\n        if ($item % 2 == 0) {\n            $result = \"YES\";\n  \
    \          break;\n        }\n    }\n    return $result;\n}", "  $odds = array_filter($lst1,\
    \ function($num) { return $num % 2 == 1; });\n  $evens = array_filter($lst2, function($num)\
    \ { return $num % 2 == 0; });\n  return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([], []) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [5, 6, 7, 8]) . \"\\n\";\necho exchange([5, 6, 7, 8], [1, 2, 3, 4])\
    \ . \"\\n\";", "  $odd_elements_count = 0;\n  $even_elements_count = 0;\n  foreach\
    \ ($lst1 as $key => $value) {\n    if ($value % 2 == 0) {\n      $even_elements_count\
    \ += 1;\n    } else {\n      $odd_elements_count += 1;\n    }\n  }\n  foreach\
    \ ($lst2 as $key => $value) {\n    if ($value % 2 == 0) {\n      $even_elements_count\
    \ += 1;\n    } else {\n      $odd_elements_count += 1;\n    }\n  }\n  return $odd_elements_count\
    \ % 2 == 0 ? \"YES\" : \"NO\";\n}\n", "  // Your code here\n}", "    $lst1Even\
    \ = array_filter($lst1, function($item) {\n        return $item % 2 == 0;\n  \
    \  });\n    $lst2Even = array_filter($lst2, function($item) {\n        return\
    \ $item % 2 == 0;\n    });\n    $lst1Odd = array_filter($lst1, function($item)\
    \ {\n        return $item % 2 != 0;\n    });\n    $lst2Odd = array_filter($lst2,\
    \ function($item) {\n        return $item % 2 != 0;\n    });\n    return (count($lst1Even)\
    \ + count($lst2Odd) == count($lst1)) ? \"YES\" : \"NO\";\n}\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]) . \"<br>\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"<br>\";\necho exchange([2, 3, 5, 6], [6, 5, 3, 2]) . \"<br>\";\necho exchange([1,\
    \ 3, 5, 7], [2, 4, 6, 8]) . \"<br>\";", "    $e = 0;\n    $o = 0;\n    for ($i\
    \ = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 == 0) {\n       \
    \     $e++;\n        } else {\n            $o++;\n        }\n    }\n    for ($i\
    \ = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2 == 0) {\n       \
    \     $e++;\n        } else {\n            $o++;\n        }\n    }\n    if ($e\
    \ > $o) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n   \
    \ }\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"<br>\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"<br>\";\necho exchange([1, 2, 3, 4], [3, 2, 1, 4])\
    \ . \"<br>\";\necho exchange([1, 2, 3, 4], [1, 4, 3, 2]) . \"<br>\";", "  $count1\
    \ = 0;\n  $count2 = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i]\
    \ % 2 == 0) {\n      $count1++;\n    }\n  }\n  for ($i = 0; $i < count($lst2);\
    \ $i++) {\n    if ($lst2[$i] % 2 == 0) {\n      $count2++;\n    }\n  }\n  if ($count1\
    \ + $count2 == count($lst1) + count($lst2)) {\n    return \"YES\";\n  } else {\n\
    \    return \"NO\";\n  }\n}", "  $lst1odd = false;\n  $lst2odd = false;\n  foreach\
    \ ($lst1 as $value) {\n    if (($value % 2) != 0) {\n      $lst1odd = true;\n\
    \    }\n  }\n  foreach ($lst2 as $value) {\n    if (($value % 2) != 0) {\n   \
    \   $lst2odd = true;\n    }\n  }\n  if ($lst1odd === $lst2odd) {\n    return \"\
    YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"\
    ;\necho exchange([1, 5, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 2, 3, 4, 5]) . \"\\n\";\necho exchange([1, 2, 3, 4], [5, 6, 7, 8])\
    \ . \"\\n\";\necho exchange([5, 6, 7, 8], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4, 5, 6, 7, 8]) . \"\\n\";\necho exchange([5, 6, 7, 8],\
    \ [1, 2, 3, 4, 5, 6, 7, 8]) . \"\\n\";\necho exchange([5, 6, 7, 8], [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9]) . \"\\n\";\necho exchange([1, 2, 3, 4, 5, 6, 7, 8, 9], [5,\
    \ 6, 7, 8]) . \"\\n\";", "  $evenLst1 = array_filter($lst1, function($elem) {\
    \ return $elem % 2 == 0; });\n  $evenLst2 = array_filter($lst2, function($elem)\
    \ { return $elem % 2 == 0; });\n  $oddLst1 = array_filter($lst1, function($elem)\
    \ { return $elem % 2 != 0; });\n  $oddLst2 = array_filter($lst2, function($elem)\
    \ { return $elem % 2 != 0; });\n  return count($evenLst1) <= count($evenLst2)\
    \ && count($oddLst1) <= count($oddLst2) ? 'YES' : 'NO';\n}\n", "    // Write your\
    \ code here.\n    $odd = 0;\n    foreach ($lst1 as $num) {\n        if ($num %\
    \ 2 == 1) {\n            $odd++;\n        }\n    }\n    $even = 0;\n    foreach\
    \ ($lst2 as $num) {\n        if ($num % 2 == 0) {\n            $even++;\n    \
    \    }\n    }\n    if ($odd == $even) {\n        return \"YES\";\n    } else {\n\
    \        return \"NO\";\n    }\n}", "  $odds = 0;\n  foreach ($lst1 as $num) {\n\
    \    if ($num % 2 !== 0) {\n      $odds++;\n    }\n  }\n  $evens = 0;\n  foreach\
    \ ($lst2 as $num) {\n    if ($num % 2 === 0) {\n      $evens++;\n    }\n  }\n\
    \  if ($odds === $evens) {\n    return \"YES\";\n  } else {\n    return \"NO\"\
    ;\n  }\n}\n$output = exchange([1, 2, 3, 4], [1, 2, 3, 4]);\necho \"$output\\n\"\
    ;", "  if(all_odd($lst1)){\n    return \"NO\";\n  }\n  for($i = 0; $i < count($lst1);\
    \ $i++){\n    for($j = 0; $j < count($lst2); $j++){\n      $temp = $lst1[$i];\n\
    \      $lst1[$i] = $lst2[$j];\n      $lst2[$j] = $temp;\n      if(all_odd($lst1)){\n\
    \        $temp = $lst1[$i];\n        $lst1[$i] = $lst2[$j];\n        $lst2[$j]\
    \ = $temp;\n      } else {\n        return \"YES\";\n      }\n    }\n  }\n  return\
    \ \"NO\";\n}", '}', "    $isOk = \"NO\";\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        if ($lst1[$i] % 2 != 0) {\n            for ($j = 0; $j < count($lst2);\
    \ $j++) {\n                if ($lst2[$j] % 2 == 0) {\n                    $tmp\
    \ = $lst1[$i];\n                    $lst1[$i] = $lst2[$j];\n                 \
    \   $lst2[$j] = $tmp;\n                    $isOk = \"YES\";\n                \
    \    break;\n                }\n            }\n        }\n    }\n    return $isOk;\n\
    }\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]);", "    $odd = [];\n    foreach\
    \ ($lst1 as $val) {\n        if ($val % 2 != 0) {\n            $odd[] = $val;\n\
    \        }\n    }\n    if (count($odd) == 0) {\n        return \"YES\";\n    }\n\
    \    $even = [];\n    foreach ($lst2 as $val) {\n        if ($val % 2 == 0) {\n\
    \            $even[] = $val;\n        }\n    }\n    if (count($even) == 0) {\n\
    \        return \"NO\";\n    }\n    if (count($odd) < count($even)) {\n      \
    \  return \"YES\";\n    }\n    return \"NO\";\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2\
    \ = [1, 2, 3, 4];\necho exchange($lst1, $lst2) . PHP_EOL;\n$lst1 = [1, 2, 3, 4];\n\
    $lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2) . PHP_EOL;\n$lst1 = [5, 3,\
    \ 2, 1];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1, $lst2) . PHP_EOL;\n$lst1\
    \ = [4, 3, 2, 1];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2) . PHP_EOL;\n\
    $lst1 = [5, 3, 2, 1];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2) . PHP_EOL;\n\
    $lst1 = [10, 2, 11, 12];\n$lst2 = [2, 3, 8, 9];\necho exchange($lst1, $lst2) .\
    \ PHP_EOL;\n$lst1 = [10, 2, 11, 12];\n$lst2 = [1, 3, 8, 9];\necho exchange($lst1,\
    \ $lst2) . PHP_EOL;\n$lst1", "  // Your code here!\n}", "  $lst1 = array_count_values($lst1);\n\
    \  $lst2 = array_count_values($lst2);\n  $odds = 0;\n  $evens = 0;\n  foreach\
    \ ($lst1 as $num => $count) {\n    if ($num % 2 == 0) {\n      $evens += $count;\n\
    \    } else {\n      $odds += $count;\n    }\n  }\n  foreach ($lst2 as $num =>\
    \ $count) {\n    if ($num % 2 == 0) {\n      $evens += $count;\n    } else {\n\
    \      $odds += $count;\n    }\n  }\n  if ($evens % 2 == 0 && $odds % 2 == 0)\
    \ {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\n$lst1 = [1,\
    \ 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1, $lst2) . \"<br>\";\n\
    $lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2) . \"\
    <br>\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 3];\necho exchange($lst1, $lst2)\
    \ . \"<br>\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 5, 4];\necho exchange($lst1,\
    \ $lst2) . \"<br>\";\n$lst1 = [2, 2, 3, 4];\n$lst2 = [1, 5, 5, 4];\necho exchange($lst1,\
    \ $lst2) . \"<br>\";\n$lst1 = [2, 2, 2, 4];\n$lst2 = [1, 5, 5, 4];\necho exchange($lst1,\
    \ $lst2) . \"<br>\";\n$lst1 = [2, 2, 2, 4];\n$lst", "  $newLst1 = [];\n  foreach\
    \ ($lst1 as $l1) {\n    if ($l1 % 2 === 0) {\n      $newLst1[] = $l1;\n    }\n\
    \  }\n  $newLst2 = [];\n  foreach ($lst2 as $l2) {\n    if ($l2 % 2 !== 0) {\n\
    \      $newLst2[] = $l2;\n    }\n  }\n  if (count($newLst1) === count($newLst2))\
    \ {\n    return \"YES\";\n  }\n  return \"NO\";\n}\n\necho exchange([1, 2, 3,\
    \ 4], [1, 2, 3, 4]);\necho \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]);\n\
    echo \"\\n\";\necho exchange([1, 2, 3, 4], [1, 2, 3, 6]);\necho \"\\n\";", " \
    \   // Your code here\n}", "  $allEven = true;\n  foreach ($lst1 as $num) {\n\
    \    if ($num % 2 !== 0) {\n      $allEven = false;\n    }\n  }\n  if ($allEven)\
    \ {\n    return \"YES\";\n  }\n  $odd1 = [];\n  $odd2 = [];\n  foreach ($lst1\
    \ as $num) {\n    if ($num % 2 !== 0) {\n      $odd1[] = $num;\n    }\n  }\n \
    \ foreach ($lst2 as $num) {\n    if ($num % 2 !== 0) {\n      $odd2[] = $num;\n\
    \    }\n  }\n  if (empty($odd1) || empty($odd2)) {\n    return \"NO\";\n  }\n\
    \  foreach ($odd1 as $num) {\n    if (in_array($num, $odd2)) {\n      return \"\
    YES\";\n    }\n  }\n  return \"NO\";\n}\n", "    $odd1 = array_filter($lst1, function($n)\
    \ {\n        return $n % 2 != 0;\n    });\n    $odd2 = array_filter($lst2, function($n)\
    \ {\n        return $n % 2 != 0;\n    });\n    if ($odd1 || $odd2) {\n       \
    \ if (count($odd1) == count($odd2)) {\n            return \"YES\";\n        }\n\
    \        return \"NO\";\n    }\n    return \"YES\";\n}\necho \"exchange([1, 2,\
    \ 3, 4], [1, 2, 3, 4]) => \" . exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"<br>\"\
    ;\necho \"exchange([1, 2, 3, 4], [1, 5, 3, 4]) => \" . exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4]) . \"<br>\";\n", "    $return = \"NO\";\n    $even = 0;\n    $odd\
    \ = 0;\n    foreach ($lst1 as $number) {\n        if ($number % 2 == 0) {\n  \
    \          $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    foreach ($lst2 as $number) {\n        if ($number % 2 == 0) {\n         \
    \   $even++;\n        } else {\n            $odd++;\n        }\n    }\n    if\
    \ ($even > $odd) {\n        $return = \"YES\";\n    }\n    return $return;\n}\n",
  "    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n  \
    \      if ($lst1[$i] % 2 == 0) {\n            $even++;\n        } else {\n   \
    \         $odd++;\n        }\n    }\n    for ($i = 0; $i < count($lst2); $i++)\
    \ {\n        if ($lst2[$i] % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    if ($even > $odd) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n", "  $allEven1 =\
    \ allEven($lst1);\n  $allEven2 = allEven($lst2);\n  $odd1 = firstOdd($lst1);\n\
    \  $odd2 = firstOdd($lst2);\n  if ($allEven1 && $allEven2) {\n    return \"YES\"\
    ;\n  } elseif ($allEven1 && !$allEven2) {\n    $lst2[$odd2] = $lst1[$odd1];\n\
    \    $lst1[$odd1] = $lst2[$odd2];\n    $allEven1 = allEven($lst1);\n    $allEven2\
    \ = allEven($lst2);\n    if ($allEven1 && $allEven2) {\n      return \"YES\";\n\
    \    } else {\n      return \"NO\";\n    }\n  } elseif (!$allEven1 && $allEven2)\
    \ {\n    $lst1[$odd1] = $lst2[$odd2];\n    $lst2[$odd2] = $lst1[$odd1];\n    $allEven1\
    \ = allEven($lst1);\n    $allEven2 = allEven($lst2);\n    if ($allEven1 && $allEven2)\
    \ {\n      return \"YES\";\n    } else {\n      return \"NO\";\n    }\n  } else\
    \ {\n    return \"NO\";\n  }\n}", "  $odd1 = array_filter($lst1, function($num)\
    \ {\n    return $num % 2 == 1;\n  });\n  $odd2 = array_filter($lst2, function($num)\
    \ {\n    return $num % 2 == 1;\n  });\n  if (count($odd1) == count($odd2)) {\n\
    \    return \"YES\";\n  }\n  return \"NO\";\n}\n\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"\
    ;\necho exchange([1, 1, 1, 1], [2, 2, 2, 2]) . \"\\n\";\necho exchange([1, 1,\
    \ 1, 1], [1, 1, 1, 1]) . \"\\n\";\necho exchange([1, 1, 1, 1], [1, 2, 2, 2]) .\
    \ \"\\n\";\necho exchange([1, 1, 1, 1], [2, 2, 2, 2]) . \"\\n\";\necho exchange([1,\
    \ 2, 1, 1], [2, 2, 2, 2]) . \"\\n\";\necho exchange([1, 1, 1, 1], [2, 2, 1, 2])\
    \ . \"\\n\";\necho exchange([1, 1, 1, 1], [2, 2, 1, 1]) . \"\\n\";", "    $oddsLst1\
    \ = count(array_filter($lst1, function($el) { return $el % 2; }));\n    $oddsLst2\
    \ = count(array_filter($lst2, function($el) { return $el % 2; }));\n    return\
    \ $oddsLst1 === $oddsLst2 ? \"YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"\
    ;\necho exchange([2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 5, 3,\
    \ 4], [2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 5], [1, 5, 3, 4]) . \"\\\
    n\";\necho exchange([1, 5, 3, 4], [1, 2, 3, 5]) . \"\\n\";", "  $count = 0;\n\
    \  foreach ($lst1 as $key => $value) {\n    if ($value % 2 == 1) {\n      $count++;\n\
    \    }\n  }\n  foreach ($lst2 as $key => $value) {\n    if ($value % 2 == 0) {\n\
    \      $count--;\n    }\n  }\n  if ($count > 0) {\n    return \"NO\";\n  } else\
    \ {\n    return \"YES\";\n  }\n}", "    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        if ($lst1[$i] % 2 == 1) {\n            $key = array_search($lst1[$i],\
    \ $lst2);\n            if ($key !== false) {\n                $lst2[$key] = $lst1[$i];\n\
    \                $lst1[$i] = $lst2[$key];\n            } else {\n            \
    \    return \"NO\";\n            }\n        }\n    }\n    return \"YES\";\n}",
  "    $flag = false;\n    $len1 = count($lst1);\n    $len2 = count($lst2);\n    for\
    \ ($i = 0; $i < $len1; $i++) {\n        if ($lst1[$i] % 2 != 0) {\n          \
    \  for ($j = 0; $j < $len2; $j++) {\n                if ($lst2[$j] % 2 != 0) {\n\
    \                    $lst1[$i] = $lst2[$j];\n                    $flag = true;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     if (!$flag) {\n            return \"NO\";\n        }\n    }\n    return\
    \ \"YES\";\n}", "    $n = count($lst1);\n    $m = count($lst2);\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($lst1[$i]\
    \ % 2 != 0 && $lst2[$j] % 2 == 0) {\n                $temp = $lst1[$i];\n    \
    \            $lst1[$i] = $lst2[$j];\n                $lst2[$j] = $temp;\n    \
    \        }\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst1[$i]\
    \ % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}", "    $odd = [];\n    $even = [];\n    foreach ($lst1 as $el) {\n      \
    \  if ($el % 2 == 0) {\n            $even[] = $el;\n        } else {\n       \
    \     $odd[] = $el;\n        }\n    }\n    foreach ($lst2 as $el) {\n        if\
    \ ($el % 2 == 0) {\n            $even[] = $el;\n        } else {\n           \
    \ $odd[] = $el;\n        }\n    }\n    return count($odd) > count($even) ? \"\
    NO\" : \"YES\";\n}", "    $lst1_even = array_filter($lst1, function($x) { return\
    \ $x % 2 == 0; });\n    $lst2_odd = array_filter($lst2, function($x) { return\
    \ $x % 2 != 0; });\n    if (count($lst1_even) == count($lst1)) {\n        return\
    \ \"YES\";\n    } elseif (count($lst1_even) < count($lst1) && count($lst2_odd)\
    \ >= count($lst1) - count($lst1_even)) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4])\
    \ . \"<br>\"; // \"YES\"\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"<br>\"\
    ; // \"NO\"", "}\n$a = [1, 2, 3, 4];\n$b = [1, 2, 3, 4];\necho exchange($a, $b)\
    \ . \"\\n\"; // YES\n$a = [1, 2, 3, 4];\n$b = [1, 5, 3, 4];\necho exchange($a,\
    \ $b) . \"\\n\"; // NO\n", "    $odds = array_filter($lst1, function($i) { return\
    \ $i % 2 != 0; });\n    $evens = array_filter($lst2, function($i) { return $i\
    \ % 2 == 0; });\n    if (count($odds) == count($evens)) {\n        return \"YES\"\
    ;\n    }\n    return \"NO\";\n}", "    $isExchangePossible = false;\n    $lst1WithEvenElements\
    \ = $lst1;\n    $lst2WithEvenElements = $lst2;\n    $lst1HasEvenElement = in_array(2,\
    \ $lst1);\n    $lst2HasEvenElement = in_array(2, $lst2);\n    foreach ($lst1 as\
    \ $lst1Key => $lst1Value) {\n        if ($lst1Value % 2 == 0) {\n            $lst1WithEvenElements[$lst1Key]\
    \ = 2;\n        }\n    }\n    foreach ($lst2 as $lst2Key => $lst2Value) {\n  \
    \      if ($lst2Value % 2 == 0) {\n            $lst2WithEvenElements[$lst2Key]\
    \ = 2;\n        }\n    }\n    if (in_array(2, $lst1WithEvenElements) && in_array(2,\
    \ $lst2WithEvenElements)) {\n        $isExchangePossible = true;\n    }\n    if\
    \ (!$lst1HasEvenElement && !$lst2HasEvenElement) {\n        $isExchangePossible\
    \ = false;\n    }\n    return $isExchangePossible ? \"YES\" : \"NO\";\n}\n\necho\
    \ exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 4, 3, 4]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 4, 5, 4]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 3, 5, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [3, 5, 5, 4]) .\
    \ \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 5, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 6, 4]) .", "    for ($i = 0; $i < count($lst1); $i++) {\n \
    \       if ($lst1[$i] % 2 == 1) {\n            $index = array_search($lst1[$i],\
    \ $lst2);\n            if ($index === false) {\n                return \"NO\"\
    ;\n            } else {\n                $lst2[$index] = 0;\n            }\n \
    \       }\n    }\n    return \"YES\";\n}\n", "    $even = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odd = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n    return count($even) + count($odd) >= count($lst1)\
    \ ? \"YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\"\
    ; // => \"YES\"\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"; // => \"\
    NO\"\necho exchange([1, 2, 3, 4], [4, 2, 3, 1]) . \"\\n\"; // => \"YES\"\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"; // => \"NO\"\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 4, 3]) . \"\\n\"; // => \"YES\"\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 4, 5]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2, 3, 4], [1, 2, 4,\
    \ 5]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2, 3, 4], [1, 5, 4, 5]) . \"\\\
    n\"; // => \"NO\"\necho exchange([1, 2, 3, 4], [1, 5, 5, 5]) . \"\\n\"; // =>\
    \ \"NO\"\necho exchange([1, 2, 3, 4], [1, 5, 5, 5]) . \"\\n\"; // => \"NO\"\n\
    echo exchange([1, 2, 3, 4], [1, 5, 5, 5]) . \"\\n\"; // => \"NO\"\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 6, 7]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 6, 7]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2, 3, 4], [1, 5, 6,\
    \ 7]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2,", "\n}", "  // Your code here\n\
    \  $arr = array();\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i]\
    \ % 2 == 1) {\n      array_push($arr, $lst1[$i]);\n    }\n  }\n  for ($i = 0;\
    \ $i < count($lst2); $i++) {\n    if ($lst2[$i] % 2 == 0) {\n      array_push($arr,\
    \ $lst2[$i]);\n    }\n  }\n  if (count($arr) != count($lst1)) {\n    return \"\
    NO\";\n  }\n  return \"YES\";\n}", "  $even_lst1 = array_filter($lst1, function($element)\
    \ {\n    return $element % 2 == 0;\n  });\n  $odd_lst2 = array_filter($lst2, function($element)\
    \ {\n    return $element % 2 != 0;\n  });\n  return count($even_lst1) == count($odd_lst2)\
    \ ? \"YES\" : \"NO\";\n}", "    // Write your code here!\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    foreach ($lst1 as $num) {\n        $num % 2 === 0 ? $even++\
    \ : $odd++;\n    }\n    foreach ($lst2 as $num) {\n        $num % 2 === 0 ? $even++\
    \ : $odd++;\n    }\n    if ($even === count($lst1) + count($lst2)) {\n       \
    \ return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5", "}\n", "    $evens = array_filter($lst1, function($e) { return\
    \ $e % 2 == 0; });\n    $odds = array_filter($lst2, function($e) { return $e %\
    \ 2 != 0; });\n    return count($evens) <= count($odds) ? \"YES\" : \"NO\";\n\
    }\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [5, 2, 3, 4]) .\
    \ \"\\n\";\necho exchange([2, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";", "    $even\
    \ = [];\n    $odd = [];\n    $lst1 = array_filter($lst1, function($x) use (&$even,\
    \ &$odd) {\n        if ($x % 2 == 0) {\n            $even[] = $x;\n          \
    \  return true;\n        } else {\n            $odd[] = $x;\n            return\
    \ false;\n        }\n    });\n    $lst2 = array_filter($lst2, function($x) use\
    \ (&$even, &$odd) {\n        if ($x % 2 == 0) {\n            $even[] = $x;\n \
    \           return true;\n        } else {\n            $odd[] = $x;\n       \
    \     return false;\n        }\n    });\n    if (count($even) > 0) {\n       \
    \ return 'YES';\n    } else {\n        return 'NO';\n    }\n}\n$lst1 = [1, 2,\
    \ 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1, $lst2);", "  $lst1 = array_count_values($lst1);\n\
    \  $lst2 = array_count_values($lst2);\n  $odd_numbers_in_lst1 = array_keys(array_filter($lst1,\
    \ function($element) {\n    return $element % 2 != 0;\n  }));\n  $even_numbers_in_lst2\
    \ = array_keys(array_filter($lst2, function($element) {\n    return $element %\
    \ 2 == 0;\n  }));\n  $all_even_numbers_are_in_lst2 = count(array_diff($odd_numbers_in_lst1,\
    \ $even_numbers_in_lst2)) == 0;\n  $all_odd_numbers_are_in_lst1 = count(array_diff($even_numbers_in_lst2,\
    \ $odd_numbers_in_lst1)) == 0;\n  return $all_even_numbers_are_in_lst2 && $all_odd_numbers_are_in_lst1\
    \ ? \"YES\" : \"NO\";\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_94_skjkasdkd
language: php
prompt: "<?php\n// You are given a list of integers.\n// You need to find the largest\
  \ prime value and return the sum of its digits.\n// Examples:\n// For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]\
  \ the output should be 10\n// For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]\
  \ the output should be 25\n// For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
  \ the output should be 13\n// For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the\
  \ output should be 11\n// For lst = [0,81,12,3,1,21] the output should be 3\n//\
  \ For lst = [0,8,1,2,1,7] the output should be 7\nfunction skjkasdkd($lst) {\n"
tests: "function candidate(...$args) {\n    return skjkasdkd(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
  \ 32, 4, 32, 3, 2, 32, 324, 4, 3)) !== 10) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
  \ 5, 1)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)) !== 13) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 724, 32, 71, 99,\
  \ 32, 6, 0, 5, 91, 83, 0, 5, 6)) !== 11) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(0, 81, 12, 3, 1, 21)) !== 3) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0, 8, 1, 2, 1, 7)) !== 7) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(8191)) !== 19) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8191, 123456, 127,\
  \ 7)) !== 19) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(127,\
  \ 97, 8192)) !== 10) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    \n}", "  $largestPrime = 0;\n  foreach ($lst as $value) {\n   \
    \ $largestPrime = isPrime($value) && $value > $largestPrime ? $value : $largestPrime;\n\
    \  }\n  return array_sum(str_split($largestPrime));\n}\n", "    $maxPrime = 0;\n\
    \    foreach ($lst as $v) {\n        if (isPrime($v) && $v > $maxPrime) {\n  \
    \          $maxPrime = $v;\n        }\n    }\n    return array_sum(str_split($maxPrime));\n\
    }\n", "  $primeArr = [];\n  for ($i=0; $i < count($lst); $i++) {\n    if (isPrime($lst[$i]))\
    \ {\n      array_push($primeArr, $lst[$i]);\n    }\n  }\n  if (count($primeArr)\
    \ == 0) {\n    return 0;\n  }\n  $maxPrime = max($primeArr);\n  $maxPrime = (string)$maxPrime;\n\
    \  $sum = 0;\n  for ($i=0; $i < strlen($maxPrime); $i++) {\n    $sum += $maxPrime[$i];\n\
    \  }\n  return $sum;\n}\n", "    $max = max($lst);\n    $primes = array();\n \
    \   $prime = false;\n    for ($i = 2; $i <= $max; $i++) {\n        for ($j = 2;\
    \ $j <= $i; $j++) {\n            if ($i % $j == 0 && $i != $j) {\n           \
    \     $prime = false;\n                break;\n            } else {\n        \
    \        $prime = true;\n            }\n        }\n        if ($prime == true)\
    \ {\n            $primes[] = $i;\n        }\n    }\n    $primes = array_unique($primes);\n\
    \    rsort($primes);\n    foreach ($primes as $value) {\n        $primes_sum =\
    \ 0;\n        for ($i = 0; $i < strlen($value); $i++) {\n            $primes_sum\
    \ += $value[$i];\n        }\n        return $primes_sum;\n    }\n}\n", "    $primes\
    \ = array();\n    foreach ($lst as $num) {\n        $l = true;\n        for ($i\
    \ = 2; $i < $num; $i++) {\n            if ($num % $i == 0) {\n               \
    \ $l = false;\n                break;\n            }\n        }\n        if ($l)\
    \ {\n            $primes[] = $num;\n        }\n    }\n    rsort($primes);\n  \
    \  $str = strval($primes[0]);\n    $sum = 0;\n    for ($i = 0; $i < strlen($str);\
    \ $i++) {\n        $sum += intval($str[$i]);\n    }\n    return $sum;\n}", "$ma\
    \ = max($lst);\nfor($i = $ma; $i >= 2; $i--){\n    if(!is_prime($i)){\n      \
    \  continue;\n    }\n    if(in_array($i, $lst)){\n        return array_sum(str_split($i));\n\
    \    }\n}\nreturn 0;\n}", "    $max = max($lst);\n    $max_prime = 0;\n    for\
    \ ($i = 2; $i <= $max; $i++) {\n        $is_prime = true;\n        for ($j = 2;\
    \ $j < $i; $j++) {\n            if ($i % $j == 0) {\n                $is_prime\
    \ = false;\n                break;\n            }\n        }\n        if ($is_prime)\
    \ {\n            if (in_array($i, $lst)) {\n                $max_prime = $i;\n\
    \            }\n        }\n    }\n    $sum = 0;\n    $max_prime = str_split($max_prime);\n\
    \    foreach ($max_prime as $key => $val) {\n        $sum += $val;\n    }\n  \
    \  return $sum;\n}\nprint skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]);\nprint skjkasdkd([1, 0, 1, 8, 2, 4597, 2,\
    \ 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]);\nprint skjkasdkd([1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]);\nprint skjkasdkd([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]);\nprint skjkasdkd([0, 81, 12, 3, 1, 21]);\n\
    print skjkasdkd([0, 8, 1, 2, 1, 7]);", "    $d = 0;\n    $last = array_pop($lst);\n\
    \    foreach ($lst as $k=>$v) {\n        if ($last % $v == 0) {\n            $d\
    \ = $last;\n            $last = $v;\n        }\n    }\n    if ($d == 0) {\n  \
    \      $d = $last;\n    }\n    $sum = 0;\n    while ($d > 0) {\n        $sum +=\
    \ $d % 10;\n        $d = floor($d / 10);\n    }\n    return $sum;\n}\n\n$lst =\
    \ [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\necho skjkasdkd($lst);",
  "    if(count($lst) == 0) return 0;\n    $x = $lst[0];\n    $y = $lst[1];\n    $z\
    \ = $lst[2];\n    $index = 0;\n    $result = 0;\n    $sum = 0;\n    for($i = 0;\
    \ $i < count($lst); $i++) {\n        if(($x+$y+$z)%11 == 0 && ($x*$y*$z)%11 ==\
    \ 0) {\n            $index = $i;\n            $result = ($x*$y*$z)/11;\n     \
    \   }\n        $x = $y;\n        $y = $z;\n        $z = $lst[$i+3];\n    }\n \
    \   if($result == 0) {\n        return 0;\n    }\n    while($result != 0) {\n\
    \        $sum += $result%10;\n        $result = floor($result/10);\n    }\n  \
    \  return $sum;\n}", "  // have to be sorted, to find the largest prime value\n\
    \  sort($lst);\n  $lst = array_reverse($lst);\n  // defined prime value\n  $primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997];\n  foreach ($lst as $k => $val) {\n    if (!in_array($val, $primes))\
    \ {\n      // if not prime, then unset\n      unset($lst[$k", "  $prime = 0;\n\
    \  $result = 0;\n  foreach ($lst as $key => $value) {\n    $reverse = strrev($value);\n\
    \    $mod = $reverse % 2;\n    if ($mod == 0) {\n      if ($reverse > $prime)\
    \ {\n        $prime = $reverse;\n      }\n    }\n  }\n  $x = str_split($prime);\n\
    \  foreach ($x as $key => $value) {\n    $result += $value;\n  }\n  return $result;\n\
    }\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);\necho\
    \ \"<br>\";\necho skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]);\necho\
    \ \"<br>\";\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]);\n\
    echo \"<br>\";\necho skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]);\necho \"\
    <br>\";\necho skjkasdkd([0,81,12,3,1,21]);\necho \"<br>\";\necho skjkasdkd([0,8,1,2,1,7]);",
  "    $prime = $lst[0];\n    foreach ($lst as $val) {\n        if ($val > $prime\
    \ && isPrime($val)) {\n            $prime = $val;\n        }\n    }\n    return\
    \ array_sum(str_split($prime));\n}\n", "  foreach ($lst as $value) {\n    if ($value\
    \ > 2 && $value % 2 != 0) {\n      for ($i=3; $i < $value; $i++) {\n        if\
    \ ($value % $i != 0) {\n          $arr[] = $value;\n        }\n      }\n    }\n\
    \  }\n  $max = max($arr);\n  $arr = str_split($max);\n  $sum = array_sum($arr);\n\
    \  echo $sum;\n}\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    skjkasdkd($lst);", "    $max = max($lst);\n    $primes = findPrimes($max);\n \
    \   $max_prime = $primes[count($primes) - 1];\n    $sum = 0;\n    for ($i = 0;\
    \ $i < strlen($max_prime); $i++) {\n        $sum += $max_prime[$i];\n    }\n \
    \   return $sum;\n}\n", "    $result = [];\n    $count = 1;\n    for ($i = 0;\
    \ $i < count($lst); $i++) {\n        for ($j = $i + 1; $j < count($lst); $j++)\
    \ {\n            if ($lst[$i] == $lst[$j]) {\n                $count++;\n    \
    \        }\n        }\n        if ($count == 1) {\n            array_push($result,\
    \ $lst[$i]);\n        }\n        $count = 1;\n    }\n    $count_max = 0;\n   \
    \ $number = 0;\n    for ($i = 0; $i < count($result); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($result); $j++) {\n            if ($result[$i] % $result[$j]\
    \ == 0) {\n                break;\n            }\n        }\n        if ($j ==\
    \ count($result)) {\n            if ($count_max < $result[$i]) {\n           \
    \     $count_max = $result[$i];\n                $number = $i;\n            }\n\
    \        }\n    }\n    $sum = 0;\n    while ($count_max > 0) {\n        $sum +=\
    \ $count_max % 10;\n        $count_max = intval($count_max / 10);\n    }\n   \
    \ return $sum;\n}\n$lst = [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32,\
    \ 3, 2, 32, 324, 4, 3];\necho skjkasdkd($lst);", "\n$x = 0;\nforeach ($lst as\
    \ $key => $value) {\n    \n    $divider = 0;\n    for ($i=1; $i <= $value; $i++)\
    \ { \n        if ($value % $i == 0) {\n            $divider++;\n        }\n  \
    \  }\n    \n    if ($divider < 3) {\n        $x = $value;\n    }\n}\n$array =\
    \ str_split($x);\n$sum = 0;\nforeach ($array as $key => $value) {\n    $sum +=\
    \ $value;\n}\nreturn $sum;\n}\n", "$n = $lst[0];\n\t$p = 1;\n\tfor ($i = 1; $i\
    \ < count($lst); $i++) {\n\t\t$j = $i;\n\t\twhile($j > 0 && $lst[$j] > $lst[$j-1])\
    \ {\n\t\t\t$tmp = $lst[$j];\n\t\t\t$lst[$j] = $lst[$j-1];\n\t\t\t$lst[$j-1] =\
    \ $tmp;\n\t\t\t$j = $j - 1;\n\t\t}\n\t}\n\tfor ($i = 1; $i < count($lst); $i++)\
    \ {\n\t\t$p = 1;\n\t\tfor ($k = 2; $k < $lst[$i]; $k++) {\n\t\t\tif ($lst[$i]\
    \ % $k == 0) $p = 0;\n\t\t}\n\t\tif ($p == 1) {\n\t\t\t$str = strval($lst[$i]);\n\
    \t\t\t$s = 0;\n\t\t\tfor ($j = 0; $j < strlen($str); $j++) {\n\t\t\t\t$s = $s\
    \ + intval($str[$j]);\n\t\t\t}\n\t\t\treturn $s;\n\t\t}\n\t}\n\treturn 0;\n}",
  "\t$int = 0;\n\tforeach ($lst as $key => $value) {\n\t\tif (is_int($value)) {\n\t\
    \t\t$int = $value;\n\t\t}\n\t}\n\t$num = 0;\n\tfor ($i=2; $i < $int; $i++) { \n\
    \t\tfor ($j=2; $j < $i; $j++) { \n\t\t\tif ($i % $j == 0) {\n\t\t\t\t$num = $i;\n\
    \t\t\t}\n\t\t}\n\t}\n\t$sum = 0;\n\t$arr = str_split($num);\n\tforeach ($arr as\
    \ $key => $value) {\n\t\t$sum += $value;\n\t}\n\treturn $sum;\n}\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    echo skjkasdkd($lst);", "    $max = 0;\n    foreach ($lst as $num) {\n       \
    \ $num = (string)$num;\n        for ($i = 0; $i < strlen($num); $i++) {\n    \
    \        if (checkPrime((int)$num[$i]) && (int)$num[$i] > $max) {\n          \
    \      $max = (int)$num[$i];\n            }\n        }\n    }\n    return $max;\n\
    }", "$lst1 = array_filter($lst, function($n) { return $n % 2; });\n$lst = array_filter($lst,\
    \ function($n) { return !($n % 2); });\nsort($lst);\nwhile(count($lst1)>0){\n\
    $x=array_pop($lst1);\n    if(!array_search($x,$lst)){\n$lst[]=$x;\n    }\n}\n\
    sort($lst);\n    return $lst[count($lst)-1];\n}\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    var_dump(skjkasdkd($lst));", "    $max = 0;\n    foreach ($lst as $item) {\n \
    \       if ($item > $max) {\n            $max = $item;\n        }\n    }\n   \
    \ $prime = 0;\n    $i = 0;\n    while ($prime == 0) {\n        $i++;\n       \
    \ $prime = isPrime($max - $i);\n    }\n    $sum = 0;\n    foreach (str_split($prime)\
    \ as $item) {\n        $sum += $item;\n    }\n    return $sum;\n}\n", "$j=0;\n\
    $r=0;\nfor($i=0;$i<count($lst);$i++){\n  $j = max($lst);\n  $k = $j / 2;\n   \
    \ for($p=2;$p<=$k;$p++){\n      if($j % $p == 0){\n        $r=1;\n        break;\n\
    \      }\n    }\n    if($r==0){\n      echo \"\u0427\u0438\u0441\u043B\u043E \"\
    ,$j,\" \u041F\u0440\u043E\u0441\u0442\u043E\u0435<br>\";\n      $z = $j;\n   \
    \   while ($z > 0) {\n        $z = $z / 10;\n        $a = $z % 10;\n        echo\
    \ \"\u0412\u044B\u0432\u043E\u0434 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\
    \u0439 \u0446\u0438\u0444\u0440\u044B \u0447\u0438\u0441\u043B\u0430 \",$j,\"\
    \ \",$a,\"<br>\";\n        $s = $s + $a;\n        $z = $z - $a;\n      }\n   \
    \   break;\n    }\n    $r=0;\n    $z = 0;\n    $s = 0;\n}\necho $s;\n}\nskjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);",
  "    $prime = 0;\n    foreach ($lst as $number) {\n        $prime = isPrime($number)\
    \ ? $number : $prime;\n    }\n    return array_sum(str_split($prime));\n}", " \
    \   $s = 0;\n    $max = 0;\n    foreach ($lst as $v) {\n        if (isPrime($v))\
    \ {\n            $s = $v;\n            while ($s >= 1) {\n                $max\
    \ += $s % 10;\n                $s = intval($s / 10);\n            }\n        }\n\
    \    }\n    return $max;\n}", "    $res = 0;\n    $a = array_filter($lst, function($n)\
    \ { return $n % 2; });\n    $a = array_reverse($a);\n    $a = array_filter($a,\
    \ function($n) {\n        for ($i = 2; $i < $n; $i++) {\n            if ($n %\
    \ $i == 0) return false;\n        }\n        return true;\n    });\n    if (count($a)\
    \ == 0) return 0;\n    $res = array_shift($a);\n    $res = array_sum(str_split($res));\n\
    \    return $res;\n}\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    $lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1];\n$lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3];\n\
    $lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6];\n$lst = [0,81,12,3,1,21];\n$lst\
    \ = [0,8,1,2,1,7];\necho skjkasdkd($lst);", "    $primes = [3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101,\
    \ 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181,\
    \ 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271,\
    \ 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373,\
    \ 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463,\
    \ 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577,\
    \ 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673,\
    \ 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,\
    \ 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887,\
    \ 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\n   \
    \ $primes = array_combine($primes, $primes);\n    $max_prime = max($lst);\n  \
    \  $temp = $max_prime;\n    while ($temp > 1) {\n        foreach ($primes as $key\
    \ => $prime) {\n            if ($prime > $temp) continue;\n            if ($temp\
    \ % $prime == 0) {\n                $temp /", "    $numbers = array_filter($lst,\
    \ function($x) {\n        return $x > 0;\n    });\n    $factors = array_filter($numbers,\
    \ function($x) {\n        return $x % 2 != 0;\n    });\n    $new_lst = array_filter($factors,\
    \ function($x) {\n        return $x % 3 != 0;\n    });\n    $new_list = array_filter($new_lst,\
    \ function($x) {\n        return $x % 5 != 0;\n    });\n    $newer_list = array_filter($new_list,\
    \ function($x) {\n        return $x % 7 != 0;\n    });\n    $newer_lst = array_filter($newer_list,\
    \ function($x) {\n        return $x % 11 != 0;\n    });\n    $newer_lst = array_filter($newer_lst,\
    \ function($x) {\n        return $x % 13 != 0;\n    });\n    $newer_lst = array_filter($newer_lst,\
    \ function($x) {\n        return $x % 17 != 0;\n    });\n    $newer_lst = array_filter($newer_lst,\
    \ function($x) {\n        return $x % 19 != 0;\n    });\n    $newer_lst = array_filter($newer_lst,\
    \ function($x) {\n        return $x % 23 != 0;\n    });\n    $newer_lst = array_filter($newer_lst,\
    \ function($x) {\n        return $x % 29 != 0;\n    });\n    $newer_lst = array_filter($newer_lst,\
    \ function($x) {\n        return $x % 31 != 0;\n    });\n    $newer_lst = array_filter($newer_lst,\
    \ function($x) {\n        return $x % 37 != 0;\n    });\n    $newer_lst = array_filter($newer_lst,\
    \ function($x) {\n        return $x % 41 != 0;\n    });\n    $newer_lst = array_filter($newer_lst,",
  "    $result = 0;\n    foreach ($lst as $value) {\n        for ($i = 2; $i < $value;\
    \ $i++) {\n            if ($value % $i == 0) {\n                $value = 0;\n\
    \                break;\n            }\n        }\n        if ($value > $result)\
    \ {\n            $result = $value;\n        }\n    }\n    return array_sum(str_split($result));\n\
    }\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]).\"\\n\"\
    ; // 10\necho skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]).\"\\n\"; //\
    \ 25\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]).\"\\\
    n\"; // 13\necho skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]).\"\\n\"; //\
    \ 11\necho skjkasdkd([0,81,12,3,1,21]).\"\\n\"; // 3\necho skjkasdkd([0,8,1,2,1,7]).\"\
    \\n\"; // 7", "    $max = 0;\n    foreach ($lst as $k) {\n        $flag = true;\n\
    \        for ($i = 2; $i < $k; $i++) {\n            if ($k % $i == 0) {\n    \
    \            $flag = false;\n                break;\n            }\n        }\n\
    \        if ($flag && $k > $max) $max = $k;\n    }\n    return array_sum(str_split($max));\n\
    }\n", "$d= 0;\n$c = 0;\nforeach ($lst as $key) {\n    $p = 0;\n    for ($i=1;\
    \ $i <= $key; $i++) { \n        if ($key % $i == 0) {\n            $p++;\n   \
    \     }\n    }\n    if ($p == 2) {\n        $d += $key;\n        for ($j=0; $j\
    \ < strlen($key); $j++) { \n            $c += $key[$j];\n        }\n    }\n  \
    \  $d += $c;\n}\necho $d;\n}\nskjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);",
  "\t$primes = [];\n\tforeach ($lst as $value) {\n\t\tif (isPrime($value)) {\n\t\t\
    \t$primes[] = $value;\n\t\t}\n\t}\n\trsort($primes);\n\t$max = $primes[0];\n\t\
    $sum = 0;\n\twhile ($max > 0) {\n\t\t$sum += $max % 10;\n\t\t$max = (int) ($max\
    \ / 10);\n\t}\n\treturn $sum;\n}", "    $largest_prime = 0;\n    for ($i = 0;\
    \ $i < count($lst); $i++) {\n        $is_prime = true;\n        for ($j = 2; $j\
    \ < $lst[$i]; $j++) {\n            if ($lst[$i] % $j == 0) {\n               \
    \ $is_prime = false;\n                break;\n            }\n        }\n     \
    \   if ($is_prime) {\n            if ($lst[$i] > $largest_prime) {\n         \
    \       $largest_prime = $lst[$i];\n            }\n        }\n    }\n    $result\
    \ = 0;\n    while ($largest_prime > 0) {\n        $remainder = $largest_prime\
    \ % 10;\n        $result += $remainder;\n        $largest_prime = floor($largest_prime\
    \ / 10);\n    }\n    return $result;\n}\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);\n\
    echo skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]);\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]);\n\
    echo skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]);\necho skjkasdkd([0,81,12,3,1,21]);\n\
    echo skjkasdkd([0,8,1,2,1,7]);", "    $arr=[];\n    foreach($lst as $v){\n   \
    \     if(isPrime($v)){\n            $arr[]=$v;\n        }\n    }\n    $max=max($arr);\n\
    \    $max_arr=str_split($max);\n    return array_sum($max_arr);\n}\n", "$a = 0;\n\
    $b = 0;\nforeach ($lst as $val) {\nfor ($i = 1; $i <= $val; $i++) {\nif ($val\
    \ % $i == 0) {\n$b++;\n}\n}\nif ($b == 2) {\n$a = $val;\n}\n}\necho $a;\n$c =\
    \ explode('', $a);\n$d = array_sum($c);\necho $d;\n}", "    for ($i = 0; $i <\
    \ count($lst); $i++) {\n        $num1 = $lst[$i];\n        for ($j = $i + 1; $j\
    \ < count($lst); $j++) {\n            $num2 = $lst[$j];\n            if ($num1\
    \ > $num2) {\n                $lst[$i] = $num2;\n                $lst[$j] = $num1;\n\
    \                $num1 = $lst[$i];\n                $num2 = $lst[$j];\n      \
    \      }\n        }\n    }\n    $sko = 0;\n    $akka = 0;\n    for ($i = 0; $i\
    \ < count($lst); $i++) {\n        $sko = 0;\n        for ($j = 1; $j <= $lst[$i];\
    \ $j++) {\n            if ($lst[$i] % $j == 0) {\n                $sko += 1;\n\
    \            }\n        }\n        if ($sko == 2) {\n            for ($k = 0;\
    \ $k < strlen($lst[$i]); $k++) {\n                $akka += $lst[$i][$k];\n   \
    \         }\n            return $akka;\n        }\n    }\n}\n\necho skjkasdkd([0,81,12,3,1,21]);",
  "    $max = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ > $max) {\n            $max = $lst[$i];\n        }\n    }\n    $isPrime = true;\n\
    \    for ($i = 2; $i < $max; $i++) {\n        if ($max % $i == 0) {\n        \
    \    $isPrime = false;\n            break;\n        }\n    }\n    if ($isPrime)\
    \ {\n        $max_str = strval($max);\n        $sum = 0;\n        for ($i = 0;\
    \ $i < strlen($max_str); $i++) {\n            $sum += intval($max_str[$i]);\n\
    \        }\n        return $sum;\n    } else {\n        $max--;\n        return\
    \ skjkasdkd($lst);\n    }\n}", "$LargestPrime = 0;\nfor ($i=0; $i < count($lst);\
    \ $i++) { \n    if ($lst[$i] == 2 || $lst[$i] == 3) {\n        if ($lst[$i] >\
    \ $LargestPrime) {\n            $LargestPrime = $lst[$i];\n        }\n    } else\
    \ if($lst[$i] % 2 != 0 && $lst[$i] % 3 != 0) {\n        if ($lst[$i] > $LargestPrime)\
    \ {\n            $LargestPrime = $lst[$i];\n        }\n    }\n}\n$sum = 0;\nfor\
    \ ($i=0; $i < strlen($LargestPrime); $i++) { \n    $sum += $LargestPrime[$i];\n\
    }\necho $sum;\n}\nskjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);\n\
    skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]);\nskjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]);\n\
    skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]);\nskjkasdkd([0,81,12,3,1,21]);\n\
    skjkasdkd([0,8,1,2,1,7]);", "$maxp = 0;\nfor ($i=0; $i < count($lst); $i++) {\
    \ \n    $flag = 0;\n    for ($j=2; $j < $lst[$i]; $j++) { \n        if($lst[$i]\
    \ % $j == 0){\n            $flag = 1;\n            break;\n        }\n    }\n\
    \    if($flag == 0 && $lst[$i] != 1 && $lst[$i] > $maxp){\n        $maxp = $lst[$i];\n\
    \    }\n}\n    $sum = 0;\n    for ($i=0; $i < strlen((string)$maxp); $i++) { \n\
    \        $sum += $maxp[$i];\n    }\n    return $sum;\n}\nprint_r(skjkasdkd([0,81,12,3,1,21]));",
  "    $prime = 0;\n    foreach ($lst as $number) {\n        if (isPrime($number))\
    \ {\n            if ($number > $prime) {\n                $prime = $number;\n\
    \            }\n        }\n    }\n    if ($prime > 0) {\n        $count = 0;\n\
    \        while ($prime > 0) {\n            $count += $prime % 10;\n          \
    \  $prime = (int)($prime / 10);\n        }\n        return $count;\n    }\n  \
    \  return 0;\n}", "$nm = [];\nforeach ($lst as $l) {\n    $isPrime = true;\n \
    \   if ($l == 0) {\n        $isPrime = false;\n    } else {\n        for ($j =\
    \ 2; $j <= $l / 2; $j++) {\n            if ($l % $j == 0) {\n                $isPrime\
    \ = false;\n                break;\n            }\n        }\n    }\n    if ($isPrime)\
    \ {\n        $nm[] = $l;\n    }\n}\nsort($nm);\n$nm = array_slice($nm, -1, 1);\n\
    $sum = 0;\n$nm = $nm[0];\nwhile($nm > 0) {\n    $sum += $nm % 10;\n    $nm = floor($nm\
    \ / 10);\n}\nreturn $sum;\n}", "    $count = count($lst);\n    $prime = [];\n\
    \    $nonprime = [];\n    for ($i = 0; $i < $count; $i++) {\n        $divisor\
    \ = 1;\n        for ($j = 1; $j <= $lst[$i]; $j++) {\n            if ($lst[$i]\
    \ % $j == 0) {\n                $divisor++;\n            }\n        }\n      \
    \  if ($divisor == 2) {\n            $prime[] = $lst[$i];\n        } else {\n\
    \            $nonprime[] = $lst[$i];\n        }\n    }\n    $largest_prime = max($prime);\n\
    \    $digit = str_split($largest_prime);\n    $sum = array_sum($digit);\n    return\
    \ $sum;\n}\nprint_r(skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]));",
  "    $lst = array_unique($lst);\n    rsort($lst);\n    $primes = [];\n    foreach\
    \ ($lst as $value) {\n        $isPrime = true;\n        for ($i = 2; $i < $value;\
    \ $i++) {\n            if ($value % $i == 0) {\n                $isPrime = false;\n\
    \                break;\n            }\n        }\n        if ($isPrime) {\n \
    \           array_push($primes, $value);\n        }\n    }\n    sort($primes);\n\
    \    $arr = str_split($primes[0]);\n    $sum = 0;\n    foreach ($arr as $value)\
    \ {\n        $sum += $value;\n    }\n    return $sum;\n}", "$max = 0;\nforeach($lst\
    \ as $n)\n{\n    if($n > $max)\n    {\n        $max = $n;\n    }\n}\nwhile($max>1)\n\
    {\n    $n = 2;\n    while($max % $n != 0)\n    {\n        $n++;\n    }\n    if($n\
    \ == $max)\n    {\n        break;\n    }\n    $max /= $n;\n}\n$max = str_split($max);\n\
    $sum = 0;\nforeach($max as $n)\n{\n    $sum += $n;\n}\nreturn $sum;\n}", "   \
    \ $arr = [];\n    foreach ($lst as $key => $value) {\n        if ($value > 0)\
    \ {\n            $i = 2;\n            $j = 0;\n            for (; $i <= $value;\
    \ $i++) {\n                if ($value % $i == 0) {\n                    $j++;\n\
    \                }\n            }\n            if ($j == 1) {\n              \
    \  $arr[] = $value;\n            }\n        }\n    }\n    if (empty($arr)) {\n\
    \        return 0;\n    }\n    rsort($arr);\n    $res = 0;\n    $string = (string)$arr[0];\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        $res += (int)$string[$i];\n\
    \    }\n    return $res;\n}\n\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);",
  "    $prime = 0;\n    $sum = 0;\n    foreach ($lst as $value) {\n        if (gmp_prob_prime($value)\
    \ == 2) {\n            if ($value > $prime) {\n                $prime = $value;\n\
    \            }\n        }\n    }\n    $str = $prime . '';\n    for ($i = 0; $i\
    \ < strlen($str); $i++) {\n        $sum += $str[$i];\n    }\n    return $sum;\n\
    }", "$a=0;\nfor($i=0;$i<count($lst);$i++){\n    $a=max($a,$lst[$i]);\n}\n$b=2;\n\
    while($b<$a){\n    if($a%$b==0){\n        $a=$a/$b;\n    }\n    else{\n      \
    \  $b++;\n    }\n}\n$c=0;\nwhile($a>0){\n    $c=$c+$a%10;\n    $a=$a/10;\n}\n\
    echo $c;\n}\nskjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);",
  "    foreach($lst as $l) {\n        for($i=2; $i<$l; $i++) {\n            if($l%$i\
    \ === 0) {\n                $k = false;\n                break;\n            }\
    \ else {\n                $k = true;\n            }\n        }\n        if($k)\
    \ {\n            $arr[] = $l;\n        }\n    }\n    if(count($arr) === 0) {\n\
    \        return 0;\n    }\n    $max = max($arr);\n    $arr_num = str_split($max);\n\
    \    $arr_num_sum = array_sum($arr_num);\n    return $arr_num_sum;\n}\n\nprint_r(skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]));\n\
    print_r(skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]));\nprint_r(skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]));\n\
    print_r(skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]));\nprint_r(skjkasdkd([0,81,12,3,1,21]));\n\
    print_r(skjkasdkd([0,8,1,2,1,7]));", "    $primes = [];\n    foreach ($lst as\
    \ $n) {\n        if ($n === 0) continue;\n        if (isPrime($n)) {\n       \
    \     $primes[] = $n;\n        }\n    }\n    $biggest = max($primes);\n    $digits\
    \ = array_map('intval', str_split($biggest));\n    return array_sum($digits);\n\
    }", "$max = 0;\nforeach($lst as $value){\n    if($value > $max && isPrime($value)){\n\
    \        $max = $value;\n    }\n}\nreturn sumDigits($max);\n}", "    $filteredLst\
    \ = array_filter($lst, function($v) {\n        return $v > 1;\n    });\n    if(empty($filteredLst))\
    \ {\n        return 1;\n    }\n    $filteredLst = array_filter($filteredLst, function($v)\
    \ {\n        $maxPrime = intval(sqrt($v));\n        for($i = 2; $i <= $maxPrime;\
    \ $i++) {\n            if($v % $i == 0) {\n                return false;\n   \
    \         }\n        }\n        return true;\n    });\n    if(empty($filteredLst))\
    \ {\n        return 1;\n    }\n    $max = max($filteredLst);\n    $max = str_split($max);\n\
    \    return array_sum($max);\n}", "\t$lst = array_unique($lst);\n\t$max = 0;\n\
    \tforeach ($lst as $value) {\n\t\t$max = $value > $max ? $value : $max;\n\t}\n\
    \t$max = $max > min($lst) ? $max : min($lst);\n\tfor ($i = $max; $i > 0; $i--)\
    \ {\n\t\t$pr = primes($i);\n\t\tif (count($pr) > 0) {\n\t\t\treturn returnSum($pr);\n\
    \t\t}\n\t}\n}", "    if(empty($lst)) return 0;\n    $primes = [];\n    foreach($lst\
    \ as $item) {\n        if(isPrime($item)) {\n            $primes[] = $item;\n\
    \        }\n    }\n    $prime = max($primes);\n    $suma = str_split($prime);\n\
    \    return array_sum($suma);\n}\n", "    $l = max($lst);\n    $l = array_reduce($lst,\
    \ function($a, $b) { return $a > $b ? $a : $b; });\n    $p = [];\n    while ($l\
    \ > 1) {\n        $k = get_prime($l);\n        if ($k) {\n            $p[] = $k;\n\
    \            $l /= $k;\n        } else {\n            break;\n        }\n    }\n\
    \    $p = array_reduce($p, function($a, $b) { return $a * $b; });\n    return\
    \ array_sum(str_split($p));\n}", "    // First, we will get the largest prime\
    \ number.\n    $primeNumber = 0;\n    foreach ($lst as $key => $value) {\n   \
    \     if(isPrime($value)){\n            $primeNumber = $value;\n        }\n  \
    \  }\n    // Next, we will get the sum of its digits.\n    $sum = array_sum(str_split($primeNumber));\n\
    \    return $sum;\n}", "    $arr = [];\n    $max = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] == 2 || $lst[$i] == 3 || $lst[$i] == 5 || $lst[$i]\
    \ == 7) {\n            $arr[] = $lst[$i];\n        } else {\n            if ($lst[$i]\
    \ % 2 == 0 || $lst[$i] % 3 == 0 || $lst[$i] % 5 == 0 || $lst[$i] % 7 == 0) {\n\
    \                continue;\n            } else {\n                $arr[] = $lst[$i];\n\
    \            }\n        }\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n\
    \        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n   \
    \ }\n    return array_sum(str_split($max));\n}\necho skjkasdkd([0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) . \"<br>\";\necho\
    \ skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) . \"<br>\"\
    ;\necho skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3]) . \"<br>\";\necho skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83,\
    \ 0, 5, 6]) . \"<br>\";\necho skjkasdkd([0, 81, 12, 3, 1, 21]) . \"<br>\";\necho\
    \ skjkasdkd([0, 8, 1, 2, 1, 7]) . \"<br>\";", "    $n = max($lst);\n    $sum =\
    \ 0;\n    for ($i = $n; $i > 1; $i--) {\n        if (isPrime($i)) {\n        \
    \    $sum = digitSum($i);\n            break;\n        }\n    }\n    return $sum;\n\
    }\n", "    $primes = [];\n    for ($i = 0; $i < count($lst); $i++) {\n       \
    \ $isPrime = true;\n        for ($j = 2; $j < $lst[$i]; $j++) {\n            if\
    \ ($lst[$i] % $j == 0) {\n                $isPrime = false;\n                break;\n\
    \            }\n        }\n        if ($isPrime) {\n            $primes[] = $lst[$i];\n\
    \        }\n    }\n    $result = array_sum(str_split(max($primes)));\n    return\
    \ $result;\n}\nprint_r(skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3]));\nprint_r(skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1,\
    \ 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]));\nprint_r(skjkasdkd([1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]));\nprint_r(skjkasdkd([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]));\nprint_r(skjkasdkd([0, 81, 12, 3, 1,\
    \ 21]));\nprint_r(skjkasdkd([0, 8, 1, 2, 1, 7]));", "\t$largestPrime = 0;\n\t\
    foreach ($lst as $num) {\n\t\tif(isPrime($num)){\n\t\t\tif($num > $largestPrime){\n\
    \t\t\t\t$largestPrime = $num;\n\t\t\t}\n\t\t}\n\t}\n\t$sum = 0;\n\t$digits = str_split($largestPrime);\n\
    \tforeach ($digits as $digit) {\n\t\t$sum += $digit;\n\t}\n\treturn $sum;\n}\n",
  "  $b = max($lst);\n  for ($i = $b; $i > 0; $i--) {\n    if (isPrime($i)) {\n  \
    \    return array_sum(str_split((string)$i));\n    }\n  }\n}", "}\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);\n\
    echo \"<br>\";\necho skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]);\necho\
    \ \"<br>\";\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]);\n\
    echo \"<br>\";\necho skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]);\necho \"\
    <br>\";\necho skjkasdkd([0,81,12,3,1,21]);\necho \"<br>\";\necho skjkasdkd([0,8,1,2,1,7]);",
  "$prime='';\n$sum=0;\n$v=0;\n    foreach($lst as $n) {\n        if($n>1) {\n   \
    \         $i=2;\n            while($i<$n) {\n                if($n%$i==0) {\n\
    \                    $i++;\n                } else {\n                    $i=$n;\n\
    \                }\n            }\n            if($i==$n) {\n                $prime.=$n;\n\
    \            }\n        }\n    }\n    echo strlen($prime);\n    for($i=0;$i<strlen($prime);$i++)\
    \ {\n        $sum+=$prime[$i];\n    }\n    echo $sum;\n}\n$lst=[1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3];\n\
    echo skjkasdkd($lst);", "$primes = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997);\n$max = max($lst);",
  "    $max = 0;\n    foreach ($lst as $item) {\n        $max = max($max, $item);\n\
    \    }\n    $prime = [];\n    $prime[1] = 1;\n    for ($i = 2; $i <= $max; $i++)\
    \ {\n        if (!isset($prime[$i])) {\n            for ($j = $i * 2; $j <= $max;\
    \ $j += $i) {\n                $prime[$j] = 1;\n            }\n        }\n   \
    \ }\n    $l = 0;\n    foreach ($lst as $i) {\n        if (!isset($prime[$i]))\
    \ {\n            $l = $i;\n        }\n    }\n    $arr = str_split($l);\n    return\
    \ array_sum($arr);\n}\n", "    $res = array_filter($lst, function($var) {\n  \
    \    return $var > 9;\n    });\n    if (count($res) < 1) {\n      return (array_sum($lst)\
    \ > 9) ? skjkasdkd(str_split(array_sum($lst))) : array_sum($lst);\n    }\n   \
    \ $primes = array_map(function($x) {\n      for ($i = 2; $i < $x; $i++) {\n  \
    \      if ($x % $i == 0) {\n          return false;\n        }\n      }\n    \
    \  return $x;\n    }, $res);\n    $res = array_filter($primes, function($x) {\n\
    \      return $x != false;\n    });\n    $largestPrime = max($res);\n    return\
    \ skjkasdkd(str_split($largestPrime));\n}", "    foreach($lst as $k=>$v){\n  \
    \      if($v < 2)\n            unset($lst[$k]);\n    }\n    $s = 2;\n    $r =\
    \ 0;\n    $r2 = 0;\n    while($s <= max($lst)){\n        foreach($lst as $k=>$v){\n\
    \            if($v%$s == 0){\n                unset($lst[$k]);\n            }\n\
    \        }\n        $s++;\n    }\n    $lst = array_flip($lst);\n    foreach($lst\
    \ as $k=>$v){\n        $lst[$k] = str_split($k);\n        foreach($lst[$k] as\
    \ $k2=>$v2){\n            $r2 += $v2;\n        }\n        if($r2 > $r)\n     \
    \       $r = $r2;\n        $r2 = 0;\n    }\n    return $r;\n}\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    echo skjkasdkd($lst) . \"\\n\";\n$lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1];\n\
    echo skjkasdkd($lst) . \"\\n\";\n$lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3];\n\
    echo skjkasdkd($lst) . \"\\n\";\n$lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6];\n\
    echo skjkasdkd($lst) . \"\\n\";\n$lst = [0,81,12,3,1,21];\necho skjkasdkd($lst)\
    \ . \"\\n\";\n$lst = [0,8,1,2,1", "    $max = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] > $max) {\n            $max = $lst[$i];\n    \
    \    }\n    }\n    $k = 0;\n    $arr = array();\n    for ($i = 2; $i <= $max;\
    \ $i++) {\n        $k = 0;\n        for ($j = 2; $j < $i; $j++) {\n          \
    \  if ($i % $j == 0) {\n                $k++;\n            }\n        }\n    \
    \    if ($k == 0) {\n            $arr[] = $i;\n        }\n    }\n    $k = 0;\n\
    \    $max = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $k = 0;\n\
    \        for ($j = 0; $j < count($lst); $j++) {\n            if ($arr[$i] == $lst[$j])\
    \ {\n                $k++;\n            }\n        }\n        if ($k > 0) {\n\
    \            if ($arr[$i] > $max) {\n                $max = $arr[$i];\n      \
    \      }\n        }\n    }\n    $res = 0;\n    for ($i = 0; $i < strlen($max);\
    \ $i++) {\n        $res += (int)$max[$i];\n    }\n    return $res;\n}\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);\n\
    echo '<br>';\necho skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]);\necho\
    \ '<br>';\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]);\n\
    echo '<br>';\necho sk", "// $lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    $lst = [0,81,12,3,1,21];\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    $r = false;\n\nfor ($i=0; $i < count($lst); $i++) {\n  $prime = true;\n  if($lst[$i]\
    \ > 1){\n    $c = 2;\n    while ($c < $lst[$i]) {\n      if($lst[$i] % $c == 0){\n\
    \        $prime = false;\n        break;\n      }\n      $c++;\n    }\n    if($prime\
    \ == true){\n      $r = $lst[$i];\n    }\n  }\n\n}\necho $r;\n$r1 = 0;\nwhile\
    \ ($r >= 1) {\n  $r1 += $r % 10;\n  $r = (int)($r / 10);\n}\necho $r1;\n}\nskjkasdkd();\n\
    \ ?>", "    rsort($lst);\n    $all_number = array_merge($lst);\n    foreach ($all_number\
    \ as $num) {\n        if (is_prime($num)) {\n            $prime_number = $num;\n\
    \            break;\n        }\n    }\n    $result = 0;\n    foreach (str_split($prime_number)\
    \ as $sum) {\n        $result += $sum;\n    }\n    return $result;\n}\n", "  \
    \  $prime = 0;\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (isPrime($num))\
    \ {\n            if ($num > $prime) {\n                $prime = $num;\n      \
    \      }\n        }\n    }\n    $digits = str_split($prime);\n    foreach ($digits\
    \ as $dig) {\n        $sum += $dig;\n    }\n    return $sum;\n}\n", "\t$prime\
    \ = [];\n\tforeach ($lst as $key => $value) {\n\t\tif ($value != 1) {\n\t\t\t\
    $index = 2;\n\t\t\twhile ($index < $value) {\n\t\t\t\tif ($value % $index == 0)\
    \ {\n\t\t\t\t\t$prime[$value] = $value;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\
    $index++;\n\t\t\t}\n\t\t}\n\t}\n\tif (count($prime) == 0) {\n\t\treturn \"\u041E\
    \u0448\u0438\u0431\u043A\u0430, \u0432 \u0441\u043F\u0438\u0441\u043A\u0435 \u043D\
    \u0435\u0442 \u043F\u0440\u043E\u0441\u0442\u044B\u0445 \u0447\u0438\u0441\u0435\
    \u043B\";\n\t}\n\t$max = 0;\n\tforeach ($prime as $key => $value) {\n\t\tif ($value\
    \ > $max) {\n\t\t\t$max = $value;\n\t\t}\n\t}\n\t$result = 0;\n\twhile ($max >\
    \ 0) {\n\t\t$result += $max % 10;\n\t\t$max = floor($max / 10);\n\t}\n\treturn\
    \ $result;\n}", "    $primes = [];\n    foreach ($lst as $n) {\n        if (isPrime($n))\
    \ $primes[] = $n;\n    }\n    $num = max($primes);\n    $a = str_split($num);\n\
    \    return array_sum($a);\n}", "    return array_sum(str_split(max(array_filter($lst,\
    \ function($x) {\n        return checkPrime($x);\n    }))));\n}\n", "    $p=[];\n\
    \    foreach ($lst as $value) {\n        if($value>1){\n            $count=0;\n\
    \            for($i=2;$i<=$value;$i++){\n                if($value%$i==0){\n \
    \                   $count++;\n                }\n            }\n            if($count==1){\n\
    \                $p[]=$value;\n            }\n        }\n    }\n    $s=max($p);\n\
    \    $sum=0;\n    while($s>0){\n        $sum+=$s%10;\n        $s=(int)($s/10);\n\
    \    }\n    return $sum;\n}\n", "    $primes = [];\n    foreach ($lst as $num)\
    \ {\n        if ($num == 0) {\n            continue;\n        }\n        if (isPrime($num))\
    \ {\n            $primes[] = $num;\n        }\n    }\n    sort($primes);\n   \
    \ $maxPrime = array_pop($primes);\n    if ($maxPrime === null) {\n        return\
    \ 0;\n    }\n    $result = 0;\n    while ($maxPrime > 0) {\n        $result +=\
    \ $maxPrime % 10;\n        $maxPrime = floor($maxPrime / 10);\n    }\n    return\
    \ $result;\n}\n", "$sum = 0;\n$max = 0;\n$num = 0;\n$count = 0;\n    for ($i=0;\
    \ $i < count($lst); $i++) { \n        if($lst[$i] >= 0 && $lst[$i] != 1){\n  \
    \          for ($a=1; $a <= $lst[$i]; $a++) { \n                if($lst[$i] %\
    \ $a == 0){\n                    $count++;\n                }\n            }\n\
    \        }\n        if($count == 2){\n            if($lst[$i] > $max){\n     \
    \           $max = $lst[$i];\n            }\n        }\n        $count = 0;\n\
    \    }\n    $number = array_map('intval', str_split($max));\n    for ($i=0; $i\
    \ < count($number); $i++) { \n        $sum += $number[$i];\n    }\n    return\
    \ $sum;\n}\n\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);",
  "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum += $lst[$i];\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] === $sum) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nprint_r(skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2,\
    \ 32, 324, 4, 3]));\nprint_r(skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1]));\nprint_r(skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3]));\nprint_r(skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]));\nprint_r(skjkasdkd([0, 81, 12, 3, 1, 21]));\nprint_r(skjkasdkd([0,\
    \ 8, 1, 2, 1, 7]));", "    $numbers = [];\n    $result = 0;\n    $largest = 0;\n\
    \    foreach ($lst as $v) {\n        $divider = 2;\n        while ($v > 1) {\n\
    \            if ($v % $divider) {\n                $divider++;\n            }\
    \ else {\n                $numbers[$v] = $v;\n                $v /= $divider;\n\
    \            }\n        }\n    }\n    foreach ($numbers as $v) {\n        if ($v\
    \ > $largest) {\n            $largest = $v;\n        }\n    }\n    while ($largest\
    \ > 0) {\n        $result += $largest % 10;\n        $largest = floor($largest\
    \ / 10);\n    }\n    return $result;\n}\n\nprint_r(skjkasdkd([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]));\nprint_r(skjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]));\nprint_r(skjkasdkd([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]));\nprint_r(skjkasdkd([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]));\nprint_r(skjkasdkd([0, 81,\
    \ 12, 3, 1, 21]));\nprint_r(skjkasdkd([0, 8, 1, 2, 1, 7]));", "    foreach($lst\
    \ as $key => $value) {\n        if($value % 2 == 0) {\n            unset($lst[$key]);\n\
    \        }\n    }\n    return sum($lst);\n}", "  $primeNumbers = [];\n  $primeNumbersLargest\
    \ = 0;\n  foreach ($lst as $item) {\n    if (isPrime($item)) {\n      $primeNumbers[]\
    \ = $item;\n    }\n  }\n  if (empty($primeNumbers)) {\n    return 0;\n  }\n  foreach\
    \ ($primeNumbers as $item) {\n    if ($item > $primeNumbersLargest) {\n      $primeNumbersLargest\
    \ = $item;\n    }\n  }\n  return array_sum(str_split($primeNumbersLargest));\n\
    }\n", "    $large = 0;\n    foreach ($lst as $a) {\n        if ($a > $large) {\n\
    \            $large = $a;\n        }\n    }\n    echo $large;\n    $prime = 0;\n\
    \    for ($i = 1; $i <= $large; $i++) {\n        $ct = 0;\n        for ($j = 1;\
    \ $j <= $i; $j++) {\n            if ($i % $j == 0) {\n                $ct++;\n\
    \            }\n        }\n        if ($ct == 2) {\n            $prime = $i;\n\
    \        }\n    }\n    echo $prime;\n    $s = 0;\n    while ($prime > 0) {\n \
    \       $s += $prime % 10;\n        $prime = $prime / 10;\n    }\n    return $s;\n\
    }\nprint_r(skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2,\
    \ 32, 324, 4, 3]));", "    foreach($lst as $element) {\n        $prime = true;\n\
    \        for($i = 2; $i < $element; $i++) {\n            if($element % $i == 0)\
    \ {\n                $prime = false;\n                break;\n            }\n\
    \        }\n        if($prime) {\n            $sum = array_sum(str_split($element));\n\
    \            return $sum;\n        }\n    }\n}", "    $j = 0;\n    $i = 0;\n \
    \   $z = 0;\n    for ($z = count($lst); $z > $i; $z--) {\n        if (is_prime($lst[$z\
    \ - 1])) {\n            break;\n        }\n    }\n    $j = $lst[$z - 1];\n   \
    \ $v = 0;\n    while ($j > 1) {\n        $v += $j % 10;\n        $j = floor($j\
    \ / 10);\n    }\n    return $v;\n}", "    $p = array_filter($lst, function($v)\
    \ { return $v > 1; });\n    $primes = array_filter($p, function($v) {\n      \
    \  for ($x = 2; $x <= sqrt($v); $x++) {\n            if ($v % $x == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\
    \    });\n    $big_prime = max($primes);\n    $b_p_str = strval($big_prime);\n\
    \    $result = 0;\n    for ($i = 0; $i < strlen($b_p_str); $i++) {\n        $result\
    \ += intval($b_p_str[$i]);\n    }\n    return $result;\n}\n\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    echo skjkasdkd($lst);", "$a = 0;\n$l = count($lst);\n    while($a < $l){\n\t\t\
    $a++;\n\t\t$lst[$a] =$a;\n\t}\n\t$a = 0;\n\twhile($a < $l){\n\t\t$b = 0;\n\t\t\
    $l = count($lst);\n\t\twhile($b < $l){\n\t\t\t$b++;\n\t\t\tif(($lst[$a] != $lst[$b])\
    \ && ($lst[$a] % $lst[$b] == 0)){\n\t\t\t\tarray_splice($lst, $a, 1);\n\t\t\t\t\
    $a--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t$a++;\n\t}\n\t$a = 0;\n\t$b = 0;\n\t\
    while($a < $l){\n\t\t$a++;\n\t\t$b += $lst[$a];\n\t}\n\treturn $b;\n}\n$lst =\
    \ [1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1];\necho skjkasdkd($lst);",
  "    $b = -1;\n    foreach ($lst as $num) {\n        $prime = true;\n        for\
    \ ($i = 2; $i < $num; $i++) {\n            if ($num % $i == 0) {\n           \
    \     $prime = false;\n                break;\n            }\n        }\n    \
    \    if ($prime && $num > $b) {\n            $b = $num;\n        }\n    }\n  \
    \  $sum = 0;\n    for ($i = 0; $i < strlen($b); $i++) {\n        $sum += $b[$i];\n\
    \    }\n    return $sum;\n}", "    $largestPrime = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        $isPrime = true;\n        for ($j = 2; $j < $lst[$i]; $j++)\
    \ {\n            if ($lst[$i] % $j == 0) {\n                $isPrime = false;\n\
    \                break;\n            }\n        }\n        if ($isPrime) {\n \
    \           if ($lst[$i] > $largestPrime) {\n                $largestPrime = $lst[$i];\n\
    \            }\n        }\n    }\n    $digits = [];\n    while ($largestPrime\
    \ > 0) {\n        $digit = $largestPrime % 10;\n        array_push($digits, $digit);\n\
    \        $largestPrime = (int)($largestPrime / 10);\n    }\n    return array_sum($digits);\n\
    }\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);", "\t\
    $d = 0;\n\tfor ($i = 0; $i < count($lst); $i++) {\n\t\tif (isPrime($lst[$i]))\
    \ {\n\t\t\t$a = $lst[$i];\n\t\t\twhile ($a > 0) {\n\t\t\t\t$d += $a % 10;\n\t\t\
    \t\t$a = (int)($a / 10);\n\t\t\t}\n\t\t}\n\t}\n\treturn $d;\n}", "\t$max = max($lst);\n\
    \t$p = [];\n\tfor ($i=1; $i <= $max; $i++) { \n\t\t$count = 0;\n\t\tfor ($j=1;\
    \ $j <= $i; $j++) { \n\t\t\tif ($i % $j == 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\
    \t}\n\t\tif ($count <= 2) {\n\t\t\t$p[] = $i;\n\t\t}\n\t}\n\t$max_p = max($p);\n\
    \t$sum = 0;\n\twhile($max_p > 0) {\n\t\t$sum += $max_p % 10;\n\t\t$max_p = floor($max_p\
    \ / 10);\n\t}\n\treturn $sum;\n}\n\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]);",
  "    $largestPrime = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] % 2 !== 0) {\n            if ($largestPrime < $lst[$i]) {\n      \
    \          $isPrime = true;\n                for ($j = 3; $j < $lst[$i]; $j +=\
    \ 2) {\n                    if ($lst[$i] % $j === 0) {\n                     \
    \   $isPrime = false;\n                        break;\n                    }\n\
    \                }\n                if ($isPrime) {\n                    $largestPrime\
    \ = $lst[$i];\n                }\n            }\n        }\n    }\n    $sum =\
    \ 0;\n    while ($largestPrime) {\n        $sum += $largestPrime % 10;\n     \
    \   $largestPrime = (int)($largestPrime / 10);\n    }\n    return $sum;\n}\necho\
    \ skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);", "    $prime\
    \ = [];\n    $digits = [];\n    $sum = 0;\n    foreach ($lst as $key) {\n    \
    \    if ($key > 1) {\n            $i = 2;\n            while ($i <= $key) {\n\
    \                if ($key % $i == 0) {\n                    if ($i == $key) {\n\
    \                        $prime[] = $key;\n                    }\n           \
    \         break;\n                }\n                $i++;\n            }\n  \
    \      }\n    }\n    if (count($prime) == 0) {\n        return 0;\n    }\n   \
    \ $max = max($prime);\n    for ($i = 0; $i < strlen($max); $i++) {\n        $digits[]\
    \ = $max[$i];\n    }\n    foreach ($digits as $key) {\n        $sum += $key;\n\
    \    }\n    return $sum;\n}\necho \"<pre>\";\nprint_r(skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]));\n\
    print_r(skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]));\nprint_r(skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]));\n\
    print_r(skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]));\nprint_r(skjkasdkd([0,81,12,3,1,21]));\n\
    print_r(skjkasdkd([0,8,1,2,1,7]));\nprint_r(skjkasdkd([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23", " $sum = 0;\n $res\
    \ = 0;\nfor ($i=0; $i < count($lst); $i++) { \n\tif($lst[$i] > $res){\n\t\t$res\
    \ = $lst[$i];\n\t}\n}\n\t\nfor ($i=0; $i < strlen($res); $i++) { \n\t$sum += $res[$i];\n\
    }\nreturn $sum;\n}\nprint_r(skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]));\n\
    echo \"<br>\";\nprint_r(skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]));\n\
    echo \"<br>\";\nprint_r(skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]));\n\
    echo \"<br>\";\nprint_r(skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]));\necho\
    \ \"<br>\";\nprint_r(skjkasdkd([0,81,12,3,1,21]));\necho \"<br>\";\nprint_r(skjkasdkd([0,8,1,2,1,7]));\n\
    echo \"<br>\";\n", "$prime = [];\nforeach ($lst as $key => $value) {\n    if ($value\
    \ > 1) {\n        $cekPrima = true;\n        for ($i=2; $i < $value; $i++) { \n\
    \            if ($value % $i == 0) {\n                $cekPrima = false;\n   \
    \             break;\n            }\n        }\n        if ($cekPrima) {\n   \
    \         $prime[] = $value;\n        }\n    }\n}\n$hasil = max($prime);\n$hasil2\
    \ = str_split($hasil);\n$total = 0;\nforeach ($hasil2 as $key => $value) {\n \
    \   $total += $value;\n}\nreturn $total;\n}\n\nprint_r(skjkasdkd([0,8,1,2,1,7]));",
  "    $sum = 0;\n    $number = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n \
    \       if (isPrime($lst[$i])) {\n            if ($lst[$i] > $number) {\n    \
    \            $number = $lst[$i];\n            }\n        }\n    }\n    $number\
    \ = str_split($number);\n    for ($i = 0; $i < count($number); $i++) {\n     \
    \   $sum += $number[$i];\n    }\n    return $sum;\n}", "    $number = max($lst);\n\
    \    $count = 0;\n    for ($i = 1; $i <= $number; $i++) {\n        if ($number\
    \ % $i == 0) {\n            $count++;\n        }\n    }\n    if ($count == 2)\
    \ {\n        $result = 0;\n        while ($number > 0) {\n            $result\
    \ += $number % 10;\n            $number = (int)($number / 10);\n        }\n  \
    \      return $result;\n    } else {\n        $lst = array_diff($lst, [$number]);\n\
    \        return skjkasdkd($lst);\n    }\n}\necho skjkasdkd([0, 8, 1, 2, 1, 7]);",
  "    $lst1 = array_diff($lst, [0]);\n    $primes = array_filter($lst1, 'is_prime');\n\
    \    rsort($primes);\n    $max = $primes[0];\n    echo \"$max<br>\";\n    $max2\
    \ = str_split($max);\n    $result = array_sum($max2);\n    return $result;\n}",
  "    $maxLst = max($lst);\n    $i = 0;\n    $lstPrime = [];\n    $k = 1;\n    for\
    \ ($i = 0; $i < $maxLst; $i++) {\n        $isPrime = true;\n        for ($j =\
    \ 2; $j < $i; $j++) {\n            if ($i % $j == 0) {\n                $isPrime\
    \ = false;\n                break;\n            }\n        }\n        if ($isPrime\
    \ && $i > 1) {\n            $lstPrime[$k] = $i;\n            $k++;\n        }\n\
    \    }\n    $res = 0;\n    $maxPrime = 0;\n    foreach ($lst as $value) {\n  \
    \      if (in_array($value, $lstPrime)) {\n            if ($value > $maxPrime)\
    \ {\n                $maxPrime = $value;\n            }\n        }\n    }\n  \
    \  $arr = str_split($maxPrime);\n    foreach ($arr as $val) {\n        $res +=\
    \ $val;\n    }\n    return $res;\n}", "    $largest = 0;\n    foreach ($lst as\
    \ $num) {\n        $largest = $num > $largest ? $num : $largest;\n    }\n    for\
    \ ($i = $largest; $i > 1; $i--) {\n        $isPrime = true;\n        for ($j =\
    \ 2; $j < $i; $j++) {\n            if ($i % $j == 0) {\n                $isPrime\
    \ = false;\n                break;\n            }\n        }\n        if ($isPrime)\
    \ {\n            $largest = $i;\n            break;\n        }\n    }\n    $sum\
    \ = 0;\n    while ($largest > 0) {\n        $sum += $largest % 10;\n        $largest\
    \ = floor($largest / 10);\n    }\n    return $sum;\n}\n\necho skjkasdkd([0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) . '<br/>';\n\
    echo skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) . '<br/>';\n\
    echo skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9,\
    \ 3]) . '<br/>';\necho skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0,\
    \ 5, 6]) . '<br/>';\necho skjkasdkd([0, 81, 12, 3, 1, 21]) . '<br/>';\necho skjkasdkd([0,\
    \ 8, 1, 2, 1, 7]) . '<br/>';", "  $list = [];\n  foreach ($lst as $item) {\n \
    \   $list[] = $item;\n  }\n  $list = array_unique($list);\n  $primeNum = [];\n\
    \  foreach ($list as $item) {\n    if ($item > 0) {\n      $prime = true;\n  \
    \    for ($i = 2; $i < $item; $i++) {\n        if ($item % $i == 0) {\n      \
    \    $prime = false;\n          break;\n        }\n      }\n      if ($prime)\
    \ {\n        $primeNum[] = $item;\n      }\n    }\n  }\n  $primeNum = max($primeNum);\n\
    \  $result = 0;\n  while ($primeNum > 0) {\n    $result += $primeNum % 10;\n \
    \   $primeNum = floor($primeNum / 10);\n  }\n  return $result;\n}\n\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);\n\
    echo \"<br>\";\necho skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]);\necho\
    \ \"<br>\";\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]);\n\
    echo \"<br>\";\necho skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]);\necho \"\
    <br>\";\necho skjkasdkd([0,81,12,3,1,21]);\necho \"<br>\";\necho skjkasdkd([0,8,1,2,1,7]);\n",
  "    if(in_array(0, $lst)) {\n        unset($lst[array_search(0, $lst)]);\n    }\n\
    \    $primeArr = [];\n    for($i = 0; $i < count($lst); $i++) {\n        $flag\
    \ = 0;\n        if($lst[$i] <= 1) {\n            continue;\n        }\n      \
    \  for($j = 2; $j <= $lst[$i]/2; $j++) {\n            if($lst[$i] % $j == 0) {\n\
    \                $flag = 1;\n                break;\n            }\n        }\n\
    \        if($flag == 0) {\n            $primeArr[] = $lst[$i];\n        }\n  \
    \  }\n    $biggestPrime = max($primeArr);\n    $sum = 0;\n    for($k = 0; $k <\
    \ strlen($biggestPrime); $k++) {\n        $sum += $biggestPrime[$k];\n    }\n\
    \    return $sum;\n}\n$lst = [0,81,12,3,1,21];\necho skjkasdkd($lst);", "// \t\
    $lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1];\n\t$lst = array_unique($lst);\n\
    \trsort($lst);\n\tforeach ($lst as $key => $val) {\n\t\tif ($val != 1) {\n\t\t\
    \t$op = true;\n\t\t\tfor ($i=2; $i < $val; $i++) { \n\t\t\t\tif ($val % $i ==\
    \ 0) {\n\t\t\t\t\t$op = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif\
    \ ($op) {\n\t\t\t\t$str = (string)$val;\n\t\t\t\t$sum = 0;\n\t\t\t\tfor ($i=0;\
    \ $i < strlen($str); $i++) { \n\t\t\t\t\t$sum += (int)$str[$i];\n\t\t\t\t}\n\t\
    \t\t\treturn $sum;\n\t\t\t}\n\t\t}\n\t}\n}\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);",
  "    $primes = [];\n    for ($i = 2; $i < max($lst); $i++) {\n        if (isPrime($i))\
    \ $primes[] = $i;\n    }\n    $max = 0;\n    foreach ($lst as $item) {\n     \
    \   if (in_array($item, $primes) && $item > $max) $max = $item;\n    }\n    return\
    \ array_sum(str_split($max));\n}", "    $biggestPrime = 0;\n    $stringPrime;\n\
    \    $sumOfDigits;\n    $currentValue;\n    foreach ($lst as $key => $value) {\n\
    \        if ($value == 0) {\n            $currentValue = 1;\n        } else {\n\
    \            $currentValue = $value;\n        }\n        if ($currentValue ==\
    \ 1) {\n            continue;\n        }\n        for ($i=2; $i < $currentValue;\
    \ $i++) {\n            if ($currentValue % $i == 0) {\n                continue\
    \ 2;\n            }\n        }\n        if ($currentValue > $biggestPrime) {\n\
    \            $biggestPrime = $currentValue;\n        }\n    }\n    $stringPrime\
    \ = (string)$biggestPrime;\n    $sumOfDigits = 0;\n    for ($i=0; $i < strlen($stringPrime);\
    \ $i++) {\n        $sumOfDigits += $stringPrime[$i];\n    }\n    return $sumOfDigits;\n\
    }\n\n$skjkasdkd = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\nvar_dump(skjkasdkd($skjkasdkd));",
  "    $max = 0;\n    foreach ($lst as $l) {\n        $max = max($max, $l);\n    }\n\
    \    while ($max > 1) {\n        $flag = 0;\n        for ($i = 2; $i <= $max /\
    \ 2; $i++) {\n            if ($max % $i == 0) {\n                $flag = 1;\n\
    \                break;\n            }\n        }\n        if ($flag == 0) {\n\
    \            break;\n        }\n        $max--;\n    }\n    $result = 0;\n   \
    \ while ($max > 0) {\n        $result += $max % 10;\n        $max = floor($max\
    \ / 10);\n    }\n    return $result;\n}\n\n$arr = [0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3];\necho skjkasdkd($arr);", "\t\
    $arr = [];\n\t$arr1 = [];\n\tforeach ($lst as $value) {\n\t\tif (is_prime($value))\
    \ {\n\t\t\t$arr[] = $value;\n\t\t}\n\t}\n\t$max = max($arr);\n\t$arr1 = str_split($max);\n\
    \t$sum = array_sum($arr1);\n\treturn $sum;\n}", "    $values = array_unique($lst);\n\
    \    $largestPrimeValue = 0;\n    foreach ($values as $value) {\n        $prime\
    \ = true;\n        if ($value < 2) {\n            $prime = false;\n        }\n\
    \        if ($value != 2 && $value % 2 == 0) {\n            $prime = false;\n\
    \        }\n        if ($value != 3 && $value % 3 == 0) {\n            $prime\
    \ = false;\n        }\n        if ($value != 5 && $value % 5 == 0) {\n       \
    \     $prime = false;\n        }\n        if ($value != 7 && $value % 7 == 0)\
    \ {\n            $prime = false;\n        }\n        if ($prime) {\n         \
    \   if ($value > $largestPrimeValue) {\n                $largestPrimeValue = $value;\n\
    \            }\n        }\n    }\n    $sum = 0;\n    $string = (string)$largestPrimeValue;\n\
    \    $arr = str_split($string);\n    foreach ($arr as $char) {\n        $sum +=\
    \ $char;\n    }\n    return $sum;\n}\n", "    // to find the largest prime value\n\
    \    for ($i = count($lst) - 1; $i >= 0; $i--) {\n        if ($lst[$i] % $lst[$i]\
    \ === 0 && $lst[$i] % 1 === 0) {\n            $last_prime = $lst[$i];\n      \
    \      $break;\n        }\n    }\n    // to find the sum of its digits\n    $number\
    \ = $last_prime;\n    while ($number > 1) {\n        $digit = $number % 10;\n\
    \        $sum = $sum + $digit;\n        $number = $number / 10;\n    }\n    return\
    \ $sum;\n}\n\n$sum = skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]);\necho $sum;", "    $largest = 0;\n    foreach ($lst\
    \ as $number) {\n        if ($number > $largest && isPrime($number)) {\n     \
    \       $largest = $number;\n        }\n    }\n    if ($largest == 0) {\n    \
    \    return 0;\n    }\n    $sum = 0;\n    $s = $largest . \"\";\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        $sum += $s[$i];\n    }\n    return $sum;\n\
    }", "    $x = [];\n    foreach($lst as $l)\n        if(isPrime($l))\n        \
    \    $x[] = $l;\n    if(count($x) == 0)\n        return 0;\n    $m = max($x);\n\
    \    $s = 0;\n    for($i = 0; $i < strlen($m); $i++)\n        $s += (int)$m[$i];\n\
    \    return $s;\n}\n", "\t$findPrime = array_filter($lst, function($v){\n\t\t\
    for($i = 2; $i < $v; $i++){\n\t\t\tif($v % $i == 0) return false;\n\t\t}\n\t\t\
    return true;\n\t});\n\t$max = max($findPrime);\n\t$sum = array_sum(str_split($max));\n\
    \treturn $sum;\n}\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);",
  "    $lst = array_unique($lst);\n    rsort($lst);\n    $lst = array_values($lst);\n\
    \    $total = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (isPrime($lst[$i]))\
    \ {\n            $total = ($lst[$i] + $total);\n        }\n    }\n    if ($total\
    \ == 0) {\n        return false;\n    }\n    $total = str_split($total);\n   \
    \ $total = array_sum($total);\n    return $total;\n}\n", "    $numArr = $lst;\n\
    \    $num = max($numArr);\n    if ($num <= 1) {\n        return false;\n    }\n\
    \    if ($num == 2) {\n        return true;\n    }\n    if ($num % 2 == 0) {\n\
    \        return false;\n    }\n    $possibleDivisor = 3;\n    while ($possibleDivisor\
    \ < floor(sqrt($num)) + 1) {\n        if ($num % $possibleDivisor == 0) {\n  \
    \          return false;\n        }\n        $possibleDivisor += 2;\n    }\n \
    \   return true;\n}\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    $numArr = $lst;\n$num = max($numArr);\nwhile (skjkasdkd($num) == false) {\n  \
    \  array_pop($numArr);\n    $num = max($numArr);\n}\n$numArr = str_split($num);\n\
    $num = array_sum($numArr);\necho $num;", "    $arr = [];\n    $i = 1;\n    foreach\
    \ ($lst as $l) {\n        $arr[$i] = [];\n        for ($j = 1; $j <= $l; $j++)\
    \ {\n            if ($l % $j == 0) {\n                $arr[$i][] = $j;\n     \
    \       }\n        }\n        $i++;\n    }\n    $prim = [];\n    foreach ($arr\
    \ as $a) {\n        if (count($a) == 2) {\n            $prim[] = $a[1];\n    \
    \    }\n    }\n    $sum = 0;\n    if (count($prim) == 0) {\n        return 0;\n\
    \    }\n    for ($i = 0; $i < strlen(max($prim)); $i++) {\n        $sum += max($prim)[$i];\n\
    \    }\n    return $sum;\n}", "  $prime = 0;\n  foreach ($lst as $v) {\n    if\
    \ (isPrime($v) && $v > $prime) {\n      $prime = $v;\n    }\n  }\n  $res = 0;\n\
    \  while ($prime) {\n    $res += $prime % 10;\n    $prime = intdiv($prime, 10);\n\
    \  }\n  return $res;\n}", "    $nums = array_filter($lst, function($el) { return\
    \ $el > 1; });\n    $primes = getPrimesLessThan($nums);\n    return array_sum(str_split(max($primes)));\n\
    }", "    $r=[];\n    foreach($lst as $v){\n        $d=decbin($v);\n        $z=0;\n\
    \        for($i=1;$i<strlen($d);$i++)\n            if($d[$i]==1)$z++;\n      \
    \  if($z==1)$r[]=$v;\n    }\n    $p=max($r);\n    $s=0;\n    for($i=0;$i<strlen($p);$i++)\n\
    \        $s+=$p[$i];\n    return $s;\n}", "    $sum = 0;\n    $primes = array_filter($lst,\
    \ 'is_prime');\n    $largest = max($primes);\n    $num = $largest;\n    while\
    \ ($num != 0) {\n        $sum += $num % 10;\n        $num = floor($num / 10);\n\
    \    }\n    return $sum;\n}", "\t$largePrime = 0;\n\tforeach ($lst as $number)\
    \ {\n\t\t$isPrime = true;\n\t\tif ($number > 1) {\n\t\t\tfor ($i = 2; $i < $number;\
    \ $i++) {\n\t\t\t\tif ($number % $i == 0) {\n\t\t\t\t\t$isPrime = false;\n\t\t\
    \t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($isPrime) {\n\t\t\t\tif ($number >\
    \ $largePrime) {\n\t\t\t\t\t$largePrime = $number;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\
    \t}\n\t$sum = 0;\n\twhile ($largePrime > 0) {\n\t\t$sum += $largePrime % 10;\n\
    \t\t$largePrime = intval($largePrime / 10);\n\t}\n\treturn $sum;\n}\necho skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]);\necho\
    \ skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]);\necho\
    \ skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]);\n\
    echo skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]);\necho skjkasdkd([0,\
    \ 81, 12, 3, 1, 21]);\necho skjkasdkd([0, 8, 1, 2, 1, 7]);", "    $result = 0;\n\
    \    $max = 0;\n    $prime_mul_sum = 0;\n    for ($i = 0; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] >= $max) {\n            $max = $lst[$i];\n        }\n\
    \    }\n    for ($i = 2; $i <= $max; $i++) {\n        $prime = false;\n      \
    \  for ($j = 2; $j < $i; $j++) {\n            if ($i % $j === 0) {\n         \
    \       $prime = false;\n                break;\n            } else {\n      \
    \          $prime = true;\n            }\n        }\n        if ($prime === true)\
    \ {\n            $prime_mul_sum += $i;\n        }\n    }\n    while ($prime_mul_sum\
    \ > 0) {\n        $result += $prime_mul_sum % 10;\n        $prime_mul_sum = (int)($prime_mul_sum\
    \ / 10);\n    }\n    return $result;\n}\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    echo skjkasdkd($lst);", "    foreach($lst as $v) {\n        $array[$v] = 0;\n\
    \    }\n    $x = 0;\n    for($i = 1; $i < max($lst); $i++) {\n        foreach($lst\
    \ as $v) {\n            if(!isset($lst[$i])) {\n                continue;\n  \
    \          }\n            if($lst[$i] % $v == 0) {\n                $array[$v]++;\n\
    \            }\n        }\n    }\n    $x = array_search(0, $array);\n    $sum\
    \ = 0;\n    while($x > 0) {\n        $sum += $x % 10;\n        $x = floor($x /\
    \ 10);\n    }\n    return $sum;\n}", "    return 0;\n}\n\n$array = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    \nskjkasdkd($array);", "\tfor ($j = 0; $j < count($lst); $j++) {\n\t\tfor ($i\
    \ = 2; $i < $lst[$j]; $i++) {\n\t\t\tif ($lst[$j] % $i == 0) {\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif ($i == $lst[$j]) {\n\t\t\t$prime[] = $lst[$j];\n\t\t}\n\
    \t}\n\t$largest_prime = max($prime);\n\t$sum = array_sum(str_split($largest_prime));\n\
    \treturn $sum;\n}\n\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);",
  "    $arr = [];\n    $sum = 0;\n    foreach ($lst as $value) {\n        $arr[] =\
    \ substr_count(decbin($value), '1');\n    }\n    $val = max($arr);\n    return\
    \ $val;\n}\n", "$prime = 0;\nforeach ($lst as $num) {\n$div = 2;\n$prime = 0;\n\
    while ($div < $num) {\nif ($num % $div == 0) {\n$prime = 1;\nbreak;\n}\n$div++;\n\
    }\nif ($prime == 0) {\n$divi = str_split($num);\n$divi = array_sum($divi);\n$divss[]\
    \ = $divi;\n}\n}\nreturn max($divss);\n}\nprint_r(skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]));",
  "  //TODO\n}", "    $a = array_map(function($v){\n        return is_int($v) ? $v\
    \ : 0;\n    }, $lst);\n    $a = array_filter($a, function($v){\n        if($v\
    \ < 2)\n            return false;\n        for($i = 2; $i < $v / 2; $i++)\n  \
    \          if($v % $i == 0)\n                return false;\n        return true;\n\
    \    });\n    return array_sum(str_split(max($a)));\n}\n\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    print_r(skjkasdkd($lst));\necho '<br>';\n$lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1];\n\
    print_r(skjkasdkd($lst));\necho '<br>';\n$lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3];\n\
    print_r(skjkasdkd($lst));\necho '<br>';\n$lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6];\n\
    print_r(skjkasdkd($lst));\necho '<br>';\n$lst = [0,81,12,3,1,21];\nprint_r(skjkasdkd($lst));\n\
    echo '<br>';\n$lst = [0,8,1,2,1,7];\nprint_r(skjkasdkd($lst));\necho '<br>';\n",
  "    $k = 0;\n    $s = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] % 2 === 0) {\n            continue;\n        }\n        $true = true;\n\
    \        $d = intval(sqrt($lst[$i]));\n        if ($d < 2) {\n            continue;\n\
    \        }\n        for ($j = 3; $j <= $d; $j += 2) {\n            if ($lst[$i]\
    \ % $j === 0) {\n                $true = false;\n                break;\n    \
    \        }\n        }\n        if ($true) {\n            if ($lst[$i] > $k) {\n\
    \                $k = $lst[$i];\n            }\n        }\n    }\n    if ($k >\
    \ 0) {\n        $x = $k;\n        $arr = [];\n        while ($x !== 0) {\n   \
    \         $arr[] = $x % 10;\n            $x = intval($x / 10);\n        }\n  \
    \      for ($i = 0; $i < count($arr); $i++) {\n            $s += $arr[$i];\n \
    \       }\n    }\n    return $s;\n}\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);",
  "    $total = 0;\n    foreach ($lst as $l) {\n        if (isPrime($l)) {\n     \
    \       $total += sumOfDigits($l);\n        }\n    }\n    return $total;\n}",
  "    $count = 0;\n    $i = 0;\n    $j = 0;\n    $arr = [];\n    $max = 0;\n    $maxx\
    \ = 0;\n    $res = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($lst); $j++) {\n            if ($lst[$i] == $lst[$j])\
    \ {\n                $count++;\n            }\n        }\n        $arr[$i] = $count;\n\
    \        $count = 0;\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n    \
    \    if ($arr[$i] > $max) {\n            $max = $arr[$i];\n            $maxx =\
    \ $lst[$i];\n        }\n    }\n    while ($maxx > 0) {\n        $digit = $maxx\
    \ % 10;\n        $res += $digit;\n        $maxx /= 10;\n    }\n    return $res;\n\
    }\n$lst = [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3];\necho skjkasdkd($lst);", '}', "\t$primes = [];\n\t$ans = 0;\n\t$max =\
    \ max($lst);\n\tfor ($i = 2; $i <= $max; $i++) {\n\t\tif (isPrime($i)) {\n\t\t\
    \t$primes[] = $i;\n\t\t}\n\t}\n\t$maxPrime = max($primes);\n\t$ans = array_sum(str_split($maxPrime));\n\
    \treturn $ans;\n}\n", "    $primes = [];\n    for ($i = 0; $i < count($lst); $i++)\
    \ {\n        if (isPrime($lst[$i])) {\n            $primes[] = $lst[$i];\n   \
    \     }\n    }\n    $max = max($primes);\n    return sumOfArrayElements($max);\n\
    }\n", "    $max_prime = 1;\n    for ($i = 0; $i < count($lst); $i++) {\n     \
    \   $j = 2;\n        while ($j <= $lst[$i]) {\n            if ($lst[$i] % $j ==\
    \ 0) {\n                if ($lst[$i] == $j) {\n                    if ($max_prime\
    \ < $lst[$i]) {\n                        $max_prime = $lst[$i];\n            \
    \        }\n                }\n                break;\n            }\n       \
    \     $j++;\n        }\n    }\n    $sum = 0;\n    while ($max_prime != 0) {\n\
    \        $sum += $max_prime % 10;\n        $max_prime = (int)($max_prime / 10);\n\
    \    }\n    return $sum;\n}\nprint_r(skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\
    \ . \"<br>\"); // 10\nprint_r(skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1])\
    \ . \"<br>\"); // 25\nprint_r(skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3])\
    \ . \"<br>\"); // 13\nprint_r(skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6])\
    \ . \"<br>\"); // 11\nprint_r(skjkasdkd([0,81,12,3,1,21]) . \"<br>\"); // 3\n\
    print_r(skjkasdkd([0,8,1,2,1,7]) . \"<br>\"); // 7", "  $primes = [];\n  foreach\
    \ ($lst as $value) {\n    if(isPrime($value)){\n      $primes[] = $value;\n  \
    \  }\n  }\n  if(count($primes) == 0){\n    return 0;\n  }\n  $max = max($primes);\n\
    \  return array_sum(str_split($max));\n}\n", "    $primes = [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97,\
    \ 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179,\
    \ 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269,\
    \ 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367,\
    \ 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461,\
    \ 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571,\
    \ 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661,\
    \ 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773,\
    \ 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883,\
    \ 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\n\
    \    $max = 0;\n    foreach ($lst as $val) {\n        if ($val > $max) {\n   \
    \         $max = $val;\n        }\n    }\n    for ($i = 0; $i < count($primes);\
    \ $i++) {\n        if ($primes[$i] > $max) {\n            return sum($primes[$i\
    \ - 1", "    $primes = getPrimes($lst);\n    $sum = 0;\n    foreach($primes as\
    \ $prime) {\n        $sum += $prime;\n    }\n    return $sum;\n}", "  $primes\
    \ = \"2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997\"\
    ;\n  $max = 0;\n  foreach($lst as $num) {\n    if(in_array($num, explode(\",\"\
    , $primes))) {\n      if($num > $max) {\n        $max = $num;\n      }\n    }\n\
    \  }\n  $str = (string)$max;\n  $sum = 0;\n  for($i = 0; $i < strlen($str); $i++)\
    \ {\n    $sum += (int)$str[$i];\n  }\n  return $sum;\n}", "    $max = 0;\n   \
    \ foreach ($lst as $v) {\n        if (isset($lst[0])) {\n            $b = true;\n\
    \            for ($i = 2; $i < $v; $i++) {\n                if ($v % $i == 0)\
    \ {\n                    $b = false;\n                    break;\n           \
    \     }\n            }\n            if ($b && $v > $max) $max = $v;\n        }\n\
    \    }\n    $max = str_split($max);\n    return array_sum($max);\n}\n\n$lst =\
    \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3];\n\
    print_r(skjkasdkd($lst));", "    $m = 1;\n    for ($i = 0; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] > $m) $m = $lst[$i];\n    }\n    $s = 0;\n    $p = 0;\n\
    \    while ($m) {\n        $p++;\n        if ($m % $p == 0) {\n            $s\
    \ = $s + $p;\n            $m = $m / $p;\n        }\n    }\n    return $s;\n}\n\
    $lst = [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1];\necho skjkasdkd($lst);",
  "    $numbers = [];\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n\
    \        $numbers[$count] = $lst[$i];\n        $count++;\n    }\n    $numbers\
    \ = array_unique($numbers);\n    $primes = [];\n    $count = 0;\n    for ($i =\
    \ 0; $i < count($numbers); $i++) {\n        $is_prime = true;\n        for ($j\
    \ = 2; $j < $numbers[$i]; $j++) {\n            if ($numbers[$i] % $j == 0) {\n\
    \                $is_prime = false;\n                break;\n            }\n \
    \       }\n        if ($is_prime) {\n            $primes[$count] = $numbers[$i];\n\
    \            $count++;\n        }\n    }\n    $largest = 0;\n    for ($i = 0;\
    \ $i < count($primes); $i++) {\n        if ($primes[$i] > $largest) {\n      \
    \      $largest = $primes[$i];\n        }\n    }\n    $sum = 0;\n    for ($i =\
    \ 0; $i < strlen($largest); $i++) {\n        $sum += $largest[$i];\n    }\n  \
    \  return $sum;\n}\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);",
  "    $largest = 0;\n    $prime = function($v) {\n        if ($v < 2) return false;\n\
    \        if ($v == 2) return true;\n        if ($v % 2 == 0) return false;\n \
    \       for ($i = 3; $i <= ceil(sqrt($v)); $i = $i + 2) {\n            if ($v\
    \ % $i == 0) return false;\n        }\n        return true;\n    };\n    for ($i\
    \ = 0; $i < count($lst); $i++) {\n        if ($prime($lst[$i]) && $lst[$i] > $largest)\
    \ {\n            $largest = $lst[$i];\n        }\n    }\n    $sum = 0;\n    foreach\
    \ (str_split($largest) as $v) {\n        $sum += (int)$v;\n    }\n    return $sum;\n\
    }\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]) . PHP_EOL;\n\
    echo skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]) . PHP_EOL;\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3])\
    \ . PHP_EOL;\necho skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]) . PHP_EOL;\n\
    echo skjkasdkd([0,81,12,3,1,21]) . PHP_EOL;\necho skjkasdkd([0,8,1,2,1,7]) . PHP_EOL;",
  "    $arr = [];\n    $s = '';\n    $j = 0;\n    $k = 0;\n    $c = 0;\n    $i = 0;\n\
    \    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] > 1) {\n   \
    \         $arr[$k] = [];\n            for ($j = 2; $j <= $lst[$i]; $j++) {\n \
    \               $c = 0;\n                for ($n = 2; $n <= $j / 2; $n++) {\n\
    \                    if ($j % $n == 0) {\n                        $c++;\n    \
    \                    break;\n                    }\n                }\n      \
    \          if ($c == 0) {\n                    array_push($arr[$k], $j);\n   \
    \             }\n            }\n            $k++;\n        }\n    }\n    $max\
    \ = max($arr[0]);\n    for ($i = 0; $i < count($arr); $i++) {\n        if (max($arr[$i])\
    \ > $max) {\n            $max = max($arr[$i]);\n        }\n    }\n    $s = (string)$max;\n\
    \    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        $count +=\
    \ $s[$i];\n    }\n    return $count;\n}", "\t$largestPrime = 0;\n\t\n\tfor ($i\
    \ = 0; $i < count($lst); $i++) {\n\t\tif (checkPrime($lst[$i]) && $lst[$i] > $largestPrime)\
    \ {\n\t\t\t$largestPrime = $lst[$i];\n\t\t}\n\t}\n\t\n\tif ($largestPrime ===\
    \ 0) {\n\t\treturn 0;\n\t}\n\t\n\t$largestPrime = (string)$largestPrime;\n\t$sum\
    \ = 0;\n\t\n\tfor ($i = 0; $i < strlen($largestPrime); $i++) {\n\t\t$sum += $largestPrime[$i];\n\
    \t}\n\t\n\treturn $sum;\n}\n", "  $largest = 0;\n  $sum = 0;\n  $res = 0;\n  for\
    \ ($i=0; $i < count($lst); $i++) {\n    $sum = 0;\n    $temp = $lst[$i];\n   \
    \ if($temp > $largest){\n      if($temp % 2 !== 0){\n        for ($j=2; $j < $temp\
    \ ; $j++) {\n          if($temp % $j == 0){\n            $sum++;\n          }\n\
    \        }\n        if($sum == 0){\n          $largest = $temp;\n        }\n \
    \     }\n    }\n  }\n  while ($largest > 0) {\n    $res += $largest % 10;\n  \
    \  $largest = intval($largest / 10);\n  }\n  return $res;\n}\n$lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6];\n\
    echo skjkasdkd($lst);", "  for ($i=0; $i < count($lst); $i++) {\n    for ($i1=0;\
    \ $i1 < count($lst); $i1++) {\n      if ($lst[$i] % $lst[$i1] === 0 && $lst[$i]\
    \ != $lst[$i1]) {\n        $lst[$i] = 0;\n      }\n    }\n  }\n  return array_sum(str_split(max($lst)));\n\
    }", "$prime = 0;\nforeach ($lst as $value) {\n    $i = 2;\n    $counter = 0;\n\
    \    while ($i < $value) {\n        if ($value % $i == 0) {\n            $counter++;\n\
    \        }\n        $i++;\n    }\n    if ($counter == 0) {\n        if ($value\
    \ > $prime) {\n            $prime = $value;\n        }\n    }\n}\n$sum = 0;\n\
    while ($prime > 0) {\n    $sum += $prime % 10;\n    $prime = (int)($prime / 10);\n\
    }\nreturn $sum;\n}", "\t\n\t\n}", "    $prime = null;\n    foreach ($lst as $value)\
    \ {\n        if (isPrime($value)) {\n            if (is_null($prime)) {\n    \
    \            $prime = $value;\n            } elseif ($value > $prime) {\n    \
    \            $prime = $value;\n            }\n        }\n    }\n    if (is_null($prime))\
    \ {\n        return 0;\n    }\n    $result = 0;\n    while($prime) {\n       \
    \ $result += $prime % 10;\n        $prime = floor($prime / 10);\n    }\n    return\
    \ $result;\n}", "    if (count($lst) == 1) {\n        return $lst[0];\n    }\n\
    \    for ($i = 0; $i < count($lst); $i++) {\n        if (isPrime($lst[$i])) {\n\
    \            return sumDigits($lst[$i]);\n        }\n    }\n}", "$largest_prime\
    \ = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $current = $lst[$i];\n\
    \        $bool = true;\n        for ($j = 2; $j < $current; $j++) {\n        \
    \    if ($current % $j == 0) {\n                $bool = false;\n             \
    \   break;\n            }\n        }\n        if ($bool && $current > $largest_prime)\
    \ {\n            $largest_prime = $current;\n        }\n    }\n    if ($largest_prime\
    \ == 0) {\n        return 0;\n    }\n    $result = 0;\n    while ($largest_prime\
    \ > 0) {\n        $result += $largest_prime % 10;\n        $largest_prime = (int)($largest_prime\
    \ / 10);\n    }\n    return $result;\n}", "    $prime = 0;\n    foreach ($lst\
    \ as $item) {\n        if ($item > $prime && isPrime($item)) {\n            $prime\
    \ = $item;\n        }\n    }\n    return array_sum(str_split($prime));\n}", "\n}",
  "\t$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\tforeach ($lst\
    \ as $value) {\n\t\t$valor = $value;\n\t\tif($valor <= 0) {\n\t\t\tif($valor ==\
    \ 0) {\n\t\t\t\t$resultado = 0;\n\t\t\t}\n\t\t\tif($valor < 0) {\n\t\t\t\t$resultado\
    \ = $valor * -1;\n\t\t\t}\n\t\t}\n\t\tif($valor > 0) {\n\t\t\t$resultado = $valor;\n\
    \t\t}\n\t\t$numero = $resultado;\n\t\t$x = 0;\n\t\t$i = 1;\n\t\t$resultado = 0;\n\
    \t\twhile ($x == 0) {\n\t\t\tif ($numero == 1 || $numero == 0) {\n\t\t\t\t$x =\
    \ 1;\n\t\t\t} else {\n\t\t\t\t$i = 1;\n\t\t\t\twhile ($numero % $i != 0) {\n\t\
    \t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\t$numero = $numero / $i;\n\t\t\t\t$resultado\
    \ = $resultado + $i;\n\t\t\t}\n\t\t}\n\t\t$array[] = $resultado;\n\t}\n\treturn\
    \ $array;\n}\n", "    $max_num = max($lst);\n    $prime_nums = array();\n    for\
    \ ($i = 2; $i <= $max_num; $i++) {\n        if (is_prime($i)) {\n            $prime_nums[]\
    \ = $i;\n        }\n    }\n    // print_r($prime_nums);\n    $max_prime = max($prime_nums);\n\
    \    $sum = 0;\n    while ($max_prime > 0) {\n        $mod = $max_prime % 10;\n\
    \        $sum += $mod;\n        $max_prime = floor($max_prime / 10);\n    }\n\
    \    return $sum;\n}", "  //coding and coding..\n}", "    if(isset($lst[0])) {\n\
    \        $int = max($lst);\n        if(is_int($int)) {\n            $arr = str_split($int);\n\
    \            $int = max($arr);\n            if(is_int($int)) {\n             \
    \   return $int;\n            }\n        }\n    }\n    return 0;\n}\n", "$prime_num\
    \ = 0;\n$num_sum = 0;\n    for ($i=0; $i < count($lst); $i++) { \n        $number\
    \ = $lst[$i];\n        $prime = prime($number);\n        if ($prime) {\n     \
    \       $sum = sum_digits($number);\n            if ($prime_num < $number) {\n\
    \                $prime_num = $number;\n                $num_sum = $sum;\n   \
    \         }\n        }\n    }\n    return $num_sum;\n}", "  // your code here\n\
    \  echo \"<pre>\";\n  print_r($lst);\n  echo \"</pre>\";\n  $sum=0;\n  for($i=0;$i<count($lst);$i++){\n\
    \      $factors = [];\n      $factors[] = 1;\n      $factors[] = $lst[$i];\n \
    \     for($k=2;$k<$lst[$i];$k++){\n          if($lst[$i]%$k==0){\n           \
    \   $factors[] = $k;\n          }\n      }\n      // print_r($factors);\n    \
    \  $numPrime = 0;\n      for($j=0;$j<count($factors);$j++){\n          $subfactors\
    \ = [];\n          $subfactors[] = 1;\n          $subfactors[] = $factors[$j];\n\
    \          for($l=2;$l<$factors[$j];$l++){\n              if($factors[$j]%$l==0){\n\
    \                  $subfactors[] = $l;\n              }\n          }\n       \
    \   if(count($subfactors)==2){\n              $numPrime++;\n          }\n    \
    \  }\n      if($numPrime==2){\n          $sum += $lst[$i];\n      }\n  }\n  echo\
    \ $sum;\n}\n\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\nskjkasdkd($lst);",
  "    foreach ($lst as $key => $value) {\n        if($value%2 == 0){\n          \
    \  unset($lst[$key]);\n        }\n    }\n    $lst = array_reverse($lst);\n   \
    \ $new = [];\n    foreach ($lst as $key => $value) {\n        if($value%3 == 0){\n\
    \            $new[] = $value;\n        }\n    }\n    if(!empty($new)){\n     \
    \   $new = array_reverse($new);\n        $new = array_map(function($v){\n    \
    \        return $v+1;\n        }, $new);\n        return array_sum($new);\n  \
    \  }\n    return 0;\n}\n", "    $primeList = [];\n    foreach ($lst as $n) {\n\
    \        if (isPrime($n)) {\n            $primeList[] = $n;\n        }\n    }\n\
    \    return array_sum(str_split(max($primeList)));\n}", "    foreach($lst as $num){\n\
    \      $numbers[] = abs($num);\n    }\n    $sum = 0;\n    $number = max($numbers);\n\
    \    while ($number > 0) {\n        $digit = $number % 10;\n        $sum = $sum\
    \ + $digit;\n        $number = floor($number / 10);\n    }\n    return $sum;\n\
    }", "  $largestPrime = 0;\n  for ($i=0; $i < count($lst); $i++) {\n    if ($lst[$i]\
    \ > $largestPrime) {\n      if (isPrime($lst[$i])) {\n        $largestPrime =\
    \ $lst[$i];\n      }\n    }\n  }\n  echo $largestPrime;\n  echo sumDigits($largestPrime);\n\
    }", "$arr = array();\n$arr1 = array();\n$arr2 = array();\n$arr3 = array();\n$arr4\
    \ = array();\n$arr5 = array();\n$arr6 = array();\n$arr7 = array();\n$arr8 = array();\n\
    $arr9 = array();\n$arr10 = array();\n$arr11 = array();\n$arr12 = array();\n$arr13\
    \ = array();\n$arr14 = array();\n$arr15 = array();\n$arr16 = array();\n$arr17\
    \ = array();\n$arr18 = array();\n$arr19 = array();\n$arr20 = array();\n$arr21\
    \ = array();\n$arr22 = array();\n$arr23 = array();\n$arr24 = array();\n$arr25\
    \ = array();\n$arr26 = array();\n$arr27 = array();\n$arr28 = array();\n$arr29\
    \ = array();\n$arr30 = array();\n$arr31 = array();\n$arr32 = array();\n$arr33\
    \ = array();\n$arr34 = array();\n$arr35 = array();\n$arr36 = array();\n$arr37\
    \ = array();\n$arr38 = array();\n$arr39 = array();\n$arr40 = array();\n$arr41\
    \ = array();\n$arr42 = array();\n$arr43 = array();\n$arr44 = array();\n$arr45\
    \ = array();\n$arr46 = array();\n$arr47 = array();\n$arr48 = array();\n$arr49\
    \ = array();\n$arr50 = array();\n$arr51 = array();\n$arr52 = array();\n$arr53\
    \ = array();\n$arr54 = array();\n$arr55 = array();\n$arr56 = array();\n$arr57\
    \ = array();\n$arr58 = array();\n$arr59 = array();\n$arr60 = array();\n$arr61\
    \ = array();\n$arr62 = array();\n$arr63 = array();\n$arr64 = array();\n$arr65\
    \ = array();\n$arr66 = array();\n$arr67 = array();\n$arr68 = array();\n$arr69\
    \ = array();\n$arr70 = array();\n$arr71 = array();\n$arr72 = array();\n$", "$largestPrime\
    \ = max($lst);\n$primes = [];\n$maxPrimes = [];\nfor ($i=2; $i <= $largestPrime;\
    \ $i++) { \n    $isPrime = true;\n    foreach ($primes as $prime) {\n        if\
    \ ($i % $prime == 0) {\n            $isPrime = false;\n            break;\n  \
    \      }\n    }\n    if ($isPrime) {\n        $primes[] = $i;\n        if (in_array($i,\
    \ $lst)) {\n            $maxPrimes[] = $i;\n        }\n    }\n}\nreturn array_sum(str_split(max($maxPrimes)));\n\
    }\n", "  $output = 0;\n  $largest = 0;\n  for ($i=0; $i < count($lst); $i++) {\n\
    \    if ($lst[$i] > $largest) {\n      $largest = $lst[$i];\n    }\n  }\n  if\
    \ ($largest > 0) {\n    $string = strval($largest);\n    for ($i=0; $i < strlen($string);\
    \ $i++) {\n      $output += intval($string[$i]);\n    }\n  }\n  return $output;\n\
    }\n\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]).\"\\\
    n\";\necho skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]).\"\\n\";\necho\
    \ skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]).\"\\n\";\necho\
    \ skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]).\"\\n\";\necho skjkasdkd([0,81,12,3,1,21]).\"\
    \\n\";\necho skjkasdkd([0,8,1,2,1,7]).\"\\n\";\n ?>", "\t$result = 0;\n\tforeach\
    \ ($lst as $n) {\n\t\t$temp = $n;\n\t\t$temp0 = $n;\n\t\t$divisors = [];\n\t\t\
    $flag = true;\n\t\tfor ($i = 1; $i <= $temp; $i++) {\n\t\t\tif ($temp % $i ==\
    \ 0) {\n\t\t\t\tarray_push($divisors, $i);\n\t\t\t}\n\t\t}\n\t\tif (count($divisors)\
    \ > 2) {\n\t\t\tcontinue;\n\t\t}\n\t\tfor ($i = 2; $i <= $temp; $i++) {\n\t\t\t\
    if ($temp % $i == 0) {\n\t\t\t\t$flag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\
    }\n\t\tif ($flag) {\n\t\t\t$temp = $temp0;\n\t\t\twhile ($temp != 0) {\n\t\t\t\
    \t$result += $temp % 10;\n\t\t\t\t$temp = (int)($temp / 10);\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn $result;\n}\n$arr = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    echo skjkasdkd($arr) . \"<br>\";\n$arr = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1];\n\
    echo skjkasdkd($arr) . \"<br>\";\n$arr = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3];\n\
    echo skjkasdkd($arr) . \"<br>\";\n$arr = [0,724,32,71,99,32,6,0,5,91,83,0,5,6];\n\
    echo skjkasdkd($arr) . \"<br>\";\n$arr = [0,81,12,", "\t$largest = 0;\n\t$numbers\
    \ = [];\n\tforeach ($lst as $number) {\n\t\t$numbers[$number] = $number;\n\t}\n\
    \tforeach ($numbers as $number) {\n\t\t$isPrime = true;\n\t\tfor ($i = 2; $i <\
    \ $number; $i++) {\n\t\t\tif ($number % $i == 0) {\n\t\t\t\t$isPrime = false;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($isPrime) {\n\t\t\t$largest = $number;\n\
    \t\t}\n\t}\n\t$sum = 0;\n\t$largest = str_split($largest);\n\tforeach ($largest\
    \ as $number) {\n\t\t$sum += $number;\n\t}\n\treturn $sum;\n}", "\t$s = 0;\n\t\
    $t = 0;\n\tforeach ($lst as $v) {\n\t\t$t = $v > $t ? $v : $t;\n\t}\n\tfor ($i=1;\
    \ $i < $t; $i++) { \n\t\t$c = 0;\n\t\tforeach ($lst as $v) {\n\t\t\tif ($v%$i\
    \ == 0) {\n\t\t\t\t$c++;\n\t\t\t}\n\t\t}\n\t\tif ($c == count($lst)) {\n\t\t\t\
    $s = $i;\n\t\t}\n\t}\n\t$r = [];\n\twhile ($s >= 1) {\n\t\t$r[] = $s%10;\n\t\t\
    $s = floor($s/10);\n\t}\n\treturn array_sum($r);\n}\necho skjkasdkd([\n\t0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3\n\
    ]);", "$array=[];\n\nfor($i=0;$i<count($lst);$i++){\n\t\n\tif($lst[$i]==0){\n\n\
    \t}else{\n\t\t\n\t\tif($lst[$i]%2==0){\n\t\t\tarray_push($array,2);\n\t\t\t$lst[$i]=$lst[$i]/2;\n\
    \t\t\t$i=$i-1;\n\t\t}else if($lst[$i]%3==0){\n\t\t\tarray_push($array,3);\n\t\t\
    \t$lst[$i]=$lst[$i]/3;\n\t\t\t$i=$i-1;\n\t\t}else if($lst[$i]%5==0){\n\t\t\tarray_push($array,5);\n\
    \t\t\t$lst[$i]=$lst[$i]/5;\n\t\t\t$i=$i-1;\n\t\t}else if($lst[$i]%7==0){\n\t\t\
    \tarray_push($array,7);\n\t\t\t$lst[$i]=$lst[$i]/7;\n\t\t\t$i=$i-1;\n\t\t}else\
    \ if($lst[$i]%11==0){\n\t\t\tarray_push($array,11);\n\t\t\t$lst[$i]=$lst[$i]/11;\n\
    \t\t\t$i=$i-1;\n\t\t}else if($lst[$i]%13==0){\n\t\t\tarray_push($array,13);\n\t\
    \t\t$lst[$i]=$lst[$i]/13;\n\t\t\t$i=$i-1;\n\t\t}else if($lst[$i]%17==0){\n\t\t\
    \tarray_push($array,17);\n\t\t\t$lst[$i]=$lst[$i]/17;\n\t\t\t$i=$i-1;\n\t\t}else\
    \ if($lst[$i]%19==0){\n\t\t\tarray_push($array,19);\n\t", "  $numbers = array();\n\
    \  $numbers = array_merge($numbers, $lst);\n  $len = count($numbers);\n  for ($i\
    \ = 2; $i < $len; $i++) {\n    if ($numbers[$i] == 0) {\n      continue;\n   \
    \ }\n    for ($j = $i * 2; $j < $len; $j += $i) {\n      $numbers[$j] = 0;\n \
    \   }\n  }\n  $prime_numbers = array();\n  for ($i = 2; $i < $len; $i++) {\n \
    \   if ($numbers[$i] != 0) {\n      $prime_numbers[] = $numbers[$i];\n    }\n\
    \  }\n  $prime_numbers = array_reverse($prime_numbers);\n  $result = 0;\n  foreach\
    \ ($prime_numbers as $k => $v) {\n    if ($v < 10) {\n      $result += $v;\n \
    \     break;\n    }\n    $sum = 0;\n    $j = 10;\n    while ($v > 0) {\n     \
    \ $sum += $v % $j;\n      $v = floor($v / $j);\n    }\n    if ($sum > $result)\
    \ {\n      $result = $sum;\n    }\n  }\n  return $result;\n}\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\
    \ . \"\\n\";\necho skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]) . \"\\\
    n\";\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]) . \"\
    \\n\";\necho skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,", "\t$res = 0;\n\t$max\
    \ = max($lst);\n\tif($max == 2) {\n\t\tif(count($lst) == 1)\n\t\t\treturn array_sum($lst);\n\
    \t\telse\n\t\t\treturn array_sum(array_slice($lst, -2));\n\t}\n\t$divs = [];\n\
    \tfor($i = 2; $i <= sqrt($max); $i++) {\n\t\tif($max % $i == 0) {\n\t\t\t$divs[]\
    \ = $i;\n\t\t\tif($i != sqrt($max))\n\t\t\t\t$divs[] = $max / $i;\n\t\t}\n\t}\n\
    \tif(count($divs) == 0)\n\t\treturn sumDigits($max);\n\t$divs = array_unique($divs);\n\
    \tfor($i = 0; $i < count($divs); $i++) {\n\t\t$flag = true;\n\t\tfor($j = 0; $j\
    \ < count($lst); $j++) {\n\t\t\tif($lst[$j] % $divs[$i] != 0) {\n\t\t\t\t$flag\
    \ = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif($flag) {\n\t\t\t$res = $divs[$i];\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn sumDigits($res);\n}", "    $max = max($lst);\n\
    \    for ($i = $max; $i > 1; $i--) {\n        if (isPrime($i)) {\n           \
    \ return array_sum(str_split($i));\n        }\n    }\n}\n", "    $count = [];\n\
    \    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n  \
    \          continue;\n        }\n        for ($k = $i + 1; $k < count($lst); $k++)\
    \ {\n            if ($lst[$k] == 0) {\n                continue;\n           \
    \ }\n            if ($lst[$i] == $lst[$k]) {\n                $count[$lst[$i]]++;\n\
    \                $lst[$k] = 0;\n            }\n        }\n    }\n    $biggest\
    \ = 0;\n    foreach ($count as $number => $number_of_times) {\n        if ($number_of_times\
    \ > $biggest) {\n            $biggest = $number;\n        }\n    }\n    $sum =\
    \ 0;\n    $biggest_string = (string)$biggest;\n    for ($i = 0; $i < strlen($biggest_string);\
    \ $i++) {\n        $sum += $biggest_string[$i];\n    }\n    return $sum;\n}\n\
    echo skjkasdkd([0,81,12,3,1,21]);", "  $string = '';\n  foreach ($lst as $k =>\
    \ $v) {\n    if (is_prime($v)) {\n      $string = substr(strval($v), 1);\n   \
    \ }\n  }\n  return array_sum(str_split($string));\n}\n", "    //\n    $arr = [];\n\
    \    $biggest_value = null;\n    $biggest_key = null;\n    $biggest_arr = [];\n\
    \    $is_prime = true;\n    $sum = 0;\n    foreach ($lst as $key => $value) {\n\
    \        if ($value <= 1) {\n            continue;\n        }\n        for ($i\
    \ = 2; $i < $value; $i++) {\n            if ($value % $i == 0) {\n           \
    \     $is_prime = false;\n                break;\n            }\n        }\n \
    \       if ($is_prime) {\n            $arr[$key] = $value;\n        }\n      \
    \  $is_prime = true;\n    }\n    $biggest_value = array_values($arr)[0];\n   \
    \ $biggest_key = array_keys($arr)[0];\n    foreach ($arr as $key => $value) {\n\
    \        if ($value > $biggest_value) {\n            $biggest_value = $value;\n\
    \            $biggest_key = $key;\n        }\n    }\n    $str = strval($biggest_value);\n\
    \    $biggest_arr = str_split($str);\n    foreach ($biggest_arr as $key => $value)\
    \ {\n        $sum += $value;\n    }\n    return $sum;\n}\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\
    \ . \"\\n\";\necho skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]) . \"\\\
    n\";\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]) . \"\
    \\n\";\necho skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]) . \"\\n", "    for\
    \ ($i = 0; $i < count($lst); $i++) {\n        for ($j = 0; $j < count($lst); $j++)\
    \ {\n            if ($lst[$i] < $lst[$j]) {\n                $t = $lst[$i];\n\
    \                $lst[$i] = $lst[$j];\n                $lst[$j] = $t;\n      \
    \      }\n        }\n    }\n    $sum = 0;\n    foreach ($lst as $key => $value)\
    \ {\n        $flag = 1;\n        for ($i = 2; $i < $value; $i++) {\n         \
    \   if ($value % $i == 0) {\n                $flag = 0;\n                break;\n\
    \            }\n        }\n        if ($flag == 1) {\n            $value = (string)$value;\n\
    \            for ($i = 0; $i < strlen($value); $i++) {\n                $sum +=\
    \ (int)$value[$i];\n            }\n            break;\n        }\n    }\n    return\
    \ $sum;\n}\nprint_r(skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]));",
  "    $primes = array_filter($lst, function($x) {\n        return gmp_prob_prime($x)\
    \ == 2;\n    });\n    if (count($primes) == 0) {\n        return 0;\n    }\n \
    \   $prime = gmp_strval(gmp_init(max($primes)));\n    return array_sum(str_split($prime));\n\
    }", '}', "    $largest = 0;\n    foreach ($lst as $value) {\n        if (isPrime($value)\
    \ && $value > $largest) {\n            $largest = $value;\n        }\n    }\n\
    \    $digits = str_split($largest);\n    return array_sum($digits);\n}", "   \
    \ $sum = 0;\n    $bigPrime = 0;\n    $newLst = [];\n    foreach ($lst as $elem)\
    \ {\n        if (isPrime($elem)) {\n            array_push($newLst, $elem);\n\
    \        }\n    }\n    sort($newLst);\n    $bigPrime = array_pop($newLst);\n \
    \   $bigPrime = (string)$bigPrime;\n    for ($i = 0; $i < strlen($bigPrime); $i++)\
    \ {\n        $sum += (int)$bigPrime[$i];\n    }\n    return $sum;\n}\n", "   \
    \ if (count($lst) === 0) return 0;\n    $primes = [];\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] % 2 === 0) {\n            continue;\n        }\n\
    \        $temp = 0;\n        for ($j = 3; $j < $lst[$i]; $j += 2) {\n        \
    \    if ($lst[$i] % $j === 0) {\n                $temp = 1;\n                break;\n\
    \            }\n        }\n        if ($temp === 0) {\n            $primes[] =\
    \ $lst[$i];\n        }\n    }\n    if (count($primes) === 0) return 0;\n    echo\
    \ max($primes) . \"\\n\";\n    return array_sum(str_split(max($primes)));\n}\n\
    echo skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]) . \"\\n\"\
    ;\necho skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]) . \"\\n\";\necho\
    \ skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]) . \"\\n\";\n\
    echo skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]) . \"\\n\";\necho skjkasdkd([0,81,12,3,1,21])\
    \ . \"\\n\";\necho skjkasdkd([0,8,1,2,1,7]) . \"\\n\";\n", "$a=array_filter($lst,\
    \ function($x) { return $x == (int)$x; });\n$s = 0;\n    foreach ($a as $value)\
    \ {\n        if (is_prime($value)) {\n            $s += digits_sum($value);\n\
    \        }\n    }\n    return $s;\n}", "    $arr = [];\n    foreach ($lst as $v)\
    \ {\n        if (isPrime($v)) $arr[] = $v;\n    }\n    rsort($arr);\n    $s =\
    \ (string)$arr[0];\n    return array_sum(str_split($s));\n}", "    $prime = 0;\n\
    \    foreach ($lst as $v) {\n        $isPrime = true;\n        for ($i = 2; $i\
    \ < $v; $i++) {\n            if ($v % $i == 0) {\n                $isPrime = false;\n\
    \                break;\n            }\n        }\n        if ($isPrime && $v\
    \ > $prime) {\n            $prime = $v;\n        }\n    }\n    $sum = 0;\n   \
    \ while ($prime > 0) {\n        $sum += $prime % 10;\n        $prime = floor($prime\
    \ / 10);\n    }\n    return $sum;\n}\n", "    $int = 0;\n    $z = 0;\n    for\
    \ ($x = 0; $x < count($lst); $x++) {\n        if (isPrime($lst[$x])) {\n     \
    \       if ($lst[$x] > $int) {\n                $int = $lst[$x];\n           \
    \ }\n        }\n    }\n    if ($int > 0) {\n        $int = str_split($int);\n\
    \        foreach ($int as $x) {\n            $z += $x;\n        }\n    }\n   \
    \ return $z;\n}", "    \n}", "    for ($i = max($lst); $i > 1; $i--) {\n     \
    \   if (isPrime($i)) return array_sum(str_split($i));\n    }\n}", "  $prime =\
    \ 0;\n  $sum = 0;\n  foreach ($lst as $value) {\n    $prime = is_prime($value);\n\
    \    if ($prime) {\n      $sum = 0;\n      for ($i=0; $i < strlen($prime); $i++)\
    \ {\n        $sum += (int) $prime[$i];\n      }\n    }\n  }\n  return $sum;\n}",
  "    $res = $lst[0];\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ % $res == 0) {\n            unset($lst[$i]);\n        }\n    }\n    $lst = array_values($lst);\n\
    \    if (count($lst) > 1) {\n        $res = skjkasdkd($lst);\n    }\n    return\
    \ $res;\n}", "  $last = max($lst);\n  $prime = gmp_strval(gmp_nextprime($last));\n\
    \  return array_sum(str_split($prime));\n}\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3])\
    \ . \"\\n\";\necho skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]) . \"\\\
    n\";\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]) . \"\
    \\n\";\necho skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]) . \"\\n\";\necho\
    \ skjkasdkd([0,81,12,3,1,21]) . \"\\n\";\necho skjkasdkd([0,8,1,2,1,7]) . \"\\\
    n\";", "    $prime = 0;\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++)\
    \ {\n        if (isPrime($lst[$i])) {\n            if ($lst[$i] > $prime) {\n\
    \                $prime = $lst[$i];\n            }\n        }\n    }\n    $prime_arr\
    \ = str_split($prime);\n    for ($j = 0; $j < count($prime_arr); $j++) {\n   \
    \     $sum += $prime_arr[$j];\n    }\n    return $sum;\n}\n", "    $j=0;\n   \
    \ for($i=0;$i<count($lst);$i++){\n    if($lst[$i]%2!=0 && $lst[$i]%3!=0 && $lst[$i]%5!=0\
    \ && $lst[$i]%7!=0 && $lst[$i]%11!=0){\n    $lst1[$j] = $lst[$i];\n    $j++;\n\
    \    }\n    }\n    $lst_max = max($lst1);\n    $lst_max_str = strval($lst_max);\n\
    \    $sum = 0;\n    for($a=0;$a<strlen($lst_max_str);$a++){\n    $sum = $sum +\
    \ $lst_max_str[$a];\n    }\n    return $sum;\n    }\n    echo skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);\n\
    \    echo skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]);\n    echo skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]);\n\
    \    echo skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]);\n    echo skjkasdkd([0,81,12,3,1,21]);\n\
    \    echo skjkasdkd([0,8,1,2,1,7]);\n    ?>", "$sum = 0;\n$largest = 0;\n$count\
    \ = 0;\n$largest = $lst[0];\nfor($i = 0; $i < count($lst); $i++){\n    if($lst[$i]\
    \ > $largest){\n        $largest = $lst[$i];\n    }\n}\n\nwhile($largest != 0){\n\
    $count = 0;\nfor($i = 1; $i <= $largest; $i++){\n    if($largest % $i == 0){\n\
    \        $count++;\n    }\n}\nif($count == 2){\n    break;\n}\n$largest--;\n}\n\
    \nwhile($largest != 0){\n$sum += $largest % 10;\n$largest = floor($largest / 10);\n\
    }\nreturn $sum;\n}", "    foreach ($lst as $v) {\n        if(is_prime($v)) {\n\
    \            return array_sum(str_split($v));\n        }\n    }\n}\n", "  if(empty($lst))\
    \ return 0;\n  $primes = [];\n  for($i = 0; $i < count($lst); $i++) {\n    $n\
    \ = $lst[$i];\n    if(gmp_prob_prime($n)) {\n      $primes[] = $n;\n    }\n  }\n\
    \  if(empty($primes)) return 0;\n  $largestPrime = max($primes);\n  $digits =\
    \ str_split($largestPrime);\n  return array_sum($digits);\n}", "    $top = max($lst);\n\
    \    $sum = 0;\n    $primes = array();\n    for ($i = 2; $i <= $top; $i++) {\n\
    \        if (isPrime($i)) {\n            $primes[] = $i;\n        }\n    }\n \
    \   for ($i = 0; $i < count($primes); $i++) {\n        $sum += strlen($primes[$i]);\n\
    \    }\n    return $sum;\n}", "    $primes = [];\n    foreach ($lst as $item)\
    \ {\n        if (isPrime($item)) {\n            $primes[] = $item;\n        }\n\
    \    }\n    $maxValue = max($primes);\n    return array_sum(str_split($maxValue));\n\
    }", "\t$ar =[];\n\t$pr =1;\n\t$sum =0;\n\tfor ($i=0; $i <count($lst) ; $i++) {\
    \ \n\t\tif ($lst[$i]==0||$lst[$i]==1) {\n\t\t\t$pr*=$lst[$i];\n\t\t}else{\n\t\t\
    \tfor ($j=2; $j <$lst[$i] ; $j++) { \n\t\t\t\tif ($lst[$i]%$j==0) {\n\t\t\t\t\t\
    $pr*=$j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif ($pr==1) {\n\t\t$pr=0;\n\t}\n\t\
    $num = $pr;\n\twhile ($num > 0)\n\t{\n\t  $sum += $num % 10;\n\t  $num = (int)($num/10);\n\
    \t}\n\treturn $sum;\n}\n$lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3];\n\
    print_r(skjkasdkd($lst));", "\t$primes = [];\n\tforeach ($lst as $key => $value)\
    \ {\n\t\tif(isPrime($value)){\n\t\t\t$primes[] = $value;\n\t\t}\n\t}\n\tif(count($primes)\
    \ == 0){\n\t\treturn 0;\n\t}\n\treturn array_sum(str_split(max($primes)));\n}",
  "    $sum = 0;\n    foreach ($lst as $value) {\n        $str = str_split($value);\n\
    \        $count = count($str);\n        if ($count > $sum) {\n            $sum\
    \ = $count;\n        }\n    }\n    return $sum;\n}\n\necho skjkasdkd([0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3]);\n\
    echo \"<br>\";\necho skjkasdkd([1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1]);\necho\
    \ \"<br>\";\necho skjkasdkd([1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]);\n\
    echo \"<br>\";\necho skjkasdkd([0,724,32,71,99,32,6,0,5,91,83,0,5,6]);\necho \"\
    <br>\";\necho skjkasdkd([0,81,12,3,1,21]);\necho \"<br>\";\necho skjkasdkd([0,8,1,2,1,7]);\n\
    echo \"<br>\";\necho skjkasdkd([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

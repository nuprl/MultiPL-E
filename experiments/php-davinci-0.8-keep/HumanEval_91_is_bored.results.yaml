name: HumanEval_91_is_bored
language: php
results:
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $cnt\
    \ = 0;\n    $S = preg_split('/\\s*[\\.!\\?]\\s*/', $S);\n    foreach ($S as $s)\
    \ {\n        if (preg_match('/^I/', $s)) $cnt++;\n    }\n    return $cnt;\n}\n\
    \nprint_r(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4h7anynf.php:26\n\
    Stack trace:\n#0 /tmp/tmp4h7anynf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4h7anynf.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  foreach (explode(\".\", $S) as $s) {\n    if (strpos($s, \"I\") ===\
    \ 0) $boredoms++;\n  }\n  return $boredoms;\n}\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1si4en9k.php:23\n\
    Stack trace:\n#0 /tmp/tmp1si4en9k.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1si4en9k.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $words = explode(\" \", $sentence);\n    if ($words[0] == \"I\") {\n\
    \      $boredoms += 1;\n    }\n  }\n  return $boredoms;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $numBoredoms\
    \ = 0;\n  $sentences = explode(\".\", $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $words = explode(\" \", $sentence);\n    if ($words[0] == \"I\") $numBoredoms++;\n\
    \  }\n  return $numBoredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6wy1peq.php:28\n\
    Stack trace:\n#0 /tmp/tmpt6wy1peq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpt6wy1peq.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $sentences = explode('.', $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $sentence = trim($sentence);\n        if (strtolower(substr($sentence,\
    \ 0, 2)) == 'i ') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use print\n    // Example: print \"Hello world!\";\n    $sentence_array = explode(\"\
    . \", $S);\n    $count = 0;\n    foreach ($sentence_array as $sentence) {\n  \
    \      if (preg_match(\"/^I/\", $sentence)) {\n            $count += 1;\n    \
    \    }\n    }\n    print($count);\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8gjngvd.php:29\n\
    Stack trace:\n#0 /tmp/tmpu8gjngvd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu8gjngvd.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $tok\
    \ = strtok($S, \"?.!\");\n    $count = 0;\n    while ($tok !== false) {\n    \
    \    if (strpos($tok, \"I\") === 0) {\n            $count++;\n        }\n    \
    \    $tok = strtok(\"?.!\");\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy62u40co.php:27\n\
    Stack trace:\n#0 /tmp/tmpy62u40co.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpy62u40co.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $i\
    \ = 0;\n    $words = explode(\" \", $S);\n    foreach ($words as $word) {\n  \
    \      if ($word == \"I\") {\n            $i++;\n        }\n    }\n    return\
    \ $i;\n}\nprint_r(is_bored(\"Hello world\"));\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkgfgsz7q.php:31\n\
    Stack trace:\n#0 /tmp/tmpkgfgsz7q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkgfgsz7q.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(\" \", $S);\n    $count = 0;\n    foreach ($arr as $word) {\n    \
    \    if ($word == \"I\") {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq77ih79.php:31\n\
    Stack trace:\n#0 /tmp/tmpoq77ih79.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpoq77ih79.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode(' ', $S);\n  $boredoms = 0;\n  foreach ($S as $s) {\n    if (strpos($s,\
    \ 'I') !== false) {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n}\n\
    echo is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73tvb35r.php:28\n\
    Stack trace:\n#0 /tmp/tmp73tvb35r.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp73tvb35r.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode(\".\", $S);\n  $S = implode(\" \", $S);\n  $S = explode(\"?\", $S);\n\
    \  $S = implode(\" \", $S);\n  $S = explode(\"!\", $S);\n  $S = implode(\" \"\
    , $S);\n  $S = explode(\" \", $S);\n  $count = 0;\n  foreach ($S as $item) {\n\
    \    if (strtolower($item) == \"i\") {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdf9ak7qv.php:37\n\
    Stack trace:\n#0 /tmp/tmpdf9ak7qv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdf9ak7qv.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $dot\
    \ = strpos($S, '.');\n    $quest = strpos($S, '?');\n    $excl = strpos($S, '!');\n\
    \    if($dot === false && $quest === false && $excl === false)\n        return\
    \ 0;\n    elseif($dot === false && $quest === false)\n        $pos = $excl;\n\
    \    elseif($dot === false && $excl === false)\n        $pos = $quest;\n    elseif($quest\
    \ === false && $excl === false)\n        $pos = $dot;\n    elseif($dot < $quest\
    \ && $dot < $excl)\n        $pos = $dot;\n    elseif($quest < $dot && $quest <\
    \ $excl)\n        $pos = $quest;\n    else\n        $pos = $excl;\n    if(substr($S,\
    \ 0, $pos) == 'I')\n        return 1 + is_bored(substr($S, $pos + 1));\n    else\n\
    \        return is_bored(substr($S, $pos + 1));\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdjq5zwiz.php:41\n\
    Stack trace:\n#0 /tmp/tmpdjq5zwiz.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdjq5zwiz.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, \"I\");\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9i4n82lg.php:19\n\
    Stack trace:\n#0 /tmp/tmp9i4n82lg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9i4n82lg.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $sentences = explode('. ', $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if (strtolower($words[0])\
    \ == 'i') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $word_array\
    \ = explode(\" \", $S);\n    $sentence_array = explode(array(\".\", \"?\", \"\
    !\"), $S);\n    foreach ($word_array as $word) {\n        if ($word == \"I\")\
    \ {\n            return 1;\n        }\n    }\n    return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 1 to be string, array given in /tmp/tmpkyldpgz6.php\
    \ on line 12\n\nWarning: explode() expects parameter 1 to be string, array given\
    \ in /tmp/tmpkyldpgz6.php on line 12\n\nWarning: explode() expects parameter 1\
    \ to be string, array given in /tmp/tmpkyldpgz6.php on line 12\n\nWarning: explode()\
    \ expects parameter 1 to be string, array given in /tmp/tmpkyldpgz6.php on line\
    \ 12\n\nWarning: explode() expects parameter 1 to be string, array given in /tmp/tmpkyldpgz6.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkyldpgz6.php:30\n\
    Stack trace:\n#0 /tmp/tmpkyldpgz6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkyldpgz6.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(\" \", $S);\n  $count = 0;\n  for ($i = 0; $i < count($arr); $i++)\
    \ {\n    if (strtolower($arr[$i]) == \"i\") {\n      if (preg_match(\"/^[A-Z]/\"\
    , $arr[$i - 1])) {\n        continue;\n      }\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14tru3f3.php:33\n\
    Stack trace:\n#0 /tmp/tmp14tru3f3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp14tru3f3.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = str_replace(\". \", \".\", $S);\n    $S = str_replace(\"! \", \"!\", $S);\n\
    \    $S = str_replace(\"? \", \"?\", $S);\n    $arr = explode(\".\", $S);\n  \
    \  $arr = array_merge($arr, explode(\"!\", $S));\n    $arr = array_merge($arr,\
    \ explode(\"?\", $S));\n    foreach ($arr as $k => $v) {\n        if ($v == \"\
    \") {\n            unset($arr[$k]);\n        }\n    }\n    $boredoms = 0;\n  \
    \  foreach ($arr as $k => $v) {\n        if (strtolower(substr($v, 0, 2)) == \"\
    i \") {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\
    echo is_bored(\"Hello world\");\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmcn4ljzt.php:38\n\
    Stack trace:\n#0 /tmp/tmpmcn4ljzt.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmcn4ljzt.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('.', $S);\n    $count = 0;\n    foreach ($sentences as $s) {\n   \
    \     if (preg_match('/I\\b/', $s)) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n$S = 'The sky is blue. The sun is shining. I love this\
    \ weather.';\necho is_bored($S);\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3ob_q29.php:32\n\
    Stack trace:\n#0 /tmp/tmpz3ob_q29.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpz3ob_q29.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $a\
    \ = preg_split('/[.!?]/', $S);\n    $c = 0;\n    foreach ($a as $v) {\n      \
    \  if (substr($v, 0, 2) == 'I ') $c++;\n    }\n    return $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsg75phxn.php:28\n\
    Stack trace:\n#0 /tmp/tmpsg75phxn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsg75phxn.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = explode(\". \", $S);\n  $sum = 0;\n  foreach ($sentences as $sentence) {\n\
    \    if (substr($sentence, 0, 2) == \"I \") {\n      $sum++;\n    }\n  }\n  return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $words = explode(' ', $S);\n    foreach ($words as $word) {\n    \
    \    if ($word == 'I') {\n            $boredoms++;\n        }\n    }\n    return\
    \ $boredoms;\n}\necho is_bored(\"Hello world\");\necho \"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");\necho \"\\n\";\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mufsle1.php:35\n\
    Stack trace:\n#0 /tmp/tmp5mufsle1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5mufsle1.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/\\!|\\.|\\?/', $S);\n    $count = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        if (preg_match('/^I/', $sentence)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n$S = \"The sky is blue. The sun is shining.\
    \ I love this weather\";\necho is_bored($S);\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvf8x4_0b.php:28\n\
    Stack trace:\n#0 /tmp/tmpvf8x4_0b.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvf8x4_0b.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(' ', $S);\n  $count = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n\
    \    if ($arr[$i] == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66jccsdt.php:30\n\
    Stack trace:\n#0 /tmp/tmp66jccsdt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp66jccsdt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = explode('.!?', $S);\n  $result = 0;\n  foreach ($sentences as $sentence) {\n\
    \    if (substr($sentence, 0, 1) == 'I') {\n      $result++;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm8rmj3gx.php:27\n\
    Stack trace:\n#0 /tmp/tmpm8rmj3gx.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpm8rmj3gx.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $s\
    \ = preg_split('/[?.!]/', $S);\n    $c = 0;\n    foreach ($s as $v) {\n      \
    \  if (preg_match('/I/', $v)) {\n            $c++;\n        }\n    }\n    return\
    \ $c;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzx2byru2.php:26\n\
    Stack trace:\n#0 /tmp/tmpzx2byru2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzx2byru2.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/[.?!]/', $S);\n    $count = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (strtolower(trim($sentence))[0] == 'i') {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\necho is_bored(\"Hello world\");\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh_qmstu.php:28\n\
    Stack trace:\n#0 /tmp/tmpxh_qmstu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxh_qmstu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode(array(\".\",\"?\",\"!\"), $S);\n    $count = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        if (substr($sentence, 0, 2) == \"I \") {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 1 to be string, array given in /tmp/tmpvjbe2562.php\
    \ on line 11\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpvjbe2562.php\
    \ on line 13\n\nWarning: explode() expects parameter 1 to be string, array given\
    \ in /tmp/tmpvjbe2562.php on line 11\n\nWarning: Invalid argument supplied for\
    \ foreach() in /tmp/tmpvjbe2562.php on line 13\n\nWarning: explode() expects parameter\
    \ 1 to be string, array given in /tmp/tmpvjbe2562.php on line 11\n\nWarning: Invalid\
    \ argument supplied for foreach() in /tmp/tmpvjbe2562.php on line 13\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpvjbe2562.php:27\nStack trace:\n\
    #0 /tmp/tmpvjbe2562.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvjbe2562.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ substr_count($S, 'I');\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16z86yja.php:20\n\
    Stack trace:\n#0 /tmp/tmp16z86yja.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp16z86yja.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode('.', $S);\n    $S = str_replace('?', '.', $S);\n    $S = str_replace('!',\
    \ '.', $S);\n    $S = explode('.', $S);\n    $counter = 0;\n    foreach ($S as\
    \ $k => $v) {\n        if (substr($v, 0, 2) == 'I ') {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}\nfunction candidate(...$args) {\n \
    \   return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 2 to be string, array given in /tmp/tmp1i2f5qb4.php\
    \ on line 14\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmp1i2f5qb4.php\
    \ on line 16\n\nWarning: explode() expects parameter 2 to be string, array given\
    \ in /tmp/tmp1i2f5qb4.php on line 14\n\nWarning: Invalid argument supplied for\
    \ foreach() in /tmp/tmp1i2f5qb4.php on line 16\n\nWarning: explode() expects parameter\
    \ 2 to be string, array given in /tmp/tmp1i2f5qb4.php on line 14\n\nWarning: Invalid\
    \ argument supplied for foreach() in /tmp/tmp1i2f5qb4.php on line 16\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp1i2f5qb4.php:30\nStack trace:\n\
    #0 /tmp/tmp1i2f5qb4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1i2f5qb4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sub_sentences = preg_split('/[.!?]/', $S);\n  foreach ($sub_sentences\
    \ as $sub_sentence) {\n    $sub_sentence = preg_replace('/^\\s+/', '', $sub_sentence);\n\
    \    if (preg_match('/^I/', $sub_sentence)) {\n      $boredoms++;\n    }\n  }\n\
    \  return $boredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_xkf1ck.php:27\n\
    Stack trace:\n#0 /tmp/tmp8_xkf1ck.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8_xkf1ck.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_split('/[.?!]/', $S);\n    $count = 0;\n    foreach ($S as $s) {\n  \
    \      if (substr($s, 0, 2) == 'I ') $count++;\n    }\n    return $count;\n}\n\
    $S = \"The sky is blue. The sun is shining. I love this weather\";\necho is_bored($S);\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdjhh7bcl.php:29\n\
    Stack trace:\n#0 /tmp/tmpdjhh7bcl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdjhh7bcl.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ .= \" \";\n  $length = strlen($S);\n  $boredoms = 0;\n  $i = 0;\n  while ($i\
    \ < $length) {\n    $curr = $S[$i];\n    if ($curr == \"I\") {\n      $boredoms++;\n\
    \    }\n    if ($curr == \"!\" || $curr == \".\" || $curr == \"?\") {\n      $i++;\n\
    \      $curr = $S[$i];\n      while ($curr == \" \") {\n        $i++;\n      \
    \  $curr = $S[$i];\n      }\n    }\n    $i++;\n  }\n  return $boredoms;\n}\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptd4b614u.php:38\n\
    Stack trace:\n#0 /tmp/tmptd4b614u.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptd4b614u.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ count(preg_split('/\\?|\\.|!/', $S, -1, PREG_SPLIT_NO_EMPTY))-1;\n}\n\necho\
    \ is_bored(\"The sky is blue. The sun is shining. I love this weather\").\"\\\
    n\";\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1mfbhio.php:23\n\
    Stack trace:\n#0 /tmp/tmpk1mfbhio.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpk1mfbhio.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ Your code goes here\n  $array_of_sentences = explode(\".\", $S);\n  $count =\
    \ 0;\n  foreach ($array_of_sentences as $sentence) {\n    if (substr($sentence,\
    \ 0, 8) == \"I am bo\") {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcucru19n.php:28\n\
    Stack trace:\n#0 /tmp/tmpcucru19n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpcucru19n.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = explode('. ', $S);\n  $count = 0;\n  foreach ($sentences as $sentence) {\n\
    \    if (substr($sentence, 0, 2) == 'I ') $count++;\n  }\n  return $count;\n}\n\
    echo is_bored(\"The sky is blue. The sun is shining. I love this weather\\n\"\
    );\necho is_bored(\"Hello world\\n\");\n\nfunction candidate(...$args) {\n   \
    \ return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '10'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Your code here.\n    return 0;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8r672ybt.php:21\n\
    Stack trace:\n#0 /tmp/tmp8r672ybt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8r672ybt.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  foreach (explode(\"!\", $S) as $sentence) {\n    foreach (explode(\"\
    ?\", $sentence) as $sentence) {\n      $words = explode(\".\", $sentence);\n \
    \     if ($words[0] == \"I\") {\n        $boredoms++;\n      }\n    }\n  }\n \
    \ return $boredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuevhazni.php:29\n\
    Stack trace:\n#0 /tmp/tmpuevhazni.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpuevhazni.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(' ', $S);\n    $count = 0;\n    foreach ($arr as $word) {\n      \
    \  if ($word === 'I') {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00sfuuzz.php:30\n\
    Stack trace:\n#0 /tmp/tmp00sfuuzz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp00sfuuzz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $n\
    \ = 0;\n    $sentences = explode(\". \", $S);\n    foreach ($sentences as $sentence)\
    \ {\n        if (substr($sentence, 0, 2) == \"I \") {\n            $n++;\n   \
    \     }\n    }\n    return $n;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $return\
    \ = 0;\n    $sentences = preg_split('/[.?!]/', $S);\n    foreach ($sentences as\
    \ $sentence) {\n        if (substr($sentence, 0, 1) == 'I') {\n            $return++;\n\
    \        }\n    }\n    return $return;\n}\n\nassert(0 == is_bored(\"Hello world\"\
    ));\nassert(1 == is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));\nassert(0 == is_bored(\"I am bored!\"));\nassert(0 == is_bored(\"All is well\"\
    ));\nassert(0 == is_bored(\"\"));\nassert(0 == is_bored(\".\"));\nassert(1 ==\
    \ is_bored(\"I like eating cake. And pie. And cookies.\"));\nassert(1 == is_bored(\"\
    I like eating cake. And pie. And cookies. And pie. And cookies.\"));\nassert(2\
    \ == is_bored(\"I like eating cake. And pie. And cookies. And pie. And cookies.\
    \ And pie. And cookies.\"));\nassert(1 == is_bored(\"I like eating cake. And pie.\
    \ And cookies. And pie. And cookies. And pie. And cookies. And pie. And cookies.\"\
    ));\nassert(0 == is_bored(\"I like eating cake. And pie. And cookies. And pie.\
    \ And cookies. And pie. And cookies. And pie. And cookies. And pie. And cookies.\"\
    ));\nassert(0 == is_bored(\"I like eating cake. And pie. And cookies. And pie.\
    \ And cookies. And pie. And cookies. And pie. And cookies. And pie. And cookies.\
    \ And pie. And cookies.\"));\nassert(0 == is_bored(\"I like eating cake. And pie.\
    \ And cookies. And pie. And cookies. And pie. And cookies. And pie. And cookies.\
    \ And pie. And cookies. And pie. And cookies. And pie. And cookies.\"));\nassert(0\
    \ == is_bored(\"I like eating cake. And pie. And cookies. And pie. And cookies.\
    \ And pie. And cookies. And pie. And cookies. And pie. And cookies. And pie. And\
    \ cookies. And pie. And cookies. And\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpudc6fene.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ your code here\n    $sentence = explode('.', $S);\n    $boredoms = 0;\n    foreach\
    \ ($sentence as $sent) {\n        $words = explode(' ', $sent);\n        if (\
    \ $words[0] == 'I' ) {\n            $boredoms++;\n        }\n    }\n    return\
    \ $boredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3v1sbli.php:31\n\
    Stack trace:\n#0 /tmp/tmpm3v1sbli.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm3v1sbli.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ preg_match_all('/I/', $S);\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiwqp9bk.php:20\n\
    Stack trace:\n#0 /tmp/tmpuiwqp9bk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpuiwqp9bk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('. ', $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (strstr($sentence, 'I ')) {\n            $boredoms++;\n      \
    \  }\n    }\n    return $boredoms;\n}\necho is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\");\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjld8x4rv.php:31\n\
    Stack trace:\n#0 /tmp/tmpjld8x4rv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjld8x4rv.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $sentence = explode(\" \", $sentence);\n    if ($sentence[0] == \"I\"\
    ) $boredoms++;\n  }\n  return $boredoms;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\tif\
    \ (is_string($S)) {\n\t\t$sentences = explode(\".\", $S);\n\t\t$sentences = array_merge($sentences,\
    \ explode(\"?\", $S));\n\t\t$sentences = array_merge($sentences, explode(\"!\"\
    , $S));\n\t\t$count = 0;\n\t\tforeach ($sentences as $sentence) {\n\t\t\t$sentence\
    \ = explode(\" \", $sentence);\n\t\t\tif (count($sentence) > 0) {\n\t\t\t\tif\
    \ ($sentence[0] == \"I\") {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\
    \treturn $count;\n\t}\n\treturn -1;\n}\n\n$S = \"The sky is blue. The sun is shining.\
    \ I love this weather\";\necho is_bored($S);\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzeoa2k91.php:39\n\
    Stack trace:\n#0 /tmp/tmpzeoa2k91.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzeoa2k91.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ your code here\n  $exploded = explode(\" \", $S);\n  $bored = 0;\n  foreach\
    \ ($exploded as $word) {\n    if ($word[0] == \"I\") {\n      $bored += 1;\n \
    \   }\n  }\n  return $bored;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpo18qad.php:28\n\
    Stack trace:\n#0 /tmp/tmphpo18qad.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphpo18qad.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $trimmed_string = str_replace([\"\\r\", \"\\n\", \"\\t\"], \"\", $S);\n\
    \    $trimmed_string = preg_replace('/ {2,}/', ' ', $trimmed_string);\n    $punctuation\
    \ = ['?', '.', '!'];\n    $trimmed_string = str_replace($punctuation, '|', $trimmed_string);\n\
    \    $sentences = explode('|', $trimmed_string);\n    for ($i = 0; $i < count($sentences);\
    \ $i++) {\n        $sentence = $sentences[$i];\n        $sentence = trim($sentence);\n\
    \        $words = explode(' ', $sentence);\n        if (strtolower($words[0])\
    \ == 'i') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $words\
    \ = explode(' ', $S);\n  $count = 0;\n  for ($i = 0; $i < count($words); $i++)\
    \ {\n    if ($words[$i] == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n$S = \"The sky is blue. The sun is shining. I love this weather\";\necho is_bored($S);\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbsocrng5.php:32\n\
    Stack trace:\n#0 /tmp/tmpbsocrng5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbsocrng5.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode(array('.', '?', '!'), $S);\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        if (strpos($sentence, 'I') === 0) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\n\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\");\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 1 to be string, array given in /tmp/tmpb9m42mbb.php\
    \ on line 11\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpb9m42mbb.php\
    \ on line 13\n0\nWarning: explode() expects parameter 1 to be string, array given\
    \ in /tmp/tmpb9m42mbb.php on line 11\n\nWarning: Invalid argument supplied for\
    \ foreach() in /tmp/tmpb9m42mbb.php on line 13\n\nWarning: explode() expects parameter\
    \ 1 to be string, array given in /tmp/tmpb9m42mbb.php on line 11\n\nWarning: Invalid\
    \ argument supplied for foreach() in /tmp/tmpb9m42mbb.php on line 13\n\nWarning:\
    \ explode() expects parameter 1 to be string, array given in /tmp/tmpb9m42mbb.php\
    \ on line 11\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpb9m42mbb.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9m42mbb.php:29\n\
    Stack trace:\n#0 /tmp/tmpb9m42mbb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpb9m42mbb.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(\" \", $S);\n  foreach ($arr as $value) {\n    if (strtolower($value)\
    \ == \"i\") {\n      return 1;\n    }\n  }\n  return 0;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8n66igr.php:28\n\
    Stack trace:\n#0 /tmp/tmpt8n66igr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpt8n66igr.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $words\
    \ = explode(' ', $S);\n  return substr_count($S, 'I') - count($words);\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk25nc_a7.php:20\n\
    Stack trace:\n#0 /tmp/tmpk25nc_a7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpk25nc_a7.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode('.', $S);\n    $S = explode('?', $S);\n    $S = explode('!', $S);\n\
    \    $result = 0;\n    foreach ($S as $word) {\n        if (substr($word, 0, 2)\
    \ == 'I ') {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\necho is_bored(\"I love this weather!\");\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 2 to be string, array given in /tmp/tmpex4kojtc.php\
    \ on line 12\n0\nWarning: explode() expects parameter 2 to be string, array given\
    \ in /tmp/tmpex4kojtc.php on line 12\n\nWarning: explode() expects parameter 2\
    \ to be string, array given in /tmp/tmpex4kojtc.php on line 12\n\nWarning: explode()\
    \ expects parameter 2 to be string, array given in /tmp/tmpex4kojtc.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpex4kojtc.php:30\n\
    Stack trace:\n#0 /tmp/tmpex4kojtc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpex4kojtc.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ preg_match_all('/I/', $S, $match);\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc93f2d8s.php:19\n\
    Stack trace:\n#0 /tmp/tmpc93f2d8s.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpc93f2d8s.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = preg_split('/[.?!]/', $S);\n  $nb = 0;\n  foreach ($S as $s) {\n    if (strpos($s,\
    \ 'I') === 0) {\n      $nb++;\n    }\n  }\n  return $nb;\n}\n\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\").PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_w4tdn2r.php:28\n\
    Stack trace:\n#0 /tmp/tmp_w4tdn2r.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_w4tdn2r.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $sentences = explode('. ', $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if ($words[0] == 'I')\
    \ {\n            $count += 1;\n        }\n    }\n    return $count;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\\n\");\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $count\
    \ = 0;\n  $sentences = explode(\".\", $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $sentence = explode(\" \", $sentence);\n    if ($sentence[0] == \"I\"\
    ) {\n      $count += 1;\n    }\n  }\n  return $count;\n}\necho is_bored(\"The\
    \ sky is blue. The sun is shining. I love this weather\").\"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwj31sfw4.php:32\n\
    Stack trace:\n#0 /tmp/tmpwj31sfw4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwj31sfw4.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sentences = explode('.', $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $first_word = strtok($sentence, ' ');\n    if ($first_word == 'I') {\n\
    \      $boredoms++;\n    }\n  }\n  return $boredoms;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match_all('/[I].*[\\.|\\!|\\?]/', $S);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b9yx2ib.php:20\n\
    Stack trace:\n#0 /tmp/tmp5b9yx2ib.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5b9yx2ib.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $array\
    \ = explode(\" \", $S);\n  $i=0;\n  foreach ($array as $key => $value) {\n   \
    \ if ($value == \"I\"){\n      $i++;\n    }\n  }\n  return $i;\n}\n\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb420p87w.php:33\n\
    Stack trace:\n#0 /tmp/tmpb420p87w.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb420p87w.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $S = explode(\" \", $S);\n    for ($i = 0; $i < count($S); $i++) {\n\
    \        if ($S[$i] == \"I\") {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpil77_amx.php:30\n\
    Stack trace:\n#0 /tmp/tmpil77_amx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpil77_amx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = substr_count($S, \"I\");\n    echo $boredoms;\n}\nis_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\");\necho \"\\n\";\nis_bored(\"The sun\
    \ is shining. I love this weather\");\necho \"\\n\";\nis_bored(\"Hello world\"\
    );\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n0\n0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqcysaswo.php:25\n\
    Stack trace:\n#0 /tmp/tmpqcysaswo.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqcysaswo.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = explode('. ', $S);\n  $count = 0;\n  foreach ($sentences as $sentence) {\n\
    \    if (substr($sentence, 0, 2) == 'I ') {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('.', $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if (strtolower($words[0])\
    \ == 'i') $boredoms++;\n    }\n    return $boredoms;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6deypj1o.php:29\n\
    Stack trace:\n#0 /tmp/tmp6deypj1o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6deypj1o.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $word\
    \ = 'I';\n    $count = 0;\n    $sentences = preg_split('/(?<=[.?!])\\s*/', $S,\
    \ -1, PREG_SPLIT_NO_EMPTY);\n    foreach ($sentences as $sentence) {\n       \
    \ $words = explode(' ', $sentence);\n        if ($words[0] == $word) {\n     \
    \       $count++;\n        }\n    }\n    return $count;\n}\necho is_bored(\"The\
    \ sky is blue. The sun is shining. I love this weather\");\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ count(array_filter(array_map('trim', explode('!', $S)),\n        function($str)\
    \ {\n            return preg_match('/^I/', $str);\n        }));\n}\n\necho is_bored('Hello\
    \ world'), \"\\n\";\necho is_bored('The sky is blue. The sun is shining. I love\
    \ this weather'), \"\\n\";\necho is_bored('The sky is blue. The sun is shining.\
    \ I love this weather! I was waiting for this beautiful day!'), \"\\n\";\necho\
    \ is_bored('I am bored! I want to go to the beach!'), \"\\n\";\necho is_bored('The\
    \ sun is shining. I love this weather. The sky is blue.'), \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "0\n0\n1\n2\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13h0rp73.php:29\n\
    Stack trace:\n#0 /tmp/tmp13h0rp73.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp13h0rp73.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(' ', $S);\n    $cnt = 0;\n    foreach ($arr as $word) {\n        if\
    \ ($word === 'I') {\n            $cnt++;\n        }\n    }\n    return $cnt;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnh3wjbb0.php:31\n\
    Stack trace:\n#0 /tmp/tmpnh3wjbb0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnh3wjbb0.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $split_string\
    \ = explode(\" \", $S);\n    $count = 0;\n    foreach ($split_string as $i =>\
    \ $word) {\n        if ($word == \"I\") {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd2ges5tx.php:31\n\
    Stack trace:\n#0 /tmp/tmpd2ges5tx.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpd2ges5tx.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $matches\
    \ = preg_split('/\\?|\\.|\\!/', $S);\n    $boredoms = 0;\n    foreach ($matches\
    \ as $match) {\n        if (preg_match('/^\\s*I/', $match)) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\").\"\\n\";\necho is_bored(\"Hello world\"\
    ).\"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfra3dqt2.php:28\n\
    Stack trace:\n#0 /tmp/tmpfra3dqt2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfra3dqt2.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ split the strings on the delimiters\n  $A = preg_split('/[?.!]/', $S);\n  $boredoms\
    \ = 0;\n  foreach ($A as $sentence) {\n    $sentence = trim($sentence);\n    if\
    \ (preg_match('/^I\\s/', $sentence)) {\n      // the sentence starts with I, increase\
    \ the boredoms count\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n}\n\
    \nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bor\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9olqhqqa.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(\".\", $S);\n    $S = explode(\"?\", $S[0]);\n    $S = explode(\"\
    !\", $S[0]);\n    $S = explode(\" \", $S[0]);\n    if ($S[0] == \"I\")\n     \
    \   return (1);\n    return (0);\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpra0k23pk.php:28\n\
    Stack trace:\n#0 /tmp/tmpra0k23pk.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpra0k23pk.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = explode(['.', '?', '!'], $S);\n  $num_boredoms = 0;\n  foreach ($sentences\
    \ as $sentence) {\n    $words = explode(' ', $sentence);\n    if (count($words)\
    \ > 0 && $words[0] == 'I') {\n      $num_boredoms++;\n    }\n  }\n  return $num_boredoms;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 1 to be string, array given in /tmp/tmpve18tcrj.php\
    \ on line 11\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpve18tcrj.php\
    \ on line 13\n\nWarning: explode() expects parameter 1 to be string, array given\
    \ in /tmp/tmpve18tcrj.php on line 11\n\nWarning: Invalid argument supplied for\
    \ foreach() in /tmp/tmpve18tcrj.php on line 13\n\nWarning: explode() expects parameter\
    \ 1 to be string, array given in /tmp/tmpve18tcrj.php on line 11\n\nWarning: Invalid\
    \ argument supplied for foreach() in /tmp/tmpve18tcrj.php on line 13\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpve18tcrj.php:29\nStack trace:\n\
    #0 /tmp/tmpve18tcrj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpve18tcrj.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use print\n    // Example: print \"Hello world!\";\n    $arr = explode(\" \"\
    , $S);\n    return count(array_filter($arr, function($el) {\n        return $el\
    \ == \"I\";\n    }));\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxc_ptp3j.php:30\n\
    Stack trace:\n#0 /tmp/tmpxc_ptp3j.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxc_ptp3j.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode('.', $S);\n  $S = array_filter($S);\n  $S = implode('.', $S);\n  $S\
    \ = explode('?', $S);\n  $S = array_filter($S);\n  $S = implode('?', $S);\n  $S\
    \ = explode('!', $S);\n  $S = array_filter($S);\n  $S = implode('!', $S);\n  $S\
    \ = explode(' ', $S);\n  foreach ($S as $v) {\n    if ($v == 'I') {\n      $count\
    \ = $count + 1;\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm6g2nk1a.php:33\n\
    Stack trace:\n#0 /tmp/tmpm6g2nk1a.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm6g2nk1a.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode('.', $S);\n    $Boredoms = 0;\n    foreach ($S as $Sentence) {\n \
    \       $Words = explode(' ', $Sentence);\n        if ($Words[0] == 'I') $Boredoms++;\n\
    \    }\n    return $Boredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6fe5yv1g.php:28\n\
    Stack trace:\n#0 /tmp/tmp6fe5yv1g.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6fe5yv1g.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $sentences = explode('. ', $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if ($words[0] == 'I')\
    \ {\n            $boredoms += 1;\n        }\n    }\n    return $boredoms;\n}\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(' ', $S);\n  $boredoms = 0;\n  for ($i = 0; $i < count($arr); $i++)\
    \ {\n    if ($arr[$i] == 'I') {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibz6jinu.php:31\n\
    Stack trace:\n#0 /tmp/tmpibz6jinu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpibz6jinu.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_split('/\\.|\\?|\\!/', $S);\n    $count = 0;\n    foreach ($S as $value)\
    \ {\n        if (preg_match('/^\\s*I\\s/', $value)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $phrases\
    \ = preg_split('/[.!?]/', $S);\n    $count = 0;\n    foreach ($phrases as $phrase)\
    \ {\n        if (preg_match('/^I\\s*/', $phrase)) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}\n$S = 'The sky is blue. The sun is shining.\
    \ I love this weather';\necho is_bored($S) . \"\\n\";\n$S = 'Hello world';\necho\
    \ is_bored($S) . \"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5enoxvc0.php:30\n\
    Stack trace:\n#0 /tmp/tmp5enoxvc0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5enoxvc0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $ex\
    \ = explode(\" \", $S);\n    $count = 0;\n    foreach ($ex as $word) {\n     \
    \   if ($word == \"I\") {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n$S = \"Hello world\";\n$S = \"The sky is blue. The sun is shining.\
    \ I love this weather\";\n$S = \"The sky is blue. The sun is shining. I love this\
    \ weather!I want to go outside.I want to eat some ice cream.I want to visit the\
    \ zoo.\";\n$S = \"my name is The sky is blue. The sun is shining. I love this\
    \ weather\";\n$S = \"my name is The sky is blue. The sun is shining. I love this\
    \ weather!\";\n$S = \"my name is The sky is blue. The sun is shining. I love this\
    \ weather!I want to go outside.I want to eat some ice cream.I want to visit the\
    \ zoo.\";\n\necho is_bored($S);\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2sijnvu.php:39\n\
    Stack trace:\n#0 /tmp/tmpb2sijnvu.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpb2sijnvu.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode(' ', $S);\n  $boredoms = 0;\n  for ($i = 0; $i < count($S); $i++)\
    \ {\n    if ($S[$i] == 'I') {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n\
    }\n\n$S = \"The sky is blue. The sun is shining. I love this weather.\";\necho\
    \ is_bored($S) . PHP_EOL;\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vovl0al.php:33\n\
    Stack trace:\n#0 /tmp/tmp8vovl0al.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8vovl0al.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $segments = explode(\". \", $S);\n  foreach ($segments as $segment)\
    \ {\n    if (explode(\" \", $segment)[0] == \"I\") {\n      $boredoms++;\n   \
    \ }\n  }\n  return $boredoms;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use print\n    // Example: print \"Hello world!\";\n    $sentences = preg_split('/[.!?]/',\
    \ $S);\n    $boredom = 0;\n    foreach ($sentences as $sentence) {\n        $words\
    \ = explode(' ', $sentence);\n        if ($words[0] == 'I') {\n            $boredom++;\n\
    \        }\n    }\n    print $boredom;\n}\nfunction candidate(...$args) {\n  \
    \  return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50c4d3ww.php:29\n\
    Stack trace:\n#0 /tmp/tmp50c4d3ww.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50c4d3ww.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ strlen(preg_replace('/((I)|(\\.)|(\\?))/', '', $S));\n}\n$S = 'Hello world';\n\
    echo is_bored($S);\necho \"\\n\";\n$S = 'The sky is blue. The sun is shining.\
    \ I love this weather';\necho is_bored($S);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n53\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5u6y7jyp.php:24\n\
    Stack trace:\n#0 /tmp/tmp5u6y7jyp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5u6y7jyp.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, 'I') - substr_count($S, 'I ');\n}\necho is_bored(\"Hello world\"\
    );\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "00\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz703dlzy.php:21\n\
    Stack trace:\n#0 /tmp/tmpz703dlzy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpz703dlzy.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(' ', $S);\n    $boredoms = 0;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if (strtolower($arr[$i]) == 'i') {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92_7vdbq.php:30\n\
    Stack trace:\n#0 /tmp/tmp92_7vdbq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp92_7vdbq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ substr_count($S, 'I');\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpig25vn7c.php:19\n\
    Stack trace:\n#0 /tmp/tmpig25vn7c.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpig25vn7c.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/[.?!]/', $S);\n    $count = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (strpos($sentence, 'I') === 0) {\n            $count++;\n    \
    \    }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjei6ilwv.php:27\n\
    Stack trace:\n#0 /tmp/tmpjei6ilwv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjei6ilwv.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$S\
    \ = explode(' ', $S);\n\t$res = 0;\n\tforeach ($S as $s) {\n\t\tif (strlen($s)\
    \ == 1 && ($s == '.' || $s == '?' || $s == '!')) {\n\t\t\t$res++;\n\t\t}\n\t}\n\
    \treturn $res;\n}\n$S = \"Hello world\";\nvar_dump(is_bored($S));\n$S = \"The\
    \ sky is blue. The sun is shining. I love this weather\";\nvar_dump(is_bored($S));\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(0)\nint(0)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4zq1m3z.php:33\n\
    Stack trace:\n#0 /tmp/tmpc4zq1m3z.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpc4zq1m3z.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $text\
    \ = explode(\" \", $S);\n  $i = 0;\n  foreach ($text as $value) {\n    if ($value\
    \ == \"I\") {\n      $i++;\n    }\n  }\n  return $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeu_zlm3k.php:31\n\
    Stack trace:\n#0 /tmp/tmpeu_zlm3k.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpeu_zlm3k.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $n\
    \ = 0;\n    $S = explode('.', $S);\n    for ($i = 0; $i < count($S); $i++) {\n\
    \        $S[$i] = explode('?', $S[$i]);\n        for ($j = 0; $j < count($S[$i]);\
    \ $j++) {\n            $S[$i][$j] = explode('!', $S[$i][$j]);\n            for\
    \ ($k = 0; $k < count($S[$i][$j]); $k++) {\n                $S[$i][$j][$k] = trim($S[$i][$j][$k]);\n\
    \                if (strtolower(substr($S[$i][$j][$k], 0, 2)) == 'i ') {\n   \
    \                 $n++;\n                }\n            }\n        }\n    }\n\
    \    return $n;\n}\necho is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\") . \"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$arr\
    \ = explode(' ',$S);\n\t$count = 0;\n\tforeach ($arr as $value) {\n\t\tif (strtolower($value)\
    \ == 'i') {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3ntmred.php:31\n\
    Stack trace:\n#0 /tmp/tmpu3ntmred.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpu3ntmred.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $a\
    \ = explode(\" \", $S);\n    $c = 0;\n    foreach ($a as $v) {\n        if (strpos($v,\
    \ \"I\") === 0) {\n            $c++;\n        }\n    }\n    return $c;\n}\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8id_4k9i.php:26\n\
    Stack trace:\n#0 /tmp/tmp8id_4k9i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8id_4k9i.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(' ', str_replace(['.', '?', '!'], [' .', ' ?', ' !'], $S));\n    $r\
    \ = 0;\n    foreach ($S as $s) {\n        if ($s == 'I') {\n            $r++;\n\
    \        }\n    }\n    return $r;\n}\necho is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\").\"\\n\";\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmfk15_9.php:31\n\
    Stack trace:\n#0 /tmp/tmpnmfk15_9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnmfk15_9.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(\" \", $S);\n  $res = 0;\n  $isFirst = true;\n  foreach ($arr as $word)\
    \ {\n    if (strpos($word, \"I\") !== false && $isFirst) {\n      $res++;\n  \
    \    $isFirst = false;\n    }\n    if (strpos($word, \".\") !== false || strpos($word,\
    \ \"?\") !== false || strpos($word, \"!\") !== false) {\n      $isFirst = true;\n\
    \    }\n  }\n  return $res;\n}\n$S = \"I am bored. I am not.\";\necho is_bored($S)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy532fc7n.php:33\n\
    Stack trace:\n#0 /tmp/tmpy532fc7n.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy532fc7n.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $result\
    \ = 0;\n  $sentences = preg_split('/[.?!]/', $S);\n  foreach ($sentences as $sentence)\
    \ {\n    if (preg_match('/^I/', $sentence)) {\n      $result++;\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfp_3w8s.php:27\n\
    Stack trace:\n#0 /tmp/tmptfp_3w8s.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptfp_3w8s.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $str_arr\
    \ = explode(\" \", $S);\n  $boredoms = 0;\n  foreach ($str_arr as $val) {\n  \
    \  if (strtolower($val) == \"i\") {\n      $boredoms += 1;\n    }\n  }\n  return\
    \ $boredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ywojzat.php:30\n\
    Stack trace:\n#0 /tmp/tmp9ywojzat.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9ywojzat.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $arr = explode(' ', $S);\n    for ($i = 0; $i < count($arr); $i++)\
    \ {\n        if ($arr[$i] == 'I') {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9o5ii89q.php:30\n\
    Stack trace:\n#0 /tmp/tmp9o5ii89q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9o5ii89q.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match_all('/^I/m', $S);\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn0ib4ryp.php:20\n\
    Stack trace:\n#0 /tmp/tmpn0ib4ryp.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpn0ib4ryp.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $sentences = preg_split('/[.?!]/', $S);\n    foreach ($sentences as\
    \ $sentence) {\n        if (strpos($sentence, 'I') === 0) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxftd2j7s.php:26\n\
    Stack trace:\n#0 /tmp/tmpxftd2j7s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxftd2j7s.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode(\" \", $S);\n  for ($i = 0; $i < count($S); $i++) {\n    if (strtolower($S[$i])\
    \ == \"i\") {\n      $i++;\n      if (strtolower($S[$i]) == \"am\") {\n      \
    \  $i++;\n        if (strtolower($S[$i]) == \"bored\") {\n          $bored++;\n\
    \        }\n      }\n    }\n  }\n  return $bored;\n}\n\necho is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather\");\necho \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptlvhqfub.php:34\n\
    Stack trace:\n#0 /tmp/tmptlvhqfub.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptlvhqfub.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sentences = explode(['.', '?', '!'], $S);\n  foreach ($sentences as\
    \ $sentence) {\n    if (preg_match('/^\\s*I\\s/', $sentence)) {\n      $boredoms++;\n\
    \    }\n  }\n  return $boredoms;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 1 to be string, array given in /tmp/tmp07er3rp7.php\
    \ on line 12\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmp07er3rp7.php\
    \ on line 13\n\nWarning: explode() expects parameter 1 to be string, array given\
    \ in /tmp/tmp07er3rp7.php on line 12\n\nWarning: Invalid argument supplied for\
    \ foreach() in /tmp/tmp07er3rp7.php on line 13\n\nWarning: explode() expects parameter\
    \ 1 to be string, array given in /tmp/tmp07er3rp7.php on line 12\n\nWarning: Invalid\
    \ argument supplied for foreach() in /tmp/tmp07er3rp7.php on line 13\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp07er3rp7.php:27\nStack trace:\n\
    #0 /tmp/tmp07er3rp7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp07er3rp7.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, \"I\");\n}\n\nprint(is_bored(\"The sky is blue. The sun is\
    \ shining. I love this weather\"));\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnliw1cm.php:21\n\
    Stack trace:\n#0 /tmp/tmpdnliw1cm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdnliw1cm.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $i\
    \ = 0;\n    $S = preg_split('/[!?.]/', $S);\n    foreach ($S as $s) {\n      \
    \  if (strtolower(substr($s, 0, 1)) == 'i') $i++;\n    }\n    return $i;\n}\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlgsaj57.php:24\n\
    Stack trace:\n#0 /tmp/tmprlgsaj57.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprlgsaj57.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$sentences\
    \ = explode('.', $S);\n\t$i = 0;\n\tforeach ($sentences as $sentence) {\n\t\t\
    if (preg_match('/^\\s*I/', $sentence)) $i++;\n\t}\n\treturn $i;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . \"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining.\") . \"\\n\";\necho is_bored(\"I'm bored.\"\
    ) . \"\\n\";\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n0\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8o2fffmz.php:28\n\
    Stack trace:\n#0 /tmp/tmp8o2fffmz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8o2fffmz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ initialize a count variable to keep track of the boredom\n    $count = 0;\n\
    \    // split the input string into an array of words\n    $words = explode(\"\
    \ \", $S);\n    // loop through each word\n    foreach ($words as $w) {\n    \
    \    // if the word is \"I\", increment the count\n        if ($w == \"I\") $count++;\n\
    \    }\n    // return the count\n    return $count;\n}\necho is_bored(\"Hello\
    \ world\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining. I\
    \ love this weather\") . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7lnrg3g.php:36\n\
    Stack trace:\n#0 /tmp/tmpa7lnrg3g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa7lnrg3g.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = preg_split('/(\\.|\\?|\\!)/', $S, -1, PREG_SPLIT_NO_EMPTY);\n    $nb_boredoms\
    \ = 0;\n    foreach ($boredoms as $boredom) {\n        if (preg_match('/^\\s*I\\\
    s/', $boredom)) {\n            $nb_boredoms++;\n        }\n    }\n    return $nb_boredoms;\n\
    }\n\necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\") . \"\\n\";\necho is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather.\") . \"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather. I love this weather.\"\
    ) . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining.\") . \"\\n\"\
    ;\necho is_bored(\"The sky is blue. The sun is shining! I love this weather?\"\
    ) . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining! I love this\
    \ weather? I love this weather?\") . \"\\n\";\necho is_bored(\"The sky is blue.\
    \ The sun is shining! I love this weather! I love this weather?\") . \"\\n\";\n\
    echo is_bored(\"The sky is blue. The sun is shining! I love this weather! I love\
    \ this weather!\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining!\
    \ I love this weather! I love this weather! I love this weather! I love this weather!\"\
    ) . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining! I love this\
    \ weather? I love this weather! I love this weather?\") . \"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining! I love this weather? I love this weather!\
    \ I love this weather! I love this weather?\") . \"\\n\";\necho is_bored(\"The\
    \ sky is blue. The sun is shining! I love this weather? I love this weather! I\
    \ love this weather\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzq0mx239.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(\" \", $S);\n    $result = 0;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] == \"I\") {\n            $result++;\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeo8mvn9h.php:30\n\
    Stack trace:\n#0 /tmp/tmpeo8mvn9h.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpeo8mvn9h.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode(array('.', '?', '!'), $S);\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        if (strpos($sentence, 'I') === 0) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\n\necho is_bored(\"Hello world\")\
    \ . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\") . \"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 1 to be string, array given in /tmp/tmpoxxz6ihx.php\
    \ on line 11\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpoxxz6ihx.php\
    \ on line 13\n0\n\nWarning: explode() expects parameter 1 to be string, array\
    \ given in /tmp/tmpoxxz6ihx.php on line 11\n\nWarning: Invalid argument supplied\
    \ for foreach() in /tmp/tmpoxxz6ihx.php on line 13\n0\n\nWarning: explode() expects\
    \ parameter 1 to be string, array given in /tmp/tmpoxxz6ihx.php on line 11\n\n\
    Warning: Invalid argument supplied for foreach() in /tmp/tmpoxxz6ihx.php on line\
    \ 13\n\nWarning: explode() expects parameter 1 to be string, array given in /tmp/tmpoxxz6ihx.php\
    \ on line 11\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpoxxz6ihx.php\
    \ on line 13\n\nWarning: explode() expects parameter 1 to be string, array given\
    \ in /tmp/tmpoxxz6ihx.php on line 11\n\nWarning: Invalid argument supplied for\
    \ foreach() in /tmp/tmpoxxz6ihx.php on line 13\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpoxxz6ihx.php:30\nStack trace:\n#0 /tmp/tmpoxxz6ihx.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpoxxz6ihx.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = preg_split('/(!|\\.|\\?)/', $S);\n  $count = 0;\n  foreach ($sentences as\
    \ $sentence) {\n    if (strpos($sentence, 'I') === 0) {\n      $count++;\n   \
    \ }\n  }\n  return $count;\n}\necho is_bored(\"Hello world\");\necho \"<br>\"\
    ;\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0<br>0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92u4n3c7.php:29\n\
    Stack trace:\n#0 /tmp/tmp92u4n3c7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp92u4n3c7.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('.', $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if ($words[0] == 'I')\
    \ $boredoms++;\n    }\n    return $boredoms;\n}\n\nprint_r(is_bored(\"Hello world\"\
    ));\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ci7l78d.php:30\n\
    Stack trace:\n#0 /tmp/tmp1ci7l78d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1ci7l78d.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //deklarasi\
    \ counter\n    $counter = 0;\n    //jika $S adalah string maka lanjutkan dengan\
    \ membuat array di setiap karakter ., !, ?\n    if (is_string($S)) {\n       \
    \ $arr_S = explode(\".\", $S);\n        $arr_S2 = explode(\"!\", $S);\n      \
    \  $arr_S3 = explode(\"?\", $S);\n        //mengambil panjang array\n        $arr_S_length\
    \ = count($arr_S);\n        $arr_S2_length = count($arr_S2);\n        $arr_S3_length\
    \ = count($arr_S3);\n        //jika panjang array lebih besar dari 1 maka mulai\
    \ looping\n        if ($arr_S_length > 1) {\n            //looping array\n   \
    \         for ($i = 0; $i < $arr_S_length; $i++) {\n                //mengambil\
    \ kata pertama\n                $first_word = substr($arr_S[$i], 0, 1);\n    \
    \            //jika kata pertama sama dengan \"I\" maka tambahkan counter\n  \
    \              if ($first_word == \"I\") {\n                    $counter++;\n\
    \                }\n            }\n        }\n        if ($arr_S2_length > 1)\
    \ {\n            for ($i = 0; $i < $arr_S2_length; $i++) {\n                $first_word\
    \ = substr($arr_S2[$i], 0, 1);\n                if ($first_word == \"I\") {\n\
    \                    $counter++;\n                }\n            }\n        }\n\
    \        if ($arr_S3_length > 1) {\n            for ($i = 0; $i < $arr_S3_length;\
    \ $i++) {\n                $first_word = substr($arr_S3[$i], 0, 1);\n        \
    \        if ($first_word == \"I\") {\n                    $counter++;\n      \
    \          }\n            }\n        }\n    }\n    return $counter;\n}\necho is_bored(\"\
    Hello world\");\necho \"<br>\";\necho is_bored(\"The sky is blue\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp25frcs4d.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ preg_match_all('/^I/m', $S);\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojw0s1i4.php:20\n\
    Stack trace:\n#0 /tmp/tmpojw0s1i4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpojw0s1i4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S_array\
    \ = explode(\" \", $S);\n    $n = 0;\n    for ($i = 0; $i < count($S_array); $i++)\
    \ {\n        if ($S_array[$i] == \"I\") {\n            $n += 1;\n        }\n \
    \   }\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvp947ur_.php:31\n\
    Stack trace:\n#0 /tmp/tmpvp947ur_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvp947ur_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Break sentence into sentence pieces.\n    $sentences = preg_split('/(?<=[.?!])\\\
    s+/', $S, -1, PREG_SPLIT_NO_EMPTY);\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        if (strtolower(substr($sentence, 0, 1)) == 'i') {\n\
    \            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_j8nk2e3.php:28\n\
    Stack trace:\n#0 /tmp/tmp_j8nk2e3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_j8nk2e3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(' ', $S);\n    if (strtolower($S[0]) == 'i') return 1;\n    else return\
    \ 0;\n}\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    )\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpd43l6dts.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $counter\
    \ = 0;\n    $words = explode(\" \", $S);\n    foreach ($words as $word) {\n  \
    \      if (strlen($word) == 1 && $word == \"I\") {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdkj0__hu.php:31\n\
    Stack trace:\n#0 /tmp/tmpdkj0__hu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdkj0__hu.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Let us consider the following cases:\n    // 1) Sentence starts with a capital\
    \ letter (\"I like...\")\n    // 2) Sentence starts with an uppercase \"I\"\n\
    \    // 3) Sentence starts with a lowercase \"i\"\n    // 4) Sentence starts with\
    \ a capital \"I\" followed by a period\n    // 5) Sentence starts with a lowercase\
    \ \"i\" followed by a period\n    // 6) Sentence starts with a capital \"I\" followed\
    \ by a question mark\n    // 7) Sentence starts with a lowercase \"i\" followed\
    \ by a question mark\n    // 8) Sentence starts with a capital \"I\" followed\
    \ by an exclamation mark\n    // 9) Sentence starts with a lowercase \"i\" followed\
    \ by an exclamation mark\n    $cases = array(\n        \"#^I #\",\n        \"\
    #^I\\?#\",\n        \"#^I\\!#\",\n        \"#^I\\.#\",\n        \"#^i #\",\n \
    \       \"#^i\\?#\",\n        \"#^i\\!#\",\n        \"#^i\\.#\"\n    );\n    $count\
    \ = 0;\n    foreach ($cases as $case) {\n        $count += preg_match_all($case,\
    \ $S);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpighwdks7.php:47\n\
    Stack trace:\n#0 /tmp/tmpighwdks7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpighwdks7.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/(?<=[.?!])\\s*/', $S, -1, PREG_SPLIT_NO_EMPTY);\n    $boredoms\
    \ = 0;\n    foreach ($sentences as $sentence) {\n        if ($sentence[0] == 'I')\
    \ {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaku1sg5k.php:27\n\
    Stack trace:\n#0 /tmp/tmpaku1sg5k.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpaku1sg5k.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $count\
    \ = 0;\n  $arr = explode(\" \", $S);\n  for ($i = 0; $i < count($arr); $i++) {\n\
    \    if ($arr[$i] == \"I\") {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqcm30eg.php:30\n\
    Stack trace:\n#0 /tmp/tmpgqcm30eg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgqcm30eg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/[.?!]/', $S);\n    $boredoms = 0;\n    foreach ($sentences as\
    \ $s) {\n        if ($s[0] == 'I') {\n            $boredoms++;\n        }\n  \
    \  }\n    return $boredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhapgcv5.php:26\n\
    Stack trace:\n#0 /tmp/tmpxhapgcv5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxhapgcv5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\tif(count(explode(\"\
    .\", $S))>0){\n\t\t$string = explode(\".\", $S);\n\t}\n\tif(count(explode(\"?\"\
    , $S))>0){\n\t\t$string = explode(\"?\", $S);\n\t}\n\tif(count(explode(\"!\",\
    \ $S))>0){\n\t\t$string = explode(\"!\", $S);\n\t}\n\tif(count(explode(\".\",\
    \ $S))<1 && count(explode(\"?\", $S))<1 && count(explode(\"!\", $S))<1){\n\t\t\
    $string = array($S);\n\t}\n\t$boredom = 0;\n\tforeach($string as $s){\n\t\tif(substr($s,\
    \ 0, 1)==\"I\"){\n\t\t\t$boredom = $boredom + 1;\n\t\t}\n\t}\n\treturn $boredom;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h431ko0.php:37\n\
    Stack trace:\n#0 /tmp/tmp5h431ko0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5h431ko0.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(' ', str_replace(['.', '?', '!'], ' ', $S));\n    $i_words = array_filter($words,\
    \ function($w) {\n        return preg_match('/^I\\b/', $w);\n    });\n    return\
    \ count($i_words);\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaj8vyc_z.php:28\n\
    Stack trace:\n#0 /tmp/tmpaj8vyc_z.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpaj8vyc_z.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(' ', $S);\n    $s = '';\n    foreach ($S as $s) {\n        if ($s\
    \ == 'I') return 1;\n    }\n    return 0;\n}\n\n$S = \"The sky is blue. The sun\
    \ is shining. I love this weather\";\n\necho is_bored($S);\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpimle4v0l.php:31\n\
    Stack trace:\n#0 /tmp/tmpimle4v0l.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpimle4v0l.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t//\
    \ Remove everything from the first '!' to the end\n\t$S = substr($S, 0, strpos($S,\
    \ '!'));\n\t// Split the string by '. '\n\t$split = explode('. ', $S);\n\t// Remove\
    \ everything from the first '?' to the end\n\t$split[count($split) - 1] = substr($split[count($split)\
    \ - 1], 0, strpos($split[count($split) - 1], '?'));\n\t// Count the number of\
    \ substrings beginning with 'I'\n\t$count = 0;\n\tforeach ($split as $s) {\n\t\
    \tif (strlen($s) == 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (substr($s, 0, 1) ==\
    \ 'I') {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkik61czn.php:36\n\
    Stack trace:\n#0 /tmp/tmpkik61czn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkik61czn.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/[.?!]/', $S);\n    $count = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (preg_match('/^I/', $sentence)) {\n            $count++;\n   \
    \     }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28q1bii4.php:26\n\
    Stack trace:\n#0 /tmp/tmp28q1bii4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp28q1bii4.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$boredoms\
    \ = 0;\n\t$sentences = explode('. ', $S);\n\tforeach ($sentences as $sentence)\
    \ {\n\t\t$words = explode(' ', $sentence);\n\t\tif ($words[0] == 'I') {\n\t\t\t\
    $boredoms++;\n\t\t}\n\t}\n\treturn $boredoms;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_split('/[?.!]/', $S);\n    $count = 0;\n    foreach ($S as $sentence)\
    \ {\n        $word = explode(' ', $sentence);\n        if (strtolower($word[0])\
    \ == 'i') {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    $answer = is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );\necho \"$answer\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7e51qjj.php:32\n\
    Stack trace:\n#0 /tmp/tmpi7e51qjj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi7e51qjj.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('. ', $S);\n    return count(array_filter($sentences, function($sentence)\
    \ {\n        $word = explode(' ', $sentence);\n        return strtolower($word[0])\
    \ == 'i';\n    }));\n}\n\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  \n\
    \  $arr = explode(' ', $S);\n  $boredoms = 0;\n  foreach ($arr as $word) {\n \
    \   if ($word == 'I') {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n\
    }\n\nvar_dump(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(1)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztc5ddjr.php:33\n\
    Stack trace:\n#0 /tmp/tmpztc5ddjr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpztc5ddjr.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('.', $S);\n    $res = 0;\n    foreach ($sentences as $s) {\n     \
    \   $s = trim($s);\n        if ($s) {\n            $first_word = explode(' ',\
    \ $s)[0];\n            if ($first_word == 'I') $res++;\n        }\n    }\n   \
    \ return $res;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $n\
    \ = 0;\n  foreach (explode('.', $S) as $s) {\n    $n += strpos($s, 'I') === 0;\n\
    \  }\n  return $n;\n}\necho is_bored(\"Hello world\") . PHP_EOL;\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3b9sway.php:25\n\
    Stack trace:\n#0 /tmp/tmpz3b9sway.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpz3b9sway.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\tif\
    \ (empty($S)) {\n\t\treturn 0;\n\t}\n\n\t$sentences = explode('.', $S);\n\t$boredoms\
    \ = 0;\n\tforeach ($sentences as $sentence) {\n\t\t$sentence = explode(' ', $sentence);\n\
    \t\tif ($sentence[0] == 'I') {\n\t\t\t$boredoms++;\n\t\t}\n\t}\n\n\treturn $boredoms;\n\
    }\n\necho is_bored('Hello world');\necho \"\\n\";\necho is_bored('The sky is blue.\
    \ The sun is shining. I love this weather');\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4kaqc_p8.php:40\n\
    Stack trace:\n#0 /tmp/tmp4kaqc_p8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4kaqc_p8.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ substr_count($S, \"I\");\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkkiezst.php:19\n\
    Stack trace:\n#0 /tmp/tmpmkkiezst.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmkkiezst.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$count\
    \ = 0;\n\t$sentences = preg_split('/[?!.]/', $S);\n\tforeach ($sentences as $sentence)\
    \ {\n\t\tif (substr($sentence, 0, 1) == 'I') $count++;\n\t}\n\treturn $count;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyddcbfys.php:25\n\
    Stack trace:\n#0 /tmp/tmpyddcbfys.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpyddcbfys.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $S = explode(' ', $S);\n    foreach ($S as $word) {\n        if ($word\
    \ == 'I') {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgapadezl.php:31\n\
    Stack trace:\n#0 /tmp/tmpgapadezl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgapadezl.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$S\
    \ = explode(' ', $S);\n\t$L = count($S);\n\t$n = 0;\n\tfor ($i = 0; $i < $L; $i++)\
    \ {\n\t\tif ($S[$i] == 'I') {\n\t\t\t$n++;\n\t\t}\n\t}\n\treturn $n;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqucdls3p.php:32\n\
    Stack trace:\n#0 /tmp/tmpqucdls3p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqucdls3p.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(' ', $S);\n  $count = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n\
    \    if ($arr[$i] == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1e6rq7hf.php:31\n\
    Stack trace:\n#0 /tmp/tmp1e6rq7hf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1e6rq7hf.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $split_sentences = explode(\". \", $S);\n    foreach ($split_sentences\
    \ as $sentence) {\n        $first_word = strtok($sentence, \" \");\n        if\
    \ ($first_word == \"I\") {\n            $boredoms++;\n        }\n    }\n    return\
    \ $boredoms;\n}\n\necho is_bored(\"Hello world\");\necho \"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");\necho \"\\n\";\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $num_boredoms\
    \ = 0;\n    $sentences = explode('.', $S);\n    foreach ($sentences as $sentence)\
    \ {\n        if (strlen($sentence) > 1) {\n            $words = explode(' ', $sentence);\n\
    \            if ($words[0] == 'I') {\n                $num_boredoms++;\n     \
    \       }\n        }\n    }\n    return $num_boredoms;\n}\n\necho is_bored(\"\
    Hello world\");\necho is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\");\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "00\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp18tutis.php:36\n\
    Stack trace:\n#0 /tmp/tmpp18tutis.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpp18tutis.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $A\
    \ = array_filter(explode(\" \", $S));\n  $N = array_reduce($A, function($r, $e)\
    \ {\n    if ($e == \"I\") $r++;\n    return $r;\n  }, 0);\n  return $N;\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5n0_2un.php:29\n\
    Stack trace:\n#0 /tmp/tmpc5n0_2un.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpc5n0_2un.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode('.', $S);\n    $n = 0;\n    foreach ($S as $s) {\n        if (0 ===\
    \ strpos($s, 'I')) {\n            $n++;\n        }\n    }\n    return $n;\n}\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaht3yma5.php:26\n\
    Stack trace:\n#0 /tmp/tmpaht3yma5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaht3yma5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = str_replace(array('.', '?', '!'), '.', $S);\n    $S = explode('.', $S);\n\
    \    $boredoms = 0;\n    foreach ($S as $s) {\n        if (strpos($s, 'I') ===\
    \ 0) {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\
    \nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqx2nkkp.php:28\n\
    Stack trace:\n#0 /tmp/tmphqx2nkkp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphqx2nkkp.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $sentences = explode(\". \", $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(\" \", $sentence);\n        if ($words[0] == \"\
    I\") {\n            $boredoms += 1;\n        }\n    }\n    return $boredoms;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sentences = preg_split('/[.?!]/', $S);\n  foreach ($sentences as $sentence)\
    \ {\n    if (trim($sentence) == \"I\") {\n      $boredoms++;\n    }\n  }\n  return\
    \ $boredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13aox62t.php:27\n\
    Stack trace:\n#0 /tmp/tmp13aox62t.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp13aox62t.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_split('/[.!?]/', $S);\n    $c = 0;\n    foreach ($S as $s) {\n      \
    \  if (substr($s, 0, 2) == 'I ') {\n            $c++;\n        }\n    }\n    return\
    \ $c;\n}\n\n$fptr = fopen(getenv(\"OUTPUT_PATH\"), \"w\");\n\n$__fp = fopen(\"\
    php://stdin\", \"r\");\n\nfscanf($__fp, \"%d\\n\", $t);\n\nfor ($t_itr = 0; $t_itr\
    \ < $t; $t_itr++) {\n    $S = '';\n    fscanf($__fp, \"%[^\\n]\", $S);\n\n   \
    \ $result = is_bored($S);\n\n    fwrite($fptr, $result . \"\\n\");\n}\n\nfclose($__fp);\n\
    fclose($fptr);\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: fopen(): Filename cannot be empty in /tmp/tmpnlqkarch.php on\
    \ line 21\n\nWarning: fclose() expects parameter 1 to be resource, bool given\
    \ in /tmp/tmpnlqkarch.php on line 37\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnlqkarch.php:47\nStack trace:\n#0 /tmp/tmpnlqkarch.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnlqkarch.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$sentences\
    \ = explode(array('.', '?', '!'), $S);\n\t$boredoms = 0;\n\tforeach ($sentences\
    \ as $sentence) {\n\t\tif (stripos($sentence, 'I') === 0) {\n\t\t\t$boredoms++;\n\
    \t\t}\n\t}\n\treturn $boredoms;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 1 to be string, array given in /tmp/tmpc7s_1c_7.php\
    \ on line 11\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpc7s_1c_7.php\
    \ on line 13\n\nWarning: explode() expects parameter 1 to be string, array given\
    \ in /tmp/tmpc7s_1c_7.php on line 11\n\nWarning: Invalid argument supplied for\
    \ foreach() in /tmp/tmpc7s_1c_7.php on line 13\n\nWarning: explode() expects parameter\
    \ 1 to be string, array given in /tmp/tmpc7s_1c_7.php on line 11\n\nWarning: Invalid\
    \ argument supplied for foreach() in /tmp/tmpc7s_1c_7.php on line 13\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpc7s_1c_7.php:27\nStack trace:\n\
    #0 /tmp/tmpc7s_1c_7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpc7s_1c_7.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $words = explode(\" \", $sentence);\n    if ($words[0] == \"I\") {\n\
    \      $boredoms++;\n    }\n  }\n  return $boredoms;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(' ', $S);\n    $count = 0;\n    foreach ($arr as $str) {\n       \
    \ if ($str == 'I') {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysx94cjm.php:31\n\
    Stack trace:\n#0 /tmp/tmpysx94cjm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpysx94cjm.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ count(explode('I', $S)) - 1;\n}\n\necho is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\");\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppi6zkf_7.php:21\n\
    Stack trace:\n#0 /tmp/tmppi6zkf_7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppi6zkf_7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$n\
    \ = 0;\n\t$sentences = explode('. ', $S);\n\tforeach ($sentences as $sentence)\
    \ {\n\t\tif (preg_match('/^I/', $sentence)) {\n\t\t\t$n++;\n\t\t}\n\t}\n\treturn\
    \ $n;\n}\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ) . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining.\") . \"\\n\"\
    ;\necho is_bored(\"The sky is blue. The sun is shining! I love this weather.\"\
    ) . \"\\n\";\necho is_bored(\"The sky is blue? The sun is shining. I love this\
    \ weather.\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather!\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather? The sky is blue. The sun is shining. I love\
    \ this weather!\") . \"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n0\n0\n1\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5v1u_18q.php:32\n\
    Stack trace:\n#0 /tmp/tmp5v1u_18q.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5v1u_18q.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $count\
    \ = 0;\n  $words = explode(\" \", $S);\n  for ($i = 0; $i < count($words); $i++)\
    \ {\n    if ($words[$i] == \"I\") {\n      $count += 1;\n    }\n  }\n  return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgx_jwr2c.php:30\n\
    Stack trace:\n#0 /tmp/tmpgx_jwr2c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgx_jwr2c.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$count\
    \ = 0;\n\t$S = explode(\" \", $S);\n\tforeach ($S as $key => $value) {\n\t\tif\
    \ ($value === \"I\") {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\necho\
    \ is_bored(\"The sky is blue. The sun is shining. I love this weather\");\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2mamg7e.php:32\n\
    Stack trace:\n#0 /tmp/tmpt2mamg7e.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt2mamg7e.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boring_sentences\
    \ = 0;\n  $sentences = explode('. ', $S);\n  foreach ($sentences as $sentence)\
    \ {\n    if (substr($sentence, 0, 2) == 'I ') {\n      $boring_sentences++;\n\
    \    }\n  }\n  return $boring_sentences;\n}\n\n$S = \"Hello world\";\necho is_bored($S);\n\
    echo \"\\n\";\n$S = \"The sky is blue. The sun is shining. I love this weather\"\
    ;\necho is_bored($S);\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n1"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $sentences = explode(\". \", $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(\" \", $sentence);\n        if ($words[0] == \"\
    I\") {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(\" \", $S);\n  $count = 0;\n  for ($i = 0; $i < count($arr); $i++)\
    \ {\n    if ($arr[$i] == \"I\") {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljt3bn_z.php:31\n\
    Stack trace:\n#0 /tmp/tmpljt3bn_z.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpljt3bn_z.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(' ', $S);\n    $i = 0;\n    foreach ($S as $word) {\n        if ($word\
    \ == 'I') {\n            $i++;\n        }\n    }\n    return $i;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ig7hvct.php:31\n\
    Stack trace:\n#0 /tmp/tmp1ig7hvct.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1ig7hvct.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = preg_split('/[.?!]/', $S);\n  $num_boredoms = 0;\n  foreach ($boredoms as\
    \ $boredom) {\n    if (strpos($boredom, 'I') === 0) {\n      $num_boredoms++;\n\
    \    }\n  }\n  return $num_boredoms;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptqxc5h3d.php:26\n\
    Stack trace:\n#0 /tmp/tmptqxc5h3d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptqxc5h3d.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $a\
    \ = preg_split('/[.?!]/', $S);\n  $r = 0;\n  foreach ($a as $v) {\n    if (substr($v,\
    \ 0, 1) == 'I') {\n      $r++;\n    }\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxa5gwitz.php:26\n\
    Stack trace:\n#0 /tmp/tmpxa5gwitz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxa5gwitz.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = preg_split('/(?<=[.?!])\\s+/', $S, -1, PREG_SPLIT_NO_EMPTY);\n  $count = 0;\n\
    \  foreach ($sentences as $sentence) {\n    if (preg_match('/^i/i', $sentence))\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_kapdt6.php:26\n\
    Stack trace:\n#0 /tmp/tmpk_kapdt6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk_kapdt6.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(' ', $S);\n    $ctr = 0;\n    foreach ($arr as $word) {\n        if\
    \ ($word == 'I') {\n            $ctr++;\n        }\n    }\n    return $ctr;\n\
    }\n\nif (!defined('__TEST__')) {\n    echo \"is_bored('Hello world') = \" . is_bored('Hello\
    \ world') . \"\\n\";\n    echo \"is_bored('The sky is blue. The sun is shining.\
    \ I love this weather') = \" . is_bored('The sky is blue. The sun is shining.\
    \ I love this weather') . \"\\n\";\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "is_bored('Hello world') = 0\nis_bored('The sky is blue. The sun is shining.\
    \ I love this weather') = 1\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmppkkgm2i5.php:35\nStack trace:\n#0 /tmp/tmppkkgm2i5.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmppkkgm2i5.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $isBored\
    \ = 0;\n    $sentences = explode('.! ?', $S);\n    foreach ($sentences as $sentence)\
    \ {\n        if (strpos($sentence, 'I') === 0) {\n            $isBored++;\n  \
    \      }\n    }\n    return $isBored;\n}\n\n$S = 'I am not bored! But I am.';\n\
    var_dump(is_bored($S));\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(1)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8g7qlcd.php:29\n\
    Stack trace:\n#0 /tmp/tmpk8g7qlcd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk8g7qlcd.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(\" \", $S);\n    $count = 0;\n    foreach ($arr as $word) {\n    \
    \    if ($word == \"I\") {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppbi4ni18.php:30\n\
    Stack trace:\n#0 /tmp/tmppbi4ni18.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppbi4ni18.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = explode('.', $S);\n  foreach ($sentences as $sentence) {\n    $sentence =\
    \ trim($sentence);\n    if (strpos($sentence, 'I') === 0) {\n      return 1;\n\
    \    }\n  }\n  return 0;\n}\n\n$tests = array(\n    'Hello world' => 0,\n    'The\
    \ sky is blue. The sun is shining. I love this weather' => 1,\n    'The sky is\
    \ blue. The sun is shining. I love this weather. My dog is so cute!' => 1,\n \
    \   'I love this weather. My dog is so cute!' => 1,\n    'My dog is so cute!'\
    \ => 0,\n    'I love this weather' => 1,\n    'I am so bored!' => 1,\n    'I.am.so.bored!'\
    \ => 1,\n    'Are you bored?' => 0,\n    'Are you? Bored.' => 0,\n    'Are.you?\
    \ Bored.' => 0,\n    'Are.you? Bored.I am so bored!' => 1,\n    'Are.you? Bored.\
    \ I am so bored!' => 1,\n    'Are.you? Bored. I am so bored! You are bored' =>\
    \ 1,\n    'Are.you? Bored. I am so bored! You are bored.' => 1,\n    'Are.you?\
    \ Bored. I am so bored! You are bored. How are you?' => 1,\n    'Are.you? Bored.\
    \ I am so bored! You are bored. How are you? Yes! I am bored.' => 2,\n    'Are.you?\
    \ Bored. I am so bored! You are bored. How are you? Yes! I am bored. I am bored.\
    \ How are you?' => 3,\n    'I, am, so, bored!' => 1,\n    'Iamsobored!' => 1,\n\
    \    'I.amsobored!' => 1,\n    'I am so bored.' => 1,\n    'I am so bored, how\
    \ about you?' => 1,\n    'I am so bored, how about you?' => 1,\n    'I am so bored,\
    \ how about you? I am bored.' =>\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcznjpiqd.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Write your code here\n\n    return $is_bored;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ysezlno.php:21\n\
    Stack trace:\n#0 /tmp/tmp3ysezlno.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3ysezlno.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t//\
    \ Split the string by '. ', '? ', '! '\n\t$words = explode('. ', $S);\n\t$count\
    \ = 0;\n\t// Loop through each sentence\n\tforeach ($words as $word) {\n\t\t//\
    \ If the sentence starts with 'I', increment the counter\n\t\tif (strpos($word,\
    \ 'I') === 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9auvizk1.php:29\n\
    Stack trace:\n#0 /tmp/tmp9auvizk1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9auvizk1.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t//\
    \ your code goes here\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq82apfu4.php:19\n\
    Stack trace:\n#0 /tmp/tmpq82apfu4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpq82apfu4.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ your code here\n    $boredom = 0;\n    $sentences = explode(\".\", $S);\n  \
    \  foreach ($sentences as $sentence) {\n        $words = explode(\" \", $sentence);\n\
    \        foreach ($words as $word) {\n            if (strtolower($word) == \"\
    i\") {\n                $boredom += 1;\n                break;\n            }\n\
    \        }\n    }\n    return $boredom;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_3gp0_y.php:36\n\
    Stack trace:\n#0 /tmp/tmpa_3gp0_y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_3gp0_y.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$c\
    \ = 0;\n\t$sentences = explode(\". \", $S);\n\tforeach ($sentences as $s) {\n\t\
    \tif (strpos($s, \"I\") === 0) {\n\t\t\t$c++;\n\t\t}\n\t}\n\treturn $c;\n}\necho(is_bored(\"\
    I am bored. I am excited. I love icecream.\").\"\\n\");\necho(is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather.\").\"\\n\");\necho(is_bored(\"\
    Hello world\").\"\\n\");\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n1\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppe1h6igv.php:30\n\
    Stack trace:\n#0 /tmp/tmppe1h6igv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppe1h6igv.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ count(explode('I', $S));\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3yauing.php:19\n\
    Stack trace:\n#0 /tmp/tmpu3yauing.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpu3yauing.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = trim($S);\n  $S = preg_replace('/[.?!]/', '~', $S);\n  $array = explode('~',\
    \ $S);\n  $count = 0;\n  foreach ($array as $value) {\n    if (strpos($value,\
    \ 'I') === 0) $count++;\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynovwur8.php:26\n\
    Stack trace:\n#0 /tmp/tmpynovwur8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpynovwur8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(' ', $S);\n    $result = 0;\n    foreach ($arr as $key => $value)\
    \ {\n        if ($value == 'I') {\n            $result++;\n        }\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvy66zm8z.php:30\n\
    Stack trace:\n#0 /tmp/tmpvy66zm8z.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvy66zm8z.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = explode(['.', '?', '!'], $S);\n  $boredoms = 0;\n  foreach ($sentences as\
    \ $s) {\n    $words = explode(' ', $s);\n    if ($words[0] == 'I') {\n      $boredoms++;\n\
    \    }\n  }\n  return $boredoms;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 1 to be string, array given in /tmp/tmp8ih0_ggu.php\
    \ on line 11\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmp8ih0_ggu.php\
    \ on line 13\n\nWarning: explode() expects parameter 1 to be string, array given\
    \ in /tmp/tmp8ih0_ggu.php on line 11\n\nWarning: Invalid argument supplied for\
    \ foreach() in /tmp/tmp8ih0_ggu.php on line 13\n\nWarning: explode() expects parameter\
    \ 1 to be string, array given in /tmp/tmp8ih0_ggu.php on line 11\n\nWarning: Invalid\
    \ argument supplied for foreach() in /tmp/tmp8ih0_ggu.php on line 13\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp8ih0_ggu.php:29\nStack trace:\n\
    #0 /tmp/tmp8ih0_ggu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8ih0_ggu.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $count\
    \ = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences as $sen) {\n\
    \    if (strpos($sen, \"I\") === 0) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ).\"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvoxtdhph.php:27\n\
    Stack trace:\n#0 /tmp/tmpvoxtdhph.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvoxtdhph.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, 'I');\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7tq10ow.php:20\n\
    Stack trace:\n#0 /tmp/tmpn7tq10ow.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpn7tq10ow.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(' ', $S);\n    $count = 0;\n    for ($i = 0; $i < count($S); $i++)\
    \ {\n        if ($S[$i] == 'I') {\n            $count++;\n        }\n    }\n \
    \   return $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7oz6bxvz.php:30\n\
    Stack trace:\n#0 /tmp/tmp7oz6bxvz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7oz6bxvz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$boredom\
    \ = 0;\n\t$str = str_replace(array('!', '?', '.'), \"!\", $S);\n\t$strArr = explode(\"\
    !\", $str);\n\tforeach ($strArr as $key => $value) {\n\t\tif(substr($value, 0,\
    \ 2) == \"I \")\n\t\t\t$boredom++;\n\t}\n\treturn $boredom;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather!\");\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp58n68sni.php:30\n\
    Stack trace:\n#0 /tmp/tmp58n68sni.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp58n68sni.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sentences = explode(\". \", $S);\n  $sentences = array_map('trim',\
    \ $sentences);\n  foreach ($sentences as $sentence) {\n    if (substr($sentence,\
    \ 0, 2) == \"I \") $boredoms++;\n  }\n  return $boredoms;\n}\necho is_bored(\"\
    I am bored. I am lonely. I am bored.\");\nfunction candidate(...$args) {\n   \
    \ return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '3'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ your code here\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2v8jtpux.php:18\n\
    Stack trace:\n#0 /tmp/tmp2v8jtpux.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2v8jtpux.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(' ', $S);\n    $boredom_count = 0;\n    foreach ($words as $word)\
    \ {\n        if ($word == 'I') {\n            $boredom_count++;\n        }\n \
    \   }\n    return $boredom_count;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxbpl192.php:30\n\
    Stack trace:\n#0 /tmp/tmphxbpl192.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphxbpl192.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode('.', $S);\n  $S = array_filter($S);\n  $S = array_values($S);\n  $count\
    \ = 0;\n  for ($i = 0; $i < count($S); $i++) {\n    $s = explode(' ', $S[$i]);\n\
    \    if ($s[0] == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnm3myeh_.php:32\n\
    Stack trace:\n#0 /tmp/tmpnm3myeh_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnm3myeh_.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match_all('/I[^\\.]/', $S);\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3um0_7z.php:20\n\
    Stack trace:\n#0 /tmp/tmpu3um0_7z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpu3um0_7z.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ Fill this in.\n}\n\nassert(is_bored(\"Hello world\") == 0);\nassert(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") == 1);\n```\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxnoba8ti.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $array\
    \ = explode(\" \", $S);\n  $count = 0;\n  for ($i = 0; $i < count($array); $i++)\
    \ {\n    if ($array[$i] == \"I\") {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwxtw6lc.php:30\n\
    Stack trace:\n#0 /tmp/tmpfwxtw6lc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfwxtw6lc.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $sentences = explode('. ', $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $sentence = explode('! ', $sentence);\n        foreach ($sentence\
    \ as $sub_sentence) {\n            $sentence = explode('? ', $sub_sentence);\n\
    \            foreach ($sentence as $final_sentence) {\n                if (startsWith($final_sentence,\
    \ 'I')) {\n                    $boredoms++;\n                }\n            }\n\
    \        }\n    }\n    return $boredoms;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function startsWith()\
    \ in /tmp/tmpr6xw7628.php:18\nStack trace:\n#0 /tmp/tmpr6xw7628.php(28): is_bored('Hello\
    \ world')\n#1 /tmp/tmpr6xw7628.php(32): candidate('Hello world')\n#2 /tmp/tmpr6xw7628.php(40):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpr6xw7628.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode('.', $S);\n    $S = implode('.', $S);\n    $S = explode('?', $S);\n\
    \    $S = implode('?', $S);\n    $S = explode('!', $S);\n    $S = implode('!',\
    \ $S);\n    $S = explode(' ', $S);\n    $boredom = 0;\n    foreach ($S as $k =>\
    \ $v) {\n        if (strpos($v, 'I') === 0) {\n            $boredom++;\n     \
    \   }\n    }\n    return $boredom;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fdv9xgp.php:33\n\
    Stack trace:\n#0 /tmp/tmp1fdv9xgp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1fdv9xgp.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(' ', $S);\n    $count = 0;\n    foreach ($S as $v) {\n        if ($v\
    \ == 'I') {\n            $count += 1;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmltg0r9q.php:30\n\
    Stack trace:\n#0 /tmp/tmpmltg0r9q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmltg0r9q.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, \"I\");\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3ii0h0t.php:19\n\
    Stack trace:\n#0 /tmp/tmpd3ii0h0t.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpd3ii0h0t.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $punctuation\
    \ = array(\".\", \"?\", \"!\");\n    $words = explode(\" \", $S);\n    foreach\
    \ ($words as $word) {\n        if (strcasecmp($word, \"I\") == 0) {\n        \
    \    return 1;\n        }\n    }\n    return 0;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ckviltp.php:29\n\
    Stack trace:\n#0 /tmp/tmp1ckviltp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1ckviltp.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $s\
    \ = explode('.', $S);\n  $n = 0;\n  foreach ($s as $t) {\n    if (strtoupper(substr($t,\
    \ 0, 1)) == 'I') {\n      $n++;\n    }\n  }\n  return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5exzge29.php:27\n\
    Stack trace:\n#0 /tmp/tmp5exzge29.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5exzge29.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$words\
    \ = explode(\" \",$S);\n\t$output = 0;\n\tforeach ($words as $word) {\n\t\tif\
    \ ($word[0] == \"I\") {\n\t\t\t$output++;\n\t\t}\n\t}\n\treturn $output;\n}\n\
    echo is_bored(\"The sky is blue. The sun is shining. I love this weather\") .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0bo4hyus.php:27\n\
    Stack trace:\n#0 /tmp/tmp0bo4hyus.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0bo4hyus.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ (int) strrpos($S, 'I');\n}\n\n$S = \"The sky is blue. The sun is shining. I\
    \ love this weather\";\n\necho is_bored($S);\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "37\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwbi6nhfk.php:25\n\
    Stack trace:\n#0 /tmp/tmpwbi6nhfk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwbi6nhfk.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$aSentences\
    \ = explode('.', $S);\n\t$nCount = 0;\n\tforeach ($aSentences as $sSentence) {\n\
    \t\t$aWords = explode(' ', $sSentence);\n\t\tif ($aWords[0] == 'I') {\n\t\t\t\
    $nCount++;\n\t\t}\n\t}\n\treturn $nCount;\n}\n\necho '<pre>';\necho is_bored(\"\
    Hello world\"); // 0\necho is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\"); // 1\necho '</pre>';\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<pre>00</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vffzzbu.php:35\n\
    Stack trace:\n#0 /tmp/tmp6vffzzbu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6vffzzbu.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $s\
    \ = explode(' ', $S);\n  $c = 0;\n  foreach ($s as $k) {\n    if ($k == 'I') {\n\
    \      $c++;\n    }\n  }\n  return $c;\n}\necho is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\");\nfunction candidate(...$args) {\n  \
    \  return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdusksui.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdusksui.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpqdusksui.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $array\
    \ = explode(' ', $S);\n    $result = 0;\n    for ($i = 0; $i < count($array);\
    \ $i++) {\n        if ($array[$i] == 'I') {\n            $result++;\n        }\n\
    \    }\n    return $result;\n}\n\n$S = \"The sky is blue. The sun is shining.\
    \ I love this weather\";\necho is_bored($S);\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0_h3o_u.php:33\n\
    Stack trace:\n#0 /tmp/tmpq0_h3o_u.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpq0_h3o_u.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Let's split the string into sentences\n    $sentences = preg_split('/[.?!]/',\
    \ $S);\n    $count = 0;\n    foreach ($sentences as $sentence) {\n        // And\
    \ then check if the sentence starts with 'I'\n        if (preg_match('/^I /',\
    \ $sentence)) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n$tests = [\n    \"Hello world\" => 0,\n    \"The sky is blue. The sun is\
    \ shining. I love this weather\" => 1,\n    \"The sky is blue. The sun is shining.\
    \ I love this weather! Isn't it great?\" => 2,\n    \"The sky is blue. The sun\
    \ is shining. I love this weather.\" => 1,\n    \"The sky is blue. The sun is\
    \ shining. I love this weather.\" => 1,\n    \"The sky is blue. The sun is shining.\
    \ I love this weather. I love this weather.\" => 2,\n    \"The sky is blue. The\
    \ sun is shining. I love this weather. I love this weather. Is it me you're looking\
    \ for?\" => 3,\n    \"The sky is blue. The sun is shining. I love this weather.\
    \ I love this weather. Is it me you're looking for? I don't know why you say goodbye,\
    \ I say hello\" => 4,\n    \"The sky is blue. The sun is shining. I love this\
    \ weather. I love this weather. Is it me you're looking for? I don't know why\
    \ you say goodbye, I say hello\" => 4,\n    \"I'm sorry, I'm so sorry, it's my\
    \ fault. I put my arms around you, but you pushed them away\" => 1,\n    \"I'm\
    \ sorry, I'm so sorry, it's my fault. I put my arms around you, but you pushed\
    \ them away. I'm sorry, I'm so sorry, who would have known?\" => 2,\n    \"I'm\
    \ sorry, I'm so sorry, it's my fault. I put my arms around you, but you pushed\
    \ them away. I'm sorry, I'm so sorry, who would have known? I miss you more than\
    \ I did yesterday, but less than I will tomorrow\" => 3,\n    \"I'm sorry, I\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4ensxnv0.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $words\
    \ = explode(' ', $S);\n  $boredoms = 0;\n  foreach ($words as $word) {\n    if\
    \ ($word == 'I') {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n}\n\n\
    echo is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\");\nfunction candidate(...$args) {\n  \
    \  return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\n1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4czohsnw.php:33\n\
    Stack trace:\n#0 /tmp/tmp4czohsnw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4czohsnw.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(\" \", $S);\n  $count = 0;\n  foreach ($arr as $str) {\n    if ($str\
    \ == \"I\") {\n      $count++;\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaornojua.php:30\n\
    Stack trace:\n#0 /tmp/tmpaornojua.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaornojua.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $a\
    \ = explode(\" \",$S);\n  $count = 0;\n  foreach ($a as $w) {\n    if (strtolower($w)\
    \ == \"i\") {\n      $count++;\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptutnfclj.php:30\n\
    Stack trace:\n#0 /tmp/tmptutnfclj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptutnfclj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(' ', $S);\n  $c = 0;\n  foreach ($arr as $v) {\n    if (strtolower($v)\
    \ == 'i') $c++;\n  }\n  return $c;\n}\n$input = explode(\"\\n\", file_get_contents('php://stdin'));\n\
    foreach ($input as $line) {\n  echo is_bored($line) . \"\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqqsjtz2s.php:32\n\
    Stack trace:\n#0 /tmp/tmpqqsjtz2s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqqsjtz2s.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_7_filter_by_substring
language: php
results:
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$out = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$out[] = $string;\n\t\t}\n\t}\n\treturn $out;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($s) use ($substring)\
    \ {\n        return strpos($s, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfafwcdm.php:19\n\
    Stack trace:\n#0 /tmp/tmpyfafwcdm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyfafwcdm.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($s) use ($substring)\
    \ {\n        return strpos($s, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkgjc8get.php:19\n\
    Stack trace:\n#0 /tmp/tmpkgjc8get.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkgjc8get.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $out = [];\n    foreach ($strings as $s) {\n        if (strpos($s,\
    \ $substring) !== false) {\n            $out[] = $s;\n        }\n    }\n    return\
    \ $out;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $results = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $results[] = $string;\n    }\n  }\n  return\
    \ $results;\n}\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n\n$strings = ['abc', 'bacd',\
    \ 'cde', 'array'];\nprint_r(filter_by_substring($strings, 'a'));\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Array\n(\n    [0] => abc\n    [1] => bacd\n    [2] => array\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered_strings = [];\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered_strings[]\
    \ = $string;\n        }\n    }\n    return $filtered_strings;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered_strings = [];\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered_strings[]\
    \ = $string;\n        }\n    }\n    return $filtered_strings;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $str) {\n\t\tif (strpos($str,\
    \ $substring) !== false) {\n\t\t\t$result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $newArray = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $newArray[] =\
    \ $string;\n        }\n    }\n    return $newArray;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $matches = [];\n    for ($i = 0; $i < count($strings); $i++)\
    \ {\n        if (strpos($strings[$i], $substring) !== false) {\n            $matches[]\
    \ = $strings[$i];\n        }\n    }\n    return $matches;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif\
    \ (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t\
    }\n\t}\n\treturn $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $new = [];\n    foreach ($strings as $string) {\n       \
    \ if (strpos($string, $substring) !== false) {\n            $new[] = $string;\n\
    \        }\n    }\n    return $new;\n}\n\nfunction candidate(...$args) {\n   \
    \ return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($s) use ($substring)\
    \ {\n        return (strpos($s, $substring) !== false);\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8fewpb6j.php:19\n\
    Stack trace:\n#0 /tmp/tmp8fewpb6j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8fewpb6j.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $new_strings = [];\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $new_strings[]\
    \ = $string;\n        }\n    }\n    return $new_strings;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif\
    \ (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t\
    }\n\t}\n\treturn $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $res = [];\n  for($i = 0; $i < count($strings); $i++) {\n \
    \   if (strpos($strings[$i], $substring) !== false) {\n      $res[] = $strings[$i];\n\
    \    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($s) use ($substring)\
    \ {\n    return strpos($s, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwo88g7rp.php:19\n\
    Stack trace:\n#0 /tmp/tmpwo88g7rp.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpwo88g7rp.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($s) use ($substring)\
    \ {\n        return strpos($s, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7zjqbkw.php:19\n\
    Stack trace:\n#0 /tmp/tmpa7zjqbkw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa7zjqbkw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\n$strings\
    \ = ['abc', 'bacd', 'cde', 'array'];\n$substring = 'a';\n$result = filter_by_substring($strings,\
    \ $substring);\nvar_dump($result);\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(3) {\n  [0]=>\n  string(3) \"abc\"\n  [1]=>\n  string(4) \"bacd\"\
    \n  [3]=>\n  string(5) \"array\"\n}\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpym085p53.php:23\nStack trace:\n#0 /tmp/tmpym085p53.php(28): test()\n\
    #1 {main}\n  thrown in /tmp/tmpym085p53.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $new_strings = [];\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== false) {\n      $new_strings[] = $string;\n\
    \    }\n  }\n  return $new_strings;\n}\n\nfunction candidate(...$args) {\n   \
    \ return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\treturn array_filter($strings, function($s) use ($substring)\
    \ {\n\t\treturn strpos($s, $substring) !== false;\n\t});\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6uzxhj72.php:19\n\
    Stack trace:\n#0 /tmp/tmp6uzxhj72.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6uzxhj72.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $results = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $results[] = $string;\n    }\n  }\n  return\
    \ $results;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    // Fill this out\n}\nfunction candidate(...$args) {\n   \
    \ return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp53rr0kex.php:15\n\
    Stack trace:\n#0 /tmp/tmp53rr0kex.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp53rr0kex.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $return_array = [];\n    foreach ($strings as $str) {\n \
    \       if (strpos($str, $substring) !== false) {\n            $return_array[]\
    \ = $str;\n        }\n    }\n    return $return_array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n  \
    \  }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2lfy6vsg.php:19\n\
    Stack trace:\n#0 /tmp/tmp2lfy6vsg.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2lfy6vsg.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $matches = [];\n    foreach ($strings as $string) {\n   \
    \     if (strpos($string, $substring) !== false) {\n            $matches[] = $string;\n\
    \        }\n    }\n    return $matches;\n}\nfunction candidate(...$args) {\n \
    \   return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    // Your code here\n    $filtered = [];\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    // BEGIN (write your solution here)\n    $res = [];\n   \
    \ foreach ($strings as $str) {\n        if (strpos($str, $substring) !== false)\
    \ {\n            $res[] = $str;\n        }\n    }\n    return $res;\n    // END\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jt_5bse.php:19\n\
    Stack trace:\n#0 /tmp/tmp7jt_5bse.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7jt_5bse.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiuup96c_.php:19\n\
    Stack trace:\n#0 /tmp/tmpiuup96c_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpiuup96c_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $str) {\n       \
    \ if (strpos($str, $substring) !== false) {\n            $result[] = $str;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $new_strings = [];\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $new_strings[]\
    \ = $string;\n        }\n    }\n    return $new_strings;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$ret = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$ret[] = $string;\n\t\t}\n\t}\n\treturn $ret;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($s) use ($substring)\
    \ {\n        return strpos($s, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8ygj2v9.php:19\n\
    Stack trace:\n#0 /tmp/tmpc8ygj2v9.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpc8ygj2v9.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $str) {\n       \
    \ if (strpos($str, $substring) !== false) {\n            $result[] = $str;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n  \
    \  }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif\
    \ (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t\
    }\n\t}\n\treturn $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$filtered = [];\n\tforeach ($strings as $str) {\n\t\tif (strpos($str,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $str;\n\t\t}\n\t}\n\treturn $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n  \
    \  }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered_strings = [];\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered_strings[]\
    \ = $string;\n        }\n    }\n    return $filtered_strings;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\treturn array_filter($strings, function($str) use ($substring)\
    \ {\n\t\treturn (stripos($str, $substring) !== false);\n\t});\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbx35fthh.php:19\n\
    Stack trace:\n#0 /tmp/tmpbx35fthh.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbx35fthh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_esly39t.php:19\n\
    Stack trace:\n#0 /tmp/tmp_esly39t.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_esly39t.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\treturn array_filter($strings, function($string) use ($substring)\
    \ {\n\t\treturn strpos($string, $substring) !== false;\n\t});\n}\n\n$modules =\
    \ scandir(MODULE_DIR);\n$modules = array_filter($modules, function($entry) {\n\
    \treturn $entry[0] !== '.';\n});\n\nif ($_POST) {\n\t$post_data = array_filter($_POST,\
    \ function($k) {\n\t\treturn $k !== 'filter';\n\t}, ARRAY_FILTER_USE_KEY);\n\t\
    $post_data = array_filter($post_data, function($v) {\n\t\treturn !empty($v);\n\
    \t});\n\tfile_put_contents(SETTINGS_FILE, json_encode($post_data));\n}\n\n$module_config\
    \ = json_decode(file_get_contents(SETTINGS_FILE), true);\n$module_config = array_filter($module_config,\
    \ function($k) {\n\treturn $k !== 'filter';\n}, ARRAY_FILTER_USE_KEY);\n\n$filter\
    \ = $_POST['filter'] ?? '';\n$filtered_modules = filter_by_substring($modules,\
    \ $filter);\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Use of undefined constant MODULE_DIR - assumed 'MODULE_DIR'\
    \ (this will throw an Error in a future version of PHP) in /tmp/tmp182d0ft7.php\
    \ on line 13\n\nWarning: scandir(MODULE_DIR): failed to open dir: No such file\
    \ or directory in /tmp/tmp182d0ft7.php on line 13\n\nWarning: scandir(): (errno\
    \ 2): No such file or directory in /tmp/tmp182d0ft7.php on line 13\n\nWarning:\
    \ array_filter() expects parameter 1 to be array, bool given in /tmp/tmp182d0ft7.php\
    \ on line 16\n\nWarning: Use of undefined constant SETTINGS_FILE - assumed 'SETTINGS_FILE'\
    \ (this will throw an Error in a future version of PHP) in /tmp/tmp182d0ft7.php\
    \ on line 28\n\nWarning: file_get_contents(SETTINGS_FILE): failed to open stream:\
    \ No such file or directory in /tmp/tmp182d0ft7.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmp182d0ft7.php on line\
    \ 31\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmp182d0ft7.php on line 10\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp182d0ft7.php:41\nStack trace:\n#0 /tmp/tmp182d0ft7.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp182d0ft7.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\treturn array_filter($strings, function($value) use ($substring)\
    \ {\n\t\treturn strpos($value, $substring) !== false;\n\t});\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7a1mgm5.php:18\n\
    Stack trace:\n#0 /tmp/tmpe7a1mgm5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpe7a1mgm5.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered_strings = [];\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered_strings[]\
    \ = $string;\n        }\n    }\n    return $filtered_strings;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$output = [];\n\tforeach ($strings as $str) {\n\t\tif (strpos($str,\
    \ $substring) !== false) {\n\t\t\t$output[] = $str;\n\t\t}\n\t}\n\treturn $output;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n  \
    \  }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  foreach ($strings as $key => $string) {\n    if (strpos($string,\
    \ $substring) === false) {\n      unset($strings[$key]);\n    }\n  }\n  return\
    \ $strings;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfpllo89.php:22\n\
    Stack trace:\n#0 /tmp/tmpdfpllo89.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdfpllo89.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return (strpos($string, $substring) !== false);\n    });\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mdyk8jl.php:18\n\
    Stack trace:\n#0 /tmp/tmp8mdyk8jl.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8mdyk8jl.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (stristr($string, $substring)) {\n            $filtered[] = $string;\n\
    \        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($str) use ($substring)\
    \ {\n        return strpos($str, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5kllhn37.php:19\n\
    Stack trace:\n#0 /tmp/tmp5kllhn37.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5kllhn37.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4br_yszd.php:19\n\
    Stack trace:\n#0 /tmp/tmp4br_yszd.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp4br_yszd.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n  \
    \  }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwhiennj_.php:19\n\
    Stack trace:\n#0 /tmp/tmpwhiennj_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpwhiennj_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujhhn4iu.php:19\n\
    Stack trace:\n#0 /tmp/tmpujhhn4iu.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpujhhn4iu.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03r40y_w.php:19\n\
    Stack trace:\n#0 /tmp/tmp03r40y_w.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp03r40y_w.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered_strings = [];\n    foreach ($strings as $str) {\n\
    \        if (strpos($str, $substring) !== false) {\n            $filtered_strings[]\
    \ = $str;\n        }\n    }\n    return $filtered_strings;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $key => $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $result[]\
    \ = $string;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $substring = strtolower($substring);\n    $filtered = [];\n\
    \    foreach ($strings as $str) {\n        if (strpos(strtolower($str), $substring)\
    \ !== false) {\n            $filtered[] = $str;\n        }\n    }\n    return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $str) {\n    if (strpos($str,\
    \ $substring) !== false) {\n      $result[] = $str;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (stristr($string,\
    \ $substring)) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t// YOUR IMPLEMENTATION HERE\n\t$answ = array();\n\tforeach\
    \ ($strings as $str) {\n\t\tif (strpos($str, $substring) !== false) {\n\t\t\t\
    array_push($answ, $str);\n\t\t}\n\t}\n\treturn $answ;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      yield $string;\n    }\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tnr5bve.php:20\n\
    Stack trace:\n#0 /tmp/tmp1tnr5bve.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1tnr5bve.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return stripos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xskml6j.php:19\n\
    Stack trace:\n#0 /tmp/tmp2xskml6j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2xskml6j.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$ret = [];\n\tforeach ($strings as $s) {\n\t\tif (strpos($s,\
    \ $substring) !== false) {\n\t\t\t$ret[] = $s;\n\t\t}\n\t}\n\treturn $ret;\n}\n\
    function candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\n$input = [\"abc\", \"bacd\", \"cde\", \"array\"];\n$input = filter_by_substring($input,\
    \ \"a\");\nprint_r($input);\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => abc\n    [1] => bacd\n    [2] => array\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    // your code goes here\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgbfwjr9l.php:16\n\
    Stack trace:\n#0 /tmp/tmpgbfwjr9l.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpgbfwjr9l.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($v) use ($substring)\
    \ {\n        return strpos($v, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6va3cys.php:19\n\
    Stack trace:\n#0 /tmp/tmpn6va3cys.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpn6va3cys.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif\
    \ (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t\
    }\n\t}\n\treturn $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif\
    \ (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t\
    }\n\t}\n\treturn $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $new_array = [];\n    foreach ($strings as $string) {\n \
    \       if (strpos($string, $substring) !== false) {\n            $new_array[]\
    \ = $string;\n        }\n    }\n    return $new_array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $n = count($strings);\n    $result = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        if (strpos($strings[$i], $substring) !== false) {\n\
    \            $result[] = $strings[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\treturn array_filter($strings, function($string) use ($substring)\
    \ {\n\t\treturn strpos($string, $substring) !== false;\n\t});\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprqo8_joy.php:19\n\
    Stack trace:\n#0 /tmp/tmprqo8_joy.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprqo8_joy.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $strings = array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n    return\
    \ $strings;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe99tucd2.php:20\n\
    Stack trace:\n#0 /tmp/tmpe99tucd2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpe99tucd2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($a) use ($substring)\
    \ {\n        return strpos($a, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4jihm4o4.php:19\n\
    Stack trace:\n#0 /tmp/tmp4jihm4o4.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp4jihm4o4.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $s) {\n       \
    \ if (strpos($s, $substring) !== false) {\n            $filtered[] = $s;\n   \
    \     }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args) {\n \
    \   return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  foreach ($strings as $item) {\n    if (strpos($item, $substring)\
    \ !== false) {\n      $results[] = $item;\n    }\n  }\n  return $results;\n}\n\
    function candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sxz8xmi.php:20\n\
    Stack trace:\n#0 /tmp/tmp7sxz8xmi.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7sxz8xmi.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddkyoz2b.php:18\n\
    Stack trace:\n#0 /tmp/tmpddkyoz2b.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpddkyoz2b.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\treturn array_filter($strings, function($string) use ($substring)\
    \ {\n\t\treturn strpos($string, $substring) !== false;\n\t});\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cp_h5p6.php:19\n\
    Stack trace:\n#0 /tmp/tmp9cp_h5p6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9cp_h5p6.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpikoarsvs.php:19\n\
    Stack trace:\n#0 /tmp/tmpikoarsvs.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpikoarsvs.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n\n$pairs = [\n    ['abc',\
    \ 'abc', true],\n    ['xabcd', 'abc', true],\n    ['abcd', 'abc', true],\n   \
    \ ['cabcd', 'abc', true],\n    ['xyz', 'abc', false],\n    ['zbc', 'abc', false],\n\
    \    ['', 'abc', false],\n    ['abc', '', true],\n    ['', '', true],\n];\n\n\
    function candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $value) {\n     \
    \   if (strpos($value, $substring) !== false) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\treturn array_filter($strings, function($string) use ($substring)\
    \ {\n\t\treturn strpos($string, $substring) !== false;\n\t});\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfm_iabx.php:18\n\
    Stack trace:\n#0 /tmp/tmpmfm_iabx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpmfm_iabx.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\treturn array_filter($strings, function($string) use ($substring)\
    \ {\n\t\treturn strpos($string, $substring) !== false;\n\t});\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp83iryx7l.php:19\n\
    Stack trace:\n#0 /tmp/tmp83iryx7l.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp83iryx7l.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $out = [];\n    foreach ($strings as $string) {\n       \
    \ if (strpos($string, $substring) !== false) {\n            $out[] = $string;\n\
    \        }\n    }\n    return $out;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered_strings = [];\n  foreach ($strings as $string) {\n\
    \    if (strpos($string, $substring) !== false) {\n      $filtered_strings[] =\
    \ $string;\n    }\n  }\n  return $filtered_strings;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2hidw1b.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2hidw1b.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpv2hidw1b.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\treturn array_filter($strings, function($string) use ($substring)\
    \ {\n\t\treturn strpos($string, $substring) !== false;\n\t});\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9mh014l.php:18\n\
    Stack trace:\n#0 /tmp/tmpm9mh014l.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpm9mh014l.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $strings = array_filter($strings, function($s) use ($substring)\
    \ {\n        return strpos($s, $substring) !== false;\n    });\n    return $strings;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsic3yb1.php:20\n\
    Stack trace:\n#0 /tmp/tmplsic3yb1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplsic3yb1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n  \
    \  }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    // TODO\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlijx2sb.php:16\n\
    Stack trace:\n#0 /tmp/tmprlijx2sb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmprlijx2sb.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (substr_count($string, $substring) > 0) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $ret = [];\n    foreach ($strings as $string) {\n       \
    \ if (strpos($string, $substring) !== false) {\n            $ret[] = $string;\n\
    \        }\n    }\n    return $ret;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17uglavy.php:18\n\
    Stack trace:\n#0 /tmp/tmp17uglavy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp17uglavy.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = [];\n  foreach ($strings as $s) {\n    if (strpos($s,\
    \ $substring) !== false) {\n      $filtered[] = $s;\n    }\n  }\n  return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($s) use ($substring)\
    \ {\n        return strpos($s, $substring) !== false;\n    });\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprsujcl0f.php:18\n\
    Stack trace:\n#0 /tmp/tmprsujcl0f.php(23): test()\n#1 {main}\n  thrown in /tmp/tmprsujcl0f.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nprint_r(filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a'));\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => abc\n    [1] => bacd\n    [3] => array\n)\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpqt7_28us.php:20\nStack trace:\n\
    #0 /tmp/tmpqt7_28us.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqt7_28us.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$ret = [];\n\tforeach ($strings as $s) {\n\t\tif (strpos($s,\
    \ $substring) !== false) {\n\t\t\t$ret[] = $s;\n\t\t}\n\t}\n\treturn $ret;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$ans = [];\n\tforeach ($strings as $string) {\n\t\tif (stristr($string,\
    \ $substring)) {\n\t\t\t$ans[] = $string;\n\t\t}\n\t}\n\treturn $ans;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif\
    \ (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t\
    }\n\t}\n\treturn $filtered;\n}\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$results = [];\n\tforeach ($strings as $string) {\n\t\tif (substr_count($string,\
    \ $substring) > 0) {\n\t\t\t$results[] = $string;\n\t\t}\n\t}\n\treturn $results;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $new_strings = [];\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== false) {\n      $new_strings[] = $string;\n\
    \    }\n  }\n  return $new_strings;\n}\n\nfunction candidate(...$args) {\n   \
    \ return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $key => $value) {\n\
    \        if (strpos($value, $substring) !== false) {\n            $result[] =\
    \ $value;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring)\
    \ !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6ojx17v.php:21\n\
    Stack trace:\n#0 /tmp/tmpk6ojx17v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk6ojx17v.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($elem) use ($substring)\
    \ {\n        return strpos($elem, $substring) !== false;\n    });\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp36j35ed.php:18\n\
    Stack trace:\n#0 /tmp/tmpp36j35ed.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpp36j35ed.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    // your code here\n    return array_filter($strings, function($str)\
    \ use ($substring) {\n        return strpos($str, $substring) !== false;\n   \
    \ });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvlw084x8.php:20\n\
    Stack trace:\n#0 /tmp/tmpvlw084x8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpvlw084x8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $matches = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $matches[] = $string;\n    }\n  }\n  return\
    \ $matches;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (mb_strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_strpos() in\
    \ /tmp/tmp831sgv16.php:10\nStack trace:\n#0 /tmp/tmp831sgv16.php(17): filter_by_substring(Array,\
    \ 'xxx')\n#1 /tmp/tmp831sgv16.php(22): candidate(Array, 'xxx')\n#2 /tmp/tmp831sgv16.php(27):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp831sgv16.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $matches = [];\n    foreach ($strings as $string) {\n   \
    \     if (strpos($string, $substring) !== false) {\n            $matches[] = $string;\n\
    \        }\n    }\n    return $matches;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$new_array = [];\n\tforeach ($strings as $string) {\n\t\tif\
    \ (strpos($string, $substring) !== false) {\n\t\t\t$new_array[] = $string;\n\t\
    \t}\n\t}\n\treturn $new_array;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered_strings = [];\n  foreach ($strings as $string) {\n\
    \    if (strpos($string, $substring) !== false) {\n      $filtered_strings[] =\
    \ $string;\n    }\n  }\n  return $filtered_strings;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    foreach ($strings as $key => $value) {\n        if (strpos($value,\
    \ $substring) === false) {\n            unset($strings[$key]);\n        }\n  \
    \  }\n    return $strings;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgq_4wn0e.php:22\n\
    Stack trace:\n#0 /tmp/tmpgq_4wn0e.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgq_4wn0e.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $value) {\n     \
    \   if (strpos($value, $substring) !== false) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $str) {\n     \
    \   if (strpos($str, $substring) !== false) {\n            $filtered[] = $str;\n\
    \        }\n    }\n    return $filtered;\n}\n\n$strings = ['abc', 'bacd', 'cde',\
    \ 'array'];\n$substring = 'a';\nprint_r(filter_by_substring($strings, $substring));\n\
    function candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => abc\n    [1] => bacd\n    [2] => array\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4krt7x8n.php:19\n\
    Stack trace:\n#0 /tmp/tmp4krt7x8n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp4krt7x8n.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring)\
    \ !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    function candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp42jwmv8r.php:20\n\
    Stack trace:\n#0 /tmp/tmp42jwmv8r.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp42jwmv8r.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $res = [];\n    foreach ($strings as $string) {\n       \
    \ if (strpos($string, $substring) !== false) {\n            $res[] = $string;\n\
    \        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n   \
    \ return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $item) {\n    if (strpos($item,\
    \ $substring) !== false) {\n      $result[] = $item;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $new_array = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $new_array[] = $string;\n \
    \   }\n  }\n  return $new_array;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    // your code here\n}\nfunction candidate(...$args) {\n  \
    \  return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1x4e886e.php:15\n\
    Stack trace:\n#0 /tmp/tmp1x4e886e.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp1x4e886e.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zkqa06p.php:18\n\
    Stack trace:\n#0 /tmp/tmp3zkqa06p.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3zkqa06p.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $i = 0;\n    $len = count($strings);\n    $output = [];\n\
    \    for ($i; $i < $len; $i++) {\n        if (strpos($strings[$i], $substring)\
    \ !== false) {\n            $output[] = $strings[$i];\n        }\n    }\n    return\
    \ $output;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  foreach ($strings as $str) {\n    if (strpos($str, $substring)\
    \ !== false) {\n      $res[] = $str;\n    }\n  }\n  return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcj6la2zs.php:21\n\
    Stack trace:\n#0 /tmp/tmpcj6la2zs.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcj6la2zs.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n\n$input = ['abc', 'bacd', 'cde', 'array'];\n\
    \nvar_dump(filter_by_substring($input, 'a'));\nvar_dump(filter_by_substring($input,\
    \ 'b'));\nvar_dump(filter_by_substring($input, 'c'));\nvar_dump(filter_by_substring($input,\
    \ 'd'));\nvar_dump(filter_by_substring($input, 'e'));\nvar_dump(filter_by_substring($input,\
    \ 'z'));\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(3) {\n  [0]=>\n  string(3) \"abc\"\n  [1]=>\n  string(4) \"bacd\"\
    \n  [2]=>\n  string(5) \"array\"\n}\narray(2) {\n  [0]=>\n  string(3) \"abc\"\n\
    \  [1]=>\n  string(4) \"bacd\"\n}\narray(3) {\n  [0]=>\n  string(3) \"abc\"\n\
    \  [1]=>\n  string(4) \"bacd\"\n  [2]=>\n  string(3) \"cde\"\n}\narray(2) {\n\
    \  [0]=>\n  string(4) \"bacd\"\n  [1]=>\n  string(3) \"cde\"\n}\narray(1) {\n\
    \  [0]=>\n  string(3) \"cde\"\n}\narray(0) {\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $s) {\n       \
    \ if (strpos($s, $substring) !== false) {\n            $filtered[] = $s;\n   \
    \     }\n    }\n    return $filtered;\n}\nfunction candidate(...$args) {\n   \
    \ return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$new_list = [];\n\tforeach ($strings as $string) {\n\t\tif\
    \ (strpos($string, $substring) !== false) {\n\t\t\t$new_list[] = $string;\n\t\t\
    }\n\t}\n\treturn $new_list;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\treturn array_filter($strings, function($s) use ($substring)\
    \ {\n\t\treturn strpos($s, $substring) !== false;\n\t});\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6vb7qky.php:19\n\
    Stack trace:\n#0 /tmp/tmpr6vb7qky.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpr6vb7qky.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $str) {\n     \
    \   if (strpos($str, $substring) !== false) {\n            $filtered[] = $str;\n\
    \        }\n    }\n    return $filtered;\n}\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$output = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$output[] = $string;\n\t\t}\n\t}\n\treturn $output;\n\
    }\n\n$stdin = fopen(\"php://stdin\", \"r\");\nfscanf($stdin, \"%d\\n\", $strings_count);\n\
    $strings = [];\nfor ($i = 0; $i < $strings_count; $i++) {\n\tfscanf($stdin, \"\
    %s\\n\", $strings_item);\n\t$strings[] = $strings_item;\n}\nfscanf($stdin, \"\
    %s\\n\", $substring);\n$result = filter_by_substring($strings, $substring);\n\
    echo implode(\"\\n\", $result) . \"\\n\";\nfclose($stdin);\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($s) use ($substring)\
    \ {\n        return strpos($s, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdq977vei.php:19\n\
    Stack trace:\n#0 /tmp/tmpdq977vei.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdq977vei.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $matches = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $matches[] = $string;\n    }\n  }\n  return\
    \ $matches;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n  \
    \  }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif\
    \ (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t\
    }\n\t}\n\treturn $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    // TODO\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8fg49tw.php:16\n\
    Stack trace:\n#0 /tmp/tmpu8fg49tw.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpu8fg49tw.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  // your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplz4fd04g.php:16\n\
    Stack trace:\n#0 /tmp/tmplz4fd04g.php(22): test()\n#1 {main}\n  thrown in /tmp/tmplz4fd04g.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = [];\n    foreach ($strings as $string) {\n    \
    \    if (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered_strings = [];\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered_strings[]\
    \ = $string;\n        }\n    }\n    return $filtered_strings;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($str) use ($substring)\
    \ {\n        return strpos($str, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2zn6q3bq.php:19\n\
    Stack trace:\n#0 /tmp/tmp2zn6q3bq.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2zn6q3bq.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst3_qx3v.php:19\n\
    Stack trace:\n#0 /tmp/tmpst3_qx3v.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpst3_qx3v.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n\t$result = [];\n\tforeach ($strings as $str) {\n\t\tif (strpos($str,\
    \ $substring) !== false) {\n\t\t\t$result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj18jhqfy.php:18\n\
    Stack trace:\n#0 /tmp/tmpj18jhqfy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpj18jhqfy.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    // your code goes here\n\n    $substr=str_split($substring);\n\
    \    $count=count($substr);\n    $res=[];\n    for($i=0;$i<count($strings);$i++){\n\
    \        $num=0;\n        $temp=str_split($strings[$i]);\n        for($j=0;$j<count($temp);$j++){\n\
    \            if($temp[$j]==$substr[$num]){\n                $num++;\n        \
    \    }\n            if($num==$count){\n                $res[]=$strings[$i];\n\
    \                break;\n            }\n        }\n    }\n    return $res;\n}\n\
    \nfilter_by_substring(['abc', 'bacd', 'cde', 'array'], 'a');\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $res = [];\n    foreach ($strings as $str) {\n        if\
    \ (strpos($str, $substring) !== false) {\n            $res[] = $str;\n       \
    \ }\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpua9czfd7.php:19\n\
    Stack trace:\n#0 /tmp/tmpua9czfd7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpua9czfd7.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n  \
    \  }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($s) use ($substring)\
    \ {\n        return strpos($s, $substring) !== false;\n    });\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6yt95un.php:18\n\
    Stack trace:\n#0 /tmp/tmpa6yt95un.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpa6yt95un.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $strings = array_filter($strings, function($str) use ($substring)\
    \ {\n        return strpos($str, $substring) !== false;\n    });\n    return $strings;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeyrc4tsk.php:20\n\
    Stack trace:\n#0 /tmp/tmpeyrc4tsk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpeyrc4tsk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $arr = [];\n    foreach ($strings as $str) {\n        if\
    \ (strpos($str, $substring) !== false) {\n            $arr[] = $str;\n       \
    \ }\n    }\n    return $arr;\n}\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($str) use ($substring)\
    \ {\n    return strpos($str, $substring) !== false;\n  });\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_6w421i.php:18\n\
    Stack trace:\n#0 /tmp/tmp9_6w421i.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9_6w421i.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception

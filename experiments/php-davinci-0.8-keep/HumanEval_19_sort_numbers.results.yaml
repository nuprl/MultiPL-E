name: HumanEval_19_sort_numbers
language: php
results:
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // if we have no numbers, then\
    \ we can return an empty string\n    if (strlen($numbers) === 0) {\n        return\
    \ '';\n    }\n\n    // split the string into an array\n    $numbers_array = explode('\
    \ ', $numbers);\n\n    // we will use a hash table to quickly look up the index\
    \ of the given word\n    $number_indexes = array(\n        'zero' => 0,\n    \
    \    'one' => 1,\n        'two' => 2,\n        'three' => 3,\n        'four' =>\
    \ 4,\n        'five' => 5,\n        'six' => 6,\n        'seven' => 7,\n     \
    \   'eight' => 8,\n        'nine' => 9\n    );\n\n    // now we use the quicksort\
    \ algorithm to sort the array\n    // we are using a simple comparator that looks\
    \ up the indexes of the\n    // numbers in our hash table, so this algorithm runs\
    \ in O(n log n) time\n    //\n    // this is a simplistic implementation of quicksort,\
    \ with no significant\n    // optimizations. it also can be more neatly coded\
    \ using PHP's built-in\n    // quicksort functions, but we are using a hand-coded\
    \ quicksort to\n    // show how the algorithm works\n    quicksort($numbers_array,\
    \ 0, count($numbers_array) - 1, $number_indexes);\n\n    // join the array back\
    \ into a space-delimited string\n    return implode(' ', $numbers_array);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function quicksort() in\
    \ /tmp/tmp_61c0o0k.php:38\nStack trace:\n#0 /tmp/tmp_61c0o0k.php(45): sort_numbers('three')\n\
    #1 /tmp/tmp_61c0o0k.php(50): candidate('three')\n#2 /tmp/tmp_61c0o0k.php(56):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp_61c0o0k.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $split_numbers = explode(' ',\
    \ $numbers);\n    $numbers_array = [\n        'zero' => 0,\n        'one' => 1,\n\
    \        'two' => 2,\n        'three' => 3,\n        'four' => 4,\n        'five'\
    \ => 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n \
    \       'nine' => 9\n    ];\n    $num_array = [];\n    foreach ($split_numbers\
    \ as $numeral) {\n        $num_array[] = $numbers_array[$numeral];\n    }\n  \
    \  asort($num_array);\n    $sorted_array = [];\n    foreach ($num_array as $num\
    \ => $val) {\n        $sorted_array[] = array_search($val, $numbers_array);\n\
    \    }\n    return implode(' ', $sorted_array);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0eywl0ny.php:38\n\
    Stack trace:\n#0 /tmp/tmp0eywl0ny.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0eywl0ny.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $number_list = explode(' ', $numbers);\n\
    \    $number_list = convert_to_numbers($number_list);\n    asort($number_list);\n\
    \    $number_list = convert_to_words($number_list);\n    return implode(' ', $number_list);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_to_numbers()\
    \ in /tmp/tmpr0_3hs4w.php:9\nStack trace:\n#0 /tmp/tmpr0_3hs4w.php(16): sort_numbers('')\n\
    #1 /tmp/tmpr0_3hs4w.php(20): candidate('')\n#2 /tmp/tmpr0_3hs4w.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmpr0_3hs4w.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // TODO: Fill in the missing code\
    \ here\n    $number = explode(\" \", $numbers);\n    sort($number);\n    $sorted_numbers\
    \ = implode(\" \", $number);\n    return $sorted_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq93lifvq.php:22\n\
    Stack trace:\n#0 /tmp/tmpq93lifvq.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpq93lifvq.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t// Initialise words to numbers array\n\
    \t$words_to_numbers = array(\n\t\t'zero' => 0,\n\t\t'one' => 1,\n\t\t'two' =>\
    \ 2,\n\t\t'three' => 3,\n\t\t'four' => 4,\n\t\t'five' => 5,\n\t\t'six' => 6,\n\
    \t\t'seven' => 7,\n\t\t'eight' => 8,\n\t\t'nine' => 9\n\t);\n\t// Create a new\
    \ array containing only the numeric values, e.g.\n\t// >>> array('three' => 3,\
    \ 'one' => 1, 'five' => 5)\n\t// >> array(3, 1, 5)\n\t$array_of_numbers = array_values($words_to_numbers);\n\
    \t// Sort the new array of numbers\n\t// >>> array(3, 1, 5)\n\t// >> array(1,\
    \ 3, 5)\n\tsort($array_of_numbers);\n\t// Create a new array to map sorted numbers\
    \ to words\n\t// >>> array(1, 3, 5)\n\t// >> array(1 => 'one', 3 => 'three', 5\
    \ => 'five')\n\t$mapped_sorted_numbers = array_map(function($number) use ($words_to_numbers)\
    \ {\n\t\treturn array_search($number, $words_to_numbers);\n\t}, $array_of_numbers);\n\
    \t// Return the sorted numbers as a space-delimited string\n\t// >>> array(1 =>\
    \ 'one', 3 => 'three', 5 => 'five')\n\t// >> 'one three five'\n\treturn implode('\
    \ ', $mapped_sorted_numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpneu3vdnw.php:46\n\
    Stack trace:\n#0 /tmp/tmpneu3vdnw.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpneu3vdnw.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $number_map = [\n        'zero'\
    \ => 0,\n        'one' => 1,\n        'two' => 2,\n        'three' => 3,\n   \
    \     'four' => 4,\n        'five' => 5,\n        'six' => 6,\n        'seven'\
    \ => 7,\n        'eight' => 8,\n        'nine' => 9,\n    ];\n    $numbers = explode('\
    \ ', $numbers);\n    foreach ($numbers as $key => $value) {\n        $numbers[$key]\
    \ = $number_map[$value];\n    }\n    sort($numbers);\n    foreach ($numbers as\
    \ $key => $value) {\n        $numbers[$key] = array_search($value, $number_map);\n\
    \    }\n    return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmaj9z71.php:36\n\
    Stack trace:\n#0 /tmp/tmprmaj9z71.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprmaj9z71.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $parts = explode(' ', $numbers);\n\
    \    $numbers = [];\n    foreach ($parts as $numeral) {\n        $numbers[] =\
    \ numeralToNumber($numeral);\n    }\n    sort($numbers);\n    $result = [];\n\
    \    foreach ($numbers as $number) {\n        $result[] = numberToNumeral($number);\n\
    \    }\n    return implode(' ', $result);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function numeralToNumber()\
    \ in /tmp/tmpe1rd5gs9.php:11\nStack trace:\n#0 /tmp/tmpe1rd5gs9.php(22): sort_numbers(Array)\n\
    #1 /tmp/tmpe1rd5gs9.php(26): candidate('')\n#2 /tmp/tmpe1rd5gs9.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe1rd5gs9.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$nums = explode(' ', $numbers);\n\
    \t$nums = array_map(function($x) {\n\t\treturn ord($x) - 96;\n\t}, $nums);\n\t\
    sort($nums);\n\t$nums = array_map(function($x) {\n\t\treturn chr($x + 96);\n\t\
    }, $nums);\n\treturn implode(' ', $nums);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60hsi13u.php:24\n\
    Stack trace:\n#0 /tmp/tmp60hsi13u.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp60hsi13u.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t\n\t$numbers_array = explode(\"\
    \ \", $numbers);\n\n\t$numbers_map = array(\n\t\t'zero' => 0,\n\t\t'one' => 1,\n\
    \t\t'two' => 2,\n\t\t'three' => 3,\n\t\t'four' => 4,\n\t\t'five' => 5,\n\t\t'six'\
    \ => 6,\n\t\t'seven' => 7,\n\t\t'eight' => 8,\n\t\t'nine' => 9\n\t);\n\n\t// Convert\
    \ words to numbers\n\tforeach ($numbers_array as $key => $value) {\n\t\t$numbers_array[$key]\
    \ = $numbers_map[$value];\n\t}\n\n\t// Sort numbers in array\n\tsort($numbers_array);\n\
    \n\t// Convert numbers back to words\n\tforeach ($numbers_array as $key => $value)\
    \ {\n\t\t$numbers_array[$key] = array_search($value, $numbers_map);\n\t}\n\n\t\
    return implode(\" \", $numbers_array);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycne0e7d.php:45\n\
    Stack trace:\n#0 /tmp/tmpycne0e7d.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpycne0e7d.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $nums = explode(' ', $numbers);\n\
    \    $keys = [\n        'zero'  => 0,\n        'one'   => 1,\n        'two'  \
    \ => 2,\n        'three' => 3,\n        'four'  => 4,\n        'five'  => 5,\n\
    \        'six'   => 6,\n        'seven' => 7,\n        'eight' => 8,\n       \
    \ 'nine'  => 9,\n    ];\n    usort($nums, function($a, $b) use ($keys) {\n   \
    \     return $keys[$a] > $keys[$b];\n    });\n    return implode(' ', $nums);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // Please implement this function\n\
    \    return $numbers;\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1am098s.php:20\n\
    Stack trace:\n#0 /tmp/tmpz1am098s.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpz1am098s.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $num_lookup = [\n    'zero' => 0,\n\
    \    'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four' => 4,\n    'five'\
    \ => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' => 8,\n    'nine' =>\
    \ 9\n  ];\n  $word_array = explode(' ', $numbers);\n  $number_array = [];\n  foreach\
    \ ($word_array as $word) {\n    $number_array[] = $num_lookup[$word];\n  }\n \
    \ sort($number_array);\n  $sorted_numbers = '';\n  foreach ($number_array as $number)\
    \ {\n    $sorted_numbers .= array_search($number, $num_lookup) . ' ';\n  }\n \
    \ return trim($sorted_numbers);\n}\n\necho sort_numbers('three one five'), PHP_EOL;\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "one three five\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjnfpnyp.php:39\n\
    Stack trace:\n#0 /tmp/tmpmjnfpnyp.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmjnfpnyp.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // We do this so that array_count_values()\
    \ gives us what we want.\n    $numbers = str_replace(' zero ', ' 0 ', $numbers);\n\
    \    $numbers = str_replace(' one ', ' 1 ', $numbers);\n    $numbers = str_replace('\
    \ two ', ' 2 ', $numbers);\n    $numbers = str_replace(' three ', ' 3 ', $numbers);\n\
    \    $numbers = str_replace(' four ', ' 4 ', $numbers);\n    $numbers = str_replace('\
    \ five ', ' 5 ', $numbers);\n    $numbers = str_replace(' six ', ' 6 ', $numbers);\n\
    \    $numbers = str_replace(' seven ', ' 7 ', $numbers);\n    $numbers = str_replace('\
    \ eight ', ' 8 ', $numbers);\n    $numbers = str_replace(' nine ', ' 9 ', $numbers);\n\
    \n    // Sort the numbers, retaining their count (and thus, order in the string).\n\
    \    $numbers = array_count_values(explode(' ', $numbers));\n    asort($numbers);\n\
    \n    // Return the sorted string.\n    $return = '';\n    foreach ($numbers as\
    \ $key => $value) {\n        $return .= str_repeat($key . ' ', $value);\n    }\n\
    \    return $return;\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_miwv2o3.php:37\n\
    Stack trace:\n#0 /tmp/tmp_miwv2o3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_miwv2o3.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // your code here\n    return\
    \ \"your result\";\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9srhgon0.php:16\n\
    Stack trace:\n#0 /tmp/tmp9srhgon0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9srhgon0.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$input = $numbers;\n\t$input = explode(\"\
    \ \", $input);\n\t$input = str_replace('zero', '0', $input);\n\t$input = str_replace('one',\
    \ '1', $input);\n\t$input = str_replace('two', '2', $input);\n\t$input = str_replace('three',\
    \ '3', $input);\n\t$input = str_replace('four', '4', $input);\n\t$input = str_replace('five',\
    \ '5', $input);\n\t$input = str_replace('six', '6', $input);\n\t$input = str_replace('seven',\
    \ '7', $input);\n\t$input = str_replace('eight', '8', $input);\n\t$input = str_replace('nine',\
    \ '9', $input);\n\tsort($input);\n\t$input = str_replace('0', 'zero', $input);\n\
    \t$input = str_replace('1', 'one', $input);\n\t$input = str_replace('2', 'two',\
    \ $input);\n\t$input = str_replace('3', 'three', $input);\n\t$input = str_replace('4',\
    \ 'four', $input);\n\t$input = str_replace('5', 'five', $input);\n\t$input = str_replace('6',\
    \ 'six', $input);\n\t$input = str_replace('7', 'seven', $input);\n\t$input = str_replace('8',\
    \ 'eight', $input);\n\t$input = str_replace('9', 'nine', $input);\n\treturn implode(\"\
    \ \", $input);\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $nums = array('zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' =>\
    \ 4, 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n    $sorted\
    \ = array();\n    $ret = '';\n    foreach ($numbers as $number) {\n        $sorted[]\
    \ = $nums[$number];\n    }\n    sort($sorted);\n    foreach ($sorted as $number)\
    \ {\n        $ret .= array_search($number, $nums) . ' ';\n    }\n    return $ret;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5keuzp3d.php:27\n\
    Stack trace:\n#0 /tmp/tmp5keuzp3d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5keuzp3d.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numArray = explode(\" \", $numbers);\n\
    \tsort($numArray);\n\treturn implode(\" \", $numArray);\n}\necho sort_numbers('three\
    \ one five');\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "five one three\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr1agzy7n.php:20\n\
    Stack trace:\n#0 /tmp/tmpr1agzy7n.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpr1agzy7n.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $values = [\n        'zero' => 0,\n        'one' => 1,\n        'two' =>\
    \ 2,\n        'three' => 3,\n        'four' => 4,\n        'five' => 5,\n    \
    \    'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine'\
    \ => 9,\n    ];\n    $result = array_map(function($item) use ($values) {\n   \
    \     return $values[$item];\n    }, $numbers);\n    sort($result);\n    $result\
    \ = array_map(function($item) use ($values) {\n        return array_search($item,\
    \ $values);\n    }, $result);\n    return implode(' ', $result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeizcco1r.php:36\n\
    Stack trace:\n#0 /tmp/tmpeizcco1r.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpeizcco1r.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $valid_numbers = array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine');\n    $sorted_numbers = array();\n    foreach ($numbers\
    \ as $number) {\n        if (in_array($number, $valid_numbers)) {\n          \
    \  $sorted_numbers[] = $number;\n        }\n    }\n    sort($sorted_numbers);\n\
    \    return implode(' ', $sorted_numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwm8mwxk.php:27\n\
    Stack trace:\n#0 /tmp/tmpiwm8mwxk.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpiwm8mwxk.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$numbers = map_numbers($numbers);\n\tsort($numbers);\n\t$numbers = map_numbers($numbers,\
    \ false);\n\treturn implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function map_numbers()\
    \ in /tmp/tmphoxftc65.php:9\nStack trace:\n#0 /tmp/tmphoxftc65.php(16): sort_numbers(Array)\n\
    #1 /tmp/tmphoxftc65.php(20): candidate('')\n#2 /tmp/tmphoxftc65.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmphoxftc65.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $map = array(\n    'zero' => 0,\n\
    \    'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four' => 4,\n    'five'\
    \ => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' => 8,\n    'nine' =>\
    \ 9,\n  );\n  $numbers = explode(' ', $numbers);\n  $numbers = array_map(function($i)\
    \ use ($map) {\n    return $map[$i];\n  }, $numbers);\n  sort($numbers);\n  $numbers\
    \ = array_map(function($i) use ($map) {\n    $map = array_flip($map);\n    return\
    \ $map[$i];\n  }, $numbers);\n  return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$nums = explode(' ', $numbers);\n\
    \tforeach ($nums as $k => $v) {\n\t\t$num = array(\n\t\t\t'zero' => 0,\n\t\t\t\
    'one' => 1,\n\t\t\t'two' => 2,\n\t\t\t'three' => 3,\n\t\t\t'four' => 4,\n\t\t\t\
    'five' => 5,\n\t\t\t'six' => 6,\n\t\t\t'seven' => 7,\n\t\t\t'eight' => 8,\n\t\t\
    \t'nine' => 9\n\t\t);\n\t\t$nums[$k] = $num[$v];\n\t}\n\tsort($nums);\n\tforeach\
    \ ($nums as $k => $v) {\n\t\t$num = array(\n\t\t\t0 => 'zero',\n\t\t\t1 => 'one',\n\
    \t\t\t2 => 'two',\n\t\t\t3 => 'three',\n\t\t\t4 => 'four',\n\t\t\t5 => 'five',\n\
    \t\t\t6 => 'six',\n\t\t\t7 => 'seven',\n\t\t\t8 => 'eight',\n\t\t\t9 => 'nine'\n\
    \t\t);\n\t\t$nums[$k] = $num[$v];\n\t}\n\treturn implode(' ', $nums);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $array = explode(' ', $numbers);\n\
    \  $newArray = [];\n  foreach ($array as $value) {\n    switch ($value) {\n  \
    \    case 'zero':\n        $newArray[] = 0;\n        break;\n      case 'one':\n\
    \        $newArray[] = 1;\n        break;\n      case 'two':\n        $newArray[]\
    \ = 2;\n        break;\n      case 'three':\n        $newArray[] = 3;\n      \
    \  break;\n      case 'four':\n        $newArray[] = 4;\n        break;\n    \
    \  case 'five':\n        $newArray[] = 5;\n        break;\n      case 'six':\n\
    \        $newArray[] = 6;\n        break;\n      case 'seven':\n        $newArray[]\
    \ = 7;\n        break;\n      case 'eight':\n        $newArray[] = 8;\n      \
    \  break;\n      case 'nine':\n        $newArray[] = 9;\n        break;\n    }\n\
    \  }\n  sort($newArray);\n  $finalArray = [];\n  foreach ($newArray as $num) {\n\
    \    switch ($num) {\n      case 0:\n        $finalArray[] = 'zero';\n       \
    \ break;\n      case 1:\n        $finalArray[] = 'one';\n        break;\n    \
    \  case 2:\n        $finalArray[] = 'two';\n        break;\n      case 3:\n  \
    \      $finalArray[] = 'three';\n        break;\n      case 4:\n        $finalArray[]\
    \ = 'four';\n        break;\n      case 5:\n        $finalArray[] = 'five';\n\
    \        break;\n      case 6:\n        $finalArray[] = 'six';\n        break;\n\
    \      case 7:\n        $finalArray[] = 'seven';\n        break;\n      case 8:\n\
    \        $finalArray[] = 'eight';\n        break;\n      case 9:\n        $finalArray[]\
    \ = 'nine';\n        break;\n    }\n  }\n  return implode(' ', $finalArray);\n\
    }\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $number_map = array('zero' =>\
    \ 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' =>\
    \ 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n    $numbers = explode(' ', $numbers);\n\
    \    foreach ($numbers as $key => $value) {\n        $numbers[$key] = $number_map[$value];\n\
    \    }\n    sort($numbers);\n    foreach ($numbers as $key => $value) {\n    \
    \    $numbers[$key] = array_search($value, $number_map);\n    }\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp95r4mlj.php:25\n\
    Stack trace:\n#0 /tmp/tmpp95r4mlj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpp95r4mlj.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$return = \"\";\n\t$numbers = explode(\"\
    \ \", $numbers);\n\t$new_numbers = [];\n\tforeach ($numbers as $key => $number)\
    \ {\n\t\t$new_numbers[$key] = number($number);\n\t}\n\tasort($new_numbers);\n\t\
    foreach ($new_numbers as $key => $number) {\n\t\t$new_numbers[$key] = word($number);\n\
    \t}\n\t$return = implode(\" \", $new_numbers);\n\treturn $return;\n}\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number() in /tmp/tmptpbo5ggh.php:12\n\
    Stack trace:\n#0 /tmp/tmptpbo5ggh.php(22): sort_numbers(Array)\n#1 /tmp/tmptpbo5ggh.php(26):\
    \ candidate('')\n#2 /tmp/tmptpbo5ggh.php(33): test()\n#3 {main}\n  thrown in /tmp/tmptpbo5ggh.php\
    \ on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers_array = explode(' ', $numbers);\n\
    \tsort($numbers_array);\n\t$sorted_numbers = implode(' ', $numbers_array);\n\t\
    return $sorted_numbers;\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyu4557ad.php:20\n\
    Stack trace:\n#0 /tmp/tmpyu4557ad.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyu4557ad.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$number_map = [\n\t\t'zero' => 0,\n\
    \t\t'one' => 1,\n\t\t'two' => 2,\n\t\t'three' => 3,\n\t\t'four' => 4,\n\t\t'five'\
    \ => 5,\n\t\t'six' => 6,\n\t\t'seven' => 7,\n\t\t'eight' => 8,\n\t\t'nine' =>\
    \ 9\n\t];\n\t$numbers = explode(' ', $numbers);\n\t$numbers = array_map(function($n)\
    \ use ($number_map) {\n\t\treturn $number_map[$n];\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($n) use ($number_map) {\n\t\treturn array_search($n,\
    \ $number_map);\n\t}, $numbers);\n\treturn implode(' ', $numbers);\n}\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqywtcdzo.php:35\n\
    Stack trace:\n#0 /tmp/tmpqywtcdzo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqywtcdzo.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // map number to a number\n  \
    \  $mapping = [\n        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n\
    \        'three' => 3,\n        'four' => 4,\n        'five' => 5,\n        'six'\
    \ => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine' => 9,\n\
    \    ];\n    // explode string to array\n    $numbers = explode(' ', $numbers);\n\
    \    // sort array and reverse array\n    sort($numbers);\n    // map number to\
    \ text\n    $numbers = array_map(function($number) use ($mapping) {\n        return\
    \ array_search($number, $mapping);\n    }, $numbers);\n    // implode array to\
    \ string\n    return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpefbp5u8a.php:38\n\
    Stack trace:\n#0 /tmp/tmpefbp5u8a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpefbp5u8a.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbersArray = explode(' ', $numbers);\n\
    \    $numbersArray = array_unique($numbersArray);\n    $numbersArray = array_values($numbersArray);\n\
    \    for ($i = 0; $i < count($numbersArray); $i++) {\n        for ($j = $i; $j\
    \ < count($numbersArray); $j++) {\n            if (convertNumberToInt($numbersArray[$i])\
    \ > convertNumberToInt($numbersArray[$j])) {\n                $temp = $numbersArray[$i];\n\
    \                $numbersArray[$i] = $numbersArray[$j];\n                $numbersArray[$j]\
    \ = $temp;\n            }\n        }\n    }\n    return implode(' ', $numbersArray);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convertNumberToInt()\
    \ in /tmp/tmpq6w27v_r.php:13\nStack trace:\n#0 /tmp/tmpq6w27v_r.php(24): sort_numbers('')\n\
    #1 /tmp/tmpq6w27v_r.php(28): candidate('')\n#2 /tmp/tmpq6w27v_r.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq6w27v_r.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $num_array = explode(' ', $numbers);\n\
    \    // convert $num_array to all integers\n    for ($i = 0; $i < count($num_array);\
    \ $i++) {\n        switch ($num_array[$i]) {\n            case 'zero':\n     \
    \           $num_array[$i] = 0;\n                break;\n            case 'one':\n\
    \                $num_array[$i] = 1;\n                break;\n            case\
    \ 'two':\n                $num_array[$i] = 2;\n                break;\n      \
    \      case 'three':\n                $num_array[$i] = 3;\n                break;\n\
    \            case 'four':\n                $num_array[$i] = 4;\n             \
    \   break;\n            case 'five':\n                $num_array[$i] = 5;\n  \
    \              break;\n            case 'six':\n                $num_array[$i]\
    \ = 6;\n                break;\n            case 'seven':\n                $num_array[$i]\
    \ = 7;\n                break;\n            case 'eight':\n                $num_array[$i]\
    \ = 8;\n                break;\n            case 'nine':\n                $num_array[$i]\
    \ = 9;\n                break;\n        }\n    }\n    // sort $num_array\n   \
    \ sort($num_array);\n    // convert $num_array back to strings\n    for ($i =\
    \ 0; $i < count($num_array); $i++) {\n        switch ($num_array[$i]) {\n    \
    \        case 0:\n                $num_array[$i] = 'zero';\n                break;\n\
    \            case 1:\n                $num_array[$i] = 'one';\n              \
    \  break;\n            case 2:\n                $num_array[$i] = 'two';\n    \
    \            break;\n            case 3:\n                $num_array[$i] = 'three';\n\
    \                break;\n            case 4:\n                $num_array[$i] =\
    \ 'four';\n                break;\n            case 5:\n                $num_array[$i]\
    \ = 'five';\n                break;\n            case 6:\n                $num_array[$i]\
    \ = 'six';\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphds_7_7d.php on line 82\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    foreach ($numbers as $k => $v) {\n        switch ($v) {\n            case\
    \ 'zero':\n                $numbers[$k] = 0;\n                break;\n       \
    \     case 'one':\n                $numbers[$k] = 1;\n                break;\n\
    \            case 'two':\n                $numbers[$k] = 2;\n                break;\n\
    \            case 'three':\n                $numbers[$k] = 3;\n              \
    \  break;\n            case 'four':\n                $numbers[$k] = 4;\n     \
    \           break;\n            case 'five':\n                $numbers[$k] = 5;\n\
    \                break;\n            case 'six':\n                $numbers[$k]\
    \ = 6;\n                break;\n            case 'seven':\n                $numbers[$k]\
    \ = 7;\n                break;\n            case 'eight':\n                $numbers[$k]\
    \ = 8;\n                break;\n            case 'nine':\n                $numbers[$k]\
    \ = 9;\n                break;\n        }\n    }\n    sort($numbers);\n    foreach\
    \ ($numbers as $k => $v) {\n        switch ($v) {\n            case 0:\n     \
    \           $numbers[$k] = 'zero';\n                break;\n            case 1:\n\
    \                $numbers[$k] = 'one';\n                break;\n            case\
    \ 2:\n                $numbers[$k] = 'two';\n                break;\n        \
    \    case 3:\n                $numbers[$k] = 'three';\n                break;\n\
    \            case 4:\n                $numbers[$k] = 'four';\n               \
    \ break;\n            case 5:\n                $numbers[$k] = 'five';\n      \
    \          break;\n            case 6:\n                $numbers[$k] = 'six';\n\
    \                break;\n            case 7:\n                $numbers[$k] = 'seven';\n\
    \                break;\n            case 8:\n                $numbers[$k] = 'eight';\n\
    \                break;\n            case 9:\n                $numbers[$k] = 'nine';\n\
    \                break;\n       \nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0raa4qou.php on line 89\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $nums_arr = explode(' ', $numbers);\n\
    \  $num_words = array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine');\n  $num_order = array_flip($num_words);\n  usort($nums_arr,\
    \ function($a, $b) use ($num_order) {\n    return $num_order[$a] - $num_order[$b];\n\
    \  });\n  return implode(' ', $nums_arr);\n}\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$number_array = explode(' ', $numbers);\n\
    \t$word_key_array = array();\n\t// create a key-value array of numbers and key-values\n\
    \tforeach ($number_array as $key => $number) {\n\t\t$word_key_array[$number] =\
    \ $key;\n\t}\n\t// sort the array by key-value\n\tasort($word_key_array);\n\t\
    // re-index the array so the keys start at 0\n\t$word_key_array = array_values($word_key_array);\n\
    \t// now sort the original array in order by the key-value array\n\tarray_multisort($word_key_array,\
    \ $number_array);\n\t$sorted_numbers = implode(' ', $number_array);\n\treturn\
    \ $sorted_numbers;\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvfuxu3mc.php:32\n\
    Stack trace:\n#0 /tmp/tmpvfuxu3mc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvfuxu3mc.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // your code here\n}\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq5_06mzb.php:15\n\
    Stack trace:\n#0 /tmp/tmpq5_06mzb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpq5_06mzb.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$number_array = [];\n\tforeach ($numbers as $number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 'zero':\n\t\t\t\t$number_array[] = 0;\n\t\t\t\tbreak;\n\t\t\t\
    case 'one':\n\t\t\t\t$number_array[] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'two':\n\
    \t\t\t\t$number_array[] = 2;\n\t\t\t\tbreak;\n\t\t\tcase 'three':\n\t\t\t\t$number_array[]\
    \ = 3;\n\t\t\t\tbreak;\n\t\t\tcase 'four':\n\t\t\t\t$number_array[] = 4;\n\t\t\
    \t\tbreak;\n\t\t\tcase 'five':\n\t\t\t\t$number_array[] = 5;\n\t\t\t\tbreak;\n\
    \t\t\tcase 'six':\n\t\t\t\t$number_array[] = 6;\n\t\t\t\tbreak;\n\t\t\tcase 'seven':\n\
    \t\t\t\t$number_array[] = 7;\n\t\t\t\tbreak;\n\t\t\tcase 'eight':\n\t\t\t\t$number_array[]\
    \ = 8;\n\t\t\t\tbreak;\n\t\t\tcase 'nine':\n\t\t\t\t$number_array[] = 9;\n\t\t\
    \t\tbreak;\n\t\t}\n\t}\n\tsort($number_array);\n\tforeach ($number_array as $key\
    \ => $value) {\n\t\tswitch ($value) {\n\t\t\tcase 0:\n\t\t\t\t$number_array[$key]\
    \ = 'zero';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\t$number_array[$key] = 'one';\n\
    \t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$number_array[$key] = 'two';\n\t\t\t\t\
    break;\n\t\t\tcase 3:\n\t\t\t\t$number_array[$key] = 'three';\n\t\t\t\tbreak;\n\
    \t\t\tcase 4:\n\t\t\t\t$number_array[$key] = 'four';\n\t\t\t\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpurgpmbff.php on line 74\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $splitNumbers = explode(\" \", $numbers);\n\
    \  $numbers = array(\n    \"zero\" => 0,\n    \"one\" => 1,\n    \"two\" => 2,\n\
    \    \"three\" => 3,\n    \"four\" => 4,\n    \"five\" => 5,\n    \"six\" => 6,\n\
    \    \"seven\" => 7,\n    \"eight\" => 8,\n    \"nine\" => 9\n  );\n  $output\
    \ = array();\n  foreach ($splitNumbers as $sn) {\n    array_push($output, $numbers[$sn]);\n\
    \  }\n  sort($output);\n  $output = implode(\" \", $output);\n  return $output;\n\
    }\n\necho sort_numbers('three one five');\n\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1 3 5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_a9del3.php:38\n\
    Stack trace:\n#0 /tmp/tmpb_a9del3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpb_a9del3.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxuoaz0a.php:16\n\
    Stack trace:\n#0 /tmp/tmpzxuoaz0a.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpzxuoaz0a.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $word_to_digit = array('zero' =>\
    \ 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' =>\
    \ 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n  $numbers = explode(' ', $numbers);\n\
    \  $digit_to_word = array_flip($word_to_digit);\n  $result = array();\n  foreach\
    \ ($numbers as $word) {\n    $result[] = $word_to_digit[$word];\n  }\n  sort($result);\n\
    \  $result = array_map(function($number) use ($digit_to_word) {\n    return $digit_to_word[$number];\n\
    \  }, $result);\n  return implode(' ', $result);\n}\necho \"sort_numbers('three\
    \ one five')\\n\";\necho sort_numbers('three one five') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "sort_numbers('three one five')\none three five\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t// Your code here\n\t$arr = explode(\"\
    \ \", $numbers);\n\t$num = array(\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\");\n\t$newArr = array();\n\t\
    foreach ($arr as $v) {\n\t\t$k = array_search($v, $num);\n\t\t$newArr[$k] = $v;\n\
    \t}\n\tksort($newArr);\n\treturn implode(\" \", $newArr);\n}\n\n$result = sort_numbers('three\
    \ one five');\n\necho \"Result is: \" . $result;\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: 'Result is: one three five'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $splitNumbers = explode(\" \", $numbers);\n\
    \  sort($splitNumbers);\n  return implode(\" \", $splitNumbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3c4vrpe.php:20\n\
    Stack trace:\n#0 /tmp/tmpj3c4vrpe.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj3c4vrpe.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // Write your code here\n    //\
    \ To print results to the standard output you can use print\n    // Example: print\
    \ \"Hello world!\";\n    $numbers = explode(' ', $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        $number = str_replace('zero', '0', $number);\n        $number = str_replace('one',\
    \ '1', $number);\n        $number = str_replace('two', '2', $number);\n      \
    \  $number = str_replace('three', '3', $number);\n        $number = str_replace('four',\
    \ '4', $number);\n        $number = str_replace('five', '5', $number);\n     \
    \   $number = str_replace('six', '6', $number);\n        $number = str_replace('seven',\
    \ '7', $number);\n        $number = str_replace('eight', '8', $number);\n    \
    \    $number = str_replace('nine', '9', $number);\n        return $number;\n \
    \   }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        $number = str_replace('0', 'zero', $number);\n        $number = str_replace('1',\
    \ 'one', $number);\n        $number = str_replace('2', 'two', $number);\n    \
    \    $number = str_replace('3', 'three', $number);\n        $number = str_replace('4',\
    \ 'four', $number);\n        $number = str_replace('5', 'five', $number);\n  \
    \      $number = str_replace('6', 'six', $number);\n        $number = str_replace('7',\
    \ 'seven', $number);\n        $number = str_replace('8', 'eight', $number);\n\
    \        $number = str_replace('9', 'nine', $number);\n        return $number;\n\
    \    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nprint sort_numbers('three\
    \ one five');\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: one three five
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // do your work here\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz14uyh76.php:16\n\
    Stack trace:\n#0 /tmp/tmpz14uyh76.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpz14uyh76.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$number_values = [\n\t\t'zero' =>\
    \ 0,\n\t\t'one' => 1,\n\t\t'two' => 2,\n\t\t'three' => 3,\n\t\t'four' => 4,\n\t\
    \t'five' => 5,\n\t\t'six' => 6,\n\t\t'seven' => 7,\n\t\t'eight' => 8,\n\t\t'nine'\
    \ => 9\n\t];\n\t$numbers = explode(' ', $numbers);\n\t$sorted_numbers = array_map(function($value)\
    \ use ($number_values) {\n\t\treturn $number_values[$value];\n\t}, $numbers);\n\
    \tasort($sorted_numbers);\n\t$sorted_numbers = array_map(function($value) use\
    \ ($number_values) {\n\t\treturn array_search($value, $number_values);\n\t}, $sorted_numbers);\n\
    \treturn implode(' ', $sorted_numbers);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp074sj5hj.php:36\n\
    Stack trace:\n#0 /tmp/tmp074sj5hj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp074sj5hj.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // 'zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight' and 'nine'\n    $sorted = array();\n\
    \    $sort = explode(' ', $numbers);\n    foreach ($sort as $key => $val) {\n\
    \        switch ($val) {\n            case 'zero':\n                $sorted[0]\
    \ = $val;\n                break;\n            case 'one':\n                $sorted[1]\
    \ = $val;\n                break;\n            case 'two':\n                $sorted[2]\
    \ = $val;\n                break;\n            case 'three':\n               \
    \ $sorted[3] = $val;\n                break;\n            case 'four':\n     \
    \           $sorted[4] = $val;\n                break;\n            case 'five':\n\
    \                $sorted[5] = $val;\n                break;\n            case\
    \ 'six':\n                $sorted[6] = $val;\n                break;\n       \
    \     case 'seven':\n                $sorted[7] = $val;\n                break;\n\
    \            case 'eight':\n                $sorted[8] = $val;\n             \
    \   break;\n            case 'nine':\n                $sorted[9] = $val;\n   \
    \             break;\n        }\n    }\n    ksort($sorted);\n    return implode('\
    \ ', $sorted);\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  // TODO: implement me\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdyn993jy.php:16\n\
    Stack trace:\n#0 /tmp/tmpdyn993jy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdyn993jy.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  // Split the string of numbers into\
    \ an array\n  $numbers_array = explode(' ', $numbers);\n  // create a new array\
    \ to hold the numerical values of the numbers\n  $numerical_array = array();\n\
    \  // loop through the numbers and create a new array of integers\n  foreach ($numbers_array\
    \ as $number) {\n    // Translate each number to its numerical value and add it\
    \ to the array\n    if ($number == 'zero') {\n      $numerical_array[] = 0;\n\
    \    } elseif ($number == 'one') {\n      $numerical_array[] = 1;\n    } elseif\
    \ ($number == 'two') {\n      $numerical_array[] = 2;\n    } elseif ($number ==\
    \ 'three') {\n      $numerical_array[] = 3;\n    } elseif ($number == 'four')\
    \ {\n      $numerical_array[] = 4;\n    } elseif ($number == 'five') {\n     \
    \ $numerical_array[] = 5;\n    } elseif ($number == 'six') {\n      $numerical_array[]\
    \ = 6;\n    } elseif ($number == 'seven') {\n      $numerical_array[] = 7;\n \
    \   } elseif ($number == 'eight') {\n      $numerical_array[] = 8;\n    } elseif\
    \ ($number == 'nine') {\n      $numerical_array[] = 9;\n    }\n  }\n  // sort\
    \ the numerical array\n  sort($numerical_array);\n  // create an array to hold\
    \ the translated numerical values\n  $translated_array = array();\n  // loop through\
    \ the sorted array of integers and translate them to their word equivalents\n\
    \  foreach ($numerical_array as $number) {\n    // Translate each integer to its\
    \ word and add it to the array\n    if ($number == 0) {\n      $translated_array[]\
    \ = 'zero';\n    } elseif ($number == 1) {\n      $translated_array[] = 'one';\n\
    \    } elseif ($number == 2) {\n      $translated_array[] = 'two';\n    } elseif\
    \ ($number == 3) {\n      $translated_\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpennl7gi8.php on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($n){\n    $numeral = ['zero' => 0, 'one' => 1,\
    \ 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' => 6, 'seven' => 7,\
    \ 'eight' => 8, 'nine' => 9];\n    return $numeral[$n];\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($n){\n    $numeral = [0 => 'zero', 1 => 'one',\
    \ 2 => 'two', 3 => 'three', 4 => 'four', 5 => 'five', 6 => 'six', 7 => 'seven',\
    \ 8 => 'eight', 9 => 'nine'];\n    return $numeral[$n];\n  }, $numbers);\n  return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$number_map = array('zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four'\
    \ => 4, 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n\t\
    $numbers = array_map(function($v) use ($number_map) { return $number_map[$v];\
    \ }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($v) use ($number_map)\
    \ { return array_search($v, $number_map); }, $numbers);\n\treturn implode(' ',\
    \ $numbers);\n}\n\n$input = 'three one five zero four seven six nine two eight';\n\
    echo sort_numbers($input);\necho PHP_EOL;\nfunction candidate(...$args) {\n  \
    \  return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "zero one two three four five six seven eight nine\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp3q5dez25.php:24\nStack trace:\n#0 /tmp/tmp3q5dez25.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3q5dez25.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \tforeach ($numbers as $num) {\n\t\t$num_values[] = strtr($num, array('zero' =>\
    \ 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' =>\
    \ 6, 'seven' => 7, 'eight' => 8, 'nine' => 9));\n\t}\n\tsort($num_values);\n\t\
    foreach ($num_values as $num) {\n\t\t$new_values[] = strtr($num, array(0 => 'zero',\
    \ 1 => 'one', 2 => 'two', 3 => 'three', 4 => 'four', 5 => 'five', 6 => 'six',\
    \ 7 => 'seven', 8 => 'eight', 9 => 'nine'));\n\t}\n\treturn implode(' ', $new_values);\n\
    }\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $key = array('zero' => 0, 'one'\
    \ => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' => 6, 'seven'\
    \ => 7, 'eight' => 8, 'nine' => 9);\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($word) use ($key) {\n        return $key[$word];\n\
    \    }, $numbers);\n    sort($numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gchulb_.php:23\n\
    Stack trace:\n#0 /tmp/tmp4gchulb_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4gchulb_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$number_array = explode(' ', $numbers);\n\
    \t$number_list = array();\n\tforeach ($number_array as $number) {\n\t\tswitch\
    \ ($number) {\n\t\t\tcase 'zero':\n\t\t\t\t$number_list[] = 0;\n\t\t\t\tbreak;\n\
    \t\t\tcase 'one':\n\t\t\t\t$number_list[] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'two':\n\
    \t\t\t\t$number_list[] = 2;\n\t\t\t\tbreak;\n\t\t\tcase 'three':\n\t\t\t\t$number_list[]\
    \ = 3;\n\t\t\t\tbreak;\n\t\t\tcase 'four':\n\t\t\t\t$number_list[] = 4;\n\t\t\t\
    \tbreak;\n\t\t\tcase 'five':\n\t\t\t\t$number_list[] = 5;\n\t\t\t\tbreak;\n\t\t\
    \tcase 'six':\n\t\t\t\t$number_list[] = 6;\n\t\t\t\tbreak;\n\t\t\tcase 'seven':\n\
    \t\t\t\t$number_list[] = 7;\n\t\t\t\tbreak;\n\t\t\tcase 'eight':\n\t\t\t\t$number_list[]\
    \ = 8;\n\t\t\t\tbreak;\n\t\t\tcase 'nine':\n\t\t\t\t$number_list[] = 9;\n\t\t\t\
    \tbreak;\n\t\t}\n\t}\n\tsort($number_list);\n\tforeach ($number_list as $num_key\
    \ => $num_value) {\n\t\tswitch ($num_value) {\n\t\t\tcase 0:\n\t\t\t\t$number_list[$num_key]\
    \ = 'zero';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\t$number_list[$num_key] = 'one';\n\
    \t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$number_list[$num_key] = 'two';\n\t\t\t\
    \tbreak;\n\t\t\tcase 3:\n\t\t\t\t$number_list[$num_key] = 'three';\n\t\t\t\tbreak;\n\
    \t\t\tcase 4:\n\t\t\t\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpuz9ts7qs.php on line 73\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t// Create array for numbers\n\t\
    $numbers_array = explode(' ', $numbers);\n\t// Create array for sort order\n\t\
    $sort_order = array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine');\n\t// Sort number array using sort order\n\tarray_multisort($sort_order,\
    \ $numbers_array);\n\t// return new array as string\n\treturn implode(' ', $numbers_array);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: array_multisort(): Array sizes are inconsistent in /tmp/tmpx65qdjd5.php\
    \ on line 13\n\nWarning: array_multisort(): Array sizes are inconsistent in /tmp/tmpx65qdjd5.php\
    \ on line 13\n\nWarning: array_multisort(): Array sizes are inconsistent in /tmp/tmpx65qdjd5.php\
    \ on line 13\n\nWarning: array_multisort(): Array sizes are inconsistent in /tmp/tmpx65qdjd5.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx65qdjd5.php:26\n\
    Stack trace:\n#0 /tmp/tmpx65qdjd5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpx65qdjd5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  // Write your code here\n  // To\
    \ print results to the standard output you can use print\n  // Example: print\
    \ \"Hello world!\";\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgnl2843_.php:17\n\
    Stack trace:\n#0 /tmp/tmpgnl2843_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgnl2843_.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  // Your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvi3d5j42.php:16\n\
    Stack trace:\n#0 /tmp/tmpvi3d5j42.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvi3d5j42.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $nums = explode(' ', $numbers);\n\
    \    $nums_as_numbers = array();\n    $return_nums = array();\n    $i = 0;\n \
    \   foreach ($nums as $num) {\n        $nums_as_numbers[$i] = numToDigit($num);\n\
    \        $i++;\n    }\n    asort($nums_as_numbers);\n    foreach ($nums_as_numbers\
    \ as $num) {\n        $return_nums[] = digitToNum($num);\n    }\n    return implode('\
    \ ', $return_nums);\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function numToDigit()\
    \ in /tmp/tmply30koz4.php:13\nStack trace:\n#0 /tmp/tmply30koz4.php(23): sort_numbers('')\n\
    #1 /tmp/tmply30koz4.php(27): candidate('')\n#2 /tmp/tmply30koz4.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmply30koz4.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $number_array = explode(' ', $numbers);\n\
    \  $numbers_sorted = [];\n  $number_names = ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'];\n  foreach ($number_array as $number)\
    \ {\n    $numbers_sorted[] = array_search($number, $number_names);\n  }\n  asort($numbers_sorted);\n\
    \  $numbers_sorted = array_unique($numbers_sorted);\n  $numbers_sorted = array_values($numbers_sorted);\n\
    \  $number_names_sorted = [];\n  foreach ($numbers_sorted as $number) {\n    $number_names_sorted[]\
    \ = $number_names[$number];\n  }\n  return implode(' ', $number_names_sorted);\n\
    }\n\necho sort_numbers('five five six six six six one five one two three three')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "one two three five six\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpza9x9ln8.php:30\nStack trace:\n#0 /tmp/tmpza9x9ln8.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmpza9x9ln8.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $number_map = [\n        'zero'\
    \ => 0,\n        'one' => 1,\n        'two' => 2,\n        'three' => 3,\n   \
    \     'four' => 4,\n        'five' => 5,\n        'six' => 6,\n        'seven'\
    \ => 7,\n        'eight' => 8,\n        'nine' => 9,\n    ];\n    $numbers = explode('\
    \ ', $numbers);\n    $numbers = array_map(function($number) use ($number_map)\
    \ {\n        return $number_map[$number];\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) use ($number_map) {\n        return\
    \ array_search($number, $number_map);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\n$inputs = [\n    'three one five',\n    'zero one two three\
    \ four five six seven eight nine',\n    'one two zero four three five six seven\
    \ eight nine',\n    'zero one two three four six seven eight nine',\n    'one\
    \ two three four five six seven eight nine',\n    'zero one two three four five\
    \ six seven eight',\n    'zero one two three four five six seven',\n    'zero\
    \ one two three four five six',\n    'zero one two three four five',\n    'zero\
    \ one two three four',\n    'zero one two three',\n    'zero one two',\n    'zero\
    \ one',\n    'zero',\n];\n\nforeach ($inputs as $input) {\n    fwrite(STDOUT,\
    \ sort_numbers($input) . PHP_EOL);\n}\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "one three five\nzero one two three four five six seven eight nine\nzero\
    \ one two three four five six seven eight nine\nzero one two three four six seven\
    \ eight nine\none two three four five six seven eight nine\nzero one two three\
    \ four five six seven eight\nzero one two three four five six seven\nzero one\
    \ two three four five six\nzero one two three four five\nzero one two three four\n\
    zero one two three\nzero one two\nzero one\nzero\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpp5ox62oz.php:56\nStack trace:\n#0 /tmp/tmpp5ox62oz.php(63):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpp5ox62oz.php on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // Your code here\n\t$arr = explode(\"\
    \ \", $numbers);\n\t$res = [];\n\t$nums = ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'];\n\tforeach ($arr as $value) {\n\t\t\
    $res[] = array_search($value, $nums);\n\t}\n\tsort($res);\n\tforeach ($res as\
    \ $index => $value) {\n\t\t$res[$index] = $nums[$value];\n\t}\n\treturn implode(\"\
    \ \", $res);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3pfepp_q.php:27\n\
    Stack trace:\n#0 /tmp/tmp3pfepp_q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3pfepp_q.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $words = explode(' ', $numbers);\n\
    \  $values = array_map(function($word) {\n    return number_to_value($word);\n\
    \  }, $words);\n  sort($values);\n  $sorted_words = array_map(function($value)\
    \ {\n    return value_to_number($value);\n  }, $values);\n  return implode(' ',\
    \ $sorted_words);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_value()\
    \ in /tmp/tmp2wem37us.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp2wem37us.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp2wem37us.php(20):\
    \ sort_numbers('')\n#3 /tmp/tmp2wem37us.php(24): candidate('')\n#4 /tmp/tmp2wem37us.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp2wem37us.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $arr = array_map('intval', explode('\
    \ ', $numbers));\n    sort($arr);\n    return implode(' ', $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2rdt2sm.php:18\n\
    Stack trace:\n#0 /tmp/tmpt2rdt2sm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpt2rdt2sm.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $nums = explode(' ', $numbers);\n\
    \  $nums = convert($nums);\n  $sorted = sort($nums);\n  $nums = unconvert($nums);\n\
    \  return implode(' ', $nums);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert() in\
    \ /tmp/tmpftwquzgg.php:9\nStack trace:\n#0 /tmp/tmpftwquzgg.php(16): sort_numbers('')\n\
    #1 /tmp/tmpftwquzgg.php(20): candidate('')\n#2 /tmp/tmpftwquzgg.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmpftwquzgg.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numArray = explode(\" \", $numbers);\n\
    \    $sortedArray = [];\n    foreach ($numArray as $num) {\n        switch ($num)\
    \ {\n            case 'zero':\n                $sortedArray[0] = 'zero';\n   \
    \             break;\n            case 'one':\n                $sortedArray[1]\
    \ = 'one';\n                break;\n            case 'two':\n                $sortedArray[2]\
    \ = 'two';\n                break;\n            case 'three':\n              \
    \  $sortedArray[3] = 'three';\n                break;\n            case 'four':\n\
    \                $sortedArray[4] = 'four';\n                break;\n         \
    \   case 'five':\n                $sortedArray[5] = 'five';\n                break;\n\
    \            case 'six':\n                $sortedArray[6] = 'six';\n         \
    \       break;\n            case 'seven':\n                $sortedArray[7] = 'seven';\n\
    \                break;\n            case 'eight':\n                $sortedArray[8]\
    \ = 'eight';\n                break;\n            case 'nine':\n             \
    \   $sortedArray[9] = 'nine';\n                break;\n        }\n    }\n    ksort($sortedArray);\n\
    \    $newString = implode(\" \", $sortedArray);\n    return $newString;\n}\n\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $choices = array(\"zero\", \"\
    one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\",\
    \ \"nine\");\n    $array = explode(\" \", $numbers);\n    foreach ($array as $key\
    \ => $value) {\n        $array[$key] = array_search($value, $choices);\n    }\n\
    \    sort($array);\n    foreach ($array as $key => $value) {\n        $array[$key]\
    \ = $choices[$value];\n    }\n    return implode(\" \", $array);\n}\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxyi7as6y.php:24\n\
    Stack trace:\n#0 /tmp/tmpxyi7as6y.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxyi7as6y.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers_to_sort = [];\n    $numbers_map = [\n        'zero' => 0,\n    \
    \    'one' => 1,\n        'two' => 2,\n        'three' => 3,\n        'four' =>\
    \ 4,\n        'five' => 5,\n        'six' => 6,\n        'seven' => 7,\n     \
    \   'eight' => 8,\n        'nine' => 9,\n    ];\n    foreach ($numbers as $number)\
    \ {\n        if (array_key_exists($number, $numbers_map)) {\n            $numbers_to_sort[]\
    \ = $numbers_map[$number];\n        }\n    }\n    sort($numbers_to_sort);\n  \
    \  $result = [];\n    foreach ($numbers_to_sort as $number) {\n        $result[]\
    \ = array_search($number, $numbers_map);\n    }\n    return implode(' ', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $keys = array(\n        'zero'\
    \ => 0,\n        'one' => 1,\n        'two' => 2,\n        'three' => 3,\n   \
    \     'four' => 4,\n        'five' => 5,\n        'six' => 6,\n        'seven'\
    \ => 7,\n        'eight' => 8,\n        'nine' => 9\n    );\n    $numbers = explode('\
    \ ', $numbers);\n    $sorted_numbers = array();\n    foreach ($numbers as $number)\
    \ {\n        $sorted_numbers[] = $keys[$number];\n    }\n    sort($sorted_numbers);\n\
    \    $result = array();\n    foreach ($sorted_numbers as $number) {\n        $result[]\
    \ = array_search($number, $keys);\n    }\n    return implode(' ', $result);\n\
    }\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqd2wyd0.php:37\n\
    Stack trace:\n#0 /tmp/tmpgqd2wyd0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgqd2wyd0.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$words = explode(' ', $numbers);\n\
    \t$numbers = [];\n\tforeach ($words as $word) {\n\t\t$numbers[] = word_to_number($word);\n\
    \t}\n\tsort($numbers);\n\t$words = [];\n\tforeach ($numbers as $number) {\n\t\t\
    $words[] = number_to_word($number);\n\t}\n\treturn implode(' ', $words);\n}\n\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function word_to_number()\
    \ in /tmp/tmp0_c78h4u.php:11\nStack trace:\n#0 /tmp/tmp0_c78h4u.php(22): sort_numbers(Array)\n\
    #1 /tmp/tmp0_c78h4u.php(26): candidate('')\n#2 /tmp/tmp0_c78h4u.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0_c78h4u.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  // TODO Implement\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvj7800yt.php:16\n\
    Stack trace:\n#0 /tmp/tmpvj7800yt.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvj7800yt.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $list = array('zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine');\n    $numbers = explode('\
    \ ', $numbers);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = 0; $j < count($numbers); $j++) {\n            if (array_search($numbers[$i],\
    \ $list) < array_search($numbers[$j], $list)) {\n                $temp = $numbers[$i];\n\
    \                $numbers[$i] = $numbers[$j];\n                $numbers[$j] =\
    \ $temp;\n            }\n        }\n    }\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  // $arr = explode(' ', $numbers);\n\
    \  // $result = [];\n  // $digits = [\n  //   'zero' => 0,\n  //   'one' => 1,\n\
    \  //   'two' => 2,\n  //   'three' => 3,\n  //   'four' => 4,\n  //   'five'\
    \ => 5,\n  //   'six' => 6,\n  //   'seven' => 7,\n  //   'eight' => 8,\n  //\
    \   'nine' => 9\n  // ];\n  // foreach ($arr as $value) {\n  //   $result[] =\
    \ $digits[$value];\n  // }\n  // sort($result);\n  // $result2 = [];\n  // foreach\
    \ ($result as $value) {\n  //   $result2[] = array_search($value, $digits);\n\
    \  // }\n  // return implode(' ', $result2);\n  $arr = explode(' ', $numbers);\n\
    \  $digits = [\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  ];\n  usort($arr, function($x, $y) use\
    \ ($digits) {\n    return $digits[$x] - $digits[$y];\n  });\n  return implode('\
    \ ', $arr);\n}\n\n$answer = sort_numbers('four three one');\necho $answer . PHP_EOL;\n\
    \nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "one three four\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  // Use array_flip() to create a\
    \ sorted array of numbers\n  $numbers_array = explode(' ', $numbers);\n  $number_map\
    \ = [\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three' => 3,\n\
    \    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight'\
    \ => 8,\n    'nine' => 9,\n  ];\n  $sorted_numbers = array_flip($number_map);\n\
    \  $sorted_numbers = array_keys($sorted_numbers);\n  asort($numbers_array);\n\
    \  // Use array_intersect_key() to map the array of numbers to the sorted array\
    \ of numbers\n  $return = [];\n  foreach ($numbers_array as $number) {\n    $return[]\
    \ = $sorted_numbers[$number];\n  }\n  return implode(' ', $return);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfc64ot2.php:39\n\
    Stack trace:\n#0 /tmp/tmpnfc64ot2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpnfc64ot2.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $nums = array_flip(['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n  $numbers\
    \ = explode(' ', $numbers);\n  $numbers = array_map(function($e) use ($nums) {\
    \ return $nums[$e]; }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($e)\
    \ use ($nums) { return array_search($e, $nums); }, $numbers);\n  return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp75d9whzz.php:21\n\
    Stack trace:\n#0 /tmp/tmp75d9whzz.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp75d9whzz.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t// Your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp95cld9h6.php:16\n\
    Stack trace:\n#0 /tmp/tmp95cld9h6.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp95cld9h6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // Your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh8pg8wt.php:16\n\
    Stack trace:\n#0 /tmp/tmpxh8pg8wt.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxh8pg8wt.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($value) {\n        return $value + 0;\n   \
    \ }, $numbers);\n    sort($numbers);\n    return implode(' ', $numbers);\n}\n\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp55qhp_wd.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55qhp_wd.php:21\n\
    Stack trace:\n#0 /tmp/tmp55qhp_wd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp55qhp_wd.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = preg_split('/ /', $numbers);\n\
    \  $num_dic = array(\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n   \
    \ 'three' => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven'\
    \ => 7,\n    'eight' => 8,\n    'nine' => 9\n  );\n  $numbers = array_map(function($number)\
    \ use ($num_dic) {\n    return $num_dic[$number];\n  }, $numbers);\n  sort($numbers);\n\
    \  $num_dic = array_flip($num_dic);\n  $numbers = array_map(function($number)\
    \ use ($num_dic) {\n    return $num_dic[$number];\n  }, $numbers);\n  return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $map = array('zero' => 0, 'one'\
    \ => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' => 6, 'seven'\
    \ => 7, 'eight' => 8, 'nine' => 9);\n  $numbers = explode(' ', $numbers);\n  $numbers\
    \ = array_map(function($num) use ($map) { return $map[$num]; }, $numbers);\n \
    \ sort($numbers);\n  $numbers = array_map(function($num) use ($map) { return array_search($num,\
    \ $map); }, $numbers);\n  return implode(' ', $numbers);\n}\necho sort_numbers('zero\
    \ one two three four five six seven eight nine');\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "zero one two three four five six seven eight nine\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp0ax6h_95.php:21\nStack trace:\n#0 /tmp/tmp0ax6h_95.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0ax6h_95.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers_list = explode(' ', $numbers);\n\
    \    $numeral_numbers = array();\n    foreach ($numbers_list as $n) {\n      \
    \  $numeral_numbers[$n] = numeral_to_number($n);\n    }\n    asort($numeral_numbers);\n\
    \    return implode(' ', array_keys($numeral_numbers));\n}\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function numeral_to_number()\
    \ in /tmp/tmpfd8oqme6.php:11\nStack trace:\n#0 /tmp/tmpfd8oqme6.php(17): sort_numbers('')\n\
    #1 /tmp/tmpfd8oqme6.php(21): candidate('')\n#2 /tmp/tmpfd8oqme6.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmpfd8oqme6.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $number_map = [\n    'zero' => 0,\n\
    \    'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four' => 4,\n    'five'\
    \ => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' => 8,\n    'nine' =>\
    \ 9,\n  ];\n  $numbers = explode(' ', $numbers);\n  foreach ($numbers as $key\
    \ => $value) {\n    $numbers[$key] = $number_map[$value];\n  }\n  sort($numbers);\n\
    \  foreach ($numbers as $key => $value) {\n    $numbers[$key] = array_search($value,\
    \ $number_map);\n  }\n  return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_84vwdfz.php:36\n\
    Stack trace:\n#0 /tmp/tmp_84vwdfz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_84vwdfz.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$ordinals = array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine');\n\tforeach ($numbers as $number) {\n\t\t$number = strtolower($number);\n\
    \t\tif (!in_array($number, $ordinals)) {\n\t\t\techo 'Error: Invalid word passed:\
    \ ' . $number . \"\\n\";\n\t\t\treturn;\n\t\t}\n\t}\n\t$numbers = array_unique($numbers);\n\
    \t$numbers = array_values($numbers);\n\t$out = '';\n\twhile (!empty($numbers))\
    \ {\n\t\t$last = count($numbers) - 1;\n\t\t$min = $numbers[0];\n\t\t$i = 0;\n\t\
    \tforeach ($numbers as $number) {\n\t\t\tif (array_search($number, $ordinals)\
    \ < array_search($min, $ordinals)) {\n\t\t\t\t$min = $number;\n\t\t\t\t$i = array_search($number,\
    \ $numbers);\n\t\t\t}\n\t\t}\n\t\t$out .= $min . ' ';\n\t\tunset($numbers[$i]);\n\
    \t\t$numbers = array_values($numbers);\n\t}\n\t$out = trim($out);\n\techo $out\
    \ . \"\\n\";\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Error: Invalid word passed: \n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpe33k_ni_.php:42\nStack trace:\n#0 /tmp/tmpe33k_ni_.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe33k_ni_.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $sort_numbers = array('zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine');\n  $numbers\
    \ = explode(' ', $numbers);\n  $numbers = array_flip($numbers);\n  foreach ($numbers\
    \ as $key => $value) {\n    $numbers[$key] = $sort_numbers[$key];\n  }\n  asort($numbers);\n\
    \  $numbers = array_flip($numbers);\n  return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: array_flip(): Can only flip STRING and INTEGER values! in /tmp/tmpxg70dv3p.php\
    \ on line 15\n\nWarning: array_flip(): Can only flip STRING and INTEGER values!\
    \ in /tmp/tmpxg70dv3p.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpxg70dv3p.php:25\nStack trace:\n#0 /tmp/tmpxg70dv3p.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxg70dv3p.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $nums = explode(' ', $numbers);\n\
    \  $ref = array('zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n  $sorted\
    \ = array();\n  foreach ($nums as $value) {\n    array_push($sorted, $ref[$value]);\n\
    \  }\n  sort($sorted);\n  $sorted = array_map(function($n) use ($ref) {\n    return\
    \ array_search($n, $ref);\n  }, $sorted);\n  return implode(' ', $sorted);\n}\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp2dmcdou.php:25\n\
    Stack trace:\n#0 /tmp/tmpp2dmcdou.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpp2dmcdou.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$array = explode(' ', $numbers);\n\
    \t$mapping = array('zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' =>\
    \ 4, 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n\t$map\
    \ = function($x) use ($mapping) {\n\t\treturn $mapping[$x];\n\t};\n\t$array =\
    \ array_map($map, $array);\n\tsort($array);\n\t$map = function($x) use ($mapping)\
    \ {\n\t\treturn array_search($x, $mapping);\n\t};\n\t$array = array_map($map,\
    \ $array);\n\treturn implode(' ', $array);\n}\n\necho sort_numbers('one two three\
    \ zero five') . \"\\n\";\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "zero one two three five\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmputs9jzwe.php:28\nStack trace:\n#0 /tmp/tmputs9jzwe.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmputs9jzwe.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers_array = explode(' ',\
    \ $numbers);\n    $int_array = [];\n    foreach ($numbers_array as $number) {\n\
    \        switch ($number) {\n            case 'zero':\n                $int_array[]\
    \ = 0;\n                break;\n            case 'one':\n                $int_array[]\
    \ = 1;\n                break;\n            case 'two':\n                $int_array[]\
    \ = 2;\n                break;\n            case 'three':\n                $int_array[]\
    \ = 3;\n                break;\n            case 'four':\n                $int_array[]\
    \ = 4;\n                break;\n            case 'five':\n                $int_array[]\
    \ = 5;\n                break;\n            case 'six':\n                $int_array[]\
    \ = 6;\n                break;\n            case 'seven':\n                $int_array[]\
    \ = 7;\n                break;\n            case 'eight':\n                $int_array[]\
    \ = 8;\n                break;\n            case 'nine':\n                $int_array[]\
    \ = 9;\n                break;\n        }\n    }\n    sort($int_array);\n    $string_array\
    \ = [];\n    foreach ($int_array as $int) {\n        switch ($int) {\n       \
    \     case 0:\n                $string_array[] = 'zero';\n                break;\n\
    \            case 1:\n                $string_array[] = 'one';\n             \
    \   break;\n            case 2:\n                $string_array[] = 'two';\n  \
    \              break;\n            case 3:\n                $string_array[] =\
    \ 'three';\n                break;\n            case 4:\n                $string_array[]\
    \ = 'four';\n                break;\n            case 5:\n                $string_array[]\
    \ = 'five';\n                break;\n            case 6:\n                $string_array[]\
    \ = 'six';\n                break;\n            case 7:\n                $string_array[]\
    \ = 'seven';\n                break;\n            case 8:\n                $string_array[]\
    \ = 'eight';\n                break;\n            case 9:\n                $string_array[]\
    \ = 'nine';\n                break;\n        }\n    }\n    return implode(' ',\
    \ $string_array);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t// Your code here\n\t$res = explode(\"\
    \ \", $numbers);\n\t$res = [\n\t\t'zero' => 0,\n\t\t'one' => 1,\n\t\t'two' =>\
    \ 2,\n\t\t'three' => 3,\n\t\t'four' => 4,\n\t\t'five' => 5,\n\t\t'six' => 6,\n\
    \t\t'seven' => 7,\n\t\t'eight' => 8,\n\t\t'nine' => 9,\n\t];\n\t$temp = \"\";\n\
    \tforeach ($res as $key => $value) {\n\t\tif ($key == $numbers) {\n\t\t\t$temp\
    \ = $value;\n\t\t}\n\t}\n\treturn $temp;\n}\n\necho sort_numbers('three one five');\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0jh1dg7.php:38\n\
    Stack trace:\n#0 /tmp/tmpg0jh1dg7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpg0jh1dg7.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers_arr = explode(' ', $numbers);\n\
    \  $numbers_arr = array_map(function($number) {\n    return [\n      'number'\
    \ => $number,\n      'value' => [\n        'zero' => 0,\n        'one' => 1,\n\
    \        'two' => 2,\n        'three' => 3,\n        'four' => 4,\n        'five'\
    \ => 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n \
    \       'nine' => 9,\n      ][$number]\n    ];\n  }, $numbers_arr);\n  usort($numbers_arr,\
    \ function($a, $b) {\n    return $a['value'] > $b['value'];\n  });\n  return implode('\
    \ ', array_map(function($number) {\n    return $number['number'];\n  }, $numbers_arr));\n\
    }\n\nvar_dump(sort_numbers('three one five'));\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string(14) \"one three five\"\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $map = array('zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n  // $map\
    \ = array('zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five'\
    \ => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n  $output = array();\n\
    \  foreach ($numbers as $number) {\n    array_push($output, $map[$number]);\n\
    \  }\n  sort($output);\n  $result = array();\n  foreach ($output as $number) {\n\
    \    $key = array_search($number, $map);\n    array_push($result, $key);\n  }\n\
    \  return implode(' ', $result);\n}\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s1a3hqf.php:28\n\
    Stack trace:\n#0 /tmp/tmp9s1a3hqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9s1a3hqf.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $number_values = array(\n        'zero' => 0,\n        'one' => 1,\n    \
    \    'two' => 2,\n        'three' => 3,\n        'four' => 4,\n        'five'\
    \ => 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n \
    \       'nine' => 9\n    );\n    $keyed_numbers = array();\n    foreach ($numbers\
    \ as $number) {\n        $keyed_numbers[$number_values[$number]] = $number;\n\
    \    }\n    ksort($keyed_numbers);\n    return implode(' ', $keyed_numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $num_map = [\n        'zero' =>\
    \ 0,\n        'one' => 1,\n        'two' => 2,\n        'three' => 3,\n      \
    \  'four' => 4,\n        'five' => 5,\n        'six' => 6,\n        'seven' =>\
    \ 7,\n        'eight' => 8,\n        'nine' => 9,\n    ];\n    $numbers = explode('\
    \ ', $numbers);\n    $numbers = array_map(function($number) use ($num_map) {\n\
    \        return $num_map[$number];\n    }, $numbers);\n    sort($numbers);\n \
    \   $numbers = array_map(function($number) use ($num_map) {\n        return array_search($number,\
    \ $num_map);\n    }, $numbers);\n    return implode(' ', $numbers);\n}\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07tc9zez.php:35\n\
    Stack trace:\n#0 /tmp/tmp07tc9zez.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp07tc9zez.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$array_of_numbers = explode(' ',\
    \ $numbers);\n\n\t// TODO: sort the numbers and return them as a space-delimited\
    \ string\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9b4x6xig.php:18\n\
    Stack trace:\n#0 /tmp/tmp9b4x6xig.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9b4x6xig.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $number_map = array('zero' => 0,\
    \ 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' => 6,\
    \ 'seven' => 7, 'eight' => 8, 'nine' => 9);\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) use ($number_map) {\n    return $number_map[$number];\n\
    \  }, $numbers);\n  sort($numbers);\n  $number_map = array_flip($number_map);\n\
    \  $numbers = array_map(function($number) use ($number_map) {\n    return $number_map[$number];\n\
    \  }, $numbers);\n  return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1u5zaynf.php:19\n\
    Stack trace:\n#0 /tmp/tmp1u5zaynf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1u5zaynf.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $num_arr = explode(' ', $numbers);\n\
    \    $nums = ['zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4,\
    \ 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9];\n    $results\
    \ = [];\n    foreach ($num_arr as $num) {\n        $results[] = $nums[$num];\n\
    \    }\n    sort($results);\n    foreach ($results as $key => $value) {\n    \
    \    $results[$key] = array_search($value, $nums);\n    }\n    return implode('\
    \ ', $results);\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp296jo0uy.php:25\n\
    Stack trace:\n#0 /tmp/tmp296jo0uy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp296jo0uy.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers_array = explode(' ', $numbers);\n\
    \  $numbers_array = array_map('sort_numbers_map', $numbers_array);\n  asort($numbers_array);\n\
    \  $numbers_array = array_map('sort_numbers_revert', $numbers_array);\n  return\
    \ implode(' ', $numbers_array);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'sort_numbers_map' not found or invalid function name in /tmp/tmpqm99vg59.php\
    \ on line 9\n\nWarning: asort() expects parameter 1 to be array, null given in\
    \ /tmp/tmpqm99vg59.php on line 10\n\nWarning: array_map() expects parameter 1\
    \ to be a valid callback, function 'sort_numbers_revert' not found or invalid\
    \ function name in /tmp/tmpqm99vg59.php on line 11\n\nWarning: implode(): Invalid\
    \ arguments passed in /tmp/tmpqm99vg59.php on line 12\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqm99vg59.php:20\nStack trace:\n#0 /tmp/tmpqm99vg59.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqm99vg59.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\tif (empty($numbers)) {\n\t\treturn\
    \ \"\";\n\t}\n\n\t$words = explode(\" \", $numbers);\n\t// Sort by word length\
    \ (value)\n\tasort($words);\n\treturn implode(\" \", $words);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg97npi63.php:25\n\
    Stack trace:\n#0 /tmp/tmpg97npi63.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpg97npi63.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // $numbers = array_map('strtolower',\
    \ explode(' ', $numbers));\n    $numbers = explode(' ', $numbers);\n    $replacements\
    \ = array(\n        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n \
    \       'three' => 3,\n        'four' => 4,\n        'five' => 5,\n        'six'\
    \ => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n \
    \   );\n    foreach ($numbers as $k => $v) {\n        $numbers[$k] = $replacements[$v];\n\
    \    }\n    sort($numbers);\n    $replacements = array_flip($replacements);\n\
    \    foreach ($numbers as $k => $v) {\n        $numbers[$k] = $replacements[$v];\n\
    \    }\n    return implode(' ', $numbers);\n}\n\n$fh = fopen($argv[1], \"r\");\n\
    while (!feof($fh)) {\n    $val = fgets($fh);\n    if ($val != \"\") {\n      \
    \  echo sort_numbers($val) . \"\\n\";\n    }\n}\nfclose($fh);\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "b'\\nWarning: fopen(): Filename cannot be empty in /tmp/tmpa03452x5.php\
    \ on line 33\\n\\nWarning: feof() expects parameter 1 to be resource, bool given\
    \ in /tmp/tmpa03452x5.php on line 34\\n\\nWarning: fgets() expects parameter 1\
    \ to be resource, bool given in /tmp/tmpa03452x5.php on line 35\\n\\nWarning:\
    \ feof() expects parameter 1 to be resource, bool given in /tmp/tmpa03452x5.php\
    \ on line 34\\n\\nWarning: fgets() expects parameter 1 to be resource, bool given\
    \ in /tmp/tmpa03452x5.php on line 35\\n\\nWarning: feof() expects parameter 1\
    \ to be resource, bool given in /tmp/tmpa03452x5.php on line 34\\n\\nWarning:\
    \ fgets() expects parameter 1 to be resource, bool given in /tmp/tmpa03452x5.php\
    \ on line 35\\n\\nWarning: feof() expects parameter 1 to be resource, bool given\
    \ in /tmp/tmpa03452x5.php on line 34\\n\\nWarning: fgets() expects parameter 1\
    \ to be resource, bool given in /tmp/tmpa03452x5.php on line 35\\n\\nWarning:\
    \ feof() expects parameter 1 to be resource, bool given in /tmp/tmpa03452x5.php\
    \ on line 34\\n\\nWarning: fgets() expects parameter 1 to be resource, bool given\
    \ in /tmp/tmpa03452x5.php on line 35\\n\\nWarning: feof() expects parameter 1\
    \ to be resource, bool given in /tmp/tmpa03452x5.php on line 34\\n\\nWarning:\
    \ fgets() expects parameter 1 to be resource, bool given in /tmp/tmpa03452x5.php\
    \ on line 35\\n\\nWarning: feof() expects parameter 1 to be resource, bool given\
    \ in /tmp/tmpa03452x5.php on line 34\\n\\nWarning: fgets() expects parameter 1\
    \ to be resource, bool given in /tmp/tmpa03452x5.php on line 35\\n\\nWarning:\
    \ feof() expects parameter 1 to be resource, bool given in /tmp/tmpa03452x5.php\
    \ on line 34\\n\\nWarning: fgets() expects parameter 1 to be resource, bool given\
    \ in /tmp/tmpa03452x5.php on line 35\\n\\nWarning: feof() expects parameter 1\
    \ to be resource, bool given in /tmp/tmpa03452x5.php on line 34\\n\\nWarning:\
    \ fgets() expects parameter 1 to be resource, bool given in /tmp/tmpa03452x5.php\
    \ on line 35\\n\\nWarning: feof() expects parameter 1 to be resource, bool given\
    \ in /tmp/tmpa03452x5.php on line 34\\n\\nWarning: fgets() expects parameter "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $array = explode(' ', $numbers);\n\
    \    sort($array);\n    return implode(' ', $array);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcwufuiaf.php:20\n\
    Stack trace:\n#0 /tmp/tmpcwufuiaf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcwufuiaf.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $indexed_numbers = array();\n    foreach ($numbers as $number) {\n      \
    \  $indexed_numbers[$number] = str_word_count($number);\n    }\n    $sorted_indexed_numbers\
    \ = asort($indexed_numbers);\n    $sorted_numbers = array_keys($sorted_indexed_numbers);\n\
    \    return implode(' ', $sorted_numbers);\n}\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_keys() expects parameter 1 to be array, bool given in\
    \ /tmp/tmpbxrtrrc_.php on line 14\n\nWarning: implode(): Invalid arguments passed\
    \ in /tmp/tmpbxrtrrc_.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpbxrtrrc_.php:22\nStack trace:\n#0 /tmp/tmpbxrtrrc_.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbxrtrrc_.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $array = explode(' ', $numbers);\n\
    \    $sort = array(\n        'zero' => 0,\n        'one' => 1,\n        'two'\
    \ => 2,\n        'three' => 3,\n        'four' => 4,\n        'five' => 5,\n \
    \       'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine'\
    \ => 9\n    );\n    usort($array, function($a, $b) use ($sort) {\n        return\
    \ $sort[$a] - $sort[$b];\n    });\n    return implode(' ', $array);\n}\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    sort($numbers);\n    return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavfxiela.php:20\n\
    Stack trace:\n#0 /tmp/tmpavfxiela.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpavfxiela.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    // Replace 'zero' with 0, etc.\n    foreach ($numbers as $index => $number)\
    \ {\n        switch ($number) {\n            case 'zero':\n                $numbers[$index]\
    \ = 0;\n                break;\n            case 'one':\n                $numbers[$index]\
    \ = 1;\n                break;\n            case 'two':\n                $numbers[$index]\
    \ = 2;\n                break;\n            case 'three':\n                $numbers[$index]\
    \ = 3;\n                break;\n            case 'four':\n                $numbers[$index]\
    \ = 4;\n                break;\n            case 'five':\n                $numbers[$index]\
    \ = 5;\n                break;\n            case 'six':\n                $numbers[$index]\
    \ = 6;\n                break;\n            case 'seven':\n                $numbers[$index]\
    \ = 7;\n                break;\n            case 'eight':\n                $numbers[$index]\
    \ = 8;\n                break;\n            case 'nine':\n                $numbers[$index]\
    \ = 9;\n                break;\n        }\n    }\n    sort($numbers);\n    foreach\
    \ ($numbers as $index => $number) {\n        switch ($number) {\n            case\
    \ 0:\n                $numbers[$index] = 'zero';\n                break;\n   \
    \         case 1:\n                $numbers[$index] = 'one';\n               \
    \ break;\n            case 2:\n                $numbers[$index] = 'two';\n   \
    \             break;\n            case 3:\n                $numbers[$index] =\
    \ 'three';\n                break;\n            case 4:\n                $numbers[$index]\
    \ = 'four';\n                break;\n            case 5:\n                $numbers[$index]\
    \ = 'five';\n                break;\n            case 6:\n                $numbers[$index]\
    \ = 'six';\n                break;\n            case 7:\n                $numbers[$index]\
    \ = 'seven';\n                break;\n            case 8:\n                $numbers[$index]\
    \ = 'eight';\n                break;\n            case 9:\n                $numbers[$\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpddgtzmht.php on line 76\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $keys = [\n    'zero' => 0,\n  \
    \  'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four' => 4,\n    'five'\
    \ => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' => 8,\n    'nine' =>\
    \ 9,\n  ];\n  $numbers = explode(' ', $numbers);\n  foreach ($numbers as $number)\
    \ {\n    $numberKey = $keys[$number];\n    $numberKeys[] = $numberKey;\n  }\n\
    \  sort($numberKeys);\n  foreach ($numberKeys as $numberKey) {\n    $numberKeysSorted[]\
    \ = array_search($numberKey, $keys);\n  }\n  return implode(' ', $numberKeysSorted);\n\
    }\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6jd6ctv1.php:36\n\
    Stack trace:\n#0 /tmp/tmp6jd6ctv1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6jd6ctv1.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $ref = array('zero' => 0, 'one'\
    \ => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' => 6, 'seven'\
    \ => 7, 'eight' => 8, 'nine' => 9);\n  $numbers = explode(' ', $numbers);\n  for\
    \ ($i = 0; $i < count($numbers); $i++) {\n    $numbers[$i] = $ref[$numbers[$i]];\n\
    \  }\n  sort($numbers);\n  $ref = array_flip($ref);\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    $numbers[$i] = $ref[$numbers[$i]];\n  }\n  return implode(' ',\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return (int)$number;\n\
    \    }, $numbers);\n    sort($numbers);\n    return implode(' ', $numbers);\n\
    }\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmx6c6d1j.php:20\n\
    Stack trace:\n#0 /tmp/tmpmx6c6d1j.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmx6c6d1j.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $num_dict = array(\n        'zero'\
    \ => 0,\n        'one' => 1,\n        'two' => 2,\n        'three' => 3,\n   \
    \     'four' => 4,\n        'five' => 5,\n        'six' => 6,\n        'seven'\
    \ => 7,\n        'eight' => 8,\n        'nine' => 9\n    );\n    $num_array =\
    \ explode(' ', $numbers);\n    for ($i = 0; $i < count($num_array); $i++) {\n\
    \        $num_array[$i] = $num_dict[$num_array[$i]];\n    }\n    sort($num_array);\n\
    \    for ($i = 0; $i < count($num_array); $i++) {\n        $num_array[$i] = array_search($num_array[$i],\
    \ $num_dict);\n    }\n    return implode(' ', $num_array);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bt4cn1p.php:36\n\
    Stack trace:\n#0 /tmp/tmp_bt4cn1p.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_bt4cn1p.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $arr = explode(' ', $numbers);\n\
    \    $arr_num = array();\n    foreach ($arr as $key => $value) {\n        switch\
    \ ($value) {\n            case 'zero':\n                $arr_num[$key] = 0;\n\
    \                break;\n            case 'one':\n                $arr_num[$key]\
    \ = 1;\n                break;\n            case 'two':\n                $arr_num[$key]\
    \ = 2;\n                break;\n            case 'three':\n                $arr_num[$key]\
    \ = 3;\n                break;\n            case 'four':\n                $arr_num[$key]\
    \ = 4;\n                break;\n            case 'five':\n                $arr_num[$key]\
    \ = 5;\n                break;\n            case 'six':\n                $arr_num[$key]\
    \ = 6;\n                break;\n            case 'seven':\n                $arr_num[$key]\
    \ = 7;\n                break;\n            case 'eight':\n                $arr_num[$key]\
    \ = 8;\n                break;\n            case 'nine':\n                $arr_num[$key]\
    \ = 9;\n                break;\n        }\n    }\n    asort($arr_num);\n    $arr_sorted\
    \ = array();\n    foreach ($arr_num as $key => $value) {\n        switch ($value)\
    \ {\n            case 0:\n                $arr_sorted[$key] = 'zero';\n      \
    \          break;\n            case 1:\n                $arr_sorted[$key] = 'one';\n\
    \                break;\n            case 2:\n                $arr_sorted[$key]\
    \ = 'two';\n                break;\n            case 3:\n                $arr_sorted[$key]\
    \ = 'three';\n                break;\n            case 4:\n                $arr_sorted[$key]\
    \ = 'four';\n                break;\n            case 5:\n                $arr_sorted[$key]\
    \ = 'five';\n                break;\n            case 6:\n                $arr_sorted[$key]\
    \ = 'six';\n                break;\n            case 7:\n                $arr_sorted[$key]\
    \ = 'seven';\n                break;\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbagn0wr3.php on line 84\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $nums = explode(' ', $numbers);\n\
    \  $result = array();\n  foreach ($nums as $number) {\n    if (is_numeric($number))\
    \ {\n      $result[] = $number;\n    } else {\n      $result[] = convert_to_number($number);\n\
    \    }\n  }\n  asort($result);\n  return implode(' ', $result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_to_number()\
    \ in /tmp/tmp5kuykwh7.php:14\nStack trace:\n#0 /tmp/tmp5kuykwh7.php(22): sort_numbers('')\n\
    #1 /tmp/tmp5kuykwh7.php(26): candidate('')\n#2 /tmp/tmp5kuykwh7.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5kuykwh7.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $word_to_int = array(\n    'zero'\
    \ => 0,\n    'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four' => 4,\n\
    \    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' => 8,\n   \
    \ 'nine' => 9\n  );\n  $result = '';\n  $numbers = explode(' ', $numbers);\n \
    \ sort($numbers);\n  foreach ($numbers as $index => $number) {\n    $result .=\
    \ array_search($number, $word_to_int);\n    if ($index != sizeof($numbers) - 1)\
    \ {\n      $result .= ' ';\n    }\n  }\n  return $result;\n}\n\necho sort_numbers('zero\
    \ three one four one two five nine') . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "zero zero zero zero zero zero zero zero\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpj_g_7h10.php:39\nStack trace:\n#0 /tmp/tmpj_g_7h10.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpj_g_7h10.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = str_replace('zero',\
    \ 0, $numbers);\n    $numbers = str_replace('one', 1, $numbers);\n    $numbers\
    \ = str_replace('two', 2, $numbers);\n    $numbers = str_replace('three', 3, $numbers);\n\
    \    $numbers = str_replace('four', 4, $numbers);\n    $numbers = str_replace('five',\
    \ 5, $numbers);\n    $numbers = str_replace('six', 6, $numbers);\n    $numbers\
    \ = str_replace('seven', 7, $numbers);\n    $numbers = str_replace('eight', 8,\
    \ $numbers);\n    $numbers = str_replace('nine', 9, $numbers);\n    $numbers =\
    \ explode(' ', $numbers);\n    sort($numbers);\n    $numbers = str_replace(0,\
    \ 'zero', $numbers);\n    $numbers = str_replace(1, 'one', $numbers);\n    $numbers\
    \ = str_replace(2, 'two', $numbers);\n    $numbers = str_replace(3, 'three', $numbers);\n\
    \    $numbers = str_replace(4, 'four', $numbers);\n    $numbers = str_replace(5,\
    \ 'five', $numbers);\n    $numbers = str_replace(6, 'six', $numbers);\n    $numbers\
    \ = str_replace(7, 'seven', $numbers);\n    $numbers = str_replace(8, 'eight',\
    \ $numbers);\n    $numbers = str_replace(9, 'nine', $numbers);\n    $numbers =\
    \ implode(' ', $numbers);\n    return $numbers;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers_arr = explode(' ', $numbers);\n\
    \  $numbers_arr = array_map(function($number) {\n    switch ($number) {\n    \
    \  case 'zero':\n        return 0;\n      case 'one':\n        return 1;\n   \
    \   case 'two':\n        return 2;\n      case 'three':\n        return 3;\n \
    \     case 'four':\n        return 4;\n      case 'five':\n        return 5;\n\
    \      case 'six':\n        return 6;\n      case 'seven':\n        return 7;\n\
    \      case 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n\
    \    }\n  }, $numbers_arr);\n  sort($numbers_arr);\n  $numbers_arr = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers_arr);\n  return implode(' ',\
    \ $numbers_arr);\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyzlpo37o.php:65\n\
    Stack trace:\n#0 /tmp/tmpyzlpo37o.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpyzlpo37o.php\
    \ on line 65\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  sort($numbers);\n  return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5yza9jhx.php:20\n\
    Stack trace:\n#0 /tmp/tmp5yza9jhx.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5yza9jhx.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$number_array = explode(' ', $numbers);\n\
    \tforeach ($number_array as $number) {\n\t\tswitch ($number) {\n\t\t\tcase 'zero':\n\
    \t\t\t\t$sorted_numbers[] = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'one':\n\t\t\t\t$sorted_numbers[]\
    \ = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'two':\n\t\t\t\t$sorted_numbers[] = 2;\n\t\t\
    \t\tbreak;\n\t\t\tcase 'three':\n\t\t\t\t$sorted_numbers[] = 3;\n\t\t\t\tbreak;\n\
    \t\t\tcase 'four':\n\t\t\t\t$sorted_numbers[] = 4;\n\t\t\t\tbreak;\n\t\t\tcase\
    \ 'five':\n\t\t\t\t$sorted_numbers[] = 5;\n\t\t\t\tbreak;\n\t\t\tcase 'six':\n\
    \t\t\t\t$sorted_numbers[] = 6;\n\t\t\t\tbreak;\n\t\t\tcase 'seven':\n\t\t\t\t\
    $sorted_numbers[] = 7;\n\t\t\t\tbreak;\n\t\t\tcase 'eight':\n\t\t\t\t$sorted_numbers[]\
    \ = 8;\n\t\t\t\tbreak;\n\t\t\tcase 'nine':\n\t\t\t\t$sorted_numbers[] = 9;\n\t\
    \t\t\tbreak;\n\t\t}\n\t}\n\tasort($sorted_numbers);\n\t$sorted_numbers = array_values($sorted_numbers);\n\
    \tforeach ($sorted_numbers as $number) {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\
    \t\t\t\t$sorted_strings[] = 'zero';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\t$sorted_strings[]\
    \ = 'one';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$sorted_strings[] = 'two';\n\
    \t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t$sorted_strings[] = 'three';\n\t\t\t\t\
    break;\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp53hpnzmk.php on line 72\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers_array = explode(' ', $numbers);\n\
    \t$number_dictionary = array(\n\t\t'zero' => 0,\n\t\t'one' => 1,\n\t\t'two' =>\
    \ 2,\n\t\t'three' => 3,\n\t\t'four' => 4,\n\t\t'five' => 5,\n\t\t'six' => 6,\n\
    \t\t'seven' => 7,\n\t\t'eight' => 8,\n\t\t'nine' => 9\n\t);\n\t// Create a new\
    \ array with the numeric values for each number\n\t$numbers_array_numeric = array();\n\
    \tforeach ($numbers_array as $number) {\n\t\tarray_push($numbers_array_numeric,\
    \ $number_dictionary[$number]);\n\t}\n\tsort($numbers_array_numeric);\n\t// Create\
    \ a new array with the word values for each number\n\t$numbers_array_final = array();\n\
    \tforeach ($numbers_array_numeric as $number) {\n\t\tarray_push($numbers_array_final,\
    \ array_search($number, $number_dictionary));\n\t}\n\treturn implode(' ', $numbers_array_final);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr84s297b.php:40\n\
    Stack trace:\n#0 /tmp/tmpr84s297b.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpr84s297b.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $sorted_numbers = [];\n  $number_map\
    \ = [\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three' => 3,\n\
    \    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight'\
    \ => 8,\n    'nine' => 9\n  ];\n  foreach (explode(' ', $numbers) as $number)\
    \ {\n    $sorted_numbers[] = $number_map[$number];\n  }\n  sort($sorted_numbers);\n\
    \  $sorted_words = [];\n  foreach ($sorted_numbers as $number) {\n    $sorted_words[]\
    \ = array_search($number, $number_map);\n  }\n  return implode(' ', $sorted_words);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdzup1vo.php:37\n\
    Stack trace:\n#0 /tmp/tmpzdzup1vo.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpzdzup1vo.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$numbers = array_map(function($v) {\n\t\t$num = array('zero' => 0, 'one' =>\
    \ 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' => 6, 'seven' =>\
    \ 7, 'eight' => 8, 'nine' => 9);\n\t\treturn $num[$v];\n\t}, $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map(function($v) {\n\t\t$num = array(0 => 'zero', 1 => 'one',\
    \ 2 => 'two', 3 => 'three', 4 => 'four', 5 => 'five', 6 => 'six', 7 => 'seven',\
    \ 8 => 'eight', 9 => 'nine');\n\t\treturn $num[$v];\n\t}, $numbers);\n\treturn\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $result = '';\n  $words = explode('\
    \ ', $numbers);\n  $nums = array();\n  foreach ($words as $word) {\n    $nums[]\
    \ = str2num($word);\n  }\n  sort($nums);\n  foreach ($nums as $num) {\n    $result\
    \ .= ' ' . num2str($num);\n  }\n  return trim($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function str2num() in\
    \ /tmp/tmpy4ikxmni.php:12\nStack trace:\n#0 /tmp/tmpy4ikxmni.php(22): sort_numbers('')\n\
    #1 /tmp/tmpy4ikxmni.php(26): candidate('')\n#2 /tmp/tmpy4ikxmni.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy4ikxmni.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $digitArray = array(0,1,2,3,4,5,6,7,8,9);\n\
    \    $numbersArray = explode(\" \", $numbers);\n    $sortedNumbersArray = array();\n\
    \    for ($i = 0; $i < count($numbersArray); $i++) {\n        $item = $numbersArray[$i];\n\
    \        if ($item == \"zero\") {\n            $sortedNumbersArray[0] = $item;\n\
    \        } else if ($item == \"one\") {\n            $sortedNumbersArray[1] =\
    \ $item;\n        } else if ($item == \"two\") {\n            $sortedNumbersArray[2]\
    \ = $item;\n        } else if ($item == \"three\") {\n            $sortedNumbersArray[3]\
    \ = $item;\n        } else if ($item == \"four\") {\n            $sortedNumbersArray[4]\
    \ = $item;\n        } else if ($item == \"five\") {\n            $sortedNumbersArray[5]\
    \ = $item;\n        } else if ($item == \"six\") {\n            $sortedNumbersArray[6]\
    \ = $item;\n        } else if ($item == \"seven\") {\n            $sortedNumbersArray[7]\
    \ = $item;\n        } else if ($item == \"eight\") {\n            $sortedNumbersArray[8]\
    \ = $item;\n        } else if ($item == \"nine\") {\n            $sortedNumbersArray[9]\
    \ = $item;\n        }\n    }\n    $sortedString = implode(\" \", $sortedNumbersArray);\n\
    \    return $sortedString;\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwvzo276m.php:46\n\
    Stack trace:\n#0 /tmp/tmpwvzo276m.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpwvzo276m.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    switch($number) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n    }\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppneoenhc.php:66\n\
    Stack trace:\n#0 /tmp/tmppneoenhc.php(73): test()\n#1 {main}\n  thrown in /tmp/tmppneoenhc.php\
    \ on line 66\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers_map = [\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9,\n  ];\n  $numbers = array_map(function($value)\
    \ use ($numbers_map) {\n    return $numbers_map[$value];\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($value) use ($numbers_map) {\n    return array_search($value,\
    \ $numbers_map);\n  }, $numbers);\n  return implode(' ', $numbers);\n}\n\necho\
    \ \"Tests:\\n\";\necho \"\\n\";\n\necho 'sort_numbers(\"one two five three four\
    \ six\")' . \" should return 'one two three four five six':\\n\";\necho sort_numbers(\"\
    one two five three four six\") . \"\\n\";\necho \"\\n\";\n\necho 'sort_numbers(\"\
    three one five\")' . \" should return 'one three five':\\n\";\necho sort_numbers(\"\
    three one five\") . \"\\n\";\necho \"\\n\";\n\necho 'sort_numbers(\"nine eight\
    \ seven six five four three two one zero\")' . \" should return 'zero one two\
    \ three four five six seven eight nine':\\n\";\necho sort_numbers(\"nine eight\
    \ seven six five four three two one zero\") . \"\\n\";\necho \"\\n\";\n\necho\
    \ 'sort_numbers(\"two one four three six five\")' . \" should return 'one two\
    \ three four five six':\\n\";\necho sort_numbers(\"two one four three six five\"\
    ) . \"\\n\";\necho \"\\n\";\n\necho 'sort_numbers(\"nine one zero eight seven\
    \ two five four six three\")' . \" should return 'zero one two three four five\
    \ six seven eight nine':\\n\";\necho sort_numbers(\"nine one zero eight seven\
    \ two five four six three\") . \"\\n\";\necho \"\\\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0ui4ewib.php on line 58\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // YOUR CODE HERE\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_mjuab1e.php:16\n\
    Stack trace:\n#0 /tmp/tmp_mjuab1e.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_mjuab1e.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t// Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvo45fn1j.php:15\n\
    Stack trace:\n#0 /tmp/tmpvo45fn1j.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpvo45fn1j.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numberArray = array('zero' => 0,\
    \ 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' => 6,\
    \ 'seven' => 7, 'eight' => 8, 'nine' => 9);\n\t$numberWords = explode(' ', $numbers);\n\
    \t$numberOrder = array();\n\tforeach ($numberWords as $numberWord) {\n\t\t$numberOrder[]\
    \ = $numberArray[$numberWord];\n\t}\n\tsort($numberOrder);\n\t$results = array();\n\
    \tforeach ($numberOrder as $number) {\n\t\t$results[] = array_search($number,\
    \ $numberArray);\n\t}\n\treturn implode(' ', $results);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5n69ont.php:27\n\
    Stack trace:\n#0 /tmp/tmpy5n69ont.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpy5n69ont.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $arr = explode(' ', $numbers);\n\
    \    $sort_arr = [];\n    foreach ($arr as $num) {\n        switch ($num) {\n\
    \            case 'zero':\n                $sort_arr[] = 0;\n                break;\n\
    \            case 'one':\n                $sort_arr[] = 1;\n                break;\n\
    \            case 'two':\n                $sort_arr[] = 2;\n                break;\n\
    \            case 'three':\n                $sort_arr[] = 3;\n               \
    \ break;\n            case 'four':\n                $sort_arr[] = 4;\n       \
    \         break;\n            case 'five':\n                $sort_arr[] = 5;\n\
    \                break;\n            case 'six':\n                $sort_arr[]\
    \ = 6;\n                break;\n            case 'seven':\n                $sort_arr[]\
    \ = 7;\n                break;\n            case 'eight':\n                $sort_arr[]\
    \ = 8;\n                break;\n            case 'nine':\n                $sort_arr[]\
    \ = 9;\n                break;\n        }\n    }\n    sort($sort_arr);\n    $result\
    \ = '';\n    foreach ($sort_arr as $i) {\n        switch ($i) {\n            case\
    \ 0:\n                $result .= 'zero ';\n                break;\n          \
    \  case 1:\n                $result .= 'one ';\n                break;\n     \
    \       case 2:\n                $result .= 'two ';\n                break;\n\
    \            case 3:\n                $result .= 'three ';\n                break;\n\
    \            case 4:\n                $result .= 'four ';\n                break;\n\
    \            case 5:\n                $result .= 'five ';\n                break;\n\
    \            case 6:\n                $result .= 'six ';\n                break;\n\
    \            case 7:\n                $result .= 'seven ';\n                break;\n\
    \            case 8:\n                $result .= 'eight ';\n                break;\n\
    \            case 9:\n                $result .= 'nine ';\n                break;\n\
    \        }\n    }\n    $result = trim($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $array_numbers = explode(' ',\
    \ $numbers);\n    $number_to_value = [\n        'zero' => 0,\n        'one' =>\
    \ 1,\n        'two' => 2,\n        'three' => 3,\n        'four' => 4,\n     \
    \   'five' => 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight'\
    \ => 8,\n        'nine' => 9,\n    ];\n    $value_to_number = array_flip($number_to_value);\n\
    \    $values = array_map(function($number) use ($number_to_value) {\n        return\
    \ $number_to_value[$number];\n    }, $array_numbers);\n    sort($values);\n  \
    \  $sorted_numbers = array_map(function($value) use ($value_to_number) {\n   \
    \     return $value_to_number[$value];\n    }, $values);\n    return implode('\
    \ ', $sorted_numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers_array = explode(' ',\
    \ $numbers);\n    $numbers_to_sort = [];\n    foreach ($numbers_array as $number)\
    \ {\n        switch ($number) {\n            case 'zero':\n                $numbers_to_sort[]\
    \ = 0;\n                break;\n            case 'one':\n                $numbers_to_sort[]\
    \ = 1;\n                break;\n            case 'two':\n                $numbers_to_sort[]\
    \ = 2;\n                break;\n            case 'three':\n                $numbers_to_sort[]\
    \ = 3;\n                break;\n            case 'four':\n                $numbers_to_sort[]\
    \ = 4;\n                break;\n            case 'five':\n                $numbers_to_sort[]\
    \ = 5;\n                break;\n            case 'six':\n                $numbers_to_sort[]\
    \ = 6;\n                break;\n            case 'seven':\n                $numbers_to_sort[]\
    \ = 7;\n                break;\n            case 'eight':\n                $numbers_to_sort[]\
    \ = 8;\n                break;\n            case 'nine':\n                $numbers_to_sort[]\
    \ = 9;\n                break;\n        }\n    }\n    sort($numbers_to_sort);\n\
    \    $numbers_sorted = [];\n    foreach ($numbers_to_sort as $number) {\n    \
    \    switch ($number) {\n            case 0:\n                $numbers_sorted[]\
    \ = 'zero';\n                break;\n            case 1:\n                $numbers_sorted[]\
    \ = 'one';\n                break;\n            case 2:\n                $numbers_sorted[]\
    \ = 'two';\n                break;\n            case 3:\n                $numbers_sorted[]\
    \ = 'three';\n                break;\n            case 4:\n                $numbers_sorted[]\
    \ = 'four';\n                break;\n            case 5:\n                $numbers_sorted[]\
    \ = 'five';\n                break;\n            case 6:\n                $numbers_sorted[]\
    \ = 'six';\n                break;\n            case 7:\n                $numbers_sorted[]\
    \ = 'seven';\n                break;\n            case 8:\n                $n\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvura_hjv.php on line 74\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $num_to_word = array(\n      \
    \  0 => 'zero',\n        1 => 'one',\n        2 => 'two',\n        3 => 'three',\n\
    \        4 => 'four',\n        5 => 'five',\n        6 => 'six',\n        7 =>\
    \ 'seven',\n        8 => 'eight',\n        9 => 'nine'\n    );\n    $word_to_num\
    \ = array_flip($num_to_word);\n    $sortable = array();\n    $sorted = array();\n\
    \    foreach (explode(' ', $numbers) as $num) {\n        $sortable[] = $word_to_num[$num];\n\
    \    }\n    sort($sortable);\n    foreach ($sortable as $num) {\n        $sorted[]\
    \ = $num_to_word[$num];\n    }\n    return implode(' ', $sorted);\n}\n\necho sort_numbers('one\
    \ three five seven two zero four six eight nine') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "zero one two three four five six seven eight nine\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $num_array = explode(' ', $numbers);\n\
    \  $num_sort = array();\n  foreach ($num_array as $value) {\n    switch ($value)\
    \ {\n      case 'zero':\n        $num_sort[] = 0;\n        break;\n      case\
    \ 'one':\n        $num_sort[] = 1;\n        break;\n      case 'two':\n      \
    \  $num_sort[] = 2;\n        break;\n      case 'three':\n        $num_sort[]\
    \ = 3;\n        break;\n      case 'four':\n        $num_sort[] = 4;\n       \
    \ break;\n      case 'five':\n        $num_sort[] = 5;\n        break;\n     \
    \ case 'six':\n        $num_sort[] = 6;\n        break;\n      case 'seven':\n\
    \        $num_sort[] = 7;\n        break;\n      case 'eight':\n        $num_sort[]\
    \ = 8;\n        break;\n      case 'nine':\n        $num_sort[] = 9;\n       \
    \ break;\n    }\n  }\n  sort($num_sort);\n  $num_sort_string = array();\n  foreach\
    \ ($num_sort as $value) {\n    switch ($value) {\n      case 0:\n        $num_sort_string[]\
    \ = 'zero';\n        break;\n      case 1:\n        $num_sort_string[] = 'one';\n\
    \        break;\n      case 2:\n        $num_sort_string[] = 'two';\n        break;\n\
    \      case 3:\n        $num_sort_string[] = 'three';\n        break;\n      case\
    \ 4:\n        $num_sort_string[] = 'four';\n        break;\n      case 5:\n  \
    \      $num_sort_string[] = 'five';\n        break;\n      case 6:\n        $num_sort_string[]\
    \ = 'six';\n        break;\n      case 7:\n        $num_sort_string[] = 'seven';\n\
    \        break;\n      case 8:\n        $num_sort_string[] = 'eight';\n      \
    \  break;\n      case 9:\n        $num_sort_string[] = 'nine';\n        break;\n\
    \    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpoxgt58e5.php on line 92\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $words = explode(' ', $numbers);\n\
    \  $num_arr = array();\n  $result = array();\n  foreach ($words as $value) {\n\
    \    $num_arr[] = word_to_num($value);\n  }\n  sort($num_arr);\n  foreach ($num_arr\
    \ as $value) {\n    $result[] = num_to_word($value);\n  }\n  return implode('\
    \ ', $result);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function word_to_num()\
    \ in /tmp/tmp1eh5klxf.php:12\nStack trace:\n#0 /tmp/tmp1eh5klxf.php(22): sort_numbers('')\n\
    #1 /tmp/tmp1eh5klxf.php(26): candidate('')\n#2 /tmp/tmp1eh5klxf.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1eh5klxf.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  // Convert $numbers to an array\n\
    \  $numbers_array = explode(' ', $numbers);\n  // Convert array elements to numeric\
    \ values\n  foreach ($numbers_array as $key => $value) {\n    switch ($value)\
    \ {\n      case 'zero':\n        $numbers_array[$key] = 0;\n        break;\n \
    \     case 'one':\n        $numbers_array[$key] = 1;\n        break;\n      case\
    \ 'two':\n        $numbers_array[$key] = 2;\n        break;\n      case 'three':\n\
    \        $numbers_array[$key] = 3;\n        break;\n      case 'four':\n     \
    \   $numbers_array[$key] = 4;\n        break;\n      case 'five':\n        $numbers_array[$key]\
    \ = 5;\n        break;\n      case 'six':\n        $numbers_array[$key] = 6;\n\
    \        break;\n      case 'seven':\n        $numbers_array[$key] = 7;\n    \
    \    break;\n      case 'eight':\n        $numbers_array[$key] = 8;\n        break;\n\
    \      case 'nine':\n        $numbers_array[$key] = 9;\n        break;\n    }\n\
    \  }\n  // Sort the array from smallest to largest\n  sort($numbers_array);\n\
    \  // Convert the array back to a string\n  $sorted_numbers = implode(' ', $numbers_array);\n\
    \  // Convert the string back to verbal numbers\n  foreach ($numbers_array as\
    \ $key => $value) {\n    switch ($value) {\n      case 0:\n        $numbers_array[$key]\
    \ = 'zero';\n        break;\n      case 1:\n        $numbers_array[$key] = 'one';\n\
    \        break;\n      case 2:\n        $numbers_array[$key] = 'two';\n      \
    \  break;\n      case 3:\n        $numbers_array[$key] = 'three';\n        break;\n\
    \      case 4:\n        $numbers_array[$key] = 'four';\n        break;\n     \
    \ case 5:\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpofux6z75.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbersArray = array();\n    foreach ($numbers as $n) {\n        $numbersArray[]\
    \ = array_search($n, ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine']);\n    }\n    sort($numbersArray);\n    foreach ($numbersArray\
    \ as $k => $n) {\n        $numbersArray[$k] = ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'][$n];\n    }\n    return implode('\
    \ ', $numbersArray);\n}\n\necho sort_numbers('three one five');\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "one three five\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7quq3fs.php:26\n\
    Stack trace:\n#0 /tmp/tmpr7quq3fs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpr7quq3fs.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = trim($numbers);\n \
    \   $numbers_array = explode(' ', $numbers);\n    $numbers_translated = array();\n\
    \    foreach ($numbers_array as $number) {\n        switch($number) {\n      \
    \      case 'zero':\n                $numbers_translated[] = 0;\n            \
    \    break;\n            case 'one':\n                $numbers_translated[] =\
    \ 1;\n                break;\n            case 'two':\n                $numbers_translated[]\
    \ = 2;\n                break;\n            case 'three':\n                $numbers_translated[]\
    \ = 3;\n                break;\n            case 'four':\n                $numbers_translated[]\
    \ = 4;\n                break;\n            case 'five':\n                $numbers_translated[]\
    \ = 5;\n                break;\n            case 'six':\n                $numbers_translated[]\
    \ = 6;\n                break;\n            case 'seven':\n                $numbers_translated[]\
    \ = 7;\n                break;\n            case 'eight':\n                $numbers_translated[]\
    \ = 8;\n                break;\n            case 'nine':\n                $numbers_translated[]\
    \ = 9;\n                break;\n            default:\n                die(\"Error:\
    \ Non numeric value submitted.\");\n        }\n    }\n    asort($numbers_translated);\n\
    \    $numbers_translated_array = array();\n    foreach ($numbers_translated as\
    \ $number) {\n        switch($number) {\n            case 0:\n               \
    \ $numbers_translated_array[] = 'zero';\n                break;\n            case\
    \ 1:\n                $numbers_translated_array[] = 'one';\n                break;\n\
    \            case 2:\n                $numbers_translated_array[] = 'two';\n \
    \               break;\n            case 3:\n                $numbers_translated_array[]\
    \ = 'three';\n                break;\n            case 4:\n                $numbers_translated_array[]\
    \ = 'four';\n                break;\n            case 5:\n                $numbers_translated_array[]\
    \ = 'five';\n                break;\n            case 6:\n                $numbers_translated_array[]\
    \ = 'six';\n               \nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq9s4h9io.php on line 84\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $retval = '';\n    $number_list\
    \ = [];\n    $numbers = explode(' ', $numbers);\n    $number_map = [\n       \
    \ 'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n        'three' => 3,\n\
    \        'four' => 4,\n        'five' => 5,\n        'six' => 6,\n        'seven'\
    \ => 7,\n        'eight' => 8,\n        'nine' => 9,\n    ];\n    foreach ($numbers\
    \ as $numeral) {\n        $number_list[] = $number_map[$numeral];\n    }\n   \
    \ sort($number_list);\n    foreach ($number_list as $numeral) {\n        $retval\
    \ .= array_search($numeral, $number_map).' ';\n    }\n    return trim($retval);\n\
    }\n\n$input = 'zero one two three four five six seven eight nine';\n$expected\
    \ = 'zero one two three four five six seven eight nine';\nassert(sort_numbers($input)\
    \ === $expected);\n$input = 'nine eight seven six five four three two one zero';\n\
    $expected = 'zero one two three four five six seven eight nine';\nassert(sort_numbers($input)\
    \ === $expected);\n$input = 'nine four one five three seven eight six two zero';\n\
    $expected = 'zero one two three four five six seven eight nine';\nassert(sort_numbers($input)\
    \ === $expected);\n$input = 'three one five';\n$expected = 'one three five';\n\
    assert(sort_numbers($input) === $expected);\n$input = 'zero one five';\n$expected\
    \ = 'zero one five';\nassert(sort_numbers($input) === $expected);\n$input = 'zero\
    \ one six';\n$expected = 'zero one six';\nassert(sort_numbers($input) === $expected);\n\
    $input = 'five one zero';\n$expected = 'zero one five';\nassert(sort_numbers($input)\
    \ === $expected);\n$input = 'three nine zero';\n$expected = 'zero three nine';\n\
    assert(sort_numbers($input) === $expected);\n$input\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgzdqahl5.php on line 58\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $sort_numbers = array(\n        'zero' => 0,\n        'one' => 1,\n     \
    \   'two' => 2,\n        'three' => 3,\n        'four' => 4,\n        'five' =>\
    \ 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n    \
    \    'nine' => 9\n    );\n    $arr_int = array();\n    foreach ($numbers as $number)\
    \ {\n        $arr_int[] = $sort_numbers[$number];\n    }\n    sort($arr_int);\n\
    \    $result = '';\n    foreach ($arr_int as $i) {\n        $result .= array_search($i,\
    \ $sort_numbers) . ' ';\n    }\n    return trim($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplt4jwv92.php:38\n\
    Stack trace:\n#0 /tmp/tmplt4jwv92.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplt4jwv92.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $output = explode(' ', $numbers);\n\
    \  $nums = array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine');\n  sort($output);\n  foreach ($output as $key => $value) {\n\
    \    $output[$key] = $nums[array_search($value, $nums)];\n  }\n  return implode('\
    \ ', $output);\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppqmiayit.php:21\n\
    Stack trace:\n#0 /tmp/tmppqmiayit.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppqmiayit.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $sorted_numbers = array();\n \
    \   foreach(explode(' ', $numbers) as $number) {\n        switch($number) {\n\
    \            case 'zero':\n                $sorted_numbers[] = 0;\n          \
    \      break;\n            case 'one':\n                $sorted_numbers[] = 1;\n\
    \                break;\n            case 'two':\n                $sorted_numbers[]\
    \ = 2;\n                break;\n            case 'three':\n                $sorted_numbers[]\
    \ = 3;\n                break;\n            case 'four':\n                $sorted_numbers[]\
    \ = 4;\n                break;\n            case 'five':\n                $sorted_numbers[]\
    \ = 5;\n                break;\n            case 'six':\n                $sorted_numbers[]\
    \ = 6;\n                break;\n            case 'seven':\n                $sorted_numbers[]\
    \ = 7;\n                break;\n            case 'eight':\n                $sorted_numbers[]\
    \ = 8;\n                break;\n            case 'nine':\n                $sorted_numbers[]\
    \ = 9;\n                break;\n        }\n    }\n    sort($sorted_numbers);\n\
    \    $return_numbers = array();\n    foreach($sorted_numbers as $number) {\n \
    \       switch($number) {\n            case 0:\n                $return_numbers[]\
    \ = 'zero';\n                break;\n            case 1:\n                $return_numbers[]\
    \ = 'one';\n                break;\n            case 2:\n                $return_numbers[]\
    \ = 'two';\n                break;\n            case 3:\n                $return_numbers[]\
    \ = 'three';\n                break;\n            case 4:\n                $return_numbers[]\
    \ = 'four';\n                break;\n            case 5:\n                $return_numbers[]\
    \ = 'five';\n                break;\n            case 6:\n                $return_numbers[]\
    \ = 'six';\n                break;\n            case 7:\n                $return_numbers[]\
    \ = 'seven';\n                break;\n            case 8:\n                $return_numbers[]\
    \ = 'eight';\n                break;\n            case 9:\n                $return_numbers[]\
    \ = 'nine';\n               \nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5lyu960p.php on line 89\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers_map = array('zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four'\
    \ => 4, 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n \
    \   $numbers_in_numerals = array();\n    foreach ($numbers as $number) {\n   \
    \     array_push($numbers_in_numerals, $numbers_map[$number]);\n    }\n    sort($numbers_in_numerals);\n\
    \    $result = array();\n    foreach ($numbers_in_numerals as $number) {\n   \
    \     array_push($result, array_search($number, $numbers_map));\n    }\n    return\
    \ implode(' ', $result);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2ldq7uc.php:27\n\
    Stack trace:\n#0 /tmp/tmpc2ldq7uc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpc2ldq7uc.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // your code here\n    $nums =\
    \ explode(' ', $numbers);\n    $sort_nums = [];\n    $sort_str = '';\n    foreach\
    \ ($nums as $num) {\n        switch ($num) {\n            case 'zero':\n     \
    \           $sort_nums[] = 0;\n                break;\n            case 'one':\n\
    \                $sort_nums[] = 1;\n                break;\n            case 'two':\n\
    \                $sort_nums[] = 2;\n                break;\n            case 'three':\n\
    \                $sort_nums[] = 3;\n                break;\n            case 'four':\n\
    \                $sort_nums[] = 4;\n                break;\n            case 'five':\n\
    \                $sort_nums[] = 5;\n                break;\n            case 'six':\n\
    \                $sort_nums[] = 6;\n                break;\n            case 'seven':\n\
    \                $sort_nums[] = 7;\n                break;\n            case 'eight':\n\
    \                $sort_nums[] = 8;\n                break;\n            case 'nine':\n\
    \                $sort_nums[] = 9;\n                break;\n        }\n    }\n\
    \    sort($sort_nums);\n    for ($i = 0; $i < count($sort_nums); $i++) {\n   \
    \     switch ($sort_nums[$i]) {\n            case 0:\n                $sort_str\
    \ .= 'zero ';\n                break;\n            case 1:\n                $sort_str\
    \ .= 'one ';\n                break;\n            case 2:\n                $sort_str\
    \ .= 'two ';\n                break;\n            case 3:\n                $sort_str\
    \ .= 'three ';\n                break;\n            case 4:\n                $sort_str\
    \ .= 'four ';\n                break;\n            case 5:\n                $sort_str\
    \ .= 'five ';\n                break;\n            case 6:\n                $sort_str\
    \ .= 'six ';\n                break;\n            case 7:\n                $sort_str\
    \ .= 'seven ';\n                break;\n            case 8:\n                $sort_str\
    \ .= 'eight ';\n                break;\n            case 9:\n               \n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4hzfzh_h.php on line 90\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $nums = explode(' ', $numbers);\n\
    \    $nummap = array(\n        'zero' => 0,\n        'one' => 1,\n        'two'\
    \ => 2,\n        'three' => 3,\n        'four' => 4,\n        'five' => 5,\n \
    \       'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine'\
    \ => 9\n    );\n    $map = array();\n    foreach ($nums as $key => $val) {\n \
    \       $map[$key] = $nummap[$val];\n    }\n    asort($map);\n    $i = 0;\n  \
    \  foreach ($map as $key => $val) {\n        $nums[$i] = array_search($val, $nummap);\n\
    \        $i++;\n    }\n    return implode(' ', $nums);\n}\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygpm26t6.php:38\n\
    Stack trace:\n#0 /tmp/tmpygpm26t6.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpygpm26t6.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $word_to_num = array(\n      \
    \  'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n        'three' =>\
    \ 3,\n        'four' => 4,\n        'five' => 5,\n        'six' => 6,\n      \
    \  'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n    );\n    $sort_arr\
    \ = array();\n    $numbers = explode(' ', $numbers);\n    foreach ($numbers as\
    \ $number) {\n        $sort_arr[] = $word_to_num[$number];\n    }\n    sort($sort_arr);\n\
    \    $sorted_numbers = array();\n    foreach ($sort_arr as $num) {\n        $sorted_numbers[]\
    \ = array_search($num, $word_to_num);\n    }\n    return implode(' ', $sorted_numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppnxqap7d.php:38\n\
    Stack trace:\n#0 /tmp/tmppnxqap7d.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppnxqap7d.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$len = count($numbers);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $len; $j++) {\n\t\t\tif (intval($numbers[$i]) > intval($numbers[$j]))\
    \ {\n\t\t\t\t$temp = $numbers[$i];\n\t\t\t\t$numbers[$i] = $numbers[$j];\n\t\t\
    \t\t$numbers[$j] = $temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzz7wccn2.php:30\n\
    Stack trace:\n#0 /tmp/tmpzz7wccn2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzz7wccn2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t// Your code here\n\t$numbers =\
    \ explode(\" \", $numbers);\n\t\n\tfor ($i = 0; $i < count($numbers); $i++) {\n\
    \t\tswitch ($numbers[$i]) {\n\t\t\tcase 'zero':\n\t\t\t\t$numbers[$i] = 0;\n\t\
    \t\t\tbreak;\n\t\t\tcase 'one':\n\t\t\t\t$numbers[$i] = 1;\n\t\t\t\tbreak;\n\t\
    \t\tcase 'two':\n\t\t\t\t$numbers[$i] = 2;\n\t\t\t\tbreak;\n\t\t\tcase 'three':\n\
    \t\t\t\t$numbers[$i] = 3;\n\t\t\t\tbreak;\n\t\t\tcase 'four':\n\t\t\t\t$numbers[$i]\
    \ = 4;\n\t\t\t\tbreak;\n\t\t\tcase 'five':\n\t\t\t\t$numbers[$i] = 5;\n\t\t\t\t\
    break;\n\t\t\tcase 'six':\n\t\t\t\t$numbers[$i] = 6;\n\t\t\t\tbreak;\n\t\t\tcase\
    \ 'seven':\n\t\t\t\t$numbers[$i] = 7;\n\t\t\t\tbreak;\n\t\t\tcase 'eight':\n\t\
    \t\t\t$numbers[$i] = 8;\n\t\t\t\tbreak;\n\t\t\tcase 'nine':\n\t\t\t\t$numbers[$i]\
    \ = 9;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tsort($numbers);\n\t\n\tfor ($i = 0;\
    \ $i < count($numbers); $i++) {\n\t\tswitch ($numbers[$i]) {\n\t\t\tcase 0:\n\t\
    \t\t\t$numbers[$i] = 'zero';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\t$numbers[$i]\
    \ = 'one';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$numbers[$i] = 'two';\n\t\t\
    \t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t$numbers[$i]\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3bps_zaq.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $arr = explode(' ', $numbers);\n\
    \  $final = [];\n  foreach ($arr as $value) {\n    $final[] = convert_to_int($value);\n\
    \  }\n  sort($final);\n  $new_string = '';\n  foreach ($final as $value) {\n \
    \   $new_string .= convert_to_string($value);\n  }\n  return $new_string;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_to_int()\
    \ in /tmp/tmpart03ymi.php:11\nStack trace:\n#0 /tmp/tmpart03ymi.php(22): sort_numbers('')\n\
    #1 /tmp/tmpart03ymi.php(26): candidate('')\n#2 /tmp/tmpart03ymi.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpart03ymi.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$num_array = explode(' ', $numbers);\n\
    \t$num_array = sort_numbers_helper($num_array);\n\t$numbers = implode(' ', $num_array);\n\
    \treturn $numbers;\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sort_numbers_helper()\
    \ in /tmp/tmp779ky4dq.php:9\nStack trace:\n#0 /tmp/tmp779ky4dq.php(15): sort_numbers('')\n\
    #1 /tmp/tmp779ky4dq.php(19): candidate('')\n#2 /tmp/tmp779ky4dq.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmp779ky4dq.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $number_array = explode(' ', $numbers);\n\
    \  sort($number_array);\n  return implode(' ', $number_array);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn87sqyx7.php:20\n\
    Stack trace:\n#0 /tmp/tmpn87sqyx7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpn87sqyx7.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $stringArray = explode(\" \", $numbers);\n\
    \  $intArray = array();\n  foreach ($stringArray as $value) {\n    switch ($value)\
    \ {\n      case 'zero':\n        $intArray[] = 0;\n        break;\n      case\
    \ 'one':\n        $intArray[] = 1;\n        break;\n      case 'two':\n      \
    \  $intArray[] = 2;\n        break;\n      case 'three':\n        $intArray[]\
    \ = 3;\n        break;\n      case 'four':\n        $intArray[] = 4;\n       \
    \ break;\n      case 'five':\n        $intArray[] = 5;\n        break;\n     \
    \ case 'six':\n        $intArray[] = 6;\n        break;\n      case 'seven':\n\
    \        $intArray[] = 7;\n        break;\n      case 'eight':\n        $intArray[]\
    \ = 8;\n        break;\n      case 'nine':\n        $intArray[] = 9;\n       \
    \ break;\n    }\n  }\n  sort($intArray);\n  foreach ($intArray as $value) {\n\
    \    switch ($value) {\n      case 0:\n        $stringArray[] = 'zero';\n    \
    \    break;\n      case 1:\n        $stringArray[] = 'one';\n        break;\n\
    \      case 2:\n        $stringArray[] = 'two';\n        break;\n      case 3:\n\
    \        $stringArray[] = 'three';\n        break;\n      case 4:\n        $stringArray[]\
    \ = 'four';\n        break;\n      case 5:\n        $stringArray[] = 'five';\n\
    \        break;\n      case 6:\n        $stringArray[] = 'six';\n        break;\n\
    \      case 7:\n        $stringArray[] = 'seven';\n        break;\n      case\
    \ 8:\n        $stringArray[] = 'eight';\n        break;\n      case 9:\n     \
    \   $stringArray[] = 'nine';\n        break;\n    }\n  }\n  $string = implode(\"\
    \ \", $stringArray);\n  return $string;\n}\nfunction candidate(...$args) {\n \
    \   return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuf9apzrw.php:88\n\
    Stack trace:\n#0 /tmp/tmpuf9apzrw.php(94): test()\n#1 {main}\n  thrown in /tmp/tmpuf9apzrw.php\
    \ on line 88\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$map = array(\n\t\t'zero' => 0,\n\
    \t\t'one' => 1,\n\t\t'two' => 2,\n\t\t'three' => 3,\n\t\t'four' => 4,\n\t\t'five'\
    \ => 5,\n\t\t'six' => 6,\n\t\t'seven' => 7,\n\t\t'eight' => 8,\n\t\t'nine' =>\
    \ 9\n\t);\n\t$words = explode(' ', $numbers);\n\t$num2str = array();\n\tforeach\
    \ ($words as $word) {\n\t\t$num2str[$map[$word]] = $word;\n\t}\n\tksort($num2str);\n\
    \treturn implode(' ', $num2str);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $words = ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n    $word_numbers\
    \ = explode(' ', $numbers);\n    $number_numbers = [];\n    foreach ($word_numbers\
    \ as $word_number) {\n        $number_numbers[] = array_search($word_number, $words);\n\
    \    }\n    sort($number_numbers);\n    $return_numbers = [];\n    foreach ($number_numbers\
    \ as $number_number) {\n        $return_numbers[] = $words[$number_number];\n\
    \    }\n    return implode(' ', $return_numbers);\n}\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_sp4vwb.php:26\n\
    Stack trace:\n#0 /tmp/tmpa_sp4vwb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpa_sp4vwb.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $order = ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n  $sorted = [];\n\
    \  $words = explode(' ', $numbers);\n  foreach ($words as $word) {\n    $sorted[array_search($word,\
    \ $order)] = $word;\n  }\n  ksort($sorted);\n  return implode(' ', $sorted);\n\
    }\n\n$cases = [\n  ['three one five', 'one three five'],\n  ['nine zero two one\
    \ five seven four six three eight', 'zero one two three four five six seven eight\
    \ nine'],\n  ['eight zero one four six eight', 'zero one four six eight eight'],\n\
    \  ['zero one', 'zero one'],\n  ['three', 'three'],\n  ['five three', 'three five'],\n\
    \  ['nine', 'nine'],\n  ['one', 'one'],\n  ['', ''],\n];\nforeach ($cases as [$input,\
    \ $expected]) {\n  $result = sort_numbers($input);\n  if ($result !== $expected)\
    \ {\n    echo \"FAIL: For '$input' expected '$expected' but got '$result'\\n\"\
    ;\n  }\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "FAIL: For 'eight zero one four six eight' expected 'zero one four six eight\
    \ eight' but got 'zero one four six eight'\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $nums = ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n  $numsArr = explode(' ',\
    \ $numbers);\n  $result = '';\n  for ($i = 0; $i < 10; $i++) {\n    foreach ($numsArr\
    \ as $value) {\n      if ($value === $nums[$i]) {\n        $result .= $value .\
    \ ' ';\n      }\n    }\n  }\n  return rtrim($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $result = [];\n  foreach (explode('\
    \ ', $numbers) as $number) {\n    $result[] = number_to_value($number);\n  }\n\
    \  sort($result);\n  foreach ($result as &$value) {\n    $value = value_to_number($value);\n\
    \  }\n  return implode(' ', $result);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_value()\
    \ in /tmp/tmpyynkt_4g.php:10\nStack trace:\n#0 /tmp/tmpyynkt_4g.php(20): sort_numbers('')\n\
    #1 /tmp/tmpyynkt_4g.php(24): candidate('')\n#2 /tmp/tmpyynkt_4g.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyynkt_4g.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers_decimal = array();\n  $counter = 0;\n  foreach ($numbers as $number)\
    \ {\n    switch ($number) {\n      case 'zero':\n        $numbers_decimal[$counter]\
    \ = 0;\n        break;\n      case 'one':\n        $numbers_decimal[$counter]\
    \ = 1;\n        break;\n      case 'two':\n        $numbers_decimal[$counter]\
    \ = 2;\n        break;\n      case 'three':\n        $numbers_decimal[$counter]\
    \ = 3;\n        break;\n      case 'four':\n        $numbers_decimal[$counter]\
    \ = 4;\n        break;\n      case 'five':\n        $numbers_decimal[$counter]\
    \ = 5;\n        break;\n      case 'six':\n        $numbers_decimal[$counter]\
    \ = 6;\n        break;\n      case 'seven':\n        $numbers_decimal[$counter]\
    \ = 7;\n        break;\n      case 'eight':\n        $numbers_decimal[$counter]\
    \ = 8;\n        break;\n      case 'nine':\n        $numbers_decimal[$counter]\
    \ = 9;\n        break;\n    }\n    $counter++;\n  }\n  asort($numbers_decimal);\n\
    \  foreach ($numbers_decimal as $key => $value) {\n    $numbers[$key] = $value;\n\
    \  }\n  $counter = 0;\n  foreach ($numbers as $number) {\n    switch ($number)\
    \ {\n      case 0:\n        $numbers[$counter] = 'zero';\n        break;\n   \
    \   case 1:\n        $numbers[$counter] = 'one';\n        break;\n      case 2:\n\
    \        $numbers[$counter] = 'two';\n        break;\n      case 3:\n        $numbers[$counter]\
    \ = 'three';\n        break;\n      case 4:\n        $numbers[$counter] = 'four';\n\
    \        break;\n      case 5:\n        $numbers[$counter] = 'five';\n       \n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6b_7fa4r.php on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$nums = explode(' ', $numbers);\n\
    \tsort($nums);\n\treturn implode(' ', $nums);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpanpaxrmx.php:20\n\
    Stack trace:\n#0 /tmp/tmpanpaxrmx.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpanpaxrmx.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  return implode(' ', sort(explode('\
    \ ', $numbers)));\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: implode(): Invalid arguments passed in /tmp/tmp8eyf2bll.php\
    \ on line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8eyf2bll.php:16\n\
    Stack trace:\n#0 /tmp/tmp8eyf2bll.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8eyf2bll.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $nums = explode(' ', $numbers);\n\
    \  $nums_map = [\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9\n  ];\n  $nums_nums = [];\n  foreach ($nums\
    \ as $num) {\n    $nums_nums[] = $nums_map[$num];\n  }\n  sort($nums_nums);\n\
    \  $nums_map_inverted = array_flip($nums_map);\n  $nums_sorted = [];\n  foreach\
    \ ($nums_nums as $num) {\n    $nums_sorted[] = $nums_map_inverted[$num];\n  }\n\
    \  return implode(' ', $nums_sorted);\n}\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $nums = explode(' ', $numbers);\n\
    \  $num_map = array(\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n   \
    \ 'three' => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven'\
    \ => 7,\n    'eight' => 8,\n    'nine' => 9,\n  );\n  sort($nums);\n  $result\
    \ = '';\n  foreach ($nums as $num) {\n    $result .= $num_map[$num] . ' ';\n \
    \ }\n  $result = trim($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdah2vn52.php:36\n\
    Stack trace:\n#0 /tmp/tmpdah2vn52.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdah2vn52.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = str_word_count($numbers,\
    \ 1);\n    $numbers = array_map('translate', $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map('translate_back', $numbers);\n    return implode(' ',\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'translate' not found or invalid function name in /tmp/tmpiv8lqaz1.php on line\
    \ 9\n\nWarning: sort() expects parameter 1 to be array, null given in /tmp/tmpiv8lqaz1.php\
    \ on line 10\n\nWarning: array_map() expects parameter 1 to be a valid callback,\
    \ function 'translate_back' not found or invalid function name in /tmp/tmpiv8lqaz1.php\
    \ on line 11\n\nWarning: implode(): Invalid arguments passed in /tmp/tmpiv8lqaz1.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiv8lqaz1.php:20\n\
    Stack trace:\n#0 /tmp/tmpiv8lqaz1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpiv8lqaz1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $number_map = array('zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four'\
    \ => 4, 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n \
    \ $sorted_numbers = array();\n  foreach ($numbers as $key => $number) {\n    $sorted_numbers[$key]\
    \ = $number_map[$number];\n  }\n  sort($sorted_numbers);\n  $sorted_numbers =\
    \ array_map(function($number) use ($number_map) {\n    return array_search($number,\
    \ $number_map);\n  }, $sorted_numbers);\n  return implode(' ', $sorted_numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12sj1d2s.php:26\n\
    Stack trace:\n#0 /tmp/tmp12sj1d2s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp12sj1d2s.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    return;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6gyn9az.php:15\n\
    Stack trace:\n#0 /tmp/tmpq6gyn9az.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpq6gyn9az.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$string = explode(\" \", $numbers);\n\
    \t$mapping = array('zero' => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' =>\
    \ 4, 'five' => 5, 'six' => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n\t$final_array\
    \ = array();\n\tforeach ($string as $value) {\n\t\t$final_array[] = $mapping[$value];\n\
    \t}\n\tsort($final_array);\n\tforeach ($final_array as $key => $value) {\n\t\t\
    foreach ($mapping as $key2 => $value2) {\n\t\t\tif ($value == $value2) {\n\t\t\
    \t\t$final_array[$key] = $key2;\n\t\t\t}\n\t\t}\n\t}\n\treturn implode(\" \",\
    \ $final_array);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprgebg0jk.php:30\n\
    Stack trace:\n#0 /tmp/tmprgebg0jk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprgebg0jk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numArray = explode(\" \", $numbers);\n\
    \    sort($numArray);\n    return implode(\" \", $numArray);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf12207ha.php:20\n\
    Stack trace:\n#0 /tmp/tmpf12207ha.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf12207ha.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $number_map = array(\n       \
    \ 'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n        'three' => 3,\n\
    \        'four' => 4,\n        'five' => 5,\n        'six' => 6,\n        'seven'\
    \ => 7,\n        'eight' => 8,\n        'nine' => 9\n    );\n    $numbers = explode('\
    \ ', $numbers);\n    $new_numbers = array();\n    foreach ($numbers as $number)\
    \ {\n        $new_numbers[] = $number_map[$number];\n    }\n    sort($new_numbers);\n\
    \    $final_numbers = array();\n    foreach ($new_numbers as $number) {\n    \
    \    $final_numbers[] = array_search($number, $number_map);\n    }\n    return\
    \ implode(' ', $final_numbers);\n}\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqctnxfuy.php:37\n\
    Stack trace:\n#0 /tmp/tmpqctnxfuy.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqctnxfuy.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = preg_split('/\\s+/',\
    \ $numbers);\n\t$numbers = array_map(function($number) {\n\t\t$nums = ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\t\
    \treturn array_search($number, $nums);\n\t}, $numbers);\n\tsort($numbers);\n\t\
    $numbers = array_map(function($number) {\n\t\t$nums = ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\t\treturn $nums[$number];\n\
    \t}, $numbers);\n\treturn implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yqojqld.php:26\n\
    Stack trace:\n#0 /tmp/tmp9yqojqld.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9yqojqld.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  // TODO: Implement the function\
    \ here!\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt_hgs1sf.php:16\n\
    Stack trace:\n#0 /tmp/tmpt_hgs1sf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpt_hgs1sf.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $p = explode(' ', $numbers);\n\
    \    $order = array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine');\n    $num_map = array_combine($order, array_keys($order));\n\
    \    usort($p, function($a, $b) use ($num_map) {\n        return $num_map[$a]\
    \ - $num_map[$b];\n    });\n    return implode(' ', $p);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers_dict = array(\n     \
    \   'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n        'three' =>\
    \ 3,\n        'four' => 4,\n        'five' => 5,\n        'six' => 6,\n      \
    \  'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n    );\n    $numeral_array\
    \ = explode(' ', $numbers);\n    $number_array = array();\n    foreach ($numeral_array\
    \ as $key => $numeral) {\n        if (!array_key_exists($numeral, $numbers_dict))\
    \ {\n            return 'Error: Invalid string.';\n        }\n        $number_array[$key]\
    \ = $numbers_dict[$numeral];\n    }\n    asort($number_array);\n    $numbers_sorted\
    \ = array();\n    foreach ($number_array as $key => $number) {\n        $numbers_sorted[$key]\
    \ = array_search($number, $numbers_dict);\n    }\n    return implode(' ', $numbers_sorted);\n\
    }\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuir4jnxh.php:40\n\
    Stack trace:\n#0 /tmp/tmpuir4jnxh.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpuir4jnxh.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbersArray = explode(' ', $numbers);\n\
    \t$numbersMap = array(\n\t\t'zero' => 0,\n\t\t'one' => 1,\n\t\t'two' => 2,\n\t\
    \t'three' => 3,\n\t\t'four' => 4,\n\t\t'five' => 5,\n\t\t'six' => 6,\n\t\t'seven'\
    \ => 7,\n\t\t'eight' => 8,\n\t\t'nine' => 9\n\t);\n\t$output = array();\n\tforeach\
    \ ($numbersArray as $number) {\n\t\tarray_push($output, $numbersMap[$number]);\n\
    \t}\n\tsort($output);\n\t$result = \"\";\n\tforeach ($output as $number) {\n\t\
    \tforeach ($numbersMap as $string => $value) {\n\t\t\tif ($number == $value) {\n\
    \t\t\t\t$result .= $string . \" \";\n\t\t\t}\n\t\t}\n\t}\n\treturn trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yphv54o.php:42\n\
    Stack trace:\n#0 /tmp/tmp1yphv54o.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp1yphv54o.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // Initialize array of numbers\n\
    \    $number_map = [\n        'zero' => 0,\n        'one' => 1,\n        'two'\
    \ => 2,\n        'three' => 3,\n        'four' => 4,\n        'five' => 5,\n \
    \       'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine'\
    \ => 9\n    ];\n\n    // Create array of numbers to sort\n    $numbers_array =\
    \ explode(' ', $numbers);\n\n    // Create array of numbers (not words) to sort\n\
    \    $numbers_sorted = [];\n    foreach ($numbers_array as $number) {\n      \
    \  array_push($numbers_sorted, $number_map[$number]);\n    }\n\n    // Sort numbers\n\
    \    sort($numbers_sorted);\n\n    // Convert to words\n    $numbers_sorted_word\
    \ = [];\n    foreach ($numbers_sorted as $number) {\n        array_push($numbers_sorted_word,\
    \ array_search($number, $number_map));\n    }\n\n    // Convert to string\n  \
    \  $numbers_sorted_string = implode(' ', $numbers_sorted_word);\n\n    return\
    \ $numbers_sorted_string;\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgw5cud7l.php:51\n\
    Stack trace:\n#0 /tmp/tmpgw5cud7l.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpgw5cud7l.php\
    \ on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $string_array = explode(\" \"\
    , $numbers);\n    sort($string_array);\n    $numbers = implode(\" \", $string_array);\n\
    \    return $numbers;\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyckv5p0p.php:21\n\
    Stack trace:\n#0 /tmp/tmpyckv5p0p.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyckv5p0p.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $output = [];\n  foreach ($numbers as $num) {\n    $output[] = $num;\n  }\n\
    \  sort($output);\n  return implode(' ', $output);\n}\n\n$numbers = 'three one\
    \ five';\necho sort_numbers($numbers);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "five one three\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2w300mfu.php:27\n\
    Stack trace:\n#0 /tmp/tmp2w300mfu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2w300mfu.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7tf2w9s.php:19\n\
    Stack trace:\n#0 /tmp/tmpz7tf2w9s.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpz7tf2w9s.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$map = array(\n\t\t'zero' => 0,\n\t\t'one' => 1,\n\t\t'two' => 2,\n\t\t'three'\
    \ => 3,\n\t\t'four' => 4,\n\t\t'five' => 5,\n\t\t'six' => 6,\n\t\t'seven' => 7,\n\
    \t\t'eight' => 8,\n\t\t'nine' => 9\n\t);\n\tforeach ($numbers as $index => $value)\
    \ {\n\t\t$numbers[$index] = $map[$value];\n\t}\n\tsort($numbers);\n\tforeach ($numbers\
    \ as $index => $value) {\n\t\t$numbers[$index] = array_search($value, $map);\n\
    \t}\n\treturn implode(' ', $numbers);\n}\n\n$input = 'three one five';\necho \"\
    sort_numbers('$input') = \" . sort_numbers($input) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "sort_numbers('three one five') = one three five\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpb10fpnp9.php:39\nStack trace:\n#0 /tmp/tmpb10fpnp9.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpb10fpnp9.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t\n\t// Construct an array of numberal to numerical equivalent\n\t$numberals\
    \ = array(\n\t\t'zero' => 0,\n\t\t'one' => 1,\n\t\t'two' => 2,\n\t\t'three' =>\
    \ 3,\n\t\t'four' => 4,\n\t\t'five' => 5,\n\t\t'six' => 6,\n\t\t'seven' => 7,\n\
    \t\t'eight' => 8,\n\t\t'nine' => 9\n\t);\n\t\n\t// Convert the numeral words to\
    \ numbers\n\tforeach ($numbers as $key => $value) {\n\t\t$numbers[$key] = $numberals[$value];\n\
    \t}\n\t\n\t// Sort the numbers\n\tsort($numbers);\n\t\n\t// Convert the sorted\
    \ numbers back to numeral words\n\tforeach ($numbers as $key => $value) {\n\t\t\
    $numbers[$key] = array_search($value, $numberals);\n\t}\n\t\n\treturn implode('\
    \ ', $numbers);\n}\n\necho sort_numbers('three one five');\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "one three five\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl515ioyl.php:46\n\
    Stack trace:\n#0 /tmp/tmpl515ioyl.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpl515ioyl.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers_array = explode(' ', $numbers);\n\
    \  $numbers_array = array_map('strval', $numbers_array);\n  sort($numbers_array);\n\
    \  return implode(' ', $numbers_array);\n}\nfunction candidate(...$args) {\n \
    \   return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2r74m26t.php:20\n\
    Stack trace:\n#0 /tmp/tmp2r74m26t.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2r74m26t.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4am8er0g.php:16\n\
    Stack trace:\n#0 /tmp/tmp4am8er0g.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4am8er0g.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$nums = explode(' ', $numbers);\n\
    \tfor ($i = 0; $i < count($nums); $i++) {\n\t\tswitch ($nums[$i]) {\n\t\t\tcase\
    \ 'zero':\n\t\t\t\t$nums[$i] = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'one':\n\t\t\t\t\
    $nums[$i] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'two':\n\t\t\t\t$nums[$i] = 2;\n\t\t\
    \t\tbreak;\n\t\t\tcase 'three':\n\t\t\t\t$nums[$i] = 3;\n\t\t\t\tbreak;\n\t\t\t\
    case 'four':\n\t\t\t\t$nums[$i] = 4;\n\t\t\t\tbreak;\n\t\t\tcase 'five':\n\t\t\
    \t\t$nums[$i] = 5;\n\t\t\t\tbreak;\n\t\t\tcase 'six':\n\t\t\t\t$nums[$i] = 6;\n\
    \t\t\t\tbreak;\n\t\t\tcase 'seven':\n\t\t\t\t$nums[$i] = 7;\n\t\t\t\tbreak;\n\t\
    \t\tcase 'eight':\n\t\t\t\t$nums[$i] = 8;\n\t\t\t\tbreak;\n\t\t\tcase 'nine':\n\
    \t\t\t\t$nums[$i] = 9;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tsort($nums);\n\tfor ($i\
    \ = 0; $i < count($nums); $i++) {\n\t\tswitch ($nums[$i]) {\n\t\t\tcase 0:\n\t\
    \t\t\t$nums[$i] = 'zero';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\t$nums[$i] =\
    \ 'one';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$nums[$i] = 'two';\n\t\t\t\t\
    break;\n\t\t\tcase 3:\n\t\t\t\t$nums[$i] = 'three';\n\t\t\t\tbreak;\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcoy__nqr.php on line 71\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    sort($numbers);\n    return implode(' ', $numbers);\n}\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfmr5gegr.php:19\n\
    Stack trace:\n#0 /tmp/tmpfmr5gegr.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpfmr5gegr.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers_array = explode(' ', $numbers);\n\
    \  $numbers_array = array_map('number_to_digit', $numbers_array);\n  sort($numbers_array);\n\
    \  $numbers_array = array_map('digit_to_number', $numbers_array);\n  return implode('\
    \ ', $numbers_array);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'number_to_digit' not found or invalid function name in /tmp/tmpaqx_e0g5.php\
    \ on line 9\n\nWarning: sort() expects parameter 1 to be array, null given in\
    \ /tmp/tmpaqx_e0g5.php on line 10\n\nWarning: array_map() expects parameter 1\
    \ to be a valid callback, function 'digit_to_number' not found or invalid function\
    \ name in /tmp/tmpaqx_e0g5.php on line 11\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmpaqx_e0g5.php on line 12\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpaqx_e0g5.php:20\nStack trace:\n#0 /tmp/tmpaqx_e0g5.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaqx_e0g5.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t// separate string into array of\
    \ words\n\t$numbers_array = explode(\" \", $numbers);\n\t\n\t// make an array\
    \ of the numbers in order\n\t$keys = array('zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine');\n\t\n\t// replace words with numbers\n\
    \t$numbers_array = str_replace($keys, array_keys($keys), $numbers_array);\n\t\n\
    \t// sort array\n\tsort($numbers_array);\n\t\n\t// replace numbers with words\n\
    \t$numbers_array = str_replace(array_keys($keys), $keys, $numbers_array);\n\t\n\
    \t// convert array back to string\n\t$numbers = implode(\" \", $numbers_array);\n\
    \t\n\treturn $numbers;\n}\n\n$numbers = 'three one five';\necho \"Input: $numbers\\\
    n\";\necho \"Output: \" . sort_numbers($numbers) . \"\\n\";\n\n$numbers = 'five\
    \ three one seven';\necho \"Input: $numbers\\n\";\necho \"Output: \" . sort_numbers($numbers)\
    \ . \"\\n\";\n\n$numbers = 'one two three four five six seven eight nine';\necho\
    \ \"Input: $numbers\\n\";\necho \"Output: \" . sort_numbers($numbers) . \"\\n\"\
    ;\n\n$numbers = 'eight nine two five zero seven one three four six';\necho \"\
    Input: $numbers\\n\";\necho \"Output: \" . sort_numbers($numbers) . \"\\n\";\n\
    \n$numbers = 'nine eight zero six five four one three seven two';\necho \"Input:\
    \ $numbers\\n\";\necho \"Output: \" . sort_numbers($numbers) . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Input: three one five\nOutput: one three five\nInput: five three one seven\n\
    Output: one three five seven\nInput: one two three four five six seven eight nine\n\
    Output: one two three four five six seven eight nine\nInput: eight nine two five\
    \ zero seven one three four six\nOutput: zero one two three four five six seven\
    \ eight nine\nInput: nine eight zero six five four one three seven two\nOutput:\
    \ zero one two three four five six seven eight nine\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $sorted_numbers = \"\";\n  $number_array\
    \ = array(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\"\
    \ => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\"\
    \ => 9);\n  $numbers_array = explode(\" \", $numbers);\n  foreach ($numbers_array\
    \ as $key => $num) {\n    $num_map[$key] = $number_array[$num];\n  }\n  sort($num_map);\n\
    \  foreach ($num_map as $key => $num) {\n    $sorted_numbers .= array_search($num,\
    \ $number_array).\" \";\n  }\n  return $sorted_numbers;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxco3lt_k.php:25\n\
    Stack trace:\n#0 /tmp/tmpxco3lt_k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxco3lt_k.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $my_numbers = ['zero' => 0, 'one'\
    \ => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' => 6, 'seven'\
    \ => 7, 'eight' => 8, 'nine' => 9];\n  $num_array = [];\n  $numbers = explode('\
    \ ', $numbers);\n  foreach ($numbers as $val) {\n    $num_array[] = $my_numbers[$val];\n\
    \  }\n  $num_array = array_unique($num_array);\n  sort($num_array);\n  foreach\
    \ ($num_array as $val) {\n    $numbers_sorted[] = array_search($val, $my_numbers);\n\
    \  }\n  $numbers_sorted = implode(' ', $numbers_sorted);\n  return $numbers_sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp44lcou8j.php:28\n\
    Stack trace:\n#0 /tmp/tmp44lcou8j.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp44lcou8j.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers_array = explode(' ', $numbers);\n\
    \  $numbers_array = array_unique($numbers_array);\n  $numeral_numbers = array();\n\
    \  $return_string = '';\n  foreach ($numbers_array as $number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        $numeral_numbers[] = 0;\n        break;\n   \
    \   case 'one':\n        $numeral_numbers[] = 1;\n        break;\n      case 'two':\n\
    \        $numeral_numbers[] = 2;\n        break;\n      case 'three':\n      \
    \  $numeral_numbers[] = 3;\n        break;\n      case 'four':\n        $numeral_numbers[]\
    \ = 4;\n        break;\n      case 'five':\n        $numeral_numbers[] = 5;\n\
    \        break;\n      case 'six':\n        $numeral_numbers[] = 6;\n        break;\n\
    \      case 'seven':\n        $numeral_numbers[] = 7;\n        break;\n      case\
    \ 'eight':\n        $numeral_numbers[] = 8;\n        break;\n      case 'nine':\n\
    \        $numeral_numbers[] = 9;\n        break;\n    }\n  }\n  sort($numeral_numbers);\n\
    \  foreach ($numeral_numbers as $numeral_number) {\n    switch ($numeral_number)\
    \ {\n      case 0:\n        $return_string .= 'zero ';\n        break;\n     \
    \ case 1:\n        $return_string .= 'one ';\n        break;\n      case 2:\n\
    \        $return_string .= 'two ';\n        break;\n      case 3:\n        $return_string\
    \ .= 'three ';\n        break;\n      case 4:\n        $return_string .= 'four\
    \ ';\n        break;\n      case 5:\n        $return_string .= 'five ';\n    \
    \    break;\n      case 6:\n        $return_string .= 'six ';\n        break;\n\
    \      case 7:\n        $return_string .= 'seven ';\n        break;\n      case\
    \ 8:\n       \nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbvzt3vbf.php on line 87\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $words = explode(' ', $numbers);\n\
    \  $translate = array(\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n \
    \   'three' => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven'\
    \ => 7,\n    'eight' => 8,\n    'nine' => 9\n  );\n  for ($i = 0; $i < count($words);\
    \ $i++) {\n    $words[$i] = $translate[$words[$i]];\n  }\n  sort($words);\n  for\
    \ ($i = 0; $i < count($words); $i++) {\n    $words[$i] = array_search($words[$i],\
    \ $translate);\n  }\n  return implode(' ', $words);\n}\necho sort_numbers('three\
    \ one five') . \"\\n\";\necho sort_numbers('seven nine two eight one six five\
    \ three four zero') . \"\\n\";\necho sort_numbers('one two three four five six\
    \ seven eight nine zero') . \"\\n\";\necho sort_numbers('one one two one two three\
    \ two three four three four five four five six five six seven six seven eight\
    \ seven eight nine eight nine zero nine zero one zero one two') . \"\\n\";\n\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "one three five\nzero one two three four five six seven eight nine\nzero\
    \ one two three four five six seven eight nine\nzero zero zero one one one one\
    \ one two two two two three three three four four four five five five six six\
    \ six seven seven seven eight eight eight nine nine nine\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpsb3up_a2.php:40\nStack trace:\n#0 /tmp/tmpsb3up_a2.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsb3up_a2.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers_array = explode(' ',\
    \ $numbers);\n    $numbers_array = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 'zero':\n                return 0;\n           \
    \ case 'one':\n                return 1;\n            case 'two':\n          \
    \      return 2;\n            case 'three':\n                return 3;\n     \
    \       case 'four':\n                return 4;\n            case 'five':\n  \
    \              return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers_array);\n    sort($numbers_array);\n    $numbers_array\
    \ = array_map(function($item) {\n        switch ($item) {\n            case 0:\n\
    \                return 'zero';\n            case 1:\n                return 'one';\n\
    \            case 2:\n                return 'two';\n            case 3:\n   \
    \             return 'three';\n            case 4:\n                return 'four';\n\
    \            case 5:\n                return 'five';\n            case 6:\n  \
    \              return 'six';\n            case 7:\n                return 'seven';\n\
    \            case 8:\n                return 'eight';\n            case 9:\n \
    \               return 'nine';\n        }\n    }, $numbers_array);\n    return\
    \ implode(' ', $numbers_array);\n}\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj1k9mvr1.php:65\n\
    Stack trace:\n#0 /tmp/tmpj1k9mvr1.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpj1k9mvr1.php\
    \ on line 65\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    //\n    // YOUR CODE GOES HERE\n\
    \    //\n}\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvfr_8ewt.php:17\n\
    Stack trace:\n#0 /tmp/tmpvfr_8ewt.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvfr_8ewt.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $sorted_numbers = '';\n    $unsorted_numbers\
    \ = array();\n    foreach (explode(' ', $numbers) as $number) {\n        $unsorted_numbers[]\
    \ = get_numerals($number);\n    }\n    sort($unsorted_numbers);\n    foreach ($unsorted_numbers\
    \ as $number) {\n        $sorted_numbers .= get_number($number) . ' ';\n    }\n\
    \    return trim($sorted_numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_numerals()\
    \ in /tmp/tmppl943ta6.php:11\nStack trace:\n#0 /tmp/tmppl943ta6.php(21): sort_numbers('')\n\
    #1 /tmp/tmppl943ta6.php(25): candidate('')\n#2 /tmp/tmppl943ta6.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmppl943ta6.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $array = explode(' ', $numbers);\n\
    \    $nums = [\n        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n\
    \        'three' => 3,\n        'four' => 4,\n        'five' => 5,\n        'six'\
    \ => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n \
    \   ];\n    $result = [];\n    foreach ($array as $num) {\n        $result[] =\
    \ $nums[$num];\n    }\n    sort($result);\n    foreach ($result as $k => $v) {\n\
    \        $arr = array_flip($nums);\n        $result[$k] = $arr[$v];\n    }\n \
    \   return implode(' ', $result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $number_values = array('zero' =>\
    \ 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' =>\
    \ 6, 'seven' => 7, 'eight' => 8, 'nine' => 9);\n  $numbers_array = explode(' ',\
    \ $numbers);\n  $numbers_array_converted = array();\n  foreach ($numbers_array\
    \ as $number) {\n    $numbers_array_converted[] = $number_values[$number];\n \
    \ }\n  sort($numbers_array_converted);\n  $i = 0;\n  foreach ($numbers_array_converted\
    \ as $number) {\n    $numbers_array[$i] = array_search($number, $number_values);\n\
    \    $i++;\n  }\n  return implode(' ', $numbers_array);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvtmwb2gk.php:28\n\
    Stack trace:\n#0 /tmp/tmpvtmwb2gk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvtmwb2gk.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $number_words = explode(' ', $numbers);\n\
    \    $number_values = array_map(function($number_word) {\n        return number_for_word($number_word);\n\
    \    }, $number_words);\n    sort($number_values);\n    $number_words = array_map(function($number_value)\
    \ {\n        return word_for_number($number_value);\n    }, $number_values);\n\
    \    return implode(' ', $number_words);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_for_word()\
    \ in /tmp/tmpb3ox1gbz.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpb3ox1gbz.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpb3ox1gbz.php(20):\
    \ sort_numbers('')\n#3 /tmp/tmpb3ox1gbz.php(24): candidate('')\n#4 /tmp/tmpb3ox1gbz.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpb3ox1gbz.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers_map = array(\n    'zero'  => 0,\n    'one'   => 1,\n    'two'   =>\
    \ 2,\n    'three' => 3,\n    'four'  => 4,\n    'five'  => 5,\n    'six'   =>\
    \ 6,\n    'seven' => 7,\n    'eight' => 8,\n    'nine'  => 9,\n  );\n  $numbers\
    \ = array_map(function($number) use ($numbers_map) {\n    return $numbers_map[$number];\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ use ($numbers_map) {\n    return array_search($number, $numbers_map);\n  },\
    \ $numbers);\n  return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph60etn75.php:36\n\
    Stack trace:\n#0 /tmp/tmph60etn75.php(43): test()\n#1 {main}\n  thrown in /tmp/tmph60etn75.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$number_array = explode(' ', $numbers);\n\
    \t$number_array = insert_sort($number_array);\n\t$sorted_string = implode(' ',\
    \ $number_array);\n\treturn $sorted_string;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function insert_sort()\
    \ in /tmp/tmpdvyv1d7v.php:9\nStack trace:\n#0 /tmp/tmpdvyv1d7v.php(15): sort_numbers('')\n\
    #1 /tmp/tmpdvyv1d7v.php(19): candidate('')\n#2 /tmp/tmpdvyv1d7v.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdvyv1d7v.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ [\n      'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'\n    ]);\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return [\n      'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine'\n    ][$number];\n  }, $numbers);\n  return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpseq869gn.php:28\n\
    Stack trace:\n#0 /tmp/tmpseq869gn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpseq869gn.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  sort($numbers);\n  return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1v_selw1.php:20\n\
    Stack trace:\n#0 /tmp/tmp1v_selw1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1v_selw1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    // TODO: implement\n    $number\
    \ = explode(\" \", $numbers);\n    asort($number);\n    $number = implode(\" \"\
    , $number);\n    return $number;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc0u_rc_.php:22\n\
    Stack trace:\n#0 /tmp/tmpvc0u_rc_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvc0u_rc_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($val) {\n        return str_replace('zero',\
    \ '0', $val);\n    }, $numbers);\n    $numbers = array_map(function($val) {\n\
    \        return str_replace('one', '1', $val);\n    }, $numbers);\n    $numbers\
    \ = array_map(function($val) {\n        return str_replace('two', '2', $val);\n\
    \    }, $numbers);\n    $numbers = array_map(function($val) {\n        return\
    \ str_replace('three', '3', $val);\n    }, $numbers);\n    $numbers = array_map(function($val)\
    \ {\n        return str_replace('four', '4', $val);\n    }, $numbers);\n    $numbers\
    \ = array_map(function($val) {\n        return str_replace('five', '5', $val);\n\
    \    }, $numbers);\n    $numbers = array_map(function($val) {\n        return\
    \ str_replace('six', '6', $val);\n    }, $numbers);\n    $numbers = array_map(function($val)\
    \ {\n        return str_replace('seven', '7', $val);\n    }, $numbers);\n    $numbers\
    \ = array_map(function($val) {\n        return str_replace('eight', '8', $val);\n\
    \    }, $numbers);\n    $numbers = array_map(function($val) {\n        return\
    \ str_replace('nine', '9', $val);\n    }, $numbers);\n    sort($numbers);\n  \
    \  $numbers = array_map(function($val) {\n        return str_replace('0', 'zero',\
    \ $val);\n    }, $numbers);\n    $numbers = array_map(function($val) {\n     \
    \   return str_replace('1', 'one', $val);\n    }, $numbers);\n    $numbers = array_map(function($val)\
    \ {\n        return str_replace('2', 'two', $val);\n    }, $numbers);\n    $numbers\
    \ = array_map(function\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxqma9d24.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $words = explode(' ', $numbers);\n\
    \    $numbers = array();\n    $allNumbers = array('zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine');\n    $numbers = array_intersect($allNumbers,\
    \ $words);\n    sort($numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5dh2yqzz.php:23\n\
    Stack trace:\n#0 /tmp/tmp5dh2yqzz.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5dh2yqzz.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$number_values = array(\n\t\t'zero' => 0,\n\t\t'one' => 1,\n\t\t'two' => 2,\n\
    \t\t'three' => 3,\n\t\t'four' => 4,\n\t\t'five' => 5,\n\t\t'six' => 6,\n\t\t'seven'\
    \ => 7,\n\t\t'eight' => 8,\n\t\t'nine' => 9\n\t);\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\t$numbers[$i] = $number_values[$numbers[$i]];\n\t}\n\tsort($numbers);\n\
    \tfor ($i = 0; $i < count($numbers); $i++) {\n\t\t$numbers[$i] = array_search($numbers[$i],\
    \ $number_values);\n\t}\n\treturn implode(' ', $numbers);\n}\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpar4k49t4.php:35\n\
    Stack trace:\n#0 /tmp/tmpar4k49t4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpar4k49t4.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  // Your code here.\n}\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gnavfm.php:15\n\
    Stack trace:\n#0 /tmp/tmpv3gnavfm.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpv3gnavfm.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t\n\t$numbers = explode(' ', $numbers);\n\
    \t\n\t$number_translation = array(\n\t\t'zero' => 0,\n\t\t'one' => 1,\n\t\t'two'\
    \ => 2,\n\t\t'three' => 3,\n\t\t'four' => 4,\n\t\t'five' => 5,\n\t\t'six' => 6,\n\
    \t\t'seven' => 7,\n\t\t'eight' => 8,\n\t\t'nine' => 9\n\t);\n\t\n\t$numbers =\
    \ array_map(function($v) use ($number_translation) {\n\t\treturn $number_translation[$v];\n\
    \t}, $numbers);\n\t\n\tsort($numbers);\n\t\n\t$numbers = array_map(function($v)\
    \ use ($number_translation) {\n\t\treturn array_search($v, $number_translation);\n\
    \t}, $numbers);\n\t\n\treturn implode(' ', $numbers);\n}\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa95589j4.php:41\n\
    Stack trace:\n#0 /tmp/tmpa95589j4.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpa95589j4.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $number_map = [\n        'zero'\
    \ => 0,\n        'one' => 1,\n        'two' => 2,\n        'three' => 3,\n   \
    \     'four' => 4,\n        'five' => 5,\n        'six' => 6,\n        'seven'\
    \ => 7,\n        'eight' => 8,\n        'nine' => 9,\n    ];\n    $numeral_map\
    \ = array_flip($number_map);\n    $numbers = explode(' ', $numbers);\n    $numbers\
    \ = array_map(function($number) use ($number_map) {\n        return $number_map[$number];\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ use ($numeral_map) {\n        return $numeral_map[$number];\n    }, $numbers);\n\
    \    return implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $map = array(\n    'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three'\
    \ => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n\
    \    'eight' => 8,\n    'nine' => 9,\n  );\n  $numbers = array_map(function($number)\
    \ use ($map) {\n    return $map[$number];\n  }, $numbers);\n  sort($numbers);\n\
    \  $map = array_flip($map);\n  $numbers = array_map(function($number) use ($map)\
    \ {\n    return $map[$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\n$sample = array(\n  'three one five',\n  'nine four eight two one zero three',\n\
    \  'three six zero five four one two seven eight nine',\n);\nforeach ($sample\
    \ as $text) {\n  echo $text . ' --> ' . sort_numbers($text) . \"\\n\";\n}\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "three one five --> one three five\nnine four eight two one zero three -->\
    \ zero one two three four eight nine\nthree six zero five four one two seven eight\
    \ nine --> zero one two three four five six seven eight nine\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $return = \"\";\n  foreach ($numbers as $number) {\n    $number = str_replace('nine',\
    \ '9', $number);\n    $number = str_replace('eight', '8', $number);\n    $number\
    \ = str_replace('seven', '7', $number);\n    $number = str_replace('six', '6',\
    \ $number);\n    $number = str_replace('five', '5', $number);\n    $number = str_replace('four',\
    \ '4', $number);\n    $number = str_replace('three', '3', $number);\n    $number\
    \ = str_replace('two', '2', $number);\n    $number = str_replace('one', '1', $number);\n\
    \    $number = str_replace('zero', '0', $number);\n    $return .= $number . \"\
    \ \";\n  }\n  $return = explode(' ', $return);\n  sort($return);\n  $return =\
    \ implode(' ', $return);\n  $return = str_replace('9', 'nine', $return);\n  $return\
    \ = str_replace('8', 'eight', $return);\n  $return = str_replace('7', 'seven',\
    \ $return);\n  $return = str_replace('6', 'six', $return);\n  $return = str_replace('5',\
    \ 'five', $return);\n  $return = str_replace('4', 'four', $return);\n  $return\
    \ = str_replace('3', 'three', $return);\n  $return = str_replace('2', 'two', $return);\n\
    \  $return = str_replace('1', 'one', $return);\n  $return = str_replace('0', 'zero',\
    \ $return);\n  return $return;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16c5sz8a.php:44\n\
    Stack trace:\n#0 /tmp/tmp16c5sz8a.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp16c5sz8a.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_84_solve
language: php
results:
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n$N = 147;\nprint_r(solve($N));\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphn8x6fco.php:22\n\
    Stack trace:\n#0 /tmp/tmphn8x6fco.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphn8x6fco.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzogi_w7q.php:20\n\
    Stack trace:\n#0 /tmp/tmpzogi_w7q.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzogi_w7q.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += intval($binary[$i]);\n    }\n    return strval($sum);\n\
    }\necho solve(1000);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppvkkuc4_.php:26\n\
    Stack trace:\n#0 /tmp/tmppvkkuc4_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppvkkuc4_.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\n$N = 1000;\n\
    echo solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzebgau45.php:28\n\
    Stack trace:\n#0 /tmp/tmpzebgau45.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzebgau45.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return str_split(bindec($N))[0];\n}\n$N = 1000;\necho solve($N);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4hl5ouw.php:22\n\
    Stack trace:\n#0 /tmp/tmpy4hl5ouw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpy4hl5ouw.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\nprint_r(solve(1000));\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdu20rle.php:22\n\
    Stack trace:\n#0 /tmp/tmpkdu20rle.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkdu20rle.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $res = array_sum(str_split($bin));\n    return $res;\n\
    }\necho solve(1000) . PHP_EOL;\necho solve(150) . PHP_EOL;\necho solve(147) .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdjh2us_0.php:25\n\
    Stack trace:\n#0 /tmp/tmpdjh2us_0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdjh2us_0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return decbin($N);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rf87t3a.php:21\n\
    Stack trace:\n#0 /tmp/tmp6rf87t3a.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6rf87t3a.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binaryNum = decbin($N);\n    $binaryNumArray = str_split($binaryNum);\n   \
    \ $binaryNumTotal = array_sum($binaryNumArray);\n    return $binaryNumTotal;\n\
    }\n\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_yohhi78.php:25\n\
    Stack trace:\n#0 /tmp/tmp_yohhi78.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_yohhi78.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = 0;\n    while($N > 0) {\n        $result += $N % 2;\n        $N =\
    \ floor($N / 2);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpso57xyu9.php:26\n\
    Stack trace:\n#0 /tmp/tmpso57xyu9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpso57xyu9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binaryN = decbin($N);\n    $binArr = str_split($binaryN);\n    return array_sum($binArr);\n\
    }\necho solve(1000);\necho solve(150);\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzi9fcmku.php:25\n\
    Stack trace:\n#0 /tmp/tmpzi9fcmku.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzi9fcmku.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    return array_sum(str_split($binary));\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcpm2z7e9.php:21\n\
    Stack trace:\n#0 /tmp/tmpcpm2z7e9.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcpm2z7e9.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5gcj1h1.php:20\n\
    Stack trace:\n#0 /tmp/tmps5gcj1h1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmps5gcj1h1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $temp = decbin($N);\n    for ($i = 0; $i < strlen($temp); $i++)\
    \ {\n        $sum += $temp[$i];\n    }\n    return $sum;\n}\n$N = 1000;\n$answer\
    \ = solve($N);\nprint_r($answer);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmk8c3qve.php:28\n\
    Stack trace:\n#0 /tmp/tmpmk8c3qve.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmk8c3qve.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $number = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($number);\
    \ $i++) {\n        $sum += $number[$i];\n    }\n    return $sum;\n}\n\nprint_r(solve(1000));\n\
    print_r(solve(150));\nprint_r(solve(147));\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppduxjln4.php:29\n\
    Stack trace:\n#0 /tmp/tmppduxjln4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppduxjln4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = array();\n    for ($i = $N; $i > 0; $i /= 2) {\n        $result[]\
    \ = $i % 2;\n    }\n    return array_sum($result);\n}\necho solve(1000) . \"\\\
    n\";\necho solve(150) . \"\\n\";\necho solve(147) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmhes5g3j.php:27\n\
    Stack trace:\n#0 /tmp/tmpmhes5g3j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmhes5g3j.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $binary\
    \ = decbin($N);\n  $sum = 0;\n  for ($i = 0; $i < strlen($binary); $i++) {\n \
    \   $sum += intval($binary[$i]);\n  }\n  return $sum;\n}\n$n = 147;\necho solve($n);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_n2m2w09.php:27\n\
    Stack trace:\n#0 /tmp/tmp_n2m2w09.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_n2m2w09.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // convert number to binary\n    $binary = decbin($N);\n    // initialize sum,\
    \ summing all digits in binary number\n    $sum = 0;\n    // loop through number\n\
    \    for ($i = 0; $i < strlen($binary); $i++) {\n        // add digit to sum\n\
    \        $sum += $binary[$i];\n    }\n    // return sum of binary digits\n   \
    \ return $sum;\n}\necho solve(1000) . \"\\n\";\necho solve(147) . \"\\n\";\necho\
    \ solve(150) . \"\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcfoj6www.php:33\n\
    Stack trace:\n#0 /tmp/tmpcfoj6www.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpcfoj6www.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // $answer = (string)decbin($N); // I tried to convert it to binary and then\
    \ sum them up but failed.\n    $answer = 0;\n    $answer += floor($N / 64);\n\
    \    $N = $N % 64;\n    $answer += floor($N / 32);\n    $N = $N % 32;\n    $answer\
    \ += floor($N / 16);\n    $N = $N % 16;\n    $answer += floor($N / 8);\n    $N\
    \ = $N % 8;\n    $answer += floor($N / 4);\n    $N = $N % 4;\n    $answer += floor($N\
    \ / 2);\n    $N = $N % 2;\n    $answer += $N;\n    return (string)$answer;\n}\n\
    echo solve(1000);\necho solve(150);\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1755\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqy0ix4e.php:38\n\
    Stack trace:\n#0 /tmp/tmpgqy0ix4e.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgqy0ix4e.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt_hcjswf.php:21\n\
    Stack trace:\n#0 /tmp/tmpt_hcjswf.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpt_hcjswf.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $n\
    \ = decbin($N);\n  $count = 0;\n  for ($i = 0; $i < strlen($n); $i++) {\n    $count\
    \ += $n[$i];\n  }\n  return $count;\n}\n$N = 1000;\necho solve($N);\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12l5iicw.php:28\n\
    Stack trace:\n#0 /tmp/tmp12l5iicw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp12l5iicw.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // echo decbin($N);\n    // echo base_convert($N,10,2);\n    // return array_sum(str_split(decbin($N)));\n\
    \    $bin = \"\";\n    while($N>=1){\n        $bin = $N%2 . $bin;\n        $N\
    \ = floor($N/2);\n    }\n    // echo $bin;\n    return array_sum(str_split($bin));\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjltvcply.php:29\n\
    Stack trace:\n#0 /tmp/tmpjltvcply.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjltvcply.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $answer = decbin($N);\n    $answer = str_split($answer);\n    $sum = 0;\n  \
    \  foreach($answer as $value){\n        $sum += $value;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7uomd5we.php:27\n\
    Stack trace:\n#0 /tmp/tmp7uomd5we.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7uomd5we.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    while ($N != 0) {\n        $sum += $N % 2;\n        $N = floor($N\
    \ / 2);\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbueg_qzr.php:25\n\
    Stack trace:\n#0 /tmp/tmpbueg_qzr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbueg_qzr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\nprint_r(solve(147));\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnk1101b7.php:22\n\
    Stack trace:\n#0 /tmp/tmpnk1101b7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpnk1101b7.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  //\
    \ convert integer to binary\n  $binary = decbin($N);\n  // convert integer to\
    \ array\n  $binary = str_split($binary);\n  // sum array of integers\n  $solution\
    \ = array_sum($binary);\n  // return solution\n  return $solution;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp677exnmg.php:27\n\
    Stack trace:\n#0 /tmp/tmp677exnmg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp677exnmg.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = preg_split('//', $binary, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    $result = 0;\n    foreach ($binary as $digit) {\n        $result += $digit;\n\
    \    }\n    return $result;\n}\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo50ak5d5.php:27\n\
    Stack trace:\n#0 /tmp/tmpo50ak5d5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpo50ak5d5.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return decbin($N);\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmabkv8va.php:20\n\
    Stack trace:\n#0 /tmp/tmpmabkv8va.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmabkv8va.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\n$tests = [\n    [1000, 1],\n\
    \    [150, 6],\n    [147, 12],\n    [64, 1],\n    [202, 5],\n    [4000, 6],\n\
    \    [34, 4],\n    [108, 4],\n    [524, 7],\n    [564, 7],\n    [964, 7],\n  \
    \  [100, 1],\n    [1000, 1],\n    [1100, 2],\n    [1300, 2],\n    [1500, 3],\n\
    \    [1700, 3],\n    [1900, 3],\n    [2000, 1],\n    [2100, 2],\n    [2300, 2],\n\
    \    [2500, 3],\n    [2700, 3],\n    [2900, 3],\n    [3000, 1],\n    [3100, 2],\n\
    \    [3300, 2],\n    [3500, 3],\n    [3700, 3],\n    [3900, 3],\n    [4000, 1],\n\
    \    [4100, 2],\n    [4300, 2],\n    [4500, 3],\n    [4700, 3],\n    [4900, 3],\n\
    \    [5000, 1],\n    [5100, 2],\n    [5300, 2],\n    [5500, 3],\n    [5700, 3],\n\
    \    [5900, 3],\n    [6000, 1],\n    [6100, 2],\n    [6300, 2],\n    [6500, 3],\n\
    \    [6700, 3],\n    [6900, 3],\n    [7000, 1],\n    [7100, 2],\n    [7300, 2],\n\
    \    [7500, 3],\n    [7700, 3],\n    [7900, 3],\n    [8000, 1],\n    [8100, 2],\n\
    \    [8300, 2],\n    [8500, 3],\n    [8700, 3],\n    [8900, 3],\n    [9000, 1],\n\
    \    [9100, 2],\n    [9300, 2],\n    [95\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0f_mxizn.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = 0;\n    $binary = '';\n    while ($N != 0) {\n        $binary = ($N\
    \ % 2) . $binary;\n        $N = (int)($N / 2);\n    }\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $result += $binary[$i];\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5gle6plt.php:30\n\
    Stack trace:\n#0 /tmp/tmp5gle6plt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5gle6plt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $result = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $result += $binary[$i];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp620e5hw9.php:25\n\
    Stack trace:\n#0 /tmp/tmp620e5hw9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp620e5hw9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $binary\
    \ = decbin($N);\n  $exp = explode('0', $binary);\n  $total = 0;\n  foreach ($exp\
    \ as $value) {\n    $total += strlen($value);\n  }\n  return strval($total);\n\
    }\necho solve(1000).\"\\n\";\necho solve(150).\"\\n\";\necho solve(147).\"\\n\"\
    ;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqhu3osm.php:29\n\
    Stack trace:\n#0 /tmp/tmpsqhu3osm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsqhu3osm.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // $decimal = $N;\n    // $binary = decbin($decimal);\n    // $binary_array\
    \ = str_split($binary);\n    // $binary_total = array_sum($binary_array);\n  \
    \  // return (string)$binary_total;\n    // echo $binary_total;\n    $sum = 0;\n\
    \    while ($N > 0) {\n        $sum += $N % 2;\n        $N = floor($N / 2);\n\
    \    }\n    return $sum;\n}\n$test = solve(1000);\nprint_r($test);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9t97gwl0.php:33\n\
    Stack trace:\n#0 /tmp/tmp9t97gwl0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9t97gwl0.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // $N = decbin($N);\n    $N = (string) $N;\n    $sum = 0;\n    for ($i = 0;\
    \ $i < strlen($N); $i++) {\n        $n = (int) $N[$i];\n        $n = decbin($n);\n\
    \        $sum += $n;\n    }\n    return $sum;\n}\nprint_r(solve(150));\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "102\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmoc2znr4.php:29\n\
    Stack trace:\n#0 /tmp/tmpmoc2znr4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmoc2znr4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // Write your code here\n    // convert base 10 to base 2\n    $base2 = decbin($N);\n\
    \    // add elements of array of base 2\n    $sum = array_sum(str_split($base2));\n\
    \    // return sum of base 2\n    return $sum;\n}\n$N = 1000;\n$result = solve($N);\n\
    echo $result;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11wyt9y3.php:29\n\
    Stack trace:\n#0 /tmp/tmp11wyt9y3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp11wyt9y3.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = decbin($N);\n    return array_sum(str_split($result));\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykjlxj1k.php:21\n\
    Stack trace:\n#0 /tmp/tmpykjlxj1k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpykjlxj1k.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo00tkpf1.php:20\n\
    Stack trace:\n#0 /tmp/tmpo00tkpf1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpo00tkpf1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $bin = preg_split('//', $bin, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    return array_sum($bin);\n}\nsolve(1000);\nsolve(147);\nsolve(150);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu42k9hpw.php:25\n\
    Stack trace:\n#0 /tmp/tmpu42k9hpw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpu42k9hpw.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // e.g. 26 = 11010\n    // 1. find the binary digit\n    // 2. convert the binary\
    \ to string\n    // 3. sum digits\n    $count = 0;\n    while ($N > 0) {\n   \
    \     if ($N % 2 == 0) {\n            $count++;\n        }\n        $N = floor($N\
    \ / 2);\n    }\n    return $count;\n}\n\necho \"18 \" . solve(18) . PHP_EOL;\n\
    echo \"26 \" . solve(26) . PHP_EOL;\necho \"30 \" . solve(30) . PHP_EOL;\necho\
    \ \"32 \" . solve(32) . PHP_EOL;\necho \"255 \" . solve(255) . PHP_EOL;\necho\
    \ \"500 \" . solve(500) . PHP_EOL;\necho \"1000 \" . solve(1000) . PHP_EOL;\n\
    echo \"1500 \" . solve(1500) . PHP_EOL;\necho \"1600 \" . solve(1600) . PHP_EOL;\n\
    echo \"1602 \" . solve(1602) . PHP_EOL;\necho \"2002 \" . solve(2002) . PHP_EOL;\n\
    echo \"2042 \" . solve(2042) . PHP_EOL;\necho \"2100 \" . solve(2100) . PHP_EOL;\n\
    echo \"3100 \" . solve(3100) . PHP_EOL;\necho \"4100 \" . solve(4100) . PHP_EOL;\n\
    echo \"4200 \" . solve(4200) . PHP_EOL;\necho \"4700 \" . solve(4700) . PHP_EOL;\n\
    echo \"8100 \" . solve(8100) . PHP_EOL;\necho \"10100 \" . solve(10100) . PHP_EOL;\n\
    echo \"10110 \" . solve(10110) . PHP_EOL;\necho \"10111 \" . solve(10111) . PHP_EOL;\n\
    echo \"10200 \" . solve(10200) . PHP_EOL;\necho \"12300 \" . solve(12300) . PHP_EOL;\n\
    echo \"12400 \" . solve(12400) . PHP_EOL;\necho \"14500\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9sep_pj2.php on line 57\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // convert to binary format\n    $binary = decbin($N);\n    $bin_sum = 0;\n\
    \    for ($i = 0; $i < strlen($binary); $i++) {\n        // add each digit into\
    \ the sum\n        $bin_sum += (int)$binary[$i];\n    }\n    return $bin_sum;\n\
    }\necho solve(150);\necho \"\\n\";\necho solve(1000);\necho \"\\n\";\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "4\n6\n4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpse135fl3.php:32\n\
    Stack trace:\n#0 /tmp/tmpse135fl3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpse135fl3.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = decbin($N);\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt51q2sgw.php:27\n\
    Stack trace:\n#0 /tmp/tmpt51q2sgw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt51q2sgw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binaryArray = str_split($binary);\n    $result =\
    \ array_sum($binaryArray);\n    return $result;\n}\n$N = 1000;\n$result = solve($N);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasd907er.php:26\n\
    Stack trace:\n#0 /tmp/tmpasd907er.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpasd907er.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    while ($N > 0) {\n        $sum += $N % 2;\n        $N = floor($N\
    \ / 2);\n    }\n    return $sum;\n}\n\n$n = 1000;\necho solve($n);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2h_4q9z.php:28\n\
    Stack trace:\n#0 /tmp/tmpc2h_4q9z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpc2h_4q9z.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // Your code here\n    return decbin($N);\n}\nprint_r(solve(147));\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "10010011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyd8hknm2.php:22\n\
    Stack trace:\n#0 /tmp/tmpyd8hknm2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyd8hknm2.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = array();\n    while ($N > 0) {\n        array_push($binary, $N % 2);\n\
    \        $N = floor($N / 2);\n    }\n    $binary = array_reverse($binary);\n \
    \   $result = array_sum($binary);\n    return $result;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqt5acwk.php:29\n\
    Stack trace:\n#0 /tmp/tmpsqt5acwk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsqt5acwk.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // Write your code here\n    // Convert the integer to binary\n    $binary =\
    \ decbin($N);\n    // Remove the leading 0s\n    $binary = trim($binary, '0');\n\
    \    // Output the binary number without the leading 0s\n    return $binary;\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2u86pv2s.php:26\n\
    Stack trace:\n#0 /tmp/tmp2u86pv2s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2u86pv2s.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  //\
    \ Your code here\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgm8dklao.php:20\n\
    Stack trace:\n#0 /tmp/tmpgm8dklao.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgm8dklao.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_nv84ko.php:21\n\
    Stack trace:\n#0 /tmp/tmpq_nv84ko.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpq_nv84ko.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binaryDigits = '';\n    while ($N != 0) {\n        $binaryDigits = $N % 2 .\
    \ $binaryDigits;\n        $N = (int)($N / 2);\n    }\n    $totalSum = 0;\n   \
    \ for ($i = 0; $i < strlen($binaryDigits); $i++) {\n        $totalSum += $binaryDigits[$i];\n\
    \    }\n    return $totalSum;\n}\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfryrpgtk.php:30\n\
    Stack trace:\n#0 /tmp/tmpfryrpgtk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfryrpgtk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // your code\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5whwj68.php:20\n\
    Stack trace:\n#0 /tmp/tmpe5whwj68.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe5whwj68.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += intval($binary[$i]);\n    }\n    return $sum;\n}\n\
    echo solve(150);\necho \"\\n\";\necho solve(147);\necho \"\\n\";\necho solve(1000);\n\
    echo \"\\n\";\necho solve(10);\necho \"\\n\";\necho solve(11);\necho \"\\n\";\n\
    echo solve(9);\necho \"\\n\";\necho solve(8);\necho \"\\n\";\necho solve(1);\n\
    echo \"\\n\";\necho solve(3);\necho \"\\n\";\necho solve(4);\necho \"\\n\";\n\
    echo solve(5);\necho \"\\n\";\necho solve(7);\necho \"\\n\";\necho solve(6);\n\
    echo \"\\n\";\necho solve(12);\necho \"\\n\";\necho solve(2);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "4\n4\n6\n2\n3\n2\n1\n1\n2\n1\n2\n3\n2\n2\n1\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpqf6xsbfm.php:55\nStack trace:\n#0 /tmp/tmpqf6xsbfm.php(62):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqf6xsbfm.php on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    while ($N > 0) {\n        $sum += $N % 2;\n        $N = floor($N\
    \ / 2);\n    }\n    return $sum;\n}\necho solve(150);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx4v_ilp.php:26\n\
    Stack trace:\n#0 /tmp/tmpnx4v_ilp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnx4v_ilp.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $N = decbin($N);\n    $numberSum = str_split($N);\n    return (array_sum($numberSum));\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38cfb3it.php:22\n\
    Stack trace:\n#0 /tmp/tmp38cfb3it.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp38cfb3it.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $binaryNumber\
    \ = decbin($N);\n  $binaryNumber = str_split($binaryNumber);\n  $binaryNumber\
    \ = array_sum($binaryNumber);\n  return $binaryNumber;\n}\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj149yncx.php:24\n\
    Stack trace:\n#0 /tmp/tmpj149yncx.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpj149yncx.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $strBin\
    \ = decbin($N);\n  $sumBin = 0;\n  for ($i = 0; $i < strlen($strBin); $i++) {\n\
    \    $sumBin += $strBin[$i];\n  }\n  return $sumBin;\n}\n\nprint_r(solve(1000));\n\
    print_r(solve(150));\nprint_r(solve(147));\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmizw536.php:29\n\
    Stack trace:\n#0 /tmp/tmprmizw536.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprmizw536.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // I choose to not use str_split()\n    // instead i'm using cast (int) to turn\
    \ N into string,\n    // then split it into array with characters and \n    //\
    \ set the keys, then i map each digit to it's decimal\n    // value, then reduce\
    \ it to sum.\n    $string = (string) $N;\n    $arr = array_values(str_split($string));\n\
    \    $result = array_reduce($arr, function($carry, $item) {\n        $carry +=\
    \ bindec($item);\n        return $carry;\n    });\n    return $result;\n}\necho\
    \ solve(1000);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyikclg2u.php:32\n\
    Stack trace:\n#0 /tmp/tmpyikclg2u.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyikclg2u.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // convert integer to binary\n    $binary = decbin($N);\n    // initiate sum\
    \ as 0\n    $sum = 0;\n    // sum up the digits in binary\n    for ($i = 0; $i\
    \ < strlen($binary); $i++) {\n        $sum += $binary[$i];\n    }\n    // convert\
    \ integer to binary and output\n    return decbin($sum);\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxcry4bxn.php:29\n\
    Stack trace:\n#0 /tmp/tmpxcry4bxn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxcry4bxn.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n// Put\
    \ your solution here\n}\n$N = (integer)fgets(STDIN);\necho solve($N);\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpvc3pog.php:23\n\
    Stack trace:\n#0 /tmp/tmptpvc3pog.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptpvc3pog.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // convert number to binary\n    $binaryN = decbin($N);\n    // get sum of digits\n\
    \    $answer = 0;\n    for ($i = 0; $i < strlen($binaryN); $i++) {\n        $answer\
    \ += (int) $binaryN[$i];\n    }\n    return $answer;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcwse4kc5.php:27\n\
    Stack trace:\n#0 /tmp/tmpcwse4kc5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpcwse4kc5.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    while ($N != 0) {\n        $sum += $N % 2;\n        $N = (int)($N\
    \ / 2);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmag4wazs.php:26\n\
    Stack trace:\n#0 /tmp/tmpmag4wazs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmag4wazs.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = \"\";\n    while ($N > 0) {\n        $remainder = $N % 2;\n      \
    \  $N = intval($N / 2);\n        $result = $remainder . $result;\n    }\n    return\
    \ $result;\n}\n\n$stdin = fopen(\"php://stdin\", \"r\");\nfscanf($stdin, \"%d\\\
    n\", $N);\n\necho solve($N);\n\nfclose($stdin);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvofcskfv.php:33\n\
    Stack trace:\n#0 /tmp/tmpvofcskfv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvofcskfv.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = 0;\n    $sum = 0;\n    while ($N != 0) {\n        $result = $N % 2;\n\
    \        $sum += $result;\n        $N = intval($N / 2);\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbivlhhfp.php:27\n\
    Stack trace:\n#0 /tmp/tmpbivlhhfp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbivlhhfp.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $arr = str_split($binary);\n    return array_sum($arr);\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vidwfp4.php:22\n\
    Stack trace:\n#0 /tmp/tmp2vidwfp4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2vidwfp4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $len = strlen($bin);\n    $sum = 0;\n    for ($i = 0;\
    \ $i < $len; $i++) {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xwqshly.php:26\n\
    Stack trace:\n#0 /tmp/tmp0xwqshly.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0xwqshly.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $result = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $result += $binary[$i];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2t2y5fx.php:25\n\
    Stack trace:\n#0 /tmp/tmpf2t2y5fx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf2t2y5fx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $onesPlace = $N % 2;\n    $N = floor($N / 2);\n    $twosPlace = $N % 2;\n  \
    \  $N = floor($N / 2);\n    $foursPlace = $N % 2;\n    $N = floor($N / 2);\n \
    \   $eightsPlace = $N % 2;\n    $N = floor($N / 2);\n    $sixteensPlace = $N %\
    \ 2;\n    $N = floor($N / 2);\n    $thirtytwosPlace = $N % 2;\n    $N = floor($N\
    \ / 2);\n    $sixtyfoursPlace = $N % 2;\n    $N = floor($N / 2);\n    $onehundredtwentyeightsPlace\
    \ = $N % 2;\n    $N = floor($N / 2);\n    $twohundredfiftysixPlace = $N % 2;\n\
    \    $N = floor($N / 2);\n    $fivehundredtwelvePlace = $N % 2;\n    $N = floor($N\
    \ / 2);\n    $onethousandtwentyfourPlace = $N % 2;\n    $N = floor($N / 2);\n\
    \    return (string)$onethousandtwentyfourPlace . $fivehundredtwelvePlace . $twohundredfiftysixPlace\
    \ . $onehundredtwentyeightsPlace . $sixtyfoursPlace . $thirtytwosPlace . $sixteensPlace\
    \ . $eightsPlace . $foursPlace . $twosPlace . $onesPlace;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6pl1va31.php:42\n\
    Stack trace:\n#0 /tmp/tmp6pl1va31.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp6pl1va31.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $a = (string) decbin($N);\n    $len = strlen($a);\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        $sum += $a[$i];\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2w7svtsc.php:27\n\
    Stack trace:\n#0 /tmp/tmp2w7svtsc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2w7svtsc.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = decbin($N);\n    echo $result.\"\\n\";\n    $length = strlen($result);\n\
    \    $sum = 0;\n    for ($i = 0; $i < $length; $i++) {\n        $sum += $result[$i];\n\
    \    }\n    return $sum;\n}\n\necho solve(1000).\"\\n\";\necho solve(150).\"\\\
    n\";\necho solve(147).\"\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1111101000\n6\n10010110\n4\n10010011\n4\n1111101000\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpx31_i_ic.php:31\nStack trace:\n#0 /tmp/tmpx31_i_ic.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx31_i_ic.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $str = str_split($binary);\n    $result = array_sum($str);\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv5ujkpd.php:23\n\
    Stack trace:\n#0 /tmp/tmpuv5ujkpd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuv5ujkpd.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $binary\
    \ = decbin($N);\n  $binary = str_split($binary);\n  $binary = array_sum($binary);\n\
    \  return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnafrxdks.php:23\n\
    Stack trace:\n#0 /tmp/tmpnafrxdks.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnafrxdks.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $str = decbin($N);\n    $arr = str_split($str);\n    $sum = 0;\n    foreach($arr\
    \ as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\necho solve(147)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdagpc46.php:27\n\
    Stack trace:\n#0 /tmp/tmpwdagpc46.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwdagpc46.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // Convert the integer to binary\n    $binary = decbin($N);\n    // Convert\
    \ the integer to a string\n    $binary = (string)$binary;\n    // Initialize the\
    \ sum variable\n    $sum = 0;\n    // Loop through the binary string\n    for\
    \ ($i = 0; $i < strlen($binary); $i++) {\n        // Add the current integer to\
    \ the sum\n        $sum += $binary[$i];\n    }\n    // Return the sum as a string\n\
    \    return (string)$sum;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiqbkdmu1.php:33\n\
    Stack trace:\n#0 /tmp/tmpiqbkdmu1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpiqbkdmu1.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $n = decbin($N);\n    $arr = str_split($n);\n    $sum = 0;\n    foreach($arr\
    \ as $index => $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6l7wiqpq.php:26\n\
    Stack trace:\n#0 /tmp/tmp6l7wiqpq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6l7wiqpq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $digits = str_split($binary);\n    $result = array_sum($digits);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2z7hegy.php:24\n\
    Stack trace:\n#0 /tmp/tmpm2z7hegy.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpm2z7hegy.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  //\
    \ your code here\n  return decbin($N);\n}\necho solve(150);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "10010110\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiysks3gd.php:22\n\
    Stack trace:\n#0 /tmp/tmpiysks3gd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiysks3gd.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $n = strlen($bin);\n    $val = 0;\n    for($i = 0; $i\
    \ < $n; $i++){\n        $val += (int)$bin[$i];\n    }\n    return $val;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpief_hrbd.php:27\n\
    Stack trace:\n#0 /tmp/tmpief_hrbd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpief_hrbd.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $value) {\n        $sum += $value;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr2u4wq9l.php:27\n\
    Stack trace:\n#0 /tmp/tmpr2u4wq9l.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr2u4wq9l.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binNum = decbin($N);\n    $binNumArr = str_split($binNum);\n    return array_sum($binNumArr);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahv217lp.php:23\n\
    Stack trace:\n#0 /tmp/tmpahv217lp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpahv217lp.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = '';\n    for ($divider = 0; (int)$N / pow(2, $divider)\
    \ > 0; $divider++) {\n        if ($N % (int)pow(2, $divider) >= pow(2, $divider\
    \ - 1)) {\n            $sum += (int)pow(2, $divider - 1);\n            $binary\
    \ = '1' . $binary;\n        } else {\n            $binary = '0' . $binary;\n \
    \       }\n    }\n    return $sum;\n}\necho solve(1000);\necho \"\\n\";\necho\
    \ solve(150);\necho \"\\n\";\necho solve(147);\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpkj7w6c2f.php:16\n\
    Stack trace:\n#0 /tmp/tmpkj7w6c2f.php(25): solve(1000)\n#1 {main}\n  thrown in\
    \ /tmp/tmpkj7w6c2f.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = '';\n    while ($N > 0) {\n        $binary = ($N % 2) . $binary;\n\
    \        $N = floor($N / 2);\n    }\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += intval($binary[$i]);\n    }\n    return $sum;\n}\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjrf8zt0.php:29\n\
    Stack trace:\n#0 /tmp/tmpbjrf8zt0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbjrf8zt0.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n\t$base\
    \ = 2;\n\t$digs = array(0, 1);\n\tif (base_convert($N, 10, $base) === $N) return\
    \ $N;\n\twhile (true) {\n\t\t$next = pow($base, count($digs));\n\t\tif ($next\
    \ > $N) break;\n\t\t$digs[] = $next;\n\t}\n\t$num = '';\n\tfor ($i = count($digs)\
    \ - 1; $i >= 0; $i--) {\n\t\tif ($N >= $digs[$i]) {\n\t\t\t$N -= $digs[$i];\n\t\
    \t\t$num .= '1';\n\t\t} else {\n\t\t\t$num .= '0';\n\t\t}\n\t}\n\treturn $num;\n\
    }\necho solve(1000);\necho '<br>';\necho solve(150);\necho '<br>';\necho solve(147);\n\
    echo '<br>';\necho solve(10);\necho '<br>';\necho solve(0);\necho '<br>';\necho\
    \ solve(20);\necho '<br>';\necho solve(70);\necho '<br>';\necho solve(99);\necho\
    \ '<br>';\necho solve(1000);\necho '<br>';\necho solve(100);\necho '<br>';\necho\
    \ solve(55);\necho '<br>';\necho solve(13);\necho '<br>';\necho solve(3);\necho\
    \ '<br>';\necho solve(22);\necho '<br>';\necho solve(13);\necho '<br>';\necho\
    \ solve(15);\necho '<br>';\necho solve(9);\necho '<br>';\necho solve(25);\necho\
    \ '<br>';\necho solve(33);\necho '<br>';\necho solve(500);\necho '<br>';\necho\
    \ solve(160);\necho '<br>';\necho solve(54);\necho '<br>';\necho solve(5);\necho\
    \ '<br>';\necho solve(2);\necho '<br>';\necho solve(16);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1111101001<br>10010111<br>10010011<br>1011<br>01<br>10101<br>1000111<br>1100011<br>1111101001<br>1100101<br>110111<br>1111<br>11<br>10111<br>1111<br>1111<br>1011<br>11011<br>100011<br>111110101<br>10100001<br>110111<br>111<br>11<br>10001\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpw8anikv8.php:86\nStack\
    \ trace:\n#0 /tmp/tmpw8anikv8.php(93): test()\n#1 {main}\n  thrown in /tmp/tmpw8anikv8.php\
    \ on line 86\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = decbin($N);\n    $result = str_split($result);\n    $sum = 0;\n  \
    \  foreach ($result as $num) {\n        $sum += $num;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jmwdrti.php:27\n\
    Stack trace:\n#0 /tmp/tmp0jmwdrti.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0jmwdrti.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\necho solve(1000).\"\\n\";\necho\
    \ solve(150).\"\\n\";\necho solve(147).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2s7vcpo7.php:23\n\
    Stack trace:\n#0 /tmp/tmp2s7vcpo7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2s7vcpo7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $N = (string) $N;\n    $result = \"\";\n    while (strlen($N) > 0) {\n     \
    \   $n = $N[0];\n        $sum = 0;\n        while (strlen($N) > 0 && $N[0] ==\
    \ $n) {\n            $sum++;\n            $N = substr($N, 1);\n        }\n   \
    \     $result .= $sum % 2;\n    }\n    return strrev($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cp6f2jx.php:32\n\
    Stack trace:\n#0 /tmp/tmp9cp6f2jx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9cp6f2jx.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $B\
    \ = (string) base_convert($N, 10, 2); // base_convert(number, frombase, tobase)\n\
    \  $L = strlen($B); // Length of $B\n  $S = 0; // Sum of digits\n  for ($i = 0;\
    \ $i < $L; $i++) {\n    $S += $B[$i];\n  }\n  return $S;\n}\n$N = rand(0, 10000);\n\
    echo $N;\necho \"</br>\";\necho solve($N);\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3213</br>6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1sstwyxn.php:30\n\
    Stack trace:\n#0 /tmp/tmp1sstwyxn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1sstwyxn.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $key => $value) {\n        $sum += $value;\n    }\n    return\
    \ $sum;\n}\necho solve(150);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0swwkowy.php:27\n\
    Stack trace:\n#0 /tmp/tmp0swwkowy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0swwkowy.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n\t$bits\
    \ = decbin($N);\n\t$sums = 0;\n\tfor ($i = 0; $i < strlen($bits); $i++) {\n\t\t\
    $sums += (int) $bits[$i];\n\t}\n\treturn $sums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0fnw_ha_.php:26\n\
    Stack trace:\n#0 /tmp/tmp0fnw_ha_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0fnw_ha_.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = decbin($N);\n    $result = str_split($result);\n    $result = array_sum($result);\n\
    \    return $result;\n}\n\n$N = 1000;\nvar_dump(solve($N));\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(6)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp81398x24.php:26\n\
    Stack trace:\n#0 /tmp/tmp81398x24.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp81398x24.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $result\
    \ = '';\n  while ($N > 0) {\n    $result = ($N % 2) . $result;\n    $N = floor($N\
    \ / 2);\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndeu8ewx.php:25\n\
    Stack trace:\n#0 /tmp/tmpndeu8ewx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpndeu8ewx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $s = '';\n    do {\n        $s = $N % 2 . $s;\n        $N = (int)($N / 2);\n\
    \    } while ($N > 0);\n    return $s;\n}\n\n$N = 1000;\necho solve($N);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1111101000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfq1_og86.php:28\n\
    Stack trace:\n#0 /tmp/tmpfq1_og86.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfq1_og86.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  return\
    \ array_sum(str_split(decbin($N)));\n}\n\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpdk6un1.php:21\n\
    Stack trace:\n#0 /tmp/tmpfpdk6un1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfpdk6un1.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\necho solve(147) . \"\\n\";\necho\
    \ solve(150) . \"\\n\";\necho solve(1000) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\n4\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyeqmxk6c.php:23\n\
    Stack trace:\n#0 /tmp/tmpyeqmxk6c.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyeqmxk6c.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum_of_digits = array_sum(str_split($binary));\n\
    \    return $sum_of_digits;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu61371a9.php:22\n\
    Stack trace:\n#0 /tmp/tmpu61371a9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu61371a9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $bin = str_split($bin);\n    $sum = 0;\n    foreach($bin\
    \ as $val) {\n        $sum += $val;\n    }\n    return (string)$sum;\n}\n$N =\
    \ 1000;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5swk_vc.php:28\n\
    Stack trace:\n#0 /tmp/tmpv5swk_vc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv5swk_vc.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $tempArr = [];\n    while($N != 0) {\n        $tempArr[] = $N % 2;\n       \
    \ $N = intval($N / 2);\n    }\n    return array_sum($tempArr);\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkiwcuz.php:27\n\
    Stack trace:\n#0 /tmp/tmpqhkiwcuz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpqhkiwcuz.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $number = decbin($N);\n    $number = str_split($number);\n    return array_sum($number);\n\
    }\nsolve(1000);\nsolve(150);\nsolve(147);\nsolve(0);\nsolve(1);\nsolve(10000);\n\
    solve(255);\nsolve(2555);\nsolve(1233);\nsolve(2555);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphl0s4gqy.php:32\n\
    Stack trace:\n#0 /tmp/tmphl0s4gqy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphl0s4gqy.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary= decbin($N);\n    $array= str_split($binary);\n    $sum= array_sum($array);\n\
    \    return $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm8eudzfh.php:23\n\
    Stack trace:\n#0 /tmp/tmpm8eudzfh.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpm8eudzfh.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // We need to define an array of binary numbers that can be multiplied by\n\
    \    // 2^n to calculate the decimal values of the binary number.\n    $bin_num\
    \ = [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024];\n    // First we check if N\
    \ is 0 so we can return 0 immediately instead of\n    // going through the calculation.\n\
    \    if ($N == 0) {\n        return 0;\n    }\n    // First we need to convert\
    \ N to binary. The PHP function base_convert() is\n    // used for this purpose.\
    \ Base 10 is the decimal system we use, base 2 is\n    // the binary system.\n\
    \    $dec_num = base_convert($N, 10, 2);\n    // We now loop through the binary\
    \ number to get each digit.\n    $sum = 0;\n    $i = 0;\n    foreach (str_split($dec_num)\
    \ as $digit) {\n        // The sum of digits = the number of 1s in the binary\
    \ number.\n        if ($digit == 1) {\n            $sum += $bin_num[$i];\n   \
    \     }\n        $i++;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4dm8al1.php:42\n\
    Stack trace:\n#0 /tmp/tmpp4dm8al1.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpp4dm8al1.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // convert the number to binary in string\n    $binary = decbin($N);\n    //\
    \ split the binary number into array of individual digits\n    $binary = str_split($binary);\n\
    \    // apply array_sum function to get the sum of digits in binary\n    $sum\
    \ = array_sum($binary);\n    // return the sum in string\n    return $sum;\n}\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp99plmwuv.php:28\n\
    Stack trace:\n#0 /tmp/tmp99plmwuv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp99plmwuv.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bits = array();\n    $i = 0;\n    while ($N > 0) {\n        $bits[$i] = $N\
    \ % 2;\n        $N = floor($N / 2);\n        $i++;\n    }\n    return array_sum($bits);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfoyckkfw.php:28\n\
    Stack trace:\n#0 /tmp/tmpfoyckkfw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfoyckkfw.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // convert to binary\n    $b = decbin($N);\n    $sum = 0;\n    for ($i = 0;\
    \ $i < strlen($b); $i++) {\n        $sum += (int)$b[$i];\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mgb4j7j.php:27\n\
    Stack trace:\n#0 /tmp/tmp1mgb4j7j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1mgb4j7j.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $a\
    \ = (string) base_convert($N, 10, 2);\n  $string = str_split($a);\n  $sum = 0;\n\
    \  for ($i = 0; $i < count($string); $i++) {\n      $sum += $string[$i];\n  }\n\
    \  return $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_addf7ux.php:26\n\
    Stack trace:\n#0 /tmp/tmp_addf7ux.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_addf7ux.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $answer = array_sum(str_split($binary));\n    return\
    \ $answer;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbip3a4_7.php:22\n\
    Stack trace:\n#0 /tmp/tmpbip3a4_7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbip3a4_7.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = \"\";\n    if($N == 0) {\n        return 0;\n    }\n    else {\n \
    \       $bitwise = intval($N % 2);\n        $result = solve(intval($N / 2)) .\
    \ $bitwise;\n    }\n    return $result;\n}\n\necho solve(150);\necho solve(147);\n\
    echo solve(1000);\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "01001011001001001101111101000\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7z3fj5q0.php:33\nStack trace:\n#0 /tmp/tmp7z3fj5q0.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7z3fj5q0.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += intval($binary[$i]);\n    }\n    return $sum;\n}\n\
    echo solve(1000) . \"\\n\";\necho solve(150) . \"\\n\";\necho solve(147) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3y_j3kb.php:28\n\
    Stack trace:\n#0 /tmp/tmpw3y_j3kb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw3y_j3kb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\nprint_r(solve(150));\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0tt13ee.php:22\n\
    Stack trace:\n#0 /tmp/tmpl0tt13ee.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpl0tt13ee.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzzv80eo.php:21\n\
    Stack trace:\n#0 /tmp/tmppzzv80eo.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppzzv80eo.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    for ($i = 0; $i < strlen($N); $i++) {\n        $sum += $N[$i];\n\
    \    }\n    $bin = base_convert($sum, 10, 2);\n    echo $bin;\n}\nsolve('1000');\n\
    solve('150');\nsolve('147');\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "111011000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsg5apxh.php:28\n\
    Stack trace:\n#0 /tmp/tmpvsg5apxh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvsg5apxh.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // Write your code here\n    // Convert to binary\n    $binary = decbin($N);\n\
    \    // Go through each digit and add\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\n$N = 1000;\n\
    print solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz89r1xv.php:31\n\
    Stack trace:\n#0 /tmp/tmpdz89r1xv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdz89r1xv.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n\t$arr\
    \ = [];\n\t$i = 0;\n\twhile ($N > 0) {\n\t\t$arr[$i] = $N % 2;\n\t\t$N = (int)\
    \ ($N / 2);\n\t\t$i++;\n\t}\n\t$sum = 0;\n\tforeach ($arr as $key => $value) {\n\
    \t\t$sum += $value;\n\t}\n\treturn $sum;\n}\necho solve(150);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7l2yp6v.php:32\n\
    Stack trace:\n#0 /tmp/tmpn7l2yp6v.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn7l2yp6v.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5dsunax.php:20\n\
    Stack trace:\n#0 /tmp/tmps5dsunax.php(27): test()\n#1 {main}\n  thrown in /tmp/tmps5dsunax.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7fth6b3x.php:25\n\
    Stack trace:\n#0 /tmp/tmp7fth6b3x.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7fth6b3x.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $num_array = array();\n    $sum = 0;\n    while ($N > 0) {\n        $rem = $N\
    \ % 2;\n        array_push($num_array, $rem);\n        $N = $N / 2;\n    }\n \
    \   $num_array = array_reverse($num_array);\n    foreach ($num_array as $num)\
    \ {\n        $sum += $num;\n    }\n    return $sum;\n}\necho solve(147);\necho\
    \ \"<br/>\";\necho solve(1000);\necho \"<br/>\";\necho solve(150);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4<br/>6<br/>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgsjnptn.php:36\n\
    Stack trace:\n#0 /tmp/tmpcgsjnptn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcgsjnptn.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $n = $N;\n    $digits = [];\n    for ($i = 0; $n > 0; $i++) {\n        $digits[$i]\
    \ = $n % 2;\n        $n = floor($n / 2);\n    }\n    $sum = 0;\n    for ($i =\
    \ 0; $i < count($digits); $i++) {\n        $sum += $digits[$i];\n    }\n    return\
    \ $sum;\n}\n\nvar_dump(solve(1000));\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(6)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp710s209w.php:32\n\
    Stack trace:\n#0 /tmp/tmp710s209w.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp710s209w.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $revs = strrev(decbin($N));\n    $sum = 0;\n    for ($i = 0; $i < strlen($revs);\
    \ $i++) {\n        $sum += $revs[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8cnvmfao.php:26\n\
    Stack trace:\n#0 /tmp/tmp8cnvmfao.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8cnvmfao.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sums = 0;\n    $bin = decbin($N);\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sums += (int)$bin[$i];\n    }\n    return $sums;\n}\n\n$fptr = fopen(getenv(\"\
    OUTPUT_PATH\"), \"w\");\n\n$stdin = fopen(\"php://stdin\", \"r\");\n\nfscanf($stdin,\
    \ \"%d\\n\", $N);\n\n$result = solve($N);\n\nfwrite($fptr, $result . \"\\n\");\n\
    \nfclose($stdin);\nfclose($fptr);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: fopen(): Filename cannot be empty in /tmp/tmpaf5yaul_.php on\
    \ line 21\n\nWarning: fwrite() expects parameter 1 to be resource, bool given\
    \ in /tmp/tmpaf5yaul_.php on line 29\n\nWarning: fclose() expects parameter 1\
    \ to be resource, bool given in /tmp/tmpaf5yaul_.php on line 32\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpaf5yaul_.php:38\nStack trace:\n\
    #0 /tmp/tmpaf5yaul_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpaf5yaul_.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $arr = [];\n    $sum = 0;\n    while ($N) {\n        array_push($arr,$N%2);\n\
    \        $N = (int)($N/2);\n    }\n    for ($i=0; $i < count($arr); $i++) { \n\
    \        $sum += $arr[$i];\n    }\n    return $sum;\n}\n\nprint_r(solve(1000));\n\
    echo '<br>';\nprint_r(solve(150));\necho '<br>';\nprint_r(solve(147));\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6<br>4<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_wcu6bzf.php:35\n\
    Stack trace:\n#0 /tmp/tmp_wcu6bzf.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_wcu6bzf.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  //\
    \ Write your code here...\n  $bin = strval(decbin($N));\n  // print_r($bin);\n\
    \  $bin_arr = str_split($bin);\n  // print_r($bin_arr);\n  $sum = 0;\n  foreach\
    \ ($bin_arr as $num) {\n    $sum += $num;\n  }\n  return $sum;\n}\n\nprint(solve(1000)\
    \ . \"\\n\");\nprint(solve(150) . \"\\n\");\nprint(solve(147) . \"\\n\");\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\n4\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_63hut13.php:33\n\
    Stack trace:\n#0 /tmp/tmp_63hut13.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_63hut13.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $bin\
    \ = decbin($N);\n  $sum = 0;\n  for ($i = 0; $i < strlen($bin); $i++) {\n    $sum\
    \ += $bin[$i];\n  }\n  return $sum;\n}\n\necho solve(1000) . ' ' . '1' . PHP_EOL;\n\
    echo solve(150) . ' ' . '6' . PHP_EOL;\necho solve(147) . ' ' . '12' . PHP_EOL;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6 1\n4 6\n4 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwr68jfj.php:29\n\
    Stack trace:\n#0 /tmp/tmpbwr68jfj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbwr68jfj.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi43vhcq0.php:21\n\
    Stack trace:\n#0 /tmp/tmpi43vhcq0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpi43vhcq0.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $arr = str_split($bin);\n    return array_sum($arr);\n\
    }\nprint solve(1000);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpera_tpbq.php:23\n\
    Stack trace:\n#0 /tmp/tmpera_tpbq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpera_tpbq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $sum\
    \ = 0;\n  while ($N > 0) {\n    $remainder = $N % 2;\n    $sum += $remainder;\n\
    \    $N = floor($N / 2);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2l5eee3m.php:27\n\
    Stack trace:\n#0 /tmp/tmp2l5eee3m.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2l5eee3m.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $binary\
    \ = decbin($N);\n  $sum = 0;\n  for ($i = 0; $i < strlen($binary); $i++) {\n \
    \   $sum += $binary[$i];\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hfsg53r.php:25\n\
    Stack trace:\n#0 /tmp/tmp8hfsg53r.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8hfsg53r.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $ans = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $ans += (int)$binary[$i];\n    }\n    return $ans;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsx25jjn.php:26\n\
    Stack trace:\n#0 /tmp/tmphsx25jjn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphsx25jjn.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $bin = decbin($N);\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\n\n$N = 1000;\necho\
    \ solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptbd0rcc3.php:28\n\
    Stack trace:\n#0 /tmp/tmptbd0rcc3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptbd0rcc3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // Your code here...\n}\necho (solve(1000) . \"\\n\");\necho (solve(150) . \"\
    \\n\");\necho (solve(147) . \"\\n\");\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvzmfrqil.php:23\n\
    Stack trace:\n#0 /tmp/tmpvzmfrqil.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvzmfrqil.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $bin = decbin($N);\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzncboel8.php:27\n\
    Stack trace:\n#0 /tmp/tmpzncboel8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzncboel8.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = [];\n    while ($N > 0) {\n        array_push($result, $N % 2);\n\
    \        $N = floor($N / 2);\n    }\n    return array_sum($result);\n}\n\necho\
    \ solve(1000) . \"\\n\";\necho solve(150) . \"\\n\";\necho solve(147) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39s642lw.php:29\n\
    Stack trace:\n#0 /tmp/tmp39s642lw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp39s642lw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $bin = decbin($N);\n    $arr = str_split($bin);\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        $sum += $arr[$i];\n    }\n    return\
    \ $sum;\n}\n\necho solve(1000);\necho \"<br>\";\necho solve(150);\necho \"<br>\"\
    ;\necho solve(147);\necho \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6<br>4<br>4<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaabf2g9t.php:33\n\
    Stack trace:\n#0 /tmp/tmpaabf2g9t.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpaabf2g9t.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $binary\
    \ = decbin($N);\n  $binaryArray = str_split($binary);\n  $count = 0;\n  for ($i\
    \ = 0; $i < count($binaryArray); $i++) {\n    $count += $binaryArray[$i];\n  }\n\
    \  return $count;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_3o77z9.php:26\n\
    Stack trace:\n#0 /tmp/tmp5_3o77z9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5_3o77z9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  return\
    \ strlen(decbin($N));\n}\nsolve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfod9y9t3.php:21\n\
    Stack trace:\n#0 /tmp/tmpfod9y9t3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfod9y9t3.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $arr = str_split($bin);\n    return array_sum($arr);\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmj4si2vw.php:22\n\
    Stack trace:\n#0 /tmp/tmpmj4si2vw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmj4si2vw.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    while ($N > 0) {\n        $sum += $N % 2;\n        $N = floor($N\
    \ / 2);\n    }\n    return $sum;\n}\n\necho \"For N = 1000, the sum of digits\
    \ will be 1 the output should be \\\"1\\\".\\n\";\necho solve(1000).\"\\n\";\n\
    echo \"For N = 150, the sum of digits will be 6 the output should be \\\"110\\\
    \".\\n\";\necho solve(150).\"\\n\";\necho \"For N = 147, the sum of digits will\
    \ be 12 the output should be \\\"1100\\\".\\n\";\necho solve(147).\"\\n\";\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "For N = 1000, the sum of digits will be 1 the output should be \"1\".\n\
    6\nFor N = 150, the sum of digits will be 6 the output should be \"110\".\n4\n\
    For N = 147, the sum of digits will be 12 the output should be \"1100\".\n4\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpltmkrjie.php:32\nStack\
    \ trace:\n#0 /tmp/tmpltmkrjie.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpltmkrjie.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $digits = str_split($binary);\n    return array_sum($digits);\n\
    }\nprint_r(solve(1000));\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhvi2qze.php:23\n\
    Stack trace:\n#0 /tmp/tmpxhvi2qze.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxhvi2qze.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = (string) decbin($N);\n    $res = 0;\n    for ($i = 0; $i < strlen($bin);\
    \ $i++) {\n        $res += intval($bin[$i]);\n    }\n    return $res;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuhbb46p6.php:25\n\
    Stack trace:\n#0 /tmp/tmpuhbb46p6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpuhbb46p6.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp770yae9q.php:20\n\
    Stack trace:\n#0 /tmp/tmp770yae9q.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp770yae9q.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $sum\
    \ = 0;\n  $binary_arr = [];\n  while ($N !== 0) {\n    $remainder = $N % 2;\n\
    \    $binary_arr[] = $remainder;\n    $N = floor($N / 2);\n  }\n  $binary_str\
    \ = implode($binary_arr);\n  $binary_str = strrev($binary_str);\n  $sum = array_sum(str_split($binary_str));\n\
    \  return $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 134217736 bytes) in /tmp/tmps6zyrak2.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // Converting the number to binary.\n    $bin = decbin($N);\n    // Converting\
    \ the binary number to string.\n    $str = strval($bin);\n    // Initializing\
    \ result.\n    $result = 0;\n    // Adding each digit of the binary number.\n\
    \    for ($i = 0; $i < strlen($str); $i++) {\n        $result += intval($str[$i]);\n\
    \    }\n    // Returning the result.\n    return $result;\n}\n$N = 150;\necho\
    \ solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bm51p9_.php:33\n\
    Stack trace:\n#0 /tmp/tmp4bm51p9_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4bm51p9_.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // the number N to a binary\n    $binary = decbin($N);\n    // get the length\
    \ of the binary\n    $binaryLength = strlen($binary);\n    // set a variable to\
    \ use to store the value\n    $sum = 0;\n    // loop through the binary\n    for($i\
    \ = 0; $i < $binaryLength; $i++) {\n        // add the number to the sum\n   \
    \     $sum += $binary[$i];\n    }\n    // return the sum\n    return $sum;\n}\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59wjf0zm.php:32\n\
    Stack trace:\n#0 /tmp/tmp59wjf0zm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp59wjf0zm.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $Nbin = decbin($N);\n    return $Nbin;\n}\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1111101000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ywh2zvp.php:22\n\
    Stack trace:\n#0 /tmp/tmp2ywh2zvp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2ywh2zvp.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    $num = str_split($binary);\n    foreach\
    \ ($num as $val) {\n        $sum += $val;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kqe8zq_.php:27\n\
    Stack trace:\n#0 /tmp/tmp9kqe8zq_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9kqe8zq_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $res = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $res += $bin[$i];\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunigr6kn.php:26\n\
    Stack trace:\n#0 /tmp/tmpunigr6kn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpunigr6kn.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return decbin($N);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5he0aeit.php:21\n\
    Stack trace:\n#0 /tmp/tmp5he0aeit.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5he0aeit.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\nprint solve(147);\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmkvdtlv.php:22\n\
    Stack trace:\n#0 /tmp/tmpkmkvdtlv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkmkvdtlv.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $sum\
    \ = 0;\n  $binary = decbin($N);\n  $binaryArray = str_split($binary);\n  foreach\
    \ ($binaryArray as $binaryNumber) {\n    $sum += $binaryNumber;\n  }\n  return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc513xq6.php:26\n\
    Stack trace:\n#0 /tmp/tmpvc513xq6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvc513xq6.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = '';\n    $remainder = '';\n    while ($N > 0) {\n        $remainder\
    \ = $N % 2;\n        $N = ($N - $remainder) / 2;\n        $result = $remainder\
    \ . $result;\n    }\n    echo $result;\n}\nsolve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11111010001111101000\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpxt4vax3j.php:28\nStack trace:\n#0 /tmp/tmpxt4vax3j.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpxt4vax3j.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // $bin_num = \"0\";\n    // $bin_num = decbin($N);\n    // $sum = 0;\n    //\
    \ for ($i = 0; $i < strlen($bin_num); $i++) {\n    //     $sum += $bin_num[$i];\n\
    \    // }\n    // return $sum;\n    return array_sum(str_split(decbin($N)));\n\
    }\n$N = [1000, 150, 147];\nforeach ($N as $value) {\n    echo solve($value) .\
    \ \"\\n\";\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7pmpg59.php:31\n\
    Stack trace:\n#0 /tmp/tmpm7pmpg59.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm7pmpg59.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $n = decbin($N);\n    for ($i = 0; $i < strlen($n); $i++) {\n\
    \        $sum += $n[$i];\n    }\n    return $sum;\n}\n\nprint(solve(1000));\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11a7smww.php:27\n\
    Stack trace:\n#0 /tmp/tmp11a7smww.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp11a7smww.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5eqk3zsn.php:25\n\
    Stack trace:\n#0 /tmp/tmp5eqk3zsn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5eqk3zsn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // write your code in PHP7.0\n    $sum = 0;\n    $binary = decbin($N);\n   \
    \ $arr = str_split($binary);\n    for($i = 0; $i < count($arr); $i++){\n     \
    \   $sum += $arr[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpie6abl9d.php:27\n\
    Stack trace:\n#0 /tmp/tmpie6abl9d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpie6abl9d.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // Your Code Here\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgx1cw0ht.php:20\n\
    Stack trace:\n#0 /tmp/tmpgx1cw0ht.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgx1cw0ht.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $num = decbin($N);\n    $num = str_split($num);\n    $num = array_sum($num);\n\
    \    return $num;\n}\necho solve(1000);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnt2me3fz.php:24\n\
    Stack trace:\n#0 /tmp/tmpnt2me3fz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnt2me3fz.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // Convert the integer number to binary number and remove leading zeros\n  \
    \  $binary_number = decbin($N);\n    $s = trim($binary_number, '0');\n    // Sum\
    \ the binary digits and return the result\n    return array_sum(str_split($s));\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0s4vkgc_.php:25\n\
    Stack trace:\n#0 /tmp/tmp0s4vkgc_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0s4vkgc_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n\t$binary\
    \ = '';\n\t$sum = 0;\n\t$binary = getBinary($N);\n\t$sum = getSum($binary);\n\t\
    return $sum;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function getBinary() in\
    \ /tmp/tmptwchwv_n.php:15\nStack trace:\n#0 /tmp/tmptwchwv_n.php(21): solve(1000)\n\
    #1 /tmp/tmptwchwv_n.php(25): candidate(1000)\n#2 /tmp/tmptwchwv_n.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmptwchwv_n.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = \"\";\n    while ($N != 0) {\n        $result = strval($N % 2) . $result;\n\
    \        $N = floor($N / 2);\n    }\n    $arr = str_split($result);\n    $result\
    \ = array_sum($arr);\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6cy_v0kl.php:27\n\
    Stack trace:\n#0 /tmp/tmp6cy_v0kl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6cy_v0kl.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = decbin($N);\n    $sum = preg_replace('/[^0-9]/', '', $sum);\n    $sum\
    \ = array_sum(str_split($sum));\n    return $sum;\n}\necho solve(147);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1qd99ckr.php:24\n\
    Stack trace:\n#0 /tmp/tmp1qd99ckr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1qd99ckr.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = 0;\n    for ($i = 0; $i < strlen($N); $i++) {\n   \
    \     if ($N[$i] == 1) {\n            $sum++;\n        }\n    }\n    if ($sum\
    \ == 1) {\n        $binary = 1;\n    } else {\n        $binary = decbin($sum);\n\
    \    }\n    return $binary;\n}\n$N = '1000';\necho solve($N);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9bhcldg8.php:34\n\
    Stack trace:\n#0 /tmp/tmp9bhcldg8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9bhcldg8.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $arr = str_split(decbin($N));\n    $result = 0;\n    foreach ($arr as $key =>\
    \ $value) {\n        $result += $value;\n    }\n    return (string)$result;\n\
    }\n\nprint_r(solve(1000));\nprint_r(solve(150));\nprint_r(solve(147));\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfl66cd8.php:29\n\
    Stack trace:\n#0 /tmp/tmptfl66cd8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptfl66cd8.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $digits = [];\n    $rem = 0;\n    while ($N != 0) {\n        $rem = $N % 2;\n\
    \        $digits[] = $rem;\n        $N = (int)($N / 2);\n    }\n    return array_sum($digits);\n\
    }\n\n$answer = solve(147);\nprint_r($answer);\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqo65kc6e.php:30\n\
    Stack trace:\n#0 /tmp/tmpqo65kc6e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqo65kc6e.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // convert N to binary \n    $binary = decbin($N);\n    // echo $binary;\n \
    \   // convert the binary number to an array\n    $binary = str_split($binary);\n\
    \    // echo '<pre>', print_r($binary), '</pre>';\n    // iterate through the\
    \ array and add each element up\n    $total = 0;\n    foreach($binary as $number)\
    \ {\n        $total += $number;\n    }\n    return $total;\n}\n\necho solve(1000);\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbt_124kc.php:34\n\
    Stack trace:\n#0 /tmp/tmpbt_124kc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbt_124kc.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $a = decbin($N);\n    $b = str_split($a);\n    $c = 0;\n    foreach ($b as $key\
    \ => $value) {\n        $c += $value;\n    }\n    return $c;\n}\n$N = 1000;\n\
    $result = solve($N);\nprint_r($result);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2l68gvdh.php:29\n\
    Stack trace:\n#0 /tmp/tmp2l68gvdh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2l68gvdh.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += intval($binary[$i]);\n    }\n    return strval($sum);\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_ar6ox_.php:25\n\
    Stack trace:\n#0 /tmp/tmpn_ar6ox_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn_ar6ox_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n\treturn\
    \ array_sum(str_split(decbin($N)));\n}\necho \"N = 1000, Answer = \" . solve(1000)\
    \ . \"\\n\";\necho \"N = 150, Answer = \" . solve(150) . \"\\n\";\necho \"N =\
    \ 147, Answer = \" . solve(147) . \"\\n\";\necho \"N = 0, Answer = \" . solve(0)\
    \ . \"\\n\";\necho \"N = 1000, Answer = \" . solve(1000) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "N = 1000, Answer = 6\nN = 150, Answer = 4\nN = 147, Answer = 4\nN = 0,\
    \ Answer = 0\nN = 1000, Answer = 6\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpho9f158n.php:25\nStack trace:\n#0 /tmp/tmpho9f158n.php(32): test()\n\
    #1 {main}\n  thrown in /tmp/tmpho9f158n.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n\t//\
    \ Write your code here\n\t// ...\n\t$new_decimal = $N;\n\t$binary = \"\";\n\t\
    while ($new_decimal > 0) {\n\t\t$remainder = $new_decimal % 2;\n\t\t$new_decimal\
    \ = floor($new_decimal / 2);\n\t\t$binary = $remainder . $binary;\n\t}\n\treturn\
    \ $binary;\n}\necho solve(1000);\necho \"<br/>\";\necho solve(150);\necho \"<br/>\"\
    ;\necho solve(147);\necho \"<br/>\";\necho solve(5);\necho \"<br/>\";\necho solve(88);\n\
    echo \"<br/>\";\necho solve(99);\necho \"<br/>\";\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1111101000<br/>10010110<br/>10010011<br/>101<br/>1011000<br/>1100011<br/>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp_h6634se.php:41\nStack\
    \ trace:\n#0 /tmp/tmp_h6634se.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_h6634se.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // Convert N to binary\n    $binary_number = decbin($N);\n    // Split the string\
    \ into an array\n    $binary_array = str_split($binary_number);\n    // Return\
    \ the sum of the array\n    return array_sum($binary_array);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuntnukt5.php:26\n\
    Stack trace:\n#0 /tmp/tmpuntnukt5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuntnukt5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n$N = 2;\necho solve($N);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0j877b93.php:22\n\
    Stack trace:\n#0 /tmp/tmp0j877b93.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0j877b93.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return decbin($N);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpybtxwu_y.php:21\n\
    Stack trace:\n#0 /tmp/tmpybtxwu_y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpybtxwu_y.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary_num = decbin($N);\n    $binary_num = str_split($binary_num);\n    $num\
    \ = 0;\n    foreach($binary_num as $bin){\n        $num += $bin;\n    }\n    return\
    \ $num;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytngaqzl.php:26\n\
    Stack trace:\n#0 /tmp/tmpytngaqzl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpytngaqzl.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binaryNum = decbin($N);\n    $sum = 0;\n    $arr = str_split($binaryNum);\n\
    \    for ($i = 0; $i < count($arr); $i++) {\n        $sum += intval($arr[$i]);\n\
    \    }\n    return $sum;\n}\necho solve(1000);\necho \"<br>\";\necho solve(150);\n\
    echo \"<br>\";\necho solve(147);\necho \"<br>\";\necho solve(2);\necho \"<br>\"\
    ;\necho solve(157);\necho \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6<br>4<br>4<br>1<br>5<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp23qfej0f.php:36\nStack trace:\n#0 /tmp/tmp23qfej0f.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmp23qfej0f.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary_array = str_split($binary);\n    $sum = 0;\n\
    \    foreach ($binary_array as $element) {\n        $sum += $element;\n    }\n\
    \    return $sum;\n}\nprint_r(solve(1000));\nprint_r(solve(150));\nprint_r(solve(147));\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_kcyy31.php:29\n\
    Stack trace:\n#0 /tmp/tmp6_kcyy31.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6_kcyy31.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1o1dl5o9.php:20\n\
    Stack trace:\n#0 /tmp/tmp1o1dl5o9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1o1dl5o9.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2cl2ai8m.php:22\n\
    Stack trace:\n#0 /tmp/tmp2cl2ai8m.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2cl2ai8m.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $result\
    \ = 0;\n  $binary = decbin($N);\n  for ($i = 0; $i < strlen($binary); $i++) {\n\
    \    $result += $binary[$i];\n  }\n  return $result;\n}\necho solve(1000);\necho\
    \ solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3c2ofaz.php:28\n\
    Stack trace:\n#0 /tmp/tmpu3c2ofaz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu3c2ofaz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binarySum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $binarySum += $binary[$i];\n    }\n    return $binarySum;\n\
    }\n\necho solve(1000);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0nw7urw.php:27\n\
    Stack trace:\n#0 /tmp/tmpl0nw7urw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl0nw7urw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  $num\
    \ = (string) decbin($N);\n  $sum = 0;\n  for ($i = 0; $i < strlen($num); $i++)\
    \ {\n    $sum += $num[$i];\n  }\n  return $sum;\n}\n\necho solve(13);\necho \"\
    \\n\";\necho solve(1000);\necho \"\\n\";\necho solve(121);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "3\n6\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp42y95sem.php:32\n\
    Stack trace:\n#0 /tmp/tmp42y95sem.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp42y95sem.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // Convert decimal to binary, then convert to a string:\n    $binaryString =\
    \ decbin($N);\n    // Create an array of characters and loop through each character:\n\
    \    $binaryStringCharacters = str_split($binaryString);\n    $binaryStringTotal\
    \ = 0;\n    foreach ($binaryStringCharacters as $character) {\n        // Convert\
    \ the character to an integer, then add it to the total:\n        $characterAsInteger\
    \ = intval($character);\n        $binaryStringTotal += $characterAsInteger;\n\
    \    }\n    // Return the total:\n    return $binaryStringTotal;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzz2d3c0p.php:31\n\
    Stack trace:\n#0 /tmp/tmpzz2d3c0p.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzz2d3c0p.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $n = strlen($bin);\n    $n = $n - 1;\n    $sum = 0;\n\
    \    for ($i = 0; $i <= $n; $i++) {\n        $sum += $bin[$i];\n    }\n    return\
    \ $sum;\n}\necho solve(150);\necho \"\\n\";\necho solve(147);\necho \"\\n\";\n\
    echo solve(1000);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\n4\n6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjnug66n3.php:32\n\
    Stack trace:\n#0 /tmp/tmpjnug66n3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjnug66n3.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $n = decbin($N);\n    return array_sum(str_split($n));\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwe72j2ph.php:23\n\
    Stack trace:\n#0 /tmp/tmpwe72j2ph.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwe72j2ph.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $res = decbin($N);\n    return array_sum(str_split($res));\n}\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11pse26w.php:22\n\
    Stack trace:\n#0 /tmp/tmp11pse26w.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp11pse26w.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  return\
    \ decbin($N);\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2gdjj_la.php:20\n\
    Stack trace:\n#0 /tmp/tmp2gdjj_la.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2gdjj_la.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $N = decbin($N);\n    $total = 0;\n    for ($i = 0; $i < strlen($N); $i++) {\n\
    \        $total += $N[$i];\n    }\n    return $total;\n}\n\necho solve(147);\n\
    echo PHP_EOL;\necho solve(150);\necho PHP_EOL;\necho solve(1000);\necho PHP_EOL;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "4\n4\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp269eeyn6.php:32\n\
    Stack trace:\n#0 /tmp/tmp269eeyn6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp269eeyn6.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $temp = base_convert($N, 10, 2);\n    $answer = str_split($temp);\n    echo\
    \ array_sum($answer);\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpq54dwb.php:22\n\
    Stack trace:\n#0 /tmp/tmphpq54dwb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphpq54dwb.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    while ($N > 0) {\n        $sum += $N % 2;\n        $N = floor($N\
    \ / 2);\n    }\n    return (string)$sum;\n}\nprint(solve(147));\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpomme2ggp.php:26\n\
    Stack trace:\n#0 /tmp/tmpomme2ggp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpomme2ggp.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n$N = 1000;\n$res = solve($N);\n\
    print($res);\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbuinzd4.php:23\n\
    Stack trace:\n#0 /tmp/tmpxbuinzd4.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxbuinzd4.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\n$N = 1000;\necho solve($N);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhya52xq.php:23\n\
    Stack trace:\n#0 /tmp/tmphhya52xq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphhya52xq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum_digits = 0;\n    $digits = decbin($N);\n    for ($i = 0; $i < strlen($digits);\
    \ $i++) {\n        $sum_digits += intval($digits[$i]);\n    }\n    return $sum_digits;\n\
    }\nprint_r(solve(1000) . \"\\n\");\nprint_r(solve(150) . \"\\n\");\nprint_r(solve(147)\
    \ . \"\\n\");\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vvt4ux0.php:28\n\
    Stack trace:\n#0 /tmp/tmp1vvt4ux0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1vvt4ux0.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // convert to binary\n    $binary = decbin($N);\n    $sum = 0;\n    // sum the\
    \ digits\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum += $binary[$i];\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7brerlfi.php:28\n\
    Stack trace:\n#0 /tmp/tmp7brerlfi.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7brerlfi.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = base_convert($N, 10, 2);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(10);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3j4_pls.php:26\n\
    Stack trace:\n#0 /tmp/tmpy3j4_pls.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpy3j4_pls.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = decbin($N);\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n$N = 1000;\n\
    echo \"N = $N\".PHP_EOL;\necho \"Output: \".solve($N).PHP_EOL;\n$N = 150;\necho\
    \ \"N = $N\".PHP_EOL;\necho \"Output: \".solve($N).PHP_EOL;\n$N = 147;\necho \"\
    N = $N\".PHP_EOL;\necho \"Output: \".solve($N).PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "N = 1000\nOutput: 6\nN = 150\nOutput: 4\nN = 147\nOutput: 4\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpw2xmxrfy.php:34\nStack trace:\n\
    #0 /tmp/tmpw2xmxrfy.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw2xmxrfy.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    for ($i = 0; $i < $N; $i++) {\n        $n = $i;\n        while\
    \ ($n > 0) {\n            $sum += $n % 2;\n            $n = (int)($n / 2);\n \
    \       }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcvww2bj.php:28\n\
    Stack trace:\n#0 /tmp/tmpfcvww2bj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfcvww2bj.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8z1pzsp.php:26\n\
    Stack trace:\n#0 /tmp/tmpk8z1pzsp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk8z1pzsp.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = base_convert($N, 10, 2);\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000).\"\
    \\n\";\necho solve(150).\"\\n\";\necho solve(147).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvczy5eik.php:29\n\
    Stack trace:\n#0 /tmp/tmpvczy5eik.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvczy5eik.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    echo $binary . PHP_EOL;\n    $sum = array_sum(str_split($binary));\n\
    \    echo $sum . PHP_EOL;\n}\n\nsolve(1000);\nsolve(150);\nsolve(147);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1111101000\n6\n10010110\n4\n10010011\n4\n1111101000\n6\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpimzgbzat.php:27\nStack trace:\n\
    #0 /tmp/tmpimzgbzat.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpimzgbzat.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7m6mth9.php:25\n\
    Stack trace:\n#0 /tmp/tmpc7m6mth9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpc7m6mth9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $result = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $result += (int) $bin[$i];\n    }\n    return $result;\n}\n\necho\
    \ solve(147);\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ph4qk66.php:27\n\
    Stack trace:\n#0 /tmp/tmp2ph4qk66.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2ph4qk66.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lpsdrhe.php:21\n\
    Stack trace:\n#0 /tmp/tmp8lpsdrhe.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp8lpsdrhe.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = 0;\n    for ($i = 1; $i <= $N; $i++) {\n        $result += (decbin($i));\n\
    \    }\n    return $result;\n}\necho solve(1000);\necho solve(150);\necho solve(147);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "543333412500301190325271160014\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj0aft1ik.php:27\nStack trace:\n#0 /tmp/tmpj0aft1ik.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj0aft1ik.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ return array_sum(str_split(decbin($N)));\n}\n\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgl_m1sp.php:22\n\
    Stack trace:\n#0 /tmp/tmpjgl_m1sp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjgl_m1sp.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n  //..\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdw95abc.php:20\n\
    Stack trace:\n#0 /tmp/tmpqdw95abc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqdw95abc.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary_number = decbin($N);\n    $binary_array = str_split($binary_number);\n\
    \    return array_sum($binary_array);\n}\n\necho solve(1000);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxp8r9qb.php:24\n\
    Stack trace:\n#0 /tmp/tmpsxp8r9qb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsxp8r9qb.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception

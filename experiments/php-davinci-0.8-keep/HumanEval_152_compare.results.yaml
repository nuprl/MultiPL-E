name: HumanEval_152_compare
language: php
results:
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = ($game[$i] == $guess[$i]) ? 0 : abs($game[$i] - $guess[$i]);\n\
    \    }\n    return $result;\n}\necho '<pre>';\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n\
    \    [4] => 3\n    [5] => 3\n)\n</pre><pre>Array\n(\n    [0] => 4\n    [1] =>\
    \ 4\n    [2] => 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $arr = [];\n    for ($i = 0; $i < count($game); $i++) {\n   \
    \     if ($game[$i] === $guess[$i]) {\n            $arr[] = 0;\n        } else\
    \ {\n            $arr[] = abs($game[$i] - $guess[$i]);\n        }\n    }\n   \
    \ return $arr;\n}\necho \"<pre>\";\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\
    \ // [0,0,0,0,3,3]\necho \"</pre>\";\necho \"<pre>\";\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\
    \ // [4,4,1,0,0,6]\necho \"</pre>\";\necho \"<pre>\";\nprint_r(compare([3,3,3,3,3,3],[3,3,3,3,3,3]));\
    \ // [0,0,0,0,0,0]\necho \"</pre>\";\necho \"<pre>\";\nprint_r(compare([1,2,3,4,5,6],[6,5,4,3,2,1]));\
    \ // [5,3,1,1,3,5]\necho \"</pre>\";\necho \"<pre>\";\nprint_r(compare([0,4,4,4,4,4],[4,4,4,4,4,4]));\
    \ // [4,0,0,0,0,0]\necho \"</pre>\";\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n\
    \    [4] => 3\n    [5] => 3\n)\n</pre><pre>Array\n(\n    [0] => 4\n    [1] =>\
    \ 4\n    [2] => 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n</pre><pre>Array\n\
    (\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4] => 0\n    [5]\
    \ => 0\n)\n</pre><pre>Array\n(\n    [0] => 5\n    [1] => 3\n    [2] => 1\n   \
    \ [3] => 1\n    [4] => 3\n    [5] => 5\n)\n</pre><pre>Array\n(\n    [0] => 4\n\
    \    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4] => 0\n    [5] => 0\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  return array_map(function($x, $y) {\n  \treturn abs($x - $y);\n\
    \  }, $game, $guess);\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\treturn array_map(function($game, $guess) {\n\t\treturn ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $guess) * ($game - $guess) * ($game - $guess) * ($game -\
    \ $guess) * ($game - $\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_8wj1ve7.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $output = [];\n  for ($i=0; $i < count($game); $i++) { \n    if\
    \ ($game[$i] == $guess[$i]) {\n      $output[] = 0;\n    } else {\n      $output[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $output;\n}\n\n$game1 =\
    \ [1,2,3,4,5,1];\n$guess1 = [1,2,3,4,2,-2];\n$output1 = compare($game1, $guess1);\n\
    print_r($output1);\necho \"\\n\";\n\n$game2 = [0,5,0,0,0,4];\n$guess2 = [4,1,1,0,0,-2];\n\
    $output2 = compare($game2, $guess2);\nprint_r($output2);\necho \"\\n\";\n\n$game3\
    \ = [2,3,3,3,3,3];\n$guess3 = [3,3,3,3,3,3];\n$output3 = compare($game3, $guess3);\n\
    print_r($output3);\necho \"\\n\";\n\n$game4 = [2,0,0,0,0,0];\n$guess4 = [0,1,1,1,1,1];\n\
    $output4 = compare($game4, $guess4);\nprint_r($output4);\necho \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\n\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n\nArray\n(\n    [0] => 1\n    [1]\
    \ => 0\n    [2] => 0\n    [3] => 0\n    [4] => 0\n    [5] => 0\n)\n\nArray\n(\n\
    \    [0] => 2\n    [1] => 1\n    [2] => 1\n    [3] => 1\n    [4] => 1\n    [5]\
    \ => 1\n)\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $values = array();\n  foreach ($game as $key => $value) {\n   \
    \ $values[] = abs($value - $guess[$key]);\n  }\n  return $values;\n}\n\nvar_dump(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    var_dump(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(0)\n  [2]=>\n  int(0)\n \
    \ [3]=>\n  int(0)\n  [4]=>\n  int(3)\n  [5]=>\n  int(3)\n}\narray(6) {\n  [0]=>\n\
    \  int(4)\n  [1]=>\n  int(4)\n  [2]=>\n  int(1)\n  [3]=>\n  int(0)\n  [4]=>\n\
    \  int(0)\n  [5]=>\n  int(6)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $res = [];\n    for ($i = 0; $i < count($game); $i++) {\n   \
    \     $res[] = abs($game[$i] - $guess[$i]);\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    // Your code here.\n}\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqvty2k4g.php:20\n\
    Stack trace:\n#0 /tmp/tmpqvty2k4g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqvty2k4g.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  foreach($game as $key => $value) {\n    if($value\
    \ === $guess[$key]) {\n      $result[] = 0;\n    } else {\n      $result[] = abs($value\
    \ - $guess[$key]);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    return array_map(function($a, $b) {\n        return $a === $b\
    \ ? 0 : abs($a - $b);\n    }, $game, $guess);\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\t$answer = [];\n\tfor ($i=0; $i < count($game); $i++) { \n\t\tif\
    \ ($game[$i] > $guess[$i]) {\n\t\t\t$answer[] = $game[$i] - $guess[$i];\n\t\t\
    }\n\t\telse if ($game[$i] < $guess[$i]) {\n\t\t\t$answer[] = $guess[$i] - $game[$i];\n\
    \t\t}\n\t\telse{\n\t\t\t$answer[] = 0;\n\t\t}\n\t}\n\treturn $answer;\n}\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  \n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptc0q1gii.php:21\n\
    Stack trace:\n#0 /tmp/tmptc0q1gii.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptc0q1gii.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    $diff\
    \ = abs($game[$i] - $guess[$i]);\n    array_push($result, $diff);\n  }\n  return\
    \ $result;\n}\necho compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) . \"<br>\";\necho compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ . \"<br>\";\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: Array<br>Array<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $retval = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] == $guess[$i]) {\n      $retval[] = 0;\n    } else {\n      $retval[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $retval;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  // your code\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpig4165y_.php:20\n\
    Stack trace:\n#0 /tmp/tmpig4165y_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpig4165y_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $results = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] == $guess[$i]) {\n            $results[] = 0;\n       \
    \ } else {\n            $results[] = abs($game[$i] - $guess[$i]);\n        }\n\
    \    }\n    return $results;\n}\n\nvar_dump(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    var_dump(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(0)\n  [2]=>\n  int(0)\n \
    \ [3]=>\n  int(0)\n  [4]=>\n  int(3)\n  [5]=>\n  int(3)\n}\narray(6) {\n  [0]=>\n\
    \  int(4)\n  [1]=>\n  int(4)\n  [2]=>\n  int(1)\n  [3]=>\n  int(0)\n  [4]=>\n\
    \  int(0)\n  [5]=>\n  int(6)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $difference = [];\n  for ($i = 0; $i < count($game); $i++) {\n\
    \    if ($game[$i] == $guess[$i]) {\n      $difference[] = 0;\n    } else {\n\
    \      $difference[] = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $difference;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $game_count = count($game);\n  $guess_count = count($guess);\n\
    \  $difference = [];\n  for ($i = 0; $i < $game_count; $i++) {\n    if ($game[$i]\
    \ > $guess[$i]) {\n      $difference[] = $game[$i] - $guess[$i];\n    } else {\n\
    \      $difference[] = $guess[$i] - $game[$i];\n    }\n  }\n  return $difference;\n\
    }\n\n$game1 = [1,2,3,4,5,1];\n$guess1 = [1,2,3,4,2,-2];\n$game2 = [0,5,0,0,0,4];\n\
    $guess2 = [4,1,1,0,0,-2];\n\nvar_dump(compare($game1, $guess1));\nvar_dump(compare($game2,\
    \ $guess2));\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(0)\n  [2]=>\n  int(0)\n \
    \ [3]=>\n  int(0)\n  [4]=>\n  int(3)\n  [5]=>\n  int(3)\n}\narray(6) {\n  [0]=>\n\
    \  int(4)\n  [1]=>\n  int(4)\n  [2]=>\n  int(1)\n  [3]=>\n  int(0)\n  [4]=>\n\
    \  int(0)\n  [5]=>\n  int(6)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $ans = [];\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i]\
    \ === $guess[$i]) {\n      $ans[] = 0;\n    } else {\n      $ans[] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n  }\n  return $ans;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n\
    }\n$game = [1,2,3,4,5,1];\n$guess = [1,2,3,4,2,-2];\nprint_r(compare($game, $guess));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $results = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] > $guess[$i]) {\n            $results[] = $game[$i] - $guess[$i];\n\
    \        } else if ($game[$i] < $guess[$i]) {\n            $results[] = $guess[$i]\
    \ - $game[$i];\n        } else {\n            $results[] = 0;\n        }\n   \
    \ }\n    return $results;\n}\n\necho \"compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) ->\
    \ \";\nvar_dump(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\necho \"compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> \";\nvar_dump(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\necho \"compare([0,0,0,1,1,1],[0,1,1,0,0,0])\
    \ -> \";\nvar_dump(compare([0,0,0,1,1,1],[0,1,1,0,0,0]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> array(6) {\n  [0]=>\n  int(0)\n\
    \  [1]=>\n  int(0)\n  [2]=>\n  int(0)\n  [3]=>\n  int(0)\n  [4]=>\n  int(3)\n\
    \  [5]=>\n  int(3)\n}\ncompare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> array(6) {\n \
    \ [0]=>\n  int(4)\n  [1]=>\n  int(4)\n  [2]=>\n  int(1)\n  [3]=>\n  int(0)\n \
    \ [4]=>\n  int(0)\n  [5]=>\n  int(6)\n}\ncompare([0,0,0,1,1,1],[0,1,1,0,0,0])\
    \ -> array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(1)\n  [3]=>\n\
    \  int(1)\n  [4]=>\n  int(1)\n  [5]=>\n  int(1)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\t$scores = [];\n\tfor ($i=0; $i < count($game); $i++) { \n\t\t$scores[]\
    \ = $game[$i]-$guess[$i];\n\t}\n\treturn $scores;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] == $guess[$i]) {\n            $result[] = 0;\n        }\
    \ else {\n            $result[] = abs($game[$i] - $guess[$i]);\n        }\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\t$res = [];\n\t$i = 0;\n\tforeach ($game as $value) {\n\t\t$res[]\
    \ = $guess[$i] > $value ? $guess[$i] - $value : $value - $guess[$i];\n\t\t$i++;\n\
    \t}\n\treturn $res;\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    return array_map(function($a, $b) {\n        return abs($a -\
    \ $b);\n    }, $game, $guess);\n}\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $return = [];\n  foreach ($game as $key => $value) {\n    if ($value\
    \ == $guess[$key]) {\n      $return[] = 0;\n    } else {\n      $return[] = abs($value\
    \ - $guess[$key]);\n    }\n  }\n  return $return;\n}\necho \"Compare scores: \"\
    \ . compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) . \"<br />\";\necho \"Compare scores:\
    \ \" . compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) . \"<br />\";\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 'Compare scores: Array<br />Compare scores: Array<br />'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    \n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8spoxo1w.php:20\n\
    Stack trace:\n#0 /tmp/tmp8spoxo1w.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8spoxo1w.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $output = [];\n  foreach ($game as $key => $value) {\n    if ($value\
    \ !== $guess[$key]) {\n      $output[] = abs($value - $guess[$key]);\n    } else\
    \ {\n      $output[] = 0;\n    }\n  }\n  return $output;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    print_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    print_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nprint_r(compare([1,1,1,1,1,1],[-2,-2,-2,-2,-2,-2]));\n\
    print_r(compare([0,0,0,0,0,0],[-2,-2,-2,-2,-2,-2]));\nprint_r(compare([1,1,1,1,1,1],[2,2,2,2,2,2]));\n\
    print_r(compare([0,0,0,0,0,0],[2,2,2,2,2,2]));\nprint_r(compare([1,1,1,1,1,1],[0,0,0,0,0,0]));\n\
    print_r(compare([0,0,0,0,0,0],[0,0,0,0,0,0]));\nprint_r(compare([4,4,4,4,4,4],[4,4,4,4,4,4]));\n\
    print_r(compare([1,1,1,1,1,1],[-2,-2,-2,-2,-2,-2]));\nprint_r(compare([0,0,0,0,0,0],[-2,-2,-2,-2,-2,-2]));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\nArray\n(\n    [0] => 0\n    [1]\
    \ => 0\n    [2] => 0\n    [3] => 0\n    [4] => 3\n    [5] => 3\n)\nArray\n(\n\
    \    [0] => 4\n    [1] => 4\n    [2] => 1\n    [3] => 0\n    [4] => 0\n    [5]\
    \ => 6\n)\nArray\n(\n    [0] => 3\n    [1] => 3\n    [2] => 3\n    [3] => 3\n\
    \    [4] => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 2\n    [1] => 2\n    [2]\
    \ => 2\n    [3] => 2\n    [4] => 2\n    [5] => 2\n)\nArray\n(\n    [0] => 1\n\
    \    [1] => 1\n    [2] => 1\n    [3] => 1\n    [4] => 1\n    [5] => 1\n)\nArray\n\
    (\n    [0] => 2\n    [1] => 2\n    [2] => 2\n    [3] => 2\n    [4] => 2\n    [5]\
    \ => 2\n)\nArray\n(\n    [0] => 1\n    [1] => 1\n    [2] => 1\n    [3] => 1\n\
    \    [4] => 1\n    [5] => 1\n)\nArray\n(\n    [0] => 0\n    [1] => 0\n    [2]\
    \ => 0\n    [3] => 0\n    [4] => 0\n    [5] => 0\n)\nArray\n(\n    [0] => 0\n\
    \    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4] => 0\n    [5] => 0\n)\nArray\n\
    (\n    [0] => 3\n    [1] => 3\n    [2] => 3\n    [3] => 3\n    [4] => 3\n    [5]\
    \ => 3\n)\nArray\n(\n    [0] => 2\n    [1] => 2\n    [2] => 2\n    [3] => 2\n\
    \    [4] => 2\n    [5] => 2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  // your code here\n}\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpse3cnwyx.php:20\n\
    Stack trace:\n#0 /tmp/tmpse3cnwyx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpse3cnwyx.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $results = [];\n  for ($i = 0; $i < count($game); $i++) {\n   \
    \ $results[] = $game[$i] - $guess[$i];\n  }\n  return $results;\n}\necho compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
    \ . '<br>';\necho compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) . '<br>';\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    // $result = [];\n    // for ($i = 0; $i < count($game); $i++)\
    \ {\n    //     if ($game[$i] > $guess[$i]) {\n    //         $result[] = $game[$i]\
    \ - $guess[$i];\n    //     } else if ($game[$i] < $guess[$i]) {\n    //     \
    \    $result[] = $guess[$i] - $game[$i];\n    //     } else {\n    //        \
    \ $result[] = 0;\n    //     }\n    // }\n    // return $result;\n    $result\
    \ = [];\n    foreach ($game as $key => $value) {\n        if ($value > $guess[$key])\
    \ {\n            $result[] = $value - $guess[$key];\n        } else if ($value\
    \ < $guess[$key]) {\n            $result[] = $guess[$key] - $value;\n        }\
    \ else {\n            $result[] = 0;\n        }\n    }\n    return $result;\n\
    }\necho \"<pre>\";\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n\
    \    [4] => 3\n    [5] => 3\n)\n</pre><pre>Array\n(\n    [0] => 4\n    [1] =>\
    \ 4\n    [2] => 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $diffs = [];\n  foreach($game as $k => $score) {\n    $diffs[]\
    \ = abs($score - $guess[$k]);\n  }\n  return $diffs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach($game as $i => $match){\n        $result[]\
    \ = abs($match - $guess[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $arrResult = [];\n    foreach ($game as $key => $value) {\n \
    \       if ($game[$key] == $guess[$key]) {\n            $arrResult[] = 0;\n  \
    \      } else {\n            $arrResult[] = abs($game[$key] - $guess[$key]);\n\
    \        }\n    }\n    return $arrResult;\n}\n\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $returnArr = [];\n  for($i = 0; $i < count($game); $i++) {\n  \
    \  $returnArr[] = $game[$i] - $guess[$i];\n  }\n  return $returnArr;\n}\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $gameAndGuess = array_map(function($game, $guess) {\n    return\
    \ $game - $guess;\n  }, $game, $guess);\n  foreach ($gameAndGuess as $key => $value)\
    \ {\n    if ($value < 0) {\n      $gameAndGuess[$key] = $value * -1;\n    }\n\
    \  }\n  return $gameAndGuess;\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    $result[]\
    \ = $game[$i] == $guess[$i] ? 0 : abs($game[$i] - $guess[$i]);\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach($game as $k => $v) {\n        $result[]\
    \ = $v - $guess[$k];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\t$result = [];\n\tforeach ($game as $key => $value) {\n\t\tif ($value\
    \ - $guess[$key] == 0) {\n\t\t\t$result[] = 0;\n\t\t} else {\n\t\t\t$result[]\
    \ = abs($value - $guess[$key]);\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] > $guess[$i]) {\n      $diff = $game[$i] - $guess[$i];\n      array_push($result,\
    \ $diff);\n    } elseif ($game[$i] < $guess[$i]) {\n      $diff = $guess[$i] -\
    \ $game[$i];\n      array_push($result, $diff);\n    } else {\n      array_push($result,\
    \ 0);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $res = [];\n    foreach ($game as $key => $value) {\n       \
    \ $res[] = abs($value - $guess[$key]);\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $difference = [];\n  foreach ($game as $key => $score) {\n    if\
    \ ($score === $guess[$key]) {\n      $difference[] = 0;\n    } else {\n      $difference[]\
    \ = abs($score - $guess[$key]);\n    }\n  }\n  return $difference;\n}\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $game_count = count($game);\n  $guess_count = count($guess);\n\
    \  if ($game_count == $guess_count) {\n    for ($i=0; $i < $game_count; $i++)\
    \ { \n      $diff = abs($game[$i] - $guess[$i]);\n      if ($diff == 0) {\n  \
    \      $array[$i] = 0;\n      } else {\n        $array[$i] = $diff;\n      }\n\
    \    }\n    return $array;\n  } else {\n    return 'Arrays must be of equal length.';\n\
    \  }\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2,\
    \ 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] == $guess[$i]) {\n      $result[] = 0;\n    } else {\n      $result[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $results = [];\n    foreach($game as $key => $num) {\n      \
    \  $results[] = abs($guess[$key] - $num);\n    }\n    return $results;\n}\necho\
    \ \"<pre>\";\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\necho \"\
    </pre>\";\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n\
    \    [4] => 3\n    [5] => 3\n)\n</pre><pre>Array\n(\n    [0] => 4\n    [1] =>\
    \ 4\n    [2] => 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i] == $guess[$i])\
    \ {\n      $game[$i] = 0;\n    }\n    else {\n      $game[$i] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n  }\n  return $game;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  foreach($game as $k => $v) {\n    $result[] =\
    \ abs($v - $guess[$k]);\n  }\n  return $result;\n}\n\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    print_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if($value == $guess[$key]) {\n            $result[] = 0;\n        } else\
    \ {\n            $result[] = abs($value - $guess[$key]);\n        }\n    }\n \
    \   return $result;\n}\n$game = [1,2,3,4,5,1];\n$guess = [1,2,3,4,2,-2];\necho\
    \ implode(',', compare($game, $guess));\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 0,0,0,0,3,3
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfb11a9vv.php:20\n\
    Stack trace:\n#0 /tmp/tmpfb11a9vv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpfb11a9vv.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i] == $guess[$i])\
    \ {\n      $guess[$i] = 0;\n    } else {\n      $guess[$i] = abs($game[$i] - $guess[$i]);\n\
    \    }\n  }\n  return $guess;\n}\n\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $counter = 0;\n  $result = [];\n  foreach($game as $key => $value)\
    \ {\n    if($value == $guess[$key]) {\n      $result[$counter] = 0;\n    } else\
    \ {\n      $result[$counter] = abs($value - $guess[$key]);\n    }\n    $counter++;\n\
    \  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $results = [];\n  for ($i = 0; $i < count($game); $i++) {\n   \
    \ $results[] = abs($game[$i] - $guess[$i]);\n  }\n  return $results;\n}\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\t$res = [];\n\tforeach ($game as $idx => $val) {\n\t\t$val = abs($val\
    \ - $guess[$idx]);\n\t\t$res[] = $val;\n\t}\n\treturn $res;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $length = count($game);\n  $diff = [];\n  for ($i = 0; $i < $length;\
    \ $i++) {\n    $diff[] = abs($game[$i] - $guess[$i]);\n  }\n  return $diff;\n\
    }\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $array=[];\n    for($i=0;$i<count($game);$i++){\n    $array[]=abs($game[$i]-$guess[$i]);\n\
    \    }\n    return $array;\n}\necho \"<pre>\";\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n    [3] => 0\n\
    \    [4] => 0\n    [5] => 6\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $outcome = [];\n  for ($i=0; $i < count($game); $i++) { \n    if\
    \ ($game[$i] === $guess[$i]) {\n      $outcome[] = 0;\n    } else {\n      $outcome[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $outcome;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] === $guess[$i]) {\n      $result[] = 0;\n    } else {\n      $result[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $diff = [];\n  foreach($game as $k => $v) {\n    $diff[] = abs($game[$k]\
    \ - $guess[$k]);\n  }\n  return $diff;\n}\nfunction candidate(...$args) {\n  \
    \  return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $results = [];\n  foreach($game as $key => $score) {\n    $results[]\
    \ = abs($score - $guess[$key]);\n  }\n  return $results;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  // your code here\n}\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wk3dncj.php:20\n\
    Stack trace:\n#0 /tmp/tmp5wk3dncj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5wk3dncj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i] < 0)\
    \ {\n      $game[$i] = $game[$i]*-1;\n    }\n    if ($guess[$i] < 0) {\n     \
    \ $guess[$i] = $guess[$i]*-1;\n    }\n    if ($game[$i] > $guess[$i]) {\n    \
    \  $guess[$i] = $game[$i] - $guess[$i];\n    } elseif ($game[$i] < $guess[$i])\
    \ {\n      $guess[$i] = $guess[$i] - $game[$i];\n    } else {\n      $guess[$i]\
    \ = 0;\n    }\n  }\n  return $guess;\n}\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptk6i2yb3.php:35\n\
    Stack trace:\n#0 /tmp/tmptk6i2yb3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptk6i2yb3.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $newArray = [];\n  for ($i=0; $i < count($game); $i++) { \n   \
    \ $difference = $game[$i] - $guess[$i];\n    if ($difference < 0) {\n      $difference\
    \ = -$difference;\n    }\n    array_push($newArray, $difference);\n  }\n  return\
    \ $newArray;\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $off = [];\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i]\
    \ == $guess[$i]) {\n      $off[] = 0;\n    } else {\n      $off[] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n  }\n  return $off;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  // your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3k95fy37.php:21\n\
    Stack trace:\n#0 /tmp/tmp3k95fy37.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3k95fy37.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $diff = [];\n    for ($i = 0; $i < count($game); $i++) {\n  \
    \      if ($game[$i] == $guess[$i]) {\n            $diff[] = 0;\n        } else\
    \ {\n            $diff[] = abs($game[$i] - $guess[$i]);\n        }\n    }\n  \
    \  return $diff;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $return = [];\n    foreach ($game as $key => $value) {\n    \
    \    $return[] = abs($value - $guess[$key]);\n    }\n    return $return;\n}\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    for ($i = 0; $i < count($game); $i++) {\n        if ($game[$i]\
    \ == $guess[$i]) {\n            $guess[$i] = 0;\n        } else {\n          \
    \  $guess[$i] = abs($game[$i] - $guess[$i]);\n        }\n    }\n    return $guess;\n\
    }\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] == $guess[$i]) {\n            $result[] = 0;\n        }\
    \ else {\n            $result[] = abs($game[$i] - $guess[$i]);\n        }\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $arr = [];\n    foreach($game as $index => $val) {\n        if($val\
    \ === $guess[$index]) {\n            $arr[] = 0;\n        } else {\n         \
    \   $arr[] = abs($val - $guess[$index]);\n        }\n    }\n    return $arr;\n\
    }\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  return array_map(function($a, $b) {\n    return ($a === $b) ? 0\
    \ : abs($a - $b);\n  }, $game, $guess);\n}\n$tests = [\n  [[1,2,3,4,5,1],[1,2,3,4,2,-2]],\n\
    \  [[0,5,0,0,0,4],[4,1,1,0,0,-2]],\n  [[1,2,3,4,5,5],[1,2,3,4,5,5]],\n  [[0,0,0,0,0,0],[0,0,0,0,0,0]],\n\
    \  [[1,2,3,4,5,6],[6,5,4,3,2,1]],\n  [[0,1,2,3,4,5],[5,4,3,2,1,0]],\n  [[1,2,3,4,5,6],[1,2,3,4,5,6]],\n\
    \  [[0,0,0,0,0,0],[-1,-1,-1,-1,-1,-1]],\n  [[5,5,5,5,5,5],[5,5,5,5,5,5]],\n  [[6,6,6,6,6,6],[6,6,6,6,6,6]],\n\
    \  [[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1]],\n  [[0,0,0,0,0,0],[1,1,1,1,1,1]],\n\
    \  [[1,1,1,1,1,1],[1,1,1,1,1,1]],\n  [[0,0,0,0,0,0],[0,0,0,0,0,0]],\n  [[-1,-1,-1,-1,-1,-1],[1,1,1,1,1,1]],\n\
    \  [[0,0,0,0,0,0],[0,0,0,0,0,0]],\n  [[5,5,5,\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpn8y451cn.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] === $guess[$i]) {\n      $result[] = 0;\n    } else {\n      $result[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    return array_map(function($a, $b) {\n        if ($a === $b) {\n\
    \            return 0;\n        } else {\n            return abs($a - $b);\n \
    \       }\n    }, $game, $guess);\n}\n$game = [1,2,3,4,5,1];\n$guess = [1,2,3,4,2,-2];\n\
    var_dump(compare($game, $guess));\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(0)\n  [2]=>\n  int(0)\n \
    \ [3]=>\n  int(0)\n  [4]=>\n  int(3)\n  [5]=>\n  int(3)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i] === $guess[$i])\
    \ {\n      $diff[] = 0;\n    } else {\n      $diff[] = abs($game[$i] - $guess[$i]);\n\
    \    }\n  }\n  return $diff;\n}\n\n$game = [1,2,3,4,5,1];\n$guess = [1,2,3,4,2,-2];\n\
    var_dump(compare($game, $guess));\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(0)\n  [2]=>\n  int(0)\n \
    \ [3]=>\n  int(0)\n  [4]=>\n  int(3)\n  [5]=>\n  int(3)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach($game as $key => $val) {\n       \
    \ $abs = abs($val - $guess[$key]);\n        array_push($result, $abs);\n    }\n\
    \    return $result;\n}\n$game = [0,5,0,0,0,4];\n$guess = [4,1,1,0,0,-2];\n$result\
    \ = compare($game, $guess);\nprint_r($result);\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n    [3] => 0\n    [4]\
    \ => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] > $guess[$i]) {\n      $result[] = $game[$i] - $guess[$i];\n    }\
    \ else if ($game[$i] < $guess[$i]) {\n      $result[] = $guess[$i] - $game[$i];\n\
    \    } else {\n      $result[] = 0;\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  foreach ($game as $key => $value) {\n    $result[]\
    \ = $guess[$key] - $value;\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6f9aux5.php:24\n\
    Stack trace:\n#0 /tmp/tmpd6f9aux5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd6f9aux5.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $res = [];\n    for ($i = 0; $i < count($game); $i++) {\n   \
    \     if ($game[$i] === $guess[$i]) {\n            $res[] = 0;\n        } else\
    \ {\n            $res[] = abs($game[$i] - $guess[$i]);\n        }\n    }\n   \
    \ return $res;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    $result[]\
    \ = abs($game[$i] - $guess[$i]);\n  }\n  return $result;\n}\necho \"Task 2: \"\
    ;\necho \"<pre>\";\nvar_dump(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\nvar_dump(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    echo \"</pre>\";\necho \"<hr>\";\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Task 2: <pre>array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(0)\n  [2]=>\n\
    \  int(0)\n  [3]=>\n  int(0)\n  [4]=>\n  int(3)\n  [5]=>\n  int(3)\n}\narray(6)\
    \ {\n  [0]=>\n  int(4)\n  [1]=>\n  int(4)\n  [2]=>\n  int(1)\n  [3]=>\n  int(0)\n\
    \  [4]=>\n  int(0)\n  [5]=>\n  int(6)\n}\n</pre><hr>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $diff = array();\n  foreach ($game as $key => $value) {\n    if\
    \ ($value == $guess[$key]) {\n      $diff[] = 0;\n    } else {\n      $diff[]\
    \ = abs($value - $guess[$key]);\n    }\n  }\n  return $diff;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    // create array to store diff values\n    $diff = [];\n    //\
    \ loop through each element in array\n    foreach($game as $key => $value) {\n\
    \        // push the absolute difference to $diff array\n        array_push($diff,\
    \ abs($value - $guess[$key]));\n    }\n    // return diff array\n    return $diff;\n\
    }\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $ret = [];\n    for ($i = 0; $i < count($game); $i++) {\n   \
    \     $ret[] = abs($game[$i] - $guess[$i]);\n    }\n    return $ret;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $count = count($game);\n  $arr = [];\n  for ($i=0; $i < $count;\
    \ $i++) { \n    $arr[] = abs($game[$i] - $guess[$i]);\n  }\n  return $arr;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $i = 0;\n    $result = [];\n    foreach ($game as $value) {\n\
    \        if ($value != $guess[$i]) {\n            $result[] = abs($value - $guess[$i]);\n\
    \        } else {\n            $result[] = 0;\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\necho implode(',', compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 0,0,0,0,3,3
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  \n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpam5u30ni.php:21\n\
    Stack trace:\n#0 /tmp/tmpam5u30ni.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpam5u30ni.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  //i need to make a variable that stores the value of $game - $guess;\n\
    \  $wrong = [];\n  for($i = 0; $i < count($game); $i++){\n    $difference = abs($game[$i]\
    \ - $guess[$i]);\n    array_push($wrong, $difference);\n  }\n  return $wrong;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i] < $guess[$i])\
    \ {\n      $guess[$i] = $guess[$i] - $game[$i];\n    } elseif ($game[$i] > $guess[$i])\
    \ {\n      $guess[$i] = $game[$i] - $guess[$i];\n    } else {\n      $guess[$i]\
    \ = 0;\n    }\n  }\n  return $guess;\n}\n\nfunction candidate(...$args) {\n  \
    \  return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $difference = [];\n    foreach($game as $index => $score) {\n\
    \        $difference[] = abs($score - $guess[$index]);\n    }\n    return $difference;\n\
    }\necho \"<pre>\";\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n\
    \    [4] => 3\n    [5] => 3\n)\n</pre><pre>Array\n(\n    [0] => 4\n    [1] =>\
    \ 4\n    [2] => 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] == $guess[$i]) {\n      $result[] = 0;\n    } else {\n      $result[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] === $guess[$i]) {\n      $result[] = 0;\n    } else {\n      $result[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptd6ytwgd.php:21\n\
    Stack trace:\n#0 /tmp/tmptd6ytwgd.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptd6ytwgd.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  // your code here\n}\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9u_b9mdk.php:20\n\
    Stack trace:\n#0 /tmp/tmp9u_b9mdk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9u_b9mdk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $out = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if ($game[$i]\
    \ == $guess[$i]) {\n      $out[] = 0;\n    } else {\n      $out[] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n  }\n  return $out;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  //your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxrhuqfpl.php:21\n\
    Stack trace:\n#0 /tmp/tmpxrhuqfpl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxrhuqfpl.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\treturn array_map(function($a, $b) {\n\t\treturn abs($a - $b);\n\
    \t}, $game, $guess);\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $res = [];\n  for ($i = 0; $i < count($game); $i++) {\n    $res[]\
    \ = $game[$i] - $guess[$i];\n  }\n  return $res;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] === $guess[$i]) {\n      $result[] = 0;\n    } else {\n      $result[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $result;\n}\n\necho '<pre>';\n\
    print_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n\
    \    [4] => 3\n    [5] => 3\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $results = [];\n  for ($i = 0; $i < count($game); $i++) {\n   \
    \ $guessDiff = abs($game[$i] - $guess[$i]);\n    array_push($results, $guessDiff);\n\
    \  }\n  return $results;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    print_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $results = [];\n  foreach ($game as $index => $score) {\n    $results[]\
    \ = $score == $guess[$index] ? 0 : abs($score - $guess[$index]);\n  }\n  return\
    \ $results;\n}\necho \"Given the game \" . join(\", \", $game = [1,2,3,4,5,1])\
    \ . \" and guesses \" . join(\", \", $guess = [1,2,3,4,2,-2]) . \", the result\
    \ should be [0,0,0,0,3,3] -> \" . join(\", \", compare($game, $guess)) . \"\\\
    n\";\necho \"Given the game \" . join(\", \", $game = [0,5,0,0,0,4]) . \" and\
    \ guesses \" . join(\", \", $guess = [4,1,1,0,0,-2]) . \", the result should be\
    \ [4,4,1,0,0,6] -> \" . join(\", \", compare($game, $guess)) . \"\\n\";\necho\
    \ \"Given the game \" . join(\", \", $game = [0,0,0,0,0,0]) . \" and guesses \"\
    \ . join(\", \", $guess = [0,0,0,0,0,0]) . \", the result should be [0,0,0,0,0,0]\
    \ -> \" . join(\", \", compare($game, $guess)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Given the game 1, 2, 3, 4, 5, 1 and guesses 1, 2, 3, 4, 2, -2, the result\
    \ should be [0,0,0,0,3,3] -> 0, 0, 0, 0, 3, 3\nGiven the game 0, 5, 0, 0, 0, 4\
    \ and guesses 4, 1, 1, 0, 0, -2, the result should be [4,4,1,0,0,6] -> 4, 4, 1,\
    \ 0, 0, 6\nGiven the game 0, 0, 0, 0, 0, 0 and guesses 0, 0, 0, 0, 0, 0, the result\
    \ should be [0,0,0,0,0,0] -> 0, 0, 0, 0, 0, 0\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] == $guess[$i]) {\n      $result[] = 0;\n    } else {\n      $result[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $result;\n}\necho '<pre>';\n\
    print_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n\
    \    [4] => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2]\
    \ => 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  // code here\n}\n\necho compare([1,2,3,4,5,1],[1,2,3,4,2,-2]);\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7598k251.php:22\n\
    Stack trace:\n#0 /tmp/tmp7598k251.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7598k251.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\t$result = [];\n\t$gameLength = count($game);\n\tfor ($i = 0; $i\
    \ < $gameLength; $i++) {\n\t\tif ($game[$i] == $guess[$i]) {\n\t\t\t$result[]\
    \ = 0;\n\t\t} else {\n\t\t\t$result[] = abs($game[$i] - $guess[$i]);\n\t\t}\n\t\
    }\n\treturn $result;\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] == $guess[$i]) {\n      $result[] = 0;\n    } else {\n      $result[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] === $guess[$i]) {\n            $result[] = 0;\n       \
    \ } else {\n            $result[] = abs($game[$i] - $guess[$i]);\n        }\n\
    \    }\n    return $result;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    print_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    return array_map(function($result, $prediction) {\n      return\
    \ abs($result - $prediction);\n    }, $game, $guess);\n  }\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\tforeach ($game as $key => $number) {\n\t\t$res[] = abs($number\
    \ - $guess[$key]);\n\t}\n\treturn $res;\n}\nfunction candidate(...$args) {\n \
    \   return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i] === $guess[$i])\
    \ {\n      $guess[$i] = 0;\n    }\n    else {\n      $guess[$i] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n  }\n  return $guess;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    print_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] == $guess[$i]) {\n      $result[] = 0;\n    } else {\n      $result[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $result;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    print_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($game[$key] == $guess[$key]) {\n            $result[] = 0;\n        }\
    \ else {\n            $result[] = abs($game[$key] - $guess[$key]);\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $results = [];\n  foreach($game as $index => $value) {\n    $results[]\
    \ = abs($value - $guess[$index]);\n  }\n  return $results;\n}\n\n$game = [1,2,3,4,5,1];\n\
    $guess = [1,2,3,4,2,-2];\nprint_r(compare($game, $guess));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $newArr = [];\n  for($i = 0; $i < count($game); $i++){\n    if($game[$i]\
    \ == $guess[$i]){\n      array_push($newArr, 0);\n    }else{\n      array_push($newArr,\
    \ abs($game[$i] - $guess[$i]));\n    }\n  }\n  return $newArr;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  foreach ($game as $index => $game_score) {\n \
    \   $result[] = abs($game_score - $guess[$index]);\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $res = [];\n    for ($i = 0; $i < count($game); $i++) {\n   \
    \     $res[] = abs($game[$i] - $guess[$i]);\n    }\n    return $res;\n}\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $results = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] < 0) {\n            $game[$i] = $game[$i] * -1;\n     \
    \   }\n        if ($guess[$i] < 0) {\n            $guess[$i] = $guess[$i] * -1;\n\
    \        }\n        if ($game[$i] > $guess[$i]) {\n            $results[] = $game[$i]\
    \ - $guess[$i];\n        } elseif ($game[$i] < $guess[$i]) {\n            $results[]\
    \ = $guess[$i] - $game[$i];\n        } else {\n            $results[] = 0;\n \
    \       }\n    }\n    return $results;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    print_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 1\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpc0gy4dos.php:38\nStack trace:\n#0 /tmp/tmpc0gy4dos.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpc0gy4dos.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach($game as $index => $item) {\n    \
    \    $result[] = abs($item - $guess[$index]);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $res = [];\n  for ($i = 0; $i < count($game); $i++) {\n    $res[]\
    \ = abs($game[$i] - $guess[$i]);\n  }\n  return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i] !== $guess[$i])\
    \ {\n      $guess[$i] = abs($game[$i] - $guess[$i]);\n    } elseif ($game[$i]\
    \ === $guess[$i]) {\n      $guess[$i] = 0;\n    }\n  }\n  return $guess;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $diff = [];\n    foreach ($game as $index => $game_value) {\n\
    \        $diff[] = abs($game_value - $guess[$index]);\n    }\n    return $diff;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] == $guess[$i]) {\n            $result[] = 0;\n        }\
    \ else {\n            $result[] = abs($game[$i] - $guess[$i]);\n        }\n  \
    \  }\n    return $result;\n}\n\necho '<pre>';\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n\
    \    [4] => 3\n    [5] => 3\n)\n</pre><pre>Array\n(\n    [0] => 4\n    [1] =>\
    \ 4\n    [2] => 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  foreach ($game as $key => $score) {\n    if ($score\
    \ !== $guess[$key]) {\n      $result[] = abs($score - $guess[$key]);\n    } else\
    \ {\n      $result[] = 0;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] == $guess[$i]) {\n            $result[] = 0;\n        }\
    \ else {\n            $result[] = abs($game[$i] - $guess[$i]);\n        }\n  \
    \  }\n    return $result;\n}\necho '<pre>';\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n\
    \    [4] => 3\n    [5] => 3\n)\n</pre><pre>Array\n(\n    [0] => 4\n    [1] =>\
    \ 4\n    [2] => 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    $result[]\
    \ = $game[$i] == $guess[$i] ? 0 : abs($game[$i] - $guess[$i]);\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    //your code here\n    $arr = [];\n    for($i = 0; $i < count($game);\
    \ $i++){\n        if($game[$i] < $guess[$i]){\n            $arr[] = $guess[$i]\
    \ - $game[$i];\n        } else if($game[$i] > $guess[$i]){\n            $arr[]\
    \ = $game[$i] - $guess[$i];\n        } else {\n            $arr[] = 0;\n     \
    \   }\n    }\n    return $arr;\n}\n\n$arr = [1,2,3,4,5,1];\n$arr2 = [1,2,3,4,2,-2];\n\
    print_r(compare($arr, $arr2));\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    for ($i = 0; $i < count($game); $i++) {\n        if ($game[$i]\
    \ === $guess[$i]) {\n            $guess[$i] = 0;\n        } else {\n         \
    \   $guess[$i] = abs($game[$i] - $guess[$i]);\n        }\n    }\n    return $guess;\n\
    }\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  foreach ($game as $k => $v) {\n    if ($v - $guess[$k]\
    \ == 0) {\n      $result[] = 0;\n    } else {\n      $result[] = abs($v - $guess[$k]);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result=[];\n    for($i=0;$i<count($game);$i++){\n        if($game[$i]==$guess[$i]){\n\
    \            $result[]=0;\n        }else{\n            $result[]=abs($game[$i]-$guess[$i]);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $score = [];\n  for ($i=0; $i < count($game); $i++) { \n    $score[]\
    \ = abs($game[$i] - $guess[$i]);\n  }\n  return $score;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n\
    }\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n\
    }\n\n$a = [1,2,3,4,5,1];\n$b = [1,2,3,4,2,-2];\n\necho \"Game: \";\nprint_r($a);\n\
    echo \"Guess: \";\nprint_r($b);\necho \"Result: \";\nprint_r(compare($a, $b));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Game: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n\
    \    [4] => 5\n    [5] => 1\n)\nGuess: Array\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 2\n    [5] => -2\n)\nResult: Array\n(\n\
    \    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4] => 3\n    [5]\
    \ => 3\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    // Your code here\n    $result = [];\n    for ($i = 0; $i < count($game);\
    \ $i++) {\n        if ($game[$i] == $guess[$i]) {\n            $result[] = 0;\n\
    \        } else {\n            $result[] = abs($game[$i] - $guess[$i]);\n    \
    \    }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  foreach ($game as $key => $value) {\n    if ($value\
    \ > $guess[$key]) {\n      $result[] = $value - $guess[$key];\n    } else {\n\
    \      $result[] = $guess[$key] - $value;\n    }\n  }\n  return $result;\n}\n\
    print_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] === $guess[$i]) {\n            $result[] = 0;\n       \
    \ } else {\n            $result[] = abs($game[$i] - $guess[$i]);\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    $result[]\
    \ = abs($game[$i] - $guess[$i]);\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $arr = [];\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i]\
    \ !== $guess[$i]) {\n      $arr[] = abs($game[$i] - $guess[$i]);\n    } else {\n\
    \      $arr[] = 0;\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i] > $guess[$i])\
    \ {\n      $guess[$i] = $game[$i] - $guess[$i];\n    } elseif ($game[$i] < $guess[$i])\
    \ {\n      $guess[$i] = $guess[$i] - $game[$i];\n    } else {\n      $guess[$i]\
    \ = 0;\n    }\n  }\n  return $guess;\n}\n\n$game = [1,2,3,4,5,1];\n$guess = [1,2,3,4,2,-2];\n\
    \necho \"<pre>\";\nprint_r(compare($game, $guess));\necho \"</pre>\";\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n\
    \    [4] => 3\n    [5] => 3\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] === $guess[$i]) {\n            $result[] = 0;\n       \
    \ } else {\n            $result[] = abs($game[$i] - $guess[$i]);\n        }\n\
    \    }\n    return $result;\n}\n\n$results = [1, 2, 3, 4, 5, 1];\n$guesses = [1,\
    \ 2, 3, 4, 2, -2];\nvar_dump(compare($results, $guesses));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(0)\n  [2]=>\n  int(0)\n \
    \ [3]=>\n  int(0)\n  [4]=>\n  int(3)\n  [5]=>\n  int(3)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $final = [];\n    for($i = 0; $i < count($game); $i++) {\n  \
    \      if($game[$i] == $guess[$i]) {\n            $final[] = 0;\n        } else\
    \ {\n            $final[] = abs($game[$i] - $guess[$i]);\n        }\n    }\n \
    \   return $final;\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\t$result = [];\n\tforeach ($game as $key => $value) {\n\t\tif($value\
    \ < 0 || $guess[$key] < 0) {\n\t\t\t$result[] = 3;\n\t\t} else {\n\t\t\t$result[]\
    \ = abs($value - $guess[$key]);\n\t\t}\n\t}\n\treturn $result;\n}\n\n$a = compare([1,2,3,4,5,1],[1,2,3,4,2,-2]);\n\
    print_r($a); // [0,0,0,0,3,3]\n$b = compare([0,5,0,0,0,4],[4,1,1,0,0,-2]);\nprint_r($b);\
    \ // [4,4,1,0,0,6]\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 3\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0vjldjqa.php:35\nStack trace:\n#0 /tmp/tmp0vjldjqa.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0vjldjqa.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    // create a new array to hold the results\n    $results = [];\n\
    \    // loop through the game array\n    for($i = 0; $i < count($game); $i++)\
    \ {\n        // push the absolute difference to the results array\n        array_push($results,\
    \ abs($game[$i] - $guess[$i]));\n    }\n    // return the results array\n    return\
    \ $results;\n}\n\necho compare([1,2,3,4,5,1],[1,2,3,4,2,-2])[5];\necho \"<br>\"\
    ;\necho compare([0,5,0,0,0,4],[4,1,1,0,0,-2])[5];\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 3<br>6
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] === $guess[$i]) {\n      $result[] = 0;\n    } else {\n      $result[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $result;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    print_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nprint_r(compare([-1,2,2,2,2,2],[1,2,2,2,2,1]));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\nArray\n(\n    [0] => 2\n    [1]\
    \ => 0\n    [2] => 0\n    [3] => 0\n    [4] => 0\n    [5] => 1\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $results = [];\n  for ($i = 0; $i < count($game); $i++) {\n   \
    \ if ($game[$i] == $guess[$i]) {\n      $results[] = 0;\n    } else {\n      $results[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $results;\n}\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  // solution\n  $arr = [];\n  for($i = 0; $i < count($game); $i++)\
    \ {\n    if($game[$i] == $guess[$i]){\n      $arr[] = 0;\n    }else{\n      $arr[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $results = [];\n  foreach ($game as $key => $value) {\n    $difference\
    \ = abs($value - $guess[$key]);\n    $results[] = $difference;\n  }\n  return\
    \ $results;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach($game as $key => $value) {\n     \
    \   $result[] = ($game[$key] === $guess[$key]) ? 0 : abs($game[$key] - $guess[$key]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i] == $guess[$i])\
    \ {\n      $return[$i] = 0;\n    } else {\n      $return[$i] = abs($game[$i] -\
    \ $guess[$i]);\n    }\n  }\n  return $return;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[] = abs($value - $guess[$key]);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    return array_map(function($item, $key) use ($game){\n       \
    \ return abs($item - $game[$key]);\n    }, $guess, array_keys($guess));\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $ret = [];\n    foreach ($game as $k => $v) {\n        $ret[]\
    \ = abs($v - $guess[$k]);\n    }\n    return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $arr = [];\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i]\
    \ === $guess[$i]) {\n      $arr[] = 0;\n    } else {\n      $arr[] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n  }\n  return $arr;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    echo \"<br>\";\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\necho \"<br>\"\
    ;\nprint_r(compare([2,3,3,3,3,1],[1,1,1,1,1,0]));\necho \"<br>\";\nprint_r(compare([0,0,0,0,0,2],[0,0,0,0,0,1]));\n\
    echo \"<br>\";\nprint_r(compare([0,0,0,0,1,1],[0,0,0,0,0,0]));\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\n<br>Array\n(\n    [0] => 4\n    [1] => 4\n    [2] =>\
    \ 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n<br>Array\n(\n    [0] => 1\n\
    \    [1] => 2\n    [2] => 2\n    [3] => 2\n    [4] => 2\n    [5] => 1\n)\n<br>Array\n\
    (\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4] => 0\n    [5]\
    \ => 1\n)\n<br>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] =>\
    \ 0\n    [4] => 1\n    [5] => 1\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $res = [];\n  foreach ($game as $k => $v) {\n    $res[] = abs($v\
    \ - $guess[$k]);\n  }\n  return $res;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    echo '<br>';\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\n<br>Array\n(\n    [0] => 4\n    [1] => 4\n    [2] =>\
    \ 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] == $guess[$i]) {\n      $result[] = 0;\n    } else {\n      $result[]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    $result[]\
    \ = abs($game[$i] - $guess[$i]);\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    $result[]\
    \ = abs($game[$i] - $guess[$i]);\n  }\n  return $result;\n}\n\necho \"[0,0,0,0,3,3]\\\
    n\";\necho \"[\" . implode(\",\", compare([1,2,3,4,5,1],[1,2,3,4,2,-2])) . \"\
    ]\\n\";\necho \"[4,4,1,0,0,6]\\n\";\necho \"[\" . implode(\",\", compare([0,5,0,0,0,4],[4,1,1,0,0,-2]))\
    \ . \"]\\n\";\necho \"[3,3,0,0,2,2]\\n\";\necho \"[\" . implode(\",\", compare([1,5,5,0,5,1],[0,1,1,5,5,0]))\
    \ . \"]\\n\";\necho \"[1,1,1,0,1,1]\\n\";\necho \"[\" . implode(\",\", compare([0,0,0,0,0,1],[1,1,1,0,1,0]))\
    \ . \"]\\n\";\necho \"[0,0,0,0,1,1]\\n\";\necho \"[\" . implode(\",\", compare([0,0,0,0,0,1],[0,0,0,0,1,0]))\
    \ . \"]\\n\";\necho \"[0,0,1,1,1,0]\\n\";\necho \"[\" . implode(\",\", compare([1,1,1,1,1,0],[0,0,1,1,1,1]))\
    \ . \"]\\n\";\necho \"[0,0,1,1,1,1]\\n\";\necho \"[\" . implode(\",\", compare([1,1,1,1,1,0],[0,0,1,1,1,0]))\
    \ . \"]\\n\";\necho \"[4,4,4,4,4,4]\\n\";\necho \"[\" . implode(\",\"\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjf8nixcu.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  \n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfy9bivg4.php:21\n\
    Stack trace:\n#0 /tmp/tmpfy9bivg4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfy9bivg4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\tforeach($game as $key => $val) {\n\t\tif($val != $guess[$key])\
    \ {\n\t\t\t$game[$key] = abs($val - $guess[$key]);\n\t\t}\n\t}\n\treturn $game;\n\
    }\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw4ocbnxr.php:25\n\
    Stack trace:\n#0 /tmp/tmpw4ocbnxr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpw4ocbnxr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $arr = [];\n    for ($i = 0; $i < count($game); $i++) {\n   \
    \     if ($game[$i] == $guess[$i]) {\n            $arr[] = 0;\n        } else\
    \ {\n            $arr[] = abs($game[$i] - $guess[$i]);\n        }\n    }\n   \
    \ return $arr;\n}\n\necho '<pre>';\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    echo '</pre>';\n\necho '<pre>';\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n\
    \    [4] => 3\n    [5] => 3\n)\n</pre><pre>Array\n(\n    [0] => 4\n    [1] =>\
    \ 4\n    [2] => 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\tif (count($game) !== count($guess))\n\t\treturn NULL;\n\t$result\
    \ = [];\n\tfor ($i = 0; $i < count($game); $i++) {\n\t\t$result[] = abs($game[$i]\
    \ - $guess[$i]);\n\t}\n\treturn $result;\n}\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result=[];\n    for($i=0;$i<count($game);$i++){\n        if($game[$i]==$guess[$i]){\n\
    \            $result[]=0;\n        }else{\n            $result[]=abs($game[$i]-$guess[$i]);\n\
    \        }\n    }\n    return $result;\n}\n$a1 = array(1,2,3,4,5,1);\n$a2 = array(1,2,3,4,2,-2);\n\
    $a3 = array(0,5,0,0,0,4);\n$a4 = array(4,1,1,0,0,-2);\nprint_r(compare($a1,$a2));\n\
    echo \"<br>\";\nprint_r(compare($a3,$a4));\nfunction candidate(...$args) {\n \
    \   return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\n<br>Array\n(\n    [0] => 4\n    [1] => 4\n    [2] =>\
    \ 1\n    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $game_length = count($game);\n    $guess_length = count($guess);\n\
    \    $newArray = [];\n    for ($i = 0; $i < $game_length; $i++) {\n        if\
    \ ($game[$i] < $guess[$i]) {\n            $newArray[] = $guess[$i] - $game[$i];\n\
    \        } else if ($game[$i] > $guess[$i]) {\n            $newArray[] = $game[$i]\
    \ - $guess[$i];\n        } else {\n            $newArray[] = 0;\n        }\n \
    \   }\n    return $newArray;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    print_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\t$point = [];\n\tforeach ($game as $key => $value) {\n\t\t$point[]\
    \ = abs($value - $guess[$key]);\n\t}\n\treturn $point;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $results = [];\n  foreach($game as $key => $val) {\n    $results[]\
    \ = abs($val - $guess[$key]);\n  }\n  return $results;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    print_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  return array_map(function($value, $index) use ($game) {\n    if\
    \ ($value !== $game[$index]) {\n      return abs($value - $game[$index]);\n  \
    \  }\n    return 0;\n  }, $guess, array_keys($guess));\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach($game as $index => $value) {\n   \
    \     if($value == $guess[$index]){\n            $result[] = 0;\n        } else\
    \ {\n            $result[] = abs($value - $guess[$index]);\n        }\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  for ($i=0; $i < count($game); $i++) { \n    if ($game[$i] == $guess[$i])\
    \ {\n      $game[$i] = 0;\n    }\n    else {\n      $game[$i] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n  }\n  return $game;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  foreach($game as $index => $value) {\n    $result[]\
    \ = abs($value - $guess[$index]);\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $diff = [];\n    foreach ($game as $key => $value) {\n      \
    \  $diff[] = abs($game[$key] - $guess[$key]);\n    }\n    return $diff;\n}\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $res = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if ($game[$i]\
    \ === $guess[$i]) {\n      $res[] = 0;\n    } else {\n      $res[] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n  }\n  return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] == $guess[$i]) {\n            $result[] = 0;\n        }\
    \ else {\n            $result[] = abs($game[$i] - $guess[$i]);\n        }\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  \n}\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuoa6_xby.php:20\n\
    Stack trace:\n#0 /tmp/tmpuoa6_xby.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpuoa6_xby.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $results = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] > $guess[$i]) {\n            $results[] = $game[$i] - $guess[$i];\n\
    \        } else if ($game[$i] < $guess[$i]) {\n            $results[] = $guess[$i]\
    \ - $game[$i];\n        } else {\n            $results[] = 0;\n        }\n   \
    \ }\n    return $results;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $comparison = [];\n    foreach ($game as $index => $score) {\n\
    \        $comparison[] = abs($guess[$index] - $score);\n    }\n    return $comparison;\n\
    }\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\nprint_r(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\nArray\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n\
    \    [3] => 0\n    [4] => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $diff = [];\n    for ($i = 0; $i < count($game); $i++) {\n  \
    \      if ($game[$i] - $guess[$i] === 0) {\n            $diff[] = 0;\n       \
    \ } else {\n            $diff[] = abs($game[$i] - $guess[$i]);\n        }\n  \
    \  }\n    return $diff;\n}\n\necho (compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[] = abs($value - $guess[$key]);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result=[];\n  for($i=0;$i<count($game);$i++){\n    if($game[$i]==$guess[$i])\n\
    \      $result[]=0;\n    else\n      $result[]=abs($game[$i]-$guess[$i]);\n  }\n\
    \  return $result;\n}\necho implode(\", \",compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 0, 0, 0, 0, 3, 3
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n\
    }\n$test = [\n    [\n        'input' => [\n            [1,2,3,4,5,1],\n      \
    \      [1,2,3,4,2,-2]\n        ],\n        'expected' => [0,0,0,0,3,3]\n    ],\n\
    \    [\n        'input' => [\n            [0,5,0,0,0,4],\n            [4,1,1,0,0,-2]\n\
    \        ],\n        'expected' => [4,4,1,0,0,6]\n    ],\n    [\n        'input'\
    \ => [\n            [0,0,0,0,0,0],\n            [0,0,0,0,0,0]\n        ],\n  \
    \      'expected' => [0,0,0,0,0,0]\n    ],\n    [\n        'input' => [\n    \
    \        [1,1,1,1,1,1],\n            [6,6,6,6,6,6]\n        ],\n        'expected'\
    \ => [5,5,5,5,5,5]\n    ],\n    [\n        'input' => [\n            [1,1,1,1,1,1],\n\
    \            [0,0,0,0,0,0]\n        ],\n        'expected' => [1,1,1,1,1,1]\n\
    \    ],\n    [\n        'input' => [\n            [0,0,0,0,0,0],\n           \
    \ [1,1,1,1,1,1]\n        ],\n        'expected' => [1,1,1,1,1,1]\n    ],\n   \
    \ [\n        'input' => [\n            [10,10,10,10,10,10],\n            [0,0,0,0,0,0]\n\
    \        ],\n        'expected' => [10,10,10,10,10,\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_crbjoz9.php on line 68\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\t$results = [];\n\tfor ($i=0; $i < count($game); $i++) { \n\t\t\
    if ($game[$i] == $guess[$i]) {\n\t\t\t$results[] = 0;\n\t\t} else {\n\t\t\t$results[]\
    \ = abs($game[$i] - $guess[$i]);\n\t\t}\n\t}\n\treturn $results;\n}\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $check = [];\n  for ($i=0; $i < count($game); $i++) { \n    if\
    \ ($game[$i] !== $guess[$i]) {\n      array_push($check, abs($game[$i] - $guess[$i]));\n\
    \    } else {\n      array_push($check, 0);\n    }\n  }\n  return $check;\n}\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] < $guess[$i]) {\n      $res = $guess[$i] - $game[$i];\n    } elseif\
    \ ($game[$i] > $guess[$i]) {\n      $res = $game[$i] - $guess[$i];\n    } else\
    \ {\n      $res = 0;\n    }\n    array_push($result, $res);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    return array_map(function($a, $b) {\n        return $a == $b\
    \ ? 0 : abs($a - $b);\n    }, $game, $guess);\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $final = [];\n    for($i = 0; $i < count($game); $i++) {\n  \
    \      if($game[$i] === $guess[$i]) {\n            array_push($final, 0);\n  \
    \      } else {\n            array_push($final, abs($game[$i] - $guess[$i]));\n\
    \        }\n    }\n    return $final;\n}\n\nfunction candidate(...$args) {\n \
    \   return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $res = [];\n    for ($i = 0; $i < count($game); $i++) {\n   \
    \     if ($game[$i] === $guess[$i]) {\n            $res[] = 0;\n        } else\
    \ {\n            $res[] = abs($game[$i] - $guess[$i]);\n        }\n    }\n   \
    \ return $res;\n}\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      $result[] = abs($score - $guess[$index]);\n    }\n    return $result;\n\
    }\n\necho compare([1,2,3,4,5,1],[1,2,3,4,2,-2]);\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        if ($game[$i] == $guess[$i]) {\n            $result[] = 0;\n        }\
    \ else {\n            $result[] = abs($game[$i] - $guess[$i]);\n        }\n  \
    \  }\n    return $result;\n}\n\necho '<pre>';\nvar_dump(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    var_dump(compare([0,5,0,0,0,4],[4,1,1,0,0,-2]));\nvar_dump(compare([3,3,3,3,3,3],[0,2,2,2,2,2]));\n\
    var_dump(compare([4,4,4,4,4,4],[4,4,4,4,4,4]));\nvar_dump(compare([4,4,4,4,4,4],[4,4,4,4,4,5]));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<pre>array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(0)\n  [2]=>\n  int(0)\n\
    \  [3]=>\n  int(0)\n  [4]=>\n  int(3)\n  [5]=>\n  int(3)\n}\narray(6) {\n  [0]=>\n\
    \  int(4)\n  [1]=>\n  int(4)\n  [2]=>\n  int(1)\n  [3]=>\n  int(0)\n  [4]=>\n\
    \  int(0)\n  [5]=>\n  int(6)\n}\narray(6) {\n  [0]=>\n  int(3)\n  [1]=>\n  int(1)\n\
    \  [2]=>\n  int(1)\n  [3]=>\n  int(1)\n  [4]=>\n  int(1)\n  [5]=>\n  int(1)\n\
    }\narray(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(0)\n  [2]=>\n  int(0)\n  [3]=>\n\
    \  int(0)\n  [4]=>\n  int(0)\n  [5]=>\n  int(0)\n}\narray(6) {\n  [0]=>\n  int(0)\n\
    \  [1]=>\n  int(0)\n  [2]=>\n  int(0)\n  [3]=>\n  int(0)\n  [4]=>\n  int(0)\n\
    \  [5]=>\n  int(1)\n}\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $guess = str_split($guess);\n    $game = str_split($game);\n\
    \    $result = [];\n    for ($i = 0; $i < sizeof($game); $i++) {\n        if ($game[$i]\
    \ == $guess[$i]) {\n            $result[] = 0;\n        } else {\n           \
    \ $result[] = abs($game[$i] - $guess[$i]);\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: str_split() expects parameter 1 to be string, array given in\
    \ /tmp/tmpfxq0c4ge.php on line 13\n\nWarning: str_split() expects parameter 1\
    \ to be string, array given in /tmp/tmpfxq0c4ge.php on line 14\n\nWarning: sizeof():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpfxq0c4ge.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxq0c4ge.php:30\n\
    Stack trace:\n#0 /tmp/tmpfxq0c4ge.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfxq0c4ge.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  return array_map(function($game, $guess) {\n    return abs($game\
    \ - $guess);\n  }, $game, $guess);\n}\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n\
    }\necho implode(\", \", compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 0, 0, 0, 0, 3, 3
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach($game as $key => $value) {\n     \
    \   $result[] = abs($value - $guess[$key]);\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $total = count($game);\n  $count = 0;\n  $guessData = [];\n  while($count\
    \ < $total) {\n    if($game[$count] == $guess[$count]) {\n      $guessData[] =\
    \ 0;\n    } else {\n      $guessData[] = abs($game[$count] - $guess[$count]);\n\
    \    }\n    $count++;\n  }\n  return $guessData;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $outcome = [];\n    foreach($game as $key => $value) {\n    \
    \    if($value == $guess[$key]) {\n            $outcome[] = 0;\n        } else\
    \ {\n            $outcome[] = abs($value - $guess[$key]);\n        }\n    }\n\
    \    return $outcome;\n}\n$game = [0,5,0,0,0,4];\n$guess = [4,1,1,0,0,-2];\n$outcome\
    \ = compare($game, $guess);\nprint_r($outcome);\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 4\n    [1] => 4\n    [2] => 1\n    [3] => 0\n    [4]\
    \ => 0\n    [5] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $solutions = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $solutions[] = $game[$i] === $guess[$i] ? 0 : abs($game[$i] - $guess[$i]);\n\
    \    }\n    return $solutions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  // Your code here!\n}\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp42miaj2m.php:20\n\
    Stack trace:\n#0 /tmp/tmp42miaj2m.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp42miaj2m.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $result = [];\n  for ($i = 0; $i < count($game); $i++) {\n    if\
    \ ($game[$i] !== $guess[$i]) {\n      $result[] = abs($game[$i] - $guess[$i]);\n\
    \    } else {\n      $result[] = 0;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n\t$result = [];\n\tfor ($i=0; $i < count($game); $i++) { \n\t\t$result[]\
    \ = $game[$i] - $guess[$i];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $matches = count($game);\n  $result = [];\n  for ($i = 0; $i <\
    \ $matches; $i++) {\n    $diff = abs($game[$i] - $guess[$i]);\n    array_push($result,\
    \ $diff);\n  }\n  return $result;\n}\n\nprint_r(compare([1,2,3,4,5,1],[1,2,3,4,2,-2]));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 3\n    [5] => 3\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n\
    \        $result[] = ($game[$i] == $guess[$i]) ? 0 : abs($game[$i] - $guess[$i]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n  $res = [];\n  for ($i = 0; $i < count($game); $i++) {\n    $res[]\
    \ = abs($game[$i] - $guess[$i]);\n  }\n  return $res;\n}\necho \"1. compare\\\
    n\";\necho \"Expected: [0,0,0,0,3,3]\\n\";\necho \"Result: [\" . implode(\",\"\
    , compare([1,2,3,4,5,1],[1,2,3,4,2,-2])) . \"]\\n\";\necho \"Expected: [4,4,1,0,0,6]\\\
    n\";\necho \"Result: [\" . implode(\",\", compare([0,5,0,0,0,4],[4,1,1,0,0,-2]))\
    \ . \"]\\n\";\necho \"Expected: [0,0,0,0,0,0]\\n\";\necho \"Result: [\" . implode(\"\
    ,\", compare([0,0,0,0,0,0],[0,0,0,0,0,0])) . \"]\\n\";\necho \"Expected: [5,5,5,5,5,5]\\\
    n\";\necho \"Result: [\" . implode(\",\", compare([5,5,5,5,5,5],[0,0,0,0,0,0]))\
    \ . \"]\\n\";\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1. compare\nExpected: [0,0,0,0,3,3]\nResult: [0,0,0,0,3,3]\nExpected: [4,4,1,0,0,6]\n\
    Result: [4,4,1,0,0,6]\nExpected: [0,0,0,0,0,0]\nResult: [0,0,0,0,0,0]\nExpected:\
    \ [5,5,5,5,5,5]\nResult: [5,5,5,5,5,5]\n"
  stderr: ''
  exit_code: 0
  status: OK

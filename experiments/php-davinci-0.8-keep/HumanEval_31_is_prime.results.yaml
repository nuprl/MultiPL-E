name: HumanEval_31_is_prime
language: php
results:
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n <= 1) {\n\t\treturn false;\n\t} else if ($n <= 3) {\n\t\treturn true;\n\
    \t} else if ($n % 2 == 0 || $n % 3 == 0) {\n\t\treturn false;\n\t}\n\n\t$i = 5;\n\
    \twhile ($i * $i <= $n) {\n\t\tif ($n % $i == 0 || $n % ($i + 2) == 0) {\n\t\t\
    \treturn false;\n\t\t}\n\t\t$i += 6;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n < 2) {\n\t\treturn False;\n\t}\n\t$j = floor(sqrt($n));\n\tfor ($i =\
    \ 2; $i <= $j; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn False;\n\t\t}\n\t\
    }\n\treturn True;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n < 2) {\n\t\treturn False;\n\t}\n\t$c = 1;\n\tfor ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$c += 1;\n\t\t}\n\t}\n\tif ($c == 1)\
    \ {\n\t\treturn True;\n\t}\n\treturn False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t// Add code here\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4yyt3_r.php:26\n\
    Stack trace:\n#0 /tmp/tmpm4yyt3_r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm4yyt3_r.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i < $n; $i++) {\n\t\t\
    if ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    // is_prime(1) == False\n    if ($n == 1) {\n        return false;\n    }\n\
    \    // is_prime(2) == True\n    elseif ($n == 2) {\n        return true;\n  \
    \  }\n    // is_prime(3) == True\n    elseif ($n == 3) {\n        return true;\n\
    \    }\n    // else, check divisors\n    else {\n        for ($i = 2; $i < $n;\
    \ $i++) {\n            if ($n % $i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n    }\n}\necho \"is_prime(6) ==\
    \ \" . is_prime(6) . \"\\n\";\necho \"is_prime(101) == \" . is_prime(101) . \"\
    \\n\";\necho \"is_prime(11) == \" . is_prime(11) . \"\\n\";\necho \"is_prime(13441)\
    \ == \" . is_prime(13441) . \"\\n\";\necho \"is_prime(61) == \" . is_prime(61)\
    \ . \"\\n\";\necho \"is_prime(4) == \" . is_prime(4) . \"\\n\";\necho \"is_prime(1)\
    \ == \" . is_prime(1) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "is_prime(6) == \nis_prime(101) == 1\nis_prime(11) == 1\nis_prime(13441)\
    \ == 1\nis_prime(61) == 1\nis_prime(4) == \nis_prime(1) == \n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $i = 2;\n    while ($i <=\
    \ $n/2) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n < 2) return false;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i\
    \ == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0) {\n    return false;\n  }\n  for ($i = 3; $i < $n; $i\
    \ = $i + 2) {\n    if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n === 2) {\n\t\treturn true;\n\t}\n\t$smallestFactor = 1;\n\tfor ($i =\
    \ 2; $i < $n; $i++) {\n\t\tif ($n % $i === 0) {\n\t\t\t$smallestFactor = $i;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\tif ($smallestFactor !== 1) {\n\t\treturn false;\n\t\
    }\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5kvq9wlb.php:45\n\
    Stack trace:\n#0 /tmp/tmp5kvq9wlb.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp5kvq9wlb.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if($n < 2) {\n        return false;\n    }\n    if($n == 2) {\n        return\
    \ true;\n    }\n    for($i = 2; $i < $n; $i++) {\n        if($n % $i == 0) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    // The number 1 is not a prime number.\n    if ($n == 1) {\n        return\
    \ false;\n    }\n    // 2 is the first prime number.\n    if ($n == 2) {\n   \
    \     return true;\n    }\n    // The number n is not a prime number if it is\
    \ divisible by any number between 2 and sqrt(n).\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0)\
    \ {\n            $count++;\n        }\n    }\n    if ($count == 2) {\n       \
    \ return true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 0) {\n        return False;\n    }\n    $i = 2;\n    while ($i\
    \ < $n) {\n        if ($n % $i == 0) {\n            return False;\n        }\n\
    \        $i += 1;\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpxv2s44.php:42\n\
    Stack trace:\n#0 /tmp/tmpxpxv2s44.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpxpxv2s44.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n === 1) {\n        return false;\n    }\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i === 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) return false;\n    if ($n === 2) return true;\n    for ($i =\
    \ 2; $i < $n; $i++) {\n        if ($n % $i === 0) return false;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    $upper_limit = sqrt($n);\n\
    \    for ($i = 2; $i <= $upper_limit; $i++) {\n        if ($n % $i == 0) {\n \
    \           return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bslpi4_.php:26\n\
    Stack trace:\n#0 /tmp/tmp_bslpi4_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_bslpi4_.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    // first rule out the easy cases\n    if ($n == 1) {\n        return false;\n\
    \    } else if ($n == 2) {\n        return true;\n    } else if ($n == 3) {\n\
    \        return true;\n    } else if ($n == 4) {\n        return false;\n    }\n\
    \    // now handle the more difficult cases\n    else {\n        for ($i = 2;\
    \ $i < $n; $i++) {\n            if ($n % $i == 0) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn False;\n\t}\n\tif ($n == 2) {\n\t\treturn True;\n\
    \t}\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn False;\n\
    \t\t}\n\t}\n\treturn True;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n == 1) return false;\n\t$isPrime = true;\n\tfor ($i = 2; $i < $n; $i++)\
    \ {\n\t\tif ($n % $i == 0) {\n\t\t\t$isPrime = false;\n\t\t\tbreak;\n\t\t}\n\t\
    }\n\treturn $isPrime;\n}\n\nvar_dump(is_prime(4));\nvar_dump(is_prime(6));\nvar_dump(is_prime(8));\n\
    var_dump(is_prime(7));\nvar_dump(is_prime(9));\nvar_dump(is_prime(11));\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "bool(false)\nbool(false)\nbool(false)\nbool(true)\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $i = 2;\n    while ($i <\
    \ $n) {\n        if ($n % $i == 0) {\n            return false;\n        }\n \
    \       $i++;\n    }\n    return true;\n}\nvar_dump(is_prime(101));\nvar_dump(is_prime(4));\n\
    var_dump(is_prime(11));\nvar_dump(is_prime(6));\nvar_dump(is_prime(1));\nvar_dump(is_prime(13441));\n\
    var_dump(is_prime(61));\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(true)\nbool(false)\nbool(false)\nbool(true)\n\
    bool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n === 1) {\n\t\treturn false;\n\t}\n\t$factor = 2;\n\twhile ($factor *\
    \ $factor <= $n) {\n\t\tif ($n % $factor === 0) {\n\t\t\treturn false;\n\t\t}\n\
    \t\t$factor += 1;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n <= 1) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i < $n; $i++) {\n\t\t\
    if ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n == 1) {\n    return false;\n  }\n  for ($i = 2; $i <= sqrt($n); $i++)\
    \ {\n    if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  // TODO: Implement!\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpngzz4puf.php:25\n\
    Stack trace:\n#0 /tmp/tmpngzz4puf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpngzz4puf.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    } elseif ($n == 2) {\n       \
    \ return true;\n    }\n    for ($i = 2; $i <= sqrt($n); $i++) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n === 2) {\n\t\treturn true;\n\t} elseif ($n % 2 === 0 || $n < 2) {\n\t\
    \treturn false;\n\t} else {\n\t\t$sqrt_limit = sqrt($n);\n\t\tfor ($x = 3; $x\
    \ <= $sqrt_limit; $x += 2) {\n\t\t\tif ($n % $x === 0) {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\nfunction candidate(...$args) {\n   \
    \ return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  // hint: use the modulo operator\n  if ($n == 1) {\n    return false;\n  }\
    \ else {\n    for ($i = 2; $i < $n; $i++) {\n      if ($n % $i == 0) {\n     \
    \   return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    $divisor = 2;\n    while\
    \ ($divisor < $n) {\n        if ($n % $divisor == 0) {\n            return false;\n\
    \        }\n        $divisor += 1;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $ans = true;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0)\
    \ {\n            $ans = false;\n            break;\n        }\n    }\n    return\
    \ $ans;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxrxf2nhu.php:38\n\
    Stack trace:\n#0 /tmp/tmpxrxf2nhu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxrxf2nhu.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 1) {\n    return false;\n  }\n  for ($i = 2; $i < $n; $i++) {\n  \
    \  if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tojd2b1.php:39\n\
    Stack trace:\n#0 /tmp/tmp4tojd2b1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp4tojd2b1.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i <= sqrt($n); $i++)\
    \ {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\necho is_prime(61) ? \"True\" : \"False\";\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'True'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho \"Prime numbers between 1 and 100: <br/>\";\nfor\
    \ ($i = 1; $i <= 100; $i++) {\n    if (is_prime($i)) {\n        echo $i . \"<br/>\"\
    ;\n    }\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: 'Prime numbers between 1 and 100: <br/>2<br/>3<br/>5<br/>7<br/>11<br/>13<br/>17<br/>19<br/>23<br/>29<br/>31<br/>37<br/>41<br/>43<br/>47<br/>53<br/>59<br/>61<br/>67<br/>71<br/>73<br/>79<br/>83<br/>89<br/>97<br/>'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n <= 1) {\n\t\treturn false;\n\t}\n\tif ($n == 2) {\n\t\treturn true;\n\
    \t}\n\tif ($n % 2 == 0) {\n\t\treturn false;\n\t}\n\tfor ($i = 3; $i < $n; $i++)\
    \ {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n == 2) {\n    return true;\n  } else if ($n <= 1 || $n % 2 == 0) {\n\
    \    return false;\n  } else {\n    for ($i = 3; $i < $n; $i += 2) {\n      if\
    \ ($n % $i == 0) {\n        return false;\n      }\n    }\n    return true;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t$i = 1;\n\t$ceiling = ceil(sqrt($n));\n\t$factors = array();\n\twhile($i <=\
    \ $ceiling) {\n\t\tif($n % $i == 0) {\n\t\t\tarray_push($factors, $i);\n\t\t}\n\
    \t\t$i++;\n\t}\n\t$factor_count = count($factors);\n\tif($factor_count < 3) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho is_prime(61);\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2ezmmuv.php:45\n\
    Stack trace:\n#0 /tmp/tmpg2ezmmuv.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpg2ezmmuv.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  $prime = True;\n  if ($n == 1) {\n    $prime = False;\n  }\n  for ($i = 2;\
    \ $i < $n; $i++) {\n    if ($n % $i == 0) {\n      $prime = False;\n    }\n  }\n\
    \  return $prime;\n}\necho is_prime(4);\necho \"\\n\";\necho is_prime(7);\necho\
    \ \"\\n\";\necho is_prime(9);\necho \"\\n\";\necho is_prime(3);\necho \"\\n\"\
    ;\necho is_prime(1);\necho \"\\n\";\necho is_prime(6);\necho \"\\n\";\necho is_prime(11);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\n1\n\n1\n\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif($n == 1) {\n\t\treturn false;\n\t}\n\n\t$i = 2;\n\twhile($i < $n) {\n\t\t\
    if($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t\t$i++;\n\t}\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if($n==1) {\n    return false;\n  } elseif($n==2) {\n    return true;\n  }\
    \ else {\n    for($i=2; $i<$n; $i++) {\n      if($n%$i==0) {\n        return false;\n\
    \      }\n    }\n    return true;\n  }\n}\n\necho(is_prime(101));\necho(is_prime(4));\n\
    echo(is_prime(1));\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n < 2) return false;\n\tfor ($i = 2; $i <= sqrt($n); $i++) {\n\t\tif ($n\
    \ % $i == 0) return false;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  $i = 2;\n  while ($i <= sqrt($n))\
    \ {\n    if ($n % $i == 0) {\n      return false;\n    }\n    $i++;\n  }\n  return\
    \ true;\n}\necho is_prime(6) . \"\\n\";\necho is_prime(101) . \"\\n\";\necho is_prime(11)\
    \ . \"\\n\";\necho is_prime(13441) . \"\\n\";\necho is_prime(61) . \"\\n\";\n\
    echo is_prime(4) . \"\\n\";\necho is_prime(1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n1\n1\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) return false;\n    if ($n == 2) return true;\n    if ($n % 2\
    \ == 0) return false;\n    $i = 3;\n    while ($i * $i <= $n) {\n        if ($n\
    \ % $i == 0) return false;\n        $i += 2;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\necho is_prime(6) . \"<br>\";\necho is_prime(101)\
    \ . \"<br>\";\necho is_prime(11) . \"<br>\";\necho is_prime(13441) . \"<br>\"\
    ;\necho is_prime(61) . \"<br>\";\necho is_prime(4) . \"<br>\";\necho is_prime(1)\
    \ . \"<br>\";\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "<br>1<br>1<br>1<br>1<br><br>1<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpsf53s0j1.php:45\nStack trace:\n#0 /tmp/tmpsf53s0j1.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsf53s0j1.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n <= 1) {\n    return false;\n  }\n  if ($n === 2) {\n    return true;\n\
    \  }\n  if ($n % 2 === 0) {\n    return false;\n  }\n  $s = sqrt($n);\n  for ($i\
    \ = 3; $i <= $s; $i+=2) {\n    if ($n % $i === 0) {\n      return false;\n   \
    \ }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn false;\n\t}\n\t$i = 2;\n\twhile ($i < $n) {\n\t\t\
    if ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t\t$i += 1;\n\t}\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t$p = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif($n % $i == 0) {\n\t\t\t\
    $p = false;\n\t\t}\n\t}\n\treturn $p;\n}\n\nfunction candidate(...$args) {\n \
    \   return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluukenon.php:38\n\
    Stack trace:\n#0 /tmp/tmpluukenon.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpluukenon.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  // Write your code here...\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppxwygjm4.php:25\n\
    Stack trace:\n#0 /tmp/tmppxwygjm4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppxwygjm4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n === 2) {\n        return True;\n    } else if ($n < 2 || $n % 2 ===\
    \ 0) {\n        return False;\n    }\n    $limit = ceil(sqrt($n));\n    for ($i\
    \ = 3; $i <= $limit; $i++) {\n        if ($n % $i === 0) {\n            return\
    \ False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    // Function implementation goes here\n    for ($i = 2; $i <= $n/2; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_v1wd5e.php:37\n\
    Stack trace:\n#0 /tmp/tmpw_v1wd5e.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpw_v1wd5e.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if($n < 2) {\n    return false;\n  }\n  $x = 2;\n  while($x < $n) {\n    if($n\
    \ % $x == 0) {\n      return false;\n    }\n    $x++;\n  }\n  return true;\n}\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n == 1 || $n == 0) {\n    return false;\n  }\n  for ($i = 2; $i <= $n\
    \ / 2; $i++) {\n    if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphskcwlau.php:26\n\
    Stack trace:\n#0 /tmp/tmphskcwlau.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphskcwlau.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n > 1) {\n    $smaller = [1];\n    for ($i = 2; $i < $n; $i++) {\n   \
    \   if ($n % $i == 0) {\n        array_push($smaller, $i);\n      }\n    }\n \
    \   if (count($smaller) == 1) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n\nvar_dump(is_prime(6));\nvar_dump(is_prime(101));\nvar_dump(is_prime(11));\n\
    var_dump(is_prime(13441));\nvar_dump(is_prime(61));\nvar_dump(is_prime(4));\n\
    var_dump(is_prime(1));\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\nbool(true)\nbool(true)\nbool(true)\nbool(false)\n\
    bool(false)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  // Time: O(n)\n  // Space: O(1)\n  for ($i = 2; $i < $n; $i++) {\n    if ($n\
    \ % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzkx1u4ue.php:39\n\
    Stack trace:\n#0 /tmp/tmpzkx1u4ue.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzkx1u4ue.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 2) {\n        return true;\n    }\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcfk6qme.php:39\n\
    Stack trace:\n#0 /tmp/tmpfcfk6qme.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpfcfk6qme.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t$i = 2;\n\tif($n <= 1) {\n\t\treturn false;\n\t}\n\twhile ($i < $n) {\n\t\t\
    if($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t\t$i++;\n\t}\n\treturn true;\n\
    }\necho is_prime(6) . PHP_EOL;\necho is_prime(101) . PHP_EOL;\necho is_prime(11)\
    \ . PHP_EOL;\necho is_prime(13441) . PHP_EOL;\necho is_prime(61) . PHP_EOL;\n\
    echo is_prime(4) . PHP_EOL;\necho is_prime(1) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n1\n1\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t$square_root = sqrt($n);\n\tfor ($i = 2; $i <= $square_root; $i++) {\n\t\tif\
    \ ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoi751rnk.php:37\n\
    Stack trace:\n#0 /tmp/tmpoi751rnk.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpoi751rnk.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    if ($n == 2) {\n      \
    \  return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    for ($i = 3; $i <= sqrt($n); $i += 2) {\n        if ($n % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return False;\n    }\n    for ($i = 2; $i <= $n/2;\
    \ $i++) {\n        if ($n % $i == 0) {\n            return False;\n        }\n\
    \    }\n    return True;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if($n < 2) return false;\n    $divisor = 2;\n    while ($divisor <= $n /\
    \ 2) {\n        if($n % $divisor == 0) {\n            return false;\n        }\n\
    \        $divisor += 1;\n    }\n    return true;\n}\necho is_prime(6) . PHP_EOL;\n\
    echo is_prime(101) . PHP_EOL;\necho is_prime(11) . PHP_EOL;\necho is_prime(13441)\
    \ . PHP_EOL;\necho is_prime(61) . PHP_EOL;\necho is_prime(4) . PHP_EOL;\necho\
    \ is_prime(1) . PHP_EOL;\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\n1\n1\n1\n1\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  // this function works by dividing the number by all prime numbers\n  // between\
    \ 2 and the square root of the number. If any divides it, it\n  // is not prime.\n\
    \  // If no divisor is found between 2 and the square root, then the\n  // number\
    \ is prime.\n  if ($n == 1) {\n    return false;\n  }\n  $root = sqrt($n);\n \
    \ for ($i = 2; $i <= $root; $i++) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $i = 2;\n    $prime = true;\n    if ($n == 1) {\n        $prime = false;\n\
    \    }\n    else {\n        while($i < $n) {\n            if ($n % $i == 0) {\n\
    \                $prime = false;\n                break;\n            }\n    \
    \        $i++;\n        }\n    }\n    return $prime;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  for ($x = 2; $x < $n; $x++) {\n    if ($n % $x == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qll_qoi.php:37\n\
    Stack trace:\n#0 /tmp/tmp0qll_qoi.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0qll_qoi.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  $n = intval($n);\n  if ($n == 1) {\n    return False;\n  }\n  for ($i = 2;\
    \ $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return False;\n    }\n  }\n\
    \  return True;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n > 1) {\n\t\tif ($n == 2) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\t\
    for ($i = 2; $i < $n; $i++) {\n\t\t\t\tif ($n % $i == 0) {\n\t\t\t\t\treturn false;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\treturn false;\n\
    \t}\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n == 1) return false;\n  if ($n == 2) return true;\n  if ($n % 2 == 0)\
    \ return false;\n  if ($n % 3 == 0) return false;\n  if ($n % 5 == 0) return false;\n\
    \  if ($n % 7 == 0) return false;\n  if ($n % 11 == 0) return false;\n  if ($n\
    \ % 13 == 0) return false;\n  if ($n % 17 == 0) return false;\n  if ($n % 19 ==\
    \ 0) return false;\n  if ($n % 23 == 0) return false;\n  if ($n % 29 == 0) return\
    \ false;\n  if ($n % 31 == 0) return false;\n  if ($n % 37 == 0) return false;\n\
    \  if ($n % 41 == 0) return false;\n  if ($n % 43 == 0) return false;\n  if ($n\
    \ % 47 == 0) return false;\n  if ($n % 53 == 0) return false;\n  if ($n % 59 ==\
    \ 0) return false;\n  if ($n % 61 == 0) return false;\n  if ($n % 67 == 0) return\
    \ false;\n  if ($n % 71 == 0) return false;\n  if ($n % 73 == 0) return false;\n\
    \  if ($n % 79 == 0) return false;\n  if ($n % 83 == 0) return false;\n  if ($n\
    \ % 89 == 0) return false;\n  if ($n % 97 == 0) return false;\n  return true;\n\
    }\n\n$a = [6, 101, 11, 13441, 61, 4, 1];\nfor ($i = 0; $i < count($a); $i++) {\n\
    \  $n = $a[$i];\n  $r = is_prime($n);\n  print $n . \" \" . $r . \"\\n\";\n}\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6 \n101 1\n11 \n13441 1\n61 \n4 \n1 \n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp8kct2q8g.php:61\nStack trace:\n#0 /tmp/tmp8kct2q8g.php(74):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8kct2q8g.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t$i = 2;\n\tif ($n === 1 || $n === 2) {\n\t\treturn true;\n\t}\n\twhile ($i <\
    \ $n) {\n\t\tif ($n % $i === 0) {\n\t\t\treturn false;\n\t\t}\n\t\t$i += 1;\n\t\
    }\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4uvxi4_4.php:42\n\
    Stack trace:\n#0 /tmp/tmp4uvxi4_4.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp4uvxi4_4.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i <= $n /\
    \ 2; $i++) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn FALSE;\n\
    \t\t}\n\t}\n\treturn TRUE;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpseuncbqb.php:37\n\
    Stack trace:\n#0 /tmp/tmpseuncbqb.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpseuncbqb.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n == 2) {\n\t\treturn True;\n\t}\n\tif ($n % 2 == 0) {\n\t\treturn False;\n\
    \t}\n\tif ($n < 2) {\n\t\treturn False;\n\t}\n\tfor ($i = 3; $i < sqrt($n) + 1;\
    \ $i += 2) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn False;\n\t\t}\n\t}\n\treturn\
    \ True;\n}\n\necho is_prime(1) . \"\\n\";\necho is_prime(2) . \"\\n\";\necho is_prime(3)\
    \ . \"\\n\";\necho is_prime(4) . \"\\n\";\necho is_prime(5) . \"\\n\";\necho is_prime(6)\
    \ . \"\\n\";\necho is_prime(7) . \"\\n\";\necho is_prime(8) . \"\\n\";\necho is_prime(9)\
    \ . \"\\n\";\necho is_prime(13441) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n\n1\n\n1\n\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $i = 2;\n    while ($i < $n) {\n        if ($n % $i == 0) {\n           \
    \ return false;\n        }\n        $i += 1;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_t5i7c45.php:39\n\
    Stack trace:\n#0 /tmp/tmp_t5i7c45.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_t5i7c45.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = (int)$n;\n    if ($n < 2) {\n        return false;\n    } else if ($n\
    \ === 2) {\n        return true;\n    } else if ($n % 2 === 0) {\n        return\
    \ false;\n    }\n    for ($i = 3; $i <= sqrt($n); $i++) {\n        if ($n % $i\
    \ === 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t// throw new Exception('Foo');\n\t// Your code here.\n\t// return ($n >= 1 &&\
    \ $n <= 10000) && $n % 2 == 0;\n\treturn ($n >= 1 && $n <= 10000) && ($n == 2\
    \ || ($n % 2 != 0 && is_prime_helper($n, $n - 1)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime_helper()\
    \ in /tmp/tmpby3xm0_0.php:21\nStack trace:\n#0 /tmp/tmpby3xm0_0.php(25): is_prime(101)\n\
    #1 /tmp/tmpby3xm0_0.php(30): candidate(101)\n#2 /tmp/tmpby3xm0_0.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpby3xm0_0.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\n$n = readline('Enter a number to check if it\
    \ is prime: ');\n\nif (is_prime($n)) {\n  echo \"$n is prime.\";\n} else {\n \
    \ echo \"$n is not prime.\";\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function readline() in\
    \ /tmp/tmpbglfiabj.php:26\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpbglfiabj.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2gtglm6.php:25\n\
    Stack trace:\n#0 /tmp/tmpk2gtglm6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpk2gtglm6.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n == 2) {\n    return true;\n  }\n  if ($n < 2 || $n % 2 == 0) {\n   \
    \ return false;\n  }\n  for ($i = 3; $i <= sqrt($n); $i += 2) {\n    if ($n %\
    \ $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\necho is_prime(6)\
    \ . PHP_EOL;\necho is_prime(101) . PHP_EOL;\necho is_prime(11) . PHP_EOL;\necho\
    \ is_prime(13441) . PHP_EOL;\necho is_prime(61) . PHP_EOL;\necho is_prime(4) .\
    \ PHP_EOL;\necho is_prime(1) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n1\n1\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  $divisor = 2;\n  while ($divisor <= ($n / 2)) {\n    if ($n % $divisor == 0)\
    \ {\n      return false;\n    }\n    $divisor += 1;\n  }\n  return true;\n}\n\
    $n = 8;\nif (is_prime($n)) {\n  echo $n . \" is prime\\n\";\n} else {\n  echo\
    \ $n . \" is not prime\\n\";\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "8 is not prime\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslb4p305.php:44\n\
    Stack trace:\n#0 /tmp/tmpslb4p305.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpslb4p305.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif($n <= 1) {\n\t\treturn false;\n\t}\n\telse if($n == 2) {\n\t\treturn true;\n\
    \t}\n\telse {\n\t\tfor($i = 2; $i < $n; $i++) {\n\t\t\tif($n % $i == 0) {\n\t\t\
    \t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $counter = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i ==\
    \ 0) {\n            $counter += 1;\n        }\n    }\n    if ($counter == 2) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  // Write your code here\n  // To print results to the standard output you can\
    \ use print\n  // Example: print \"Hello world!\";\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdi74lmsw.php:40\n\
    Stack trace:\n#0 /tmp/tmpdi74lmsw.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpdi74lmsw.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif($n <= 1) {\n\t\treturn false;\n\t}\n\tif($n == 2) {\n\t\treturn true;\n\t\
    }\n\tif($n % 2 == 0) {\n\t\treturn false;\n\t}\n\tfor($i = 3; $i <= sqrt($n);\
    \ $i += 2) {\n\t\tif($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    } else if ($n == 2) {\n      \
    \  return true;\n    } else {\n        // range(start, stop[, step])\n       \
    \ for ($i = 2; $i < $n; $i++) {\n            if ($n % $i == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n    }\n}\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    $result = true;\n    for\
    \ ($i = 2; $i <= $n/2; $i++) {\n        if ($n % $i == 0) {\n            $result\
    \ = false;\n            break;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif($n < 2) {\n\t\treturn false;\n\t}\n\tfor($i = 2; $i < $n; $i++) {\n\t\tif($n\
    \ % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n$num = 9;\n\
    print(is_prime($num));\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $p = true;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0)\
    \ {\n            $p = false;\n            break;\n        }\n    }\n    return\
    \ $p;\n}\n\necho is_prime(6).\"\\n\";\necho is_prime(101).\"\\n\";\necho is_prime(11).\"\
    \\n\";\necho is_prime(13441).\"\\n\";\necho is_prime(61).\"\\n\";\necho is_prime(4).\"\
    \\n\";\necho is_prime(1).\"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n1\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyrt1wgha.php:46\n\
    Stack trace:\n#0 /tmp/tmpyrt1wgha.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpyrt1wgha.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  //base case\n  if ($n < 1) {\n    return False;\n  }\n\n  //base case\n  if\
    \ ($n === 1) {\n    return False;\n  }\n\n  //base case\n  if ($n === 2) {\n \
    \   return True;\n  }\n\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i ===\
    \ 0) {\n      return False;\n    }\n  }\n  return True;\n}\n\necho is_prime(4);\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if($n === 1){\n        return false;\n    }\n    for($i = 2; $i < $n; $i++){\n\
    \        if($n % $i === 0){\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  // $first_n_primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997];\n  // if (in_array($n, $first_n_primes))\
    \ {\n  //   return true;\n  // }\n  if ($n == 2) {\n    return true;\n  }\n  if\
    \ ($n < 2 || $n % 2 == 0) {\n    return false;\n  }\n  for ($i = 3; $i < $n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbk6r6ftt.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    $limit = floor(sqrt($n));\n\
    \    for ($i = 2; $i <= $limit; $i++) {\n        if ($n % $i == 0) {\n       \
    \     return false;\n        }\n    }\n    return true;\n}\n\nvar_dump(is_prime(6));\n\
    var_dump(is_prime(101));\nvar_dump(is_prime(11));\nvar_dump(is_prime(13441));\n\
    var_dump(is_prime(61));\nvar_dump(is_prime(4));\nvar_dump(is_prime(1));\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\nbool(true)\nbool(true)\nbool(true)\nbool(false)\n\
    bool(false)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n <= 1) {\n    return false;\n  }\n  if ($n % 2 == 0 && $n > 2) {\n  \
    \  return false;\n  }\n  for ($i = 3; $i < $n; $i++) {\n    if ($n % $i == 0)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n == 1 || $n == 2) {\n    return false;\n  }\n  for ($i = 2; $i < $n;\
    \ $i++) {\n    if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\necho is_prime(1) . \"\\n\";\necho is_prime(2) . \"\\n\";\necho is_prime(4)\
    \ . \"\\n\";\necho is_prime(11) . \"\\n\";\necho is_prime(61) . \"\\n\";\necho\
    \ is_prime(12121) . \"\\n\";\necho is_prime(1212) . \"\\n\";\necho is_prime(121212)\
    \ . \"\\n\";\necho is_prime(12121212) . \"\\n\";\necho is_prime(7) . \"\\n\";\n\
    echo is_prime(101) . \"\\n\";\necho is_prime(0) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n1\n1\n\n\n\n\n1\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n == 1 || $n == 2) {\n    return True;\n  } elseif ($n > 2) {\n    for\
    \ ($i = 2; $i < $n; $i++) {\n      if ($n % $i == 0) {\n        return False;\n\
    \      }\n    }\n    return True;\n  }\n}\n\necho is_prime(1);\necho is_prime(2);\n\
    echo is_prime(4);\necho is_prime(6);\necho is_prime(13441);\necho is_prime(11);\n\
    echo is_prime(101);\necho is_prime(61);\necho is_prime(13441);\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1111111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61hc7fzj.php:51\n\
    Stack trace:\n#0 /tmp/tmp61hc7fzj.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp61hc7fzj.php\
    \ on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $prime = true;\n    if ($n < 2) {\n        $prime = false;\n    } else {\n\
    \        for ($i = 2; $i < $n; $i++) {\n            if ($n % $i == 0) {\n    \
    \            $prime = false;\n            }\n        }\n    }\n    return $prime;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    // Fill this in.\n    $i = 2;\n    if($n == 1) {\n        return false;\n\
    \    }\n    while($i < $n){\n        if(!($n % $i)){\n            return false;\n\
    \        }\n        $i++;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    $i = 2;\n    while ($i\
    \ < $n) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \        $i++;\n    }\n    return true;\n}\nfunction candidate(...$args) {\n \
    \   return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq5coky8r.php:37\n\
    Stack trace:\n#0 /tmp/tmpq5coky8r.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpq5coky8r.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n <= 1) {\n\t\treturn false;\n\t}\n\tif ($n == 2) {\n\t\treturn true;\n\
    \t}\n\tif ($n % 2 == 0) {\n\t\treturn false;\n\t}\n\tfor ($i = 3; $i < $n; $i++)\
    \ {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 2 || $n == 3) {\n        return true;\n    } else if ($n < 2 ||\
    \ $n % 2 == 0) {\n        return false;\n    } else {\n        for ($i = 3; $i\
    \ < $n; $i += 2) {\n            if ($n % $i == 0) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn False;\n\t}\n\telse {\n\t\tfor ($i = 2; $i < sqrt($n);\
    \ $i++) {\n\t\t\tif ($n % $i == 0) {\n\t\t\t\treturn False;\n\t\t\t}\n\t\t}\n\t\
    \treturn True;\n\t}\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoaqtd_d5.php:41\n\
    Stack trace:\n#0 /tmp/tmpoaqtd_d5.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpoaqtd_d5.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n    for ($i = 2; $i <= $n /\
    \ 2; $i++) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif($n <= 0 || $n == 1){\n\t\treturn false;\n\t}\n\n\tfor($i = 2; $i <= $n; $i++){\n\
    \t\tif($n % $i == 0){\n\t\t\tif($i == $n){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\
    \treturn false;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t// if ($n == 2 || $n == 3) {\n\t// \treturn true;\n\t// } else if ($n % 2 ==\
    \ 0 || $n % 3 == 0) {\n\t// \treturn false;\n\t// }\n\t// for ($i = 5; $i <= sqrt($n);\
    \ $i++) {\n\t// \tif ($n % $i == 0) {\n\t// \t\treturn false;\n\t// \t}\n\t//\
    \ }\n\t// return true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0)\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzpli77mj.php:48\n\
    Stack trace:\n#0 /tmp/tmpzpli77mj.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpzpli77mj.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if($n == 1) {\n        return False;\n    }\n    for($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if($n % $i == 0) {\n            return False;\n        }\n\
    \    }\n    return True;\n}\n\n\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $is_prime = true;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            $is_prime = false;\n            break;\n        }\n   \
    \ }\n    return $is_prime;\n}\n\necho is_prime(1) . \"<br>\";\necho is_prime(4)\
    \ . \"<br>\";\necho is_prime(61) . \"<br>\";\necho is_prime(13441) . \"<br>\"\
    ;\necho is_prime(11) . \"<br>\";\necho is_prime(101) . \"<br>\";\necho is_prime(6)\
    \ . \"<br>\";\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1<br><br>1<br>1<br>1<br>1<br><br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp1mfa2oq5.php:47\nStack trace:\n#0 /tmp/tmp1mfa2oq5.php(56):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1mfa2oq5.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t$r = 2;\n\t$sqr = (int) sqrt($n);\n\twhile ($r <= $sqr) {\n\t\tif ($n % $r ==\
    \ 0) {\n\t\t\treturn false;\n\t\t}\n\t\t$r++;\n\t}\n\treturn true;\n}\n\necho\
    \ \"is_prime(6) : \";\nvar_dump(is_prime(6));\necho \"is_prime(101) : \";\nvar_dump(is_prime(101));\n\
    echo \"is_prime(11) : \";\nvar_dump(is_prime(11));\necho \"is_prime(13441) : \"\
    ;\nvar_dump(is_prime(13441));\necho \"is_prime(61) : \";\nvar_dump(is_prime(61));\n\
    echo \"is_prime(4) : \";\nvar_dump(is_prime(4));\necho \"is_prime(1) : \";\nvar_dump(is_prime(1));\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "is_prime(6) : bool(false)\nis_prime(101) : bool(true)\nis_prime(11) : bool(true)\n\
    is_prime(13441) : bool(true)\nis_prime(61) : bool(true)\nis_prime(4) : bool(false)\n\
    is_prime(1) : bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplpgx624u.php:55\n\
    Stack trace:\n#0 /tmp/tmplpgx624u.php(64): test()\n#1 {main}\n  thrown in /tmp/tmplpgx624u.php\
    \ on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $is_prime = true;\n    if ($n < 2) {\n        $is_prime = false;\n    } else\
    \ {\n        for ($i = 2; $i <= $n/2; $i++) {\n            if ($n % $i == 0) {\n\
    \                $is_prime = false;\n                break;\n            }\n \
    \       }\n    }\n    return $is_prime;\n}\necho is_prime(6) . \"<br>\";\necho\
    \ is_prime(101) . \"<br>\";\necho is_prime(11) . \"<br>\";\necho is_prime(13441)\
    \ . \"<br>\";\necho is_prime(61) . \"<br>\";\necho is_prime(4) . \"<br>\";\necho\
    \ is_prime(1) . \"<br>\";\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: <br>1<br>1<br>1<br>1<br><br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return False;\n  }\n  $i = 2;\n  while ($i < $n) {\n   \
    \ if ($n % $i == 0) {\n      return False;\n    }\n    $i += 1;\n  }\n  return\
    \ True;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\n$num = $_GET['number'];\n\nif (is_prime($num))\
    \ {\n    echo 'true';\n} else {\n    echo 'false';\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'false'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qbaac8g.php:37\n\
    Stack trace:\n#0 /tmp/tmp0qbaac8g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0qbaac8g.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmple2jpb_m.php:37\n\
    Stack trace:\n#0 /tmp/tmple2jpb_m.php(46): test()\n#1 {main}\n  thrown in /tmp/tmple2jpb_m.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n <= 1) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i <= sqrt($n); $i++)\
    \ {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\n$numbers = array(6, 101, 11, 13441, 61, 4, 1);\nforeach ($numbers as $n)\
    \ {\n\techo $n . ' is a prime: ' . (is_prime($n) ? 'True' : 'False') . '<br>';\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6 is a prime: False<br>101 is a prime: True<br>11 is a prime: True<br>13441
    is a prime: True<br>61 is a prime: True<br>4 is a prime: False<br>1 is a prime:
    False<br>'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i <= $n - 1; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\necho is_prime(61) . PHP_EOL;\necho is_prime(4)\
    \ . PHP_EOL;\necho is_prime(1) . PHP_EOL;\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0ahnqxd.php:40\n\
    Stack trace:\n#0 /tmp/tmpx0ahnqxd.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpx0ahnqxd.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if($n == 1) {\n        return false;\n    }\n    for($i = 2; $i < $n; $i++)\
    \ {\n        if($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho is_prime(6) . \"\\n\";\necho is_prime(101) . \"\\\
    n\";\necho is_prime(11) . \"\\n\";\necho is_prime(13441) . \"\\n\";\necho is_prime(61)\
    \ . \"\\n\";\necho is_prime(4) . \"\\n\";\necho is_prime(1) . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\n1\n1\n1\n1\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n == 1) {\n    return false;\n  }\n  for ($i = 2; $i <= $n / 2; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkh7mccu5.php:26\n\
    Stack trace:\n#0 /tmp/tmpkh7mccu5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkh7mccu5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  for ($i = 2; $i < $n; $i++) {\n  \
    \  if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t// your code here\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_9su0va.php:26\n\
    Stack trace:\n#0 /tmp/tmp9_9su0va.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9_9su0va.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $isPrime = true;\n    $i = 2;\n    if($n == 1) {\n        $isPrime = false;\n\
    \    } else {\n        while ($i <= $n/2) {\n            if ($n % $i == 0) {\n\
    \                $isPrime = false;\n                break;\n            }\n  \
    \          $i++;\n        }\n    }\n    return $isPrime;\n}\n\nif (is_prime(3))\
    \ {\n    echo \"it's a prime number\\n\";\n} else {\n    echo \"it's not a prime\
    \ number\\n\";\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "it's a prime number\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n == 2 || $n == 3) {\n    return true;\n  }\n  if ($n % 2 == 0 || $n %\
    \ 3 == 0) {\n    return false;\n  }\n  $i = 5;\n  $w = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      return false;\n    }\n    $i += $w;\n\
    \    $w = 6 - $w;\n  }\n  return true;\n}\n\necho is_prime(6);\necho \"\\n\";\n\
    echo is_prime(101);\necho \"\\n\";\necho is_prime(11);\necho \"\\n\";\necho is_prime(13441);\n\
    echo \"\\n\";\necho is_prime(61);\necho \"\\n\";\necho is_prime(4);\necho \"\\\
    n\";\necho is_prime(1);\necho \"\\n\";\n\nfunction candidate(...$args) {\n   \
    \ return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n1\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgfhvwklm.php:62\n\
    Stack trace:\n#0 /tmp/tmpgfhvwklm.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpgfhvwklm.php\
    \ on line 62\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i <= sqrt($n); $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyle_8fbw.php:36\n\
    Stack trace:\n#0 /tmp/tmpyle_8fbw.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyle_8fbw.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n == 1) return false;\n  if ($n < 4) return true;\n  if ($n % 2 == 0)\
    \ return false;\n  if ($n < 9) return true;\n  if ($n % 3 == 0) return false;\n\
    \  $r = floor(sqrt($n));\n  $f = 5;\n  while ($f <= $r) {\n    if ($n % $f ==\
    \ 0) return false;\n    if ($n % ($f + 2) == 0) return false;\n    $f += 6;\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t// If the value is 1, it is not prime.\n\tif ($n == 1) {\n\t\treturn false;\n\
    \t}\n\n\t// If the value is 2, it is prime.\n\tif ($n == 2) {\n\t\treturn true;\n\
    \t}\n\n\t// The value must be odd. If it is even, it is not prime.\n\tif ($n %\
    \ 2 == 0) {\n\t\treturn false;\n\t}\n\n\t// We should check all the values less\
    \ than n. We don't need to check 2 or n - 2, so we start with 3.\n\t// We don't\
    \ need to check over n/2, so we stop with n - 2.\n\t// We can skip all even numbers,\
    \ so we increment by 2.\n\tfor ($i = 3; $i < $n - 2; $i += 2) {\n\t\t// If n is\
    \ divisible by i, it is not prime.\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\n\t// We didn't find any numbers between 3 and n - 2 that are factors,\
    \ so it is prime.\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\necho is_prime(6) . PHP_EOL;\necho is_prime(101)\
    \ . PHP_EOL;\necho is_prime(11) . PHP_EOL;\necho is_prime(13441) . PHP_EOL;\n\
    echo is_prime(61) . PHP_EOL;\necho is_prime(4) . PHP_EOL;\necho is_prime(1) .\
    \ PHP_EOL;\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\n1\n1\n1\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz79x7cou.php:44\n\
    Stack trace:\n#0 /tmp/tmpz79x7cou.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpz79x7cou.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    // TODO: Implement me\n    if($n <= 1) {\n        return false;\n    }\n\
    \    if($n == 2) {\n        return true;\n    }\n    for($i = 2; $i < $n; $i++)\
    \ {\n        if($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn false;\n\t} else {\n\t\tfor ($i = 2; $i < $n; $i++)\
    \ {\n\t\t\tif ($n % $i == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn\
    \ true;\n\t}\n}\n\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return False;\n    } else {\n        for ($i = 2;\
    \ $i < $n; $i++) {\n            if ($n % $i == 0) {\n                return False;\n\
    \            }\n        }\n        return True;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i <= sqrt($n); $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\necho is_prime(61) . \"\\n\";\necho\
    \ is_prime(4) . \"\\n\";\necho is_prime(1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jw487jw.php:40\n\
    Stack trace:\n#0 /tmp/tmp8jw487jw.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp8jw487jw.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return False;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return False;\n        }\n    }\n\
    \    return True;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n === 1) {\n        return false;\n    }\n\n    $i = 2;\n    while ($i\
    \ * $i <= $n) {\n        if ($n % $i === 0) {\n            return false;\n   \
    \     }\n        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t$s = sqrt($n);\n\tfor ($i = 2; $i <= $s; $i++) {\n\t\tif ($n % $i == 0) {\n\t\
    \t\treturn False;\n\t\t}\n\t}\n\treturn True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprg0tmjem.php:38\n\
    Stack trace:\n#0 /tmp/tmprg0tmjem.php(47): test()\n#1 {main}\n  thrown in /tmp/tmprg0tmjem.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t$is_prime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\
    \t\t\t$is_prime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $is_prime;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx2fe0ymw.php:39\n\
    Stack trace:\n#0 /tmp/tmpx2fe0ymw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpx2fe0ymw.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return False;\n  }\n  for ($x = 2; $x < $n; $x++) {\n  \
    \  if ($n % $x == 0) {\n      return False;\n    }\n  }\n  return True;\n}\n\n\
    print(is_prime(6) . \"\\n\");\nprint(is_prime(101) . \"\\n\");\nprint(is_prime(11)\
    \ . \"\\n\");\nprint(is_prime(13441) . \"\\n\");\nprint(is_prime(61) . \"\\n\"\
    );\nprint(is_prime(4) . \"\\n\");\nprint(is_prime(1) . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n1\n1\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n === 2) {\n        return true;\n    }\n    if ($n % 2 === 0) {\n \
    \       return false;\n    }\n    for ($i = 3; $i < sqrt($n); $i += 2) {\n   \
    \     if ($n % $i === 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjukqvrgx.php:43\n\
    Stack trace:\n#0 /tmp/tmpjukqvrgx.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpjukqvrgx.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $i = 2;\n    while ($i < $n) {\n        if ($n % $i == 0) {\n           \
    \ return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkjoljla8.php:39\n\
    Stack trace:\n#0 /tmp/tmpkjoljla8.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpkjoljla8.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n\n  if ($n === 2) {\n    return true;\n\
    \  }\n\n  if ($n % 2 === 0) {\n    return false;\n  }\n\n  for ($i = 3; $i <=\
    \ sqrt($n); $i += 2) {\n    if ($n % $i === 0) {\n      return false;\n    }\n\
    \  }\n\n  return true;\n}\n\necho 'is_prime(6):' . PHP_EOL;\nvar_dump(is_prime(6));\n\
    echo 'is_prime(101):' . PHP_EOL;\nvar_dump(is_prime(101));\necho 'is_prime(11):'\
    \ . PHP_EOL;\nvar_dump(is_prime(11));\necho 'is_prime(13441):' . PHP_EOL;\nvar_dump(is_prime(13441));\n\
    echo 'is_prime(61):' . PHP_EOL;\nvar_dump(is_prime(61));\necho 'is_prime(4):'\
    \ . PHP_EOL;\nvar_dump(is_prime(4));\necho 'is_prime(1):' . PHP_EOL;\nvar_dump(is_prime(1));\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "is_prime(6):\nbool(false)\nis_prime(101):\nbool(true)\nis_prime(11):\n\
    bool(true)\nis_prime(13441):\nbool(true)\nis_prime(61):\nbool(true)\nis_prime(4):\n\
    bool(false)\nis_prime(1):\nbool(false)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $prime = true;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i ==\
    \ 0) {\n            $prime = false;\n        }\n    }\n    return $prime;\n}\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppn55qr59.php:38\n\
    Stack trace:\n#0 /tmp/tmppn55qr59.php(47): test()\n#1 {main}\n  thrown in /tmp/tmppn55qr59.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n === 1) {\n        return false;\n    }\n    $sq = sqrt($n);\n    for\
    \ ($i = 2; $i <= $sq; $i++) {\n        if ($n % $i === 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n\n    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    // Your code here\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            return False;\n        }\n    }\n    return True;\n}\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr65tknt_.php:37\n\
    Stack trace:\n#0 /tmp/tmpr65tknt_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpr65tknt_.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0wd3i8q.php:37\n\
    Stack trace:\n#0 /tmp/tmpr0wd3i8q.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpr0wd3i8q.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n < 2) {\n\t\treturn False;\n\t}\n\tfor ($i = 2; $i < $n; $i++) {\n\t\t\
    if ($n % $i == 0) {\n\t\t\treturn False;\n\t\t}\n\t}\n\treturn True;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t$div = 2;\n\twhile ($div < $n) {\n\t\tif ($n % $div == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t\t$div++;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppfwb9slk.php:39\n\
    Stack trace:\n#0 /tmp/tmppfwb9slk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmppfwb9slk.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n$n = 11;\necho \"check if {$n}\
    \ is prime: \";\necho is_prime($n) ? \"True\" : \"False\";\necho \"\\n\";\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "check if 11 is prime: True\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpy1amzhxz.php:41\nStack trace:\n#0 /tmp/tmpy1amzhxz.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpy1amzhxz.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if($n > 1) {\n        for($i = 2; $i <= sqrt($n); $i++) {\n            if($n\
    \ % $i == 0) {\n                return false;\n            }\n        }\n    \
    \    return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpomwls50y.php:37\n\
    Stack trace:\n#0 /tmp/tmpomwls50y.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpomwls50y.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkfoa6ve.php:37\n\
    Stack trace:\n#0 /tmp/tmprkfoa6ve.php(46): test()\n#1 {main}\n  thrown in /tmp/tmprkfoa6ve.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i <= ceil(sqrt($n));\
    \ $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return False;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return False;\n        }\n    }\n\
    \    return True;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n == 1 || $n == 2) {\n    return true;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6iksdtfw.php:40\n\
    Stack trace:\n#0 /tmp/tmp6iksdtfw.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp6iksdtfw.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn false;\n\t}\n\tif ($n == 2) {\n\t\treturn true;\n\
    \t}\n\tfor ($i = 2; $i <= $n / 2; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    // Fill in your code here.\n    if ($n < 2) {\n        return false;\n  \
    \  }\n    if ($n == 2) {\n        return true;\n    }\n    if ($n == 3) {\n  \
    \      return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n  \
    \  }\n    if ($n % 3 == 0) {\n        return false;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return false;\n    \
    \    }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i <= $n /\
    \ 2; $i++) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    if ($n == 2) {\n      \
    \  return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $max = sqrt($n);\n    for ($i = 3; $i <= $max; $i += 2) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \t// your code here\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkng28l4.php:25\n\
    Stack trace:\n#0 /tmp/tmprkng28l4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprkng28l4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    for ($i = 2; $i < $n;\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsum3zrg.php:37\n\
    Stack trace:\n#0 /tmp/tmpvsum3zrg.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvsum3zrg.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tfor ($x = 2; $x < $n; $x++) {\n\t\tif ($n % $x == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf38gbnpz.php:37\n\
    Stack trace:\n#0 /tmp/tmpf38gbnpz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpf38gbnpz.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \tif($n < 2) {\n\t\treturn false;\n\t}\n\tif($n == 2) {\n\t\treturn true;\n\t\
    }\n\tif($n % 2 == 0) {\n\t\treturn false;\n\t}\n\tfor($i = 3; $i <= sqrt($n);\
    \ $i += 2) {\n\t\tif($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

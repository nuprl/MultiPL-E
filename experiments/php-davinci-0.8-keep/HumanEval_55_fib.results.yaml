name: HumanEval_55_fib
language: php
results:
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\n\necho fib(10);\necho\
    \ fib(1);\necho fib(8);\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: '55121'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    $n1 = 0;\n    $n2 = 1;\n    for ($i = 2; $i <=\
    \ $n; $i++) {\n        $n3 = $n1 + $n2;\n        $n1 = $n2;\n        $n2 = $n3;\n\
    \    }\n    return $n2;\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\t$f = 1;\n\tfor ($i\
    \ = 2; $i <= $n; $i++) {\n\t\t$f = ($f * $i) % 1E9;\n\t}\n\treturn $f;\n}\n\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocpelt3l.php:22\n\
    Stack trace:\n#0 /tmp/tmpocpelt3l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpocpelt3l.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n <= 1) {\n \
    \   return $n;\n  }\n  $prev1 = 1;\n  $prev2 = 0;\n  for ($i = 2; $i <= $n; $i++)\
    \ {\n    $curr = $prev1 + $prev2;\n    $prev2 = $prev1;\n    $prev1 = $curr;\n\
    \  }\n  return $curr;\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $n1 = 0;\n    $n2\
    \ = 1;\n    for ($i = 0; $i < $n; $i++) {\n        $n3 = $n1 + $n2;\n        $n1\
    \ = $n2;\n        $n2 = $n3;\n    }\n    return $n1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n === 0) {\n\
    \        return 0;\n    }\n    if ($n === 1) {\n        return 1;\n    }\n   \
    \ return fib($n - 1) + fib($n - 2);\n}\necho fib(10);\necho fib(1);\necho fib(8);\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '55121'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\t$v = array(0, 1);\n\
    \tif ($n > 1) {\n\t\tfor ($i = 2; $i <= $n; $i++) {\n\t\t\t$v[$i] = $v[$i - 1]\
    \ + $v[$i - 2];\n\t\t}\n\t}\n\treturn $v[$n];\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n == 0) {\n\t\
    \treturn 0;\n\t}\n\tif ($n == 1) {\n\t\treturn 1;\n\t}\n\treturn fib($n - 1) +\
    \ fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 2) {\n\
    \        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\necho fib(10);\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '55'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  return $n <= 1 ? $n\
    \ : fib($n - 1) + fib($n - 2);\n}\n\necho fib(10) . \"\\n\";\necho fib(1) . \"\
    \\n\";\necho fib(8) . \"\\n\";\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) return\
    \ 0;\n  if ($n == 1) return 1;\n  return fib($n - 1) + fib($n - 2);\n}\n\n<<__EntryPoint>>\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_5k74123.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    }\n    if ($n == 1) {\n        return 1;\n    }\n    return\
    \ fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 2) {\n\
    \        return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif($n<3)\n\t\treturn\
    \ 1;\n\treturn fib($n-1)+fib($n-2);\n}\necho fib(10); //55\necho \"<br>\";\necho\
    \ fib(1); //1\necho \"<br>\";\necho fib(8); //21\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 55<br>1<br>21<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n <= 1) {\n \
    \   return $n;\n  }\n  return fib($n - 1) + fib($n - 2);\n}\n\n$fib_n = 10;\n\
    $result = fib($fib_n);\n\necho \"fib($fib_n) = $result\";\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: fib(10) = 55
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 2) return\
    \ $n;\n  return fib($n - 1) + fib($n - 2);\n}\n\nvar_dump(fib(10));\nvar_dump(fib(1));\n\
    var_dump(fib(8));\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "int(55)\nint(1)\nint(21)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  return (($n < 3) ?\
    \ 1 : fib($n - 1) + fib($n - 2));\n}\n\n<<__EntryPoint>>\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9b3p9gje.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 2) {\n  \
    \  return $n;\n  } else {\n    return fib($n - 1) + fib($n - 2);\n  }\n}\n\nvar_dump(fib(10));\n\
    var_dump(fib(1));\nvar_dump(fib(8));\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "int(55)\nint(1)\nint(21)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  return $n < 2 ? $n\
    \ : fib($n - 1) + fib($n - 2);\n}\n\necho fib(10);\necho PHP_EOL;\necho fib(1);\n\
    echo PHP_EOL;\necho fib(8);\necho PHP_EOL;\nfunction candidate(...$args) {\n \
    \   return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    }\n    if ($n == 1) {\n        return 1;\n    }\n    $a\
    \ = 0;\n    $b = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $c = $a + $b;\n\
    \        $a = $b;\n        $b = $c;\n    }\n    return $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  $fibs = array(0, 1);\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $fibs[] = $fibs[0] + $fibs[1];\n    array_shift($fibs);\n\
    \  }\n  return $fibs[0];\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n <= 2) {\n\t\
    \treturn 1;\n\t} else {\n\t\treturn fib($n - 1) + fib($n - 2);\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n <= 2) {\n \
    \   return 1;\n  }\n  return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 3) return\
    \ 1;\n  return fib($n - 1) + fib($n - 2);\n}\n\necho fib(8);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 0) {\n  \
    \  return \"Can't find fibonacci number with negative value.\";\n  }\n  elseif\
    \ ($n == 0) {\n    return 0;\n  }\n  elseif ($n == 1) {\n    return 1;\n  }\n\
    \  else {\n    return fib($n - 1) + fib($n - 2);\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) return\
    \ 0;\n    if ($n == 1) return 1;\n    return fib($n - 1) + fib($n - 2);\n}\n\n\
    echo fib(20);\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: '6765'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n <= 2) {\n\t\
    \treturn 1;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n <= 2) {\n \
    \   return 1;\n  } else {\n    return fib($n - 1) + fib($n - 2);\n  }\n}\n\necho\
    \ fib(10) . \"\\n\";\necho fib(1) . \"\\n\";\necho fib(8) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 2) return\
    \ $n;\n  return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if($n <= 2) {\n\
    \        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 2) return\
    \ $n;\n  return fib($n - 1) + fib($n - 2);\n}\n\necho fib(10);\necho '<br>';\n\
    echo fib(1);\necho '<br>';\necho fib(8);\necho '<br>';\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 55<br>1<br>21<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    return ($n < 2)\
    \ ? $n : fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args) {\n   \
    \ return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !==\
    \ 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $a = 0;\n    $b\
    \ = 1;\n    for ($i = 0; $i < $n; $i++) {\n        $tmp = $a;\n        $a = $b;\n\
    \        $b = $tmp + $b;\n    }\n    return $a;\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\necho \"\
    >>> fib(10)\\n\";\necho fib(10) . \"\\n\";\necho \">>> fib(1)\\n\";\necho fib(1)\
    \ . \"\\n\";\necho \">>> fib(8)\\n\";\necho fib(8) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ">>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\necho fib(10);\necho \"\\n\";\necho fib(1);\necho \"\\n\";\necho fib(8);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n === 0) return\
    \ 0;\n\tif ($n === 1) return 1;\n\treturn fib($n - 1) + fib($n - 2);\n}\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) {\n \
    \   return 0;\n  } else if ($n == 1) {\n    return 1;\n  } else {\n    return\
    \ fib($n - 1) + fib($n - 2);\n  }\n}\n\nfor ($i = 0; $i < 10; $i++) {\n  echo\
    \ \"fib(\" . $i . \") = \" . fib($i) . \"\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "fib(0) = 0\nfib(1) = 1\nfib(2) = 1\nfib(3) = 2\nfib(4) = 3\nfib(5) = 5\n\
    fib(6) = 8\nfib(7) = 13\nfib(8) = 21\nfib(9) = 34\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\nif (isset($argv[1])) {\n    $n = $argv[1];\n} else {\n    $n = rand(1,10);\n\
    }\n\necho fib($n);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "13\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) return\
    \ 0;\n    if ($n == 1) return 1;\n    return fib($n - 1) + fib($n - 2);\n}\n\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n$fib = new\
    \ FunctionDecorator('fib');\n$fib->dummy(1, 2); // Do nothing.\n$fib->memory_cache();\
    \ // Memoize.\n$fib->dummy(1, 3); // Do nothing.\n$fib->file_cache('./fib.php');\
    \ // Serialize to file.\n$fib->dummy(1, 4); // Do nothing.\necho $fib(10), \"\\\
    n\"; // 55\necho $fib(8), \"\\n\"; // 21\necho $fib(1), \"\\n\"; // 1\necho $fib(10),\
    \ \"\\n\"; // 55\n$fib->memory_cache_clear(); // Clear cache data in memory.\n\
    echo $fib(10), \"\\n\"; // 55\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Error: Class 'FunctionDecorator' not found in /tmp/tmpddlocyqx.php:15\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmpddlocyqx.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    //..\n}\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36cnp8ck.php:17\n\
    Stack trace:\n#0 /tmp/tmp36cnp8ck.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp36cnp8ck.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 2) {\n\
    \        return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\nprint fib(8);\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: '21'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    return($n < 2) ?\
    \ $n : fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) {\n \
    \   return 0;\n  }\n  $x = 0;\n  $y = 1;\n  for ($i = 1; $i < $n; $i++) {\n  \
    \  $temp = $x;\n    $x = $y;\n    $y = $temp + $y;\n  }\n  return $y;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) return\
    \ 0;\n  if ($n == 1) return 1;\n  return fib($n - 1) + fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  return 0;\n}\n\n$expected\
    \ = array(\n  0 => 0,\n  1 => 1,\n  2 => 1,\n  3 => 2,\n  4 => 3,\n  5 => 5,\n\
    \  6 => 8,\n  7 => 13,\n  8 => 21,\n  9 => 34,\n  10 => 55,\n);\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpedfduw12.php:32\n\
    Stack trace:\n#0 /tmp/tmpedfduw12.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpedfduw12.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n === 0) {\n\
    \        return 0;\n    } else if ($n === 1) {\n        return 1;\n    } else\
    \ {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 3) {\n\
    \        return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 0) {\n\
    \        return -1;\n    }\n    if ($n == 0) {\n        return 0;\n    }\n   \
    \ if ($n == 1) {\n        return 1;\n    }\n    return fib($n - 1) + fib($n -\
    \ 2);\n}\n$n = 1;\nfor ($i = 0; $i < 10; $i++) {\n    echo fib($n) . \"\\n\";\n\
    \    $n++;\n}\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n == 0) return\
    \ 0;\n\tif ($n == 1) return 1;\n\treturn fib($n - 1) + fib($n - 2);\n}\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 0) {\n\
    \        return NULL;\n    } else if ($n === 0) {\n        return 0;\n    } else\
    \ if ($n === 1) {\n        return 1;\n    } else {\n        return fib($n - 1)\
    \ + fib($n - 2);\n    }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    return $n < 2 ?\
    \ $n : fib($n - 1) + fib($n - 2);\n}\n\n$res = fib(10);\n$test = 55;\nif ($res\
    \ != $test) {\n    printf(\"fib(10) is not %d!\\n\", $test);\n    exit(1);\n}\n\
    \n$res = fib(1);\n$test = 1;\nif ($res != $test) {\n    printf(\"fib(1) is not\
    \ %d!\\n\", $test);\n    exit(1);\n}\n\n$res = fib(8);\n$test = 21;\nif ($res\
    \ != $test) {\n    printf(\"fib(8) is not %d!\\n\", $test);\n    exit(1);\n}\n\
    \necho \"OK\\n\";\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "OK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n == 0) return\
    \ 0;\n\tif ($n == 1) return 1;\n\treturn fib($n - 1) + fib($n - 2);\n}\necho fib(9);\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '34'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if($n <= 1)\n  \
    \      return $n;\n    else\n        return fib($n-1) + fib($n-2);\n}\necho \"\
    Fibonacci:\".fib(10);\necho \"</br>\";\n\nfunction candidate(...$args) {\n   \
    \ return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !==\
    \ 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: Fibonacci:55</br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) {\n \
    \   return 0;\n  } else if ($n == 1) {\n    return 1;\n  } else {\n    return\
    \ fib($n - 1) + fib($n - 2);\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n == 0) {\n\t\
    \treturn 0;\n\t} else if ($n == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn fib($n\
    \ - 1) + fib($n - 2);\n\t}\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 2) {\n  \
    \  return $n;\n  } else {\n    return fib($n - 1) + fib($n - 2);\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n <= 1) {\n \
    \   return $n;\n  }\n  $previous = 0;\n  $current = 1;\n  for ($i = 1; $i < $n;\
    \ $i++) {\n    $tmp = $current;\n    $current = $previous + $current;\n    $previous\
    \ = $tmp;\n  }\n  return $current;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) return\
    \ 0;\n  if ($n == 1) return 1;\n  return fib($n - 1) + fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) {\n \
    \   return 0;\n  }\n  $array = array(0, 1);\n  for ($i = 1; $i < $n; $i++) {\n\
    \    $array[$i + 1] = $array[$i] + $array[$i - 1];\n  }\n  return $array[$n];\n\
    }\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif($n == 0) return\
    \ 0;\n\tif($n == 1) return 1;\n\treturn fib($n-1) + fib($n-2);\n}\n\necho fib(10);\
    \ // 55\necho \"\\n\";\necho fib(1); // 1\necho \"\\n\";\necho fib(8); // 21\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\t// No recursion.\n\
    \t//$fib_nums = array(0, 1);\n\t//while (count($fib_nums) < $n) {\n\t//\t$fib_nums[]\
    \ = $fib_nums[count($fib_nums) - 1] + $fib_nums[count($fib_nums) - 2];\n\t//}\n\
    \t//return $fib_nums[$n - 1];\n\n\t// Recursion.\n\tif ($n < 3) return 1;\n\t\
    return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n === 0) {\n\
    \        return 0;\n    }\n    if ($n === 1) {\n        return 1;\n    }\n   \
    \ return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args) {\n   \
    \ return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !==\
    \ 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 0)\n    return\
    \ -1;\n  if ($n == 0)\n    return 0;\n  if ($n == 1)\n    return 1;\n  $prev =\
    \ 0;\n  $curr = 1;\n  $next = 1;\n  for ($i = 2; $i <= $n; $i++) {\n    $next\
    \ = $prev + $curr;\n    $prev = $curr;\n    $curr = $next;\n  }\n  return $next;\n\
    }\n\n$n = mt_rand(0, 20);\nprint \"Fib($n) = \" . fib($n) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Fib(20) = 6765\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\necho fib(8);\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: '21'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $arr = [0, 1];\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $arr[] = $arr[$i - 1] + $arr[$i];\n\
    \    }\n    return $arr[$n];\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  return $n < 2 ? $n\
    \ : fib($n - 1) + fib($n - 2);\n}\n$fib = new Benchmark('fib', 'fib');\n$fib->run(10);\n\
    \nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'Benchmark' not found in /tmp/tmpfojl_yrn.php:12\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmpfojl_yrn.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $n = intval($n);\n\
    \    $f = 0;\n    $f1 = 1;\n    $f2 = 1;\n    if ($n == 0) {\n        return 0;\n\
    \    }\n    for ($i = 3; $i <= $n; $i++) {\n        $f = $f1 + $f2;\n        $f1\
    \ = $f2;\n        $f2 = $f;\n    }\n    return $f;\n}\necho fib(8) . \"\\n\";\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16i2huy2.php:31\n\
    Stack trace:\n#0 /tmp/tmp16i2huy2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp16i2huy2.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    // YOUR CODE HERE\n\
    \    $num1 = 0;\n    $num2 = 1;\n    $num3 = 1;\n    if ($n == 1) {\n        return\
    \ $num1;\n    } elseif ($n == 2) {\n        return $num2;\n    } else {\n    \
    \    for ($i = 3; $i <= $n; $i++) {\n            $num3 = $num1 + $num2;\n    \
    \        $num1 = $num2;\n            $num2 = $num3;\n        }\n        return\
    \ $num3;\n    }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2zm0r3xo.php:33\n\
    Stack trace:\n#0 /tmp/tmp2zm0r3xo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2zm0r3xo.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n <= 1) return\
    \ $n;\n  return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    $result = 0;\n    $prev = 1;\n    for ($i = 2;\
    \ $i <= $n; $i++) {\n        $result += $prev;\n        $prev = $result - $prev;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe99x_wp7.php:27\n\
    Stack trace:\n#0 /tmp/tmpe99x_wp7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe99x_wp7.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    return (int) ((pow((1\
    \ + sqrt(5)) / 2, $n) - pow((1 - sqrt(5)) / 2, $n)) / sqrt(5));\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) return\
    \ $n;\n    return fib($n - 1) + fib($n - 2);\n}\n\necho fib(10);\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '55'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if($n == 0) {\n\
    \        return 0;\n    } else if($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n$n = rand(0, 25);\necho(\"\
    fib(\" . $n . \") = \" . fib($n) . \"\\n\");\n\nfunction candidate(...$args) {\n\
    \    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "fib(20) = 6765\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 2) {\n  \
    \  return $n;\n  }\n  return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n == 0) {\n\t\
    \treturn 0;\n\t}\n\telse if ($n == 1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn\
    \ fib($n - 1) + fib($n - 2);\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $x = 1;\n    $y\
    \ = 1;\n    for ($i = 0; $i < $n; $i++) {\n        $z = $x + $y;\n        $x =\
    \ $y;\n        $y = $z;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6h8txf1b.php:25\n\
    Stack trace:\n#0 /tmp/tmp6h8txf1b.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6h8txf1b.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) {\n \
    \   return 0;\n  }\n  if ($n == 1) {\n    return 1;\n  }\n  return fib($n - 1)\
    \ + fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\t$first = 0;\n\t$second\
    \ = 1;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\t$tmp = $first;\n\t\t$first = $second;\n\
    \t\t$second = $tmp + $second;\n\t}\n\treturn $first;\n}\n\nvar_dump(fib(3));\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(2)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if($n <= 2) {\n\
    \        return 1;\n    } else {\n        return fib($n-1) + fib($n-2);\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  return $n < 2 ? $n\
    \ : fib($n - 1) + fib($n - 2);\n}\n\nprint(fib(10));\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '55'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) return\
    \ 0;\n    if ($n == 1) return 1;\n    return fib($n - 1) + fib($n - 2);\n}\n\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) {\n \
    \   return 0;\n  }\n  if ($n == 1) {\n    return 1;\n  }\n  $n--;\n  $a = 0;\n\
    \  $b = 1;\n  while ($n > 0) {\n    $temp = $a + $b;\n    $a = $b;\n    $b = $temp;\n\
    \    $n--;\n  }\n  return $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    }\n    if ($n == 1) {\n        return 1;\n    }\n    return\
    \ fib($n - 1) + fib($n - 2);\n}\n\necho fib(10);\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '55'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) return\
    \ 0;\n  if ($n == 1) return 1;\n  return fib($n - 1) + fib($n - 2);\n}\n\necho\
    \ fib(7);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "13\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 2) {\n  \
    \  return $n;\n  } else {\n    return fib($n - 1) + fib($n - 2);\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $last = 0;\n   \
    \ $curr = 1;\n    for ($i = 1; $i < $n; $i++) {\n        $next = $last + $curr;\n\
    \        $last = $curr;\n        $curr = $next;\n    }\n    return $curr;\n}\n\
    \nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n == 0) {\n\t\
    \treturn 0;\n\t} else if ($n == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn fib($n\
    \ - 1) + fib($n - 2);\n\t}\n}\necho fib(1) . \"\\n\";\necho fib(2) . \"\\n\";\n\
    echo fib(3) . \"\\n\";\necho fib(4) . \"\\n\";\necho fib(5) . \"\\n\";\necho fib(6)\
    \ . \"\\n\";\necho fib(7) . \"\\n\";\necho fib(8) . \"\\n\";\necho fib(9) . \"\
    \\n\";\necho fib(10) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n <= 2) {\n\t\
    \treturn 1;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n == 0) return\
    \ 0;\n\tif ($n == 1) return 1;\n\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if($n < 3) {\n \
    \       return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 2) {\n  \
    \  return $n;\n  } else {\n    return fib($n - 1) + fib($n - 2);\n  }\n}\n$args\
    \ = array(10, 1, 8);\nforeach ($args as $arg) {\n  var_dump(fib($arg));\n}\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(55)\nint(1)\nint(21)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 0) {\n\
    \        return null;\n    } else if ($n == 0) {\n        return 0;\n    } else\
    \ if ($n == 1) {\n        return 1;\n    } else {\n        return fib($n - 1)\
    \ + fib($n - 2);\n    }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) return\
    \ $n;\n    return fib($n - 1) + fib($n - 2);\n}\n\necho fib(10) . \"\\n\";\necho\
    \ fib(1) . \"\\n\";\necho fib(8) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 0) {\n\
    \        echo \"n can't be negative.\\n\";\n        return;\n    }\n    if ($n\
    \ == 0) {\n        return 0;\n    }\n    $n1 = 0;\n    $n2 = 1;\n    for ($i =\
    \ 1; $i < $n; $i++) {\n        $sum = $n1 + $n2;\n        $n1 = $n2;\n       \
    \ $n2 = $sum;\n    }\n    return $n2;\n}\n\nfunction candidate(...$args) {\n \
    \   return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    }\n    $a = 1;\n    $b = 1;\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n    }\n\
    \    return $b;\n}\necho fib(10);\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: '55'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t} else {\n\t\treturn fib($n - 1) + fib($n - 2);\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n <= 2) {\n \
    \   return 1;\n  }\n  return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    return ($n < 2)\
    \ ? $n : fib($n - 1) + fib($n - 2);\n}\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $a = 0;\n    $b\
    \ = 1;\n    for ($i = 0; $i < $n; $i++) {\n        $temp = $a;\n        $a = $b;\n\
    \        $b = $temp + $b;\n    }\n    return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif($n==0 || $n==1)\
    \ {\n\t\treturn $n;\n\t}\n\t$a=0;\n\t$b=1;\n\tfor($i=2;$i<=$n;$i++) {\n\t\t$res\
    \ = $a+$b;\n\t\t$a=$b;\n\t\t$b=$res;\n\t}\n\treturn $res;\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) return\
    \ $n;\n    return fib($n - 1) + fib($n - 2);\n}\n\n$fib_num = fib(5);\necho \"\
    The 5th Fibonacci number is $fib_num.\" . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "The 5th Fibonacci number is 5.\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $a = 0;\n    $b\
    \ = 1;\n    for ($i = 0; $i < $n; $i++) {\n        $b = $a + $b;\n        $a =\
    \ $b - $a;\n    }\n    return $a;\n}\n\nfor ($i = 1; $i <= 10; $i++) {\n    echo\
    \ fib($i) . \" \";\n}\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "1 1 2 3 5 8 13 21 34 55 \n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if($n <= 1) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    return ($n < 2)\
    \ ? $n : fib($n - 1) + fib($n - 2);\n}\n\necho fib(10);\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '55'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 3) {\n\
    \        return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 2) {\n  \
    \  return $n;\n  }\n  return fib($n - 1) + fib($n - 2);\n}\n\n$f = fib(10);\n\
    var_dump($f);\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "int(55)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) return\
    \ 0;\n    if ($n == 1) return 1;\n    return fib($n - 1) + fib($n - 2);\n}\n\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  $x = 0;\n  $y = 1;\n\
    \  while ($n > 0) {\n    $x = $x + $y;\n    $y = $x - $y;\n    $n--;\n  }\n  return\
    \ $x;\n}\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2)\n\t\t\
    return $n;\n\telse\n\t\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\necho fib(5);\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: '5'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $fibs = [0, 1];\n\
    \    for ($i = 2; $i <= $n; $i++) {\n        $fibs[$i] = $fibs[$i - 1] + $fibs[$i\
    \ - 2];\n    }\n    return $fibs[$n];\n}\n\nfunction candidate(...$args) {\n \
    \   return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    }\n    if ($n == 1) {\n        return 1;\n    }\n    return\
    \ fib($n - 1) + fib($n - 2);\n}\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n <= 2) {\n\t\
    \treturn 1;\n\t} else {\n\t\treturn fib($n - 1) + fib($n - 2);\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n == 0) return\
    \ 0;\n\tif ($n == 1) return 1;\n\treturn fib($n - 1) + fib($n - 2);\n}\n\necho\
    \ fib(10) . \"\\n\";\necho fib(1) . \"\\n\";\necho fib(8) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if($n == 0 || $n ==\
    \ 1) {\n    return $n;\n  }\n  else {\n    return fib($n - 1) + fib($n - 2);\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif($n == 0) {\n\t\t\
    return 0;\n\t}\n\telse if($n == 1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn\
    \ fib($n - 1) + fib($n - 2);\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif($n < 2) {\n\t\t\
    return $n;\n\t}\n\telse {\n\t\treturn fib($n - 1) + fib($n - 2);\n\t}\n}\n\necho\
    \ fib(10);\necho PHP_EOL;\n\necho fib(1);\necho PHP_EOL;\n\necho fib(8);\necho\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    }\n    $a = 0;\n    $b = 1;\n    for ($i = 2; $i <= $n;\
    \ $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n    }\n\
    \    return $b;\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n <= 2) {\n \
    \   return 1;\n  }\n  return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $i = 0;\n    $f\
    \ = 0;\n    $m = 1;\n    while ($i < $n) {\n        $i = $i + 1;\n        $tmp\
    \ = $f;\n        $f = $f + $m;\n        $m = $tmp;\n    }\n    return $f;\n}\n\
    \nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $a = 0;\n    $b\
    \ = 1;\n    while ($n > 0) {\n        $b = $a + $b;\n        $a = $b - $a;\n \
    \       $n = $n - 1;\n    }\n    return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\necho fib(10)\
    \ . \"\\n\";\necho fib(1) . \"\\n\";\necho fib(8) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 3) return\
    \ 1;\n    return fib($n - 1) + fib($n - 2);\n}\n$trace = new Trace();\n$trace->start();\n\
    fib(10);\n$trace->end();\n$trace->render();\nfunction candidate(...$args) {\n\
    \    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'Trace' not found in /tmp/tmpac2pepnx.php:13\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmpac2pepnx.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\n\necho 'fib(10): ' . fib(10)\
    \ . PHP_EOL;\necho 'fib(1): ' . fib(1) . PHP_EOL;\necho 'fib(8): ' . fib(8) .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "fib(10): 55\nfib(1): 1\nfib(8): 21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n == 0) return\
    \ 0;\n\tif ($n == 1) return 1;\n\treturn fib($n - 1) + fib($n - 2);\n}\necho fib(10)\
    \ . PHP_EOL;\necho fib(1) . PHP_EOL;\necho fib(8) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  return $n < 2 ? $n\
    \ : fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t} else {\n\t\treturn fib($n - 1) + fib($n - 2);\n\t}\n}\n\n$n =\
    \ 10;\n$fib = fib($n);\necho \"fib($n) is $fib\\n\";\necho str_repeat('*', 10)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "fib(10) is 55\n**********\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 3) {\n\
    \        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    // Fill me in.\n\
    \    return $n;\n}\n\nprint fib(10);\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7svukak.php:20\n\
    Stack trace:\n#0 /tmp/tmps7svukak.php(27): test()\n#1 {main}\n  thrown in /tmp/tmps7svukak.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 2) {\n\
    \        return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\n$n = $argv[1];\nprint fib($n);\nprint \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 2) {\n\
    \        return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\t// To be implemented.\n\
    }\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg5usvb17.php:18\n\
    Stack trace:\n#0 /tmp/tmpg5usvb17.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpg5usvb17.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\n$n = (int)$argv[1];\necho fib($n);\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '0'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  return 1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzsxocl8.php:18\n\
    Stack trace:\n#0 /tmp/tmppzsxocl8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppzsxocl8.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) {\n \
    \   return 0;\n  } else if ($n == 1) {\n    return 1;\n  } else {\n    return\
    \ fib($n - 1) + fib($n - 2);\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\necho fib(10);\necho \"\\\
    n\";\necho fib(1);\necho \"\\n\";\necho fib(8);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif($n==0) return 0;\n\
    \tif($n==1) return 1;\n\treturn fib($n-1) + fib($n-2);\n}\n\necho fib(10) . \"\
    \\n\";\necho fib(1) . \"\\n\";\necho fib(8) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\necho fib(10);\necho \"\\n\";\necho fib(1);\necho \"\\n\";\necho fib(8);\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 0) {\n  \
    \  throw new InvalidArgumentException('Number must be positive.');\n  } else if\
    \ ($n == 0) {\n    return 0;\n  } else if ($n == 1) {\n    return 1;\n  } else\
    \ {\n    return fib($n - 1) + fib($n - 2);\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    $a = 1;\n    $b = 1;\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n    }\n\
    \    return $b;\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n == 0) return\
    \ 0;\n\tif ($n == 1) return 1;\n\treturn fib($n - 1) + fib($n - 2);\n}\n\necho\
    \ fib(10);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "55\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n <= 2) return\
    \ 1;\n\telse return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 3) {\n  \
    \  return 1;\n  } else {\n    return fib($n - 1) + fib($n - 2);\n  }\n}\n\necho\
    \ fib(10) . PHP_EOL;\necho fib(1) . PHP_EOL;\necho fib(8) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\t$fibs = array(0, 1);\n\
    \tfor ($i = 2; $i <= $n; $i++) {\n\t\t$fibs[$i] = $fibs[$i - 1] + $fibs[$i - 2];\n\
    \t}\n\treturn $fibs[$n];\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\necho 'fib(10)\
    \ = ' . fib(10) . PHP_EOL;\necho 'fib(1) = ' . fib(1) . PHP_EOL;\necho 'fib(8)\
    \ = ' . fib(8) . PHP_EOL;\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "fib(10) = 55\nfib(1) = 1\nfib(8) = 21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\treturn $n <= 1 ? $n\
    \ : fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n$argv\
    \ = $GLOBALS['argv'];\n$n = intval($argv[1]);\n$result = fib($n);\nprint_r($result);\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '0'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2)\n\t\t\
    return $n;\n\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) {\n \
    \   return 0;\n  }\n  if ($n == 1) {\n    return 1;\n  }\n  return fib($n - 1)\
    \ + fib($n - 2);\n}\n\n$N = 8;\necho \"fib($N) = \" . fib($N) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "fib(8) = 21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $a = 1;\n    $b\
    \ = 1;\n    while ($n-- > 1) {\n        $c = $a + $b;\n        $a = $b;\n    \
    \    $b = $c;\n    }\n    return $a;\n}\n$n = 10;\nprintf(\"%d\\n\", fib($n));\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\n\necho fib(10) . PHP_EOL;\n\
    echo fib(1) . PHP_EOL;\necho fib(8) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $a = 0;\n    $b\
    \ = 1;\n    for ($i = 0; $i < $n; $i++) {\n        $tmp = $a;\n        $a = $b;\n\
    \        $b = $a + $tmp;\n    }\n    return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n < 2) {\n  \
    \  return $n;\n  }\n  return fib($n - 1) + fib($n - 2);\n}\n\nfor ($i = 0; $i\
    \ < 10; $i++) {\n  echo fib($i) . \"\\n\";\n}\nfunction candidate(...$args) {\n\
    \    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n1\n1\n2\n3\n5\n8\n13\n21\n34\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n <= 2) {\n \
    \   return 1;\n  }\n  return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) return\
    \ $n;\n    return fib($n - 1) + fib($n - 2);\n}\n$n = 10;\nprint(\"$n-th Fibonacci\
    \ number is: \" . fib($n) . \"\\n\");\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "10-th Fibonacci number is: 55\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n$stdin\
    \ = fopen(\"php://stdin\", \"r\");\n\nfscanf($stdin, \"%d\\n\", $n);\n\nprintf(\"\
    %d\\n\", fib($n));\n\nfclose($stdin);\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "0\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  $zero = bcpow('0',\
    \ '1');\n  $one = bcpow('1', '1');\n  $two = bcpow('2', '1');\n  $three = bcpow('3',\
    \ '1');\n  $f = array(0 => $zero, 1 => $one);\n  for ($i = 2; $i <= $n; $i++)\
    \ {\n    $f[$i] = bcadd($f[$i - 1], $f[$i - 2]);\n  }\n  return $f[$n];\n}\n\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function bcpow() in /tmp/tmpkpqrh0uu.php:10\n\
    Stack trace:\n#0 /tmp/tmpkpqrh0uu.php(22): fib(10)\n#1 /tmp/tmpkpqrh0uu.php(26):\
    \ candidate(10)\n#2 /tmp/tmpkpqrh0uu.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpkpqrh0uu.php\
    \ on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) {\n \
    \   return 0;\n  }\n  if ($n == 1) {\n    return 1;\n  }\n  return fib($n - 1)\
    \ + fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $a = 0;\n    $b\
    \ = 1;\n    for ($i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a =\
    \ $b;\n        $b = $c;\n    }\n    return $a;\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    }\n    if ($n == 1) {\n        return 1;\n    }\n    return\
    \ fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n === 0) {\n\
    \    return 0;\n  } else if ($n === 1) {\n    return 1;\n  } else {\n    return\
    \ fib($n - 1) + fib($n - 2);\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) {\n\
    \        return 0;\n    }\n    $cur = 1;\n    $prev = 0;\n    for ($i = 2; $i\
    \ <= $n; $i++) {\n        $cur = $cur + $prev;\n        $prev = $cur - $prev;\n\
    \    }\n    return $cur;\n}\n\necho \"\\n** TESTING fib **\\n\";\nassert(55 ==\
    \ fib(10));\nassert(1 == fib(1));\nassert(21 == fib(8));\necho \"** All asserts\
    \ passed. **\\n\";\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\n** TESTING fib **\n** All asserts passed. **\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  $a = 0;\n  $b = 1;\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $b = $a + $b;\n    $a = $b - $a;\n  }\n\
    \  return $a;\n}\n\necho fib(5).\"\\n\";\nfunction candidate(...$args) {\n   \
    \ return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !==\
    \ 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    return ($n == 0\
    \ || $n == 1) ? $n : fib($n - 1) + fib($n - 2);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    $previous = 0;\n\
    \    $current = 1;\n    for ($i = 1; $i < $n; $i++) {\n        $tmp = $current;\n\
    \        $current = $previous + $current;\n        $previous = $tmp;\n    }\n\
    \    return $current;\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 0) {\n\
    \        throw new Exception(\"Negative number\");\n    } else if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 1;\n    } else {\n\
    \        return fib($n - 1) + fib($n - 2);\n    }\n}\n\nassertEquals(1, fib(1));\n\
    assertEquals(55, fib(10));\nassertEquals(21, fib(8));\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function assertEquals()\
    \ in /tmp/tmpfa1pjjaz.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpfa1pjjaz.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    return $n < 2 ?\
    \ $n : fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) return\
    \ 0;\n    if ($n == 1) return 1;\n    return fib($n - 1) + fib($n - 2);\n}\n\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\n$ans = fib(6);\nprint(\"fib(6) = $ans\\n\");\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "fib(6) = 8\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 2) {\n\
    \        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if($n < 2) return\
    \ $n;\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n\
    \    }\n}\n\n$n = 10;\nprint fib($n);\nprint \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if($n == 0) {\n  \
    \  return 0;\n  }\n  if($n == 1) {\n    return 1;\n  }\n  return fib($n - 1) +\
    \ fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\nclass\
    \ FibTest extends PHPUnit_Framework_TestCase {\n    public function testOne()\
    \ {\n        $this->assertEquals(1, fib(1));\n    }\n\n    public function testEight()\
    \ {\n        $this->assertEquals(21, fib(8));\n    }\n\n    public function testTen()\
    \ {\n        $this->assertEquals(55, fib(10));\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'PHPUnit_Framework_TestCase' not found\
    \ in /tmp/tmp7fhhvyam.php:16\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp7fhhvyam.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif($n<=1)\n\t\treturn\
    \ $n;\n\telse\n\t\treturn fib($n-1)+fib($n-2);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if($n < 2) {\n \
    \       return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\necho \"\
    fib(10) = \" . fib(10) . \"\\n\";\necho \"fib(1) = \" . fib(1) . \"\\n\";\necho\
    \ \"fib(8) = \" . fib(8) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "fib(10) = 55\nfib(1) = 1\nfib(8) = 21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  if ($n == 0) {\n \
    \   return 0;\n  } else if ($n == 1) {\n    return 1;\n  } else {\n    return\
    \ fib($n - 1) + fib($n - 2);\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n  return ($n < 2) ?\
    \ $n : fib($n - 1) + fib($n - 2);\n}\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) return\
    \ 0;\n    if ($n == 1) return 1;\n    return fib($n - 1) + fib($n - 2);\n}\n\n\
    echo fib(10);\necho \"\\n\";\necho fib(1);\necho \"\\n\";\necho fib(8);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n == 0) return\
    \ 0;\n    if ($n == 1) return 1;\n    return fib($n - 1) + fib($n - 2);\n}\n\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_98_count_upper
language: php
prompt: "<?php\n// Given a string s, count the number of uppercase vowels in even\
  \ indices.\n// For example:\n// count_upper('aBCdEf') returns 1\n// count_upper('abcdefg')\
  \ returns 0\n// count_upper('dBBE') returns 0\nfunction count_upper($s) {\n"
tests: "function candidate(...$args) {\n    return count_upper(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"aBCdEf\") !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"abcdefg\") !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"dBBE\") !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"B\") !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"U\") !== 1) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"EEEE\") !== 2) { throw new Exception(\"Test failed!\"); }\n\
  }\n\ntest();"
completions: ["    $count = 0;\n    $vowels = array(\"A\", \"E\", \"I\", \"O\", \"\
    U\");\n    $length = strlen($s);\n    for ($i = 0; $i < $length; $i++) {\n   \
    \     if ($i % 2 == 0 && in_array($s[$i], $vowels)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "\t$count = 0;\n\t$vowels = array('A',\
    \ 'E', 'I', 'O', 'U');\n\t$string_arr = str_split($s);\n\tfor ($i = 0; $i < count($string_arr);\
    \ $i++) {\n\t\tif ($i % 2 == 0 && in_array($string_arr[$i], $vowels)) {\n\t\t\t\
    $count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $count = 0;\n    $vowels = array('A',\
    \ 'E', 'I', 'O', 'U');\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (in_array($s[$i], $vowels) && $i % 2 == 0) {\n            $count++;\n      \
    \  }\n    }\n    return $count;\n}", "  if (is_string($s)) {\n    $s = str_split($s);\n\
    \    $count = 0;\n    for ($i = 0; $i < count($s); $i++) {\n      if (ctype_upper($s[$i])\
    \ && $i % 2 == 0) {\n        $count++;\n      }\n    }\n    return $count;\n \
    \ }\n  return null;\n}\n\nprint 'count_upper(\"aBCdEf\") returns ' . count_upper('aBCdEf')\
    \ . \"\\n\";\nprint 'count_upper(\"abcdefg\") returns ' . count_upper('abcdefg')\
    \ . \"\\n\";\nprint 'count_upper(\"dBBE\") returns ' . count_upper('dBBE') . \"\
    \\n\";", "\n}\n", "  $vowels = array('A', 'E', 'I', 'O', 'U');\n  $count = 0;\n\
    \  for ($i = 0; $i < strlen($s); $i += 2) {\n    if (in_array($s[$i], $vowels))\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\necho count_upper('aBCdEf')\
    \ . PHP_EOL;\necho count_upper('abcdefg') . PHP_EOL;\necho count_upper('dBBE')\
    \ . PHP_EOL;\n", "    $even = [];\n    $odd = [];\n    $num = strlen($s);\n  \
    \  $count = 0;\n    for ($i = 0; $i < $num; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            array_push($even, $s[$i]);\n        } else {\n            array_push($odd,\
    \ $s[$i]);\n        }\n    }\n    foreach ($even as $char) {\n        if (ctype_upper($char))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "  $upper\
    \ = 0;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if ($i % 2 === 0 && strtoupper($s[$i])\
    \ === $s[$i]) {\n      $upper++;\n    }\n  }\n  return $upper;\n}\n", "    $count\
    \ = 0;\n    $i = 0;\n    while ($i < strlen($s)) {\n        if ($i % 2 === 0)\
    \ {\n            if (ctype_upper($s[$i])) {\n                $count++;\n     \
    \       }\n        }\n        $i++;\n    }\n    return $count;\n}", "  $number\
    \ = 0;\n  $array = str_split($s);\n  foreach ($array as $key => $value) {\n  \
    \  if (preg_match('/[aeiou]/i', $value) && $key % 2 == 0) {\n      $number +=\
    \ 1;\n    }\n  }\n  return $number;\n}\n\necho count_upper('aBCdEf');", "    //\
    \ your code here\n}", "    $count = 0;\n    $vowels = ['A', 'E', 'I', 'O', 'U'];\n\
    \    $arr = str_split($s);\n    for ($i = 0; $i < count($arr); $i++) {\n     \
    \   if ($i % 2 == 0 && in_array($arr[$i], $vowels)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    $count = 0;\n    $s = str_split($s);\n\
    \    foreach ($s as $k => $v) {\n        if ($k % 2 == 0) {\n            if (ctype_upper($v))\
    \ {\n                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "  $s = str_split($s);\n  $vowels = ['A', 'E', 'I', 'O', 'U'];\n  $total =\
    \ 0;\n  foreach ($s as $idx => $char) {\n    if ($idx % 2 === 0 && in_array($char,\
    \ $vowels)) {\n      $total++;\n    }\n  }\n  return $total;\n}\n", "    $count\
    \ = 0;\n    $vowels = ['A', 'E', 'I', 'O', 'U'];\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if ($i % 2 === 0 && in_array($s[$i], $vowels)) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}", "    // write code here\n\
    \    $count = 0;\n    for ($i = 0; $i < strlen($s); $i+=2) {\n        if (preg_match('/[AEIOU]/',\
    \ $s[$i])) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
  "    $s = strtolower($s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 == 0 &&\
    \ in_array($s[$i], $vowels)) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n", "    // Your code here\n    $vowels = ['A', 'E', 'I', 'O', 'U'];\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2\
    \ == 0 && in_array($s[$i], $vowels)) {\n            $sum++;\n        }\n    }\n\
    \    return $sum;\n}", "\t$i = 0;\n\t$count = 0;\n\twhile ($i < strlen($s)) {\n\
    \t\tif ($i % 2 == 0) {\n\t\t\t$char = $s[$i];\n\t\t\tif (strtoupper($char) ==\
    \ $char) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\t$i++;\n\t}\n\treturn $count;\n\
    }\n", "    return;\n}", "\t// your code here\n\t$count = 0;\n\t$arr = str_split($s);\n\
    \tfor ($i = 0; $i < count($arr); $i++) {\n\t\tif (($i % 2) == 0 && ctype_upper($arr[$i]))\
    \ {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho count_upper('aBCdEf')\
    \ . PHP_EOL;\necho count_upper('abcdefg') . PHP_EOL;\necho count_upper('dBBE')\
    \ . PHP_EOL;", "    $vowels = ['A', 'E', 'I', 'O', 'U'];\n    $count = 0;\n  \
    \  for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $vowels)\
    \ && $i % 2 == 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "\t$arr = str_split($s);\n\t$vowels = array('A', 'E', 'I', 'O', 'U');\n\t\
    $counter = 0;\n\tfor ($i = 0; $i < sizeof($arr); $i += 2) {\n\t\tif (in_array($arr[$i],\
    \ $vowels)) {\n\t\t\t$counter++;\n\t\t}\n\t}\n\treturn $counter;\n}\n\n$s = \"\
    aBCdEf\";\nprint(\"Input: \" . $s . \"\\n\");\nprint(\"Output: \" . count_upper($s)\
    \ . \"\\n\");", "  $count = 0;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if\
    \ ($i % 2 === 0 && preg_match('/[AEIOU]/', $s[$i])) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\n\necho count_upper('aBCdEf');\necho \"\\n\";\necho\
    \ count_upper('abcdefg');\necho \"\\n\";\necho count_upper('dBBE');\necho \"\\\
    n\";", "  $vowels = 0;\n  for ($i = 0; $i < strlen($s); $i += 2) {\n    if (strtoupper($s[$i])\
    \ == $s[$i]) {\n      if ($s[$i] == 'A' || $s[$i] == 'E' || $s[$i] == 'I' || $s[$i]\
    \ == 'O' || $s[$i] == 'U') {\n        $vowels++;\n      }\n    }\n  }\n  return\
    \ $vowels;\n}", "  $count = 0;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if\
    \ ($i % 2 == 0 && strtoupper($s[$i]) == $s[$i]) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\n", "    $vowels = ['A', 'E', 'I', 'O', 'U'];\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 === 0 &&\
    \ in_array($s[$i], $vowels)) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $count = 0;\n    $vowels = ['A', 'E', 'I', 'O', 'U'];\n  \
    \  for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 == 0 && in_array($s[$i],\
    \ $vowels)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "  $count = 0;\n  $vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"];\n  for ($i = 0;\
    \ $i < strlen($s); $i++) {\n    if ($i % 2 === 0 && in_array($s[$i], $vowels))\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\n\necho count_upper('aBCdEf')\
    \ . PHP_EOL;\necho count_upper('abcdefg') . PHP_EOL;\necho count_upper('dBBE')\
    \ . PHP_EOL;", "    $vowels = array('A', 'E', 'I', 'O', 'U');\n    $arr = str_split($s);\n\
    \    $count = 0;\n    for ($i = 0; $i < count($arr); $i += 2) {\n        if (in_array($arr[$i],\
    \ $vowels)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "\t$upper = array('A', 'E', 'I', 'O', 'U');\n\t$count = 0;\n\tfor ($i = 0; $i <\
    \ strlen($s); $i++) {\n\t\tif (($i % 2 == 0) && in_array($s[$i], $upper)) {\n\t\
    \t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\necho count_upper('aBCdEf') .\
    \ \"\\n\";\necho count_upper('abcdefg') . \"\\n\";\necho count_upper('dBBE') .\
    \ \"\\n\";\n", "    $vowels = array('A', 'E', 'I', 'O', 'U');\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($s); $i += 2) {\n        if (in_array($s[$i], $vowels))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "\t$result\
    \ = 0;\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\tif ($i % 2 == 0 && is_upper($s[$i]))\
    \ {\n\t\t\t$result++;\n\t\t}\n\t}\n\treturn $result;\n}\n", "  $letters = array_filter(str_split($s),\
    \ function($x, $i) {\n    if (preg_match('/[AEIOU]/', $x) && $i % 2 == 0) {\n\
    \      return $x;\n    }\n  }, ARRAY_FILTER_USE_BOTH);\n  return count($letters);\n\
    }\n\necho count_upper('aBCdEf') . \"\\n\";\necho count_upper('abcdefg') . \"\\\
    n\";\necho count_upper('dBBE') . \"\\n\";", "\t// your code here\n}\n", "    $count\
    \ = 0;\n    $s = str_split($s);\n    foreach ($s as $k => $v) {\n        if ($k\
    \ % 2 == 0) {\n            if (preg_match('/[AEIOU]/', $v)) {\n              \
    \  $count++;\n            }\n        }\n    }\n    return $count;\n}", "    $vowels\
    \ = array('A', 'E', 'I', 'O', 'U');\n    $count = 0;\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if ($i % 2 == 0 && in_array($s[$i], $vowels)) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}", "}\n\necho 'count_upper(\\\
    'aBCdEf\\') returns '.count_upper('aBCdEf').\"\\n\";\necho 'count_upper(\\'abcdefg\\\
    ') returns '.count_upper('abcdefg').\"\\n\";\necho 'count_upper(\\'dBBE\\') returns\
    \ '.count_upper('dBBE').\"\\n\";\necho 'count_upper(\\'\\') returns '.count_upper('').\"\
    \\n\";\n", "  $counter = 0;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (ctype_upper($s[$i])\
    \ && ($i % 2 == 0)) {\n      $counter++;\n    }\n  }\n  return $counter;\n}\n",
  "    $vowels = ['A', 'E', 'I', 'O', 'U'];\n    $count = 0;\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if ($i % 2 == 0 && in_array($s[$i], $vowels))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n", "    $count\
    \ = 0;\n    $s = str_split($s);\n    for ($i = 0; $i < count($s); $i++) {\n  \
    \      if ($i % 2 === 0 && preg_match('/[AEIOU]/', $s[$i])) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    $vowels = ['A', 'E', 'I', 'O',\
    \ 'U'];\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ ($i % 2 == 0 && in_array($s[$i], $vowels)) {\n            $count++;\n      \
    \  }\n    }\n    return $count;\n}\n\necho count_upper('aBCdEf') . \"\\n\";\n\
    echo count_upper('abcdefg') . \"\\n\";\necho count_upper('dBBE') . \"\\n\";",
  "\t$len = strlen($s);\n\t$res = 0;\n\t$chars = array('A', 'E', 'I', 'O', 'U');\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\tif ($i % 2 == 0 && in_array($s[$i], $chars))\
    \ {\n\t\t\t$res++;\n\t\t}\n\t}\n\treturn $res;\n}\n\necho count_upper('aBCdEf')\
    \ . \"\\n\";\necho count_upper('abcdefg') . \"\\n\";\necho count_upper('dBBE')\
    \ . \"\\n\";", "    $vowels = array('A', 'E', 'I', 'O', 'U');\n    $vowelCount\
    \ = 0;\n    $counter = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n       \
    \ if (in_array($s[$i], $vowels)) {\n            $vowelCount++;\n        }\n  \
    \      if ($i % 2 == 0) {\n            $counter++;\n        }\n    }\n    return\
    \ $vowelCount - $counter;\n}\n", "  $counter = 0;\n  for ($i = 0; $i < strlen($s);\
    \ $i+=2) {\n    if (ctype_upper($s[$i])) {\n      $counter++;\n    }\n  }\n  return\
    \ $counter;\n}", "\t// Write code here!\n\t$arr = str_split($s);\n\t$result =\
    \ 0;\n\tforeach ($arr as $key => $value) {\n\t\tif(ord($value) >= 65 && ord($value)\
    \ <= 90 && $key % 2 == 0){\n\t\t\t$result += 1;\n\t\t}\n\t}\n\treturn $result;\n\
    }\necho count_upper('aBCdEf');\necho \"\\n\";\necho count_upper('abcdefg');\n\
    echo \"\\n\";\necho count_upper('dBBE');\necho \"\\n\";", '}', "    $count = 0;\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_upper($s[$i]) &&\
    \ ($i % 2 == 0)) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho count_upper('aBCdEf') . \"\\n\";\necho count_upper('abcdefg') . \"\\n\"\
    ;\necho count_upper('dBBE') . \"\\n\";", "\tfor ($i = 0; $i < strlen($s); $i++)\
    \ {\n\t\tif (ctype_upper($s[$i]) && $i % 2 === 0) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\necho count_upper('aBCdEf');\n", "    $count = 0;\n   \
    \ for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 == 0) {\n        \
    \    if (strtoupper($s[$i]) == $s[$i]) {\n                $count++;\n        \
    \    }\n        }\n    }\n    return $count;\n}\n\necho count_upper('aBCdEf')\
    \ . \"\\n\";\necho count_upper('abcdefg') . \"\\n\";\necho count_upper('dBBE')\
    \ . \"\\n\";", "    // Find the number of uppercase vowels in the even indices\n\
    \    // of a string and return the count.\n    $upper = 0;\n    $i = 0;\n    while\
    \ ($i < strlen($s)) {\n        if (ctype_upper($s[$i]) && ($s[$i] == 'A' || $s[$i]\
    \ == 'E' || $s[$i] == 'I' || $s[$i] == 'O' || $s[$i] == 'U'))\n            $upper\
    \ += 1;\n        $i += 2;\n    }\n    return $upper;\n}\n\n$test1 = count_upper('aBCdEf');\n\
    $test2 = count_upper('abcdefg');\n$test3 = count_upper('dBBE');\n$test4 = count_upper('ABCDEF');\n\
    \necho \"test1: $test1\\n\";\necho \"test2: $test2\\n\";\necho \"test3: $test3\\\
    n\";\necho \"test4: $test4\\n\";", "    $count = 0;\n    for ($i = 0; $i < strlen($s);\
    \ $i += 2) {\n        $current = $s[$i];\n        if (is_upper($current)) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n", "  $a = str_split($s);\n\
    \  $count = 0;\n  for ($i = 0; $i < sizeof($a); $i++) {\n    if ($i % 2 == 0 &&\
    \ ctype_upper($a[$i])) {\n      $count++;\n    }\n  }\n  return $count;\n}", " \
    \   $index = 0;\n    $vowels = \"aeiouAEIOU\";\n    $result = 0;\n    $s = str_split($s);\n\
    \    foreach ($s as $char) {\n        if ($index % 2 == 0) {\n            if (strpos($vowels,\
    \ $char) !== false) {\n                $result++;\n            }\n        }\n\
    \        $index++;\n    }\n    return $result;\n}", "  return preg_match_all('/[AEIOU]/',\
    \ $s, $m, PREG_OFFSET_CAPTURE) ? count(array_filter($m[0], function($v) { return\
    \ ($v[1] % 2) == 0; })) : 0;\n}\n\nassert(count_upper('aBCdEf') == 1);\nassert(count_upper('abcdefg')\
    \ == 0);\nassert(count_upper('dBBE') == 0);\n", "    // Write your code here\n\
    \    $count = 0;\n    $count_string = strlen($s);\n    for($i = 0; $i < $count_string;\
    \ $i += 2){\n        if(ctype_upper($s[$i])){\n            $count++;\n       \
    \ }\n    }\n    return $count;\n}", "\t// TODO: Implement this function\n}\n",
  "    $count = 0;\n    $length = strlen($s);\n    for ($i = 0; $i < $length; $i +=\
    \ 2) {\n        if (ctype_upper($s[$i])) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\necho count_upper('aBCdEf'); // 1\necho \"\\n\"\
    ;\necho count_upper('abcdefg'); // 0\necho \"\\n\";\necho count_upper('dBBE');\
    \ // 0\necho \"\\n\";\n", "    // Write your code here\n}\n", "\t$i = 0;\n\t$vowels\
    \ = [\"A\", \"E\", \"I\", \"O\", \"U\"];\n\t$count = 0;\n\tfor($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\tif(in_array($s[$i], $vowels) && $i % 2 == 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\necho count_upper('aBCdEf');\necho \"\\n\";\n\
    echo count_upper('abcdefg');\necho \"\\n\";\necho count_upper('dBBE');\necho \"\
    \\n\";", "    // regex to match all the even indices\n    $regex = \"/[aeiou]/i\"\
    ;\n    // array to store all the matches\n    $matches = [];\n    // array to\
    \ store just the uppercase matches\n    $upperMatches = [];\n    // preg_match_all\
    \ looks for all matches in the string.\n    // $matches will be populated with\
    \ all matches.\n    preg_match_all($regex, $s, $matches);\n    // $matches[0]\
    \ is a regular array containing the matches.\n    // Go through each match and\
    \ see if it is uppercase,\n    // if it is add it to the $upperMatches array.\n\
    \    foreach ($matches[0] as $match) {\n        if (ctype_upper($match)) {\n \
    \           $upperMatches[] = $match;\n        }\n    }\n    // return the number\
    \ of elements in the $upperMatches array.\n    return count($upperMatches);\n\
    }\n", "    return 0;\n}\n", "  $upperVowels = 0;\n  $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n  $strLen = strlen($s);\n  for ($i = 0; $i < $strLen; $i += 2) {\n\
    \    if (in_array($s[$i], $vowels) && ctype_upper($s[$i])) {\n      $upperVowels++;\n\
    \    }\n  }\n  return $upperVowels;\n}", "  $counter = 0;\n  for ($i = 0; $i <\
    \ strlen($s); $i++) {\n    if ($i % 2 == 0 && strpos(\"AEIOU\", $s[$i]) !== false)\
    \ {\n      $counter++;\n    }\n  }\n  return $counter;\n}\n", "  $count = 0;\n\
    \  $vowels = ['A', 'E', 'I', 'O', 'U'];\n  $even_indices = [];\n  for ($i = 0;\
    \ $i < strlen($s); $i += 2) {\n    array_push($even_indices, $s[$i]);\n  }\n \
    \ foreach ($even_indices as $char) {\n    if (in_array($char, $vowels)) {\n  \
    \    $count++;\n    }\n  }\n  return $count;\n}\necho count_upper('aBCdEf') .\
    \ PHP_EOL;\necho count_upper('abcdefg') . PHP_EOL;\necho count_upper('dBBE') .\
    \ PHP_EOL;", "  $count = 0;\n  for ($i = 0; $i < strlen($s); $i += 2) {\n    if\
    \ (strtoupper($s[$i]) == $s[$i]) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n", "  // your code here\n  $counter = 0;\n  $upper_vowels = array('A', 'E',\
    \ 'I', 'O', 'U');\n  for ($i = 0; $i < strlen($s); $i += 2) {\n    if (in_array($s[$i],\
    \ $upper_vowels)) {\n      $counter++;\n    }\n  }\n  return $counter;\n}\n",
  "  $upper_vowels = 0;\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $even_indices =\
    \ true;\n  $split_string = str_split($s);\n  foreach ($split_string as $value)\
    \ {\n    if ($even_indices) {\n      if (in_array($value, $vowels)) {\n      \
    \  $upper_vowels++;\n      }\n    }\n    $even_indices = !$even_indices;\n  }\n\
    \  return $upper_vowels;\n}", "    // your code here\n}", "  $result = 0;\n  $vowels\
    \ = ['A', 'E', 'I', 'O', 'U'];\n  for ($i = 0; $i < strlen($s); $i++) {\n    if\
    \ ($i % 2 === 0 && in_array($s[$i], $vowels)) {\n      $result++;\n    }\n  }\n\
    \  return $result;\n}", "    // WRITE YOUR CODE HERE\n}", "    // your code here\n\
    }", "  $upper_vowels = ['A', 'E', 'I', 'O', 'U'];\n  $c = 0;\n  for ($i = 0; $i\
    \ < strlen($s); $i++) {\n    if ($i % 2 == 0 && in_array($s[$i], $upper_vowels))\
    \ {\n      $c++;\n    }\n  }\n  return $c;\n}\n", "    // Write your code here\n\
    }", "    $count = 0;\n    for ($i = 0; $i < strlen($s); $i += 2) {\n        if\
    \ (is_upper($s[$i])) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n", "    $result = 0;\n    $vowels = ['A', 'E', 'I', 'O', 'U'];\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $vowels) && $i %\
    \ 2 == 0) {\n            $result++;\n        }\n    }\n    return $result;\n}",
  "  // Your code here\n  $r = '';\n  $r = preg_match_all('/[AEIOU]/', $s, $matches,\
    \ PREG_OFFSET_CAPTURE);\n  $a = 0;\n  foreach ($matches[0] as $key => $value)\
    \ {\n    if ($value[1] % 2 == 0) {\n      $a = $a + 1;\n    }\n  }\n  return $a;\n\
    }", "  $chars = str_split($s);\n  $evens = [];\n  $odds = [];\n  $vowels = [];\n\
    \  $uppers = [];\n  $vowels = array_merge($vowels, [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]);\n  $vowels = array_merge($vowels, [\"A\", \"E\", \"I\", \"O\", \"U\"\
    ]);\n  for ($i = 0; $i < count($chars); $i++) {\n    if ($i % 2 === 0) {\n   \
    \   array_push($evens, $chars[$i]);\n    } else {\n      array_push($odds, $chars[$i]);\n\
    \    }\n  }\n  for ($j = 0; $j < count($evens); $j++) {\n    if (in_array($evens[$j],\
    \ $vowels)) {\n      array_push($uppers, $evens[$j]);\n    }\n  }\n  for ($k =\
    \ 0; $k < count($odds); $k++) {\n    if (in_array($odds[$k], $vowels)) {\n   \
    \   array_push($uppers, $odds[$k]);\n    }\n  }\n  return count($uppers);\n}\n",
  "\t$counter = 0;\n\t$s_length = strlen($s);\n\tfor ($i = 0; $i < $s_length; $i++)\
    \ {\n\t\tif ($i % 2 === 0 && ctype_upper($s[$i])) {\n\t\t\t$counter++;\n\t\t}\n\
    \t}\n\treturn $counter;\n}", "\t$count = 0;\n\tfor ($i = 0; $i < strlen($s); $i\
    \ += 2) {\n\t\tif (preg_match('/[AEIOU]/', $s[$i])) {\n\t\t\t$count++;\n\t\t}\n\
    \t}\n\treturn $count;\n}\n", "\t// TODO\n}\n", "    $vowels = array('A', 'E',\
    \ 'I', 'O', 'U');\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if ($i % 2 == 0 && in_array($s[$i], $vowels)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "  $vowels = array('A', 'E', 'I', 'O',\
    \ 'U');\n  $counter = 0;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (in_array($s[$i],\
    \ $vowels) && $i % 2 == 0) {\n      $counter++;\n    }\n  }\n  return $counter;\n\
    }\necho count_upper('aBCdEf'); // 1\necho count_upper('abcdefg'); // 0\necho count_upper('dBBE');\
    \ // 0\necho count_upper('LOL'); // 1\n", "\n}\n", "\t$vowels = \"AEIOU\";\n\t\
    $count = 0;\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\tif ($i % 2 == 0) {\n\
    \t\t\t$c = $s[$i];\n\t\t\tif (strpos($vowels, $c) != -1) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n", "  //  Write code here\n  $count\
    \ = 0;\n  $letters = str_split($s);\n  for($i = 0; $i < count($letters); $i++){\n\
    \    if(preg_match('/[AEIOU]/', $letters[$i]) && $i % 2 == 0){\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n", "  $len = strlen($s);\n  $vowels = ['A',\
    \ 'E', 'I', 'O', 'U'];\n  $cnt = 0;\n  for ($i = 0; $i < $len; $i++) {\n    if\
    \ ($i % 2 == 0 && in_array($s[$i], $vowels)) {\n      $cnt++;\n    }\n  }\n  return\
    \ $cnt;\n}\n\necho count_upper('aBCdEf') . '<br>';\necho count_upper('abcdefg')\
    \ . '<br>';\necho count_upper('dBBE') . '<br>';", "\t$count = 0;\n\tfor ($i =\
    \ 0; $i < strlen($s); $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$c = $s[$i];\n\t\t\
    \t$is_uppercase = strtoupper($c) == $c;\n\t\t\t$is_vowel = in_array($c, array('a',\
    \ 'e', 'i', 'o', 'u'));\n\t\t\tif ($is_uppercase && $is_vowel) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n", "    $vowels = ['A', 'E', 'I', 'O',\
    \ 'U'];\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (in_array($s[$i], $vowels) && ($i % 2 == 0)) {\n            $count++;\n    \
    \    }\n    }\n    return $count;\n}\n", "\t$count = 0;\n\t$vowels = array('A',\
    \ 'E', 'I', 'O', 'U');\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\tif (in_array($s[$i],\
    \ $vowels) && $i % 2 == 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}",
  "    // write code here\n    // $index = 0;\n    // $count = 0;\n    // while($index\
    \ < strlen($s)) {\n    //     if($index % 2 != 0) {\n    //         if(ctype_upper($s[$index]))\
    \ {\n    //             $count++;\n    //         }\n    //     }\n    //    \
    \ $index++;\n    // }\n    // return $count;\n    return preg_match_all('/[aeiou]/i',\
    \ $s, $matches);\n}\n", "    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($i % 2 == 0 && is_upper($s[$i])) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}\n", "\t$c = 0;\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\tif ($i % 2 == 0 && ctype_upper($s[$i])) {\n\t\t\t$c++;\n\t\t}\n\
    \t}\n\treturn $c;\n}\necho count_upper('aBCdEf') . PHP_EOL;\necho count_upper('abcdefg')\
    \ . PHP_EOL;\necho count_upper('dBBE') . PHP_EOL;", "  $vowels = ['A', 'E', 'I',\
    \ 'O', 'U'];\n  $count = 0;\n  $s = str_split($s);\n  for ($i = 0; $i < sizeof($s);\
    \ $i++) {\n    if ($i % 2 == 0 && in_array($s[$i], $vowels)) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n", "    $vowels = ['A', 'E', 'I', 'O', 'U'];\n\
    \    $counter = 0;\n    for ($i = 0; $i < strlen($s); $i+=2) {\n        if (in_array($s[$i],\
    \ $vowels)) {\n            $counter++;\n        }\n    }\n    return $counter;\n\
    }\n\nif (__FILE__ == $_SERVER['SCRIPT_FILENAME']) {\n    $counter = count_upper('aBCdEf');\n\
    \    if ($counter === 1) {\n        echo 'Passed 1' . PHP_EOL;\n    } else {\n\
    \        echo 'Failed 1' . PHP_EOL;\n    }\n\n    $counter = count_upper('abcdefg');\n\
    \    if ($counter === 0) {\n        echo 'Passed 2' . PHP_EOL;\n    } else {\n\
    \        echo 'Failed 2' . PHP_EOL;\n    }\n\n    $counter = count_upper('dBBE');\n\
    \    if ($counter === 0) {\n        echo 'Passed 3' . PHP_EOL;\n    } else {\n\
    \        echo 'Failed 3' . PHP_EOL;\n    }\n}", "    $count = 0;\n    $s = str_split($s);\n\
    \    foreach ($s as $key => $char) {\n        if ($key % 2 == 0) {\n         \
    \   if (ctype_upper($char)) {\n                $count += 1;\n            }\n \
    \       }\n    }\n    return $count;\n}\n", "    $vowels = array('A', 'E', 'I',\
    \ 'O', 'U');\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n   \
    \     if (in_array($s[$i], $vowels) && $i % 2 == 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "    $count = 0;\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        if ($i % 2 === 0 && strtoupper($s[$i]) ===\
    \ $s[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "  $count = 0;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if ($i % 2 == 0 &&\
    \ ($s[$i] == 'A' || $s[$i] == 'E' || $s[$i] == 'I' || $s[$i] == 'O' || $s[$i]\
    \ == 'U')) {\n      $count++;\n    }\n  }\n  return $count;\n}\n", "    $count\
    \ = 0;\n    $pos = 2;\n    while ($pos < strlen($s)) {\n        if (preg_match('/[AEIOU]/',\
    \ $s[$pos])) {\n            $count++;\n        }\n        $pos += 2;\n    }\n\
    \    return $count;\n}\n", "  $count = 0;\n  for ($i = 0; $i < strlen($s); $i\
    \ += 2) {\n    if ($s[$i] == 'A' || $s[$i] == 'E' || $s[$i] == 'I' || $s[$i] ==\
    \ 'O' || $s[$i] == 'U') {\n      $count++;\n    }\n  }\n  return $count;\n}\n",
  "  // IMPLEMENT THIS FUNCTION\n  $counter = 0;\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if (ctype_upper($s[$i]) && $i % 2 == 0) {\n      $counter++;\n\
    \    }\n  }\n  return $counter;\n}\n", "  $count = 0;\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if ($i % 2 == 0 && $s[$i] == strtoupper($s[$i])) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}", "    $count = 0;\n    for ($i = 0; $i < strlen($s);\
    \ $i += 2) {\n        $char = substr($s, $i, 1);\n        if (ctype_upper($char))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$s = \"\
    aBCdEf\";\necho count_upper($s) . \"\\n\";\n\n$s = \"abcdefg\";\necho count_upper($s)\
    \ . \"\\n\";\n\n$s = \"dBBE\";\necho count_upper($s) . \"\\n\";", "  $count =\
    \ 0;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if ($i % 2 == 0 && strtoupper($s[$i])\
    \ == $s[$i]) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\necho count_upper('aBCdEf')\
    \ . \"\\n\";\necho count_upper('abcdefg') . \"\\n\";\necho count_upper('dBBE')\
    \ . \"\\n\";", "  $c = 0;\n  $vowels = ['A', 'E', 'I', 'O', 'U'];\n  for ($i =\
    \ 0; $i < strlen($s); $i++) {\n    if ($i % 2 == 0 && in_array($s[$i], $vowels))\
    \ {\n      $c++;\n    }\n  }\n  return $c;\n}\n\nprint count_upper('aBCdEf') .\
    \ \"\\n\";\nprint count_upper('abcdefg') . \"\\n\";\nprint count_upper('dBBE')\
    \ . \"\\n\";", "    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n \
    \       if ($i % 2 == 0 && $s[$i] == strtoupper($s[$i])) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "  $len = strlen($s);\n  $vowels\
    \ = 0;\n  for ($i = 0; $i < $len; $i++) {\n    if ($i % 2 == 0 && is_vowel($s[$i]))\
    \ {\n      $vowels++;\n    }\n  }\n  return $vowels;\n}\n", "\t// your code here\n\
    \t$count = 0;\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\tif (preg_match('/[AEIOU]/',\
    \ $s[$i]) && $i % 2 == 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n",
  "    // Write your code here\n    return 0;\n}\n", "    $index = 0;\n    $letters\
    \ = str_split($s);\n    $counter = 0;\n    foreach ($letters as $letter) {\n \
    \       if ($index % 2 == 0 && ctype_upper($letter)) {\n            $counter++;\n\
    \        }\n        $index++;\n    }\n    return $counter;\n}\n", "\t$count =\
    \ 0;\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\tif ($i % 2 == 0 && ctype_upper($s[$i]))\
    \ {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $count = 0;\n   \
    \ for ($i = 0; $i < strlen($s); $i += 2) {\n        if (ctype_upper($s[$i])) {\n\
    \            if (strcmp($s[$i], 'A') == 0 || strcmp($s[$i], 'E') == 0 || strcmp($s[$i],\
    \ 'I') == 0 || strcmp($s[$i], 'O') == 0 || strcmp($s[$i], 'U') == 0) {\n     \
    \           $count++;\n            }\n        }\n    }\n    return $count;\n}",
  "    $upper = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2\
    \ == 0 && (ord($s[$i]) == 'A' || ord($s[$i]) == 'E' || ord($s[$i]) == 'I' || ord($s[$i])\
    \ == 'O' || ord($s[$i]) == 'U')) {\n            $upper++;\n        }\n    }\n\
    \    return $upper;\n}\n\necho \"Test 1: \";\necho count_upper('aBCdEf') === 1\
    \ ? \"pass\\n\" : \"fail\\n\";\necho \"Test 2: \";\necho count_upper('abcdefg')\
    \ === 0 ? \"pass\\n\" : \"fail\\n\";\necho \"Test 3: \";\necho count_upper('dBBE')\
    \ === 0 ? \"pass\\n\" : \"fail\\n\";\necho \"Test 4: \";\necho count_upper('CDE')\
    \ === 3 ? \"pass\\n\" : \"fail\\n\";\necho \"Test 5: \";\necho count_upper('CCCCCC')\
    \ === 3 ? \"pass\\n\" : \"fail\\n\";\necho \"Test 6: \";\necho count_upper('CCCCe')\
    \ === 3 ? \"pass\\n\" : \"fail\\n\";\necho \"Test 7: \";\necho count_upper('CCCOCC')\
    \ === 3 ? \"pass\\n\" : \"fail\\n\";\necho \"Test 8: \";\necho count_upper('CCCCCCCC')\
    \ === 4 ? \"pass\\n\" : \"fail\\n\";\necho \"Test 9: \";\necho count_upper('ABCDEFG')\
    \ === 4 ? \"pass\\n\" : \"fail\\n\";\necho \"Test 10: \";\necho count_upper('ABCDEFG')\
    \ === 4 ? \"pass\\n\" : \"fail\\n\";\necho \"Test 11: \";\necho count_upper('uABCDEFG')\
    \ === 4 ? \"pass\\n\" : \"fail\\n\";\necho \"Test 12: \";\necho count_upper('aA')\
    \ === 1 ? \"pass\\n\" : \"fail\\n\";\necho \"Test 13: \";", "  $count = 0;\n \
    \ $vowels = array('A', 'E', 'I', 'O', 'U');\n  for ($i = 0; $i < strlen($s); $i++)\
    \ {\n    if ($i % 2 == 0 && in_array($s[$i], $vowels)) {\n      $count++;\n  \
    \  }\n  }\n  return $count;\n}", "  $even_vowels = 0;\n  $uppercase_vowels = 0;\n\
    \  for ($i = 0; $i < strlen($s); $i++) {\n    if ($i % 2 == 0) {\n      if (strtoupper($s[$i])\
    \ == 'A' || strtoupper($s[$i]) == 'E' || strtoupper($s[$i]) == 'I' || strtoupper($s[$i])\
    \ == 'O' || strtoupper($s[$i]) == 'U') {\n        $even_vowels++;\n      }\n \
    \   }\n    if (strtoupper($s[$i]) == 'A' || strtoupper($s[$i]) == 'E' || strtoupper($s[$i])\
    \ == 'I' || strtoupper($s[$i]) == 'O' || strtoupper($s[$i]) == 'U') {\n      $uppercase_vowels++;\n\
    \    }\n  }\n  return $even_vowels - $uppercase_vowels;\n}\n\necho count_upper('aBCdEf')\
    \ . PHP_EOL;\necho count_upper('abcdefg') . PHP_EOL;\necho count_upper('dBBE')\
    \ . PHP_EOL;", "    return 0;\n}", "    $s = strtolower($s);\n    $num = 0;\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 === 0 && in_array($s[$i],\
    \ ['a', 'e', 'i', 'o', 'u'])) {\n            $num++;\n        }\n    }\n    return\
    \ $num;\n}\n\necho count_upper('aBCdEf') . \"\\n\";\necho count_upper('abcdefg')\
    \ . \"\\n\";\necho count_upper('dBBE') . \"\\n\";", "    $count = 0;\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 === 0 && ctype_upper($s[$i]))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n", "    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($s); $i += 2) {\n        if ($s[$i] === strtoupper($s[$i]))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    $answer\
    \ = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_upper($s[$i])\
    \ && $i % 2 == 0) {\n            $answer++;\n        }\n    }\n    return $answer;\n\
    }\n\necho count_upper('abcdefg');\n", "    $len = strlen($s);\n    $cnt = 0;\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n           \
    \ $c = substr($s, $i, 1);\n            if (is_upper($c)) {\n                $cnt++;\n\
    \            }\n        }\n    }\n    return $cnt;\n}\n", "    $counter = 0;\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 == 0) {\n     \
    \       if (strtoupper($s[$i]) == $s[$i]) {\n                if ($s[$i] == 'A'\
    \ || $s[$i] == 'E' || $s[$i] == 'I' || $s[$i] == 'O' || $s[$i] == 'U') {\n   \
    \                 $counter++;\n                }\n            }\n        }\n \
    \   }\n    return $counter;\n}", "    $count = 0;\n    for ($i = 0; $i < strlen($s);\
    \ $i += 2) {\n        if (ctype_upper($s[$i])) {\n            $count++;\n    \
    \    }\n    }\n    return $count;\n}", "  $upper = 0;\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if (ctype_upper($s[$i]) && $i % 2 == 0) {\n      $upper++;\n  \
    \  }\n  }\n  return $upper;\n}\n", "\t$even_vowels = '';\n\t$odd_vowels = '';\n\
    \t$len = strlen($s);\n\t$counter = 0;\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t\
    if ($i % 2 == 0) {\n\t\t\t$even_vowels .= $s[$i];\n\t\t} else {\n\t\t\t$odd_vowels\
    \ .= $s[$i];\n\t\t}\n\t}\n\t$len_even = strlen($even_vowels);\n\t$len_odd = strlen($odd_vowels);\n\
    \tfor ($j = 0; $j < $len_even; $j++) {\n\t\tif ($even_vowels[$j] == 'A' || $even_vowels[$j]\
    \ == 'E' || $even_vowels[$j] == 'I' || $even_vowels[$j] == 'O' || $even_vowels[$j]\
    \ == 'U') {\n\t\t\t$counter++;\n\t\t}\n\t}\n\tfor ($k = 0; $k < $len_odd; $k++)\
    \ {\n\t\tif ($odd_vowels[$k] == 'a' || $odd_vowels[$k] == 'e' || $odd_vowels[$k]\
    \ == 'i' || $odd_vowels[$k] == 'o' || $odd_vowels[$k] == 'u') {\n\t\t\t$counter++;\n\
    \t\t}\n\t}\n\treturn $counter;\n}\n", "  $count = 0;\n  for ($i = 0; $i < strlen($s);\
    \ $i += 2) {\n    $vowels = ['A', 'E', 'I', 'O', 'U'];\n    if (in_array($s[$i],\
    \ $vowels)) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n$s = 'abcdefg';\n\
    echo count_upper($s) . \"\\n\";", "  $count = 0;\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if ($i % 2 == 0 && ctype_upper($s[$i])) {\n      $count++;\n  \
    \  }\n  }\n  return $count;\n}\n\n$ans = 1;\n$tests = ['aBCdEf', 'abcdefg', 'dBBE'];\n\
    \nforeach ($tests as $test) {\n  if (count_upper($test) != $ans) {\n    echo \"\
    FAILED: \" . count_upper($test) . \" != $ans: $test\\n\";\n    exit(1);\n  }\n\
    }\n\necho \"PASSED\\n\";", "    $vowels = \"AEIOU\";\n    $counter = 0;\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_upper($s[$i]) && ctype_alpha($s[$i])\
    \ && $i % 2 == 0) {\n            $counter += 1;\n        }\n    }\n    return\
    \ $counter;\n}\n\n$s = \"abcdefg\";\necho \"s = \".$s.\"\\n\";\necho \"count_upper(s)\
    \ = \".count_upper($s).\"\\n\";\n\n$s = \"aBCdEf\";\necho \"s = \".$s.\"\\n\"\
    ;\necho \"count_upper(s) = \".count_upper($s).\"\\n\";\n\n$s = \"dBBE\";\necho\
    \ \"s = \".$s.\"\\n\";\necho \"count_upper(s) = \".count_upper($s).\"\\n\";",
  "    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2\
    \ == 0 && ctype_upper($s[$i])) $count++;\n    }\n    return $count;\n}\n\necho\
    \ count_upper('aBCdEf') . \"\\n\";\necho count_upper('abcdefg') . \"\\n\";\necho\
    \ count_upper('dBBE') . \"\\n\";\n", "    $answer = 0;\n    $letters = str_split($s);\n\
    \    foreach ($letters as $key => $value) {\n        if ($key % 2 == 0) {\n  \
    \          if (ctype_upper($value)) {\n                $answer += 1;\n       \
    \     }\n        }\n    }\n    return $answer;\n}", "  $count = 0;\n  for ($i\
    \ = 0; $i < strlen($s); $i++) {\n    if ($i % 2 == 0 && ctype_upper($s[$i])) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\n$s = 'aBCdEf';\necho \"count_upper('$s')\
    \ returns \" . count_upper($s) . \"<br>\";\n\n$s = 'abcdefg';\necho \"count_upper('$s')\
    \ returns \" . count_upper($s) . \"<br>\";\n\n$s = 'dBBE';\necho \"count_upper('$s')\
    \ returns \" . count_upper($s) . \"<br>\";", "    $s = strtolower($s);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 === 0 &&\
    \ in_array($s[$i], array('a', 'e', 'i', 'o', 'u'))) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\necho count_upper('aBCdEf');\necho\
    \ \"\\n\";\necho count_upper('abcdefg');\necho \"\\n\";\necho count_upper('dBBE');\n\
    echo \"\\n\";", "  // Write your code here\n  $count = 0;\n  for ($i = 0; $i <\
    \ strlen($s); $i++) {\n    if (preg_match('/[A-Z]/', $s[$i]) && $i % 2 == 0) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}", "  // Your code here\n}",
  "  $upper_vowels = array('A', 'E', 'I', 'O', 'U');\n  $count = 0;\n  for ($i = 0;\
    \ $i < strlen($s); $i += 2) {\n    if (in_array($s[$i], $upper_vowels)) {\n  \
    \    $count++;\n    }\n  }\n  return $count;\n}\n", "    $counter = 0;\n    $arr\
    \ = str_split($s);\n    for ($i = 0; $i < count($arr); $i+=2) {\n        if (ctype_upper($arr[$i]))\
    \ $counter++;\n    }\n    return $counter;\n}", "  $vowels = array(\"A\", \"E\"\
    , \"I\", \"O\", \"U\");\n  $count = 0;\n  for ($i = 0; $i < strlen($s); $i++)\
    \ {\n    if ((in_array($s[$i], $vowels)) && ($i % 2 == 0)) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n", "  $count = 0;\n  $vowels = array('A', 'E',\
    \ 'I', 'O', 'U');\n  for ($i = 0; $i < strlen($s); $i++) {\n    if ($i % 2 ==\
    \ 0 && in_array($s[$i], $vowels)) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n\n$tests = array(\n  'aBCdEf' => 1,\n  'abcdefg' => 0,\n  'dBBE' => 0,\n  'dBBEA'\
    \ => 2,\n  'dBBEI' => 2,\n  'BBEI' => 2,\n  'BBE' => 1,\n  'BBAE' => 1,\n  'BBAEI'\
    \ => 2,\n  'BBAII' => 2,\n  'BBIAI' => 2,\n  'BBI' => 1,\n  'BB' => 0,\n  'B'\
    \ => 0,\n  'BpEi' => 0,\n  'BpEI' => 2,\n  'iApEI' => 1,\n  'iApEIi' => 1,\n \
    \ 'iApEIip' => 1,\n  'iApEIipe' => 1,\n  'iApEIipep' => 2,\n  'iApEIipeps' =>\
    \ 2,\n  'iIpeps' => 2,\n  'Ipeps' => 2,\n  'Ipepsf' => 2,\n  'eIpepsf' => 1,\n\
    \  'eIpepsfA' => 2,\n  'eIpepsfAi' => 2,\n  'eIpepsfAI' => 3,\n  'eIpepsfAII'\
    \ => 3,\n  'bbeAII' => 2,\n  'bbeAII' => 2,\n  'bbeAIIK' => 3,\n  'bbeAIIKa' =>\
    \ 3,\n  'bbeAIIKaa' => 3,\n  'bbeAIIKaaa' => 3,\n  'bbeAIIKaaaa'", "  $count =\
    \ 0;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (strpos(\"AEIOU\", $s[$i])\
    \ !== false && $i % 2 == 0) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n\necho count_upper('aBCdEf') . \"\\n\"; // returns 1\necho count_upper('abcdefg')\
    \ . \"\\n\"; // returns 0\necho count_upper('dBBE') . \"\\n\"; // returns 0\n",
  "  $vowels = array('A', 'E', 'I', 'O', 'U');\n  $count = 0;\n  $len = strlen($s);\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($i % 2 == 0 && in_array($s[$i], $vowels))\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\necho count_upper('aBCdEf')\
    \ . \"\\n\";\necho count_upper('abcdefg') . \"\\n\";\necho count_upper('dBBE')\
    \ . \"\\n\";", "\t$count = 0;\n\t$s_array = str_split($s);\n\t\n\tfor ($i = 0;\
    \ $i < count($s_array); $i += 2) {\n\t\t$s_array[$i] = strtoupper($s_array[$i]);\n\
    \t\tif ($s_array[$i] == 'A' || $s_array[$i] == 'E' || $s_array[$i] == 'I' || $s_array[$i]\
    \ == 'O' || $s_array[$i] == 'U') {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\t\n\treturn\
    \ $count;\n}", "  \n}\n", "  $count = 0;\n  for ($i = 0; $i < strlen($s); $i++)\
    \ {\n    if ($i % 2 === 0 && ctype_upper($s[$i])) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}", "  $vowels = \"aeiouAEIOU\";\n  $vowel_count = 0;\n\
    \  for ($i = 0; $i < strlen($s); $i += 2) {\n    if (strpos($vowels, $s[$i]) !==\
    \ false) {\n      $vowel_count++;\n    }\n  }\n  return $vowel_count;\n}", " \
    \   $count = 0;\n    for ($i = 0; $i < strlen($s); $i += 2) {\n        if ($s[$i]\
    \ === strtoupper($s[$i])) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "  $arr = str_split($s);\n  $count = 0;\n  for ($i = 0; $i < count($arr);\
    \ $i+=2) {\n    if (strstr(\"AEIOU\", strtoupper($arr[$i]))) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}", "    // Your code here\n    $count = 0;\n \
    \   for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 == 0 && (strcmp($s[$i],\
    \ 'A') == 0 || strcmp($s[$i], 'E') == 0 || strcmp($s[$i], 'I') == 0 || strcmp($s[$i],\
    \ 'O') == 0 || strcmp($s[$i], 'U') == 0)) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    // your code here\n}", "  $count = 0;\n \
    \ $vowels = array('A', 'E', 'I', 'O', 'U');\n  for ($i = 0; $i < strlen($s); $i\
    \ += 2) {\n    if (in_array($s[$i], $vowels)) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}", "    return 0;\n}\n", "    $count = 0;\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        if ($i % 2 == 0) {\n            if (preg_match('/[AEIOU]/',\
    \ $s[$i])) {\n                $count++;\n            }\n        }\n    }\n   \
    \ return $count;\n}\n", "\n}", "    $upper_vowels = [\"A\", \"E\", \"I\", \"O\"\
    , \"U\"];\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n      \
    \  if ($i % 2 === 0 && in_array($s[$i], $upper_vowels)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "\t// your code here\n}\n\necho count_upper('aBCdEf')\
    \ . \"\\n\"; // 1\necho count_upper('abcdefg') . \"\\n\"; // 0\necho count_upper('dBBE')\
    \ . \"\\n\"; // 0\necho count_upper('dBBE') . \"\\n\"; // 0\necho count_upper('dBBE')\
    \ . \"\\n\"; // 0\necho count_upper('dBBE') . \"\\n\"; // 0\necho count_upper('dBBE')\
    \ . \"\\n\"; // 0\necho count_upper('dBBE') . \"\\n\"; // 0\n", "  $count = 0;\n\
    \  for ($i = 0; $i < strlen($s); $i++) {\n    if ($i % 2 == 0 && ctype_upper($s[$i]))\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\n", "    $count = 0;\n \
    \   $len = strlen($s);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i %\
    \ 2 == 0 && strpos('AEIOU', $s[$i]) !== false) {\n            $count++;\n    \
    \    }\n    }\n    return $count;\n}", "    $count = 0;\n    $len = strlen($s);\n\
    \    for ($i = 0; $i < $len; $i += 2) {\n        $c = $s[$i];\n        if (preg_match('/[AEIOU]/',\
    \ $c)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n", " \
    \   $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2\
    \ == 0) {\n            $char = substr($s, $i, 1);\n            if (strtoupper($char)\
    \ == $char) {\n                $count++;\n            }\n        }\n    }\n  \
    \  return $count;\n}", "  // Your code here\n}\n", "    return 0;\n}\n", "   \
    \ $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 ==\
    \ 0 && ($s[$i] == 'A' || $s[$i] == 'E' || $s[$i] == 'I' || $s[$i] == 'O' || $s[$i]\
    \ == 'U')) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo count_upper('aBCdEf') . \"\\n\";\necho count_upper('abcdefg') . \"\\n\";\n\
    echo count_upper('dBBE') . \"\\n\";", "  $upperVowels = ['A', 'E', 'I', 'O', 'U'];\n\
    \  $upperCount = 0;\n  $upperVowelIndex = [];\n  $counter = 0;\n  for ($i = 0;\
    \ $i < strlen($s); $i++) {\n    for ($j = 0; $j < sizeof($upperVowels); $j++)\
    \ {\n      if ($s[$i] === $upperVowels[$j]) {\n        $upperVowelIndex[$counter]\
    \ = $i;\n        $counter++;\n      }\n    }\n  }\n  for ($i = 0; $i < sizeof($upperVowelIndex);\
    \ $i++) {\n    if ($upperVowelIndex[$i] % 2 === 0) {\n      $upperCount++;\n \
    \   }\n  }\n  return $upperCount;\n}", "\t//$vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \t$counter = 0;\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\tif ($i % 2 == 0)\
    \ {\n\t\t\t$s[$i] = strtolower($s[$i]);\n\t\t}\n\t\tif (preg_match('/[aeiou]/',\
    \ $s[$i])) {\n\t\t\t$counter++;\n\t\t}\n\t}\n\treturn $counter;\n}\n", "\t$upper\
    \ = 0;\n\tfor ($i = 0; $i < strlen($s); $i += 2) {\n\t\t$letter = substr($s, $i,\
    \ 1);\n\t\tif ($letter == 'A' || $letter == 'E' || $letter == 'I' || $letter ==\
    \ 'O' || $letter == 'U') {\n\t\t\t$upper++;\n\t\t}\n\t}\n\treturn $upper;\n}\n",
  "  $count = 0;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (preg_match('/[AEIOU]/',\
    \ $s[$i]) && $i % 2 == 0) {\n      $count++;\n    }\n  }\n  return $count;\n}",
  "  $count = 0;\n  $s = str_split($s);\n  foreach ($s as $i => $value) {\n    if\
    \ ($i % 2 == 0 && in_array($value, array('A', 'E', 'I', 'O', 'U'))) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\necho count_upper('aBCdEf') . \"\\n\"; // 1\n\
    echo count_upper('abcdefg') . \"\\n\"; // 0\necho count_upper('dBBE') . \"\\n\"\
    ; // 0\necho count_upper('dBBEAEIOU') . \"\\n\"; // 5\necho count_upper('aeioO')\
    \ . \"\\n\"; // 1\necho count_upper('eioEEiO') . \"\\n\"; // 2\necho count_upper('AeioO')\
    \ . \"\\n\"; // 2\necho count_upper('EioEEiO') . \"\\n\"; // 3\necho count_upper('AeioO')\
    \ . \"\\n\"; // 2\necho count_upper('eioEEiO') . \"\\n\"; // 2\necho count_upper('eioEeiO')\
    \ . \"\\n\"; // 2\necho count_upper('EIOUeioO') . \"\\n\"; // 4\necho count_upper('EIOUeioOEIOU')\
    \ . \"\\n\"; // 8\necho count_upper('EIOUeiooEIOU') . \"\\n\"; // 4\necho count_upper('AEIOUeioO')\
    \ . \"\\n\"; // 4\necho count_upper('AEIOUeioOEIOU') . \"\\n\"; // 8\necho count_upper('AEIOUeiooEIOU')\
    \ . \"\\n\"; // 4\necho count_upper('AEIOUeiooEIOUEIOU') . \"\\n\"; // 8\necho\
    \ count_upper('AEIOUeiooEIOUEIOUeiooEIOU') . \"\\n\"; // 12\necho count_upper('AEIOUeiooEIOUEIOUeiooEIOUEIOU')\
    \ . \"\\n\"; // 16\necho count_upper('aeioueiooEIOU') . \"\\n\"; // 0\n", "\t\
    $count = 0;\n\t$s = str_split($s);\n\tfor ($i = 0; $i < count($s); $i++) {\n\t\
    \tif ($i % 2 == 0 && ctype_upper($s[$i])) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\necho count_upper('aBCdEf') . \"\\n\"; // 1\necho count_upper('abcdefg')\
    \ . \"\\n\"; // 0\necho count_upper('dBBE') . \"\\n\"; // 0\n", "  $count = 0;\n\
    \  for ($i = 0; $i < strlen($s); $i++) {\n    if ($i % 2 == 0 && ctype_upper($s[$i]))\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\n", "    $i = 0;\n    $result\
    \ = 0;\n    while ($i < strlen($s)) {\n        if ($i % 2 == 0 && $s[$i] == strtoupper($s[$i]))\
    \ {\n            $result++;\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $count = 0;\n    for ($i = 0; $i < strlen($s); $i += 2) {\n       \
    \ $char = $s[$i];\n        $uppercase = strtoupper($char);\n        if ($char\
    \ === $uppercase &&\n            strcasecmp($char, 'a') == 0 ||\n            strcasecmp($char,\
    \ 'e') == 0 ||\n            strcasecmp($char, 'i') == 0 ||\n            strcasecmp($char,\
    \ 'o') == 0 ||\n            strcasecmp($char, 'u') == 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    $count = 0;\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        if ($i % 2 == 0 && ctype_upper($s[$i])) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\necho count_upper('aBCdEf')\
    \ . \"\\n\";\necho count_upper('abcdefg') . \"\\n\";\necho count_upper('dBBE')\
    \ . \"\\n\";", "    $count = 0;\n    $len = strlen($s);\n    for ($i = 0; $i <\
    \ $len; $i += 2) {\n        if (strtoupper($s[$i]) == $s[$i]) $count++;\n    }\n\
    \    return $count;\n}\n", "  $vowels = ['A', 'E', 'I', 'O', 'U'];\n  $result\
    \ = 0;\n  for ($i = 0; $i < strlen($s); $i += 2) {\n    if (in_array($s[$i], $vowels))\
    \ {\n      $result++;\n    }\n  }\n  return $result;\n}", "    $vowels = array('A',\
    \ 'E', 'I', 'O', 'U');\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($i % 2 == 0 && in_array($s[$i], $vowels)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "\n}", "  $upper = 0;\n  $low = 0;\n\
    \  for ($i = 0; $i < strlen($s); $i++) {\n    if ($i % 2 == 0) {\n      if ($s[$i]\
    \ == strtoupper($s[$i])) {\n        $upper++;\n      }\n    }\n  }\n  return $upper;\n\
    }\n", "    $cnt = 0;\n    for ($i = 0; $i < strlen($s); $i += 2) {\n        if\
    \ (strpos('AEIOU', $s[$i]) !== false) {\n            $cnt++;\n        }\n    }\n\
    \    return $cnt;\n}\n", "    $upper = 0;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($i % 2 == 0 && ctype_upper($s[$i])) {\n            $upper++;\n\
    \        }\n    }\n    return $upper;\n}", "    $vowels = ['A', 'E', 'I', 'O',\
    \ 'U'];\n    $counter = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n      \
    \  if ($i % 2 == 0 && in_array($s[$i], $vowels)) {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}", "\n}\n", "  $str_len = strlen($s);\n\
    \  $vowels = array('A', 'E', 'I', 'O', 'U');\n  $count = 0;\n  for ($i = 0; $i\
    \ < $str_len; $i+=2) {\n    if (in_array($s[$i], $vowels)) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}", "    // iterate through the string and check\
    \ if the vowels are in even positions and have an uppercase letter\n    // if\
    \ they do, increment a counter\n    $upperCount = 0;\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if ($i % 2 == 0 && (preg_match('/[A-Z]/', $s[$i]) && preg_match('/[aeiou]/',\
    \ $s[$i]))) {\n            $upperCount++;\n        }\n    }\n    return $upperCount;\n\
    }\n\necho count_upper('aBCdEf') . \"\\n\";\necho count_upper('abcdefg') . \"\\\
    n\";\necho count_upper('dBBE') . \"\\n\";", "\n}", "    $vowels = ['A', 'E', 'I',\
    \ 'O', 'U'];\n    $count = 0;\n    $length = strlen($s);\n    for ($i = 0; $i\
    \ < $length; $i++) {\n        if ($i % 2 == 0 && in_array($s[$i], $vowels)) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n", "    $vowels\
    \ = ['A', 'E', 'I', 'O', 'U'];\n    $count = 0;\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if ($i % 2 === 0 && in_array($s[$i], $vowels)) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}", "  // TODO\n}\n\n/**\n\
    \ * Tests for count_upper.\n */\nclass CountUpperTest extends PHPUnit_Framework_TestCase\
    \ {\n  public function testCountUpper() {\n    $this->assertEquals(1, count_upper('aBCdEf'));\n\
    \    $this->assertEquals(0, count_upper('abcdefg'));\n    $this->assertEquals(0,\
    \ count_upper('dBBE'));\n  }\n}", "    $count = 0;\n    for ($i = 0; $i < strlen($s);\
    \ $i += 2) {\n        if (ctype_upper($s[$i])) {\n            $count++;\n    \
    \    }\n    }\n    return $count;\n}\n", "\t$vowels = array('A', 'E', 'I', 'O',\
    \ 'U');\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\tif (($i %\
    \ 2 == 0) && in_array($s[$i], $vowels)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\necho count_upper('aBCdEf') . \"\\n\";\necho count_upper('abcdefg')\
    \ . \"\\n\";\necho count_upper('dBBE') . \"\\n\";", "    $count = 0;\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 == 0 && preg_match('/[AEIOU]/',\
    \ $s[$i])) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo count_upper('aBCdEf');\necho '<br>';\necho count_upper('abcdefg');\necho\
    \ '<br>';\necho count_upper('dBBE');\necho '<br>';\necho count_upper('dBBEE');\n\
    echo '<br>';", "  $count = 0;\n  for ($i = 0; $i < strlen($s); $i+=2) {\n    $char\
    \ = $s[$i];\n    if (isUpper($char)) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}", "  $vowels = array('A', 'E', 'I', 'O', 'U');\n  $count = 0;\n \
    \ for ($i = 0; $i < strlen($s); $i++) {\n    if (in_array($s[$i], $vowels) &&\
    \ ($i % 2 === 0)) {\n      $count++;\n    }\n  }\n  return $count;\n}\necho count_upper('dBBE');",
  "}\n", "    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i\
    \ % 2 == 0 && ctype_upper($s[$i])) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    $vowels = ['A', 'E', 'I', 'O',\
    \ 'U'];\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 === 0 &&\
    \ in_array($s[$i], $vowels)) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$count = strlen($s);\n\
    \t\t$lower = strtolower($s);\n\t\t$vowels = 0;\n\t\tif ($lower[$i] == 'a' || $lower[$i]\
    \ == 'e' || $lower[$i] == 'i' || $lower[$i] == 'o' || $lower[$i] == 'u') {\n\t\
    \t\tif ($i % 2 == 0) {\n\t\t\t\tif ($s[$i] == 'A' || $s[$i] == 'E' || $s[$i] ==\
    \ 'I' || $s[$i] == 'O' || $s[$i] == 'U') {\n\t\t\t\t\t$vowels++;\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $vowels;\n}", "    $count = 0;\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if ($i % 2 == 0) {\n            if (ctype_upper($s[$i]))\
    \ {\n                $count += 1;\n            }\n        }\n    }\n    return\
    \ $count;\n}\n$s = 'aBCdEf';\necho count_upper($s);", "  $evens = str_split($s,\
    \ 2);\n  $count = 0;\n  foreach ($evens as $char) {\n    if (ctype_upper($char))\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}", "    $count = 0;\n   \
    \ for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 == 0 && ctype_upper($s[$i]))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\necho \"count_upper('aBCdEf')\
    \ returns \" . count_upper('aBCdEf') . \"\\n\";\necho \"count_upper('abcdefg')\
    \ returns \" . count_upper('abcdefg') . \"\\n\";\necho \"count_upper('dBBE') returns\
    \ \" . count_upper('dBBE') . \"\\n\";\n", "    // Write your code here\n    $vowels\
    \ = array(\"A\", \"E\", \"I\", \"O\", \"U\");\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($s); $i+=2) {\n        if (in_array($s[$i], $vowels)) {\n   \
    \         $count++;\n        }\n    }\n    return $count;\n}\n\nprint count_upper('aBCdEf')\
    \ . \"\\n\";\nprint count_upper('abcdefg') . \"\\n\";\nprint count_upper('dBBE')\
    \ . \"\\n\";\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

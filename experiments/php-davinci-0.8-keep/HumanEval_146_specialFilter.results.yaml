name: HumanEval_146_specialFilter
language: php
results:
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (abs($num) > 10 && $num % 2 != 0) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\necho specialFilter([15,\
    \ -73, 14, -15]) . \"\\n\"; // 1\necho specialFilter([33, -2, -3, 45, 21, 109])\
    \ . \"\\n\"; // 2\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkawk2d5n.php:26\n\
    Stack trace:\n#0 /tmp/tmpkawk2d5n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkawk2d5n.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $numStr\
    \ = (string) $num;\n            if (strlen($numStr) > 1) {\n                if\
    \ ($numStr[0] % 2 == 1 && $numStr[strlen($numStr) - 1] % 2 == 1) {\n         \
    \           $count++;\n                }\n            }\n        }\n    }\n  \
    \  return $count;\n}\necho \"specialFilter([15, -73, 14, -15]) => 1\" . \"<br>\"\
    ;\necho specialFilter([15, -73, 14, -15]) . \"<br>\";\necho \"specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\" . \"<br>\";\necho specialFilter([33, -2, -3, 45,\
    \ 21, 109]) . \"<br>\";\necho \"specialFilter([44, 21, -23, 65, -52, 11, -12])\
    \ => 0\" . \"<br>\";\necho specialFilter([44, 21, -23, 65, -52, 11, -12]) . \"\
    <br>\";\necho \"specialFilter([66, -25, 15, -15, 16, -32, -26, -4, -17, -7]) =>\
    \ 3\" . \"<br>\";\necho specialFilter([66, -25, 15, -15, 16, -32, -26, -4, -17,\
    \ -7]) . \"<br>\";\necho \"specialFilter([-10, -5, -19, -21, -33, -15, -3, -3,\
    \ -3, -2]) => 1\" . \"<br>\";\necho specialFilter([-10, -5, -19, -21, -33, -15,\
    \ -3, -3, -3, -2]) . \"<br>\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: specialFilter([15, -73, 14, -15]) => 1<br>1<br>specialFilter([33, -2, -3,
    45, 21, 109]) => 2<br>2<br>specialFilter([44, 21, -23, 65, -52, 11, -12]) => 0<br>1<br>specialFilter([66,
    -25, 15, -15, 16, -32, -26, -4, -17, -7]) => 3<br>1<br>specialFilter([-10, -5,
    -19, -21, -33, -15, -3, -3, -3, -2]) => 1<br>0<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 && $num\
    \ < -10 && $num % 2 != 0) {\n            $str = (string)$num;\n            if\
    \ ($str[0] == 1 || $str[0] == 3 || $str[0] == 5 || $str[0] == 7 || $str[0] ==\
    \ 9 || $str[0] == -1 || $str[0] == -3 || $str[0] == -5 || $str[0] == -7 || $str[0]\
    \ == -9) {\n                if ($str[strlen($str) - 1] == 1 || $str[strlen($str)\
    \ - 1] == 3 || $str[strlen($str) - 1] == 5 || $str[strlen($str) - 1] == 7 || $str[strlen($str)\
    \ - 1] == 9 || $str[strlen($str) - 1] == -1 || $str[strlen($str) - 1] == -3 ||\
    \ $str[strlen($str) - 1] == -5 || $str[strlen($str) - 1] == -7 || $str[strlen($str)\
    \ - 1] == -9) {\n                    $count++;\n                }\n          \
    \  }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpudyylggs.php:28\n\
    Stack trace:\n#0 /tmp/tmpudyylggs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpudyylggs.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (strlen($num) > 1 && $num > 10) {\n\
    \            $firstDigit = substr($num, 0, 1);\n            $lastDigit = substr($num,\
    \ -1);\n            if ($firstDigit % 2 == 1 && $lastDigit % 2 == 1) {\n     \
    \           $count += 1;\n            }\n        }\n    }\n    return $count;\n\
    }\n\nif (specialFilter([15, -73, 14, -15]) == 1) {\n    echo \"Test 1 Passed!\"\
    ;\n} else {\n    echo \"Test 1 Failed!\";\n}\necho \"<br>\";\nif (specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2) {\n    echo \"Test 2 Passed!\";\n} else {\n    echo\
    \ \"Test 2 Failed!\";\n}\necho \"<br>\";\nif (specialFilter([10, -2, -3, 45, 21,\
    \ 109]) == 1) {\n    echo \"Test 3 Passed!\";\n} else {\n    echo \"Test 3 Failed!\"\
    ;\n}\necho \"<br>\";\nif (specialFilter([1, 2, 3, 4, 5, 6]) == 0) {\n    echo\
    \ \"Test 4 Passed!\";\n} else {\n    echo \"Test 4 Failed!\";\n}\necho \"<br>\"\
    ;\nif (specialFilter([10, -2, -3, 45, 21, 909]) == 2) {\n    echo \"Test 5 Passed!\"\
    ;\n} else {\n    echo \"Test 5 Failed!\";\n}\necho \"<br>\";\nif (specialFilter([109,\
    \ -2, -3, 45, 21, 109]) == 1) {\n    echo \"Test 6 Passed!\";\n} else {\n    echo\
    \ \"Test 6 Failed!\";\n}\necho \"<br>\";\nfunction candidate(...$args) {\n   \
    \ return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Test 1 Passed!<br>Test 2 Passed!<br>Test 3 Passed!<br>Test 4 Passed!<br>Test
    5 Failed!<br>Test 6 Failed!<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 == 1 && ($num\
    \ % 10) % 2 == 1) $count++;\n    }\n    return $count;\n}\n\necho specialFilter([15,\
    \ -73, 14, -15]) . \"<br>\"; // 1\necho specialFilter([33, -2, -3, 45, 21, 109])\
    \ . \"<br>\"; // 2\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>4<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaui4pjq6.php:25\n\
    Stack trace:\n#0 /tmp/tmpaui4pjq6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpaui4pjq6.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojgegw_z.php:15\n\
    Stack trace:\n#0 /tmp/tmpojgegw_z.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpojgegw_z.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 !== 0 && $num\
    \ % 10 !== 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nvar_dump(specialFilter([15, -73, 14, -15])); // 1\nvar_dump(specialFilter([33,\
    \ -2, -3, 45, 21, 109])); // 2\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(1)\nint(4)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7x8nlzw3.php:28\n\
    Stack trace:\n#0 /tmp/tmp7x8nlzw3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7x8nlzw3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $counter =\
    \ 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 10\
    \ && $nums[$i] % 2 !== 0 && $nums[$i] % 10 !== 0) {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}\necho specialFilter([15, -73, 14, -15]);\n\
    echo '<br>';\necho specialFilter([33, -2, -3, 45, 21, 109]);\necho '<br>';\necho\
    \ specialFilter([71, -35, -1, 46, 21, 101]);\necho '<br>';\necho specialFilter([-71,\
    \ -35, -1, 46, 21, 111]);\necho '<br>';\necho specialFilter([-71, -35, 0, 46,\
    \ 21, 111]);\necho '<br>';\necho specialFilter([71, -35, 0, 46, 21, 101]);\necho\
    \ '<br>';\necho specialFilter([-71, -35, 1, 46, 21, 111]);\necho '<br>';\necho\
    \ specialFilter([71, -35, 1, 46, 21, 101]);\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>4<br>3<br>2<br>2<br>3<br>2<br>3\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp544udv_5.php:39\nStack trace:\n#0 /tmp/tmp544udv_5.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp544udv_5.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$firstDigit = $num %\
    \ 10;\n\t\t\twhile ($num > 10) {\n\t\t\t\t$num = floor($num / 10);\n\t\t\t}\n\t\
    \t\tif ($num % 2 != 0 && $firstDigit % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn $count;\n}\necho specialFilter([15, -73, 14, -15]);\necho\
    \ specialFilter([33, -2, -3, 45, 21, 109]);\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpftda3wi0.php:32\n\
    Stack trace:\n#0 /tmp/tmpftda3wi0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpftda3wi0.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $num = 0;\n \
    \ foreach ($nums as $n) {\n    if ($n > 10) {\n      $first = (int)substr($n,\
    \ 0, 1);\n      $last = (int)substr($n, -1);\n      if ($first % 2 !== 0 && $last\
    \ % 2 !== 0) {\n        $num++;\n      }\n    }\n  }\n  return $num;\n}\n\necho\
    \ specialFilter([15, -73, 14, -15]);\necho \"<br>\";\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]);\necho \"<br>\";\necho specialFilter([105, -2, 25, -7,\
    \ -9, 101]);\necho \"<br>\";\necho specialFilter([71, 21, -3, 42, -11, -10]);\n\
    echo \"<br>\";\necho specialFilter([49, 0, 8, 11, 10, -2]);\necho \"<br>\";\n\
    echo specialFilter([22, -11, -7, -2, 4, 16]);\necho \"<br>\";\necho specialFilter([-18,\
    \ 91, 35, -11, 9, -3]);\necho \"<br>\";\necho specialFilter([89, -4, -2, 9, -9,\
    \ 8]);\necho \"<br>\";\necho specialFilter([-33, -90, -47, -25, -11, 10]);\necho\
    \ \"<br>\";\necho specialFilter([-33, -90, -47, -25, -11, 10]);\necho \"<br>\"\
    ;\necho specialFilter([43, -63, -22, -5, -14, 50]);\necho \"<br>\";\necho specialFilter([14,\
    \ -74, -11, 10, -88, -1]);\necho \"<br>\";\necho specialFilter([13, -88, -10,\
    \ 29, 12, -31]);\necho \"<br>\";\necho specialFilter([-23, -67, -13, -1, -7, -29]);\n\
    echo \"<br>\";\necho specialFilter([47, -46, -15, -1, 25, -3]);\necho \"<br>\"\
    ;\necho specialFilter([55, -89, -42, -19,\nfunction candidate(...$args) {\n  \
    \  return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvdmbjqoj.php on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $n) {\n        if ($n > 10 && $n % 2 == 1 && ($n % 10)\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo specialFilter([15, -73, 14, -15]); // => 1 \necho \"\\n\";\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]); // => 2\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwiz8woo.php:28\n\
    Stack trace:\n#0 /tmp/tmptwiz8woo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptwiz8woo.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 !== 0 && strlen($num)\
    \ > 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5bjt_1e.php:25\n\
    Stack trace:\n#0 /tmp/tmps5bjt_1e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps5bjt_1e.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $arr = [];\n\
    \    foreach ($nums as $num) {\n        if (strlen($num) === 1) {\n          \
    \  if ($num > 10 && $num % 2 !== 0) {\n                $arr[] = $num;\n      \
    \      }\n        } else {\n            $num = (string)$num;\n            if ($num[0]\
    \ % 2 !== 0 && $num[1] % 2 !== 0) {\n                $arr[] = $num;\n        \
    \    }\n        }\n    }\n    return count($arr);\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpuw1za7vq.php on line\
    \ 17\n\nWarning: A non-numeric value encountered in /tmp/tmpuw1za7vq.php on line\
    \ 17\n\nWarning: A non-numeric value encountered in /tmp/tmpuw1za7vq.php on line\
    \ 17\n\nWarning: A non-numeric value encountered in /tmp/tmpuw1za7vq.php on line\
    \ 17\n\nWarning: A non-numeric value encountered in /tmp/tmpuw1za7vq.php on line\
    \ 17\n\nWarning: A non-numeric value encountered in /tmp/tmpuw1za7vq.php on line\
    \ 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuw1za7vq.php:31\n\
    Stack trace:\n#0 /tmp/tmpuw1za7vq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpuw1za7vq.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ function($num) {\n        return $num > 10 && is_numeric($num) && ($num > 0)\
    \ ?\n            ($num % 10 % 2 == 1 && $num < 0 ? true : (floor($num / pow(10,\
    \ strlen((string) $num) - 1)) % 2 == 1)) :\n            false;\n    }));\n}\n\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzd9vbwbb.php:22\n\
    Stack trace:\n#0 /tmp/tmpzd9vbwbb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzd9vbwbb.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 10) {\n\
    \            $num = $nums[$i];\n            $firstDigit = $num[0];\n         \
    \   $lastDigit = $num[strlen($num) - 1];\n            if ($firstDigit % 2 != 0\
    \ && $lastDigit % 2 != 0) {\n                $result++;\n            }\n     \
    \   }\n    }\n    return $result;\n}\n\n$nums = [15, -73, 14, -15];\necho specialFilter($nums);\n\
    echo \"<br>\";\n\n$nums = [33, -2, -3, 45, 21, 109];\necho specialFilter($nums);\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0<br>0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpioid26bk.php:35\n\
    Stack trace:\n#0 /tmp/tmpioid26bk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpioid26bk.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Write your\
    \ code here\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num\
    \ > 10) {\n            $num = strval($num);\n            if (strlen($num) > 1)\
    \ {\n                if ($num[0] % 2 != 0 && $num[strlen($num) - 1] % 2 != 0)\
    \ {\n                    $count++;\n                }\n            }\n       \
    \ }\n    }\n    return $count;\n}\n\n$a = specialFilter([15, -73, 14, -15]);\n\
    echo $a;\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$filter = array_filter($nums,\
    \ function($n) {\n\t\t$first = substr($n, 0, 1);\n\t\t$last = substr($n, -1);\n\
    \t\tif ($n > 10 && $first % 2 != 0 && $last % 2 != 0) {\n\t\t\treturn $n;\n\t\t\
    }\n\t});\n\treturn count($filter);\n}\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $numOfElements\
    \ = 0;\n  foreach ($nums as $num) {\n    if ($num > 10) {\n      $firstDigit =\
    \ floor($num / 10);\n      $lastDigit = $num % 10;\n      if ($firstDigit % 2\
    \ !== 0 && $lastDigit % 2 !== 0) {\n        $numOfElements++;\n      }\n    }\n\
    \  }\n  return $numOfElements;\n}\n\n$arr1 = [15, -73, 14, -15];\n$arr2 = [33,\
    \ -2, -3, 45, 21, 109];\n\necho specialFilter($arr1); // 1\necho specialFilter($arr2);\
    \ // 2\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06_vtj57.php:35\n\
    Stack trace:\n#0 /tmp/tmp06_vtj57.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp06_vtj57.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $res = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && (($num % 10) % 2 == 1)\
    \ && ($num >= 100 ? ($num % 100) % 2 == 1 : $num % 2 == 1)) {\n            $res++;\n\
    \        }\n    }\n    return $res;\n}\necho specialFilter([15, -73, 14, -15])\
    \ . PHP_EOL; // 1\necho specialFilter([33, -2, -3, 45, 21, 109]) . PHP_EOL; //\
    \ 2\necho specialFilter([7, -14, 28, -21, -5, 42, -112]) . PHP_EOL; // 1\necho\
    \ specialFilter([]) . PHP_EOL; // 0\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n4\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_sg2vzu.php:28\n\
    Stack trace:\n#0 /tmp/tmpe_sg2vzu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpe_sg2vzu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  \n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagplfzvt.php:17\n\
    Stack trace:\n#0 /tmp/tmpagplfzvt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpagplfzvt.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $filtered = [];\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && ($num % 2 === 1) && (substr($num,\
    \ 0, 1) % 2 === 1) && (substr($num, -1) % 2 === 1)) {\n      $filtered[] = $num;\n\
    \    }\n  }\n  return count($filtered);\n}\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$special = [];\n\
    \t$result = [];\n\t$digit = [];\n\tforeach ($nums as $num) {\n\t\tif ($num > 10)\
    \ {\n\t\t\t$special[] = $num;\n\t\t}\n\t}\n\tforeach ($special as $n) {\n\t\t\
    $value = $n;\n\t\t$first = $value % 10;\n\t\t$last = 0;\n\t\twhile($value >= 1)\
    \ {\n\t\t\t$last = $value;\n\t\t\t$value = (int)($value / 10);\n\t\t}\n\t\tif\
    \ ($first % 2 != 0 && $last % 2 != 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\t\
    return count($result);\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // your code\
    \ here\n}\n\n$nums = [15, -73, 14, -15];\n$a = specialFilter($nums);\nvar_dump($a);\
    \ // 1\n\n$nums = [33, -2, -3, 45, 21, 109];\n$a = specialFilter($nums);\nvar_dump($a);\
    \ // 2\n\n$nums = [100, 100, 100, -100, -100, -100];\n$a = specialFilter($nums);\n\
    var_dump($a); // 0\n\n$nums = [30, -7, -3, 45, 21, 109];\n$a = specialFilter($nums);\n\
    var_dump($a); // 0\n\n$nums = [-3, -3, -3, -3, -3, -3];\n$a = specialFilter($nums);\n\
    var_dump($a); // 0\n\n$nums = [1, 3, 5, 7, 9];\n$a = specialFilter($nums);\nvar_dump($a);\
    \ // 5\n\n$nums = [3, 8, 9, -3, -5, 9, 10, -3, 19, -5, 15, -9, -19, -7, 15, -5,\
    \ -7, 7, -5, 19, 15, -19, -15, 15, 7, -5, -7, 7, -5, 19, 15, -19, -15, 15, -19,\
    \ -15, 15, -19, -15, 15, -19, -15, 15, -19, -15, 15, -19, -15, 15, -19, -15, 15,\
    \ -19, -15, 15, -19, -15, 15, -19, -15, 15, -19, -15, 15, -19, -15, 15, -19, -15,\
    \ 15, -19, -15, 15, -19, -15, 15, -19, -15, 15, -19, -15, 15, -19, -15, 15, -19,\
    \ -15, 15, -19, -15, 15, -19, -15, 15, -19, -15, 15, -19, -15, 15,\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjb74t3i2.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && isFirstDigitOdd($num)\
    \ && isLastDigitOdd($num)) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isFirstDigitOdd()\
    \ in /tmp/tmpz3t83n7m.php:11\nStack trace:\n#0 /tmp/tmpz3t83n7m.php(19): specialFilter(Array)\n\
    #1 /tmp/tmpz3t83n7m.php(24): candidate(Array)\n#2 /tmp/tmpz3t83n7m.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz3t83n7m.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$str = (string)$num;\n\
    \t\t\tif ($str[0] % 2 != 0 && $str[strlen($str) - 1] % 2 != 0) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\necho specialFilter([15, -73, 14, -15]);\
    \ //1\necho \"<br>\";\necho specialFilter([33, -2, -3, 45, 21, 109]); //2\necho\
    \ \"<br>\";\necho specialFilter([23, -5, -39, -5, 80, -71, -89, -10]); //1\necho\
    \ \"<br>\";\necho specialFilter([8, -16, 0, 11, -14, 18, -2, -2, -16, 0, 7, -2,\
    \ -9, 7, -3, -3, 7, -3, -15, 7, -13, -7, -10, 13, -16, -18, -18, -16, -14, -10,\
    \ -14, 11, -10, -10, 13, -9, -11, -11, -16, -2, -10, -11, -10, -16, -14, -2, -1,\
    \ -2, -3, -3, 7, -16, -15, 7, -3, -11, 7, -10, -9, 7, -15, -16, 7, -18, -2, 7,\
    \ -18, -2, 7, -5, -9, 7, -5, -9, 7, -10, -18, 7, -16, -11, 7, -16, -11, 7, -2,\
    \ -18, 7, -11, -15, 7, -10, -14, 7, -2, -18, 7, -18, -16, 7, -16, -16, 7, -11,\
    \ -3, 7, -3, -3, 7, -5, -16, 7, -2, -18, 7, -2, -18, 7, -5, -\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvcs5arfa.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $number) {\n        if ($number > 10 && strlen($number)\
    \ > 1) {\n            $firstDigit = intval($number[0]);\n            $lastDigit\
    \ = intval($number[strlen($number) - 1]);\n            if ($firstDigit % 2 !=\
    \ 0 && $lastDigit % 2 != 0) {\n                $count++;\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpff3dnt14.php:28\n\
    Stack trace:\n#0 /tmp/tmpff3dnt14.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpff3dnt14.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 10) {\n\
    \            $firstDigit = floor($nums[$i] / 10);\n            $lastDigit = $nums[$i]\
    \ % 10;\n            if ($firstDigit % 2 != 0 && $lastDigit % 2 != 0) {\n    \
    \            $count++;\n            }\n        }\n    }\n    return $count;\n\
    }\n\necho specialFilter([15, -73, 14, -15]) . PHP_EOL;\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]) . PHP_EOL;\necho specialFilter([-7, -2, -3, -45, -21,\
    \ -109]) . PHP_EOL;\necho specialFilter([-7, -2, -3, 4, -45, -21, -109]) . PHP_EOL;\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_2xrdm0u.php:33\n\
    Stack trace:\n#0 /tmp/tmp_2xrdm0u.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_2xrdm0u.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8n76y1jh.php:17\n\
    Stack trace:\n#0 /tmp/tmp8n76y1jh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8n76y1jh.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $counter =\
    \ 0;\n    foreach ($nums as $n) {\n        if (($n > 10) && (isOdd($n))) {\n \
    \           $counter++;\n        }\n    }\n    return $counter;\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isOdd() in /tmp/tmplgrkwd2s.php:11\n\
    Stack trace:\n#0 /tmp/tmplgrkwd2s.php(19): specialFilter(Array)\n#1 /tmp/tmplgrkwd2s.php(24):\
    \ candidate(Array)\n#2 /tmp/tmplgrkwd2s.php(32): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmplgrkwd2s.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 != 0 && $num % 10 !=\
    \ 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho specialFilter([15,\
    \ -73, 14, -15]) . \"\\n\"; // => 1 \necho specialFilter([33, -2, -3, 45, 21,\
    \ 109]) . \"\\n\"; // => 2\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72632hw3.php:26\n\
    Stack trace:\n#0 /tmp/tmp72632hw3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp72632hw3.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ function($number) {\n        return (abs($number) > 10) && \n              \
    \ (abs($number) % 10 % 2 === 1) && \n               (abs(intdiv($number, 10))\
    \ % 10 % 2 === 1);\n    }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61nodbxg.php:22\n\
    Stack trace:\n#0 /tmp/tmp61nodbxg.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp61nodbxg.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    $first = 0;\n    $last = 0;\n    foreach ($nums as $num) {\n        $first\
    \ = substr($num, 0, 1);\n        $last = substr($num, -1);\n        if (strlen($num)\
    \ > 1 && $num > 10 && ($first % 2 != 0) && ($last % 2 != 0)) {\n            $result++;\n\
    \        }\n    }\n    return $result;\n}\necho specialFilter([15, -73, 14, -15])\
    \ . \"<br>\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"<br>\";\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    //YOUR CODE\
    \ HERE\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 10)\
    \ {\n            $first = $num % 10;\n            $second = $num / 10;\n     \
    \       if ($first % 2 == 1 && $second % 2 == 1) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4eu9tukb.php:30\n\
    Stack trace:\n#0 /tmp/tmp4eu9tukb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4eu9tukb.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num%2!=0 && $num%10!=0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n$output =\
    \ specialFilter([15, -73, 14, -15]);\necho \"$output\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvetehibp.php:26\n\
    Stack trace:\n#0 /tmp/tmpvetehibp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvetehibp.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 !== 0 && $num % 5\
    \ !== 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\necho specialFilter([15,\
    \ -73, 14, -15]) . \"<br>\";\necho specialFilter([33, -2, -3, 45, 21, 109]) .\
    \ \"<br>\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0<br>3<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4fkwi5f6.php:26\n\
    Stack trace:\n#0 /tmp/tmp4fkwi5f6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4fkwi5f6.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num%2 != 0 && ($num%10)%2 !=\
    \ 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcojrfvkj.php:25\n\
    Stack trace:\n#0 /tmp/tmpcojrfvkj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpcojrfvkj.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $filterNum\
    \ = 0;\n    foreach ($nums as $n) {\n        if (abs($n) > 10 && $n % 2 != 0)\
    \ {\n            $lastDigit = $n % 10;\n            $firstDigit = (int)($n / 10);\n\
    \            while ($firstDigit >= 10) {\n                $firstDigit = (int)($firstDigit\
    \ / 10);\n            }\n            if ($firstDigit % 2 != 0 && $lastDigit %\
    \ 2 != 0) {\n                $filterNum++;\n            }\n        }\n    }\n\
    \    return $filterNum;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjako2qyz.php:31\n\
    Stack trace:\n#0 /tmp/tmpjako2qyz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjako2qyz.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach ($nums as $value) {\n        if ($value > 10) {\n            $first\
    \ = substr($value, 0, 1);\n            $last = substr($value, -1);\n         \
    \   if ($first % 2 != 0 && $last % 2 != 0) {\n                $result++;\n   \
    \         }\n        }\n    }\n    return $result;\n}\n\necho specialFilter([15,\
    \ -73, 14, -15]);\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$c = 0;\n\tfor\
    \ ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i] > 10 && $nums[$i] % 2\
    \ != 0 && $nums[$i] % 10 % 2 != 0) {\n\t\t\t$c += 1;\n\t\t}\n\t}\n\treturn $c;\n\
    }\n\necho specialFilter([15, -73, 14, -15]) . \"<br>\"; // 1\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]) . \"<br>\"; // 2\necho specialFilter([100, 1000, 10000,\
    \ 100000, 1000000]) . \"<br>\"; // 0\necho specialFilter([41, -35, -45, -21, -109])\
    \ . \"<br>\"; // 3\necho specialFilter([55, -9, -77, -3, -45, -21, -109]) . \"\
    <br>\"; // 5\necho specialFilter([55, -9, -77, -3, -45, -21, -109, 100, -77, 100,\
    \ 15, 1000, -85, -109, -1, 15, 99, -77, -45, -21, -109, -15, -75, -77, -1, -45,\
    \ -21, -109, -10, -100, -45, -21, -109, -1, 15, 99, -77, -45, -21, -109, -15,\
    \ -75, -77, -1, -45, -21, -109, -10, -100, -45, -21, -109, -1, 15, 99, -77, -45,\
    \ -21, -109, -15, -75, -77, -1, -45, -21, -109, -10, -100, -45, -21, -109, -1,\
    \ 15, 99, -77, -45, -21, -109, -15, -75, -77, -1, -45, -21, -109, -10, -100, -45,\
    \ -21, -109, -1, 15, 99, -77, -45, -21, -109, -15, -75, -77\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpa1yuhc57.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lqlvoc2.php:17\n\
    Stack trace:\n#0 /tmp/tmp_lqlvoc2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_lqlvoc2.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = [];\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 !== 0 && $num\
    \ % 10 % 2 !== 0) {\n            $result[] = $num;\n        }\n    }\n    return\
    \ count($result);\n}\n\necho specialFilter([15, -73, 14, -15]);\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]);\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9tzmmi6.php:28\n\
    Stack trace:\n#0 /tmp/tmpc9tzmmi6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpc9tzmmi6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $nums_filtered\
    \ = [];\n  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 != 0 && substr($num,\
    \ -1) % 2 != 0) {\n      $nums_filtered[] = $num;\n    }\n  }\n  return count($nums_filtered);\n\
    }\n\necho specialFilter([15, -73, 14, -15]) . \"\\n\";\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh992d5z.php:27\n\
    Stack trace:\n#0 /tmp/tmpyh992d5z.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpyh992d5z.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // TODO\n}\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdbbln1f.php:17\n\
    Stack trace:\n#0 /tmp/tmpmdbbln1f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmdbbln1f.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$result = 0;\n\
    \tforeach ($nums as $value) {\n\t\tif ($value > 10) {\n\t\t\t$lastNum = substr($value,\
    \ -1);\n\t\t\t$firstNum = substr($value, 0, 1);\n\t\t\tif ($lastNum % 2 != 0 &&\
    \ $firstNum % 2 != 0) {\n\t\t\t\t$result++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  foreach ($nums\
    \ as $num) {\n    if (strlen($num) > 1) {\n      if (\n        abs($num) > 10\
    \ &&\n        is_numeric($num) &&\n        $num[0] % 2 != 0 &&\n        $num[strlen($num)\
    \ - 1] % 2 != 0\n      ) {\n        $result[] = $num;\n      }\n    }\n  }\n \
    \ return count($result);\n}\necho specialFilter([15, -73, 14, -15]);\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]);\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp0avkqwgy.php on line 21\n0\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp0avkqwgy.php\
    \ on line 21\n0\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp0avkqwgy.php on line 21\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp0avkqwgy.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0avkqwgy.php:32\n\
    Stack trace:\n#0 /tmp/tmp0avkqwgy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0avkqwgy.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 !== 0 && (int)($num\
    \ / 10) % 2 !== 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\necho specialFilter([15, -73, 14, -15]); // 1\necho specialFilter([33, -2,\
    \ -3, 45, 21, 109]); // 2\necho specialFilter([33, -2, -3, 45, 21, 109, 111]);\
    \ // 3\necho specialFilter([0, 1, 2, -3, -5, 2, -100, -333, 2, 33, 4]); // 0\n\
    echo specialFilter([-3, -8, 21, -15, -23, 1, -30, -8, -9, -7]); // 2\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "11210\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk24ryg5q.php:30\n\
    Stack trace:\n#0 /tmp/tmpk24ryg5q.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpk24ryg5q.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Write your\
    \ code here\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvs1t14sa.php:16\n\
    Stack trace:\n#0 /tmp/tmpvs1t14sa.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpvs1t14sa.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 && checkOdd($num))\
    \ $result++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function checkOdd() in\
    \ /tmp/tmpu_as0m3v.php:11\nStack trace:\n#0 /tmp/tmpu_as0m3v.php(17): specialFilter(Array)\n\
    #1 /tmp/tmpu_as0m3v.php(22): candidate(Array)\n#2 /tmp/tmpu_as0m3v.php(30): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu_as0m3v.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = [];\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 == 1) {\n  \
    \          $first = floor($num / 10);\n            $last = $num % 10;\n      \
    \      if ($first % 2 == 1 && $last % 2 == 1) {\n                $result[] = $num;\n\
    \            }\n        }\n    }\n    return count($result);\n}\necho specialFilter([15,\
    \ -73, 14, -15]);\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpswyg6qwn.php:29\n\
    Stack trace:\n#0 /tmp/tmpswyg6qwn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpswyg6qwn.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (strlen($num) > 1 && ($num > 10) &&\
    \ (substr($num, 0, 1) % 2 != 0) && (substr($num, -1) % 2 != 0)) {\n          \
    \  $count++;\n        }\n    }\n    return $count;\n}\necho specialFilter([15,\
    \ -73, 14, -15]) . \"\\n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $newarr = array();\n\
    \    foreach ($nums as $key => $value) {\n        if ($value > 10 && $value%2\
    \ != 0 && $value[0]%2 != 0 && $value[strlen($value)-1]%2 != 0) {\n           \
    \ array_push($newarr, $value);\n        }\n    }\n    return count($newarr);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0wyh8wea.php:24\n\
    Stack trace:\n#0 /tmp/tmp0wyh8wea.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0wyh8wea.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $c = 0;\n \
    \   foreach ($nums as $n) {\n        if ($n < 10) continue;\n        $d = str_split($n);\n\
    \        if ($d[0] % 2 != 0 && $d[count($d) - 1] % 2 != 0) $c++;\n    }\n    return\
    \ $c;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3qe4sd06.php:15\n\
    Stack trace:\n#0 /tmp/tmp3qe4sd06.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3qe4sd06.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 !== 0 && (int)(\"\
    $num\"[0]) % 2 !== 0 && (int)(\"$num\"[strlen($num) - 1]) % 2 !== 0) {\n     \
    \ $count++;\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplnagyfsf.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $result = [];\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && strlen($num) > 1) {\n     \
    \ $num_str = strval($num);\n      if ($num_str[0] % 2 != 0 && $num_str[strlen($num_str)\
    \ - 1] % 2 != 0) {\n        array_push($result, $num);\n      }\n    }\n  }\n\
    \  return count($result);\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $output = 0;\n\
    \  for ($i = 0; $i < count($nums); $i++) {\n    if (abs($nums[$i]) > 10) {\n \
    \     $first = $nums[$i] % 10;\n      $last = abs($nums[$i]);\n      while ( $last\
    \ >= 10) {\n        $last = (int)($last / 10);\n      }\n      if ($first % 2\
    \ !== 0 && $last % 2 !== 0) {\n        $output++;\n      }\n    }\n  }\n  return\
    \ $output;\n}\necho specialFilter([15, -73, 14, -15]) . \"\\n\";\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7q5yrgh.php:32\n\
    Stack trace:\n#0 /tmp/tmpc7q5yrgh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpc7q5yrgh.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tfor ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i] > 10) {\n\t\t\t$strNum\
    \ = strval($nums[$i]);\n\t\t\tif (strlen($strNum) > 1) {\n\t\t\t\tif (preg_match('/^[13579]{1}/',\
    \ $strNum) && preg_match('/[13579]{1}$/', $strNum)) {\n\t\t\t\t\t$count++;\n\t\
    \t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$cnt = 0;\n\t\
    for ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i] > 10) {\n\t\t\t$string\
    \ = (string) $nums[$i];\n\t\t\tif (strlen($string) >= 2) {\n\t\t\t\tif ($string[0]\
    \ % 2 != 0 && $string[strlen($string) - 1] % 2 != 0) {\n\t\t\t\t\t$cnt++;\n\t\t\
    \t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $cnt;\n}\necho specialFilter([15, -73, 14,\
    \ -15]) . '<br>';\necho specialFilter([33, -2, -3, 45, 21, 109]) . '<br>';\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$special = [];\n\
    \tforeach ($nums as $num) {\n\t\tif (abs($num) > 10 && $num % 2 != 0) {\n\t\t\t\
    array_push($special, $num);\n\t\t}\n\t}\n\treturn count($special);\n}\necho specialFilter([15,\
    \ -73, 14, -15]);\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xw9unl7.php:24\n\
    Stack trace:\n#0 /tmp/tmp0xw9unl7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0xw9unl7.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $counter =\
    \ 0;\n    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 &&\
    \ $num % 5 != 0) {\n            $counter++;\n        }\n    }\n    return $counter;\n\
    }\n\necho specialFilter([15, -73, 14, -15]);\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuj5ffx34.php:25\n\
    Stack trace:\n#0 /tmp/tmpuj5ffx34.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuj5ffx34.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if (abs($num) > 10) {\n      $firstDigit = floor(abs($num)/10);\n\
    \      $lastDigit = $num % 10;\n      if (($firstDigit % 2 === 1) && ($lastDigit\
    \ % 2 === 1)) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\
    \necho \"specialFilter([15, -73, 14, -15]) => \" . specialFilter([15, -73, 14,\
    \ -15]) . \"\\n\";\necho \"specialFilter([33, -2, -3, 45, 21, 109]) => \" . specialFilter([33,\
    \ -2, -3, 45, 21, 109]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "specialFilter([15, -73, 14, -15]) => 1\nspecialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7w1_m90y.php:31\n\
    Stack trace:\n#0 /tmp/tmp7w1_m90y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7w1_m90y.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    //your code\
    \ here\n    $num = 0;\n    foreach($nums as $item){\n        if($item > 10 &&\
    \ $item % 2 != 0 && ($item % 10) % 2 != 0){\n            $num ++;\n        }\n\
    \    }\n    return $num;\n}\n\nprint_r(specialFilter([15, -73, 14, -15])); //=>\
    \ 1\nprint_r(specialFilter([33, -2, -3, 45, 21, 109])); //=> 2\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6volujt6.php:28\n\
    Stack trace:\n#0 /tmp/tmp6volujt6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6volujt6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num > 0) {\n      $first_digit\
    \ = substr($num, 0, 1);\n      $last_digit = substr($num, -1);\n      if (($first_digit\
    \ % 2 !== 0) && ($last_digit % 2 !== 0)) {\n        $count++;\n      }\n    }\n\
    \  }\n  return $count;\n}\n\necho specialFilter([15, -73, 14, -15]); // 1\necho\
    \ specialFilter([33, -2, -3, 45, 21, 109]); // 2\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '12'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // your code\
    \ here\n    return ;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9e6vepyx.php:17\n\
    Stack trace:\n#0 /tmp/tmp9e6vepyx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9e6vepyx.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // TODO: complete\
    \ the function body\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpck144a_6.php:16\n\
    Stack trace:\n#0 /tmp/tmpck144a_6.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpck144a_6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $len = count($nums);\n\
    \    $count = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $num = $nums[$i];\n\
    \        if ($num > 10) {\n            $firstDigit = (int) $num / 10;\n      \
    \      $lastDigit = $num % 10;\n            if ($firstDigit % 2 != 0 && $lastDigit\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n    }\n  \
    \  return $count;\n}\n\n$arr = [15, -73, 14, -15];\necho specialFilter($arr);\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ljpfedy.php:33\n\
    Stack trace:\n#0 /tmp/tmp8ljpfedy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8ljpfedy.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$result = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$first_digit = substr($num, 0, 1);\n\t\t$last_digit\
    \ = substr($num, -1);\n\t\tif ($num > 10 && $first_digit % 2 == 1 && $last_digit\
    \ % 2 == 1) {\n\t\t\t$result += 1;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho \"\
    Test1:\\n\";\necho specialFilter([15, -73, 14, -15]) . \"\\n\"; // 1\necho \"\
    Test2:\\n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\\n\"; // 2\n\
    echo \"Test3:\\n\";\necho specialFilter([-17, -34, -29, -81, -12, -21, -34, -41,\
    \ -73, -29, -93, -11, -29, -81, -23, -29, -37, -57, -29, -41, -21, -51, -29, -47,\
    \ -81, -29, -93, -21, -23, -23, -11, -27, -7, -73, -57, -67, -3, -53, -21, -33,\
    \ -7, -81, -29, -93, -11, -29, -67, -31, -53, -21, -23, -33, -29, -47, -37, -77,\
    \ -37, -57, -41, -23, -37, -29, -47, -13, -23, -29, -47, -11, -29, -79, -17, -29,\
    \ -33, -17, -29, -41, -17, -29, -49, -29, -93, -29, -41, -47, -29, -23, -47, -29,\
    \ -57, -7, -53, -31, -53, -21, -51, -29, -47, -7, -53, -81, -29, -93, -23, -23,\
    \ -23, -11, -27, -7, -73, -57, -67, -\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1_lwzfa7.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $temp =\
    \ $num;\n            $last = $temp % 10;\n            while ($temp > 10) {\n \
    \               $temp = $temp / 10;\n            }\n            $first = $temp;\n\
    \            if ($first % 2 != 0 && $last % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\n\necho specialFilter([15,\
    \ -73, 14, -15]);\necho \"<br>\";\necho specialFilter([33, -2, -3, 45, 21, 109]);\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqs1ge1kg.php:16\n\
    Stack trace:\n#0 /tmp/tmpqs1ge1kg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqs1ge1kg.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $value) {\n\t\tif (($value > 10) and (($value % 10) % 2 !=\
    \ 0) and (intdiv($value,10) % 2 != 0)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n$arr = [-15, -73, 15, 21, 109, -3, 33, -2, 45];\necho specialFilter($arr)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvmhlxal2.php:26\n\
    Stack trace:\n#0 /tmp/tmpvmhlxal2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvmhlxal2.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$last = $num % 10;\n\t\
    \t\t$first = $num;\n\t\t\twhile ($first >= 10) {\n\t\t\t\t$first = $first / 10;\n\
    \t\t\t}\n\t\t\tif ($first % 2 != 0 && $last % 2 != 0) {\n\t\t\t\t$count++;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $count;\n}\necho specialFilter([15, -73, 14, -15]);\
    \ //1\necho specialFilter([33, -2, -3, 45, 21, 109]); //2\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '12'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  // TODO: your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyenmw0qb.php:17\n\
    Stack trace:\n#0 /tmp/tmpyenmw0qb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyenmw0qb.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouy7kgip.php:17\n\
    Stack trace:\n#0 /tmp/tmpouy7kgip.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpouy7kgip.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\treturn \"not\
    \ implemented\";\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5en_dz_.php:17\n\
    Stack trace:\n#0 /tmp/tmpo5en_dz_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpo5en_dz_.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $out = 0;\n \
    \ foreach ($nums as $n) {\n    if ($n > 10 && $n % 2 == 1 && ($n % 10 == 1 ||\
    \ $n % 10 == 3 || $n % 10 == 5 || $n % 10 == 7 || $n % 10 == 9)) {\n      $out++;\n\
    \    }\n  }\n  return $out;\n}\n\necho specialFilter([15, -73, 14, -15]) . \"\\\
    n\"; // 1\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\\n\"; // 2\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5asqzocv.php:28\n\
    Stack trace:\n#0 /tmp/tmp5asqzocv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5asqzocv.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$result = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$array_num = array();\n\
    \t\t\t$array_num = str_split($num);\n\t\t\t$first_num = $array_num[0];\n\t\t\t\
    $last_num = $array_num[count($array_num) - 1];\n\t\t\tif ($first_num % 2 != 0\
    \ && $last_num % 2 != 0) {\n\t\t\t\t$result++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $cnt = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num%2 !== 0 && floor($num/10)%2\
    \ !== 0) {\n            $cnt++;\n        }\n    }\n    return $cnt;\n}\necho specialFilter([15,\
    \ -73, 14, -15]) . \"<br>\"; // 1\necho specialFilter([33, -2, -3, 45, 21, 109])\
    \ . \"<br>\"; // 2\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0xn8044.php:26\n\
    Stack trace:\n#0 /tmp/tmph0xn8044.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph0xn8044.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  \n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwllrp2of.php:17\n\
    Stack trace:\n#0 /tmp/tmpwllrp2of.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwllrp2of.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  // Write code\
    \ here...\n  $rs = 0;\n  foreach ($nums as $num) {\n    if ($num > 10) {\n   \
    \   $strNum = (string)$num;\n      if (strlen($strNum) > 1) {\n        if ($strNum[0]\
    \ % 2 != 0 && $strNum[strlen($strNum) - 1] % 2 != 0) {\n          $rs++;\n   \
    \     }\n      }\n    }\n  }\n  return $rs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $matches = 0;\n\
    \  foreach ($nums as $num) {\n    $firstDigit = intval($num / 10);\n    $lastDigit\
    \ = $num % 10;\n    if ($num > 10 && $firstDigit % 2 == 1 && $lastDigit % 2 ==\
    \ 1) {\n      $matches++;\n    }\n  }\n  return $matches;\n}\n\necho specialFilter([15,\
    \ -73, 14, -15]) . \"\\n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9hvqc3p.php:29\n\
    Stack trace:\n#0 /tmp/tmpw9hvqc3p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpw9hvqc3p.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 !== 0 && isOdd($num))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isOdd() in /tmp/tmp1_oib7j1.php:11\n\
    Stack trace:\n#0 /tmp/tmp1_oib7j1.php(19): specialFilter(Array)\n#1 /tmp/tmp1_oib7j1.php(24):\
    \ candidate(Array)\n#2 /tmp/tmp1_oib7j1.php(32): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp1_oib7j1.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $firstDigit\
    \ = intval($num / 10);\n            $lastDigit = $num % 10;\n            if (($firstDigit\
    \ % 2 == 1) && ($lastDigit % 2 == 1)) {\n                $count++;\n         \
    \   }\n        }\n    }\n    return $count;\n}\necho specialFilter([15, -73, 14,\
    \ -15]);\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpli9q7i7o.php:29\n\
    Stack trace:\n#0 /tmp/tmpli9q7i7o.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpli9q7i7o.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach ($nums as $number) {\n        if ($number > 10 && strlen($number)\
    \ > 1) {\n            $first = intval($number / pow(10, strlen($number) - 1));\n\
    \            $last = $number % 10;\n            if ($first % 2 !== 0 && $last\
    \ % 2 !== 0) {\n                $result++;\n            }\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $firstDigit\
    \ = substr($num, 0, 1);\n            $lastDigit = substr($num, -1);\n        \
    \    if ($firstDigit % 2 != 0 && $lastDigit % 2 != 0) {\n                $result++;\n\
    \            }\n        }\n    }\n    return $result;\n}\n\necho specialFilter([15,\
    \ -73, 14, -15]);\necho '<br>';\necho specialFilter([33, -2, -3, 45, 21, 109]);\n\
    echo '<br>';\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (abs($num) > 10 && $num % 2 != 0) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\necho specialFilter([15,\
    \ -73, 14, -15]) . \"\\n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppbgy1yx8.php:25\n\
    Stack trace:\n#0 /tmp/tmppbgy1yx8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppbgy1yx8.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ 'isBigAndOdd'));\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'isBigAndOdd' not found or invalid function name in /tmp/tmpna7c5w5t.php on\
    \ line 9\n\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpna7c5w5t.php on line 9\n\nWarning: array_filter() expects\
    \ parameter 2 to be a valid callback, function 'isBigAndOdd' not found or invalid\
    \ function name in /tmp/tmpna7c5w5t.php on line 9\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpna7c5w5t.php\
    \ on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpna7c5w5t.php:18\n\
    Stack trace:\n#0 /tmp/tmpna7c5w5t.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpna7c5w5t.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $firstDigit\
    \ = str_split($num)[0];\n            $lastDigit = str_split($num)[count(str_split($num))\
    \ - 1];\n            if ($firstDigit % 2 != 0 && $lastDigit % 2 != 0) {\n    \
    \            $result++;\n            }\n        }\n    }\n    return $result;\n\
    }\necho specialFilter([15, -73, 14, -15]) . \"<br>\";\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]) . \"<br>\";\necho specialFilter([2, -2, -3, 45, 21, 109])\
    \ . \"<br>\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $key => $value) {\n        if($value > 10){\n         \
    \   $string = (string)$value;\n            if((int)$string[0] % 2 == 1 && (int)$string[strlen($string)\
    \ - 1] % 2 == 1){\n                $count++;\n            }\n        }\n    }\n\
    \    return $count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10) {\n      $firstDigit = substr($num,\
    \ 0, 1);\n      $lastDigit = substr($num, -1);\n      if (($firstDigit % 2 ===\
    \ 1) && ($lastDigit % 2 === 1)) {\n        $count += 1;\n      }\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    //YOUR CODE\
    \ GOES HERE\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num\
    \ > 10 && (strlen($num) > 1)) {\n            $first = $num[0];\n            $last\
    \ = $num[strlen($num) - 1];\n            if ($first % 2 == 1 && $last % 2 == 1)\
    \ {\n                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3bvgzte.php:28\n\
    Stack trace:\n#0 /tmp/tmpm3bvgzte.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm3bvgzte.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t// WRITE YOUR\
    \ CODE HERE\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpas0kkbnv.php:17\n\
    Stack trace:\n#0 /tmp/tmpas0kkbnv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpas0kkbnv.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && strlen($num) > 1) {\n\t\t\t\
    $firstDigit = substr($num, 0, 1);\n\t\t\t$lastDigit = substr($num, -1);\n\t\t\t\
    if ($firstDigit % 2 == 1 && $lastDigit % 2 == 1) {\n\t\t\t\t$count++;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn $count;\n}\necho specialFilter([15, -73, 14, -15]);\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxf1h4ue.php:16\n\
    Stack trace:\n#0 /tmp/tmpjxf1h4ue.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjxf1h4ue.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$greater = [];\n\
    \t$bothOdd = [];\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i]\
    \ > 10) {\n\t\t\tarray_push($greater, $nums[$i]);\n\t\t}\n\t}\n\tfor ($i = 0;\
    \ $i < count($greater); $i++) {\n\t\t$strNum = (string)$greater[$i];\n\t\tif ($strNum[0]\
    \ % 2 == 1 && $strNum[strlen($strNum) - 1] % 2 == 1) {\n\t\t\tarray_push($bothOdd,\
    \ $greater[$i]);\n\t\t}\n\t}\n\treturn count($bothOdd);\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $result = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 === 1 && (floor($num\
    \ / 10) % 2 === 1)) {\n      $result++;\n    }\n  }\n  return $result;\n}\necho\
    \ specialFilter([15, -73, 14, -15]) . PHP_EOL;\necho specialFilter([33, -2, -3,\
    \ 45, 21, 109]) . PHP_EOL;\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16_jp6wh.php:26\n\
    Stack trace:\n#0 /tmp/tmp16_jp6wh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp16_jp6wh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && strlen($num) > 1) {\n     \
    \ $first = (int) substr($num, 0, 1);\n      $last = (int) substr($num, -1);\n\
    \      if ($first % 2 !== 0 && $last % 2 !== 0) {\n        $count++;\n      }\n\
    \    }\n  }\n  return $count;\n}\n\necho specialFilter([15, -73, 14, -15]) . \"\
    \\n\"; //=> 1 \necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\\n\"; //=>\
    \ 2\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $key => $val) {\n    if ($val > 10 && $val%2 == 1 && $val%10\
    \ == 1) {\n      $count++;\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5zxl7u9.php:23\n\
    Stack trace:\n#0 /tmp/tmpd5zxl7u9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpd5zxl7u9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $result\
    \ += $num[0] % 2 == 1 && $num[strlen($num) - 1] % 2 == 1 ? 1 : 0;\n        }\n\
    \    }\n    return $result;\n}\necho specialFilter([15, -73, 14, -15]) . \"<br/>\"\
    ;\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"<br/>\";\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0<br/>0<br/>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcufv_x3d.php:26\n\
    Stack trace:\n#0 /tmp/tmpcufv_x3d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpcufv_x3d.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ function($n) {\n        return $n > 10 && $n % 2 == 1 && ($n % 10 == 1 || $n\
    \ % 10 == 3 || $n % 10 == 5 || $n % 10 == 7 || $n % 10 == 9);\n    }));\n}\n\n\
    echo specialFilter([15, -73, 14, -15]) . PHP_EOL; // 1\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]) . PHP_EOL; // 2\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzlov1iak.php:23\n\
    Stack trace:\n#0 /tmp/tmpzlov1iak.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzlov1iak.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4f21j99a.php:16\n\
    Stack trace:\n#0 /tmp/tmp4f21j99a.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4f21j99a.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $counter =\
    \ 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 10\
    \ && $nums[$i] % 2 != 0 && ($nums[$i] % 10) % 2 != 0) {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}\n\necho \"specialFilter([15, -73, 14,\
    \ -15]) => \".specialFilter([15, -73, 14, -15]).PHP_EOL;\necho \"specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => \".specialFilter([33, -2, -3, 45, 21, 109]).PHP_EOL;\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "specialFilter([15, -73, 14, -15]) => 1\nspecialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppakwjnex.php:27\n\
    Stack trace:\n#0 /tmp/tmppakwjnex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppakwjnex.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $firstDigit\
    \ = substr($num, 0, 1);\n            $lastDigit = substr($num, -1);\n        \
    \    if ($firstDigit % 2 != 0 && $lastDigit % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\n\n$result = specialFilter([15,\
    \ -73, 14, -15]);\necho \"specialFilter([15, -73, 14, -15]) => $result <br>\"\
    ;\n$result = specialFilter([33, -2, -3, 45, 21, 109]);\necho \"specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => $result <br>\";\nfunction candidate(...$args) {\n \
    \   return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: specialFilter([15, -73, 14, -15]) => 1 <br>specialFilter([33, -2, -3, 45,
    21, 109]) => 2 <br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return array_filter($nums,\
    \ function($n) {\n        $last = $n % 10;\n        while ($n >= 10) {\n     \
    \       $n /= 10;\n        }\n        return $n % 2 == 1 && $last % 2 == 1 &&\
    \ $n > 10;\n    });\n}\n\nprint_r(specialFilter([15, -73, 14, -15]));\nprint_r(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\nprint_r(specialFilter([22, 54, -53, 31, 21, -23]));\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpzdyivp1b.php:27\nStack trace:\n#0 /tmp/tmpzdyivp1b.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzdyivp1b.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 !== 0 && $num[0] %\
    \ 2 !== 0 && $num[strlen($num) - 1] % 2 !== 0) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\necho specialFilter([33, -2, -3, 45, 21, 109]);\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmqw6928m.php:24\n\
    Stack trace:\n#0 /tmp/tmpmqw6928m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmqw6928m.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91pd81i6.php:16\n\
    Stack trace:\n#0 /tmp/tmp91pd81i6.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp91pd81i6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$matches = [];\n\
    \tforeach ($nums as $num) {\n\t\t$firstDigit = substr($num, 0, 1);\n\t\t$lastDigit\
    \ = substr($num, -1);\n\t\tif ($num > 10 && $firstDigit % 2 == 1 && $lastDigit\
    \ % 2 == 1) {\n\t\t\t$matches[] = $num;\n\t\t}\n\t}\n\treturn count($matches);\n\
    }\necho specialFilter([15, -73, 14, -15]) . \"\\n\";\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (strlen($num) === 1 && $num > 10 &&\
    \ $num % 2 !== 0) {\n            $count += 1;\n        } elseif (strlen($num)\
    \ > 1 && $num > 10 && $num % 2 !== 0 && $num % 10 % 2 !== 0) {\n            $count\
    \ += 1;\n        } \n    }\n    return $count;\n}\necho specialFilter([15, -73,\
    \ 14, -15]); // 1\necho specialFilter([33, -2, -3, 45, 21, 109]); // 2\necho specialFilter([0,\
    \ 1, 3, 5, 7, 9]); // 6\necho specialFilter([22, 21, -3, -3, -3, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqoowqp09.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdar_swkf.php:17\n\
    Stack trace:\n#0 /tmp/tmpdar_swkf.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdar_swkf.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$total = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$first = substr($num,\
    \ 0, 1);\n\t\t\t$last = substr($num, -1);\n\t\t\tif ($first % 2 == 1 && $last\
    \ % 2 == 1) {\n\t\t\t\t$total++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $total;\n}\necho\
    \ specialFilter([33, -2, -3, 45, 21, 109]);\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '2'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $filtered =\
    \ array_filter($nums, function($n) {\n        return ($n > 10) && (strlen($n)\
    \ > 1) && (substr($n, 0, 1) % 2) && (substr($n, -1) % 2);\n    });\n    return\
    \ count($filtered);\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $numAsString\
    \ = strval($num);\n            if (is_odd($numAsString[0]) && is_odd($numAsString[strlen($numAsString)\
    \ - 1])) {\n                $count++;\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_odd() in /tmp/tmpz5ldspx8.php:13\n\
    Stack trace:\n#0 /tmp/tmpz5ldspx8.php(22): specialFilter(Array)\n#1 /tmp/tmpz5ldspx8.php(27):\
    \ candidate(Array)\n#2 /tmp/tmpz5ldspx8.php(35): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpz5ldspx8.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$specials = 0;\n\
    \t$nums = $nums;\n\tforeach ($nums as $number) {\n\t\t$number = (string)$number;\n\
    \t\t$n = count($number);\n\t\t$first = $number[0];\n\t\t$last = $number[$n-1];\n\
    \t\tif ($number > 10) {\n\t\t\tif (($first % 2 == 1) && ($last % 2 == 1)) {\n\t\
    \t\t\t$specials++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $specials;\n}\n\n$arr = [15,\
    \ -73, 14, -15];\necho specialFilter($arr); // 1\n$arr = [33, -2, -3, 45, 21,\
    \ 109];\necho specialFilter($arr); // 2\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwz3hc0_.php on line 13\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwz3hc0_.php\
    \ on line 13\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwz3hc0_.php on line 13\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpzwz3hc0_.php\
    \ on line 13\n2\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwz3hc0_.php on line 13\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpzwz3hc0_.php\
    \ on line 13\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwz3hc0_.php on line 13\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpzwz3hc0_.php\
    \ on line 13\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwz3hc0_.php on line 13\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpzwz3hc0_.php\
    \ on line 13\n2\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwz3hc0_.php on line 13\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpzwz3hc0_.php\
    \ on line 13\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwz3hc0_.php on line 13\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpzwz3hc0_.php\
    \ on line 13\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwz3hc0_.php on line 13\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpzwz3hc0_.php\
    \ on line 13\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwz3hc0_.php on line 13\n\nWarni"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $arr = array_map('intval',\
    \ str_split($num));\n            if ($arr[0] % 2 != 0 && $arr[count($arr) - 1]\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$out = 0;\n\t\
    $digits = array_map(function($num) {\n\t\t$n = abs($num);\n\t\t$digits = array();\n\
    \t\twhile ($n > 0) {\n\t\t\t$digits[] = $n % 10;\n\t\t\t$n = floor($n / 10);\n\
    \t\t}\n\t\treturn $digits;\n\t}, $nums);\n\tforeach ($digits as $d) {\n\t\tif\
    \ ($d[0] % 2 == 1 && $d[count($d) - 1] % 2 == 1 && $d[0] * 10 + $d[1] > 10) {\n\
    \t\t\t$out++;\n\t\t}\n\t}\n\treturn $out;\n}\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgp_i_n7l.php:32\n\
    Stack trace:\n#0 /tmp/tmpgp_i_n7l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgp_i_n7l.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && firstDigit($num) % 2\
    \ !== 0 && lastDigit($num) % 2 !== 0) {\n            $count++;\n        }\n  \
    \  }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function firstDigit()\
    \ in /tmp/tmp39al52a_.php:11\nStack trace:\n#0 /tmp/tmp39al52a_.php(19): specialFilter(Array)\n\
    #1 /tmp/tmp39al52a_.php(24): candidate(Array)\n#2 /tmp/tmp39al52a_.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp39al52a_.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcv8zx5qd.php:16\n\
    Stack trace:\n#0 /tmp/tmpcv8zx5qd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcv8zx5qd.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$counter = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$firstDigit = floor($num / pow(10, floor(log10($num))));\n\
    \t\t$lastDigit = $num % 10;\n\t\tif (($num > 10) && ($firstDigit % 2 == 1) &&\
    \ ($lastDigit % 2 == 1)) {\n\t\t\t$counter++;\n\t\t}\n\t}\n\treturn $counter;\n\
    }\necho specialFilter([15, -73, 14, -15]); // 1\necho specialFilter([33, -2, -3,\
    \ 45, 21, 109]); // 2\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '12'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 && $num\
    \ % 5 != 0) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\n\necho specialFilter([33, -2, -3, 45, 21, 109]);\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4vv_4gu.php:25\n\
    Stack trace:\n#0 /tmp/tmpg4vv_4gu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg4vv_4gu.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $x = 0;\n \
    \   foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 == 1 && $num\
    \ % 10 == 1 || $num % 10 == 3 || $num % 10 == 5 || $num % 10 == 7 || $num % 10\
    \ == 9) {\n            $x++;\n        }\n    }\n    return $x;\n}\nprint_r(specialFilter([15,\
    \ -73, 14, -15]));\nprint_r(specialFilter([33, -2, -3, 45, 21, 109]));\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdcpu0pp.php:24\n\
    Stack trace:\n#0 /tmp/tmpwdcpu0pp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwdcpu0pp.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t// Your code\
    \ here\n\t$count = 0;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\t$number\
    \ = $nums[$i];\n\t\tif ($number > 10) {\n\t\t\t$firstDigit = substr($number, 0,\
    \ 1);\n\t\t\t$lastDigit = substr($number, -1);\n\t\t\tif ($firstDigit % 2 != 0\
    \ && $lastDigit % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 !== 0 && fmod($num,\
    \ 10) % 2 !== 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho specialFilter([15, -73, 14, -15]) . \"\\n\";\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tfgm3gs.php:26\n\
    Stack trace:\n#0 /tmp/tmp6tfgm3gs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6tfgm3gs.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && abs($num) % 2 == 1 &&\
    \ $num % 10 % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho specialFilter([15, -73, 14, -15]) . \"\\n\"; // 1\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]) . \"\\n\"; // 2\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8q4bdew4.php:26\n\
    Stack trace:\n#0 /tmp/tmp8q4bdew4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8q4bdew4.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyt13h7pv.php:16\n\
    Stack trace:\n#0 /tmp/tmpyt13h7pv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyt13h7pv.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $val) {\n        if ($val > 10) {\n            $firstDigit\
    \ = substr($val, 0, 1);\n            $lastDigit = substr($val, -1);\n        \
    \    if (($firstDigit % 2 != 0) && ($lastDigit % 2 != 0)) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\n\necho specialFilter([15,\
    \ -73, 14, -15]) . PHP_EOL;\necho specialFilter([33, -2, -3, 45, 21, 109]) . PHP_EOL;\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $key => $value) {\n    $first = intval($value / 10);\n  \
    \  $last = $value % 10;\n    if ($value > 10 && ($first % 2 != 0) && ($last %\
    \ 2 != 0)) {\n      $count++;\n    }\n  }\n  return $count;\n}\necho specialFilter([15,\
    \ -73, 14, -15]) . \"\\n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\
    \\n\";\necho specialFilter([6, 11, -30, -21, 15, -7]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppox1ykkf.php:29\n\
    Stack trace:\n#0 /tmp/tmppox1ykkf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppox1ykkf.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10) {\n      $firstDigit = $num %\
    \ 10;\n      while ($num >= 10) {\n        $num = (int)($num / 10);\n      }\n\
    \      if (($firstDigit % 2 == 1) && ($num % 2 == 1)) {\n        $count++;\n \
    \     }\n    }\n  }\n  return $count;\n}\n\n$ans = specialFilter([33, -2, -3,\
    \ 45, 21, 109]);\nvar_dump($ans);\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(2)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Write your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3d3djhd.php:17\n\
    Stack trace:\n#0 /tmp/tmpm3d3djhd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpm3d3djhd.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = [];\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 10) {\n\
    \            $num = $nums[$i];\n            $lastDigit = $num % 10;\n        \
    \    while ($num > 10) {\n                $num = $num / 10;\n            }\n \
    \           $firstDigit = (int)$num;\n            if ($firstDigit % 2 !== 0 &&\
    \ $lastDigit % 2 !== 0) {\n                array_push($result, $nums[$i]);\n \
    \           }\n        }\n    }\n    return count($result);\n}\necho specialFilter([15,\
    \ -73, 14, -15]);\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 &&\n\t\t\t$num % 2 == 1 &&\n\t\t\
    \t($num % 10) % 2 == 1) {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\treturn $count;\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt60uqbgv.php:26\n\
    Stack trace:\n#0 /tmp/tmpt60uqbgv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt60uqbgv.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && isFirstLastOdd($num)) {\n \
    \     $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isFirstLastOdd()\
    \ in /tmp/tmpn5nifi7b.php:11\nStack trace:\n#0 /tmp/tmpn5nifi7b.php(19): specialFilter(Array)\n\
    #1 /tmp/tmpn5nifi7b.php(24): candidate(Array)\n#2 /tmp/tmpn5nifi7b.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpn5nifi7b.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Write your\
    \ code here\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num\
    \ > 10) {\n            $firstDigit = $num % 10;\n            $lastDigit = intval($num\
    \ / 10);\n            if ($firstDigit % 2 !== 0 && $lastDigit % 2 !== 0) {\n \
    \               $count++;\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihsjncz9.php:30\n\
    Stack trace:\n#0 /tmp/tmpihsjncz9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpihsjncz9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $last_digit\
    \ = $num % 10;\n            $first_digit = (int) $num / pow(10, strlen($num) -\
    \ 1);\n            if ($last_digit % 2 == 1 && $first_digit % 2 == 1) {\n    \
    \            $count++;\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Write your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1zewitn.php:17\n\
    Stack trace:\n#0 /tmp/tmpt1zewitn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpt1zewitn.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $first =\
    \ substr($num, 0, 1);\n            $last = substr($num, -1);\n            if ($first\
    \ % 2 != 0 && $last % 2 != 0) {\n                $count++;\n            }\n  \
    \      }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n   \
    \ return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  // TODO\n}\n\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc3czilox.php:17\n\
    Stack trace:\n#0 /tmp/tmpc3czilox.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpc3czilox.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprk4zrrxd.php:16\n\
    Stack trace:\n#0 /tmp/tmprk4zrrxd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmprk4zrrxd.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $specialElements\
    \ = 0;\n    foreach ($nums as $num) {\n        if ($num > 10) {\n            $firstDigit\
    \ = (int)substr($num, 0, 1);\n            $lastDigit = (int)substr($num, -1);\n\
    \            if ($firstDigit % 2 != 0 && $lastDigit % 2 != 0) {\n            \
    \    $specialElements++;\n            }\n        }\n    }\n    return $specialElements;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t// your code\
    \ goes here\n\t$num = 0;\n\tfor ($i=0; $i < count($nums); $i++) { \n\t\tif ($nums[$i]\
    \ > 10) {\n\t\t\t$str = strval($nums[$i]);\n\t\t\tif (\n\t\t\t\t(intval($str[0])\
    \ % 2 != 0) &&\n\t\t\t\t(intval($str[strlen($str) - 1]) % 2 != 0)\n\t\t\t\t) {\n\
    \t\t\t\t$num++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $num;\n}\necho specialFilter([15,\
    \ -73, 14, -15]) . \"\\n\"; // 1\necho specialFilter([33, -2, -3, 45, 21, 109])\
    \ . \"\\n\"; // 2\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t// Write your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm57ca4rk.php:17\n\
    Stack trace:\n#0 /tmp/tmpm57ca4rk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpm57ca4rk.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 && ($num\
    \ % 10 == 1 || $num % 10 == 3 || $num % 10 == 5 || $num % 10 == 7 || $num % 10\
    \ == 9)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivqiv040.php:25\n\
    Stack trace:\n#0 /tmp/tmpivqiv040.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpivqiv040.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && ($num%10)%2==1 && $num{0}%2==1)\
    \ {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\necho specialFilter([15,\
    \ -73, 14, -15]);\necho specialFilter([33, -2, -3, 45, 21, 109]);\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "00\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl48elf3o.php:27\n\
    Stack trace:\n#0 /tmp/tmpl48elf3o.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpl48elf3o.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 10 && $nums[$i]\
    \ % 2 == 1 && $nums[$i] % 10 == 1 ||\n            $nums[$i] > 10 && $nums[$i]\
    \ % 2 == 1 && $nums[$i] % 10 == 3 ||\n            $nums[$i] > 10 && $nums[$i]\
    \ % 2 == 1 && $nums[$i] % 10 == 5 ||\n            $nums[$i] > 10 && $nums[$i]\
    \ % 2 == 1 && $nums[$i] % 10 == 7 ||\n            $nums[$i] > 10 && $nums[$i]\
    \ % 2 == 1 && $nums[$i] % 10 == 9) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n$a = specialFilter([15, -73, 14, -15]);\necho \"The\
    \ result is \" . $a . \"\\n\";\n$b = specialFilter([33, -2, -3, 45, 21, 109]);\n\
    echo \"The result is \" . $b . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "The result is 1\nThe result is 4\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpom8_lxfr.php:33\nStack trace:\n#0 /tmp/tmpom8_lxfr.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpom8_lxfr.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num%2 == 1 && $num%10\
    \ == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1aqbh5da.php:24\n\
    Stack trace:\n#0 /tmp/tmp1aqbh5da.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1aqbh5da.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $cnt = 0;\n \
    \ foreach ($nums as $num) {\n    if ($num > 10) {\n      $f = $num % 10;\n   \
    \   $d = 0;\n      while ($num) {\n        $num = intval($num / 10);\n       \
    \ $d = $num % 10;\n      }\n      if ($f % 2 == 1 && $d % 2 == 1) {\n        $cnt++;\n\
    \      }\n    }\n  }\n  return $cnt;\n}\necho specialFilter([15, -73, 14, -15]);\n\
    echo \"<br/>\";\necho specialFilter([33, -2, -3, 45, 21, 109]);\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0<br/>0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2als7vi0.php:34\n\
    Stack trace:\n#0 /tmp/tmp2als7vi0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2als7vi0.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        if (10 < $nums[$i] && $nums[$i]\
    \ % 2 != 0 && ($nums[$i] % 10) % 2 != 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\necho specialFilter([15, -73, 14, -15]) . \"\\\
    n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpox1nzpb2.php:27\n\
    Stack trace:\n#0 /tmp/tmpox1nzpb2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpox1nzpb2.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $ctr = 0;\n \
    \ foreach ($nums as $num) {\n    if ($num > 10) {\n      $lastdigit = $num % 10;\n\
    \      while ($num > 10) {\n        $num = floor($num / 10);\n      }\n      if\
    \ ($num % 2 != 0 && $lastdigit % 2 != 0) {\n        $ctr++;\n      }\n    }\n\
    \  }\n  return $ctr;\n}\necho specialFilter([15, -73, 14, -15]) . \"<br>\";\n\
    echo specialFilter([33, -2, -3, 45, 21, 109]) . \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1<br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd8ukem6g.php:33\n\
    Stack trace:\n#0 /tmp/tmpd8ukem6g.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpd8ukem6g.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num >= 10 && $num % 2 !== 0 && ($num\
    \ % 10) % 2 !== 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\necho specialFilter([15, -73, 14, -15]); // 1\necho specialFilter([33, -2,\
    \ -3, 45, 21, 109]); // 2\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps55yq8o0.php:27\n\
    Stack trace:\n#0 /tmp/tmps55yq8o0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmps55yq8o0.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $greaterThan10\
    \ = array_filter($nums, function($n) {\n        return $n > 10;\n    });\n   \
    \ $oddGreaterThan10 = array_filter($greaterThan10, function($n) {\n        return\
    \ ($n % 2 != 0) && \n               (getFirstDigit($n) % 2 != 0) && \n       \
    \        (getLastDigit($n) % 2 != 0);\n    });\n    return count($oddGreaterThan10);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function getFirstDigit()\
    \ in /tmp/tmpco4qh6vz.php:14\nStack trace:\n#0 [internal function]: {closure}(15)\n\
    #1 /tmp/tmpco4qh6vz.php(16): array_filter(Array, Object(Closure))\n#2 /tmp/tmpco4qh6vz.php(21):\
    \ specialFilter(Array)\n#3 /tmp/tmpco4qh6vz.php(26): candidate(Array)\n#4 /tmp/tmpco4qh6vz.php(34):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpco4qh6vz.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $filtered =\
    \ array_filter($nums, function($n) {\n        return $n > 10 && ($n % 10) % 2\
    \ && floor($n / 10) % 2;\n    });\n    return count($filtered);\n}\n\necho specialFilter([15,\
    \ -73, 14, -15]) . PHP_EOL;\necho specialFilter([33, -2, -3, 45, 21, 109]) . PHP_EOL;\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkcguir40.php:24\n\
    Stack trace:\n#0 /tmp/tmpkcguir40.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkcguir40.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg16v9kfu.php:17\n\
    Stack trace:\n#0 /tmp/tmpg16v9kfu.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg16v9kfu.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe4we7uj6.php:17\n\
    Stack trace:\n#0 /tmp/tmpe4we7uj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe4we7uj6.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $first =\
    \ (int) substr($num, 0, 1);\n            $last = (int) substr($num, -1);\n   \
    \         if ($first % 2 != 0 && $last % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\necho specialFilter([15,\
    \ -73, 14, -15]) . \"<br>\"; // 1\necho specialFilter([33, -2, -3, 45, 21, 109])\
    \ . \"<br>\"; // 2\necho specialFilter([2, 3, 5, 6, 7, 8, 9]) . \"<br>\"; // 0\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>0<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 != 0 && $num % 5 !=\
    \ 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\necho specialFilter([15,\
    \ -73, 14, -15]);\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0deqyvb.php:25\n\
    Stack trace:\n#0 /tmp/tmp_0deqyvb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_0deqyvb.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $arr = [];\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0) {\n  \
    \          $arr[] = $num;\n        }\n    }\n    return count($arr);\n}\n\necho\
    \ specialFilter([15, -73, 14, -15]);\necho '<br>';\necho specialFilter([33, -2,\
    \ -3, 45, 21, 109]);\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplf6_mz36.php:28\n\
    Stack trace:\n#0 /tmp/tmplf6_mz36.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplf6_mz36.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // your code\
    \ here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnavmxeyr.php:17\n\
    Stack trace:\n#0 /tmp/tmpnavmxeyr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnavmxeyr.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if (abs($num) > 10) {\n      $lastDigit = $num\
    \ % 10;\n      $firstDigit = (int) ($num / pow(10, (int) (log10($num))));\n  \
    \    if ($lastDigit % 2 !== 0 && $firstDigit % 2 !== 0) {\n        $count++;\n\
    \      }\n    }\n  }\n  return $count;\n}\n\necho specialFilter([15, -73, 14,\
    \ -15]) . \"\\n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\\n\";\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "3\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87c3foir.php:30\n\
    Stack trace:\n#0 /tmp/tmp87c3foir.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp87c3foir.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tfor ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i] >= 10) {\n\t\t\t\
    $first = $nums[$i] % 10;\n\t\t\tif ($first % 2 != 0) {\n\t\t\t\t$last = intval($nums[$i]\
    \ / 10);\n\t\t\t\tif ($last % 2 != 0) {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpltkzv3tb.php:31\n\
    Stack trace:\n#0 /tmp/tmpltkzv3tb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpltkzv3tb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $result = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 == 1 && ($num % 10)\
    \ % 2 == 1) {\n      $result++;\n    }\n  }\n  return $result;\n}\n\n$nums = [15,\
    \ -73, 14, -15];\n$nums = [33, -2, -3, 45, 21, 109];\necho specialFilter($nums);\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_nh1mtl_.php:28\n\
    Stack trace:\n#0 /tmp/tmp_nh1mtl_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_nh1mtl_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$num = (string)$num;\n\
    \t\t\tif ($num[0] % 2 === 1 && $num[strlen($num) - 1] % 2 === 1) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\necho specialFilter([15, -73, 14, -15]);\n\
    echo specialFilter([33, -2, -3, 45, 21, 109]);\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '12'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $sum = 0;\n \
    \ foreach ($nums as $key => $value) {\n    if (abs($value) > 10) {\n      $k =\
    \ substr($value, 0, 1);\n      $m = substr($value, -1);\n      if (($k % 2 ==\
    \ 1) && ($m % 2 == 1)) {\n        $sum++;\n      }\n    }\n  }\n  return $sum;\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0bomvojo.php on line\
    \ 14\n\nWarning: A non-numeric value encountered in /tmp/tmp0bomvojo.php on line\
    \ 14\n\nWarning: A non-numeric value encountered in /tmp/tmp0bomvojo.php on line\
    \ 14\n\nWarning: A non-numeric value encountered in /tmp/tmp0bomvojo.php on line\
    \ 14\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  for ($i = 0; $i < count($nums); $i++) {\n    if ($nums[$i] > 10) {\n      $firstDigit\
    \ = $nums[$i] % 10;\n      $lastDigit = floor($nums[$i] / 10);\n      if ($firstDigit\
    \ % 2 !== 0 && $lastDigit % 2 !== 0) {\n        $count += 1;\n      }\n    }\n\
    \  }\n  return $count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpau7tfxo4.php:28\n\
    Stack trace:\n#0 /tmp/tmpau7tfxo4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpau7tfxo4.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$numStr = strval($num);\n\
    \t\t\tif (strlen($numStr) === 1) {\n\t\t\t\t$firstDigit = $numStr[0];\n\t\t\t\t\
    $lastDigit = $numStr[0];\n\t\t\t} else {\n\t\t\t\t$firstDigit = $numStr[0];\n\t\
    \t\t\t$lastDigit = $numStr[strlen($numStr) - 1];\n\t\t\t}\n\t\t\tif ($firstDigit\
    \ % 2 !== 0 && $lastDigit % 2 !== 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t// your code\
    \ here\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xefilkw.php:16\n\
    Stack trace:\n#0 /tmp/tmp2xefilkw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2xefilkw.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \t$nums = array_map('strval', $nums);\n\tforeach ($nums as $num) {\n\t\tif (strlen($num)\
    \ > 1) {\n\t\t\tif (abs($num) > 10 && is_numeric($num)) {\n\t\t\t\tif (intval($num[0])\
    \ % 2 == 1 && intval($num[strlen($num) - 1]) % 2 == 1) {\n\t\t\t\t\t$count++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\necho specialFilter([15, -73,\
    \ 14, -15]) . \"\\n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$num_str = strval($num);\n\
    \t\t\tif (strlen($num_str) > 1) {\n\t\t\t\tif (intval($num_str[0]) % 2 == 1) {\n\
    \t\t\t\t\tif (intval($num_str[strlen($num_str) - 1]) % 2 == 1) {\n\t\t\t\t\t\t\
    $count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\n\
    echo specialFilter([15, -73, 14, -15]); //=> 1 \necho specialFilter([33, -2, -3,\
    \ 45, 21, 109]); //=> 2\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '12'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $cnt = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 == 1 && $num\
    \ % 10 % 2 == 1) {\n            $cnt++;\n        }\n    }\n    return $cnt;\n\
    }\n\necho specialFilter([15, -73, 14, -15]) . PHP_EOL;\necho specialFilter([33,\
    \ -2, -3, 45, 21, 109]) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphbnyocfb.php:27\n\
    Stack trace:\n#0 /tmp/tmphbnyocfb.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphbnyocfb.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if (isGreaterThanTen($num) && isBothDigitsOdd($num))\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isGreaterThanTen()\
    \ in /tmp/tmpwmbplaj1.php:11\nStack trace:\n#0 /tmp/tmpwmbplaj1.php(19): specialFilter(Array)\n\
    #1 /tmp/tmpwmbplaj1.php(23): candidate(Array)\n#2 /tmp/tmpwmbplaj1.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwmbplaj1.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  //Your code here\n\
    \  $counter = 0;\n  foreach($nums as $num){\n    if ($num > 10 && ($num % 10 ==\
    \ 1 || $num % 10 == 3 || $num % 10 == 5 || $num % 10 == 7 || $num % 10 == 9) &&\
    \ (floor($num / 10) % 10 == 1 || floor($num / 10) % 10 == 3 || floor($num / 10)\
    \ % 10 == 5 || floor($num / 10) % 10 == 7 || floor($num / 10) % 10 == 9)) {\n\
    \      $counter++;\n    }\n  }\n  return $counter;\n}\n\necho \"Test 1: \" . (specialFilter([15,\
    \ -73, 14, -15]) == 1 ? \"true\" : \"false\") . \"\\n\";\necho \"Test 2: \" .\
    \ (specialFilter([33, -2, -3, 45, 21, 109]) == 2 ? \"true\" : \"false\") . \"\\\
    n\";\necho \"Test 3: \" . (specialFilter([32, -2, -3, 45, 21, 109]) == 1 ? \"\
    true\" : \"false\") . \"\\n\";\necho \"Test 4: \" . (specialFilter([15, -73, 14,\
    \ -17]) == 0 ? \"true\" : \"false\") . \"\\n\";\necho \"Test 5: \" . (specialFilter([31,\
    \ -2, -3, 45, 21, 109]) == 2 ? \"true\" : \"false\") . \"\\n\";\necho \"Test 6:\
    \ \" . (specialFilter([33, -2, -3, 45, 21, 55]) == 1 ? \"true\" : \"false\") .\
    \ \"\\n\";\necho \"Test 7: \" . (specialFilter([15, -73, 14, -25]) == 0 ? \"true\"\
    \ : \"false\") . \"\\n\";\necho \"Test 8: \" . (specialFilter([33, -2, -3, 45,\
    \ 21, 199]) == 1 ? \"true\" : \"false\") . \"\\n\";\necho \"Test 9: \" . (specialFilter([33,\
    \ -2, -3, 33, 21, 199]) == 2 ? \"true\" : \"false\") . \"\\n\";\necho \"Test 10:\
    \ \" . (specialFilter([32, -2, -3\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpimxrf4mo.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tfor ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i] > 10 && $nums[$i]%2\
    \ != 0 && ($nums[$i]%10)%2 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\n$test1 = specialFilter([15, -73, 14, -15]);\necho \"Expected output: 1\\\
    n\";\necho \"Actual output: $test1\\n\";\n\n$test2 = specialFilter([33, -2, -3,\
    \ 45, 21, 109]);\necho \"Expected output: 2\\n\";\necho \"Actual output: $test2\\\
    n\";\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Expected output: 1\nActual output: 1\nExpected output: 2\nActual output:\
    \ 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqczm6ifc.php:33\n\
    Stack trace:\n#0 /tmp/tmpqczm6ifc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqczm6ifc.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprcy2y2fx.php:16\n\
    Stack trace:\n#0 /tmp/tmprcy2y2fx.php(25): test()\n#1 {main}\n  thrown in /tmp/tmprcy2y2fx.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$first = $num[0];\n\t\
    \t\t$last = $num[strlen($num) - 1];\n\t\t\tif ($first % 2 != 0 && $last % 2 !=\
    \ 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp63dusq3a.php:27\n\
    Stack trace:\n#0 /tmp/tmp63dusq3a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp63dusq3a.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif (abs($num) > 10) {\n\t\t\t$lastDigit = $num\
    \ % 10;\n\t\t\t$firstDigit = 0;\n\t\t\t$num = abs($num);\n\t\t\twhile ($num >=\
    \ 10) {\n\t\t\t\t$num = $num / 10;\n\t\t\t}\n\t\t\t$firstDigit = $num;\n\t\t\t\
    if ($firstDigit % 2 !== 0 && $lastDigit % 2 !== 0) {\n\t\t\t\t$count++;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbf2e2r9e.php:33\n\
    Stack trace:\n#0 /tmp/tmpbf2e2r9e.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbf2e2r9e.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ function($num) {\n        $lastDigit = substr(strval($num), -1);\n        $firstDigit\
    \ = substr(strval($num), 0, 1);\n        return $num > 10 && ($lastDigit == 1\
    \ || $lastDigit == 3 || $lastDigit == 5 || $lastDigit == 7 || $lastDigit == 9)\
    \ && ($firstDigit == 1 || $firstDigit == 3 || $firstDigit == 5 || $firstDigit\
    \ == 7 || $firstDigit == 9);\n    }));\n}\nfunction candidate(...$args) {\n  \
    \  return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $length = count($nums);\n\
    \    $count = 0;\n    for ($i = 0; $i < $length; $i++) {\n        $first = $nums[$i];\n\
    \        $last = substr($nums[$i], -1);\n        $first = substr($first, 0, 1);\n\
    \        if ($nums[$i] > 10 && ($first === 1 || $first === 3 || $first === 5 ||\
    \ $first === 7 || $first === 9) && ($last === 1 || $last === 3 || $last === 5\
    \ || $last === 7 || $last === 9)) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\necho specialFilter([15, -73, 14, -15]) . \"\\n\";\n\
    echo specialFilter([33, -2, -3, 45, 21, 109]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpanx8xpuw.php:30\n\
    Stack trace:\n#0 /tmp/tmpanx8xpuw.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpanx8xpuw.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $n) {\n        if (abs($n) > 10 && isFirstAndLastOdd($n))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isFirstAndLastOdd()\
    \ in /tmp/tmpp_r1md57.php:11\nStack trace:\n#0 /tmp/tmpp_r1md57.php(19): specialFilter(Array)\n\
    #1 /tmp/tmpp_r1md57.php(24): candidate(Array)\n#2 /tmp/tmpp_r1md57.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp_r1md57.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num > 0) {\n       \
    \     $firstDigit = $num % 10;\n            $lastDigit = (int) ($num / 10);\n\
    \            if ($firstDigit % 2 !== 0 && $lastDigit % 2 !== 0) {\n          \
    \      $count++;\n            }\n        }\n    }\n    return $count;\n}\n\necho\
    \ specialFilter([15, -73, 14, -15]) . \"\\n\";\necho specialFilter([33, -2, -3,\
    \ 45, 21, 109]) . \"\\n\";\necho specialFilter([]) . \"\\n\";\necho specialFilter([-33,\
    \ -2, -3, -45, -21, -109]) . \"\\n\";\necho specialFilter([34, -2, -3, 45, 21,\
    \ 109]) . \"\\n\";\necho specialFilter([15, -2, 3, 45, 21, -109]) . \"\\n\";\n\
    echo specialFilter([-15, -73, -14, -15]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n1\n0\n0\n0\n1\n0\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmptgz6lufk.php:36\nStack trace:\n#0 /tmp/tmptgz6lufk.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmptgz6lufk.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $lastDigit\
    \ = $num % 10;\n            if ($lastDigit % 2 != 0) {\n                $firstDigit\
    \ = substr($num, 0, 1);\n                if ($firstDigit % 2 != 0) {\n       \
    \             $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  // Your code\
    \ here\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76n2z3ed.php:16\n\
    Stack trace:\n#0 /tmp/tmp76n2z3ed.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp76n2z3ed.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmm02dk7j.php:16\n\
    Stack trace:\n#0 /tmp/tmpmm02dk7j.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmm02dk7j.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 != 0 && $num % 2 !=\
    \ 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\necho specialFilter([15,\
    \ -73, 14, -15]) . \"\\n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgc7j8v0l.php:26\n\
    Stack trace:\n#0 /tmp/tmpgc7j8v0l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgc7j8v0l.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ function($num) {\n        return $num > 10 && $num % 2 && $num % 10;\n    }));\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5ra4vhm.php:21\n\
    Stack trace:\n#0 /tmp/tmpo5ra4vhm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpo5ra4vhm.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffi6m8iu.php:16\n\
    Stack trace:\n#0 /tmp/tmpffi6m8iu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpffi6m8iu.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && ($num % 10) % 2 != 0\
    \ && $num % 2 != 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho specialFilter([15, -73, 14, -15]);\nfunction candidate(...$args) {\n \
    \   return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpozjhm66b.php:25\n\
    Stack trace:\n#0 /tmp/tmpozjhm66b.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpozjhm66b.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $result = 0;\n\
    \  foreach ($nums as $n) {\n    if ($n > 10 && $n % 2 === 1 && ($n % 10) % 2 ===\
    \ 1) $result++;\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n \
    \   return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5z_ig5z5.php:22\n\
    Stack trace:\n#0 /tmp/tmp5z_ig5z5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp5z_ig5z5.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$i = 0;\n\t$counter\
    \ = 0;\n\tforeach ($nums as $value) {\n\t\tif ($value > 10) {\n\t\t\t$i = strlen($value);\n\
    \t\t\tif ($value[0] % 2 != 0 && $value[$i - 1] % 2 != 0) {\n\t\t\t\t$counter++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $counter;\n}\necho specialFilter([15, -73, 14, -15]);\
    \ // 1\necho specialFilter([33, -2, -3, 45, 21, 109]); // 2\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "00\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjpvszi3.php:29\n\
    Stack trace:\n#0 /tmp/tmpsjpvszi3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsjpvszi3.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 != 0 && $num[0] % 2\
    \ != 0 && $num[strlen($num) - 1] % 2 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\t\
    return $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38cw83j3.php:24\n\
    Stack trace:\n#0 /tmp/tmp38cw83j3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp38cw83j3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$output = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$first = substr($num, 0, 1);\n\t\t$last = substr($num,\
    \ -1);\n\t\tif ($num > 10 && $first % 2 != 0 && $last % 2 != 0) {\n\t\t\t$output\
    \ += 1;\n\t\t}\n\t}\n\treturn $output;\n}\n\necho specialFilter([15, -73, 14,\
    \ -15]) . \"\\n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\\n\";\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $special =\
    \ [];\n    foreach ($nums as $num) {\n        $str = strval($num);\n        if\
    \ ($num > 10) {\n            if (strlen($str) >= 2) {\n                if ($str[0]\
    \ % 2 !== 0 && $str[strlen($str) - 1] % 2 !== 0) {\n                    array_push($special,\
    \ $num);\n                }\n            }\n        }\n    }\n    return count($special);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $n) {\n\t\t$count += ($n > 10 && $n % 2 != 0 && $n % 10 !=\
    \ 0) ? 1 : 0;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp017ukea.php:23\n\
    Stack trace:\n#0 /tmp/tmpp017ukea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpp017ukea.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $counter =\
    \ 0;\n    foreach ($nums as $key => $value) {\n        if ($value > 10 && (in_array($value[0],\
    \ [1, 3, 5, 7, 9]) && in_array($value[-1], [1, 3, 5, 7, 9]))) {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}\necho specialFilter([15, -73, 14, -15]);\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjr4580hd.php:24\n\
    Stack trace:\n#0 /tmp/tmpjr4580hd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpjr4580hd.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t// Write code\
    \ here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplayijjb6.php:17\n\
    Stack trace:\n#0 /tmp/tmplayijjb6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplayijjb6.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 10) {\n\
    \            $firstDigit = ($nums[$i] < 0) ? -($nums[$i] % 10) : $nums[$i] % 10;\n\
    \            $lastDigit = $nums[$i] % 10;\n            if ($firstDigit % 2 !=\
    \ 0 && $lastDigit % 2 != 0) {\n                $count++;\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\necho specialFilter([15, -73, 14, -15])\
    \ . \"\\n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp42k09p1_.php:32\n\
    Stack trace:\n#0 /tmp/tmp42k09p1_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp42k09p1_.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $newCount =\
    \ 0;\n    foreach ($nums as $num) {\n        if ($num > 10 && $num%2 !== 0 &&\
    \ $num/100%2 !== 0) {\n            $newCount++;\n        }\n    }\n    return\
    \ $newCount;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgc3uvxkx.php:23\n\
    Stack trace:\n#0 /tmp/tmpgc3uvxkx.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgc3uvxkx.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // code goes\
    \ here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39tux9oc.php:17\n\
    Stack trace:\n#0 /tmp/tmp39tux9oc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp39tux9oc.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $counter = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10) {\n      $firstDigit = floor($num\
    \ / 10);\n      $lastDigit = $num % 10;\n      if ($firstDigit % 2 !== 0 && $lastDigit\
    \ % 2 !== 0) {\n        $counter++;\n      }\n    }\n  }\n  return $counter;\n\
    }\necho specialFilter([15, -73, 14, -15]);\nfunction candidate(...$args) {\n \
    \   return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3prv2w2.php:29\n\
    Stack trace:\n#0 /tmp/tmpl3prv2w2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl3prv2w2.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ function($n) {\n        return $n > 10 && substr($n, 0, 1) % 2 && substr($n,\
    \ -1) % 2;\n    }));\n}\n\n$res = specialFilter([15, -73, 14, -15]);\necho '1.';\n\
    var_dump($res === 1);\n$res = specialFilter([33, -2, -3, 45, 21, 109]);\necho\
    \ '2.';\nvar_dump($res === 2);\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1.bool(true)\n2.bool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ function($num) {\n        $num = strval($num);\n        return $num > 10 &&\
    \ strlen($num) > 1 &&\n            intval($num[0]) % 2 != 0 &&\n            intval($num[strlen($num)\
    \ - 1]) % 2 != 0;\n    }));\n}\n\necho specialFilter([15, -73, 14, -15]);\necho\
    \ specialFilter([33, -2, -3, 45, 21, 109]);\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '12'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\n}\n\necho specialFilter([15,\
    \ -73, 14, -15]) . \"\\n\";\necho specialFilter([33, -2, -3, 45, 21, 109]) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpol5ski78.php:19\n\
    Stack trace:\n#0 /tmp/tmpol5ski78.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpol5ski78.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $firstDigit\
    \ = $num % 10;\n            $lastDigit = floor($num / 10);\n            if ($firstDigit\
    \ % 2 !== 0 && $lastDigit % 2 !== 0) {\n                $count++;\n          \
    \  }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunt9wjwx.php:29\n\
    Stack trace:\n#0 /tmp/tmpunt9wjwx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpunt9wjwx.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Your code\
    \ here!\n}\n\necho specialFilter([15, -73, 14, -15]); // should return 1\necho\
    \ specialFilter([33, -2, -3, 45, 21, 109]); // should return 2\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphofqesqn.php:19\n\
    Stack trace:\n#0 /tmp/tmphofqesqn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphofqesqn.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception

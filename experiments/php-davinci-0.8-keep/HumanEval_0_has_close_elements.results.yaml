name: HumanEval_0_has_close_elements
language: php
results:
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  // remove\
    \ exact duplicates\n  $unique_numbers = array_unique($numbers);\n  sort($unique_numbers);\n\
    \  $count = count($unique_numbers);\n  for ($i = 0; $i < $count - 1; $i++) {\n\
    \    $diff = abs($unique_numbers[$i] - $unique_numbers[$i + 1]);\n    if ($diff\
    \ < $threshold) {\n      return True;\n    }\n  }\n  return False;\n}\n\nhas_close_elements([1.0,\
    \ 2.0, 3.0], 0.5);\nhas_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3);\n\
    \nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2),\
    \ 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6v8g5ofb.php:34\n\
    Stack trace:\n#0 /tmp/tmp6v8g5ofb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6v8g5ofb.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $number_count\
    \ = count($numbers);\n    for ($i = 0; $i < $number_count; $i++) {\n        for\
    \ ($j = 0; $j < $number_count; $j++) {\n            if ($i != $j) {\n        \
    \        if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n              \
    \      return true;\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}\n\nvar_dump(has_close_elements([1.0, 2.0, 3.0], 0.5));\nvar_dump(has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3));\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $length\
    \ = count($numbers);\n  if ($length < 2) {\n    return False;\n  }\n  for ($i\
    \ = 0; $i < $length; $i++) {\n    for ($j = $i + 1; $j < $length; $j++) {\n  \
    \    if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n        return True;\n\
    \      }\n    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n \
    \   return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n      \
    \  return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $max\
    \ = count($numbers);\n    for ($i = 0; $i < $max; $i++) {\n        for ($j = $i\
    \ + 1; $j < $max; $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) <\
    \ $threshold) {\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $result\
    \ = FALSE;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                $result = TRUE;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nprint has_close_elements([1.0, 2.0, 3.0], 0.5)\
    \ . \"\\n\";\nprint has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $numbers_count\
    \ = count($numbers);\n    for ($i = 0; $i < $numbers_count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $numbers_count; $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // Implement\
    \ function here\n    $len = count($numbers);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $n =\
    \ count($numbers);\n    for ($i = 0; $i < $n - 1; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $array_length\
    \ = count($numbers);\n    if ($array_length <= 1) {\n        return false;\n \
    \   }\n    for ($i = 0; $i < $array_length - 1; $i++) {\n        $current_value\
    \ = $numbers[$i];\n        for ($j = $i + 1; $j < $array_length; $j++) {\n   \
    \         $next_value = $numbers[$j];\n            if (abs($current_value - $next_value)\
    \ <= $threshold) {\n                return true;\n            }\n        }\n \
    \   }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $a =\
    \ $numbers[0];\n    $n = count($numbers);\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $b = $numbers[$i];\n        if (abs($a - $b) < $threshold) {\n      \
    \      return true;\n        }\n        $a = $b;\n    }\n    return false;\n}\n\
    \nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2),\
    \ 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9soblnj.php:28\n\
    Stack trace:\n#0 /tmp/tmpw9soblnj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw9soblnj.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // your\
    \ code here\n    $lastNum = array_pop($numbers);\n    $numbers[] = $lastNum;\n\
    \    foreach ($numbers as $num) {\n        if ($num - $lastNum < $threshold) {\n\
    \            return true;\n        }\n        $lastNum = $num;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vzy0k97.php:27\n\
    Stack trace:\n#0 /tmp/tmp_vzy0k97.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_vzy0k97.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n      \
    \  return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // Your\
    \ code goes here.\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcsy2jf4f.php:17\n\
    Stack trace:\n#0 /tmp/tmpcsy2jf4f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcsy2jf4f.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $count\
    \ = count($numbers);\n    if ($count > 1) {\n        $j = $count - 1;\n      \
    \  $start = round($numbers[0], 4);\n        $end = round($numbers[$j], 4);\n \
    \       if (abs($start - $end) < $threshold) {\n            return true;\n   \
    \     }\n        $j--;\n        while ($j > 0) {\n            $end = round($numbers[$j],\
    \ 4);\n            if (abs($start - $end) < $threshold) {\n                return\
    \ true;\n            }\n            $start = $end;\n            $j--;\n      \
    \  }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtiezm0_.php:37\n\
    Stack trace:\n#0 /tmp/tmpxtiezm0_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxtiezm0_.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $has_close_elements\
    \ = false;\n  // We assume that numbers are ordered in the list.\n  $index = 0;\n\
    \  $num_elements = count($numbers);\n  while ($index < $num_elements - 1) {\n\
    \    $element = $numbers[$index];\n    $next_element = $numbers[$index + 1];\n\
    \    $difference = abs($element - $next_element);\n    if ($difference < $threshold)\
    \ {\n      $has_close_elements = true;\n      break;\n    }\n    $index++;\n \
    \ }\n  return $has_close_elements;\n}\n\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46in8fti.php:33\n\
    Stack trace:\n#0 /tmp/tmp46in8fti.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp46in8fti.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold)\n        return\
    \ true;\n    }\n  }\n  return false;\n}\n\necho has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5) ? \"True\" : \"False\";\necho \"\\n\";\necho has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) ? \"True\" : \"False\";\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $length\
    \ = count($numbers);\n  $differences = [];\n  for ($i = 0; $i < $length; $i++)\
    \ {\n    for ($j = $i + 1; $j < $length; $j++) {\n      $differences[] = abs($numbers[$i]\
    \ - $numbers[$j]);\n    }\n  }\n  foreach ($differences as $difference) {\n  \
    \  if ($difference < $threshold) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // Sort\
    \ the array in ascending order.\n    sort($numbers);\n    $length = count($numbers);\n\
    \    for ($i = 0; $i < $length - 1; $i++) {\n        $first = $numbers[$i];\n\
    \        $second = $numbers[$i + 1];\n        $difference = abs($first - $second);\n\
    \        if ($difference < $threshold) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\necho has_close_elements([1.0, 2.0, 3.0], 0.5) .\
    \ \"<br>\";\necho has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) . \"\
    <br>\";\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $length\
    \ = count($numbers);\n  $closest_pair = null;\n  $i = 0;\n  while ($i < $length)\
    \ {\n    $j = $i + 1;\n    while ($j < $length) {\n      $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n      if ($diff < $threshold) {\n        return True;\n  \
    \    }\n      $j++;\n    }\n    $i++;\n  }\n  return False;\n}\n\n$numbers = [1.0,\
    \ 2.0, 3.0];\n$threshold = 0.5;\necho has_close_elements($numbers, $threshold);\n\
    \n$numbers = [1.0, 2.8, 3.0, 4.0, 5.0, 2.0];\n$threshold = 0.3;\necho has_close_elements($numbers,\
    \ $threshold);\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $last_index\
    \ = count($numbers) - 1;\n    for ($i = 0; $i < $last_index; $i++) {\n       \
    \ for ($j = $i + 1; $j <= $last_index; $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n      \
    \  return True;\n      }\n    }\n  }\n  return False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $prev\
    \ = 0;\n    foreach ($numbers as $current) {\n        if ($current - $prev < $threshold)\n\
    \            return True;\n        $prev = $current;\n    }\n    return False;\n\
    }\n\nprint has_close_elements([1.0, 2.0, 3.0], 0.5) . \"\\n\";\nprint has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfo95n4tw.php:26\n\
    Stack trace:\n#0 /tmp/tmpfo95n4tw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfo95n4tw.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $count\
    \ = count($numbers);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j =\
    \ $i + 1; $j < $count; $j++) {\n            if ($numbers[$i] >= $numbers[$j])\
    \ {\n                $diff = $numbers[$i] - $numbers[$j];\n            } else\
    \ {\n                $diff = $numbers[$j] - $numbers[$i];\n            }\n   \
    \         if ($diff < $threshold) {\n                return true;\n          \
    \  }\n        }\n    }\n    return false;\n}\n\n$threshold = 0.3;\n$numbers =\
    \ [1.0, 2.8, 3.0, 4.0, 5.0, 2.0];\nvar_dump(has_close_elements($numbers, $threshold));\n\
    \n$threshold = 0.5;\n$numbers = [1.0, 2.0, 3.0];\nvar_dump(has_close_elements($numbers,\
    \ $threshold));\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(false)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $n = count($numbers);\n\
    \  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n   \
    \   if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n        return True;\n\
    \      }\n    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n \
    \   return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    foreach\
    \ ($numbers as $i) {\n        foreach ($numbers as $j) {\n            if ($i !=\
    \ $j && abs($i - $j) < $threshold) {\n                return true;\n         \
    \   }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ld3c2ac.php:28\n\
    Stack trace:\n#0 /tmp/tmp0ld3c2ac.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0ld3c2ac.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  // $i:int\
    \ is index of current number\n  for ($i = 0; $i < count($numbers); $i++) {\n \
    \   // $j:int is index of next number to compare current number\n    for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n      if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n        return True;\n      }\n    }\n  }\n  return False;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $closest_pair\
    \ = array();\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $threshold) {\n                $closest_pair\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_pair;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n$threshold\
    \ = 0.3;\n$has_close_elements = has_close_elements($numbers, $threshold);\nprint_r($has_close_elements);\n\
    function candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2),\
    \ 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp4sky7_n2.php:30\nStack trace:\n#0 /tmp/tmp4sky7_n2.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4sky7_n2.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $close_elements\
    \ = false;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                $close_elements = true;\n            }\n  \
    \      }\n    }\n    return $close_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $len =\
    \ count($numbers);\n  if ($len == 0) {\n    return false;\n  }\n  for ($i = 0;\
    \ $i < $len; $i++) {\n    for ($j = $i + 1; $j < $len; $j++) {\n      if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n        return true;\n      }\n    }\n  }\n\
    \  return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return True;\n            }\n        }\n    }\n    return False;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $has_close_elements\
    \ = false;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ 0; $j < count($numbers); $j++) {\n            if ($i == $j) {\n            \
    \    continue;\n            }\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                $has_close_elements = true;\n            }\n\
    \        }\n    }\n    return $has_close_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  sort($numbers);\n\
    \  for ($i = 0; $i < count($numbers) - 1; $i++) {\n    if (abs($numbers[$i] -\
    \ $numbers[$i + 1]) < $threshold) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $n = count($numbers);\n\
    \  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n   \
    \   if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n\n$numbers = array(1.0, 2.0, 3.0);\n\
    $threshold = 0.5;\necho has_close_elements($numbers, $threshold);\n\n$numbers\
    \ = array(1.0, 2.8, 3.0, 4.0, 5.0, 2.0);\n$threshold = 0.3;\necho has_close_elements($numbers,\
    \ $threshold);\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $count\
    \ = count($numbers);\n    $i = 0;\n    while ($i < $count - 1) {\n        $j =\
    \ $i + 1;\n        while ($j < $count) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                return true;\n            }\n            $j++;\n\
    \        }\n        $i++;\n    }\n    return false;\n}\n\necho has_close_elements([1.0,\
    \ 2.0, 3.0], 0.5);\necho \"\\n\";\necho has_close_elements([1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0], 0.3);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // check\
    \ if number of elements is more than 1\n    if (count($numbers) <= 1) {\n    \
    \    return False;\n    }\n    // sort elements in ascending order\n    sort($numbers);\n\
    \    // check every element with next element if they are closer than given threshold\n\
    \    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        if (abs($numbers[$i]\
    \ - $numbers[$i + 1]) < $threshold) {\n            return True;\n        }\n \
    \   }\n    return False;\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $n = count($numbers);\n\
    \  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n   \
    \   if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n \
    \   return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    if (count($numbers)\
    \ < 2) {\n        return false;\n    }\n    for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n    \
    \        if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n              \
    \  return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $has_close_elements\
    \ = false;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                $has_close_elements = true;\n            }\n\
    \        }\n    }\n    return $has_close_elements;\n}\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $length\
    \ = count($numbers);\n    $min_distance = max($numbers) - min($numbers);\n   \
    \ for ($i = 0; $i < $length; $i++) {\n        for ($j = $i + 1; $j < $length;\
    \ $j++) {\n            $current_distance = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($current_distance < $min_distance) {\n                $min_distance\
    \ = $current_distance;\n            }\n        }\n    }\n    return $min_distance\
    \ < $threshold;\n}\n\n$numbers = [1.0, 2.0, 3.0];\n$threshold = 0.5;\n$result\
    \ = has_close_elements($numbers, $threshold);\nprint($result);\necho \"\\n\";\n\
    \n$numbers = [1.0, 2.8, 3.0, 4.0, 5.0, 2.0];\n$threshold = 0.3;\n$result = has_close_elements($numbers,\
    \ $threshold);\nprint($result);\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // This\
    \ is another way of using the 'count' function.\n    $length = count($numbers);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        for ($j = $i + 1; $j < $length;\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\n$numbers = [1.0, 2.0, 3.0];\n$threshold = 0.5;\nvar_dump(has_close_elements($numbers,\
    \ $threshold));\n\n$numbers = [1.0, 2.8, 3.0, 4.0, 5.0, 2.0];\n$threshold = 0.3;\n\
    var_dump(has_close_elements($numbers, $threshold));\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $current_position\
    \ = 0;\n    $numbers_len = count($numbers);\n    while ($current_position < $numbers_len)\
    \ {\n        $left_number = $numbers[$current_position];\n        $right_number\
    \ = $numbers[$current_position + 1];\n        if (abs($left_number - $right_number)\
    \ < $threshold) {\n            return true;\n        }\n        $current_position++;\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg1rcdgp4.php:29\n\
    Stack trace:\n#0 /tmp/tmpg1rcdgp4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpg1rcdgp4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $count\
    \ = count($numbers);\n  for ($i = 0; $i < $count; $i++) {\n    for ($j = 0; $j\
    \ < $count; $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n        return True;\n      }\n    }\n  }\n  return False;\n}\n\n$numbers\
    \ = array(1.0, 2.0, 3.0);\n$threshold = 0.5;\n\necho has_close_elements($numbers,\
    \ $threshold);\necho \"\\n\";\n\n$numbers = array(1.0, 2.8, 3.0, 4.0, 5.0, 2.0);\n\
    $threshold = 0.3;\n\necho has_close_elements($numbers, $threshold);\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwthaic5o.php:37\n\
    Stack trace:\n#0 /tmp/tmpwthaic5o.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwthaic5o.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $len\
    \ = count($numbers);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i\
    \ + 1; $j < $len; $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) <\
    \ $threshold) {\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  foreach\
    \ ($numbers as $index => $number) {\n    $sub_array = array_slice($numbers, $index\
    \ + 1);\n    foreach ($sub_array as $sub_number) {\n      if (abs($number - $sub_number)\
    \ < $threshold) {\n        return True;\n      }\n    }\n  }\n  return False;\n\
    }\n\n$list = [1.0, 2.0, 3.0];\n$threshold = 0.5;\necho has_close_elements($list,\
    \ $threshold);\n$list = [1.0, 2.8, 3.0, 4.0, 5.0, 2.0];\n$threshold = 0.3;\necho\
    \ has_close_elements($list, $threshold);\nfunction candidate(...$args) {\n   \
    \ return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\necho (has_close_elements([1.0, 2.0, 3.0], 0.5)) ? \"True\\n\" : \"False\\\
    n\";\necho (has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)) ? \"True\\\
    n\" : \"False\\n\";\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers);\
    \ $j++) {\n            if ($i != $j) {\n                if (abs($numbers[$i] -\
    \ $numbers[$j]) < $threshold) {\n                    return true;\n          \
    \      }\n            }\n        }\n    }\n    return false;\n}\necho has_close_elements([1.0,\
    \ 2.0, 3.0], 0.5) ? \"True\\n\" : \"False\\n\";\necho has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) ? \"True\\n\" : \"False\\n\";\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nif (has_close_elements([1.0, 2.0, 3.0], 0.5)) {\n    echo \"YES\";\n} else\
    \ {\n    echo \"NO\";\n}\necho \"\\n\";\nif (has_close_elements([1.0, 2.8, 3.0,\
    \ 4.0, 5.0, 2.0], 0.3)) {\n    echo \"YES\";\n} else {\n    echo \"NO\";\n}\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "NO\nYES\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  if (sizeof($numbers)\
    \ <= 1) {\n    return False;\n  }\n  for ($i = 0; $i < sizeof($numbers) - 1; $i++)\
    \ {\n    for ($j = $i + 1; $j < sizeof($numbers); $j++) {\n      if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n        return True;\n      }\n    }\n  }\n\
    \  return False;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $min =\
    \ array_shift($numbers);\n  $max = $min;\n  foreach ($numbers as $number) {\n\
    \    if ($number - $threshold < $min) {\n      return true;\n    }\n    $min =\
    \ $number;\n  }\n  return false;\n}\n\nprint(has_close_elements([1.0, 2.0, 3.0],\
    \ 0.5) . \"\\n\");\nprint(has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\
    \ . \"\\n\");\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88wtz8nh.php:28\n\
    Stack trace:\n#0 /tmp/tmp88wtz8nh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp88wtz8nh.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $prev\
    \ = NULL;\n    foreach ($numbers as $n) {\n        if (isset($prev)) {\n     \
    \       if ($n - $prev < $threshold) {\n                return True;\n       \
    \     }\n        }\n        $prev = $n;\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxioua4i.php:27\n\
    Stack trace:\n#0 /tmp/tmpyxioua4i.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyxioua4i.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $has_close_elements\
    \ = false;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ $i+1; $j < count($numbers); $j++) {\n            if ($numbers[$i] + $threshold\
    \ > $numbers[$j] ||\n                $numbers[$i] - $threshold < $numbers[$j])\
    \ {\n                $has_close_elements = true;\n            }\n        }\n \
    \   }\n    return $has_close_elements;\n}\n\nfunction candidate(...$args) {\n\
    \    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo_musgi.php:27\n\
    Stack trace:\n#0 /tmp/tmpbo_musgi.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbo_musgi.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $numbers_count\
    \ = count($numbers);\n    for ($i = 0; $i < $numbers_count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $numbers_count; $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $i =\
    \ 0;\n    while ($i < count($numbers) - 1) {\n        if (abs($numbers[$i] - $numbers[$i\
    \ + 1]) < $threshold) {\n            return true;\n        }\n        $i += 1;\n\
    \    }\n    return false;\n}\n\n$input = array(1.0, 2.0, 3.0);\necho has_close_elements($input,\
    \ 0.5);\n\n$input = array(1.0, 2.8, 3.0, 4.0, 5.0, 2.0);\necho has_close_elements($input,\
    \ 0.3);\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz_n4gk2.php:31\n\
    Stack trace:\n#0 /tmp/tmpkz_n4gk2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkz_n4gk2.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    sort($numbers);\n\
    \    $size = count($numbers);\n    $i = 0;\n    while ($i < $size - 1) {\n   \
    \     if ($numbers[$i + 1] - $numbers[$i] < $threshold) {\n            return\
    \ true;\n        }\n        $i++;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    if (count($numbers)\
    \ == 1) {\n        return false;\n    }\n\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n                return\
    \ true;\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $close\
    \ = False;\n    // print($numbers[0]);\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   // print($numbers[$i]);\n            // print($numbers[$j]);\n           \
    \ if ($numbers[$i] < $numbers[$j]) {\n                $diff = $numbers[$j] - $numbers[$i];\n\
    \            } else {\n                $diff = $numbers[$i] - $numbers[$j];\n\
    \            }\n            // print($diff);\n            if ($diff < $threshold)\
    \ {\n                $close = True;\n            }\n        }\n    }\n    return\
    \ $close;\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $last\
    \ = INF;\n  foreach ($numbers as $number) {\n    if (abs($number - $last) < $threshold)\
    \ {\n      return True;\n    }\n    $last = $number;\n  }\n  return False;\n}\n\
    \nclass HasCloseElementsTest extends PHPUnit_Framework_TestCase {\n  public function\
    \ testHasCloseElements() {\n    $this->assertFalse(has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5));\n    $this->assertTrue(has_close_elements([1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0], 0.3));\n  }\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'PHPUnit_Framework_TestCase' not found\
    \ in /tmp/tmpglx7pgvx.php:19\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpglx7pgvx.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $n =\
    \ count($numbers);\n    if ($n < 2) return false;\n    sort($numbers);\n    $min_diff\
    \ = $numbers[1] - $numbers[0];\n    for ($i = 2; $i < $n; $i++) {\n        $diff\
    \ = $numbers[$i] - $numbers[$i - 1];\n        if ($diff < $min_diff) {\n     \
    \       $min_diff = $diff;\n        }\n    }\n    return $min_diff < $threshold;\n\
    }\n\n$a = [1.0, 2.0, 3.0];\nvar_dump(has_close_elements($a, 0.5));\n\n$a = [1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0];\nvar_dump(has_close_elements($a, 0.3));\nfunction\
    \ candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // get\
    \ the absolute value from number between positive and negative numbers.\n    //\
    \ it return true if any two absolute value is less than threshold \n    // then\
    \ it return true else false.\n    return any(abs($numbers[$i] - $numbers[$j])\
    \ < $threshold\n            for ($i = 0; $i < sizeof($numbers); $i++)\n      \
    \      for ($j = $i + 1; $j < sizeof($numbers); $j++));\n}\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpaq7omxcv.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $result\
    \ = false;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n            if ($numbers[$i] - $numbers[$j]\
    \ < $threshold) {\n                $result = true;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi710e_0b.php:26\n\
    Stack trace:\n#0 /tmp/tmpi710e_0b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpi710e_0b.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n      \
    \  return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $len =\
    \ count($numbers);\n  if ($len == 0) return false;\n  for ($i = 0; $i < $len -\
    \ 1; $i++) {\n    for ($j = $i + 1; $j < $len; $j++) {\n      if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n        return true;\n      }\n    }\n  }\n\
    \  return false;\n}\n\nclass HasCloseElementsTest extends PHPUnit_Framework_TestCase\
    \ {\n  public function testHasCloseElements1() {\n    $this->assertEquals(has_close_elements([1.0,\
    \ 2.0, 3.0], 0.5), false);\n  }\n\n  public function testHasCloseElements2() {\n\
    \    $this->assertEquals(has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3),\
    \ true);\n  }\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'PHPUnit_Framework_TestCase' not found\
    \ in /tmp/tmp_fqzky0j.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp_fqzky0j.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $result\
    \ = false;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                $result = true;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    if (count($numbers)\
    \ < 2) {\n        return false;\n    }\n    sort($numbers);\n    for ($i = 0;\
    \ $i < count($numbers) - 1; $i++) {\n        if ($numbers[$i + 1] - $numbers[$i]\
    \ < $threshold) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $minDistance\
    \ = -1;\n    $arrayLength = count($numbers);\n    $hasClose = false;\n    for\
    \ ($i = 0; $i < $arrayLength; $i++) {\n        for ($j = $i + 1; $j < $arrayLength;\
    \ $j++) {\n            $currentDistance = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($currentDistance <= $threshold) {\n                $hasClose\
    \ = true;\n                if ($minDistance == -1 || $currentDistance < $minDistance)\
    \ {\n                    $minDistance = $currentDistance;\n                }\n\
    \            }\n        }\n    }\n    return $hasClose;\n}\n\necho has_close_elements([1.0,\
    \ 2.0, 3.0], 0.5) . \"\\n\";\necho has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3) . \"\\n\";\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    if (count($numbers)\
    \ == 1) return false;\n    $currentNumber = $numbers[0];\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] - $currentNumber < $threshold)\
    \ {\n            return true;\n        }\n        $currentNumber = $numbers[$i];\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ooozohd.php:26\n\
    Stack trace:\n#0 /tmp/tmp_ooozohd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_ooozohd.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  sort($numbers);\n\
    \  for ($i = 0; $i < count($numbers) - 1; $i++) {\n    if ($numbers[$i + 1] -\
    \ $numbers[$i] < $threshold)\n      return true;\n  }\n  return false;\n}\n\n\
    function candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2),\
    \ 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $count\
    \ = count($numbers);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j =\
    \ $i + 1; $j < $count; $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                return true;\n            }\n        }\n  \
    \  }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // TODO:\
    \ Implement this function!\n    $error = \"Not implemented\";\n    throw new Exception($error);\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Not implemented in /tmp/tmp6ucxxkqx.php:11\n\
    Stack trace:\n#0 /tmp/tmp6ucxxkqx.php(15): has_close_elements(Array, 0.3)\n#1\
    \ /tmp/tmp6ucxxkqx.php(19): candidate(Array, 0.3)\n#2 /tmp/tmp6ucxxkqx.php(28):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp6ucxxkqx.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = 0; $j < count($numbers); $j++)\
    \ {\n      if ($i != $j) {\n        if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n\
    }\n\necho has_close_elements([1.0, 2.0, 3.0], 0.5) ? \"True\" : \"False\";\necho\
    \ PHP_EOL;\necho has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) ? \"\
    True\" : \"False\";\necho PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    if (count($numbers)\
    \ <= 1) {\n        return false;\n    }\n\n    $close_elements = false;\n    for\
    \ ($i = 0; $i < count($numbers) - 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                $close_elements = true;\n                break;\n           \
    \ }\n        }\n    }\n\n    return $close_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $max_diff\
    \ = 0;\n  $max_diff_first = null;\n  $max_diff_second = null;\n  for ($i = 0;\
    \ $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers); $j++)\
    \ {\n      $diff = abs($numbers[$i] - $numbers[$j]);\n      if ($diff > $max_diff)\
    \ {\n        $max_diff = $diff;\n        $max_diff_first = $numbers[$i];\n   \
    \     $max_diff_second = $numbers[$j];\n      }\n    }\n  }\n  return ($max_diff\
    \ <= $threshold);\n}\n\necho(has_close_elements([1.0, 2.0, 3.0], 0.5) ? 'true'\
    \ : 'false') . PHP_EOL;\necho(has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3) ? 'true' : 'false') . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ng541ap.php:32\n\
    Stack trace:\n#0 /tmp/tmp2ng541ap.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2ng541ap.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  sort($numbers);\n\
    \  foreach ($numbers as $i => $number) {\n    if ($i > 0) {\n      if ($number\
    \ - $numbers[$i - 1] < $threshold) {\n        return true;\n      }\n    }\n \
    \ }\n  return false;\n}\n\nif (count($argv) < 3) {\n  echo \"Not enough arguments\\\
    n\";\n  exit;\n}\n\n$numbers = array_slice($argv, 1, count($argv) - 2);\n$threshold\
    \ = $argv[count($argv) - 1];\necho \"For array: \" . implode(\", \", $numbers)\
    \ . \" and threshold: \" . $threshold . \" result is: \" . (has_close_elements($numbers,\
    \ $threshold) ? \"True\" : \"False\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Not enough arguments\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold && $i\
    \ != $j) {\n                return true;\n            }\n        }\n    }\n  \
    \  return false;\n}\n\n$numbers = array(1.0, 2.0, 3.0);\n$threshold = 0.5;\necho\
    \ has_close_elements($numbers, $threshold) . \"<br>\";\n\n$numbers = array(1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0);\n$threshold = 0.3;\necho has_close_elements($numbers,\
    \ $threshold) . \"<br>\";\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nassert(has_close_elements([1.0, 2.0, 3.0], 0.5) == false);\nassert(has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) == true);\nfunction candidate(...$args) {\n \
    \   return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n      \
    \  return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $min_distance\
    \ = null;\n    $n = count($numbers);\n    for ($i = 0; $i < $n; $i++) {\n    \
    \    for ($j = $i + 1; $j < $n; $j++) {\n            $distance = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($distance < $threshold) {\n              \
    \  return true;\n            }\n            if ($min_distance === null || $distance\
    \ < $min_distance) {\n                $min_distance = $distance;\n           \
    \ }\n        }\n    }\n    return false;\n}\n\n/**\n * You are given an array\
    \ of integers and two numbers, A and B.\n * Find the number of subarrays whose\
    \ sum is divisible by B.\n * Now, the same number may be used multiple times in\
    \ subarrays.\n * E.g.\n * Input: [1, 2, 3, 4, 5, 6], A = 3, B = 3\n * Output:\
    \ 5\n *\n * @param $arr array\n * @param $a int\n * @param $b int\n * @return\
    \ int\n */\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $count\
    \ = count($numbers);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j =\
    \ $i + 1; $j < $count; $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                return true;\n            }\n        }\n  \
    \  }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    sort($numbers);\n\
    \    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        if ($numbers[$i +\
    \ 1] - $numbers[$i] < $threshold) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $close_elements\
    \ = false;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ $i+1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                $close_elements = true;\n            }\n  \
    \      }\n    }\n    return $close_elements;\n}\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $size\
    \ = count($numbers);\n  for ($i = 0; $i < $size; $i++) {\n    for ($j = $i + 1;\
    \ $j < $size; $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $n =\
    \ count($numbers);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n\nvar_dump(has_close_elements([1.0, 2.0, 3.0], 0.5));\nvar_dump(has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3));\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    sort($numbers);\n\
    \    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        if (abs($numbers[$i]\
    \ - $numbers[$i + 1]) < $threshold) {\n            return true;\n        }\n \
    \   }\n    return false;\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $has_close_elements\
    \ = false;\n    $previous_number = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $number = $numbers[$i];\n        if (abs($number - $previous_number)\
    \ < $threshold) {\n            $has_close_elements = true;\n            break;\n\
    \        }\n        $previous_number = $number;\n    }\n    return $has_close_elements;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvzqb8y7l.php:29\n\
    Stack trace:\n#0 /tmp/tmpvzqb8y7l.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvzqb8y7l.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $prev\
    \ = $numbers[0];\n  for ($i = 1; $i < count($numbers); $i++) {\n    if (abs($numbers[$i]\
    \ - $prev) < $threshold) {\n      return true;\n    }\n    $prev = $numbers[$i];\n\
    \  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14h1vuf7.php:26\n\
    Stack trace:\n#0 /tmp/tmp14h1vuf7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp14h1vuf7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $last\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($last !== null &&\
    \ abs($number - $last) < $threshold) {\n            return true;\n        }\n\
    \        $last = $number;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3bnwf8am.php:26\n\
    Stack trace:\n#0 /tmp/tmp3bnwf8am.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp3bnwf8am.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n      \
    \  return true;\n      }\n    }\n  }\n  return false;\n}\n\necho (has_close_elements([1.0,\
    \ 2.0, 3.0], 0.5) ? 'true' : 'false') . \"\\n\";\necho (has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) ? 'true' : 'false') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\ntrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $prev\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($prev) {\n       \
    \     if ($number - $prev < $threshold) {\n                return true;\n    \
    \        }\n        }\n        $prev = $number;\n    }\n    return false;\n}\n\
    echo has_close_elements([1.0, 2.0, 3.0], 0.5) ? 'true' : 'false';\necho \"\\n\"\
    ;\necho has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) ? 'true' : 'false';\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\ntrue\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp94dj5g0e.php:30\n\
    Stack trace:\n#0 /tmp/tmp94dj5g0e.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp94dj5g0e.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $result\
    \ = False;\n    $count = count($numbers);\n    for ($i = 0; $i < $count - 1; $i++)\
    \ {\n        $diff = abs($numbers[$i] - $numbers[$i + 1]);\n        if ($diff\
    \ < $threshold) {\n            $result = True;\n            break;\n        }\n\
    \    }\n    return $result;\n}\n$numbers = [1.0, 2.0, 3.0];\n$threshold = 0.5;\n\
    echo has_close_elements($numbers, $threshold);\n$numbers = [1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0];\n$threshold = 0.3;\necho has_close_elements($numbers, $threshold);\n\
    function candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2),\
    \ 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbg71fosl.php:33\n\
    Stack trace:\n#0 /tmp/tmpbg71fosl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbg71fosl.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $i =\
    \ 0;\n    while ($i < sizeof($numbers) - 1) {\n        if (abs($numbers[$i] -\
    \ $numbers[$i + 1]) < $threshold)\n            return true;\n        $i++;\n \
    \   }\n    return false;\n}\n\necho has_close_elements([1.0, 2.0, 3.0], 0.5);\n\
    echo '<br>';\necho has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3);\n\
    function candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2),\
    \ 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br>1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vmkmr97.php:28\n\
    Stack trace:\n#0 /tmp/tmp7vmkmr97.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7vmkmr97.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    if (sizeof($numbers)\
    \ > 0) {\n        $differences = array();\n        for ($i = 0; $i < sizeof($numbers);\
    \ $i++) {\n            $j = 0;\n            while ($j < sizeof($numbers)) {\n\
    \                if ($i != $j) {\n                    $differences[] = abs($numbers[$i]\
    \ - $numbers[$j]);\n                }\n                $j++;\n            }\n\
    \        }\n        for ($i = 0; $i < sizeof($differences); $i++) {\n        \
    \    if ($differences[$i] < $threshold) {\n                return True;\n    \
    \        }\n        }\n    }\n    return False;\n}\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $len =\
    \ count($numbers);\n  if ($len < 2) {\n    return false;\n  }\n  for ($i = 0;\
    \ $i < $len - 1; $i++) {\n    for ($j = $i + 1; $j < $len; $j++) {\n      if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n        return true;\n      }\n    }\n  }\n\
    \  return false;\n}\n\necho has_close_elements([1.0, 2.0, 3.0], 0.5) ? \"True\"\
    \ : \"False\";\necho PHP_EOL;\necho has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0], 0.3) ? \"True\" : \"False\";\necho PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $count\
    \ = count($numbers);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j =\
    \ $i + 1; $j < $count; $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                return true;\n            }\n        }\n  \
    \  }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n      \
    \  return True;\n      }\n    }\n  }\n  return False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  if (empty($numbers))\
    \ {\n    return False;\n  }\n  sort($numbers);\n  for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n    if ($numbers[$i + 1] - $numbers[$i] < $threshold) {\n    \
    \  return True;\n    }\n  }\n  return False;\n}\n\necho has_close_elements([1.0,\
    \ 2.0, 3.0], 0.5);\necho \"\\n\";\necho has_close_elements([1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0], 0.3);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $last_num\
    \ = $numbers[0];\n    foreach ($numbers as $key => $num) {\n        if ($key ===\
    \ 0) {\n            continue;\n        }\n        if (abs($num - $last_num) <\
    \ $threshold) {\n            return true;\n        }\n        $last_num = $num;\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpod2ikv.php:29\n\
    Stack trace:\n#0 /tmp/tmptpod2ikv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptpod2ikv.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $result\
    \ = FALSE;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                $result = TRUE;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\n$numbers = [1.0, 2.0, 3.0];\n$threshold = 0.5;\n\
    var_dump(has_close_elements($numbers, $threshold));\n\n$numbers = [1.0, 2.8, 3.0,\
    \ 4.0, 5.0, 2.0];\n$threshold = 0.3;\nvar_dump(has_close_elements($numbers, $threshold));\n\
    function candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2),\
    \ 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    sort($numbers);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            if ($numbers[$j] - $numbers[$i] < $threshold)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $minDiff\
    \ = $threshold;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $minDiff) {\n                $minDiff\
    \ = $diff;\n            }\n        }\n    }\n    return $minDiff < $threshold;\n\
    }\n\necho \"\\nEnter numbers separated by space.\\n\";\n$stdin = fopen('php://stdin',\
    \ 'r');\n$input = fgets($stdin);\n$numbers = explode(' ', $input);\n\necho \"\\\
    nEnter threshold.\\n\";\n$stdin = fopen('php://stdin', 'r');\n$input = fgets($stdin);\n\
    $threshold = $input;\n\n$hasCloseElements = has_close_elements($numbers, $threshold);\n\
    \nif ($hasCloseElements) {\n    echo \"There are close elements.\";\n} else {\n\
    \    echo \"There are no close elements.\";\n}\nfunction candidate(...$args) {\n\
    \    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: b'\nEnter numbers separated by space.\n'
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    sort($numbers);\n\
    \    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        if (abs($numbers[$i]\
    \ - $numbers[$i + 1]) < $threshold) {\n            return true;\n        }\n \
    \   }\n    return false;\n}\n\nassert(has_close_elements([1.0, 2.0, 3.0], 0.5)\
    \ === false);\nassert(has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\
    \ === true);\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $isClose\
    \ = false;\n    $length = count($numbers);\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        for ($j = 0; $j < $length; $j++) {\n            if ($i != $j) {\n\
    \                if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n      \
    \              $isClose = true;\n                }\n            }\n        }\n\
    \    }\n    return $isClose;\n}\n\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $result\
    \ = False;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                $result = True;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  if (count($numbers)\
    \ < 2) {\n    return false;\n  }\n\n  for ($i = 0; $i < count($numbers) - 1; $i++)\
    \ {\n    for ($j = $i + 1; $j < count($numbers); $j++) {\n      if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n        return true;\n      }\n    }\n  }\n\
    \n  return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    if (count($numbers)\
    \ < 2) {\n        return false;\n    }\n    $left = 0;\n    $right = 1;\n    while\
    \ ($right < count($numbers)) {\n        if (abs($numbers[$left] - $numbers[$right])\
    \ < $threshold) {\n            return true;\n        }\n        $left++;\n   \
    \     $right++;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n\
    \    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcv_q97n8.php:31\n\
    Stack trace:\n#0 /tmp/tmpcv_q97n8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcv_q97n8.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $has_close_elements\
    \ = false;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                $has_close_elements = true;\n            }\n\
    \        }\n    }\n    return $has_close_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $max\
    \ = max($numbers);\n    foreach ($numbers as $a) {\n        foreach ($numbers\
    \ as $b) {\n            if ($a > $b) {\n                $temp = $a;\n        \
    \        $a = $b;\n                $b = $temp;\n            }\n            if\
    \ ($a + $threshold > $b) {\n                return true;\n            }\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0exnk6u.php:30\n\
    Stack trace:\n#0 /tmp/tmpa0exnk6u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa0exnk6u.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // TODO\n\
    }\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7l75op_h.php:16\n\
    Stack trace:\n#0 /tmp/tmp7l75op_h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7l75op_h.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $last_number\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($last_number == 0) {\n\
    \            $last_number = $number;\n            continue;\n        }\n     \
    \   if (abs($number - $last_number) < $threshold) {\n            return true;\n\
    \        }\n        $last_number = $number;\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdlwymaq.php:30\n\
    Stack trace:\n#0 /tmp/tmphdlwymaq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphdlwymaq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $previous\
    \ = $numbers[0];\n  for ($i = 1; $i < count($numbers); $i++) {\n    if ($previous\
    \ - $numbers[$i] < $threshold) {\n      return true;\n    }\n    $previous = $numbers[$i];\n\
    \  }\n  return false;\n}\n\nprint_r(has_close_elements([1.0, 2.0, 3.0], 0.5));\n\
    print_r(has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3));\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0e10y247.php:27\n\
    Stack trace:\n#0 /tmp/tmp0e10y247.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0e10y247.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $previous\
    \ = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n        if (abs($numbers[$i]\
    \ - $previous) < $threshold) {\n            return True;\n        }\n        $previous\
    \ = $numbers[$i];\n    }\n    return False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxs3u5l14.php:26\n\
    Stack trace:\n#0 /tmp/tmpxs3u5l14.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxs3u5l14.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $num_numbers\
    \ = count($numbers);\n    $i = 0;\n    while ($i < $num_numbers) {\n        $j\
    \ = $i + 1;\n        while ($j < $num_numbers) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n                return True;\n            }\n\
    \            $j = $j + 1;\n        }\n        $i = $i + 1;\n    }\n    return\
    \ False;\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    sort($numbers);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                return true;\n            }\n        }\n  \
    \  }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $count\
    \ = count($numbers);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j =\
    \ $i + 1; $j < $count; $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                return true;\n            }\n        }\n  \
    \  }\n    return false;\n}\n\nif (!debug_backtrace()) {\n    $test_case = array(\n\
    \        array(\n            'numbers' => array(1.0, 2.0, 3.0),\n            'threshold'\
    \ => 0.5,\n            'expected' => false\n        ),\n        array(\n     \
    \       'numbers' => array(1.0, 2.8, 3.0, 4.0, 5.0, 2.0),\n            'threshold'\
    \ => 0.3,\n            'expected' => true\n        )\n    );\n    foreach ($test_case\
    \ as $t) {\n        $result = has_close_elements($t['numbers'], $t['threshold']);\n\
    \        if ($result == $t['expected']) {\n            echo \"OK \\n\";\n    \
    \    } else {\n            echo \"Failed: \" . $result . \" != \" . $t['expected']\
    \ . \"\\n\";\n        }\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "OK \nOK \n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $i =\
    \ 0;\n    $len = count($numbers);\n    while ($i < $len - 1) {\n        $x = $numbers[$i];\n\
    \        $j = $i + 1;\n        while ($j < $len) {\n            $y = $numbers[$j];\n\
    \            if (abs($x - $y) < $threshold) {\n                return true;\n\
    \            }\n            $j++;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\necho has_close_elements([1.0, 2.0, 3.0], 0.5) ? 'True' : 'False';\n\
    echo PHP_EOL;\necho has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) ?\
    \ 'True' : 'False';\necho PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $n =\
    \ count($numbers);\n    for ($i = 0; $i < $n - 1; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $prev\
    \ = -1;\n    foreach ($numbers as $num) {\n        if ($prev == -1) {\n      \
    \      $prev = $num;\n            continue;\n        }\n        if ($num - $prev\
    \ < $threshold) {\n            return true;\n        }\n        $prev = $num;\n\
    \    }\n    return false;\n}\n\n$arr = [1.0, 2.0, 3.0];\nvar_dump(has_close_elements($arr,\
    \ 0.5));\n\n$arr = [1.0, 2.8, 3.0, 4.0, 5.0, 2.0];\nvar_dump(has_close_elements($arr,\
    \ 0.3));\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdqnhok2y.php:34\nStack trace:\n#0 /tmp/tmpdqnhok2y.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdqnhok2y.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $close\
    \ = false;\n    foreach ($numbers as $number) {\n        if ($number < 2 || $number\
    \ > 3) {\n            $close = true;\n        }\n    }\n    return $close;\n}\n\
    function candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2),\
    \ 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02991w3_.php:23\n\
    Stack trace:\n#0 /tmp/tmp02991w3_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp02991w3_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $n =\
    \ count($numbers);\n    for ($i = 0; $i < $n - 1; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n\necho has_close_elements([1.0, 2.0, 3.0], 0.5) ? 'true' : 'false';\n\
    echo PHP_EOL;\necho has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) ?\
    \ 'true' : 'false';\necho PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\ntrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $has_close_elements\
    \ = false;\n  for ($i = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1;\
    \ $j < count($numbers); $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) <\
    \ $threshold) {\n        $has_close_elements = true;\n      }\n    }\n  }\n  return\
    \ $has_close_elements;\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $length\
    \ = count($numbers);\n    for ($i = 0; $i < $length; $i++) {\n        for ($j\
    \ = 0; $j < $length; $j++) {\n            if ($i == $j) {\n                continue;\n\
    \            }\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  if (empty($numbers))\
    \ {\n    return null;\n  }\n\n  for ($i = 0; $i < count($numbers); $i++) {\n \
    \   for ($j = $i + 1; $j < count($numbers); $j++) {\n      if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n        return true;\n      }\n    }\n  }\n\
    \n  return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $length\
    \ = count($numbers);\n    $numbers_sorted = false;\n    while ($numbers_sorted\
    \ == false) {\n        $numbers_sorted = true;\n        for ($i = 0; $i < $length\
    \ - 1; $i++) {\n            if ($numbers[$i] > $numbers[$i + 1]) {\n         \
    \       $temp = $numbers[$i];\n                $numbers[$i] = $numbers[$i + 1];\n\
    \                $numbers[$i + 1] = $temp;\n                $numbers_sorted =\
    \ false;\n            }\n        }\n    }\n    for ($i = 0; $i < $length - 1;\
    \ $i++) {\n        if ($numbers[$i + 1] - $numbers[$i] < $threshold) {\n     \
    \       return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $close_elements\
    \ = false;\n  $number_of_elements = count($numbers);\n  for ($i = 0; $i < $number_of_elements\
    \ - 1; $i++) {\n    for ($j = $i + 1; $j < $number_of_elements; $j++) {\n    \
    \  if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n        $close_elements\
    \ = true;\n      }\n    }\n  }\n  return $close_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $previous\
    \ = 0;\n    $first = true;\n    foreach ($numbers as $number) {\n        if ($first)\
    \ {\n            $first = false;\n        } else {\n            if (abs($number\
    \ - $previous) < $threshold) {\n                return true;\n            }\n\
    \        }\n        $previous = $number;\n    }\n    return false;\n}\n\n$a =\
    \ array(1.0, 2.0, 3.0);\n$threshold = 0.5;\n$b = array(1.0, 2.8, 3.0, 4.0, 5.0,\
    \ 2.0);\n$threshold2 = 0.3;\necho has_close_elements($a, $threshold);\necho \"\
    \\n\";\necho has_close_elements($b, $threshold2);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61rygujo.php:39\n\
    Stack trace:\n#0 /tmp/tmp61rygujo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp61rygujo.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // write\
    \ your code here\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mhu_ss2.php:16\n\
    Stack trace:\n#0 /tmp/tmp4mhu_ss2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4mhu_ss2.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $min_diff\
    \ = PHP_INT_MAX;\n    $numbers_count = count($numbers);\n    for ($i = 0; $i <\
    \ $numbers_count; $i++) {\n        for ($j = $i + 1; $j < $numbers_count; $j++)\
    \ {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff\
    \ < $min_diff) {\n                $min_diff = $diff;\n            }\n        }\n\
    \    }\n    return $min_diff < $threshold;\n}\n\nif (!assert(!has_close_elements([1.0,\
    \ 2.0, 3.0], 0.5))) {\n    print \"Error 1!\\n\";\n}\nif (!assert(has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3))) {\n    print \"Error 2!\\n\";\n}\nif (!assert(!has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.5))) {\n    print \"Error 3!\\n\";\n}\n\nprint \"\
    All tests ok.\\n\";\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): assert(!has_close_elements([1, 2.8, 3, 4, 5, 2], 0.5))\
    \ failed in /tmp/tmpf3spvobv.php on line 28\nError 3!\nAll tests ok.\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  if (count($numbers)\
    \ < 2) {\n    return False;\n  }\n  $min_distance = abs($numbers[0] - $numbers[1]);\n\
    \  for ($i = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      $distance = abs($numbers[$i] - $numbers[$j]);\n      if ($distance\
    \ < $min_distance) {\n        $min_distance = $distance;\n      }\n    }\n  }\n\
    \  return $min_distance < $threshold;\n}\n\nfunction candidate(...$args) {\n \
    \   return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n      \
    \  return true;\n      }\n    }\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $close_elements\
    \ = false;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                $close_elements = true;\n            }\n  \
    \      }\n    }\n    return $close_elements;\n}\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    if (count($numbers)\
    \ == 0) {\n        return false;\n    }\n\n    $sorted_numbers = $numbers;\n \
    \   sort($sorted_numbers);\n\n    for ($i = 0; $i < count($sorted_numbers) - 1;\
    \ $i++) {\n        if ($sorted_numbers[$i + 1] - $sorted_numbers[$i] < $threshold)\
    \ {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $result\
    \ = false;\n  for ($i = 0; $i < count($numbers); $i++) {\n    $num = $numbers[$i];\n\
    \    for ($j = $i + 1; $j < count($numbers); $j++) {\n      $nextNum = $numbers[$j];\n\
    \      if (abs($num - $nextNum) < $threshold) {\n        $result = true;\n   \
    \     break;\n      }\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers);\
    \ $j++) {\n            if ($i != $j) {\n                if (abs($numbers[$i] -\
    \ $numbers[$j]) < $threshold) {\n                    return true;\n          \
    \      }\n            }\n        }\n    }\n    return false;\n}\necho has_close_elements([1.0,\
    \ 2.0, 3.0], 0.5);\necho \"<br>\";\necho has_close_elements([1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0], 0.3);\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $len\
    \ = count($numbers);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i\
    \ + 1; $j < $len; $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) <\
    \ $threshold) {\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}\n\nif (has_close_elements([1.0, 2.0, 3.0], 0.5)) {\n   \
    \ echo \"Test 1 is OK!\\n\";\n} else {\n    echo \"Test 1 is failed!\\n\";\n}\n\
    \nif (has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)) {\n    echo \"\
    Test 2 is OK!\\n\";\n} else {\n    echo \"Test 2 is failed!\\n\";\n}\n\nif (!has_close_elements([1.0,\
    \ 2.0, 3.0], 0.1)) {\n    echo \"Test 3 is OK!\\n\";\n} else {\n    echo \"Test\
    \ 3 is failed!\\n\";\n}\n\nif (!has_close_elements([1.0, 1.1, 1.2, 1.3, 1.4, 1.5],\
    \ 0.2)) {\n    echo \"Test 4 is OK!\\n\";\n} else {\n    echo \"Test 4 is failed!\\\
    n\";\n}\n\nif (!has_close_elements([1.0, 2.0, 3.0, 3.2, 3.4, 3.6], 0.1)) {\n \
    \   echo \"Test 5 is OK!\\n\";\n} else {\n    echo \"Test 5 is failed!\\n\";\n\
    }\n\nif (!has_close_elements([], 0.1)) {\n    echo \"Test 6 is OK!\\n\";\n} else\
    \ {\n    echo \"Test 6 is failed!\\n\";\n}\n\nfunction candidate(...$args) {\n\
    \    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Test 1 is failed!\nTest 2 is OK!\nTest 3 is OK!\nTest 4 is failed!\nTest\
    \ 5 is OK!\nTest 6 is OK!\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers);\
    \ $j++) {\n            if ($i != $j) {\n                if (abs($numbers[$i] -\
    \ $numbers[$j]) < $threshold) {\n                    return true;\n          \
    \      }\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = 0; $j < count($numbers); $j++)\
    \ {\n      if ($i != $j) {\n        if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers);\
    \ $j++) {\n            if ($i != $j) {\n                if (abs($numbers[$i] -\
    \ $numbers[$j]) < $threshold) {\n                    return true;\n          \
    \      }\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // sort\
    \ array with numbers in ascending order\n    sort($numbers);\n    $arr_length\
    \ = count($numbers);\n    for ($i = 0; $i < $arr_length; $i++) {\n        for\
    \ ($j = $i + 1; $j < $arr_length; $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff <= $threshold) {\n                return\
    \ true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $last\
    \ = NULL;\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($last !==\
    \ NULL) {\n            if (abs($numbers[$i] - $last) < $threshold) {\n       \
    \         return True;\n            }\n        }\n        $last = $numbers[$i];\n\
    \    }\n    return False;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpooa_ehwq.php:28\n\
    Stack trace:\n#0 /tmp/tmpooa_ehwq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpooa_ehwq.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // Stub\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4khvunyg.php:18\n\
    Stack trace:\n#0 /tmp/tmp4khvunyg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp4khvunyg.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $i =\
    \ 1;\n    while($i < count($numbers)) {\n        if (abs($numbers[$i] - $numbers[$i\
    \ - 1]) < $threshold) {\n            return true;\n        }\n        $i++;\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6clewurg.php:26\n\
    Stack trace:\n#0 /tmp/tmp6clewurg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6clewurg.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $prev\
    \ = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n        if (abs($numbers[$i]\
    \ - $prev) < $threshold) {\n            return true;\n        }\n        $prev\
    \ = $numbers[$i];\n    }\n    return false;\n}\n\nvar_dump(has_close_elements([1.0,\
    \ 2.0, 3.0], 0.5));\nvar_dump(has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3));\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpmz5olym0.php:28\nStack trace:\n#0 /tmp/tmpmz5olym0.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpmz5olym0.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $n =\
    \ count($numbers);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n\necho has_close_elements([1.0, 2.0, 3.0], 0.5) ? \"True\" : \"False\"\
    ; // False\necho \"\\n\";\necho has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3) ? \"True\" : \"False\"; // True\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $len\
    \ = count($numbers);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i\
    \ + 1; $j < $len; $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) <\
    \ $threshold) {\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    if (count($numbers)\
    \ == 0) {\n        return false;\n    }\n    sort($numbers);\n    for ($i = 0;\
    \ $i < count($numbers) - 1; $i++) {\n        if ($numbers[$i] + $threshold > $numbers[$i\
    \ + 1]) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    function candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2),\
    \ 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = 0; $j < count($numbers); $j++)\
    \ {\n      if ($i != $j) {\n        if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $count\
    \ = count($numbers);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j =\
    \ $i + 1; $j < $count; $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                return true;\n            }\n        }\n  \
    \  }\n    return false;\n}\n\n$a = [1.0, 2.0, 3.0];\n$threshold = 0.5;\necho \"\
    <p>\".has_close_elements($a, $threshold).\"</p>\";\n\n$a = [1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0];\n$threshold = 0.3;\necho \"<p>\".has_close_elements($a, $threshold).\"\
    </p>\";\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <p></p><p>1</p>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers);\
    \ $j++) {\n            if ($i != $j) {\n                if (abs($numbers[$i] -\
    \ $numbers[$j]) < $threshold) {\n                    return true;\n          \
    \      }\n            }\n        }\n    }\n    return false;\n}\n\n$numbers =\
    \ [1.0, 2.0, 3.0];\n$threshold = 0.5;\n\necho has_close_elements($numbers, $threshold);\n\
    function candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2),\
    \ 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $len\
    \ = count($numbers);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i\
    \ + 1; $j < $len; $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) <\
    \ $threshold) {\n                return True;\n            }\n        }\n    }\n\
    \    return False;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $result\
    \ = false;\n    $length = count($numbers);\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        for ($j = 0; $j < $length; $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n                $result = true;\n         \
    \   }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2an59vjw.php:27\n\
    Stack trace:\n#0 /tmp/tmp2an59vjw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2an59vjw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return True;\n            }\n        }\n    }\n    return False;\n\
    }\n\necho has_close_elements([1.0, 2.0, 3.0], 0.5) . \"\\n\";\necho has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) . \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n      \
    \  return true;\n      }\n    }\n  }\n  return false;\n}\n\n$numbers = [1.0, 2.0,\
    \ 3.0];\n$threshold = 0.5;\necho has_close_elements($numbers, $threshold) ? \"\
    True\" : \"False\";\necho \"\\n\";\n\n$numbers = [1.0, 2.8, 3.0, 4.0, 5.0, 2.0];\n\
    $threshold = 0.3;\necho has_close_elements($numbers, $threshold) ? \"True\" :\
    \ \"False\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $result\
    \ = false;\n  $length = count($numbers);\n  for ($i = 0; $i < $length; $i++) {\n\
    \    for ($j = $i + 1; $j < $length; $j++) {\n      if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n        $result = true;\n        break;\n      }\n    }\n \
    \ }\n  return $result;\n}\n\n$numbers = array(1.0, 2.0, 3.0);\n$threshold = 0.5;\n\
    \nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2),\
    \ 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $last_element\
    \ = 0;\n  foreach ($numbers as $element) {\n    if ($last_element - $element <=\
    \ $threshold) {\n      return true;\n    }\n    $last_element = $element;\n  }\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ppcw6bd.php:24\n\
    Stack trace:\n#0 /tmp/tmp2ppcw6bd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2ppcw6bd.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $previous\
    \ = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n        if (abs($numbers[$i]\
    \ - $previous) < $threshold) {\n            return True;\n        }\n        $previous\
    \ = $numbers[$i];\n    }\n    return False;\n}\n\n$a = [1.0, 2.0, 3.0];\n$b =\
    \ [1.0, 2.8, 3.0, 4.0, 5.0, 2.0];\n\necho has_close_elements($a, 0.5) . \"\\n\"\
    ;\necho has_close_elements($b, 0.3) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxtjlfnd.php:32\n\
    Stack trace:\n#0 /tmp/tmpzxtjlfnd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzxtjlfnd.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $has_close_elements\
    \ = false;\n  $numbers_count = count($numbers);\n  for ($i = 0; $i < $numbers_count\
    \ - 1; $i++) {\n    for ($j = $i + 1; $j < $numbers_count; $j++) {\n      if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n        $has_close_elements = true;\n     \
    \   break;\n      }\n    }\n  }\n  return $has_close_elements;\n}\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers);\
    \ $j++) {\n            if ($i != $j) {\n                if (abs($numbers[$i] -\
    \ $numbers[$j]) < $threshold) {\n                    return true;\n          \
    \      }\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $length\
    \ = count($numbers);\n    if ($length < 2) {\n        return false;\n    }\n\n\
    \    $i = 0;\n    while ($i < $length - 1) {\n        $j = $i + 1;\n        while\
    \ ($j < $length) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n                return true;\n            }\n            $j++;\n        }\n\
    \        $i++;\n    }\n    return false;\n}\n\nif (!debug_backtrace()) {\n   \
    \ echo \"\\n\" . has_close_elements([1.0, 2.0, 3.0], 0.5) . \"\\n\";\n    echo\
    \ \"\\n\" . has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) . \"\\n\"\
    ;\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $last\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($last !== null &&\
    \ abs($number - $last) < $threshold) {\n            return true;\n        }\n\
    \        $last = $number;\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tof2moa.php:25\n\
    Stack trace:\n#0 /tmp/tmp7tof2moa.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7tof2moa.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $result\
    \ = FALSE;\n  $size = count($numbers);\n  for ($i = 0; $i < $size; $i++) {\n \
    \   for ($j = $i + 1; $j < $size; $j++) {\n      if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n        $result = TRUE;\n        break;\n      }\n    }\n \
    \ }\n  return $result;\n}\n\n$numbers = [1.0, 2.0, 3.0];\n$threshold = 0.5;\n\
    if (has_close_elements($numbers, $threshold)) {\n  echo 'There are two numbers\
    \ closer to each other than ' . $threshold . ' in the given array.';\n}\nelse\
    \ {\n  echo 'There are no two numbers closer to each other than ' . $threshold\
    \ . ' in the given array.';\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: There are no two numbers closer to each other than 0.5 in the given array.
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $min_diff\
    \ = $threshold + 1;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n            }\n        }\n    }\n    return $min_diff <= $threshold;\n\
    }\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\n$numbers = array(1.0, 2.0, 3.0);\n$threshold = 0.5;\necho has_close_elements($numbers,\
    \ $threshold);\necho \"<br>\";\n\n$numbers = array(1.0, 2.8, 3.0, 4.0, 5.0, 2.0);\n\
    $threshold = 0.3;\necho has_close_elements($numbers, $threshold);\necho \"<br>\"\
    ;\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    sort($numbers);\n\
    \    $hasCloseElement = false;\n    $size = count($numbers);\n    for ($i = 0;\
    \ $i < $size - 1; $i++) {\n        if (abs($numbers[$i] - $numbers[$i + 1]) <\
    \ $threshold) {\n            $hasCloseElement = true;\n            break;\n  \
    \      }\n    }\n    return $hasCloseElement;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if ($i !== $j && abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $min_diff\
    \ = $threshold;\n  for ($i = 0; $i < count($numbers); $i++) {\n    for ($j = $i\
    \ + 1; $j < count($numbers); $j++) {\n      $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \      if ($diff < $min_diff) {\n        $min_diff = $diff;\n      }\n    }\n\
    \  }\n  return $min_diff < $threshold;\n}\n\n$numbers = [1.0, 2.0, 3.0];\n$threshold\
    \ = 0.5;\n$result = has_close_elements($numbers, $threshold);\nvar_dump($result);\n\
    \n$numbers = [1.0, 2.8, 3.0, 4.0, 5.0, 2.0];\n$threshold = 0.3;\n$result = has_close_elements($numbers,\
    \ $threshold);\nvar_dump($result);\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $current_number\
    \ = $numbers[0];\n    $current_number_idx = 0;\n    $closest_number = $numbers[1];\n\
    \    $closest_number_idx = 1;\n    $delta = abs($current_number - $closest_number);\n\
    \    for ($i = 2; $i < count($numbers); $i++) {\n        $current_delta = abs($current_number\
    \ - $numbers[$i]);\n        if ($current_delta < $delta) {\n            $delta\
    \ = $current_delta;\n            $closest_number = $numbers[$i];\n           \
    \ $closest_number_idx = $i;\n        }\n    }\n    return ($delta < $threshold);\n\
    }\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zeegxvs.php:29\n\
    Stack trace:\n#0 /tmp/tmp4zeegxvs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4zeegxvs.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  // Assume\
    \ that elements are not close, unless we find one\n  $has_close_elements = False;\n\
    \  for ($i = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      $diff = abs($numbers[$i] - $numbers[$j]);\n      if ($diff <\
    \ $threshold) {\n        $has_close_elements = True;\n      }\n    }\n  }\n  return\
    \ $has_close_elements;\n}\n\n$numbers = [1.0, 2.0, 3.0];\n$threshold = 0.5;\n\n\
    echo \"has_close_elements? \" . has_close_elements($numbers, $threshold) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "has_close_elements? \n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    if (count($numbers)\
    \ == 1) {\n        return false;\n    }\n\n    $prev_number = $numbers[0];\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if (abs($numbers[$i] -\
    \ $prev_number) < $threshold) {\n            return true;\n        }\n       \
    \ $prev_number = $numbers[$i];\n    }\n    return false;\n}\n\nclass UnitTest\
    \ {\n    public function run() {\n        $passed = 0;\n        $failed = 0;\n\
    \        $tests = $this->get_tests();\n        foreach ($tests as $test) {\n \
    \           $f = $test['f'];\n            $params = $test['params'];\n       \
    \     $expected = $test['expected'];\n            $result = call_user_func_array($f,\
    \ $params);\n            if ($result == $expected) {\n                $passed++;\n\
    \            } else {\n                $failed++;\n                echo \"Test\
    \ \" . $test['name'] . \" failed.\\n\";\n                echo \"Expected: \" .\
    \ $expected . \"\\n\";\n                echo \"Actual: \" . $result . \"\\n\"\
    ;\n            }\n        }\n        echo \"Passed: \" . $passed . \"\\n\";\n\
    \        echo \"Failed: \" . $failed . \"\\n\";\n    }\n\n    public function\
    \ get_tests() {\n        return [\n            [\n                'name' => 'Test\
    \ 1',\n                'f' => 'has_close_elements',\n                'params'\
    \ => [[1.0, 2.0, 3.0], 0.5],\n                'expected' => false\n          \
    \  ],\n            [\n                'name' => 'Test 2',\n                'f'\
    \ => 'has_close_elements',\n                'params' => [[1.0, 2.8, 3.0, 4.0,\
    \ 5.0, 2.0], 0.3],\n                'expected' => true\n            ],\n     \
    \       [\n                'name' => 'Test 3',\n                'f' => 'has_close_elements',\n\
    \                'params' => [[1.0, 2.\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpntuottgy.php on line 64\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $i =\
    \ 0;\n    $j = 1;\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n      \
    \  for ($j = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $closest\
    \ = 0;\n  foreach ($numbers as $number) {\n    if (abs($number - $closest) < $threshold)\
    \ {\n      return true;\n    }\n    $closest = $number;\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx6yoelsq.php:26\n\
    Stack trace:\n#0 /tmp/tmpx6yoelsq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx6yoelsq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $min\
    \ = $threshold;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $dist = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($dist < $min) {\n                $min = $dist;\n\
    \            }\n        }\n    }\n    return $min < $threshold;\n}\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $length\
    \ = count($numbers);\n  for ($i = 0; $i < $length; $i++) {\n    for ($j = $i +\
    \ 1; $j < $length; $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold)\
    \ {\n        return True;\n      }\n    }\n  }\n  return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    // https://stackoverflow.com/questions/8995310/checking-if-two-values-in-an-array-are-within-a-certain-range\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $threshold) {\n                return True;\n            }\n        }\n  \
    \  }\n    return False;\n}\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $prev\
    \ = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n        if (abs($numbers[$i]\
    \ - $prev) < $threshold) {\n            return true;\n        }\n        $prev\
    \ = $numbers[$i];\n    }\n    return false;\n}\n$list = [1.0, 2.0, 3.0];\n$threshold\
    \ = 0.5;\necho has_close_elements($list, $threshold) . PHP_EOL;\n$list = [1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0];\n$threshold = 0.3;\necho has_close_elements($list,\
    \ $threshold) . PHP_EOL;\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp745av4lu.php:31\n\
    Stack trace:\n#0 /tmp/tmp745av4lu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp745av4lu.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    foreach\
    \ ($numbers as $index => $number) {\n        $distance_to_next = $number - $numbers[$index\
    \ + 1];\n        if (abs($distance_to_next) < $threshold) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\necho has_close_elements([1.0,\
    \ 2.0, 3.0], 0.5) ? \"True\\n\" : \"False\\n\";\necho has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) ? \"True\\n\" : \"False\\n\";\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vsm8i6l.php:27\n\
    Stack trace:\n#0 /tmp/tmp_vsm8i6l.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_vsm8i6l.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $close\
    \ = false;\n    $length = count($numbers);\n    for ($i = 0; $i < $length - 1;\
    \ $i++) {\n        for ($j = $i + 1; $j < $length; $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n                $close = true;\n          \
    \  }\n        }\n    }\n    return $close;\n}\n\necho has_close_elements([1.0,\
    \ 2.0, 3.0], 0.5) ? 'True' : 'False';\necho PHP_EOL;\necho has_close_elements([1.0,\
    \ 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) ? 'True' : 'False';\necho PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  $current_num\
    \ = 0;\n  $length = count($numbers);\n  for ($i = 0; $i < $length; $i++) {\n \
    \   for ($j = $i + 1; $j < $length; $j++) {\n      $current_num = abs($numbers[$i]\
    \ - $numbers[$j]);\n      if ($current_num < $threshold) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n$test1 = [1.0, 2.0, 3.0];\n$test2 =\
    \ [1.0, 2.8, 3.0, 4.0, 5.0, 2.0];\n$test3 = [1.0, 2.0, 3.0, 4.0, 5.0, 6.0];\n\
    $test4 = [1.0, 2.0, 3.0, 4.0, 5.0, 2.0];\n\necho \"test1: \" . has_close_elements($test1,\
    \ 0.5) . \"<br>\";\necho \"test2: \" . has_close_elements($test2, 0.3) . \"<br>\"\
    ;\necho \"test3: \" . has_close_elements($test3, 0.5) . \"<br>\";\necho \"test4:\
    \ \" . has_close_elements($test4, 0.5) . \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'test1: <br>test2: 1<br>test3: <br>test4: 1<br>'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $last\
    \ = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n        if (abs($last\
    \ - $numbers[$i]) < $threshold) {\n            return True;\n        }\n     \
    \   $last = $numbers[$i];\n    }\n    return False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpntaymb_2.php:26\n\
    Stack trace:\n#0 /tmp/tmpntaymb_2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpntaymb_2.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n  for ($i\
    \ = 0; $i < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n      if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n      \
    \  return true;\n      }\n    }\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return has_close_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $numbers_count\
    \ = count($numbers);\n    for ($i = 0; $i < $numbers_count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $numbers_count; $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $threshold) {\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ has_close_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    $n =\
    \ count($numbers);\n    $differences = array();\n    for ($i = 0; $i < $n - 1;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            array_push($differences,\
    \ abs($numbers[$i] - $numbers[$j]));\n        }\n    }\n    $min_difference =\
    \ min($differences);\n    return $min_difference < $threshold;\n}\n\nfunction\
    \ candidate(...$args) {\n    return has_close_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Check if in given list of numbers, are any two numbers closer\
    \ to each other than\n// given threshold.\n// >>> has_close_elements([1.0, 2.0,\
    \ 3.0], 0.5)\n// False\n// >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0],\
    \ 0.3)\n// True\nfunction has_close_elements($numbers, $threshold) {\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return has_close_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2), 0.3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0), 0.8) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1,\
    \ 5.1), 0.5) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

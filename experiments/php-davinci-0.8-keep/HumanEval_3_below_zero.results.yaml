name: HumanEval_3_below_zero
language: php
results:
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return True;\n    \
    \    }\n    }\n    return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  // FILL THIS IN\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6g0vkoz_.php:18\n\
    Stack trace:\n#0 /tmp/tmp6g0vkoz_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6g0vkoz_.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\necho below_zero([1, 2, 3]) ? 'true' : 'false';\n\
    echo PHP_EOL;\necho below_zero([1, 2, -4, 5]) ? 'true' : 'false';\necho PHP_EOL;\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\ntrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $op_length = count($operations);\n    for ($i = 0; $i < $op_length; $i++)\
    \ {\n        if ($operations[$i] < 0) {\n            return True;\n        }\n\
    \    }\n    return False;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddzugk49.php:24\n\
    Stack trace:\n#0 /tmp/tmpddzugk49.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpddzugk49.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $num) {\n        $balance\
    \ += $num;\n        if ($balance < 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $sum = 0;\n  foreach ($operations as $value) {\n    $sum += $value;\n \
    \   if ($sum < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5,\
    \ -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $value) {\n        $balance\
    \ += $value;\n        if ($balance < 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $total = 0;\n    foreach ($operations as $op) {\n        $total += $op;\n\
    \        if ($total < 0) {\n            return True;\n        }\n    }\n    return\
    \ False;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\necho below_zero([1, 2, 3]);\necho below_zero([1,\
    \ 2, -4, 5]);\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $op) {\n        $balance +=\
    \ $op;\n        if ($balance < 0) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $accum = 0;\n  foreach ($operations as $value) {\n    $accum += $value;\n\
    \    if ($accum < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhn4dpc5.php:18\n\
    Stack trace:\n#0 /tmp/tmpyhn4dpc5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyhn4dpc5.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $op) {\n    $balance += $op;\n\
    \    if ($balance < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\
    \nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $item) {\n\t\t$balance += $item;\n\
    \t\tif ($balance < 0) {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn False;\n}\n\n\
    echo \"You're given a list of deposit and withdrawal operations on a bank account\
    \ that starts with\\n\";\necho \"zero balance. Your task is to detect if at any\
    \ point the balance of account fallls below zero, and\\n\";\necho \"at that point\
    \ function should return True. Otherwise it should return False.\\n\";\necho \"\
    >>> below_zero([1, 2, 3])\\n\";\n$operations = [1, 2, 3];\nvar_dump(below_zero($operations));\n\
    echo \">>> below_zero([1, 2, -4, 5])\\n\";\n$operations = [1, 2, -4, 5];\nvar_dump(below_zero($operations));\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "You're given a list of deposit and withdrawal operations on a bank account\
    \ that starts with\nzero balance. Your task is to detect if at any point the balance\
    \ of account fallls below zero, and\nat that point function should return True.\
    \ Otherwise it should return False.\n>>> below_zero([1, 2, 3])\nbool(false)\n\
    >>> below_zero([1, 2, -4, 5])\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $operations = array_sum($operations);\n  if ($operations < 0) {\n    return\
    \ True;\n  } else {\n    return False;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqxxw5kxv.php:25\n\
    Stack trace:\n#0 /tmp/tmpqxxw5kxv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqxxw5kxv.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $op) {\n        $balance +=\
    \ $op;\n        if ($balance < 0) return True;\n    }\n    return False;\n}\n\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n  \
    \      $balance += $operations[$i];\n        if ($balance < 0) {\n           \
    \ return true;\n        }\n    }\n    return false;\n}\n\necho below_zero([1,\
    \ 2, 3]) . PHP_EOL;\necho below_zero([1, 2, -4, 5]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\n$operations = [5, 2, -4, 5];\nprint_r(below_zero($operations));\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $sum = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n      \
    \  $sum += $operations[$i];\n        if ($sum < 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $is_below_zero = FALSE;\n    $balance = 0;\n    foreach ($operations\
    \ as $operation) {\n        $balance += $operation;\n        if ($balance < 0)\
    \ {\n            $is_below_zero = TRUE;\n            break;\n        }\n    }\n\
    \    return $is_below_zero;\n}\n\n$operations = [1, 2, 3];\n$operations2 = [1,\
    \ 2, -4, 5];\n\necho below_zero($operations);\necho below_zero($operations2);\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  for ($i = 0; $i < count($operations); $i++) {\n    $balance\
    \ += $operations[$i];\n    if ($balance < 0) {\n      return true;\n    }\n  }\n\
    \  return false;\n}\necho below_zero([1, 2, 3]) . \"\\n\";\necho below_zero([1,\
    \ 2, -4, 5]) . \"\\n\";\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  for ($i = 0; $i < count($operations); $i++) {\n    $balance\
    \ += $operations[$i];\n    if ($balance < 0) {\n      return true;\n    }\n  }\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $sum = 0;\n    foreach ($operations as $value) {\n        $sum += $value;\n\
    \        if ($sum < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$currentBalance = 0;\n\tforeach ($operations as $operation) {\n\t\t$currentBalance\
    \ += $operation;\n\t\tif ($currentBalance < 0) {\n\t\t\treturn true;\n\t\t}\n\t\
    }\n\treturn false;\n}\necho below_zero([1, 2, 3]);\necho below_zero([1, 2, -4,\
    \ 5]);\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $value) {\n\t\t$balance += $value;\n\
    \t\tif ($balance < 0) {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn False;\n}\n\
    echo below_zero([1, 2, 3]) . \"\\n\";\necho below_zero([1, 2, -4, 5]) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\necho below_zero([1, 2, 3]) . \"\\n\";\n\
    echo below_zero([1, 2, -4, 5]) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n  \
    \      $balance += $operations[$i];\n        if ($balance < 0) {\n           \
    \ return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\n$operations1 = [1, 2, 3];\n$operations2 = [1, 2, -4, 5];\n\necho\
    \ '<pre>';\nvar_dump(below_zero($operations1));\nvar_dump(below_zero($operations2));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>bool(false)\nbool(true)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n  \
    \      $balance += $operations[$i];\n        if ($balance < 0) {\n           \
    \ return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $sum = 0;\n    foreach ($operations as $operation) {\n        $sum +=\
    \ $operation;\n        if ($sum < 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\n$operations = [1, 2, 3];\nif (below_zero($operations))\
    \ {\n    echo \"below_zero\\n\";\n} else {\n    echo \"not below_zero\\n\";\n\
    }\n\n$operations = [1, 2, -4, 5];\nif (below_zero($operations)) {\n    echo \"\
    below_zero\\n\";\n} else {\n    echo \"not below_zero\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "not below_zero\nbelow_zero\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $op) {\n\t\t$balance += $op;\n\
    \t\tif ($balance < 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\
    $o = array(1, 2, 3);\nassert(below_zero($o) == false);\n$o = array(1, 2, -4, 5);\n\
    assert(below_zero($o) == true);\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    return false;\n}\n\necho below_zero([1, 2, 3]) . PHP_EOL;\necho below_zero([1,\
    \ 2, -4, 5]) . PHP_EOL;\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph474l4ss.php:22\n\
    Stack trace:\n#0 /tmp/tmph474l4ss.php(28): test()\n#1 {main}\n  thrown in /tmp/tmph474l4ss.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $result = 0;\n  foreach ($operations as $value) {\n    $result += $value;\n\
    \    if ($result < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\n\
    echo below_zero([1, 2, 3]);\necho \"\\n\";\necho below_zero([1, 2, -4, 5]);\n\
    echo \"\\n\";\necho below_zero([-1, 2, -4, 5]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $value) {\n        $balance\
    \ += $value;\n        if ($balance < 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\nprint_r(below_zero([1, 2, 3]));\nprint_r(below_zero([1, 2, -4, 5]));\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n  \
    \      $balance += $operations[$i];\n        if ($balance < 0) {\n           \
    \ return true;\n        }\n    }\n    return false;\n}\necho \"below_zero() is\
    \ \" . (below_zero([1, 2, 3]) ? \"True\" : \"False\") . \"<br>\";\necho \"below_zero()\
    \ is \" . (below_zero([1, 2, -4, 5]) ? \"True\" : \"False\") . \"<br>\";\necho\
    \ \"below_zero() is \" . (below_zero([1, 2, -1, 5]) ? \"True\" : \"False\") .\
    \ \"<br>\";\necho \"below_zero() is \" . (below_zero([-1, 2, -1, 5]) ? \"True\"\
    \ : \"False\") . \"<br>\";\necho \"below_zero() is \" . (below_zero([-1, 2, 0,\
    \ 5]) ? \"True\" : \"False\") . \"<br>\";\necho \"below_zero() is \" . (below_zero([-1,\
    \ 2, 0, -5]) ? \"True\" : \"False\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: below_zero() is False<br>below_zero() is True<br>below_zero() is False<br>below_zero()
    is True<br>below_zero() is True<br>below_zero() is True<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $n = count($operations);\n  $current_balance = 0;\n  for ($i = 0; $i <\
    \ $n; $i++) {\n    $current_balance += $operations[$i];\n    if ($current_balance\
    \ < 0) {\n      return True;\n    }\n  }\n  return False;\n}\n\necho below_zero([1,\
    \ 2, 3]) . PHP_EOL;\necho below_zero([1, 2, -4, 5]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $operation) {\n\t\t$balance +=\
    \ $operation;\n\t\tif ($balance < 0) {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn\
    \ False;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return True;\n    \
    \    }\n    }\n    return False;\n}\n\n$tests = [[1, 2, 3],\n          [1, 2,\
    \ -4, 5]];\n\nforeach ($tests as $test) {\n    print_r(below_zero($test));\n \
    \   echo \"\\n\";\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $sum = 0;\n  foreach ($operations as $operation) {\n    $sum += $operation;\n\
    \    if ($sum < 0) {\n      return True;\n    }\n  }\n  return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5,\
    \ -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $arrayOperations = $operations;\n    $result = array_reduce($arrayOperations,\
    \ function ($carry, $item) {\n        return $carry + $item;\n    });\n    return\
    \ $result < 0;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78quqyo7.php:24\n\
    Stack trace:\n#0 /tmp/tmp78quqyo7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp78quqyo7.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\n$test_data = [\n  [1, 2, 3],\n  [1, 2, -4, 5],\n  [],\n  [1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1,\nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmcynopms.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return True;\n    \
    \    }\n    }\n    return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nprint_r(below_zero([1, 2, 3]));\nprint_r(below_zero([1,\
    \ 2, -4, 5]));\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  // Your code goes here\n}\n\n$tests = [[[1, 2, 3], FALSE], [[1, 2, -4,\
    \ 5], TRUE]];\n\nforeach ($tests as [$operations, $expected]) {\n  if (below_zero($operations)\
    \ !== $expected) {\n    echo \"Test failed! Input: \".json_encode($operations).\"\
    \\n\";\n  }\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Test failed! Input: [1,2,3]\nTest failed! Input: [1,2,-4,5]\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpp8tkek50.php:25\nStack trace:\n\
    #0 /tmp/tmpp8tkek50.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpp8tkek50.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $total = 0;\n  foreach ($operations as $operation) {\n    $total += $operation;\n\
    \    if ($total < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\n\
    print_r(below_zero([1, 2, 3]));\nprint_r(below_zero([1, 2, -4, 5]));\nfunction\
    \ candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5,\
    \ -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  for ($i = 0; $i < count($operations); $i++) {\n    $balance\
    \ += $operations[$i];\n    if ($balance < 0) {\n      return true;\n    }\n  }\n\
    \  return false;\n}\necho below_zero([1, 2, 3]) . PHP_EOL;\necho below_zero([1,\
    \ 2, -4, 5]) . PHP_EOL;\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    if (in_array(-1, $operations)) {\n        return True;\n    } else {\n\
    \        return False;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqafbmopb.php:24\n\
    Stack trace:\n#0 /tmp/tmpqafbmopb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqafbmopb.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $op) {\n        $balance +=\
    \ $op;\n        if ($balance < 0) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\n$test_cases = [[1, 2, 3], [1, 2, -4, 5]];\n\nforeach ($test_cases\
    \ as $index => $test_case) {\n  $result = below_zero($test_case);\n  if ($result)\
    \ {\n    echo \"Test case #{$index} passed\\n\";\n  } else {\n    echo \"Test\
    \ case #{$index} failed\\n\";\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Test case #0 failed\nTest case #1 passed\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $sum = 0;\n    foreach ($operations as $number) {\n        $sum += $number;\n\
    \        if ($sum < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n  \
    \      $balance += $operations[$i];\n        if ($balance < 0) {\n           \
    \ return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $counter = 0;\n    foreach ($operations as $operation) {\n        $counter\
    \ += $operation;\n        if ($counter < 0) {\n            return True;\n    \
    \    }\n    }\n    return False;\n}\necho \"below_zero\\n\";\nassert(below_zero([1,\
    \ 2, 3]) == False);\nassert(below_zero([1, 2, -4, 5]) == True);\nassert(below_zero([1,\
    \ -1, 3]) == True);\nassert(below_zero([1, -1, 3, -4]) == True);\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "below_zero\n\nWarning: assert(): assert(below_zero([1, -1, 3]) == True)\
    \ failed in /tmp/tmpdr7n1wb1.php on line 22\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $sum = 0;\n  foreach ($operations as $operation) {\n    $sum += $operation;\n\
    \    if ($sum < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\necho\
    \ 'Exercise 1' . PHP_EOL;\nvar_dump(below_zero([1, 2, 3]));\nvar_dump(below_zero([1,\
    \ 2, -4, 5]));\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Exercise 1\nbool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $currentBalance = 0;\n    foreach ($operations as $operation) {\n   \
    \     $currentBalance += $operation;\n        if ($currentBalance < 0) {\n   \
    \         return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $account = 0;\n    foreach ($operations as $operation) {\n        $account\
    \ += $operation;\n        if ($account < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1oc9m1w.php:18\n\
    Stack trace:\n#0 /tmp/tmpq1oc9m1w.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq1oc9m1w.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptamrp47d.php:18\n\
    Stack trace:\n#0 /tmp/tmptamrp47d.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptamrp47d.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\necho below_zero([1, 2, 3]) . \"\\n\";\necho below_zero([1, 2, -4,\
    \ 5]) . \"\\n\";\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n  \
    \      $balance += $operations[$i];\n        if ($balance < 0) {\n           \
    \ return True;\n        }\n    }\n    return False;\n}\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $account_balance = 0;\n  for ($i = 0; $i < count($operations); $i++) {\n\
    \    $account_balance += $operations[$i];\n    if ($account_balance < 0) {\n \
    \     return true;\n    }\n  }\n  return false;\n}\nprint below_zero([1, 2, 3])\
    \ . \"\\n\";\nprint below_zero([1, 2, -4, 5]) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $operation) {\n\t\t$balance +=\
    \ $operation;\n\t\tif ($balance < 0) {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn\
    \ False;\n}\necho 'below_zero([1, 2, 3]) = ' . (below_zero([1, 2, 3]) ? 'True'\
    \ : 'False') . \"\\n\";\necho 'below_zero([1, 2, -4, 5]) = ' . (below_zero([1,\
    \ 2, -4, 5]) ? 'True' : 'False') . \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "below_zero([1, 2, 3]) = False\nbelow_zero([1, 2, -4, 5]) = True\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return True;\n    \
    \    }\n    }\n    return False;\n}\n\nassert(False == below_zero([1, 2, 3]));\n\
    assert(True == below_zero([1, 2, -4, 5]));\nassert(True == below_zero([-1, -2,\
    \ -3]));\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) return true;\n    }\n    return false;\n\
    }\n\necho below_zero([1, 2, 3]);\necho below_zero([1, 2, -4, 5]);\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $tot = 0;\n    foreach ($operations as $op) {\n        $tot += $op;\n\
    \        if ($tot < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$array = array();\n\t$balance = 0;\n\tforeach ($operations as $item) {\n\
    \t\t$balance += $item;\n\t\tif ($balance < 0) {\n\t\t\treturn true;\n\t\t}\n\t\
    }\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $sum = 0;\n  for ($i = 0; $i < count($operations); $i++) {\n    $sum +=\
    \ $operations[$i];\n    if ($sum < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\nassert(below_zero([1, 2, 3]) === false);\nassert(below_zero([1,\
    \ 2, -4, 5]) === true);\nassert(below_zero([1, 1, 1, 1, 1, -10]) === true);\n\
    assert(below_zero([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) === false);\nassert(below_zero([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplwdlc648.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nvar_dump(below_zero([1, 2, 3]));\nvar_dump(below_zero([1,\
    \ 2, -4, 5]));\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\necho below_zero([1, 2, 3]) . \"\\n\";\necho\
    \ below_zero([1, 2, -4, 5]) . \"\\n\";\necho below_zero([-5, 2, -4, 5]) . \"\\\
    n\";\necho below_zero([1, 2, -4, -5]) . \"\\n\";\necho below_zero([1, 2, -4, -5,\
    \ 2, -1, -6, -1, 3, -6, -2, -1, -7, -6, -1, -8, -1, 1, 4, -6, -8, -1, -9, -6,\
    \ -2, -1, -7, -6, -2, -10, -3, -1, -5, -1, -10, -6, -5, -1, -11, -4, -4, -1, -7,\
    \ -6, -5, -1, -11, -6, -5, -4, -4, -1, -8, -4, -4, -1, -12, -4, -4, -5, -1, -5,\
    \ -3, -5, -1, -13, -6, -5, -4, -5, -1, -7, -6, -5, -1, -14, -6, -5, -3, -1, -13,\
    \ -6, -6, -2, -1, -14, -6, -6, -2, -1, -15, -1, -6, -1, -8, -1, -16, -2, -2, -1,\
    \ -13, -6, -6, -1, -11, -2, -2, -1, -9, -6, -6, -1, -11, -4, -4, -1, -17, -4,\
    \ -4, -1, -9, -2, -2, -1, -14, -5, -5, -1\nfunction candidate(...$args) {\n  \
    \  return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpb5ugr4ri.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $operations = array_reverse($operations);\n    $balance = 0;\n    foreach\
    \ ($operations as $operation) {\n        $balance += $operation;\n        if ($balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction\
    \ candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5,\
    \ -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcikhjp9u.php:26\n\
    Stack trace:\n#0 /tmp/tmpcikhjp9u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcikhjp9u.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $account = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n  \
    \      $account += $operations[$i];\n        if ($account < 0) {\n           \
    \ return True;\n        }\n    }\n    return False;\n}\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $acc = 0;\n  foreach ($operations as $operation) {\n    $acc += $operation;\n\
    \    if ($acc < 0) {\n      return True;\n    }\n  }\n  return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5,\
    \ -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $total = 0;\n    foreach ($operations as $operation) {\n        $total\
    \ += $operation;\n        if ($total < 0) {\n            return true;\n      \
    \  }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $sum = 0;\n  foreach ($operations as $operation) {\n    $sum += $operation;\n\
    \    if ($sum < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5,\
    \ -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\necho below_zero([1, 2, 3]);\necho below_zero([1,\
    \ 2, -4, 5]);\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $op) {\n    $balance += $op;\n\
    \    if ($balance < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\
    \nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $sum = 0;\n    foreach ($operations as $operation) {\n        $sum +=\
    \ $operation;\n        if ($sum < 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$sum = 0;\n\tforeach ($operations as $operation) {\n\t\t$sum += $operation;\n\
    \t\tif ($sum < 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5,\
    \ -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $op) {\n    $balance += $op;\n\
    \    if ($balance < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\
    \nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $operation) {\n\t\t$balance +=\
    \ $operation;\n\t\tif ($balance < 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $v) {\n\t\t$balance += $v;\n\t\
    \tif ($balance < 0) return true;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\n\necho below_zero([1, 2, 3]);\necho below_zero([1, 2, -4, 5]);\n\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8toqjjnt.php:18\n\
    Stack trace:\n#0 /tmp/tmp8toqjjnt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8toqjjnt.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$acc = 0;\n\tforeach ($operations as $op) {\n\t\t$acc += $op;\n\t\tif ($acc\
    \ < 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $sum = 0;\n  foreach ($operations as $operation) {\n    $sum += $operation;\n\
    \    if ($sum < 0) {\n      return True;\n    }\n  }\n  return False;\n}\nfunction\
    \ candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5,\
    \ -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $s = 0;\n  foreach ($operations as $operation) {\n    $s += $operation;\n\
    \    if ($s < 0) {\n      return True;\n    }\n  }\n  return False;\n}\n\nassert(below_zero([1,\
    \ 2, 3]) === False);\nassert(below_zero([1, 2, -4, 5]) === True);\nassert(below_zero([-1,\
    \ -2, -3]) === True);\nassert(below_zero([-1, 2, -3]) === True);\nassert(below_zero([])\
    \ === False);\n\n$numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\nfunction candidate(...$args) {\n\
    \    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  // Your code here\n  $balance = 0;\n  foreach ($operations as $key => $value)\
    \ {\n    $balance += $value;\n    if ($balance < 0) {\n      return true;\n  \
    \  }\n  }\n  return false;\n}\n\nif (below_zero([1, 2, 3]) === false) {\n  echo\
    \ \"Test passed\\n\";\n} else {\n  echo \"Test Failed\\n\";\n}\n\nif (below_zero([1,\
    \ 2, -4, 5]) === true) {\n  echo \"Test passed\\n\";\n} else {\n  echo \"Test\
    \ Failed\\n\";\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Test passed\nTest passed\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $sum = 0;\n    foreach ($operations as $operation) {\n        $sum +=\
    \ $operation;\n        if ($sum < 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $operation) {\n\t\t$balance +=\
    \ $operation;\n\t\tif ($balance < 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $account_balance = 0;\n    foreach ($operations as $operation) {\n  \
    \      $account_balance += $operation;\n        if ($account_balance < 0) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5,\
    \ -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $sum = 0;\n    foreach ($operations as $operation) {\n        $sum +=\
    \ $operation;\n        if ($sum < 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\n$operations = [1, 2, 3];\n$operations1 = [1, 2,\
    \ -4, 5];\necho below_zero($operations) . \"\\n\";\necho below_zero($operations1)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $len = count($operations);\n  $i = 0;\n  $balance = 0;\n  while ($i < $len)\
    \ {\n    $balance += $operations[$i];\n    if ($balance < 0) {\n      return True;\n\
    \    }\n    $i++;\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n\
    \    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  for ($i = 0; $i < count($operations); $i++) {\n    $balance\
    \ += $operations[$i];\n    if ($balance < 0) {\n      return true;\n    }\n  }\n\
    \  return false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\n\nprint below_zero([1, 2, 3]) . \"\\n\";\nprint below_zero([1, 2,\
    \ -4, 5]) . \"\\n\";\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $sum = 0;\n  for ($i = 0; $i < count($operations); $i++) {\n    $sum +=\
    \ $operations[$i];\n    if ($sum < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\n\necho below_zero([1, 2, 3]);\necho \"<br>\";\necho below_zero([1,\
    \ 2, -4, 5]);\necho \"<br>\";\necho below_zero([1, 2, -4, 5, -1]);\necho \"<br>\"\
    ;\necho below_zero([1, 2, -4, 5, -1, -2]);\necho \"<br>\";\necho below_zero([1,\
    \ 2, -4, 5, -1, -2, 1]);\necho \"<br>\";\necho below_zero([1, 2, -4, 5, -1, -2,\
    \ 1, -3]);\necho \"<br>\";\necho below_zero([1, 2, -4, 5, -1, -2, 1, -3, 5]);\n\
    echo \"<br>\";\necho below_zero([1, 2, -4, 5, -1, -2, 1, -3, 5, -6]);\necho \"\
    <br>\";\necho below_zero([1, 2, -4, 5, -1, -2, 1, -3, 5, -6, -10]);\necho \"<br>\"\
    ;\necho below_zero([1, 2, -4, 5, -1, -2, 1, -3, 5, -6, -10, 4]);\necho \"<br>\"\
    ;\necho below_zero([1, 2, -4, 5, -1, -2, 1, -3, 5, -6, -10, 4, 6]);\necho \"<br>\"\
    ;\necho below_zero([1, 2, -4, 5, -1, -2, 1, -3, 5, -6, -10, 4, 6, 2]);\necho \"\
    <br>\";\necho below_zero([1, 2, -4, 5, -1, -2, 1, -3, 5, -6, -10, 4, 6, 2, -7]);\n\
    echo \"<br>\";\necho\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp09c4l8ju.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $temp = 0;\n    foreach ($operations as $operation) {\n        $temp\
    \ += $operation;\n        if ($temp < 0) {\n            return True;\n       \
    \ }\n    }\n    return False;\n}\nprint(below_zero([1, 2, 3])) . \"\\n\";\nprint(below_zero([1,\
    \ 2, -4, 5])) . \"\\n\";\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $account = 0;\n  for ($i = 0; $i < count($operations); $i++) {\n    $account\
    \ += $operations[$i];\n    if ($account < 0) {\n      return True;\n    }\n  }\n\
    \  return False;\n}\necho below_zero([1, 2, 3]);\necho \"<br>\";\necho below_zero([1,\
    \ 2, -4, 5]);\necho \"<br>\";\necho below_zero([1, 2, -4, 5, 4, -10]);\necho \"\
    <br>\";\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $current = 0;\n    foreach ($operations as $operation) {\n        $current\
    \ += $operation;\n        if ($current < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n$op = [1, 2, 3];\n$op2 = [1, 2, -4, 5];\n\
    var_dump(below_zero($op));\nvar_dump(below_zero($op2));\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    return in_array(-1, array_map(function($a) { return $a < 0 ? -1 : 1;\
    \ }, $operations));\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpftknacr1.php:19\n\
    Stack trace:\n#0 /tmp/tmpftknacr1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpftknacr1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\n\nvar_dump(below_zero([1, 2, 3]));\nvar_dump(below_zero([1, 2, -4,\
    \ 5]));\nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\nprint_r(below_zero([1, 2, 3]));\nprint_r(below_zero([1, 2, -4, 5]));\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return True;\n    \
    \    }\n    }\n    return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$amount = 0;\n\tforeach ($operations as $operation) {\n\t\t$amount += $operation;\n\
    \t\tif ($amount < 0) {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn False;\n}\nvar_dump(below_zero([1,\
    \ 2, 3]));\nvar_dump(below_zero([1, 2, -4, 5]));\nvar_dump(below_zero([-1, -2,\
    \ -3]));\nvar_dump(below_zero([]));\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\nbool(true)\nbool(false)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $bal = 0;\n    foreach ($operations as $value) {\n        $bal += $value;\n\
    \        if ($bal < 0) return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $op) {\n        $balance +=\
    \ $op;\n        if ($balance < 0) {\n            return True;\n        }\n   \
    \ }\n    return False;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\n\nprint(below_zero([1, 2, 3]));\nprint(\"\\n\");\nprint(below_zero([1,\
    \ 2, -4, 5]));\nprint(\"\\n\");\nprint(below_zero([1, 2, -4, 5, 5, 5, -5, -10,\
    \ 8, 8, 9, 8, -8, 8, -8, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10,\nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3p5cdrf9.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return True;\n    \
    \    }\n    }\n    return False;\n}\n\nvar_dump(below_zero([1, 2, 3]));\nvar_dump(below_zero([1,\
    \ 2, -4, 5]));\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $value) {\n    $balance += $value;\n\
    \    if ($balance < 0) {\n      return True;\n    }\n  }\n  return False;\n}\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n  \
    \      $balance += $operations[$i];\n        if ($balance < 0) {\n           \
    \ return true;\n        }\n    }\n    return false;\n}\n\nprint_r(below_zero([1,\
    \ 2, 3]));\necho \"\\n\";\nprint_r(below_zero([1, 2, -4, 5]));\necho \"\\n\";\n\
    \nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$current_balance = 0;\n\tforeach ($operations as $operation) {\n\t\t$current_balance\
    \ += $operation;\n\t\tif ($current_balance < 0) {\n\t\t\treturn true;\n\t\t}\n\
    \t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    if (!is_array($operations)) {\n        return false;\n    }\n    $balance\
    \ = 0;\n    foreach ($operations as $value) {\n        $balance += $value;\n \
    \       if ($balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\necho '<pre>';\nvar_dump(below_zero([1, 2, 3]));\nvar_dump(below_zero([1,\
    \ 2, -4, 5]));\nvar_dump(below_zero(1));\nvar_dump(below_zero(null));\nvar_dump(below_zero('Test'));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>bool(false)\nbool(true)\nbool(false)\nbool(false)\nbool(false)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $amount) {\n\t\t$balance += $amount;\n\
    \t\tif ($balance < 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\
    echo below_zero([1, 2, 3]);\necho below_zero([1, 2, -4, 5]);\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz22tpvp8.php:17\n\
    Stack trace:\n#0 /tmp/tmpz22tpvp8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpz22tpvp8.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $key => $value) {\n      \
    \  $balance += $value;\n        if ($balance < 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $op) {\n\t\t$balance += $op;\n\
    \t\tif ($balance < 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n  \
    \      $balance += $operations[$i];\n        if ($balance < 0) {\n           \
    \ return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$i = 0;\n\t$balance = 0;\n\tforeach ($operations as $operation) {\n\t\t\
    $balance += $operation;\n\t\tif ($balance < 0) {\n\t\t\treturn true;\n\t\t}\n\t\
    }\n\treturn false;\n}\nprint_r(below_zero([1, 2, 3]));\nprint_r(below_zero([1,\
    \ 2, -4, 5]));\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n  \
    \      $balance += $operations[$i];\n        if ($balance < 0) {\n           \
    \ return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $account = 0;\n  foreach ($operations as $operation) {\n    $account +=\
    \ $operation;\n    if ($account < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\nprint(below_zero([1, 2, 3]));\nprint(\"\\n\");\nprint(below_zero([1,\
    \ 2, -4, 5]));\nprint(\"\\n\");\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $operation) {\n\t\t$balance +=\
    \ $operation;\n\t\tif ($balance < 0) {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn\
    \ False;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  if (count($operations) == 0) return false;\n  $balance = 0;\n  foreach\
    \ ($operations as $operation) {\n    $balance += $operation;\n    if ($balance\
    \ < 0) return true;\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n\
    \    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return True;\n    \
    \    }\n    }\n    return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$a = 0;\n\tfor ($i = 0; $i < count($operations); $i++) {\n\t\t$a += $operations[$i];\n\
    \t\tif ($a < 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n$a = below_zero([1,\
    \ 2, 3]);\nvar_dump($a);\necho '<br>';\n$b = below_zero([1, 2, -4, 5]);\nvar_dump($b);\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\n<br>bool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  // BEGIN (write your solution here)\n  $sum = 0;\n  foreach ($operations\
    \ as $operation) {\n    $sum += $operation;\n    if ($sum < 0) {\n      return\
    \ true;\n    }\n  }\n  return false;\n  // END\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$sum = 0;\n\tforeach ($operations as $op) {\n\t\t$sum += $op;\n\t\tif ($sum\
    \ < 0) {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn False;\n}\n\nprint_r(below_zero([1,\
    \ 2, 3]));\nprint_r(below_zero([1, 2, -4, 5]));\nprint_r(below_zero([1, -2, -4,\
    \ 5]));\nprint_r(below_zero([1, -2, 4, 5]));\nfunction candidate(...$args) {\n\
    \    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '111'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$total = 0;\n\t$has_bellow_zero = false;\n\tforeach ($operations as $value)\
    \ {\n\t\t$total += $value;\n\t\tif ($total < 0) {\n\t\t\t$has_bellow_zero = true;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn $has_bellow_zero;\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  // Write code here\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplt4l7fhn.php:17\n\
    Stack trace:\n#0 /tmp/tmplt4l7fhn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplt4l7fhn.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $op) {\n        $balance +=\
    \ $op;\n        if ($balance < 0) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $op) {\n    $balance += $op;\n\
    \    if ($balance < 0) {\n      return True;\n    }\n  }\n  return False;\n}\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $current_balance = 0;\n  foreach ($operations as $operation) {\n    $current_balance\
    \ += $operation;\n    if ($current_balance < 0) {\n      return True;\n    }\n\
    \  }\n  return False;\n}\n\necho '<h1>Below Zero</h1>';\necho below_zero([1, 2,\
    \ 3]) ? 'True' : 'False';\necho '<br>';\necho below_zero([1, 2, -4, 5]) ? 'True'\
    \ : 'False';\necho '<br>';\necho below_zero([5, 2, -3, 1]) ? 'True' : 'False';\n\
    echo '<br>';\necho below_zero([-10, 2, 3, 2]) ? 'True' : 'False';\necho '<br>';\n\
    echo below_zero([5, 2, 1, -3]) ? 'True' : 'False';\necho '<br>';\necho below_zero([-10,\
    \ 2, 3, -2]) ? 'True' : 'False';\necho '<br>';\necho below_zero([-10, 2, -3, 2])\
    \ ? 'True' : 'False';\necho '<br>';\necho below_zero([-10, -2, -3, -2]) ? 'True'\
    \ : 'False';\necho '<br>';\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <h1>Below Zero</h1>False<br>True<br>False<br>True<br>False<br>True<br>True<br>True<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    for ($i = 0; $i < count($operations); $i++) {\n  \
    \      $balance += $operations[$i];\n        if ($balance < 0) {\n           \
    \ return true;\n        }\n    }\n    return false;\n}\n\necho below_zero([1,\
    \ 2, 3]) . PHP_EOL;\necho below_zero([1, 2, -4, 5]) . PHP_EOL;\necho below_zero([1,\
    \ 2, -4, 5, -2]) . PHP_EOL;\necho below_zero([-1, 2, -4, 5, 2]) . PHP_EOL;\necho\
    \ below_zero([1, 2, -4, 5, 2]) . PHP_EOL;\necho below_zero([1, 2, 3, -1, 5, 2])\
    \ . PHP_EOL;\necho below_zero([1, 2, 3, -1, 5, 2, -4]) . PHP_EOL;\necho below_zero([1,\
    \ 2, 3, -1, 5, 2, -4, 1]) . PHP_EOL;\necho below_zero([1, 2, 3, -1, 5, 2, -4,\
    \ 0]) . PHP_EOL;\necho below_zero([1, 2, 3, -1, 5, 2, -4, -1]) . PHP_EOL;\necho\
    \ below_zero([1, 2, 3, -1, 5, 2, -4, -1, 1]) . PHP_EOL;\necho below_zero([1, 2,\
    \ 3, -1, 5, 2, -4, -1, 2]) . PHP_EOL;\necho below_zero([1, 2, 3, -1, 5, 2, -4,\
    \ -1, 3]) . PHP_EOL;\necho below_zero([1, 2, 3, -1, 5, 2, -4, -1, 4]) . PHP_EOL;\n\
    echo below_zero([1, 2, 3, -1, 5, 2, -4, -1, 5]) . PHP_EOL;\necho below_zero([1,\
    \ 2, 3, -1, 5, 2, -4, -1, 6\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpeaylyxhj.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return True;\n    \
    \    }\n    }\n    return False;\n}\n\nprint_r(below_zero([1, 2, 3]));\necho '<br>';\n\
    print_r(below_zero([1, 2, -4, 5]));\necho '<br>';\nprint_r(below_zero([1, 2, -4,\
    \ 5, -6]));\necho '<br>';\nprint_r(below_zero([1, 2, -4, 5, -6, -7]));\necho '<br>';\n\
    print_r(below_zero([1, 2, -4, 5, -6, -7, 7]));\necho '<br>';\nprint_r(below_zero([1,\
    \ 2, -4, 5, -6, -7, 7, 7]));\necho '<br>';\nfunction candidate(...$args) {\n \
    \   return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br>1<br>1<br>1<br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $total = 0;\n  for ($i = 0; $i < count($operations); $i++) {\n    $total\
    \ += $operations[$i];\n    if ($total < 0) {\n      return true;\n    }\n  }\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $op) {\n\t\t$balance += $op;\n\
    \t\tif ($balance < 0) {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn False;\n}\n\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $total = 0;\n    foreach ($operations as $operation) {\n        $total\
    \ += $operation;\n        if ($total < 0) {\n            return true;\n      \
    \  }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $amount) {\n    $balance += $amount;\n\
    \    if ($balance < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $bala = 0;\n    foreach ($operations as $key => $value) {\n        $bala\
    \ += $value;\n        if ($bala < 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\necho below_zero([1, 2, 3]);\necho \"<br>\";\necho\
    \ below_zero([1, 2, -4, 5]);\necho \"<br>\";\necho below_zero([1, 2, -4, 1]);\n\
    echo \"<br>\";\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operand) {\n        $balance\
    \ += $operand;\n        if ($balance < 0) {\n            return true;\n      \
    \  }\n    }\n    return false;\n}\n\n$tests = [\n    [[1, 2, 3], false],\n   \
    \ [[1, 2, -4, 5], true],\n    [[1, -3, 5], true],\n    [[-3, 5], true],\n    [[-3],\
    \ true],\n    [[3], false],\n    [[], false],\n];\nforeach ($tests as [$operations,\
    \ $expected]) {\n    $result = below_zero($operations);\n    if ($result !== $expected)\
    \ {\n        printf(\"FAILED! below_zero(%s) expected: %s result: %s\\n\", json_encode($operations),\
    \ json_encode($expected), json_encode($result));\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\nassert(below_zero([1, 2, 3]) === false);\nassert(below_zero([1,\
    \ 2, -4, 5]) === true);\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $sum = 0;\n    foreach ($operations as $operation) {\n        $sum +=\
    \ $operation;\n        if ($sum < 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  if ($operations == 0) {\n    return false;\n  }\n  else {\n    return true;\n\
    \  }\n}\necho below_zero([1, 2, 3]) . \"<br>\";\necho below_zero([1, 2, -4, 5])\
    \ . \"<br>\";\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptftnn47c.php:25\n\
    Stack trace:\n#0 /tmp/tmptftnn47c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptftnn47c.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $op) {\n\t\t$balance += $op;\n\
    \t\tif ($balance < 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  return true;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpij9nhci1.php:18\n\
    Stack trace:\n#0 /tmp/tmpij9nhci1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpij9nhci1.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$sum = 0;\n\tforeach ($operations as $op) {\n\t\t$sum += $op;\n\t\tif ($sum\
    \ < 0) {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $counter = 0;\n    foreach ($operations as $val) {\n        $counter\
    \ += $val;\n        if ($counter < 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $operation) {\n\t\t$balance +=\
    \ $operation;\n\t\tif ($balance < 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $op) {\n        $balance +=\
    \ $op;\n        if ($balance < 0) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $total = 0;\n    foreach ($operations as $operation) {\n        $total\
    \ += $operation;\n        if ($total < 0) {\n            return True;\n      \
    \  }\n    }\n    return False;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $current_balance = 0;\n    foreach ($operations as $operation) {\n  \
    \      $current_balance += $operation;\n        if ($current_balance < 0) {\n\
    \            return True;\n        }\n    }\n    return False;\n}\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) return true;\n  }\n  return false;\n}\n\n\
    echo below_zero([1, 2, 3]) ? 'true' : 'false';\necho \"\\n\";\necho below_zero([1,\
    \ 2, -4, 5]) ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "false\ntrue\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    if (empty($operations)) {\n        return false;\n    }\n\n    $balance\
    \ = 0;\n    foreach ($operations as $operation) {\n        $balance += $operation;\n\
    \        if ($balance < 0) {\n            return true;\n        }\n    }\n\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n\t$balance = 0;\n\tforeach ($operations as $operation) {\n\t\t$balance +=\
    \ $operation;\n\t\tif ($balance < 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\necho below_zero([1, 2, 3]) . \"\\n\";\necho below_zero([1, 2, -4,\
    \ 5]) . \"\\n\";\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $account = 0;\n    foreach ($operations as $operation) {\n        $account\
    \ += $operation;\n        if ($account < 0) {\n            return True;\n    \
    \    }\n    }\n    return False;\n}\n$operations = [1, 2, 3];\n$operations1 =\
    \ [1, 2, -4, 5];\nvar_dump(below_zero($operations));\nvar_dump(below_zero($operations1));\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $account = 0;\n    foreach ($operations as $operation) {\n        $account\
    \ += $operation;\n        if ($account < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $sum = 0;\n    foreach ($operations as $operation) {\n        $sum +=\
    \ $operation;\n        if ($sum < 0) {\n            return True;\n        }\n\
    \    }\n    return False;\n}\necho below_zero([1, 2, 3]);\necho '<br>';\necho\
    \ below_zero([1, 2, -4, 5]);\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    return false;\n}\n\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp420mka_q.php:20\n\
    Stack trace:\n#0 /tmp/tmp420mka_q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp420mka_q.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $v) {\n        $balance +=\
    \ $v;\n        if ($balance < 0) {\n            return True;\n        }\n    }\n\
    \    return False;\n}\necho below_zero([1, 2, 3]) . PHP_EOL;\necho below_zero([1,\
    \ 2, -4, 5]) . PHP_EOL;\nfunction candidate(...$args) {\n    return below_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $sum = 0;\n  foreach ($operations as $operation) {\n    $sum += $operation;\n\
    \    if ($sum < 0) return true;\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return below_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2,\
    \ -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  if(!is_array($operations)) {\n    return false;\n  }\n  $balance = 0;\n\
    \  for($i = 0; $i < count($operations); $i++) {\n    $balance += $operations[$i];\n\
    \    if($balance < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $balance = 0;\n    foreach ($operations as $op) {\n        $balance +=\
    \ $op;\n        if ($balance < 0) return True;\n    }\n    return False;\n}\n\n\
    function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n  $balance = 0;\n  foreach ($operations as $operation) {\n    $balance +=\
    \ $operation;\n    if ($balance < 0) {\n      return True;\n    }\n  }\n  return\
    \ False;\n}\n\nvar_dump(below_zero([1, 2, 3]));\nvar_dump(below_zero([1, 2, -4,\
    \ 5]));\nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    $result = array_reduce($operations, function($carry, $item) {\n     \
    \   return $carry + $item;\n    }, 0);\n    return $result < 0;\n}\n\nfunction\
    \ candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 2, -2, 5,\
    \ -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps1k2q9r7.php:23\n\
    Stack trace:\n#0 /tmp/tmps1k2q9r7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmps1k2q9r7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You're given a list of deposit and withdrawal operations on\
    \ a bank account that starts with\n// zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n// at that point\
    \ function should return True. Otherwise it should return False.\n// >>> below_zero([1,\
    \ 2, 3])\n// False\n// >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero($operations)\
    \ {\n    // BEGIN (write your solution here)\n    $balance = 0;\n    foreach ($operations\
    \ as $operation) {\n        $balance += $operation;\n        if ($balance < 0)\
    \ {\n            return true;\n        }\n    }\n    return false;\n    // END\n\
    }\nfunction candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4,\
    \ 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5,\
    \ 4, -4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_151_double_the_difference
language: php
results:
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\treturn 0;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8owtf6gi.php:19\n\
    Stack trace:\n#0 /tmp/tmp8owtf6gi.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8owtf6gi.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $element) {\n    if (is_int($element) &&\
    \ $element >= 0) {\n      if (($element % 2) != 0) {\n        $sum += pow($element,\
    \ 2);\n      }\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbimptsv.php:26\n\
    Stack trace:\n#0 /tmp/tmpxbimptsv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxbimptsv.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$arr = [];\n\tforeach ($lst as $n) {\n\t\tif (is_int($n) && $n > 0) {\n\
    \t\t\t$arr[] = $n;\n\t\t}\n\t}\n\t$max = max($arr);\n\t$min = min($arr);\n\treturn\
    \ $max - $min;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpli2i1x8k.php\
    \ on line 16\n\nWarning: min(): Array must contain at least one element in /tmp/tmpli2i1x8k.php\
    \ on line 17\n\nWarning: max(): Array must contain at least one element in /tmp/tmpli2i1x8k.php\
    \ on line 16\n\nWarning: min(): Array must contain at least one element in /tmp/tmpli2i1x8k.php\
    \ on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpli2i1x8k.php:26\n\
    Stack trace:\n#0 /tmp/tmpli2i1x8k.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpli2i1x8k.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $results = [];\n    foreach ($lst as $value) {\n        if ($value %\
    \ 2 === 1) {\n            $results[] = $value * $value;\n        }\n    }\n  \
    \  return array_sum($results);\n}\n\necho \"double_the_difference\" . PHP_EOL;\n\
    echo double_the_difference([1, 3, 2, 0]) . PHP_EOL;\necho double_the_difference([-1,\
    \ -2, 0]) . PHP_EOL;\necho double_the_difference([9, -2]) . PHP_EOL;\necho double_the_difference([0])\
    \ . PHP_EOL;\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "double_the_difference\n10\n0\n81\n0\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp04ievguo.php:31\nStack trace:\n#0 /tmp/tmp04ievguo.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp04ievguo.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  // your code here\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkocf2a0.php:17\n\
    Stack trace:\n#0 /tmp/tmpkkocf2a0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpkkocf2a0.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeks6k8wc.php:17\n\
    Stack trace:\n#0 /tmp/tmpeks6k8wc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpeks6k8wc.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqci42oo.php:18\n\
    Stack trace:\n#0 /tmp/tmpzqci42oo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzqci42oo.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            if ($num % 2 == 1) {\n                $sum += pow($num,\
    \ 2);\n            }\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph1bocxv7.php:26\n\
    Stack trace:\n#0 /tmp/tmph1bocxv7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmph1bocxv7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  return 0;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvcyrye5d.php:18\n\
    Stack trace:\n#0 /tmp/tmpvcyrye5d.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvcyrye5d.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $el) {\n        if ($el > 0 && $el %\
    \ 2 == 1) {\n            $sum += $el * $el;\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz96_0fzj.php:24\n\
    Stack trace:\n#0 /tmp/tmpz96_0fzj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpz96_0fzj.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sqrsum = 0;\n    foreach ($lst as $i) {\n        if (($i % 2) != 0)\
    \ {\n            $sqrsum += $i*$i;\n        }\n    }\n    return $sqrsum;\n}\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdszu5m1.php:24\n\
    Stack trace:\n#0 /tmp/tmpzdszu5m1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzdszu5m1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t// Write your code here.\n\treturn 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzkvky47v.php:20\n\
    Stack trace:\n#0 /tmp/tmpzkvky47v.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzkvky47v.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num >=\
    \ 0) {\n      if ($num % 2 == 1) {\n        $sum += $num ** 2;\n      }\n    }\n\
    \  }\n  return $sum;\n}\n\necho double_the_difference([1, 3, 2, 0]) . \"\\n\"\
    ;\necho double_the_difference([-1, -2, 0]) . \"\\n\";\necho double_the_difference([9,\
    \ -2]) . \"\\n\";\necho double_the_difference([0]) . \"\\n\";\necho double_the_difference([])\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmz0nbd_.php:33\n\
    Stack trace:\n#0 /tmp/tmpdmz0nbd_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdmz0nbd_.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $lst = array_map(function($num) {\n    if (is_int($num) && $num > 0) return\
    \ $num * $num;\n    return 0;\n  }, $lst);\n  return array_sum($lst);\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprvx829t9.php:22\n\
    Stack trace:\n#0 /tmp/tmprvx829t9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprvx829t9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  return array_reduce($lst,function($sum,$curr){\n    if(($curr%2)!=0){\n\
    \      return $sum+$curr*$curr;\n    }\n    return $sum;\n  },0);\n}\necho double_the_difference([1,\
    \ 3, 2, 0]);\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdchrws1.php:24\n\
    Stack trace:\n#0 /tmp/tmpxdchrws1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxdchrws1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $result = 0;\n  if (!empty($lst)) {\n    foreach ($lst as $v) {\n     \
    \ if (is_int($v) && $v >= 0) {\n        if ($v % 2) {\n          $result += pow($v,\
    \ 2);\n        }\n      }\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx1rfg52.php:29\n\
    Stack trace:\n#0 /tmp/tmpnx1rfg52.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnx1rfg52.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $x) {\n    if (is_int($x) && $x > 0) {\n\
    \      $sum += pow($x, 2);\n    }\n  }\n  return $sum;\n}\n\necho double_the_difference([1,\
    \ 3, 2, 0]) . \"\\n\";\necho double_the_difference([-1, -2, 0]) . \"\\n\";\necho\
    \ double_the_difference([9, -2]) . \"\\n\";\necho double_the_difference([0]) .\
    \ \"\\n\";\necho double_the_difference([]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph84j8fqj.php:30\n\
    Stack trace:\n#0 /tmp/tmph84j8fqj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmph84j8fqj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $result = 0;\n  foreach ($lst as $num) {\n    if ($num % 2 == 1 && gettype($num)\
    \ == \"integer\" && $num >= 0) {\n      $result += pow($num, 2);\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvrxpe3i.php:25\n\
    Stack trace:\n#0 /tmp/tmpyvrxpe3i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyvrxpe3i.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $output = 0;\n    foreach ($lst as $val) {\n        if (is_int($val)\
    \ && ($val > 0)) {\n            $output += $val * $val;\n        }\n    }\n  \
    \  return $output;\n}\n\necho double_the_difference([1, 3, 2, 0]) . \"\\n\";\n\
    echo double_the_difference([-1, -2, 0]) . \"\\n\";\necho double_the_difference([9,\
    \ -2]) . \"\\n\";\necho double_the_difference([0]) . \"\\n\";\necho double_the_difference([])\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovn4yjtt.php:30\n\
    Stack trace:\n#0 /tmp/tmpovn4yjtt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpovn4yjtt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ((is_int($lst[$i])\
    \ == TRUE) && ($lst[$i] >= 0)) {\n            if ($lst[$i] % 2 == 1) {\n     \
    \           $sum += pow($lst[$i], 2);\n            }\n        }\n    }\n    return\
    \ $sum;\n}\necho \"test 1 - \" . (double_the_difference([1, 3, 2, 0]) == 10 ?\
    \ \"true\" : \"false\") . \"\\n\";\necho \"test 2 - \" . (double_the_difference([-1,\
    \ -2, 0]) == 0 ? \"true\" : \"false\") . \"\\n\";\necho \"test 3 - \" . (double_the_difference([9,\
    \ -2]) == 81 ? \"true\" : \"false\") . \"\\n\";\necho \"test 4 - \" . (double_the_difference([0])\
    \ == 0 ? \"true\" : \"false\") . \"\\n\";\necho \"test 5 - \" . (double_the_difference([])\
    \ == 0 ? \"true\" : \"false\") . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return double_the_difference(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "test 1 - true\ntest 2 - true\ntest 3 - true\ntest 4 - true\ntest 5 - true\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8fhu0nsm.php:31\nStack\
    \ trace:\n#0 /tmp/tmp8fhu0nsm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8fhu0nsm.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $res = 0;\n    foreach ($lst as $val) {\n        if (is_int($val) &&\
    \ $val > 0) {\n            $res += $val * $val;\n        }\n    }\n    return\
    \ $res;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8gd8crq.php:24\n\
    Stack trace:\n#0 /tmp/tmpw8gd8crq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw8gd8crq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $total = 0;\n  foreach ($lst as $item) {\n    if (is_int($item) && $item\
    \ >= 0) {\n      if ($item % 2 == 1) {\n        $total += $item * $item;\n   \
    \   }\n    }\n  }\n  return $total;\n}\n\nclass TestDoubleTheDifference extends\
    \ PHPUnit_Framework_TestCase {\n  public function testDoubleTheDifference() {\n\
    \    $this->assertEquals(10, double_the_difference([1, 3, 2, 0]));\n    $this->assertEquals(0,\
    \ double_the_difference([-1, -2, 0]));\n    $this->assertEquals(81, double_the_difference([9,\
    \ -2]));\n    $this->assertEquals(0, double_the_difference([0]));\n    $this->assertEquals(0,\
    \ double_the_difference([]));\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'PHPUnit_Framework_TestCase' not found\
    \ in /tmp/tmpyd9uut63.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpyd9uut63.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $elem) {\n    if (is_int($elem) && $elem\
    \ >= 0) {\n      if ($elem % 2 == 1) {\n        $sum += $elem * $elem;\n     \
    \ }\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8eojvj9.php:27\n\
    Stack trace:\n#0 /tmp/tmpr8eojvj9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpr8eojvj9.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  \n  // your code here\n  $odd_list = [];\n  $sum = 0;\n  foreach($lst as\
    \ $num){\n    if(is_int($num) && ($num > 0)){\n      if($num % 2 != 0){\n    \
    \    array_push($odd_list, $num);\n      }\n    }\n  }\n  foreach($odd_list as\
    \ $odd_num){\n    $sum += pow($odd_num, 2);\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6niqesim.php:33\n\
    Stack trace:\n#0 /tmp/tmp6niqesim.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6niqesim.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $odd = array_filter($lst, function($n) {\n    return is_int($n) && $n >\
    \ 0 && $n % 2 != 0;\n  });\n  $sum = array_reduce($odd, function($n, $m) {\n \
    \   return $n + $m * $m;\n  });\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnu4fbrd6.php:24\n\
    Stack trace:\n#0 /tmp/tmpnu4fbrd6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnu4fbrd6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $elem) {\n    if (is_numeric($elem) && $elem\
    \ == floor($elem) && $elem % 2 != 0) {\n      $sum += $elem * $elem;\n    }\n\
    \  }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpenkfoxm9.php:24\n\
    Stack trace:\n#0 /tmp/tmpenkfoxm9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpenkfoxm9.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = 0;\n    foreach ($lst as $val) {\n        if ((is_int($val)\
    \ || is_float($val)) && $val > 0) {\n            $result += ($val % 2 == 0) ?\
    \ 0 : pow($val, 2);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwb1noizk.php:25\n\
    Stack trace:\n#0 /tmp/tmpwb1noizk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwb1noizk.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif(!$lst) return 0;\n\n\t$total = 0;\n\tforeach($lst as $num) {\n\t\tif($num\
    \ % 2 != 0 && is_int($num)) $total += $num * $num;\n\t}\n\treturn $total;\n}\n\
    \nclass DoubleTheDifferenceTest extends PHPUnit_Framework_TestCase {\n\tpublic\
    \ function testEqual() {\n\t\t$this->assertEquals(0, double_the_difference([-1,\
    \ -2, 0]));\n\t\t$this->assertEquals(0, double_the_difference([0]));\n\t\t$this->assertEquals(10,\
    \ double_the_difference([1, 3, 2, 0]));\n\t\t$this->assertEquals(81, double_the_difference([9,\
    \ -2]));\n\t}\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'PHPUnit_Framework_TestCase' not found\
    \ in /tmp/tmpiclvp8_q.php:19\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpiclvp8_q.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $item) {\n    if (is_int($item) && $item\
    \ > 0) {\n      if ($item % 2 == 1) {\n        $sum += $item ** 2;\n      }\n\
    \    }\n  }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hk7kh6u.php:26\n\
    Stack trace:\n#0 /tmp/tmp9hk7kh6u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9hk7kh6u.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // TODO: Implement Me!\n    $result = 0;\n    foreach ($lst as $num)\
    \ {\n        if ($num % 2 == 1) {\n            $result += $num ** 2;\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9a3sf8z.php:26\n\
    Stack trace:\n#0 /tmp/tmpk9a3sf8z.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk9a3sf8z.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $el) {\n    if (is_int($el) && $el > 0) {\n\
    \      $sum += $el * $el;\n    }\n  }\n  return $sum;\n}\n$a = [1,3,2,0];\necho\
    \ double_the_difference($a) . \"\\n\";\n\nfunction candidate(...$args) {\n   \
    \ return double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2rd7fm9.php:27\n\
    Stack trace:\n#0 /tmp/tmpl2rd7fm9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpl2rd7fm9.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $value) {\n        if (($value > 0) &&\
    \ (is_int($value))) {\n            if ($value % 2 == 1) {\n                $sum\
    \ += pow($value, 2);\n            }\n        }\n    }\n    return $sum;\n}\n\n\
    echo double_the_difference([1, 3, 2, 0]);\nfunction candidate(...$args) {\n  \
    \  return double_the_difference(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezcl9icf.php:28\n\
    Stack trace:\n#0 /tmp/tmpezcl9icf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpezcl9icf.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif(!$lst) return 0;\n\t$odd_num = array_filter($lst, function($num) {\n\
    \t\tif(is_numeric($num) && $num % 2 != 0) return true;\n\t});\n\t$odd_num = array_map(function($num)\
    \ {\n\t\treturn $num * $num;\n\t}, $odd_num);\n\treturn array_sum($odd_num);\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp05rsu09t.php:26\n\
    Stack trace:\n#0 /tmp/tmp05rsu09t.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp05rsu09t.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $squares_lst = array_map(function($x) {\n    if ($x % 2 == 1 && $x > 0)\
    \ {\n      return $x * $x;\n    } else {\n      return 0;\n    }\n  }, $lst);\n\
    \  return array_sum($squares_lst);\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86tecsn0.php:26\n\
    Stack trace:\n#0 /tmp/tmp86tecsn0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp86tecsn0.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif (empty($lst)) {\n\t\treturn 0;\n\t}\n\t$odd_sum = 0;\n\tforeach ($lst\
    \ as $value) {\n\t\tif (($value % 2) == 1 && $value >= 0 && is_int($value)) {\n\
    \t\t\t$odd_sum += $value * $value;\n\t\t}\n\t}\n\treturn $odd_sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24wb0pg9.php:28\n\
    Stack trace:\n#0 /tmp/tmp24wb0pg9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp24wb0pg9.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $new_list = [];\n    foreach ($lst as $number) {\n        if (is_numeric($number)\
    \ && $number >= 0 && $number % 2 == 1) {\n            $new_list[] = $number **\
    \ 2;\n        }\n    }\n    return array_sum($new_list);\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdnveaen.php:25\n\
    Stack trace:\n#0 /tmp/tmpkdnveaen.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkdnveaen.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$result = 0;\n\tforeach ($lst as $v) {\n\t\tif (is_int($v) && $v >= 0)\
    \ {\n\t\t\tif ($v % 2 == 1) {\n\t\t\t\t$result += $v * $v;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn $result;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1wg94pc.php:26\n\
    Stack trace:\n#0 /tmp/tmpq1wg94pc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpq1wg94pc.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif (empty($lst))\n\t\treturn 0;\n\t$res = 0;\n\tforeach ($lst as $n) {\n\
    \t\tif (is_int($n) && $n % 2 != 0)\n\t\t\t$res += $n * $n;\n\t}\n\treturn $res;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj35zm73c.php:25\n\
    Stack trace:\n#0 /tmp/tmpj35zm73c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpj35zm73c.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = 0;\n    foreach ($lst as $k => $v) {\n        if ($v > 0 &&\
    \ is_int($v)) {\n            $result += pow($v, 2);\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5s_a5za.php:24\n\
    Stack trace:\n#0 /tmp/tmpa5s_a5za.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpa5s_a5za.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $number) {\n    if (abs($number) > 0 && abs($number)\
    \ == round(abs($number))) {\n      if ($number % 2 == 1) {\n        $sum += pow($number,\
    \ 2);\n      }\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55n7f1kc.php:26\n\
    Stack trace:\n#0 /tmp/tmp55n7f1kc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp55n7f1kc.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $n = 0;\n    foreach ($lst as $i) {\n        if ($i == 0) {\n       \
    \     $n += 0;\n        } elseif (is_integer($i) == true) {\n            $n +=\
    \ $i * $i;\n        }\n    }\n    return $n;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yewgfev.php:26\n\
    Stack trace:\n#0 /tmp/tmp8yewgfev.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8yewgfev.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $n) {\n        if (is_int($n) && $n >=\
    \ 0) {\n            if ($n % 2 != 0) {\n                $sum += $n * $n;\n   \
    \         }\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpruh4u9_b.php:26\n\
    Stack trace:\n#0 /tmp/tmpruh4u9_b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpruh4u9_b.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $count = 0;\n  foreach ($lst as $x) {\n    if ($x > 0 && floor($x) == $x\
    \ && $x % 2 == 1) {\n      $count += $x * $x;\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjh70f6ol.php:25\n\
    Stack trace:\n#0 /tmp/tmpjh70f6ol.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjh70f6ol.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return $lst;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdc3mnjr.php:18\n\
    Stack trace:\n#0 /tmp/tmpfdc3mnjr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfdc3mnjr.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odd_squares = array_filter($lst, 'is_odd');\n    $odd_squares = array_map('square',\
    \ $odd_squares);\n    return array_sum($odd_squares);\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'is_odd' not found or invalid function name in /tmp/tmpnr128fpo.php on line\
    \ 10\n\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'square' not found or invalid function name in /tmp/tmpnr128fpo.php on line\
    \ 11\n\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpnr128fpo.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnr128fpo.php:20\n\
    Stack trace:\n#0 /tmp/tmpnr128fpo.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpnr128fpo.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $val) {\n        if (is_int($val) &&\
    \ $val > 0) {\n            if ($val % 2 != 0) {\n                $sum += $val\
    \ * $val;\n            }\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36wuxizm.php:27\n\
    Stack trace:\n#0 /tmp/tmp36wuxizm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp36wuxizm.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n}\necho double_the_difference([1, 3, 2, 0]) . \"\\n\";\necho double_the_difference([-1,\
    \ -2, 0]) . \"\\n\";\necho double_the_difference([9, -2]) . \"\\n\";\necho double_the_difference([0])\
    \ . \"\\n\";\necho double_the_difference([]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5co0a2mn.php:21\n\
    Stack trace:\n#0 /tmp/tmp5co0a2mn.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5co0a2mn.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $item) {\n    if ($item % 2 == 1 && is_int($item))\
    \ {\n      $sum += pow($item, 2);\n    }\n  }\n  return $sum;\n}\n\necho double_the_difference([1,\
    \ 3, 2, 0]) . \"\\n\";\necho double_the_difference([-1, -2, 0]) . \"\\n\";\necho\
    \ double_the_difference([9, -2]) . \"\\n\";\necho double_the_difference([0]) .\
    \ \"\\n\";\necho double_the_difference([]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd423opwt.php:30\n\
    Stack trace:\n#0 /tmp/tmpd423opwt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd423opwt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $odd_squares = array_filter($lst, function($num) {\n    return is_int($num)\
    \ && $num > 0 && $num % 2 !== 0;\n  });\n  return array_reduce($odd_squares, function($sum,\
    \ $num) {\n    return $sum + pow($num, 2);\n  }, 0);\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqtui_r5n.php:23\n\
    Stack trace:\n#0 /tmp/tmpqtui_r5n.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqtui_r5n.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $res = 0;\n    foreach ($lst as $num) {\n        if (gettype($num) ==\
    \ \"integer\" && $num > 0) {\n            if ($num % 2 == 1) {\n             \
    \   $res += $num * $num;\n            }\n        }\n    }\n    return $res;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoybxi3qq.php:26\n\
    Stack trace:\n#0 /tmp/tmpoybxi3qq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpoybxi3qq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$result = 0;\n\tforeach ($lst as $i) {\n\t\tif (is_int($i) && ($i % 2 ==\
    \ 1) && ($i >= 0)) {\n\t\t\t$result += $i * $i;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmd5glbi.php:25\n\
    Stack trace:\n#0 /tmp/tmphmd5glbi.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphmd5glbi.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $total = 0;\n    $lst = array_filter($lst, function($x) {\n        return\
    \ is_int($x) && $x >= 0;\n    });\n    foreach ($lst as $num) {\n        if ($num\
    \ % 2 != 0) {\n            $total += $num * $num;\n        }\n    }\n    return\
    \ $total;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ectp73v.php:28\n\
    Stack trace:\n#0 /tmp/tmp1ectp73v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1ectp73v.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $count = 0;\n    foreach ($lst as $item) {\n        if(is_int($item)\
    \ && $item > 0) {\n            if($item % 2 == 1) {\n                $count +=\
    \ pow($item, 2);\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ double_the_difference([1, 3, 2, 0]);\necho \"\\n\";\necho double_the_difference([-1,\
    \ -2, 0]);\necho \"\\n\";\necho double_the_difference([9, -2]);\necho \"\\n\"\
    ;\necho double_the_difference([0]);\necho \"\\n\";\necho double_the_difference([]);\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6ka2k39.php:35\n\
    Stack trace:\n#0 /tmp/tmpk6ka2k39.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk6ka2k39.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $n) {\n        if (is_int($n) && $n %\
    \ 2 != 0) {\n            $sum += pow($n, 2);\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptbbiev3m.php:24\n\
    Stack trace:\n#0 /tmp/tmptbbiev3m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptbbiev3m.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$nums = array_filter($lst, function($x) { return is_int($x) && $x > 0;\
    \ });\n\tif (count($nums) == 0) {\n\t\treturn 0;\n\t}\n\treturn array_sum(array_map(function($x)\
    \ { return $x * $x; }, $nums));\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2dlp696g.php:22\n\
    Stack trace:\n#0 /tmp/tmp2dlp696g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2dlp696g.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $i = 0;\n  $y = 0;\n  $sum = 0;\n  while ($i < count($lst)) {\n    if ($lst[$i]\
    \ < 0 || fmod($lst[$i], 1) != 0) {\n      $y = $y + 1;\n    }\n    $i = $i + 1;\n\
    \  }\n  $z = count($lst) - $y;\n  $k = 0;\n  while ($k < $z) {\n    $sum = $sum\
    \ + pow($lst[$k], 2);\n    $k = $k + 1;\n  }\n  return $sum;\n}\n$lst = [1, 3,\
    \ 2, 0];\necho double_the_difference($lst);\n\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamjdspwm.php:36\n\
    Stack trace:\n#0 /tmp/tmpamjdspwm.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpamjdspwm.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // TODO\n}\ndouble_the_difference([1, 3, 2, 0]); // 10\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2lqlwnqq.php:19\n\
    Stack trace:\n#0 /tmp/tmp2lqlwnqq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2lqlwnqq.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $s = 0;\n    foreach ($lst as $n) {\n        if ($n > 0 && floor($n)\
    \ == $n) {\n            $s += $n * $n;\n        }\n    }\n    return $s;\n}\n\n\
    $list = [1,3,2,0];\n$list2 = [-1,-2,0];\n$list3 = [9,-2];\n$list4 = [0];\n$list5\
    \ = [];\n\necho double_the_difference($list);\necho double_the_difference($list2);\n\
    echo double_the_difference($list3);\necho double_the_difference($list4);\necho\
    \ double_the_difference($list5);\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1408100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_e2e2bui.php:36\n\
    Stack trace:\n#0 /tmp/tmp_e2e2bui.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_e2e2bui.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $new_lst = array();\n    $sum = 0;\n    foreach ($lst as $x) {\n    \
    \    if (($x % 2) == 1 && is_int($x) && $x >= 0) {\n            $x = $x * $x;\n\
    \            array_push($new_lst, $x);\n        }\n    }\n    foreach ($new_lst\
    \ as $x) {\n        $sum += $x;\n    }\n    return $sum;\n}\n$lst = array(1, 3,\
    \ 2, 0);\necho \"Given an array of: \";\nprint_r($lst);\necho \"<br>The output\
    \ is: \";\necho double_the_difference($lst);\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Given an array of: Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n\
    \    [3] => 0\n)\n<br>The output is: 10\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7s663vno.php:34\nStack trace:\n#0 /tmp/tmp7s663vno.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7s663vno.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_int($lst[$i])\
    \ && $lst[$i] % 2 == 1) {\n            $sum += $lst[$i] * $lst[$i];\n        }\n\
    \    }\n    return $sum;\n}\necho double_the_difference([1, 3, 2, 0]); // 10\n\
    echo double_the_difference([-1, -2, 0]); // 0\necho double_the_difference([9,\
    \ -2]); // 81\necho double_the_difference([0]); // 0\necho double_the_difference([]);\
    \ // 0\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1008100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5gme78wf.php:29\n\
    Stack trace:\n#0 /tmp/tmp5gme78wf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5gme78wf.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return array_reduce($lst, function($sum, $x) {\n        if (is_int($x)\
    \ && $x > 0) {\n            return $sum + $x * $x;\n        } else {\n       \
    \     return $sum;\n        }\n    }, 0);\n}\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_57_rmkc.php:24\n\
    Stack trace:\n#0 /tmp/tmp_57_rmkc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_57_rmkc.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $val) {\n        if ($val > 0 && $val\
    \ % 2 == 1) {\n            $sum += $val * $val;\n        }\n    }\n    return\
    \ $sum;\n}\n\n$lst = [1, 3, 2, 0];\nprint double_the_difference($lst) . \"\\n\"\
    ;\n\n$lst = [-1, -2, 0];\nprint double_the_difference($lst) . \"\\n\";\n\n$lst\
    \ = [9, -2];\nprint double_the_difference($lst) . \"\\n\";\n\n$lst = [0];\nprint\
    \ double_the_difference($lst) . \"\\n\";\n\n$lst = [];\nprint double_the_difference($lst)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4z9icem9.php:39\n\
    Stack trace:\n#0 /tmp/tmp4z9icem9.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp4z9icem9.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return 0;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1y01tfox.php:18\n\
    Stack trace:\n#0 /tmp/tmp1y01tfox.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1y01tfox.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            if ($item % 2 != 0) {\n                $sum += pow($item,\
    \ 2);\n            }\n        }\n    }\n    return $sum;\n}\necho double_the_difference([1,\
    \ 3, 2, 0]);\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7egyuy9.php:27\n\
    Stack trace:\n#0 /tmp/tmpm7egyuy9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm7egyuy9.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $value) {\n    if (is_int($value) && $value\
    \ % 2 != 0) {\n      $sum += pow($value, 2);\n    }\n  }\n  return $sum;\n}\n\
    $t1 = microtime(true);\nfor ($i = 0; $i < 100000; $i++) {\n  $arr1 = array();\n\
    \  double_the_difference($arr1);\n}\n$t2 = microtime(true);\nprint(($t2 - $t1)\
    \ . \"\\n\");\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0.0075490474700928\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp4f6_ruy7.php:32\nStack trace:\n#0 /tmp/tmp4f6_ruy7.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4f6_ruy7.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $x) {\n    if (is_int($x) && $x % 2 != 0)\
    \ {\n      $sum += $x * $x;\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2gdee7b1.php:24\n\
    Stack trace:\n#0 /tmp/tmp2gdee7b1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2gdee7b1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $i) {\n        if (is_int($i) && $i >\
    \ 0) {\n            $sum += $i * $i;\n        }\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw0_i0hbu.php:25\n\
    Stack trace:\n#0 /tmp/tmpw0_i0hbu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw0_i0hbu.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  return 0;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2yrg3bxx.php:19\n\
    Stack trace:\n#0 /tmp/tmp2yrg3bxx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2yrg3bxx.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odd_squares = array_filter($lst, function($elem) {\n        return $elem\
    \ % 2 == 1 && $elem > 0 && is_int($elem);\n    });\n    return array_sum(array_map(function($elem)\
    \ {\n        return $elem * $elem;\n    }, $odd_squares));\n}\n\n$tests = [\n\
    \    [[1, 3, 2, 0], 10],\n    [[-1, -2, 0], 0],\n    [[9, -2], 81],\n    [[0],\
    \ 0],\n    [[], 0],\n];\n\nforeach ($tests as $key => $value) {\n    $res = double_the_difference($value[0]);\n\
    \    $success = $res == $value[1];\n    $msg = $success ? 'OK' : 'ERROR';\n  \
    \  echo sprintf(\"Test %d: %s, %s\\n\", $key, $res, $msg);\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Test 0: 10, OK\nTest 1: 0, OK\nTest 2: 81, OK\nTest 3: 0, OK\nTest 4: 0,\
    \ OK\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpll2y1ws6.php:38\n\
    Stack trace:\n#0 /tmp/tmpll2y1ws6.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpll2y1ws6.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Write your code here\n    $sum = 0;\n    foreach ($lst as $value)\
    \ {\n        if (is_int($value) && $value >= 0 && $value % 2 != 0) {\n       \
    \     $sum += $value * $value;\n        }\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2a_gf53.php:26\n\
    Stack trace:\n#0 /tmp/tmpt2a_gf53.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt2a_gf53.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $x) {\n        if (is_int($x) && $x %\
    \ 2 == 1) {\n            $sum += $x * $x;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6cghfyuu.php:25\n\
    Stack trace:\n#0 /tmp/tmp6cghfyuu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6cghfyuu.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$oddSquares = 0;\n\tforeach ($lst as $number) {\n\t\tif (is_int($number)\
    \ && $number >= 0 && $number % 2 != 0) {\n\t\t\t$oddSquares += pow($number, 2);\n\
    \t\t}\n\t}\n\treturn $oddSquares;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpnsvw4u.php:24\n\
    Stack trace:\n#0 /tmp/tmpbpnsvw4u.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbpnsvw4u.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $total = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            if ($item % 2 == 1) {\n                $total +=\
    \ pow($item, 2);\n            }\n        }\n    }\n    return $total;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknrk822o.php:26\n\
    Stack trace:\n#0 /tmp/tmpknrk822o.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknrk822o.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\n}\n\necho 'sum of squares of the numbers in the list that are odd: ' .\
    \ double_the_difference([1, 3, 2, 0]) . '<br>';\necho 'sum of squares of the numbers\
    \ in the list that are odd: ' . double_the_difference([-1, -2, 0]) . '<br>';\n\
    echo 'sum of squares of the numbers in the list that are odd: ' . double_the_difference([9,\
    \ -2]) . '<br>';\necho 'sum of squares of the numbers in the list that are odd:\
    \ ' . double_the_difference([0]) . '<br>';\necho 'sum of squares of the numbers\
    \ in the list that are odd: ' . double_the_difference([]) . '<br>';\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "sum of squares of the numbers in the list that are odd: <br>sum of squares\
    \ of the numbers in the list that are odd: <br>sum of squares of the numbers in\
    \ the list that are odd: <br>sum of squares of the numbers in the list that are\
    \ odd: <br>sum of squares of the numbers in the list that are odd: <br>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpy6w17g2d.php:24\nStack trace:\n\
    #0 /tmp/tmpy6w17g2d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpy6w17g2d.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $squares = 0;\n  foreach ($lst as $n) {\n    if (is_integer($n) && $n >\
    \ 0 && $n % 2 == 1) {\n      $squares += $n * $n;\n    }\n  }\n  return $squares;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw398uhl.php:25\n\
    Stack trace:\n#0 /tmp/tmprw398uhl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprw398uhl.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\treturn array_reduce($lst, function($carry, $item) {\n\t\tif (is_int($item)\
    \ && $item > 0) {\n\t\t\treturn $carry + ($item % 2 ? $item * $item : 0);\n\t\t\
    }\n\t\treturn $carry;\n\t}, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a7xg2m3.php:24\n\
    Stack trace:\n#0 /tmp/tmp0a7xg2m3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0a7xg2m3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpveguh5xd.php:18\n\
    Stack trace:\n#0 /tmp/tmpveguh5xd.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpveguh5xd.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odds = array_filter($lst, function($num) {\n        return $num % 2\
    \ != 0 && $num >= 0 && is_int($num);\n    });\n    return array_sum(array_map(function($n)\
    \ { return $n * $n; }, $odds));\n}\n$total = double_the_difference([1, 3, 2, 0]);\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmproyn6u7i.php:22\n\
    Stack trace:\n#0 /tmp/tmproyn6u7i.php(30): test()\n#1 {main}\n  thrown in /tmp/tmproyn6u7i.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return 0;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkbv6rwrl.php:18\n\
    Stack trace:\n#0 /tmp/tmpkbv6rwrl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpkbv6rwrl.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif(empty($lst)) {\n\t\treturn 0;\n\t}\n\n\t$sum = 0;\n\tforeach($lst as\
    \ $n) {\n\t\tif(is_numeric($n) && $n >= 0 && $n == (int)$n) {\n\t\t\tif($n % 2\
    \ != 0) {\n\t\t\t\t$sum += $n * $n;\n\t\t\t}\n\t\t}\n\t}\n\treturn $sum;\n}\n\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhrgsnu0.php:31\n\
    Stack trace:\n#0 /tmp/tmpbhrgsnu0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbhrgsnu0.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  \n}\necho double_the_difference([1, 3, 2, 0]) . \"\\n\"; // 1 + 9 + 0 +\
    \ 0 = 10\necho double_the_difference([-1, -2, 0]) . \"\\n\"; // 0\necho double_the_difference([9,\
    \ -2]) . \"\\n\"; // 81\necho double_the_difference([0]) . \"\\n\"; // 0  \necho\
    \ double_the_difference([]) . \"\\n\"; // 0\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpir0v2y_s.php:22\n\
    Stack trace:\n#0 /tmp/tmpir0v2y_s.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpir0v2y_s.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num % 2 == 1 &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi28451ir.php:25\n\
    Stack trace:\n#0 /tmp/tmpi28451ir.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpi28451ir.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odd = [];\n    $even = [];\n    $result = 0;\n    for ($i = 0; $i <\
    \ count($lst); $i++) {\n        if ($lst[$i] % 2 == 0) {\n            array_push($even,\
    \ $lst[$i]);\n        } else {\n            array_push($odd, $lst[$i]);\n    \
    \    }\n    }\n    for ($i = 0; $i < count($odd); $i++) {\n        $result +=\
    \ $odd[$i] ** 2;\n    }\n    for ($i = 0; $i < count($even); $i++) {\n       \
    \ $result -= $even[$i] ** 2;\n    }\n    return $result;\n}\n\n$input1 = array(1,\
    \ 3, 2, 0);\n$input2 = array(-1, -2, 0);\n$input3 = array(9, -2);\n$input4 = array(0);\n\
    $input5 = array();\necho \"Test case 1:\" . double_the_difference($input1) . \"\
    \\n\";\necho \"Test case 2:\" . double_the_difference($input2) . \"\\n\";\necho\
    \ \"Test case 3:\" . double_the_difference($input3) . \"\\n\";\necho \"Test case\
    \ 4:\" . double_the_difference($input4) . \"\\n\";\necho \"Test case 5:\" . double_the_difference($input5)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Test case 1:6\nTest case 2:-3\nTest case 3:77\nTest case 4:0\nTest case\
    \ 5:0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4pkx40x.php:45\n\
    Stack trace:\n#0 /tmp/tmpr4pkx40x.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpr4pkx40x.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6207njb.php:18\n\
    Stack trace:\n#0 /tmp/tmp_6207njb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_6207njb.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $total = 0;\n  foreach ($lst as $item) {\n    if (is_int($item) && $item\
    \ >= 0) {\n      if ($item % 2 == 1) {\n        $total += $item * $item;\n   \
    \   }\n    }\n  }\n  return $total;\n}\n\nfunction candidate(...$args) {\n   \
    \ return double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_tt2vmm.php:27\n\
    Stack trace:\n#0 /tmp/tmpc_tt2vmm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpc_tt2vmm.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $total = 0;\n    foreach ($lst as $item) {\n        if ($item % 2 !=\
    \ 0) {\n            $total += pow($item, 2);\n        }\n    }\n    return $total;\n\
    }\n\necho double_the_difference([1, 3, 2, 0]) . \"\\n\";\necho double_the_difference([-1,\
    \ -2, 0]) . \"\\n\";\necho double_the_difference([9, -2]) . \"\\n\";\necho double_the_difference([0])\
    \ . \"\\n\";\necho double_the_difference([]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n1\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeq0gxv6z.php:30\n\
    Stack trace:\n#0 /tmp/tmpeq0gxv6z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpeq0gxv6z.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_numeric($num)\
    \ && fmod($num, 2) != 0 && $num >= 0) {\n            $sum += pow($num, 2);\n \
    \       }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3hzy5ja.php:25\n\
    Stack trace:\n#0 /tmp/tmpz3hzy5ja.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz3hzy5ja.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    if (count($lst) == 0) {\n        return 0;\n    }\n  \
    \  foreach ($lst as $item) {\n        if (gettype($item) != \"integer\" || $item\
    \ < 0) {\n            continue;\n        }\n        if ($item % 2 == 1) {\n  \
    \          $sum += pow($item, 2);\n        }\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5u97qjcg.php:31\n\
    Stack trace:\n#0 /tmp/tmp5u97qjcg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5u97qjcg.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$lst2 = array_filter($lst, function($v) { return $v > 0 && is_int($v);\
    \ });\n\t$lst3 = array_map(function($v) { return pow($v, 2); }, $lst2);\n\t$sum\
    \ = array_sum($lst3);\n\treturn $sum;\n}\necho double_the_difference([1, 3, 2,\
    \ 0]) . \"<br>\";\necho double_the_difference([-1, -2, 0]) . \"<br>\";\necho double_the_difference([9,\
    \ -2]) . \"<br>\";\necho double_the_difference([0]) . \"<br>\";\necho double_the_difference([])\
    \ . \"<br>\";\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>0<br>81<br>0<br>0<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpfjbm0uvh.php:26\nStack trace:\n#0 /tmp/tmpfjbm0uvh.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpfjbm0uvh.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif ((is_int($num) && ($num >\
    \ 0)) && $num % 2 !== 0) {\n\t\t\t$sum += $num * $num;\n\t\t}\n\t}\n\treturn $sum;\n\
    }\n\necho double_the_difference([1, 3, 2, 0]) . \"\\n\";\necho double_the_difference([-1,\
    \ -2, 0]) . \"\\n\";\necho double_the_difference([9, -2]) . \"\\n\";\necho double_the_difference([0])\
    \ . \"\\n\";\necho double_the_difference([]) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq2mro7nc.php:31\n\
    Stack trace:\n#0 /tmp/tmpq2mro7nc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq2mro7nc.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            if ($item % 2 == 1) {\n                $sum += $item*$item;\n\
    \            }\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwiigajlo.php:26\n\
    Stack trace:\n#0 /tmp/tmpwiigajlo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwiigajlo.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Your code here\n    $ans = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if (is_int($lst[$i]) && ($lst[$i] > 0)) {\n            if ($lst[$i]\
    \ % 2 == 1) {\n                $ans += $lst[$i] * $lst[$i];\n            }\n \
    \       }\n    }\n    return $ans;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3oeuhil.php:27\n\
    Stack trace:\n#0 /tmp/tmpn3oeuhil.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn3oeuhil.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    if(!empty($lst)){\n        foreach($lst as $num){\n  \
    \          if($num < 0 || !is_integer($num)){\n                continue;\n   \
    \         }\n            $sum += $num ** 2;\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayr786fr.php:27\n\
    Stack trace:\n#0 /tmp/tmpayr786fr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpayr786fr.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_int($lst[$i])\
    \ && $lst[$i] >= 0 && $lst[$i] % 2 == 1) {\n            $sum += $lst[$i] * $lst[$i];\n\
    \        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n   \
    \ return double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_qbzcjn.php:25\n\
    Stack trace:\n#0 /tmp/tmp2_qbzcjn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2_qbzcjn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  \n  // Fill in the code here.\n  $sum = 0;\n  foreach ($lst as $number)\
    \ {\n    if (is_int($number) && $number >= 0 && $number % 2 == 1) {\n      $sum\
    \ += pow($number, 2);\n    }\n  }\n  return $sum;\n}\n\necho double_the_difference([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9]) . \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "165\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw83bl31.php:28\n\
    Stack trace:\n#0 /tmp/tmptw83bl31.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptw83bl31.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odd_squares = array_filter($lst, function($val) {\n        return is_int($val)\
    \ && $val > 0 && ($val % 2 === 1);\n    });\n    $sum = array_reduce($odd_squares,\
    \ function($acc, $val) {\n        return $acc + pow($val, 2);\n    }, 0);\n  \
    \  return $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1k2_43hg.php:24\n\
    Stack trace:\n#0 /tmp/tmp1k2_43hg.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1k2_43hg.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$doubled = array_map(function($n) { return $n * 2; }, $lst);\n\treturn\
    \ array_sum($doubled);\n}\necho double_the_difference([1, 3, 2, 0]).\"\\n\";\n\
    echo double_the_difference([-1, -2, 0]).\"\\n\";\necho double_the_difference([9,\
    \ -2]).\"\\n\";\necho double_the_difference([0]).\"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "12\n-6\n14\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyevoqgnb.php:24\n\
    Stack trace:\n#0 /tmp/tmpyevoqgnb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpyevoqgnb.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpol97a9sh.php:17\n\
    Stack trace:\n#0 /tmp/tmpol97a9sh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpol97a9sh.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $x) {\n    if (is_int($x) && $x >= 0) {\n\
    \      if ($x % 2 != 0) {\n        $sum += $x * $x;\n      }\n    }\n  }\n  return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9ct0yzk.php:26\n\
    Stack trace:\n#0 /tmp/tmpr9ct0yzk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr9ct0yzk.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  // Write your code here.\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxtbtoqf.php:17\n\
    Stack trace:\n#0 /tmp/tmptxtbtoqf.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptxtbtoqf.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $n) {\n        if (is_int($n) && ($n\
    \ > 0)) {\n            $sum += ($n % 2) ? $n * $n : 0;\n        }\n    }\n   \
    \ return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqlhpz2fx.php:25\n\
    Stack trace:\n#0 /tmp/tmpqlhpz2fx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqlhpz2fx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  $lstLength = count($lst);\n  if ($lstLength == 0) {\n    return\
    \ 0;\n  }\n  for ($i = 0; $i < $lstLength; $i++) {\n    if ($lst[$i] % 2 == 1)\
    \ {\n      $sum += pow($lst[$i], 2);\n    }\n  }\n  return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_rfy3q_.php:28\n\
    Stack trace:\n#0 /tmp/tmpw_rfy3q_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpw_rfy3q_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $lst = array_filter($lst, 'is_numeric');\n    $lst = array_map('intval',\
    \ $lst);\n    $lst = array_filter($lst, function($num) {\n        return $num\
    \ > 0;\n    });\n    $lst = array_map(function($num) {\n        return $num *\
    \ $num;\n    }, $lst);\n    return array_sum($lst);\n}\n\nvar_dump(double_the_difference([1,\
    \ 3, 2, 0]));\nvar_dump(double_the_difference([-1, -2, 0]));\nvar_dump(double_the_difference([9,\
    \ -2]));\nvar_dump(double_the_difference([0]));\nvar_dump(double_the_difference([]));\n\
    \nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "int(14)\nint(0)\nint(81)\nint(0)\nint(0)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpowaonufn.php:33\nStack trace:\n#0 /tmp/tmpowaonufn.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpowaonufn.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $value) {\n    if (is_int($value) && $value\
    \ > 0) {\n      if ($value % 2 == 1) {\n        $sum += $value * $value;\n   \
    \   }\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpum6qsdar.php:27\n\
    Stack trace:\n#0 /tmp/tmpum6qsdar.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpum6qsdar.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n   return array_reduce($lst, function($acc, $val) {\n       if ($val % 2\
    \ == 1) {\n           return $acc + $val * $val;\n       } else {\n          \
    \ return $acc;\n       }\n   }, 0);\n}\n\nfunction candidate(...$args) {\n   \
    \ return double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppeo048kr.php:25\n\
    Stack trace:\n#0 /tmp/tmppeo048kr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppeo048kr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $i = 0;\n  $sum = 0;\n  while ($i < count($lst)) {\n    if (($lst[$i] >=\
    \ 0) && (is_int($lst[$i]))) {\n      if ($lst[$i] % 2 !== 0) {\n        $sum +=\
    \ $lst[$i] ** 2;\n      }\n    }\n    $i += 1;\n  }\n  return $sum;\n}\necho double_the_difference([1,\
    \ 3, 2, 0]);\necho double_the_difference([-1, -2, 0]);\necho double_the_difference([9,\
    \ -2]);\necho double_the_difference([0]);\necho double_the_difference([]);\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1008100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgctz4td6.php:33\n\
    Stack trace:\n#0 /tmp/tmpgctz4td6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgctz4td6.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj42ix6t3.php:16\n\
    Stack trace:\n#0 /tmp/tmpj42ix6t3.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj42ix6t3.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0sguezg.php:18\n\
    Stack trace:\n#0 /tmp/tmph0sguezg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmph0sguezg.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $item) {\n    if (is_int($item) && $item\
    \ > 0) {\n      if ($item % 2 == 1) {\n        $sum += $item * $item;\n      }\n\
    \    }\n  }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqtfie4nh.php:26\n\
    Stack trace:\n#0 /tmp/tmpqtfie4nh.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpqtfie4nh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return 0;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0o3tlzrd.php:18\n\
    Stack trace:\n#0 /tmp/tmp0o3tlzrd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0o3tlzrd.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $dbl_dif = 0;\n  if (count($lst) == 0) {\n    return 0;\n  }\n  for ($i\
    \ = 0; $i < count($lst); $i++) {\n    if (($lst[$i] % 2) == 1 && $lst[$i] > 0)\
    \ {\n      $dbl_dif += pow($lst[$i], 2);\n    }\n  }\n  return $dbl_dif;\n}\n\n\
    $test1 = [1, 3, 2, 0];\n$test2 = [-1, -2, 0];\n$test3 = [9, -2];\n$test4 = [0];\n\
    $test5 = [];\n\necho \"Test 1: \" . double_the_difference($test1) . \"\\n\";\n\
    echo \"Test 2: \" . double_the_difference($test2) . \"\\n\";\necho \"Test 3: \"\
    \ . double_the_difference($test3) . \"\\n\";\necho \"Test 4: \" . double_the_difference($test4)\
    \ . \"\\n\";\necho \"Test 5: \" . double_the_difference($test5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Test 1: 10\nTest 2: 0\nTest 3: 81\nTest 4: 0\nTest 5: 0\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp_xvmwp7j.php:39\nStack trace:\n\
    #0 /tmp/tmp_xvmwp7j.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp_xvmwp7j.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$double = [];\n\t$odd = [];\n\tfor ($i = 0; $i < count($lst); $i++){\n\t\
    \tif(is_int($lst[$i]) && $lst[$i] > 0){\n\t\t\tarray_push($double, $lst[$i] *\
    \ 2);\n\t\t}\n\t}\n\tfor ($i = 0; $i < count($double); $i++){\n\t\tif ($double[$i]\
    \ % 2 != 0){\n\t\t\tarray_push($odd, $double[$i]);\n\t\t}\n\t}\n\tif (count($odd)\
    \ > 0){\n\t\treturn array_sum($odd);\n\t}\n\telse{\n\t\treturn 0;\n\t}\n\t\n}\n\
    \nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0sgmhqyp.php:37\n\
    Stack trace:\n#0 /tmp/tmp0sgmhqyp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0sgmhqyp.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t// Your code here\n\t$s = 0;\n\tforeach ($lst as $i){\n\t\tif (is_integer($i)\
    \ && $i > 0){\n\t\t\tif ($i % 2 != 0){\n\t\t\t\t$s += pow($i, 2);\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $s;\n}\n\necho double_the_difference([1, 3, 2, 0]);\necho \"\
    <br>\";\necho double_the_difference([-1, -2, 0]);\necho \"<br>\";\necho double_the_difference([9,\
    \ -2]);\necho \"<br>\";\necho double_the_difference([0]);\necho \"<br>\";\necho\
    \ double_the_difference([]);\necho \"<br>\";\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10<br>0<br>81<br>0<br>0<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpcgooa86t.php:38\nStack trace:\n#0 /tmp/tmpcgooa86t.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpcgooa86t.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $arr = array_filter($lst, \"getOdd\");\n    $arr = array_map(\"square\"\
    , $arr);\n    $arr = array_sum($arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'getOdd' not found or invalid function name in /tmp/tmp0dgx3php.php on line\
    \ 10\n\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'square' not found or invalid function name in /tmp/tmp0dgx3php.php on line\
    \ 11\n\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp0dgx3php.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0dgx3php.php:21\n\
    Stack trace:\n#0 /tmp/tmp0dgx3php.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0dgx3php.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $double_difference = 0;\n    foreach ($lst as $num) {\n        if ((int)$num\
    \ === $num && $num > 0) {\n            $double_difference += pow($num, 2);\n \
    \       }\n    }\n    return $double_difference;\n}\necho double_the_difference([1,\
    \ 3, 2, 0]);\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4lb80xuc.php:26\n\
    Stack trace:\n#0 /tmp/tmp4lb80xuc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4lb80xuc.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = 0;\n    foreach ($lst as $number) {\n        if ($number %\
    \ 2 == 1 && $number > 0) {\n            $result += $number * $number;\n      \
    \  }\n    }\n    return $result;\n}\nprint(double_the_difference([1, 3, 2, 0])\
    \ . \"\\n\");\nprint(double_the_difference([-1, -2, 0]) . \"\\n\");\nprint(double_the_difference([9,\
    \ -2]) . \"\\n\");\nprint(double_the_difference([0]) . \"\\n\");\nprint(double_the_difference([])\
    \ . \"\\n\");\nprint(double_the_difference([1.5, 2.3, -4]) . \"\\n\");\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n0\n2.25\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpugykomw0.php:30\nStack trace:\n#0 /tmp/tmpugykomw0.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmpugykomw0.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num % 2 != 0) {\n\
    \            $sum += pow($num, 2);\n        }\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnjonm3yj.php:24\n\
    Stack trace:\n#0 /tmp/tmpnjonm3yj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnjonm3yj.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t// $counter = 0;\n\t// for ($i = 0; $i < count($lst); $i++) {\n\t// \t\
    if (is_integer($lst[$i]) && $lst[$i] > 0) {\n\t// \t\tif ($lst[$i] % 2 == 1) {\n\
    \t// \t\t\t$counter += pow($lst[$i], 2);\n\t// \t\t}\n\t// \t}\n\t// }\n\t// return\
    \ $counter;\n\treturn array_reduce($lst, function($acc, $x) {\n\t\treturn (is_integer($x)\
    \ && $x > 0 && $x % 2 == 1) ? $acc + pow($x, 2) : $acc;\n\t}, 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29pvs2ii.php:30\n\
    Stack trace:\n#0 /tmp/tmp29pvs2ii.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp29pvs2ii.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num > 0 && $num\
    \ % 2 == 1) {\n            $sum += $num ** 2;\n        }\n    }\n    return $sum;\n\
    }\necho double_the_difference([1, 3, 2, 0]) . \"\\n\";\necho double_the_difference([-1,\
    \ -2, 0]) . \"\\n\";\necho double_the_difference([9, -2]) . \"\\n\";\necho double_the_difference([0])\
    \ . \"\\n\";\necho double_the_difference([]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvn0u94b5.php:29\n\
    Stack trace:\n#0 /tmp/tmpvn0u94b5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvn0u94b5.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $total = 0;\n  foreach ($lst as $x) {\n    if ($x > 0 && (float)$x == $x)\
    \ {\n      $total += pow($x, 2);\n    }\n  }\n  return $total;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0s_d5_9.php:24\n\
    Stack trace:\n#0 /tmp/tmpg0s_d5_9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg0s_d5_9.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif ($num % 2 == 1) {\n\t\t\t\
    $sum += $num * $num;\n\t\t}\n\t}\n\treturn $sum;\n}\necho double_the_difference([1,\
    \ 3, 2, 0]) . \"\\n\";\necho double_the_difference([-1, -2, 0]) . \"\\n\";\necho\
    \ double_the_difference([9, -2]) . \"\\n\";\necho double_the_difference([0]) .\
    \ \"\\n\";\necho double_the_difference([]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo40zdhcg.php:29\n\
    Stack trace:\n#0 /tmp/tmpo40zdhcg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpo40zdhcg.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // STUB: return 0;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpea25ep90.php:17\n\
    Stack trace:\n#0 /tmp/tmpea25ep90.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpea25ep90.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjffy8tjb.php:17\n\
    Stack trace:\n#0 /tmp/tmpjffy8tjb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjffy8tjb.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            if ($num % 2 != 0) {\n                $sum += $num\
    \ ** 2;\n            }\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzapztpj6.php:26\n\
    Stack trace:\n#0 /tmp/tmpzapztpj6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzapztpj6.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (($num > 0) && (is_int($num)))\
    \ {\n            if (($num % 2) == 1) {\n                $sum += pow($num, 2);\n\
    \            }\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfsgctcq9.php:26\n\
    Stack trace:\n#0 /tmp/tmpfsgctcq9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfsgctcq9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $result = 0;\n  foreach ($lst as $item) {\n    if ((is_int($item) || is_double($item))\
    \ && ($item % 2 == 1)) {\n      $result += $item * $item;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqradz4m3.php:25\n\
    Stack trace:\n#0 /tmp/tmpqradz4m3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqradz4m3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  if (empty($lst)) {\n    return 0;\n  }\n  $odds = array_filter($lst, function($num)\
    \ {\n    return ($num % 2 != 0) and is_int($num);\n  });\n  $odds_sum = array_reduce($odds,\
    \ function($sum, $num) {\n    return $sum + $num;\n  });\n  return $odds_sum *\
    \ 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzv7id4js.php:28\n\
    Stack trace:\n#0 /tmp/tmpzv7id4js.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzv7id4js.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$result = 0;\n\tforeach ($lst as $item) {\n\t\tif (is_int($item) && $item\
    \ > 0) {\n\t\t\tif ($item % 2 === 1) {\n\t\t\t\t$result += pow($item, 2);\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg7v187cu.php:27\n\
    Stack trace:\n#0 /tmp/tmpg7v187cu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpg7v187cu.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t\n\tif (empty($lst)) {\n\t\treturn 0;\n\t}\n\t\n\t$sum = 0;\n\t\n\tfor\
    \ ($i = 0; $i < count($lst); $i++) {\n\t\tif (is_int($lst[$i]) && $lst[$i] > 0)\
    \ {\n\t\t\tif ($lst[$i] % 2 == 1) {\n\t\t\t\t$sum += $lst[$i] ** 2;\n\t\t\t}\n\
    \t\t}\n\t}\n\t\n\treturn $sum;\n}\necho double_the_difference([1, 3, 2, 0]) .\
    \ \"<br />\";\necho double_the_difference([-1, -2, 0]) . \"<br />\";\necho double_the_difference([9,\
    \ -2]) . \"<br />\";\necho double_the_difference([0]) . \"<br />\";\necho double_the_difference([])\
    \ . \"<br />\";\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10<br />0<br />81<br />0<br />0<br />\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpicjqx5uc.php:38\nStack trace:\n#0 /tmp/tmpicjqx5uc.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpicjqx5uc.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $n) {\n        if ($n % 2 != 0) {\n \
    \           $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplz_pf5am.php:25\n\
    Stack trace:\n#0 /tmp/tmplz_pf5am.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplz_pf5am.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  // $sum = 0;\n  // foreach ($lst as $number) {\n  //   if (is_int($number)\
    \ && ($number % 2) !== 0) {\n  //     $sum += pow($number, 2);\n  //   }\n  //\
    \ }\n  // return $sum;\n  return array_reduce($lst, function($acc, $item) {\n\
    \    if (is_int($item) && ($item % 2) !== 0) {\n      return $acc + pow($item,\
    \ 2);\n    }\n    return $acc;\n  }, 0);\n}\n\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprgii96xk.php:31\n\
    Stack trace:\n#0 /tmp/tmprgii96xk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprgii96xk.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $arr = [];\n    foreach ($lst as $i) {\n        if (is_int($i) && $i\
    \ > 0) {\n            $arr[] = $i * $i;\n        }\n    }\n    $a = array_sum($arr);\n\
    \    $b = array_sum($lst);\n    return $a - $b;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0e6qc9g1.php:26\n\
    Stack trace:\n#0 /tmp/tmp0e6qc9g1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0e6qc9g1.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$result = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value) && $value\
    \ > 0) {\n\t\t\tif ($value % 2 == 1) {\n\t\t\t\t$result += pow($value, 2);\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $result;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnjt705rk.php:26\n\
    Stack trace:\n#0 /tmp/tmpnjt705rk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnjt705rk.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $numbers = array_filter($lst, function($n) {\n    return is_numeric($n)\
    \ && $n > 0 && $n == round($n);\n  });\n  $doubled = array_map(function($n) {\n\
    \    return $n * 2;\n  }, $numbers);\n  return array_sum($doubled);\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpanhu2dq1.php:25\n\
    Stack trace:\n#0 /tmp/tmpanhu2dq1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpanhu2dq1.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  $i = 0;\n  while ($i < count($lst)) {\n    if (is_int($lst[$i])\
    \ && $lst[$i] >= 0) {\n      if ($lst[$i] % 2 != 0) {\n        $sum += $lst[$i]\
    \ * $lst[$i];\n      }\n    }\n    $i++;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq5balaaw.php:29\n\
    Stack trace:\n#0 /tmp/tmpq5balaaw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpq5balaaw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = 0;\n    foreach ($lst as $i) {\n        if (is_int($i) && $i\
    \ > 0) {\n            $result += $i ** 2;\n        }\n    }\n    return $result;\n\
    }\necho double_the_difference([1, 3, 2, 0]) . PHP_EOL;\necho double_the_difference([-1,\
    \ -2, 0]) . PHP_EOL;\necho double_the_difference([9, -2]) . PHP_EOL;\necho double_the_difference([0])\
    \ . PHP_EOL;\necho double_the_difference([]) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwa_utfmd.php:30\n\
    Stack trace:\n#0 /tmp/tmpwa_utfmd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwa_utfmd.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $n) {\n        if ($n >= 0 and $n ==\
    \ round($n)) {\n            if ($n % 2 != 0) {\n                $sum += pow($n,\
    \ 2);\n            }\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo56wn6ly.php:27\n\
    Stack trace:\n#0 /tmp/tmpo56wn6ly.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo56wn6ly.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $i) {\n    if (is_integer($i) && $i >= 0\
    \ && $i % 2 != 0) {\n      $sum += $i ** 2;\n    }\n  }\n  return $sum;\n}\n\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocbbmk7i.php:25\n\
    Stack trace:\n#0 /tmp/tmpocbbmk7i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpocbbmk7i.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$s = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_numeric($num) && $num >\
    \ 0 && is_int($num)) {\n\t\t\tif ($num % 2 != 0) {\n\t\t\t\t$s += $num * $num;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $s;\n}\necho double_the_difference([1, 3, 2, 0])\
    \ . \"\\n\";\necho double_the_difference([-1, -2, 0]) . \"\\n\";\necho double_the_difference([9,\
    \ -2]) . \"\\n\";\necho double_the_difference([0]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ounjtkf.php:30\n\
    Stack trace:\n#0 /tmp/tmp2ounjtkf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2ounjtkf.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$value = 0;\n\t$value = array_reduce($lst, function($x, $y) {\n\t\tif (is_int($y)\
    \ && $y > 0) {\n\t\t\tif ($y % 2 == 1) {\n\t\t\t\t$x += $y * $y;\n\t\t\t}\n\t\t\
    }\n\t\treturn $x;\n\t}, 0);\n\treturn $value;\n}\necho double_the_difference([1,\
    \ 3, 2, 0]) . PHP_EOL;\necho double_the_difference([-1, -2, 0]) . PHP_EOL;\necho\
    \ double_the_difference([9, -2]) . PHP_EOL;\necho double_the_difference([0]) .\
    \ PHP_EOL;\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rcetpe0.php:32\n\
    Stack trace:\n#0 /tmp/tmp9rcetpe0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9rcetpe0.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $squares = array_map(function($n) {\n        return $n * $n;\n    },\
    \ $lst);\n    $sum = array_reduce($squares, function($acc, $n) {\n        return\
    \ $acc + $n;\n    }, 0);\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6v_7rcg.php:25\n\
    Stack trace:\n#0 /tmp/tmpa6v_7rcg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpa6v_7rcg.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $result = 0;\n  if (empty($lst)) {\n    return $result;\n  } else {\n \
    \   foreach ($lst as $number) {\n      if (is_int($number) && $number > 0) {\n\
    \        $result += $number * $number;\n      }\n    }\n    return $result;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxt7tq2q_.php:28\n\
    Stack trace:\n#0 /tmp/tmpxt7tq2q_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxt7tq2q_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Your code here\n    $result = 0;\n    foreach ($lst as $value) {\n\
    \        if ($value > 0 && is_int($value)) {\n            $result += $value *\
    \ $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyp8a025.php:26\n\
    Stack trace:\n#0 /tmp/tmphyp8a025.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphyp8a025.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  // Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mzu1wfx.php:17\n\
    Stack trace:\n#0 /tmp/tmp6mzu1wfx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mzu1wfx.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Implement the body of this function\n    $count = 0;\n    $result\
    \ = 0;\n    foreach ($lst as $key) {\n        if ($key%2==1) {\n            $count++;\n\
    \            $result += pow($key, 2);\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5v15ydv.php:28\n\
    Stack trace:\n#0 /tmp/tmpb5v15ydv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb5v15ydv.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5_tobgl.php:19\n\
    Stack trace:\n#0 /tmp/tmpa5_tobgl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa5_tobgl.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return array_reduce($lst, function($acc, $cur) {\n        return ($cur\
    \ > 0 && is_int($cur)) ? $acc + pow($cur, 2) : $acc;\n    }, 0);\n}\n\necho double_the_difference([1,\
    \ 3, 2, 0]);\necho double_the_difference([-1, -2, 0]);\necho double_the_difference([9,\
    \ -2]);\necho double_the_difference([0]);\necho double_the_difference([]);\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1408100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps434spxg.php:26\n\
    Stack trace:\n#0 /tmp/tmps434spxg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmps434spxg.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      if ($num % 2 == 1) {\n        $sum += $num * $num;\n      }\n    }\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5_3aw5c.php:27\n\
    Stack trace:\n#0 /tmp/tmpe5_3aw5c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpe5_3aw5c.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $elem) {\n\t\t$sum += (($elem % 2 == 1) &&\
    \ is_int($elem) && ($elem >= 0)) ? $elem * $elem : 0;\n\t}\n\treturn $sum;\n}\n\
    \nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy0aknax_.php:23\n\
    Stack trace:\n#0 /tmp/tmpy0aknax_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpy0aknax_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Write your code here\n}\n\n/**\n * You can ignore everything below\
    \ this line\n */\n$testCases = [[[1, 3, 2, 0], 10], [[-1, -2, 0], 0], [[9, -2],\
    \ 81], [[0], 0], [[], 0]];\nforeach ($testCases as [$input, $expected]) {\n  \
    \  $result = double_the_difference($input);\n    if ($result !== $expected) {\n\
    \        printf(\"double_the_difference(%s) == %s (expected %s)\\n\", json_encode($input),\
    \ json_encode($result), json_encode($expected));\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "double_the_difference([1,3,2,0]) == null (expected 10)\ndouble_the_difference([-1,-2,0])\
    \ == null (expected 0)\ndouble_the_difference([9,-2]) == null (expected 81)\n\
    double_the_difference([0]) == null (expected 0)\ndouble_the_difference([]) ==\
    \ null (expected 0)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoas3y8bu.php:28\n\
    Stack trace:\n#0 /tmp/tmpoas3y8bu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpoas3y8bu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $n) {\n\t\tif (is_int($n) && $n > 0) {\n\t\
    \t\t$sum += $n * $n;\n\t\t}\n\t}\n\treturn $sum;\n}\necho \"double_the_difference([1,\
    \ 3, 2, 0]) == \" . double_the_difference([1, 3, 2, 0]) . \"\\n\";\necho \"double_the_difference([-1,\
    \ -2, 0]) == \" . double_the_difference([-1, -2, 0]) . \"\\n\";\necho \"double_the_difference([9,\
    \ -2]) == \" . double_the_difference([9, -2]) . \"\\n\";\necho \"double_the_difference([0])\
    \ == \" . double_the_difference([0]) . \"\\n\";\necho \"double_the_difference([])\
    \ == \" . double_the_difference([]) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "double_the_difference([1, 3, 2, 0]) == 14\ndouble_the_difference([-1, -2,\
    \ 0]) == 0\ndouble_the_difference([9, -2]) == 81\ndouble_the_difference([0]) ==\
    \ 0\ndouble_the_difference([]) == 0\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpc8gmgzq_.php:29\nStack trace:\n#0 /tmp/tmpc8gmgzq_.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmpc8gmgzq_.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $n = count($lst);\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        if ($lst[$i] % 2 == 1 and intval($lst[$i]) == $lst[$i]) {\n         \
    \   $sum += $lst[$i] * $lst[$i];\n        }\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjvm47gea.php:25\n\
    Stack trace:\n#0 /tmp/tmpjvm47gea.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjvm47gea.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$result = 0;\n\tforeach ($lst as $n) {\n\t\tif (is_int($n) && $n % 2 ==\
    \ 1) {\n\t\t\t$result += $n * $n;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$input1\
    \ = [1, 3, 2, 0];\n$input2 = [-1, -2, 0];\n$input3 = [9, -2];\n$input4 = [0];\n\
    $input5 = [];\n\necho double_the_difference($input1) . \"\\n\";\necho double_the_difference($input2)\
    \ . \"\\n\";\necho double_the_difference($input3) . \"\\n\";\necho double_the_difference($input4)\
    \ . \"\\n\";\necho double_the_difference($input5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp085ipdsl.php:36\n\
    Stack trace:\n#0 /tmp/tmp085ipdsl.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp085ipdsl.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if (is_int($lst[$i])\
    \ && $lst[$i] > 0) {\n      if ($lst[$i] % 2 == 1) {\n        $sum += $lst[$i]\
    \ * $lst[$i];\n      }\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78__8j66.php:26\n\
    Stack trace:\n#0 /tmp/tmp78__8j66.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp78__8j66.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  return double_the_difference_iter($lst, 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function double_the_difference_iter()\
    \ in /tmp/tmpouviegq_.php:10\nStack trace:\n#0 /tmp/tmpouviegq_.php(14): double_the_difference(Array)\n\
    #1 /tmp/tmpouviegq_.php(18): candidate(Array)\n#2 /tmp/tmpouviegq_.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmpouviegq_.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n   // your code goes here\n   \n   $sum = 0;\n   for($i = 0; $i < count($lst);\
    \ $i++){\n      if($lst[$i] % 2 != 0){\n         $sum += $lst[$i] * $lst[$i];\n\
    \      }\n   }\n   return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpikvi7p6g.php:27\n\
    Stack trace:\n#0 /tmp/tmpikvi7p6g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpikvi7p6g.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (gettype($lst[$i])\
    \ == \"integer\" && $lst[$i] > 0) {\n            if ($lst[$i] % 2 == 1) {\n  \
    \              $sum += pow($lst[$i], 2);\n            }\n        }\n    }\n  \
    \  return $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuml0j9u.php:26\n\
    Stack trace:\n#0 /tmp/tmpvuml0j9u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvuml0j9u.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $newList = [];\n    foreach ($lst as $number) {\n        if (is_int($number)\
    \ && $number >= 0) {\n            if ($number % 2 == 1) {\n                array_push($newList,\
    \ $number);\n            }\n        }\n    }\n    $sum = 0;\n    foreach ($newList\
    \ as $number) {\n        $sum += pow($number, 2);\n    }\n    return $sum;\n}\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2kl2t70x.php:30\n\
    Stack trace:\n#0 /tmp/tmp2kl2t70x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2kl2t70x.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ws_7uwx.php:19\n\
    Stack trace:\n#0 /tmp/tmp6ws_7uwx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6ws_7uwx.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item >= 0) {\n            if ($item % 2 != 0) {\n                $sum += $item\
    \ ** 2;\n            }\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkr0vvh3.php:26\n\
    Stack trace:\n#0 /tmp/tmprkr0vvh3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprkr0vvh3.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $result += $num ** 2;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc29z3b02.php:25\n\
    Stack trace:\n#0 /tmp/tmpc29z3b02.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpc29z3b02.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  return 0;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xny2v_d.php:19\n\
    Stack trace:\n#0 /tmp/tmp3xny2v_d.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3xny2v_d.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (!is_int($num) || $num <\
    \ 0) continue;\n\t\t$sum += pow($num, 2);\n\t}\n\treturn $sum;\n}\necho double_the_difference([1,\
    \ 3, 2, 0]) . \"\\n\"; // 10\necho double_the_difference([-1, -2, 0]) . \"\\n\"\
    ; // 0\necho double_the_difference([9, -2]) . \"\\n\"; // 81\necho double_the_difference([0])\
    \ . \"\\n\"; // 0\necho double_the_difference([]) . \"\\n\"; // 0\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasn1hps2.php:28\n\
    Stack trace:\n#0 /tmp/tmpasn1hps2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpasn1hps2.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjtik6oq.php:18\n\
    Stack trace:\n#0 /tmp/tmpmjtik6oq.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmjtik6oq.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_int($lst[$i])\
    \ && $lst[$i] % 2 == 1) {\n            $sum += $lst[$i] ** 2;\n        }\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tam8hdd.php:25\n\
    Stack trace:\n#0 /tmp/tmp2tam8hdd.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2tam8hdd.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $val) {\n        if (is_int($val) &&\
    \ $val % 2 != 0) {\n            $sum += $val * $val;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8gmvd52.php:24\n\
    Stack trace:\n#0 /tmp/tmpt8gmvd52.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpt8gmvd52.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$result = 0;\n\tforeach ($lst as $value) {\n\t\tif (gettype($value) !=\
    \ \"integer\" || $value < 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ($value % 2 ==\
    \ 1) {\n\t\t\t$result += pow($value, 2);\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzi7j7o_.php:28\n\
    Stack trace:\n#0 /tmp/tmpgzi7j7o_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgzi7j7o_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $n) {\n\t\tif ((int)$n != $n || $n < 0) {\n\
    \t\t\tcontinue;\n\t\t} elseif ($n % 2 == 1) {\n\t\t\t$sum += $n*$n;\n\t\t}\n\t\
    }\n\treturn $sum;\n}\necho double_the_difference([0]).\"\\n\";\necho double_the_difference([1,\
    \ 3, 2, 0]).\"\\n\";\necho double_the_difference([-1, -2, 0]).\"\\n\";\necho double_the_difference([9,\
    \ -2]).\"\\n\";\necho double_the_difference([0]).\"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n10\n0\n81\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1axvmku.php:32\n\
    Stack trace:\n#0 /tmp/tmpv1axvmku.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpv1axvmku.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Write your code here\n    $sum = 0;\n    foreach ($lst as $item) {\n\
    \        if (is_int($item) && $item > 0 && $item % 2 === 1) {\n            $sum\
    \ += $item * $item;\n        }\n    }\n    return $sum;\n}\n\n$answer = double_the_difference([1,\
    \ 3, 2, 0]);\nprint(\"$answer\\n\");\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xc_oh5o.php:28\n\
    Stack trace:\n#0 /tmp/tmp2xc_oh5o.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2xc_oh5o.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$squares = function($n){\n\t\treturn $n*$n;\n\t};\n\t$is_odd = function($n){\n\
    \t\treturn ($n % 2 == 1);\n\t};\n\treturn array_sum(\n\t\tarray_map(\n\t\t\t$squares,\n\
    \t\t\tarray_filter(\n\t\t\t\t$lst,\n\t\t\t\t$is_odd\n\t\t\t)\n\t\t)\n\t);\n}\n\
    \nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfqak_gcr.php:33\n\
    Stack trace:\n#0 /tmp/tmpfqak_gcr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfqak_gcr.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return array_reduce($lst, function($acc, $item) {\n        return !is_int($item)\
    \ || $item < 0 ? $acc : $acc + pow($item, 2);\n    }, 0);\n}\n\nassert_options(ASSERT_BAIL,\
    \ 1);\nassert(double_the_difference([1, 3, 2, 0]) == 10);\nassert(double_the_difference([-1,\
    \ -2, 0]) == 0);\nassert(double_the_difference([9, -2]) == 81);\nassert(double_the_difference([0])\
    \ == 0);\nassert(double_the_difference([]) == 0);\nassert(double_the_difference([4,\
    \ 5.4, -7, 'NaN', 'text']) == 81);\n\necho \"All assertions ran successfully\\\
    n\";\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): assert(double_the_difference([1, 3, 2, 0]) == 10)\
    \ failed in /tmp/tmpt17ni9ox.php on line 16\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmbw6s7a.php:16\n\
    Stack trace:\n#0 /tmp/tmpgmbw6s7a.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgmbw6s7a.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $total = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num >\
    \ 0) {\n      $total += $num ** 2;\n    }\n  }\n  return $total;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptqk7culx.php:24\n\
    Stack trace:\n#0 /tmp/tmptqk7culx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptqk7culx.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  if (empty($lst)) {\n    return 0;\n  }\n  $output = 0;\n  foreach ($lst\
    \ as $item) {\n    if (is_int($item) && $item > 0) {\n      if ($item % 2 == 1)\
    \ {\n        $output += pow($item, 2);\n      }\n    }\n  }\n  return $output;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8edi1_6h.php:30\n\
    Stack trace:\n#0 /tmp/tmp8edi1_6h.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8edi1_6h.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $elem) {\n\t\tif (($elem % 2 == 1) && ($elem\
    \ > 0) && (is_integer($elem))) {\n\t\t\t$sum += $elem ** 2;\n\t\t}\n\t}\n\treturn\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgoupgcpn.php:25\n\
    Stack trace:\n#0 /tmp/tmpgoupgcpn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgoupgcpn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $val) {\n        if (is_numeric($val)\
    \ && $val > 0 && $val == round($val)) {\n            if ($val % 2 == 1) {\n  \
    \              $sum += pow($val, 2);\n            }\n        }\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjk_qxrta.php:27\n\
    Stack trace:\n#0 /tmp/tmpjk_qxrta.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjk_qxrta.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = 0;\n    if (!empty($lst)) {\n        foreach ($lst as $value)\
    \ {\n            if (($value > 0) && is_int($value)) {\n                if ($value\
    \ % 2 != 0) {\n                    $result += $value * $value;\n             \
    \   }\n            }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hhat1gb.php:28\n\
    Stack trace:\n#0 /tmp/tmp_hhat1gb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_hhat1gb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // your code here\n    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if (is_int($lst[$i]) && ($lst[$i] % 2 != 0)) {\n          \
    \  $sum += $lst[$i] * $lst[$i];\n        }\n    }\n    return $sum;\n}\necho double_the_difference([1,\
    \ 3, 2, 0]);\n\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt5qmu9s.php:29\n\
    Stack trace:\n#0 /tmp/tmpdt5qmu9s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdt5qmu9s.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $odd_lst = array_filter($lst, function($x) {\n    return is_numeric($x)\
    \ && floor($x) == $x && $x > 0;\n  });\n  $odd_squares = array_map(function($x)\
    \ {\n    return $x * $x;\n  }, $odd_lst);\n  return array_sum($odd_squares);\n\
    }\n\n$list1 = [1, 3, 2, 0];\n$list2 = [-1, -2, 0];\n$list3 = [9, -2];\n$list4\
    \ = [0];\n\necho double_the_difference($list1);\necho PHP_EOL;\necho double_the_difference($list2);\n\
    echo PHP_EOL;\necho double_the_difference($list3);\necho PHP_EOL;\necho double_the_difference($list4);\n\
    echo PHP_EOL;\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n0\n81\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qzr7jii.php:38\n\
    Stack trace:\n#0 /tmp/tmp2qzr7jii.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp2qzr7jii.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $item) {\n    if (is_int($item) && $item\
    \ > 0) {\n      if ($item % 2) {\n        $sum += $item * $item;\n      }\n  \
    \  }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4fwila1.php:27\n\
    Stack trace:\n#0 /tmp/tmpq4fwila1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpq4fwila1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxiy9mln1.php:17\n\
    Stack trace:\n#0 /tmp/tmpxiy9mln1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxiy9mln1.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$len = count($lst);\n\tif ($len == 0) {\n\t\treturn 0;\n\t}\n\t\n\t$total\
    \ = 0;\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tif (is_integer($lst[$i]) && $lst[$i]\
    \ > 0) {\n\t\t\t$total += pow($lst[$i], 2);\n\t\t}\n\t}\n\treturn $total;\n}\n\
    \nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctue5efm.php:30\n\
    Stack trace:\n#0 /tmp/tmpctue5efm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpctue5efm.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\treturn 0;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06gbyhd0.php:19\n\
    Stack trace:\n#0 /tmp/tmp06gbyhd0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp06gbyhd0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $x) {\n        if (is_int($x) && $x >\
    \ 0) {\n            $sum += pow($x, 2);\n        }\n    }\n    return $sum;\n\
    }\necho double_the_difference([1, 3, 2, 0]); // 10\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqne8mvw.php:25\n\
    Stack trace:\n#0 /tmp/tmpxqne8mvw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxqne8mvw.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  return 0;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpls6__grg.php:19\n\
    Stack trace:\n#0 /tmp/tmpls6__grg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpls6__grg.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $number) {\n    if (($number % 2 != 0) &&\
    \ is_int($number) && ($number > 0)) {\n      $sum += $number * $number;\n    }\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zn9ptsb.php:25\n\
    Stack trace:\n#0 /tmp/tmp9zn9ptsb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9zn9ptsb.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5fae1wa.php:17\n\
    Stack trace:\n#0 /tmp/tmpy5fae1wa.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpy5fae1wa.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $n) {\n        if (is_int($n) && $n >\
    \ 0) {\n            $sum += $n % 2 == 0 ? pow($n, 2) : 0;\n        }\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5liqlqae.php:25\n\
    Stack trace:\n#0 /tmp/tmp5liqlqae.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5liqlqae.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $n) {\n\t\tif ($n % 2 == 1 && is_int($n)\
    \ && $n >= 0) {\n\t\t\t$sum += pow($n, 2);\n\t\t}\n\t}\n\treturn $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnvdo10za.php:24\n\
    Stack trace:\n#0 /tmp/tmpnvdo10za.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnvdo10za.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      if ($num % 2 == 1) {\n        $sum += $num * $num;\n      }\n    }\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicqfgshg.php:27\n\
    Stack trace:\n#0 /tmp/tmpicqfgshg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpicqfgshg.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $odds = array_filter($lst, function($num) { return $num % 2 == 1; });\n\
    \  $squares = array_map(function($num) { return $num * $num; }, $odds);\n  return\
    \ array_sum($squares);\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk37p89t6.php:21\n\
    Stack trace:\n#0 /tmp/tmpk37p89t6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpk37p89t6.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t\n}\n\nif (!debug_backtrace()) {\n\t$lst = array(1, 3, 2, 0);\n\tprint_r(double_the_difference($lst));\n\
    \n\t$lst = array(-1, -2, 0);\n\tprint_r(double_the_difference($lst));\n\n\t$lst\
    \ = array(9, -2);\n\tprint_r(double_the_difference($lst));\n\n\t$lst = array(0);\n\
    \tprint_r(double_the_difference($lst));\n\n\t$lst = array();\n\tprint_r(double_the_difference($lst));\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvavt7u92.php:34\n\
    Stack trace:\n#0 /tmp/tmpvavt7u92.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpvavt7u92.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpitp3p8ed.php:18\n\
    Stack trace:\n#0 /tmp/tmpitp3p8ed.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpitp3p8ed.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t//YOUR CODE HERE\n\t$squares = array_map(\n\t\tfunction($n) {\n\t\t\tif\
    \ ($n % 2 == 1) {\n\t\t\t\treturn $n * $n;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\
    \t\t\t}\n\t\t},\n\t\t$lst\n\t);\n\t$s = array_sum($squares);\n\treturn $s;\n}\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dps0gut.php:30\n\
    Stack trace:\n#0 /tmp/tmp8dps0gut.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8dps0gut.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $val) {\n\t\tif ((int)$val % 2 !== 0 && $val\
    \ > 0) {\n\t\t\t$sum += $val * $val;\n\t\t}\n\t}\n\treturn $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdn73_rwq.php:25\n\
    Stack trace:\n#0 /tmp/tmpdn73_rwq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdn73_rwq.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $v) {\n    if (is_int($v) && $v >= 0) {\n\
    \      if ($v % 2 == 1) {\n        $sum += $v*$v;\n      }\n    }\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphh784ruy.php:27\n\
    Stack trace:\n#0 /tmp/tmphh784ruy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphh784ruy.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && ($num >\
    \ 0)) {\n\t\t\tif ($num % 2 == 1) {\n\t\t\t\t$sum += $num * $num;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $sum;\n}\n\necho double_the_difference([1, 3, 2, 0]) . \"\\\
    n\";\necho double_the_difference([-1, -2, 0]) . \"\\n\";\necho double_the_difference([9,\
    \ -2]) . \"\\n\";\necho double_the_difference([0]) . \"\\n\";\necho double_the_difference([])\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fpl4di4.php:32\n\
    Stack trace:\n#0 /tmp/tmp2fpl4di4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2fpl4di4.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp48tsvcqv.php:19\n\
    Stack trace:\n#0 /tmp/tmp48tsvcqv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp48tsvcqv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$lst_odd = array_filter($lst, function($x) { return ($x % 2) == 1; });\n\
    \t$result = array_sum(array_map(function($x) { return $x * $x; }, $lst_odd));\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5922rjt.php:21\n\
    Stack trace:\n#0 /tmp/tmpz5922rjt.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz5922rjt.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1,\
    \ -2, 0]) == 0\n// double_the_difference([9, -2]) == 81\n// double_the_difference([0])\
    \ == 0  \n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $res = 0;\n  foreach ($lst as $n) {\n    if ($n < 0 || $n % 1 != 0) {\n\
    \      continue;\n    }\n    if ($n % 2 == 1) {\n      $res += $n * $n;\n    }\n\
    \  }\n  return $res;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm40gpc91.php:28\n\
    Stack trace:\n#0 /tmp/tmpm40gpc91.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm40gpc91.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception

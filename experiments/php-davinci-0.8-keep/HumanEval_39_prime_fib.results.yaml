name: HumanEval_39_prime_fib
language: php
results:
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 0;\n  $result = 0;\n  $fib = 1;\n  while ($i\
    \ < $n) {\n    $result = $fib;\n    while (!prime($result)) {\n      $result =\
    \ fib($fib);\n      $fib++;\n    }\n    $i++;\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime() in /tmp/tmp0bw77mqb.php:19\n\
    Stack trace:\n#0 /tmp/tmp0bw77mqb.php(29): prime_fib(1)\n#1 /tmp/tmp0bw77mqb.php(33):\
    \ candidate(1)\n#2 /tmp/tmp0bw77mqb.php(45): test()\n#3 {main}\n  thrown in /tmp/tmp0bw77mqb.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = [1, 2];\n\twhile (count($fibs) < $n) {\n\t\
    \t$fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n\t}\n\treturn\
    \ prime($fibs[$n - 1]);\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime() in /tmp/tmpq2afo1bc.php:18\n\
    Stack trace:\n#0 /tmp/tmpq2afo1bc.php(21): prime_fib(1)\n#1 /tmp/tmpq2afo1bc.php(25):\
    \ candidate(1)\n#2 /tmp/tmpq2afo1bc.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpq2afo1bc.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $arrFib = array(2, 3);\n  $j = 3;\n  while (count($arrFib)\
    \ < $n) {\n    $arrFib[] = $arrFib[$j - 1] + $arrFib[$j - 2];\n    $j++;\n  }\n\
    \  $arrPrime = array();\n  foreach ($arrFib as $fib) {\n    if (is_prime($fib))\
    \ {\n      $arrPrime[] = $fib;\n    }\n  }\n  return $arrPrime[$n - 1];\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpvovf_dsv.php:22\nStack trace:\n#0 /tmp/tmpvovf_dsv.php(30): prime_fib(1)\n\
    #1 /tmp/tmpvovf_dsv.php(34): candidate(1)\n#2 /tmp/tmpvovf_dsv.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvovf_dsv.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  // your code here\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptvjok9tm.php:21\n\
    Stack trace:\n#0 /tmp/tmptvjok9tm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptvjok9tm.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = 2;\n\t$i = 1;\n\tdo {\n\t\t$fib = fibonacci($i);\n\
    \t\t$i++;\n\t} while (!(is_prime($fib) && --$n > 0));\n\treturn $fib;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmpg0fpqtv9.php:17\nStack trace:\n#0 /tmp/tmpg0fpqtv9.php(24): prime_fib(1)\n\
    #1 /tmp/tmpg0fpqtv9.php(28): candidate(1)\n#2 /tmp/tmpg0fpqtv9.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg0fpqtv9.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibonacci = array(0, 1);\n  $count = 2;\n  $number\
    \ = 0;\n  while ($count <= $n) {\n    $number = $fibonacci[$count - 1] + $fibonacci[$count\
    \ - 2];\n    if (is_prime($number)) {\n      $fibonacci[] = $number;\n      $count++;\n\
    \    }\n  }\n  return $number;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapslisg8.php:32\n\
    Stack trace:\n#0 /tmp/tmpapslisg8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpapslisg8.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 0) {\n        throw new Exception(\"prime_fib\
    \ expects a non-negative integer\");\n    }\n    $fibs = array(2, 3);\n    $i\
    \ = 2;\n    while (count($fibs) < $n) {\n        $fibs[] = $fibs[$i - 1] + $fibs[$i\
    \ - 2];\n        $i++;\n    }\n    return $fibs[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0bdrqgsh.php:34\n\
    Stack trace:\n#0 /tmp/tmp0bdrqgsh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0bdrqgsh.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib = 2;\n  $i = 0;\n  while (true) {\n    if ($i\
    \ > 0) {\n      $fib = fib($i);\n    }\n    if (is_prime($fib)) {\n      $n--;\n\
    \    }\n    if ($n === 0) {\n      return $fib;\n    }\n    $i++;\n  }\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpzkqua1mj.php:20\nStack trace:\n#0 /tmp/tmpzkqua1mj.php(31): prime_fib(1)\n\
    #1 /tmp/tmpzkqua1mj.php(35): candidate(1)\n#2 /tmp/tmpzkqua1mj.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzkqua1mj.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $a = 2;\n  $b = 3;\n  $i = 2;\n  while ($i < $n) {\n\
    \    $c = $a + $b;\n    $a = $b;\n    $b = $c;\n    if (is_prime($c)) {\n    \
    \  $i++;\n    }\n  }\n  return $c;\n}\n\n$cases = [\n  [1, 2],\n  [2, 3],\n  [3,\
    \ 5],\n  [4, 13],\n  [5, 89],\n];\nrun_tests($cases, 'prime_fib');\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function run_tests() in\
    \ /tmp/tmp1ggll3od.php:35\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp1ggll3od.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib = array(2, 3);\n  for ($i = 2; count($fib) <\
    \ $n; $i++) {\n    $fib[] = $fib[$i - 1] + $fib[$i - 2];\n  }\n  for ($i = count($fib)\
    \ - 1; $i >= 0; $i--) {\n    if (is_prime($fib[$i])) {\n      return $fib[$i];\n\
    \    }\n  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpi0ep4db8.php:19\nStack trace:\n#0 /tmp/tmpi0ep4db8.php(26): prime_fib(1)\n\
    #1 /tmp/tmpi0ep4db8.php(30): candidate(1)\n#2 /tmp/tmpi0ep4db8.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi0ep4db8.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array();\n    $fibs[0] = 0;\n    $fibs[1]\
    \ = 1;\n    $i = 2;\n    $fibs[$i] = $fibs[$i - 1] + $fibs[$i - 2];\n    while\
    \ (true) {\n        if (is_prime($fibs[$i])) {\n            $n--;\n          \
    \  if ($n == 0)\n                return $fibs[$i];\n        }\n        $i++;\n\
    \        $fibs[$i] = $fibs[$i - 1] + $fibs[$i - 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpfq2vkggz.php:20\nStack trace:\n#0 /tmp/tmpfq2vkggz.php(31): prime_fib(1)\n\
    #1 /tmp/tmpfq2vkggz.php(35): candidate(1)\n#2 /tmp/tmpfq2vkggz.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpfq2vkggz.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $primeFib = 2; // Fibonacci value for when n=1\n\
    \    $fib = 3;\n    $prevFib = 2;\n\n    for ($i = 2; $i <= $n; $i++) {\n    \
    \    $fib = $fib + $prevFib;\n        $prevFib = $fib - $prevFib;\n\n        if\
    \ (is_prime($fib)) {\n            $primeFib = $fib;\n        }\n    }\n\n    return\
    \ $primeFib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpt_e1pu2k.php:22\nStack trace:\n#0 /tmp/tmpt_e1pu2k.php(31): prime_fib(2)\n\
    #1 /tmp/tmpt_e1pu2k.php(36): candidate(2)\n#2 /tmp/tmpt_e1pu2k.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpt_e1pu2k.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example: print \"Hello world!\"\
    ;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5hgo75ed.php:24\n\
    Stack trace:\n#0 /tmp/tmp5hgo75ed.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5hgo75ed.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 1) {\n        throw new InvalidArgumentException();\n\
    \    }\n    $index = 0;\n    $a = 0;\n    $b = 1;\n    $c = 1;\n    while ($index\
    \ < $n) {\n        if (is_prime($c)) {\n            $index++;\n        }\n   \
    \     $a = $b;\n        $b = $c;\n        $c = $a + $b;\n    }\n    return $b;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp97xxu158.php:22\nStack trace:\n#0 /tmp/tmp97xxu158.php(33): prime_fib(1)\n\
    #1 /tmp/tmp97xxu158.php(37): candidate(1)\n#2 /tmp/tmp97xxu158.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmp97xxu158.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(2, 3);\n    $i = 0;\n    $f = 5;\n\
    \    while (count($fibs) < $n) {\n        if (is_prime($f)) {\n            array_push($fibs,\
    \ $f);\n        }\n        $f = $fibs[$i] + $fibs[$i + 1];\n        $i++;\n  \
    \  }\n    return $fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpi8z99fox.php:18\nStack trace:\n#0 /tmp/tmpi8z99fox.php(28): prime_fib(3)\n\
    #1 /tmp/tmpi8z99fox.php(34): candidate(3)\n#2 /tmp/tmpi8z99fox.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi8z99fox.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = array(1,1);\n\t$i = 1;\n\twhile ($i < $n) {\n\
    \t\t$i++;\n\t\tarray_push($fib, $fib[$i-1] + $fib[$i-2]);\n\t\tif (is_prime($fib[$i]))\
    \ {\n\t\t\tarray_pop($fib);\n\t\t\t$i--;\n\t\t}\n\t}\n\treturn $fib[$i];\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3j7avu4.php:32\n\
    Stack trace:\n#0 /tmp/tmpm3j7avu4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpm3j7avu4.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = [1, 1];\n  $found = 0;\n  while ($found <\
    \ $n) {\n    $candidate = next($fibs);\n    $found += is_prime($candidate);\n\
    \    $fibs[] = $candidate;\n  }\n  return $candidate;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpn6_fs11g.php:18\nStack trace:\n#0 /tmp/tmpn6_fs11g.php(25): prime_fib(1)\n\
    #1 /tmp/tmpn6_fs11g.php(29): candidate(1)\n#2 /tmp/tmpn6_fs11g.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpn6_fs11g.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$number = 1;\n\t$fib = 1;\n\t$counter = 0;\n\twhile\
    \ ($counter < $n) {\n\t\t$fib = $fib + $number;\n\t\t$number = $fib - $number;\n\
    \t\tif (is_prime($fib)) {\n\t\t\t$counter++;\n\t\t}\n\t}\n\treturn $fib;\n}\n\n\
    echo \"prime_fib(1) = \" . prime_fib(1) . \"\\n\";\necho \"prime_fib(2) = \" .\
    \ prime_fib(2) . \"\\n\";\necho \"prime_fib(3) = \" . prime_fib(3) . \"\\n\";\n\
    echo \"prime_fib(4) = \" . prime_fib(4) . \"\\n\";\necho \"prime_fib(5) = \" .\
    \ prime_fib(5) . \"\\n\";\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpajo2s8cb.php:20\nStack trace:\n#0 /tmp/tmpajo2s8cb.php(27): prime_fib(1)\n\
    #1 {main}\n  thrown in /tmp/tmpajo2s8cb.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 2;\n    $b = 3;\n    $c = 5;\n    for ($i =\
    \ 0; $i < $n - 3; $i++) {\n        if (is_prime($a)) {\n            $res = $a;\n\
    \        }\n        $a = $b;\n        $b = $c;\n        $c = $a + $b;\n    }\n\
    \    return $res;\n}\n\necho \"prime_fib(1) = \" . prime_fib(1) . \"<br>\";\n\
    echo \"prime_fib(2) = \" . prime_fib(2) . \"<br>\";\necho \"prime_fib(3) = \"\
    \ . prime_fib(3) . \"<br>\";\necho \"prime_fib(4) = \" . prime_fib(4) . \"<br>\"\
    ;\necho \"prime_fib(5) = \" . prime_fib(5) . \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "prime_fib(1) = <br>prime_fib(2) = <br>prime_fib(3) = <br>\nFatal error:\
    \ Uncaught Error: Call to undefined function is_prime() in /tmp/tmph7rp638g.php:18\n\
    Stack trace:\n#0 /tmp/tmph7rp638g.php(31): prime_fib(4)\n#1 {main}\n  thrown in\
    \ /tmp/tmph7rp638g.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // TODO\n}\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9hpgxgx.php:21\n\
    Stack trace:\n#0 /tmp/tmpr9hpgxgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpr9hpgxgx.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  // TODO\n}\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_xdnxdo.php:21\n\
    Stack trace:\n#0 /tmp/tmpw_xdnxdo.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw_xdnxdo.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = [1,1];\n  $primes = [2];\n  $start = 3;\n\
    \  $result = 0;\n  while (count($primes) < $n) {\n    while ($fibs[count($fibs)-1]\
    \ < $start) {\n      $fibs[] = $fibs[count($fibs)-1] + $fibs[count($fibs)-2];\n\
    \    }\n    if ($fibs[count($fibs)-1] == $start) {\n      $primes[] = $start;\n\
    \    }\n    $start += 2;\n  }\n  return $primes[count($primes)-1];\n}\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2gqqh1wg.php:38\n\
    Stack trace:\n#0 /tmp/tmp2gqqh1wg.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp2gqqh1wg.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $res = [2, 3];\n  $i = 1;\n  $j = 2;\n  while ($i\
    \ != $n) {\n    $next = $res[$j - 1] + $res[$j - 2];\n    $is_prime = true;\n\
    \    foreach ($res as $val) {\n      if ($next % $val == 0) {\n        $is_prime\
    \ = false;\n        break;\n      }\n    }\n    if ($is_prime) {\n      $res[]\
    \ = $next;\n      $i++;\n    }\n    $j++;\n  }\n  return $res[$j - 1];\n}\n\n\
    echo prime_fib(1);\necho \"\\n\";\necho prime_fib(2);\necho \"\\n\";\necho prime_fib(3);\n\
    echo \"\\n\";\necho prime_fib(4);\necho \"\\n\";\necho prime_fib(5);\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: b'3\n5\n'
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = [1 => 1, 2 => 1];\n\t$i = 2;\n\twhile (1)\
    \ {\n\t\t$i += 1;\n\t\t$fibs[$i] = $fibs[$i - 1] + $fibs[$i - 2];\n\t\tif ($fibs[$i]\
    \ > 100000000) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t$primeFibs = [];\n\tforeach ($fibs\
    \ as $fib) {\n\t\tif (is_prime($fib)) {\n\t\t\t$primeFibs[] = $fib;\n\t\t}\n\t\
    }\n\treturn $primeFibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpbsb90i8o.php:25\nStack trace:\n#0 /tmp/tmpbsb90i8o.php(33): prime_fib(1)\n\
    #1 /tmp/tmpbsb90i8o.php(37): candidate(1)\n#2 /tmp/tmpbsb90i8o.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbsb90i8o.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$nth_fib = 0;\n\t$x = 0;\n\t$y = 1;\n\tfor ($i = 1;\
    \ $i <= $n; $i++) {\n\t\t$z = $x + $y;\n\t\t$x = $y;\n\t\t$y = $z;\n\t\t$nth_fib\
    \ = $x;\n\t}\n\tif ($nth_fib == 0 || $nth_fib == 1) {\n\t\treturn 0;\n\t} else\
    \ if ($nth_fib == 2) {\n\t\treturn 2;\n\t} else {\n\t\t$prime = 1;\n\t\tfor ($i\
    \ = 2; $i < $nth_fib; $i++) {\n\t\t\tif ($nth_fib % $i == 0) {\n\t\t\t\t$prime\
    \ = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($prime == 1) {\n\t\t\treturn $nth_fib;\n\
    \t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpirwyp_z9.php:48\n\
    Stack trace:\n#0 /tmp/tmpirwyp_z9.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpirwyp_z9.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = [2, 3];\n    while (count($fibs) < $n) {\n\
    \        $fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n    }\n\
    \    return $fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo6d_73xw.php:29\n\
    Stack trace:\n#0 /tmp/tmpo6d_73xw.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo6d_73xw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array();\n    $fib = 2;\n    $fibs[] = $fib;\n\
    \    $fib = 3;\n    $fibs[] = $fib;\n    $i = 2;\n    while (count($fibs) <= $n)\
    \ {\n        $fib = $fibs[$i - 1] + $fibs[$i - 2];\n        $fibs[] = $fib;\n\
    \        $i++;\n    }\n    $prime_fibs = array();\n    for ($i = 0; $i < count($fibs);\
    \ $i++) {\n        if (is_prime($fibs[$i])) {\n            $prime_fibs[] = $fibs[$i];\n\
    \        }\n    }\n    return $prime_fibs[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp5fnocgrg.php:27\nStack trace:\n#0 /tmp/tmp5fnocgrg.php(35): prime_fib(1)\n\
    #1 /tmp/tmp5fnocgrg.php(39): candidate(1)\n#2 /tmp/tmp5fnocgrg.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5fnocgrg.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 1) {\n        return 0;\n    }\n\n    $result\
    \ = array(1,1);\n    $i = 2;\n    while ($i < $n) {\n        if (is_prime($result[$i\
    \ - 1] + $result[$i - 2])) {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2];\n            $i++;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2];\n        }\n    }\n\n    return $result[$n - 1];\n}\n\
    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxrqr8_8.php:37\n\
    Stack trace:\n#0 /tmp/tmpsxrqr8_8.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpsxrqr8_8.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 0;\n    $b = 1;\n    $c = 0;\n    $i = 1;\n\
    \    while ($i <= $n) {\n        $c = $a + $b;\n        $a = $b;\n        $b =\
    \ $c;\n        if (check_prime($b)) {\n            $i += 1;\n        }\n    }\n\
    \    return $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function check_prime()\
    \ in /tmp/tmphvqlnw3f.php:22\nStack trace:\n#0 /tmp/tmphvqlnw3f.php(30): prime_fib(1)\n\
    #1 /tmp/tmphvqlnw3f.php(34): candidate(1)\n#2 /tmp/tmphvqlnw3f.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmphvqlnw3f.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    return $n;\n}\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6c_sk33q.php:21\n\
    Stack trace:\n#0 /tmp/tmp6c_sk33q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6c_sk33q.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t// To do\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjzp006uc.php:22\n\
    Stack trace:\n#0 /tmp/tmpjzp006uc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjzp006uc.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzoqgwu33.php:21\n\
    Stack trace:\n#0 /tmp/tmpzoqgwu33.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzoqgwu33.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $last_prime_fib = 2;\n    $last_prime_fib_index\
    \ = 1;\n    $current_index = 1;\n    $current_fib = 2;\n    while ($last_prime_fib_index\
    \ < $n) {\n        $current_index += 1;\n        $current_fib = fib($current_index);\n\
    \        if (is_prime($current_fib)) {\n            $last_prime_fib = $current_fib;\n\
    \            $last_prime_fib_index += 1;\n        }\n    }\n    return $last_prime_fib;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp7rqo690s.php:20\n\
    Stack trace:\n#0 /tmp/tmp7rqo690s.php(30): prime_fib(2)\n#1 /tmp/tmp7rqo690s.php(35):\
    \ candidate(2)\n#2 /tmp/tmp7rqo690s.php(46): test()\n#3 {main}\n  thrown in /tmp/tmp7rqo690s.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n == 1) return 2;\n    $i = 1;\n    $fibs =\
    \ [1, 2];\n    while (1) {\n        $fibs[] = $fibs[$i-1] + $fibs[$i];\n     \
    \   if (is_prime($fibs[$i+1])) {\n            $n--;\n            if ($n == 1)\
    \ {\n                return $fibs[$i+1];\n            }\n        }\n        $i++;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpujudxxg4.php:19\nStack trace:\n#0 /tmp/tmpujudxxg4.php(30): prime_fib(2)\n\
    #1 /tmp/tmpujudxxg4.php(35): candidate(2)\n#2 /tmp/tmpujudxxg4.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpujudxxg4.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $fib = 0;\n    $prev = 0;\n    $temp\
    \ = 0;\n    while($i <= $n) {\n        if($fib == 0) {\n            $prev = 1;\n\
    \            $fib = 1;\n        } else {\n            $temp = $fib;\n        \
    \    $fib = $fib + $prev;\n            $prev = $temp;\n        }\n        if(prime_check($fib))\
    \ {\n            $i++;\n        }\n    }\n    return $fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime_check()\
    \ in /tmp/tmp7rmuhy0i.php:27\nStack trace:\n#0 /tmp/tmp7rmuhy0i.php(35): prime_fib(1)\n\
    #1 /tmp/tmp7rmuhy0i.php(39): candidate(1)\n#2 /tmp/tmp7rmuhy0i.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7rmuhy0i.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $arr = [2, 3];\n    $i = 2;\n    $fib = 0;\n   \
    \ while ($i < $n) {\n        $fib = $arr[$i - 1] + $arr[$i - 2];\n        if (is_prime($fib))\
    \ {\n            $arr[] = $fib;\n            $i++;\n        }\n    }\n    return\
    \ $arr[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpw18n97a8.php:19\nStack trace:\n#0 /tmp/tmpw18n97a8.php(28): prime_fib(3)\n\
    #1 /tmp/tmpw18n97a8.php(34): candidate(3)\n#2 /tmp/tmpw18n97a8.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpw18n97a8.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prime_fibs = [];\n    $i = 0;\n    while (count($prime_fibs)\
    \ < $n) {\n        $i++;\n        $fib = fib($i);\n        if (is_prime($fib))\
    \ {\n            $prime_fibs[] = $fib;\n        }\n    }\n    return end($prime_fibs);\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpv3ab1ivo.php:18\n\
    Stack trace:\n#0 /tmp/tmpv3ab1ivo.php(27): prime_fib(1)\n#1 /tmp/tmpv3ab1ivo.php(31):\
    \ candidate(1)\n#2 /tmp/tmpv3ab1ivo.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpv3ab1ivo.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 0) {\n\t\treturn;\n\t}\n\t\n\t$i = 2;\n\t\
    $cnt = 0;\n\twhile ($cnt < $n) {\n\t\t$fib = fib($i);\n\t\tif (is_prime($fib))\
    \ {\n\t\t\t$cnt++;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $fib;\n}\n\necho prime_fib(1)\
    \ . \"\\n\";\necho prime_fib(2) . \"\\n\";\necho prime_fib(3) . \"\\n\";\necho\
    \ prime_fib(4) . \"\\n\";\necho prime_fib(5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp_a1mw3d5.php:21\n\
    Stack trace:\n#0 /tmp/tmp_a1mw3d5.php(30): prime_fib(1)\n#1 {main}\n  thrown in\
    \ /tmp/tmp_a1mw3d5.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $prev = 1;\n  $curr = 1;\n  $curr_num = 0;\n  $num\
    \ = 0;\n  while ($num < $n) {\n    $temp = $curr;\n    $curr = $curr + $prev;\n\
    \    $prev = $temp;\n    $curr_num++;\n    if (is_prime($curr)) {\n      $num++;\n\
    \    }\n  }\n  return $curr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpmbipr2g4.php:23\nStack trace:\n#0 /tmp/tmpmbipr2g4.php(31): prime_fib(1)\n\
    #1 /tmp/tmpmbipr2g4.php(35): candidate(1)\n#2 /tmp/tmpmbipr2g4.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmbipr2g4.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = array(1,1);\n  $counter = 0;\n  while ( $counter\
    \ < $n ) {\n    $fib = $fibs[0] + $fibs[1];\n    if ( is_prime($fib) ) {\n   \
    \   $counter++;\n    }\n    $fibs[0] = $fibs[1];\n    $fibs[1] = $fib;\n  }\n\
    \  return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp_f8j5k7k.php:18\nStack trace:\n#0 /tmp/tmp_f8j5k7k.php(28): prime_fib(1)\n\
    #1 /tmp/tmp_f8j5k7k.php(32): candidate(1)\n#2 /tmp/tmp_f8j5k7k.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_f8j5k7k.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if($n == 1) {\n        return 2;\n    }\n    $i\
    \ = 1;\n    $x = 1;\n    $y = 1;\n    while(true) {\n        $z = $x + $y;\n \
    \       if(is_prime($z)) {\n            $i++;\n            if($i == $n) {\n  \
    \              return $z;\n            }\n        }\n        $x = $y;\n      \
    \  $y = $z;\n    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpd7239bk9.php:22\nStack trace:\n#0 /tmp/tmpd7239bk9.php(34): prime_fib(2)\n\
    #1 /tmp/tmpd7239bk9.php(39): candidate(2)\n#2 /tmp/tmpd7239bk9.php(50): test()\n\
    #3 {main}\n  thrown in /tmp/tmpd7239bk9.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // $fib is the n-th fibonacci number (starting from\
    \ zero).\n    $fib = 0;\n    // index is an index of the next fibonacci number\
    \ in the sequence.\n    $index = 1;\n    // index_to_return is the index that\
    \ we need to return.\n    $index_to_return = 0;\n    // We need to find the n-th\
    \ fibonacci number that is also prime.\n    while ($index <= $n) {\n        //\
    \ Get the next fibonacci number.\n        $fib = fib($index);\n        // If that\
    \ number is prime, then we need to increment the index that we\n        // need\
    \ to return.\n        if (is_prime($fib)) {\n            $index_to_return++;\n\
    \        }\n        // Continue to the next fibonacci number.\n        $index++;\n\
    \    }\n    // Return the index that we need to return.\n    return $index_to_return;\n\
    }\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpxgib84qd.php:23\n\
    Stack trace:\n#0 /tmp/tmpxgib84qd.php(36): prime_fib(1)\n#1 /tmp/tmpxgib84qd.php(40):\
    \ candidate(1)\n#2 /tmp/tmpxgib84qd.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpxgib84qd.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 2;\n    $b = 3;\n    $c = 5;\n    $idx = 2;\n\
    \    $result = 3;\n    while ($idx < $n) {\n        if (fmod($c, $a) == 0) {\n\
    \            $c += 2;\n        } else if (fmod($c, $b) == 0) {\n            $c\
    \ += 4;\n        } else {\n            $idx++;\n            $result = $c;\n  \
    \          $c += $b;\n            $b = $c - $b;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd607wmc1.php:39\n\
    Stack trace:\n#0 /tmp/tmpd607wmc1.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpd607wmc1.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n == 1) {\n        return 2;\n    }\n    if\
    \ ($n == 2) {\n        return 3;\n    }\n    $fib = 5;\n    $x = 3;\n    $prime\
    \ = 2;\n    $prime_count = 1;\n    while ($prime_count != $n) {\n        if (is_prime($fib))\
    \ {\n            $prime = $fib;\n            $prime_count++;\n        }\n    \
    \    $x = $fib - $x;\n        $fib = $fib + $x;\n    }\n    return $prime;\n}\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp7qbruk8v.php:25\nStack trace:\n#0 /tmp/tmp7qbruk8v.php(35): prime_fib(3)\n\
    #1 /tmp/tmp7qbruk8v.php(41): candidate(3)\n#2 /tmp/tmp7qbruk8v.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7qbruk8v.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = [1, 2];\n\twhile (count($fibs) < $n) {\n\t\
    \t$fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n\t}\n\t$fibs =\
    \ array_reverse($fibs);\n\t$primes = [];\n\tforeach ($fibs as $fib) {\n\t\tif\
    \ (is_prime($fib)) $primes[] = $fib;\n\t}\n\treturn array_pop($primes);\n}\n\n\
    echo prime_fib(6);\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4a44ictn.php:21\nStack trace:\n#0 /tmp/tmp4a44ictn.php(26): prime_fib(6)\n\
    #1 {main}\n  thrown in /tmp/tmp4a44ictn.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [1, 1];\n    $count = 0;\n    $i = 2;\n \
    \   $isPrime = false;\n    while ($count < $n) {\n        $i++;\n        $fib[$i]\
    \ = $fib[$i - 1] + $fib[$i - 2];\n        $isPrime = true;\n        for ($j =\
    \ 2; $j < $fib[$i]; $j++) {\n            if ($fib[$i] % $j == 0) {\n         \
    \       $isPrime = false;\n                break;\n            }\n        }\n\
    \        if ($isPrime) {\n            $count++;\n        }\n    }\n    return\
    \ $fib[$i];\n}\n\necho \"prime_fib(1) = \" . prime_fib(1) . \"\\n\";\necho \"\
    prime_fib(2) = \" . prime_fib(2) . \"\\n\";\necho \"prime_fib(3) = \" . prime_fib(3)\
    \ . \"\\n\";\necho \"prime_fib(4) = \" . prime_fib(4) . \"\\n\";\necho \"prime_fib(5)\
    \ = \" . prime_fib(5) . \"\\n\";\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "prime_fib(1) = 1\nprime_fib(2) = 1\nprime_fib(3) = 2\nprime_fib(4) = 3\n\
    prime_fib(5) = 5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2q0d8pws.php:45\n\
    Stack trace:\n#0 /tmp/tmp2q0d8pws.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp2q0d8pws.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 2;\n    $fib = 1;\n    $last_fib = 1;\n   \
    \ while ($i <= $n) {\n        $fib = fib($fib, $last_fib);\n        if (is_prime($fib))\
    \ {\n            $i++;\n        }\n        $last_fib = $fib;\n    }\n    return\
    \ $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mqj6ajj.php:32\n\
    Stack trace:\n#0 /tmp/tmp0mqj6ajj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0mqj6ajj.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib_num = 2;\n    $fib_pre = 1;\n    $count = 0;\n\
    \    for ($i = 0; $i < $n - 1; $i++) {\n        if (is_prime($fib_num)) {\n  \
    \          $count++;\n        }\n        $temp = $fib_num;\n        $fib_num +=\
    \ $fib_pre;\n        $fib_pre = $temp;\n    }\n    return $fib_num;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0sq7try3.php:18\nStack trace:\n#0 /tmp/tmp0sq7try3.php(29): prime_fib(2)\n\
    #1 /tmp/tmp0sq7try3.php(34): candidate(2)\n#2 /tmp/tmp0sq7try3.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0sq7try3.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prime_fibs = array(2, 3, 5);\n    $last_prime_fib\
    \ = 5;\n    $last_prime_fib_length = 1;\n    $current_fib = 5;\n    $i = 3;\n\
    \    $fib_length = 1;\n    while (count($prime_fibs) < $n) {\n        $current_fib\
    \ = ($current_fib + $last_prime_fib) % 9999;\n        $fib_length++;\n       \
    \ if ($current_fib == 1 && $fib_length == $last_prime_fib_length) {\n        \
    \    $last_prime_fib_length++;\n            $fib_length = 0;\n            $current_fib\
    \ = ($current_fib + $last_prime_fib) % 9999;\n            $fib_length++;\n   \
    \     }\n        if (is_prime($current_fib)) {\n            $prime_fibs[] = $current_fib;\n\
    \            $last_prime_fib = $current_fib;\n        }\n        $i++;\n    }\n\
    \    return $prime_fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0x0bfwbe.php:29\nStack trace:\n#0 /tmp/tmp0x0bfwbe.php(39): prime_fib(4)\n\
    #1 /tmp/tmp0x0bfwbe.php(46): candidate(4)\n#2 /tmp/tmp0x0bfwbe.php(55): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0x0bfwbe.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = [2, 3];\n\t$i = 0;\n\twhile (count($fibs)\
    \ <= $n) {\n\t\t$fibs[$i + 2] = $fibs[$i] + $fibs[$i + 1];\n\t\t$i++;\n\t}\n\t\
    return $fibs[$n];\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3l8pp3mn.php:27\n\
    Stack trace:\n#0 /tmp/tmp3l8pp3mn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3l8pp3mn.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n == 1) return 2;\n    $prev1 = 2;\n    $prev2\
    \ = 3;\n    for ($i = 2; $i < $n; $i++) {\n        $curr = $prev1 + $prev2;\n\
    \        $prev1 = $prev2;\n        $prev2 = $curr;\n    }\n    if ($curr % 2 ==\
    \ 0) return $curr + 1;\n    return $curr;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvinxa96.php:32\n\
    Stack trace:\n#0 /tmp/tmphvinxa96.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphvinxa96.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $prime = 2;\n    $fib = 2;\n    while($i\
    \ <= $n) {\n        if(!fmod($fib, $prime)) {\n            $i++;\n           \
    \ $prime = $fib;\n        }\n        $fib += $prime;\n    }\n    return $prime;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0i7l69qc.php:33\n\
    Stack trace:\n#0 /tmp/tmp0i7l69qc.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0i7l69qc.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $count = 0;\n    for ($i = 0; $count < $n; $i++)\
    \ {\n        if (is_prime(fib($i))) {\n            $count++;\n        }\n    }\n\
    \    return fib($i - 1);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpuzowilcm.php:16\nStack trace:\n#0 /tmp/tmpuzowilcm.php(24): prime_fib(1)\n\
    #1 /tmp/tmpuzowilcm.php(28): candidate(1)\n#2 /tmp/tmpuzowilcm.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmpuzowilcm.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 1) {\n\t\treturn -1;\n\t}\n\t$count = 0;\n\
    \t$last_num = 0;\n\t$current_num = 1;\n\twhile (1) {\n\t\t$current_num = $current_num\
    \ + $last_num;\n\t\t$last_num = $current_num - $last_num;\n\t\tif (is_prime($current_num))\
    \ {\n\t\t\t$count++;\n\t\t}\n\t\tif ($count == $n) {\n\t\t\treturn $current_num;\n\
    \t\t}\n\t}\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpmgi72bwx.php:23\nStack trace:\n#0 /tmp/tmpmgi72bwx.php(32): prime_fib(1)\n\
    #1 /tmp/tmpmgi72bwx.php(36): candidate(1)\n#2 /tmp/tmpmgi72bwx.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmgi72bwx.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array();\n    $fibs[0] = 2;\n    $fibs[1]\
    \ = 3;\n    $fibs[2] = 5;\n    $fibs[3] = 13;\n    $fibs[4] = 89;\n    return\
    \ $fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0hn94fyy.php:33\n\
    Stack trace:\n#0 /tmp/tmp0hn94fyy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0hn94fyy.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    //TODO\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4vtxr34y.php:22\n\
    Stack trace:\n#0 /tmp/tmp4vtxr34y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4vtxr34y.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prime_fib = [];\n    $fibs = fibs_under(pow(10,\
    \ 10));\n    foreach ($fibs as $fib) {\n        if (is_prime($fib)) {\n      \
    \      $prime_fib[] = $fib;\n        }\n    }\n    return $prime_fib[$n - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibs_under()\
    \ in /tmp/tmpk1bnemgy.php:15\nStack trace:\n#0 /tmp/tmpk1bnemgy.php(25): prime_fib(1)\n\
    #1 /tmp/tmpk1bnemgy.php(29): candidate(1)\n#2 /tmp/tmpk1bnemgy.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpk1bnemgy.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$count = 0;\n\t$fib = fib();\n\twhile ($count < $n)\
    \ {\n\t\t$current = $fib();\n\t\tif (is_prime($current)) {\n\t\t\t$count += 1;\n\
    \t\t}\n\t}\n\treturn $current;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpp19j7grj.php:15\n\
    Stack trace:\n#0 /tmp/tmpp19j7grj.php(26): prime_fib(1)\n#1 /tmp/tmpp19j7grj.php(30):\
    \ candidate(1)\n#2 /tmp/tmpp19j7grj.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpp19j7grj.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = 0;\n\t$i = 0;\n\tdo {\n\t\t$fib = fib($i);\n\
    \t\t$i++;\n\t} while (!prime($fib) && $i < $n);\n\treturn $fib;\n}\necho prime_fib(5)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpu1cq65b1.php:17\n\
    Stack trace:\n#0 /tmp/tmpu1cq65b1.php(22): prime_fib(5)\n#1 {main}\n  thrown in\
    \ /tmp/tmpu1cq65b1.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$n_prime = 0;\n\t$fib = 1;\n\t$prev_fib = 0;\n\twhile\
    \ ($n_prime != $n) {\n\t\t$fib = $fib + $prev_fib;\n\t\t$prev_fib = $fib - $prev_fib;\n\
    \t\tif (is_prime($fib)) {\n\t\t\t$n_prime++;\n\t\t}\n\t}\n\treturn $fib;\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpddt5fetr.php:20\nStack trace:\n#0 /tmp/tmpddt5fetr.php(28): prime_fib(1)\n\
    #1 /tmp/tmpddt5fetr.php(32): candidate(1)\n#2 /tmp/tmpddt5fetr.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpddt5fetr.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t// your code here\n\t// prime_fib returns n-th number\
    \ that is a Fibonacci number and it's also prime.\n\t// >>> prime_fib(1)\n\t//\
    \ 2\n\t// >>> prime_fib(2)\n\t// 3\n\t// >>> prime_fib(3)\n\t// 5\n\t// >>> prime_fib(4)\n\
    \t// 13\n\t// >>> prime_fib(5)\n\t// 89\n\tfunction prime_fib($n) {\n\t\t$fib\
    \ = [0, 1];\n\t\t$prime_fib = [];\n\t\tfor ($i = 2; count($prime_fib) < $n; $i++)\
    \ {\n\t\t\t$fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\t\t\tif ($fib[$i] > 1 &&\
    \ is_prime($fib[$i])) {\n\t\t\t\t$prime_fib[] = $fib[$i];\n\t\t\t}\n\t\t}\n\t\t\
    return $prime_fib[$n - 1];\n\t}\n\t\n\tfunction is_prime($num) {\n\t\tfor ($i\
    \ = 2; $i < $num; $i++) {\n\t\t\tif ($num % $i == 0) {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t\n\t$fib = [0, 1];\n\t$prime_fib\
    \ = [];\n\tfor ($i = 2; count($prime_fib) < $n; $i++) {\n\t\t$fib[$i] = $fib[$i\
    \ - 1] + $fib[$i - 2];\n\t\tif ($fib[$i] > 1 && is_prime($fib[$i])) {\n\t\t\t\
    $prime_fib[] = $fib[$i];\n\t\t}\n\t}\n\treturn $prime_fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Cannot redeclare prime_fib() (previously declared in /tmp/tmp24dhi65b.php:13)\
    \ in /tmp/tmp24dhi65b.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $count = 0;\n    $fib = [0, 1];\n \
    \   while (true) {\n        $fib[$i % 2] = $fib[0] + $fib[1];\n        if (is_prime($fib[$i\
    \ % 2])) {\n            $count++;\n            if ($count == $n) {\n         \
    \       return $fib[$i % 2];\n            }\n        }\n        $i++;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpt20w5mg9.php:19\nStack trace:\n#0 /tmp/tmpt20w5mg9.php(30): prime_fib(1)\n\
    #1 /tmp/tmpt20w5mg9.php(34): candidate(1)\n#2 /tmp/tmpt20w5mg9.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpt20w5mg9.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = fibs();\n    $primes = primes();\n    $i\
    \ = 0;\n    $n = 0;\n    $fib = null;\n    $prime = null;\n    while (true) {\n\
    \        if ($fib === null) {\n            $fib = $fibs[$i];\n        }\n    \
    \    if ($prime === null) {\n            $prime = $primes[$i];\n        }\n  \
    \      if ($fib < $prime) {\n            $fib = null;\n            $i++;\n   \
    \     } else if ($fib > $prime) {\n            $prime = null;\n            $i++;\n\
    \        } else {\n            $n++;\n            if ($n === $n) {\n         \
    \       return $fib;\n            }\n            $fib = null;\n            $prime\
    \ = null;\n            $i++;\n        }\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibs() in /tmp/tmpj6pgxukp.php:14\n\
    Stack trace:\n#0 /tmp/tmpj6pgxukp.php(45): prime_fib(1)\n#1 /tmp/tmpj6pgxukp.php(49):\
    \ candidate(1)\n#2 /tmp/tmpj6pgxukp.php(61): test()\n#3 {main}\n  thrown in /tmp/tmpj6pgxukp.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib_count = 0;\n  $prime_count = 0;\n  for ($i =\
    \ 0; $i < PHP_INT_MAX; $i++) {\n    $fib_count++;\n    $current_fib = fib($fib_count);\n\
    \    if (is_prime($current_fib)) {\n      $prime_count++;\n      if ($prime_count\
    \ == $n) {\n        return $current_fib;\n      }\n    }\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp1jxjmxp1.php:18\n\
    Stack trace:\n#0 /tmp/tmp1jxjmxp1.php(29): prime_fib(1)\n#1 /tmp/tmp1jxjmxp1.php(33):\
    \ candidate(1)\n#2 /tmp/tmp1jxjmxp1.php(45): test()\n#3 {main}\n  thrown in /tmp/tmp1jxjmxp1.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  for ($x = 1, $y = 0, $i = 0; $i < $n; $i++) {\n  \
    \  $x += $y;\n    if (is_prime($x)) {\n      $y = $x - $y;\n    }\n  }\n  return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp3mn2dfmq.php:16\nStack trace:\n#0 /tmp/tmp3mn2dfmq.php(24): prime_fib(1)\n\
    #1 /tmp/tmp3mn2dfmq.php(28): candidate(1)\n#2 /tmp/tmp3mn2dfmq.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3mn2dfmq.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n == 1) return 2;\n    if ($n == 2) return\
    \ 3;\n    $i = 3;\n    $p = 2;\n    $q = 3;\n    while (true) {\n        $nxt\
    \ = ($p + $q) % 100000;\n        if (is_prime($nxt)) {\n            $i++;\n  \
    \          if ($i == $n) {\n                return $nxt;\n            }\n    \
    \    }\n        $p = $q;\n        $q = $nxt;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpn4l9gliu.php:21\nStack trace:\n#0 /tmp/tmpn4l9gliu.php(32): prime_fib(3)\n\
    #1 /tmp/tmpn4l9gliu.php(38): candidate(3)\n#2 /tmp/tmpn4l9gliu.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmpn4l9gliu.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $count = 0;\n    $i = 0;\n    while ($count < $n)\
    \ {\n        $i++;\n        if (is_prime($i) && is_fib($i)) {\n            $count++;\n\
    \        }\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpl9hiqzm4.php:18\nStack trace:\n#0 /tmp/tmpl9hiqzm4.php(26): prime_fib(1)\n\
    #1 /tmp/tmpl9hiqzm4.php(30): candidate(1)\n#2 /tmp/tmpl9hiqzm4.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl9hiqzm4.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prev2 = 1;\n    $prev1 = 1;\n    $fib = 2;\n  \
    \  $i = 3;\n    while ($i < $n) {\n        $prev2 = $prev1;\n        $prev1 =\
    \ $fib;\n        $fib = $prev1 + $prev2;\n        if (is_prime($fib)) {\n    \
    \        $i++;\n        }\n    }\n    return $fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpusovysvx.php:35\n\
    Stack trace:\n#0 /tmp/tmpusovysvx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpusovysvx.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n == 1) return 2;\n\t$x = 2;\n\t$y = 3;\n\t$fibNum\
    \ = 2;\n\t$fibNumBefore = 1;\n\twhile (true) {\n\t\tif (is_prime($fibNum)) {\n\
    \t\t\t$x = $y;\n\t\t\t$y = $fibNum;\n\t\t\t$n--;\n\t\t\tif ($n == 1) return $x;\n\
    \t\t}\n\t\t$fibNumBeforeTemp = $fibNumBefore;\n\t\t$fibNumBefore = $fibNum;\n\t\
    \t$fibNum = $fibNumBefore + $fibNumBeforeTemp;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpsel1g232.php:20\nStack trace:\n#0 /tmp/tmpsel1g232.php(33): prime_fib(2)\n\
    #1 /tmp/tmpsel1g232.php(38): candidate(2)\n#2 /tmp/tmpsel1g232.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsel1g232.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 0;\n    $fib = 0;\n    while ($i < $n) {\n\
    \        $fib = fib($i);\n        if (is_prime($fib)) {\n            $i++;\n \
    \       }\n    }\n    return $fib;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpq5solsvq.php:17\n\
    Stack trace:\n#0 /tmp/tmpq5solsvq.php(25): prime_fib(1)\n#1 /tmp/tmpq5solsvq.php(29):\
    \ candidate(1)\n#2 /tmp/tmpq5solsvq.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpq5solsvq.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [1,1];\n    $i = 2;\n    while (count($fib)\
    \ < $n) {\n        $fib[$i] = $fib[$i-1] + $fib[$i-2];\n        if (is_prime($fib[$i]))\
    \ {\n            $i++;\n        }\n    }\n    return $fib[$n-1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7poixrnt.php:30\n\
    Stack trace:\n#0 /tmp/tmp7poixrnt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7poixrnt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array();\n    $i = 0;\n    $fib = 0;\n \
    \   $count = 0;\n    while($count < $n) {\n        $fib = fib($i);\n        if(is_prime($fib))\
    \ {\n            $count++;\n            $fibs[] = $fib;\n        }\n        $i++;\n\
    \    }\n    return $fibs[count($fibs) - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp5obj0n1v.php:19\n\
    Stack trace:\n#0 /tmp/tmp5obj0n1v.php(30): prime_fib(1)\n#1 /tmp/tmp5obj0n1v.php(34):\
    \ candidate(1)\n#2 /tmp/tmp5obj0n1v.php(46): test()\n#3 {main}\n  thrown in /tmp/tmp5obj0n1v.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = array();\n    $i = 1;\n    while (count($fib)\
    \ < $n) {\n        $fib[] = fib($i);\n        $i++;\n    }\n    return $fib[$n\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpgbsbuyt9.php:17\n\
    Stack trace:\n#0 /tmp/tmpgbsbuyt9.php(24): prime_fib(1)\n#1 /tmp/tmpgbsbuyt9.php(28):\
    \ candidate(1)\n#2 /tmp/tmpgbsbuyt9.php(40): test()\n#3 {main}\n  thrown in /tmp/tmpgbsbuyt9.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = array(1, 1);\n\t$primes = array(2);\n\t$i\
    \ = 0;\n\t$j = 0;\n\twhile (count($primes) <= $n) {\n\t\t$i++;\n\t\t$fibs[$i]\
    \ = $fibs[$i - 1] + $fibs[$i - 2];\n\t\tif (is_prime($fibs[$i])) {\n\t\t\t$j++;\n\
    \t\t\t$primes[$j] = $fibs[$i];\n\t\t}\n\t}\n\treturn $primes[$n];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpo81azg18.php:21\nStack trace:\n#0 /tmp/tmpo81azg18.php(30): prime_fib(1)\n\
    #1 /tmp/tmpo81azg18.php(34): candidate(1)\n#2 /tmp/tmpo81azg18.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpo81azg18.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$i = 2;\n\t$j = 1;\n\twhile($n > 0) {\n\t\t$i += $j;\n\
    \t\t$j = $i - $j;\n\t\tif (is_prime($i)) {\n\t\t\t$n--;\n\t\t}\n\t}\n\treturn\
    \ $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp864m7qfg.php:19\nStack trace:\n#0 /tmp/tmp864m7qfg.php(27): prime_fib(1)\n\
    #1 /tmp/tmp864m7qfg.php(31): candidate(1)\n#2 /tmp/tmp864m7qfg.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmp864m7qfg.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n == 1) return 2;\n    if ($n == 2) return\
    \ 3;\n    if ($n == 3) return 5;\n    return fib($n);\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpyh48ax70.php:17\n\
    Stack trace:\n#0 /tmp/tmpyh48ax70.php(20): prime_fib(4)\n#1 /tmp/tmpyh48ax70.php(27):\
    \ candidate(4)\n#2 /tmp/tmpyh48ax70.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpyh48ax70.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib_number = 0;\n  $primes = array();\n  $fibonacci\
    \ = fibonacci_sequence($n);\n  for ($i = 0; $i < $n; $i++) {\n    if (is_prime($fibonacci[$i]))\
    \ {\n      $primes[] = $fibonacci[$i];\n    }\n  }\n  return $primes[$n - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci_sequence()\
    \ in /tmp/tmp25bvz6c9.php:16\nStack trace:\n#0 /tmp/tmp25bvz6c9.php(26): prime_fib(1)\n\
    #1 /tmp/tmp25bvz6c9.php(30): candidate(1)\n#2 /tmp/tmp25bvz6c9.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp25bvz6c9.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $array = [1, 1];\n    for ($i = 2; count($array)\
    \ <= $n; $i++) {\n        $array[$i] = $array[$i - 1] + $array[$i - 2];\n    \
    \    if (is_prime($array[$i])) {\n            $array[] = $array[$i];\n       \
    \ }\n    }\n    return $array[$n];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6qrmg51.php:29\n\
    Stack trace:\n#0 /tmp/tmpd6qrmg51.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpd6qrmg51.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  return 'Not implemented';\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfwmj_i2.php:21\n\
    Stack trace:\n#0 /tmp/tmpbfwmj_i2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbfwmj_i2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prime_fib = 2; // First prime number\n    $fib\
    \ = 2; //First Fibonacci number\n    $prev_fib = 1; //Previous Fibonacci number\n\
    \    while ($n > 1) {\n        // Generate new Fibonacci number\n        $new_fib\
    \ = $fib + $prev_fib;\n        $prev_fib = $fib;\n        $fib = $new_fib;\n \
    \       // Check if it's prime\n        if (is_prime($fib)) {\n            $prime_fib\
    \ = $fib;\n            $n--;\n        }\n    }\n    return $prime_fib;\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpxiy0uzcz.php:23\nStack trace:\n#0 /tmp/tmpxiy0uzcz.php(32): prime_fib(2)\n\
    #1 /tmp/tmpxiy0uzcz.php(37): candidate(2)\n#2 /tmp/tmpxiy0uzcz.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxiy0uzcz.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 0;\n  $m = 2;\n  while ($i < $n) {\n    if (is_prime($m)\
    \ && is_fib($m)) {\n      $i++;\n    }\n    $m++;\n  }\n  return $m - 1;\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpj8bvv2hc.php:17\nStack trace:\n#0 /tmp/tmpj8bvv2hc.php(26): prime_fib(1)\n\
    #1 /tmp/tmpj8bvv2hc.php(30): candidate(1)\n#2 /tmp/tmpj8bvv2hc.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpj8bvv2hc.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = fibonacci($n);\n    $prime = prime($fib);\n\
    \    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmpeuam4npg.php:14\nStack trace:\n#0 /tmp/tmpeuam4npg.php(20): prime_fib(1)\n\
    #1 /tmp/tmpeuam4npg.php(24): candidate(1)\n#2 /tmp/tmpeuam4npg.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpeuam4npg.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibn = 2;\n\t$fibn1 = 1;\n\t$fibn2 = 1;\n\t$prime_count\
    \ = 1;\n\twhile($prime_count <= $n) {\n\t\tif(is_prime($fibn)) {\n\t\t\t$prime_count++;\n\
    \t\t}\n\t\t$fibn = $fibn1 + $fibn2;\n\t\t$fibn2 = $fibn1;\n\t\t$fibn1 = $fibn;\n\
    \t}\n\treturn $fibn;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpxdtmmo2u.php:19\nStack trace:\n#0 /tmp/tmpxdtmmo2u.php(30): prime_fib(1)\n\
    #1 /tmp/tmpxdtmmo2u.php(34): candidate(1)\n#2 /tmp/tmpxdtmmo2u.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxdtmmo2u.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    return array_values(array_filter(my_fib(), function($n)\
    \ {\n        return is_prime($n);\n    }))[$n-1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function my_fib() in /tmp/tmpao0me3u6.php:14\n\
    Stack trace:\n#0 /tmp/tmpao0me3u6.php(20): prime_fib(1)\n#1 /tmp/tmpao0me3u6.php(24):\
    \ candidate(1)\n#2 /tmp/tmpao0me3u6.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpao0me3u6.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n == 1) return 2;\n\t$l1 = 1;\n\t$l2 = 2;\n\t\
    for ($i = 3; $i <= $n; $i++) {\n\t\t$l3 = $l1 + $l2;\n\t\tif (is_prime($l3)) {\n\
    \t\t\tif ($i == $n) return $l3;\n\t\t\t$l1 = $l2;\n\t\t\t$l2 = $l3;\n\t\t}\n\t\
    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9dj916h.php:33\n\
    Stack trace:\n#0 /tmp/tmpz9dj916h.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpz9dj916h.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $index = 0;\n    $curr = 2;\n    $prev = 1;\n  \
    \  while ($index < $n) {\n        $sum = $curr + $prev;\n        $prev = $curr;\n\
    \        $curr = $sum;\n        if (is_prime($curr)) {\n            $index++;\n\
    \        }\n    }\n    return $curr;\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp16i71d32.php:21\nStack trace:\n#0 /tmp/tmp16i71d32.php(29): prime_fib(1)\n\
    #1 /tmp/tmp16i71d32.php(33): candidate(1)\n#2 /tmp/tmp16i71d32.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp16i71d32.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp54vta31y.php:21\n\
    Stack trace:\n#0 /tmp/tmp54vta31y.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp54vta31y.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = [1, 1];\n    $prime_fibs = [2, 3];\n   \
    \ $i = 2;\n    $result = 0;\n    while (true) {\n        $fibs[$i] = $fibs[$i\
    \ - 1] + $fibs[$i - 2];\n        if (is_prime($fibs[$i])) {\n            $prime_fibs[]\
    \ = $fibs[$i];\n        }\n        if (count($prime_fibs) == $n) {\n         \
    \   $result = $prime_fibs[$n - 1];\n            break;\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpl0tr4lyo.php:20\nStack trace:\n#0 /tmp/tmpl0tr4lyo.php(32): prime_fib(1)\n\
    #1 /tmp/tmpl0tr4lyo.php(36): candidate(1)\n#2 /tmp/tmpl0tr4lyo.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl0tr4lyo.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n === 1) return 2;\n    if ($n === 2) return\
    \ 3;\n    $fib1 = 2;\n    $fib2 = 3;\n    $cnt = 2;\n    while (true) {\n    \
    \    $fib = $fib1 + $fib2;\n        if (is_prime($fib)) {\n            $cnt +=\
    \ 1;\n            if ($cnt === $n) return $fib;\n        }\n        $fib1 = $fib2;\n\
    \        $fib2 = $fib;\n    }\n}\nassert(prime_fib(1) === 2);\nassert(prime_fib(2)\
    \ === 3);\nassert(prime_fib(3) === 5);\nassert(prime_fib(4) === 13);\nassert(prime_fib(5)\
    \ === 89);\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp82fl33wc.php:21\nStack trace:\n#0 /tmp/tmp82fl33wc.php(31): prime_fib(3)\n\
    #1 {main}\n  thrown in /tmp/tmp82fl33wc.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $ans = 0;\n    $i = 1;\n    $fib = 1;\n    $prev_fib\
    \ = 0;\n    while ($ans < $n) {\n        $prev_fib = $fib;\n        $fib = $fib\
    \ + $prev_fib;\n        if (is_prime($fib)) {\n            $ans += 1;\n      \
    \  }\n    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp16sufjd3.php:21\nStack trace:\n#0 /tmp/tmp16sufjd3.php(29): prime_fib(1)\n\
    #1 /tmp/tmp16sufjd3.php(33): candidate(1)\n#2 /tmp/tmp16sufjd3.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp16sufjd3.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = [2, 3];\n\t$i = 1;\n\twhile(count($fibs) <\
    \ $n) {\n\t\t$fibs[] = $fibs[$i] + $fibs[$i - 1];\n\t\t$i++;\n\t}\n\treturn $fibs[$n\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8z12n11.php:31\n\
    Stack trace:\n#0 /tmp/tmp_8z12n11.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_8z12n11.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prime_fib = [2, 3];\n    while (count($prime_fib)\
    \ < $n) {\n        $x = $prime_fib[count($prime_fib) - 1] + $prime_fib[count($prime_fib)\
    \ - 2];\n        if (is_prime($x)) {\n            $prime_fib[] = $x;\n       \
    \ }\n    }\n    return $prime_fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpizatwekw.php:17\nStack trace:\n#0 /tmp/tmpizatwekw.php(25): prime_fib(3)\n\
    #1 /tmp/tmpizatwekw.php(31): candidate(3)\n#2 /tmp/tmpizatwekw.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpizatwekw.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  // TODO\n}\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp605vy4ds.php:21\n\
    Stack trace:\n#0 /tmp/tmp605vy4ds.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp605vy4ds.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$i = 1;\n\t$fib = 1;\n\t$primeFib = 1;\n\twhile($i\
    \ <= $n) {\n\t\tif (is_prime($fib)) {\n\t\t\t$primeFib = $fib;\n\t\t\t$i++;\n\t\
    \t}\n\t\t$fib = fibonacci($fib);\n\t}\n\treturn $primeFib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpdfhclmim.php:18\nStack trace:\n#0 /tmp/tmpdfhclmim.php(28): prime_fib(1)\n\
    #1 /tmp/tmpdfhclmim.php(32): candidate(1)\n#2 /tmp/tmpdfhclmim.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdfhclmim.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  if ($n <= 1) return 2;\n  $c = 1;\n  $a = 2;\n  $b\
    \ = 3;\n  while ($c < $n) {\n    $a = $b + $a;\n    $b = $a + $b;\n    if (prime($a))\
    \ $c++;\n    if (prime($b)) $c++;\n  }\n  return prime($a) ? $a : $b;\n}\n\n$primes\
    \ = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149,\
    \ 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,\
    \ 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331,\
    \ 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431,\
    \ 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523,\
    \ 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631,\
    \ 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739,\
    \ 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853,\
    \ 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpml8updkf.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n == 1) {\n        return 2;\n    } else if\
    \ ($n == 2) {\n        return 3;\n    } else {\n        $fib_n_1 = 2;\n      \
    \  $fib_n_2 = 3;\n        $i = 3;\n        while ($i <= $n) {\n            $fib_n\
    \ = $fib_n_1 + $fib_n_2;\n            if (is_prime($fib_n)) {\n              \
    \  $i++;\n            }\n            $fib_n_1 = $fib_n_2;\n            $fib_n_2\
    \ = $fib_n;\n        }\n        return $fib_n;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp7ikt2no8.php:24\nStack trace:\n#0 /tmp/tmp7ikt2no8.php(35): prime_fib(3)\n\
    #1 /tmp/tmp7ikt2no8.php(41): candidate(3)\n#2 /tmp/tmp7ikt2no8.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7ikt2no8.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$result = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\
    \t$result = fib($i);\n\t\tif (is_prime($result)) {\n\t\t\tbreak;\n\t\t}\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpzm_kdxza.php:16\n\
    Stack trace:\n#0 /tmp/tmpzm_kdxza.php(25): prime_fib(1)\n#1 /tmp/tmpzm_kdxza.php(29):\
    \ candidate(1)\n#2 /tmp/tmpzm_kdxza.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpzm_kdxza.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpydfpz_4r.php:20\n\
    Stack trace:\n#0 /tmp/tmpydfpz_4r.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpydfpz_4r.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $counter = 0;\n    $prev = 1;\n    $curr = 1;\n\
    \    $new = 0;\n    while ($counter < $n) {\n        if (prime($curr)) {\n   \
    \         $counter += 1;\n        }\n        $new = $prev + $curr;\n        $prev\
    \ = $curr;\n        $curr = $new;\n    }\n    return $curr;\n}\necho prime_fib(1)\
    \ . \"\\n\";\necho prime_fib(2) . \"\\n\";\necho prime_fib(3) . \"\\n\";\necho\
    \ prime_fib(4) . \"\\n\";\necho prime_fib(5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime() in /tmp/tmpp8m47zju.php:19\n\
    Stack trace:\n#0 /tmp/tmpp8m47zju.php(28): prime_fib(1)\n#1 {main}\n  thrown in\
    \ /tmp/tmpp8m47zju.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array();\n    $fibs[0] = 1;\n    $fibs[1]\
    \ = 1;\n    $i = 2;\n    while (count($fibs) <= $n) {\n        $fibs[$i] = $fibs[$i\
    \ - 1] + $fibs[$i - 2];\n        $i++;\n    }\n    $i = count($fibs) - 1;\n  \
    \  while (count($fibs) != 1) {\n        if (!prime($fibs[$i])) {\n           \
    \ unset($fibs[$i]);\n        }\n        $i--;\n    }\n    return end($fibs);\n\
    }\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime() in /tmp/tmp8yqchslp.php:24\n\
    Stack trace:\n#0 /tmp/tmp8yqchslp.php(32): prime_fib(1)\n#1 /tmp/tmp8yqchslp.php(36):\
    \ candidate(1)\n#2 /tmp/tmp8yqchslp.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp8yqchslp.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $first = 0;\n  $second = 1;\n  $counter = 0;\n  $result\
    \ = 0;\n  while($counter < $n) {\n    $result = $first + $second;\n    $first\
    \ = $second;\n    $second = $result;\n    if (is_prime($result)) {\n      $counter++;\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4ory9dif.php:22\nStack trace:\n#0 /tmp/tmp4ory9dif.php(30): prime_fib(1)\n\
    #1 /tmp/tmp4ory9dif.php(34): candidate(1)\n#2 /tmp/tmp4ory9dif.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4ory9dif.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 0;\n    $res = 0;\n    $a = 2;\n    $b = 3;\n\
    \    while ($i < $n) {\n        $res = $b;\n        $b = $a + $b;\n        $a\
    \ = $res;\n        if (is_prime($res)) {\n            $i++;\n        }\n    }\n\
    \    return $res;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0jck6clp.php:22\nStack trace:\n#0 /tmp/tmp0jck6clp.php(30): prime_fib(1)\n\
    #1 /tmp/tmp0jck6clp.php(34): candidate(1)\n#2 /tmp/tmp0jck6clp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0jck6clp.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $count = 0;\n    $fib = 1;\n    $current = 1;\n\
    \    $next = 2;\n    while ($count != $n) {\n        if (is_prime($fib)) {\n \
    \           $count += 1;\n        }\n        $fib = $current + $next;\n      \
    \  $current = $next;\n        $next = $fib;\n    }\n    return $fib;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpdzxwazrc.php:19\nStack trace:\n#0 /tmp/tmpdzxwazrc.php(30): prime_fib(1)\n\
    #1 /tmp/tmpdzxwazrc.php(34): candidate(1)\n#2 /tmp/tmpdzxwazrc.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdzxwazrc.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $base = [2, 3];\n    $fib = [];\n    $fib[] = $base[0];\n\
    \    $fib[] = $base[1];\n    $i = 0;\n    while ($i < $n - 2) {\n        $fib[]\
    \ = $fib[$i] + $fib[$i + 1];\n        if (is_prime($fib[$i + 2])) {\n        \
    \    $i++;\n        }\n    }\n    return $fib[$i + 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpybyl9xm6.php:33\n\
    Stack trace:\n#0 /tmp/tmpybyl9xm6.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpybyl9xm6.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = array(2, 3);\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n        while (!prime($fib[$i]))\
    \ {\n            $fib[$i] += $fib[$i - 1];\n        }\n    }\n    return $fib[$n\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime() in /tmp/tmpp63p690_.php:17\n\
    Stack trace:\n#0 /tmp/tmpp63p690_.php(25): prime_fib(3)\n#1 /tmp/tmpp63p690_.php(31):\
    \ candidate(3)\n#2 /tmp/tmpp63p690_.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpp63p690_.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = fib();\n    $count = 0;\n    while ($count\
    \ < $n) {\n        $number = $fib();\n        if (is_prime($number)) {\n     \
    \       $count++;\n        }\n    }\n    return $number;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp_zzj8zi3.php:14\n\
    Stack trace:\n#0 /tmp/tmp_zzj8zi3.php(26): prime_fib(1)\n#1 /tmp/tmp_zzj8zi3.php(30):\
    \ candidate(1)\n#2 /tmp/tmp_zzj8zi3.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp_zzj8zi3.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzihkh3m_.php:21\n\
    Stack trace:\n#0 /tmp/tmpzihkh3m_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzihkh3m_.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = fib(prime_fib_index($n));\n\treturn $fib;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmph341d7ar.php:14\n\
    Stack trace:\n#0 /tmp/tmph341d7ar.php(19): prime_fib(1)\n#1 /tmp/tmph341d7ar.php(23):\
    \ candidate(1)\n#2 /tmp/tmph341d7ar.php(35): test()\n#3 {main}\n  thrown in /tmp/tmph341d7ar.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = [2, 3];\n    while (count($fibs) < $n) {\n\
    \        $fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n    }\n\
    \    $primes = [2];\n    foreach ($fibs as $fib) {\n        if (is_prime($fib))\
    \ {\n            $primes[] = $fib;\n        }\n    }\n    return $primes[$n -\
    \ 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpkgngr36z.php:20\nStack trace:\n#0 /tmp/tmpkgngr36z.php(28): prime_fib(1)\n\
    #1 /tmp/tmpkgngr36z.php(32): candidate(1)\n#2 /tmp/tmpkgngr36z.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkgngr36z.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // Fill this in.\n}\n\necho prime_fib(1) . \"\\\
    n\";\necho prime_fib(2) . \"\\n\";\necho prime_fib(3) . \"\\n\";\necho prime_fib(4)\
    \ . \"\\n\";\necho prime_fib(5) . \"\\n\";\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi29xwiv1.php:27\n\
    Stack trace:\n#0 /tmp/tmpi29xwiv1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi29xwiv1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $j = 0;\n  for ($i = 0; $i < 10000000000; $i++) {\n\
    \    if (is_prime($i) && is_fib($i)) {\n      $j++;\n      if ($j == $n) {\n \
    \       return $i;\n      }\n    }\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpj8vi1747.php:16\nStack trace:\n#0 /tmp/tmpj8vi1747.php(26): prime_fib(1)\n\
    #1 /tmp/tmpj8vi1747.php(30): candidate(1)\n#2 /tmp/tmpj8vi1747.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpj8vi1747.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prime_fib = [2, 3];\n    $i = 2;\n    while(count($prime_fib)\
    \ < $n) {\n        $val = $prime_fib[$i - 1] + $prime_fib[$i - 2];\n        if\
    \ (is_prime($val)) {\n            $prime_fib[] = $val;\n        }\n        $i++;\n\
    \    }\n    return $prime_fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpd21sqo9s.php:18\nStack trace:\n#0 /tmp/tmpd21sqo9s.php(27): prime_fib(3)\n\
    #1 /tmp/tmpd21sqo9s.php(33): candidate(3)\n#2 /tmp/tmpd21sqo9s.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpd21sqo9s.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\treturn 0;\n}\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpckfp89gq.php:21\n\
    Stack trace:\n#0 /tmp/tmpckfp89gq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpckfp89gq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = 1;\n    $a = 1;\n    $b = 1;\n    while (true)\
    \ {\n        if ($n === 1) {\n            return $fib;\n        }\n        $fib\
    \ = $a + $b;\n        $a = $b;\n        $b = $fib;\n        if (is_prime($fib))\
    \ {\n            $n--;\n        }\n    }\n}\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx2thbc5y.php:34\n\
    Stack trace:\n#0 /tmp/tmpx2thbc5y.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpx2thbc5y.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if($n==1)\n        return 2;\n    if($n==2)\n  \
    \      return 3;\n    $i=2;\n    $sum=0;\n    $x=2;\n    $y=3;\n    while($i<$n)\n\
    \    {\n        $sum=$x+$y;\n        $x=$y;\n        $y=$sum;\n        if(is_prime($sum))\n\
    \            $i++;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmps7rzk9m9.php:27\nStack trace:\n#0 /tmp/tmps7rzk9m9.php(34): prime_fib(3)\n\
    #1 /tmp/tmps7rzk9m9.php(40): candidate(3)\n#2 /tmp/tmps7rzk9m9.php(50): test()\n\
    #3 {main}\n  thrown in /tmp/tmps7rzk9m9.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$F = [0, 1, 1];\n\t$f = 1;\n\t$i = 2;\n\twhile (true)\
    \ {\n\t\t$f = $F[$i - 1] + $F[$i];\n\t\t$F[] = $f;\n\t\t$i++;\n\t\tif (is_prime($f))\
    \ {\n\t\t\t$n--;\n\t\t\tif ($n === 0) {\n\t\t\t\treturn $f;\n\t\t\t}\n\t\t}\n\t\
    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpawy1vk5d.php:21\nStack trace:\n#0 /tmp/tmpawy1vk5d.php(31): prime_fib(1)\n\
    #1 /tmp/tmpawy1vk5d.php(35): candidate(1)\n#2 /tmp/tmpawy1vk5d.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpawy1vk5d.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  return [0];\n}\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7uns1pxj.php:21\n\
    Stack trace:\n#0 /tmp/tmp7uns1pxj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7uns1pxj.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 0;\n    $j = 1;\n    $num = 0;\n    $check\
    \ = 0;\n    $count = 1;\n    while ($count < $n) {\n        $num = $i + $j;\n\
    \        $i = $j;\n        $j = $num;\n        for ($k = 2; $k <= $num / 2; $k++)\
    \ {\n            if ($num % $k == 0) {\n                $check = 1;\n        \
    \        break;\n            }\n        }\n        if ($check == 0) {\n      \
    \      $count++;\n        }\n        $check = 0;\n    }\n    return $num;\n}\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy1o5y5ju.php:41\n\
    Stack trace:\n#0 /tmp/tmpy1o5y5ju.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpy1o5y5ju.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = 1;\n    $fib_prev = 1;\n    $prime_fib_cnt\
    \ = 1;\n    $result = 1;\n    while ($prime_fib_cnt < $n) {\n        $result =\
    \ $fib + $fib_prev;\n        $fib_prev = $fib;\n        $fib = $result;\n    \
    \    if (is_prime($result)) {\n            $prime_fib_cnt++;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfqlhd43b.php:34\n\
    Stack trace:\n#0 /tmp/tmpfqlhd43b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpfqlhd43b.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $count = 0;\n    $i = 1;\n    while ($count < $n)\
    \ {\n        $fib = fibonacci($i);\n        if (is_prime($fib)) {\n          \
    \  $count++;\n        }\n        $i++;\n    }\n    return $fib;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmp74ks9w9_.php:17\nStack trace:\n#0 /tmp/tmp74ks9w9_.php(27): prime_fib(1)\n\
    #1 /tmp/tmp74ks9w9_.php(31): candidate(1)\n#2 /tmp/tmp74ks9w9_.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmp74ks9w9_.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // $n-th Fibonacci number\n    $fib = array(0, 1);\n\
    \    for ($i = 2; $i <= $n; $i++) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i\
    \ - 2];\n    }\n    // if it's prime\n    if (is_prime($fib[$n])) {\n        return\
    \ $fib[$n];\n    }\n    // otherwise, try for $n-1\n    return prime_fib($n -\
    \ 1);\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpw2nowmt9.php:20\nStack trace:\n#0 /tmp/tmpw2nowmt9.php(27): prime_fib(1)\n\
    #1 /tmp/tmpw2nowmt9.php(31): candidate(1)\n#2 /tmp/tmpw2nowmt9.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpw2nowmt9.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [2, 3];\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n        if (checkPrime($fib[$i])\
    \ === false) {\n            $i--;\n        }\n    }\n    return $fib[$n - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function checkPrime()\
    \ in /tmp/tmpozw0xuxz.php:17\nStack trace:\n#0 /tmp/tmpozw0xuxz.php(25): prime_fib(3)\n\
    #1 /tmp/tmpozw0xuxz.php(31): candidate(3)\n#2 /tmp/tmpozw0xuxz.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpozw0xuxz.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = array();\n    $fib[0] = 1;\n    $fib[1] =\
    \ 1;\n    $i = 2;\n    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i\
    \ - 2];\n        if (is_prime($fib[$i])) {\n            $n--;\n            if\
    \ ($n == 0) {\n                return $fib[$i];\n            }\n        }\n  \
    \      $i++;\n    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp96s9o6mg.php:20\nStack trace:\n#0 /tmp/tmp96s9o6mg.php(31): prime_fib(1)\n\
    #1 /tmp/tmp96s9o6mg.php(35): candidate(1)\n#2 /tmp/tmp96s9o6mg.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp96s9o6mg.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibonacci = [2, 3];\n    $fibIndex = 2;\n    $counter\
    \ = 1;\n    while ($counter < $n) {\n        $fibIndex++;\n        $fibonacci[$fibIndex]\
    \ = $fibonacci[$fibIndex - 1] + $fibonacci[$fibIndex - 2];\n        if (isPrime($fibonacci[$fibIndex]))\
    \ {\n            $counter++;\n        }\n    }\n    return $fibonacci[$fibIndex];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_rjtg87.php:32\n\
    Stack trace:\n#0 /tmp/tmpa_rjtg87.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpa_rjtg87.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [2, 3];\n    $i = 0;\n    while (count($fib)\
    \ < $n) {\n        $fib[] = $fib[$i] + $fib[$i + 1];\n        $i++;\n    }\n \
    \   $fib = array_filter($fib, 'is_prime');\n    return $fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'is_prime' not found or invalid function name in /tmp/tmpxhcknj6g.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhcknj6g.php:29\n\
    Stack trace:\n#0 /tmp/tmpxhcknj6g.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxhcknj6g.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif($n == 1) {\n\t\treturn 2;\n\t}\n\tif($n == 2) {\n\
    \t\treturn 3;\n\t}\n\treturn prime_fib_inner($n - 2, 2, 3, 5);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime_fib_inner()\
    \ in /tmp/tmpfe6axtb6.php:20\nStack trace:\n#0 /tmp/tmpfe6axtb6.php(24): prime_fib(3)\n\
    #1 /tmp/tmpfe6axtb6.php(30): candidate(3)\n#2 /tmp/tmpfe6axtb6.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmpfe6axtb6.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $cur = 2;\n  $num = 3;\n  $count = 1;\n  $isPrime\
    \ = true;\n  if ($n == 1) {\n    return $cur;\n  }\n  while ($count < $n) {\n\
    \    $isPrime = true;\n    for ($i = 2; $i < $num; $i++) {\n      if ($num % $i\
    \ == 0) {\n        $isPrime = false;\n        break;\n      }\n    }\n    if ($isPrime)\
    \ {\n      $cur = $num;\n      $count++;\n    }\n    $num += $cur;\n  }\n  return\
    \ $cur;\n}\n\n$n = 1;\nassert(prime_fib($n) == 2);\n$n = 2;\nassert(prime_fib($n)\
    \ == 3);\n$n = 3;\nassert(prime_fib($n) == 5);\n$n = 4;\nassert(prime_fib($n)\
    \ == 13);\n$n = 5;\nassert(prime_fib($n) == 89);\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif($n == 1) {\n\t\treturn 2;\n\t} else if($n == 2)\
    \ {\n\t\treturn 3;\n\t}\n\t$count = 2;\n\t$fib1 = 1;\n\t$fib2 = 1;\n\twhile($count\
    \ < $n) {\n\t\t$fibN = $fib1 + $fib2;\n\t\tif(is_prime($fibN)) {\n\t\t\t$count++;\n\
    \t\t}\n\t\t$fib1 = $fib2;\n\t\t$fib2 = $fibN;\n\t}\n\treturn $fibN;\n}\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpklr5xpz4.php:24\nStack trace:\n#0 /tmp/tmpklr5xpz4.php(33): prime_fib(3)\n\
    #1 /tmp/tmpklr5xpz4.php(39): candidate(3)\n#2 /tmp/tmpklr5xpz4.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpklr5xpz4.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  for ($a = 2, $b = 3, $c = 5, $i = 5; $i <= $n;) {\n\
    \    if (is_prime($c)) {\n      $a = $b;\n      $b = $c;\n      $i++;\n    }\n\
    \    $c = $a + $b;\n  }\n  return $b;\n}\n\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn46j4pg1.php:30\n\
    Stack trace:\n#0 /tmp/tmpn46j4pg1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpn46j4pg1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $list = array(2, 3);\n  $i = 2;\n  $fib1 = 1;\n  $fib2\
    \ = 2;\n  while (count($list) < $n) {\n    $fib = $fib1 + $fib2;\n    $fib1 =\
    \ $fib2;\n    $fib2 = $fib;\n    if (is_prime($fib)) {\n      $list[] = $fib;\n\
    \    }\n  }\n  return $list[$n - 1];\n}\n\necho prime_fib(1) . \"\\n\";\necho\
    \ prime_fib(2) . \"\\n\";\necho prime_fib(3) . \"\\n\";\necho prime_fib(4) . \"\
    \\n\";\necho prime_fib(5) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "2\n3\n\nFatal error: Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpevuf601m.php:22\nStack trace:\n#0 /tmp/tmpevuf601m.php(31): prime_fib(3)\n\
    #1 {main}\n  thrown in /tmp/tmpevuf601m.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib = [2, 3];\n  $prime = [0, 1];\n  for ($i = 1;\
    \ $i < $n; $i++) {\n    if (is_prime($fib[$i])) {\n      $prime[] = $i;\n    }\n\
    \    $fib[] = $fib[$i - 1] + $fib[$i];\n  }\n  return $fib[$prime[$n]];\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpajnvsgj2.php:30\n\
    Stack trace:\n#0 /tmp/tmpajnvsgj2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpajnvsgj2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $res = [2, 3];\n    $a = 1;\n    $b = 2;\n    while\
    \ (true) {\n        $fn = $a + $b;\n        if (check_prime($fn)) {\n        \
    \    $res[] = $fn;\n        }\n        if (count($res) == $n) {\n            return\
    \ $res[count($res) - 1];\n        }\n        $a = $b;\n        $b = $fn;\n   \
    \ }\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function check_prime()\
    \ in /tmp/tmpe6kg1ff1.php:19\nStack trace:\n#0 /tmp/tmpe6kg1ff1.php(30): prime_fib(1)\n\
    #1 /tmp/tmpe6kg1ff1.php(34): candidate(1)\n#2 /tmp/tmpe6kg1ff1.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe6kg1ff1.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $x = 0;\n    $y = 1;\n    $i = 0;\n    while ($i\
    \ < $n) {\n        $x = $x + $y;\n        if (is_prime($x)) {\n            $i\
    \ = $i + 1;\n        }\n        $tmp = $x;\n        $x = $y;\n        $y = $tmp;\n\
    \    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpnlwxkmo4.php:19\nStack trace:\n#0 /tmp/tmpnlwxkmo4.php(30): prime_fib(1)\n\
    #1 /tmp/tmpnlwxkmo4.php(34): candidate(1)\n#2 /tmp/tmpnlwxkmo4.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnlwxkmo4.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  // WRITE YOUR CODE HERE...\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9vjco4bs.php:22\n\
    Stack trace:\n#0 /tmp/tmp9vjco4bs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9vjco4bs.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = [2, 3];\n\twhile (count($fib) < $n) {\n\t\t\
    $fib[] = $fib[count($fib) - 1] + $fib[count($fib) - 2];\n\t}\n\tif (is_prime($fib[$n\
    \ - 1])) {\n\t\treturn $fib[$n - 1];\n\t} else {\n\t\treturn prime_fib($n - 1);\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpwjbdfnwg.php:18\nStack trace:\n#0 /tmp/tmpwjbdfnwg.php(26): prime_fib(1)\n\
    #1 /tmp/tmpwjbdfnwg.php(30): candidate(1)\n#2 /tmp/tmpwjbdfnwg.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwjbdfnwg.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = array(2, 3);\n  $i = 2;\n  while (true) {\n\
    \    $fibs[] = $fibs[$i - 1] + $fibs[$i - 2];\n    if (is_prime($fibs[$i])) {\n\
    \      $i++;\n      if ($i == $n) {\n        return $fibs[$i - 1];\n      }\n\
    \    }\n  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp7wo6lfbu.php:18\nStack trace:\n#0 /tmp/tmp7wo6lfbu.php(28): prime_fib(1)\n\
    #1 /tmp/tmp7wo6lfbu.php(32): candidate(1)\n#2 /tmp/tmp7wo6lfbu.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7wo6lfbu.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5dlkke82.php:22\n\
    Stack trace:\n#0 /tmp/tmp5dlkke82.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5dlkke82.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib[] = 1;\n    $fib[] = 1;\n    $prime_fib[] =\
    \ 2;\n    $prime_fib[] = 3;\n    for ($i = 2; $i < $n; $i++) {\n        $fib[]\
    \ = $fib[$i - 1] + $fib[$i - 2];\n        if (is_prime($fib[$i])) {\n        \
    \    $prime_fib[] = $fib[$i];\n        }\n    }\n    return $prime_fib[$n - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp8ash_m2z.php:20\nStack trace:\n#0 /tmp/tmp8ash_m2z.php(28): prime_fib(3)\n\
    #1 /tmp/tmp8ash_m2z.php(34): candidate(3)\n#2 /tmp/tmp8ash_m2z.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8ash_m2z.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 0) {\n        return -1;\n    }\n    $fibs\
    \ = [1, 1];\n    $prime_fibs = [2];\n    $idx = 1;\n    while (count($prime_fibs)\
    \ < $n) {\n        $fibs[$idx + 1] = $fibs[$idx] + $fibs[$idx - 1];\n        if\
    \ (is_prime($fibs[$idx + 1])) {\n            $prime_fibs[] = $fibs[$idx + 1];\n\
    \        }\n        $idx++;\n    }\n    return $prime_fibs[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp74a2fq0h.php:22\nStack trace:\n#0 /tmp/tmp74a2fq0h.php(31): prime_fib(2)\n\
    #1 /tmp/tmp74a2fq0h.php(36): candidate(2)\n#2 /tmp/tmp74a2fq0h.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp74a2fq0h.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2)\
    \ {\n    return 3;\n  }\n  $f1 = 2;\n  $f2 = 3;\n  $f3 = 5;\n  $counter = 3;\n\
    \  while ($counter < $n) {\n    $f1 = $f2;\n    $f2 = $f3;\n    $f3 = $f1 + $f2;\n\
    \    if (prime($f3)) {\n      $counter++;\n    }\n  }\n  return $f3;\n}\n\necho\
    \ prime_fib(4);\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime() in /tmp/tmptbd9iti6.php:28\n\
    Stack trace:\n#0 /tmp/tmptbd9iti6.php(35): prime_fib(4)\n#1 {main}\n  thrown in\
    \ /tmp/tmptbd9iti6.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    for ($i = 0, $a = 1, $b = 0; $i < $n; $i++) {\n\
    \        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n        if (is_prime($c))\
    \ {\n            $result = $c;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp6ym1lw91.php:18\nStack trace:\n#0 /tmp/tmp6ym1lw91.php(26): prime_fib(1)\n\
    #1 /tmp/tmp6ym1lw91.php(30): candidate(1)\n#2 /tmp/tmp6ym1lw91.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6ym1lw91.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $nth_prime_fib = 0;\n    $i = 0;\n    while ($i\
    \ <= $n) {\n        $fib_num = fib($i);\n        if (is_prime($fib_num)) {\n \
    \           $nth_prime_fib = $fib_num;\n            $i++;\n        }\n    }\n\
    \    return $nth_prime_fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp36_5gmee.php:17\n\
    Stack trace:\n#0 /tmp/tmp36_5gmee.php(27): prime_fib(1)\n#1 /tmp/tmp36_5gmee.php(31):\
    \ candidate(1)\n#2 /tmp/tmp36_5gmee.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp36_5gmee.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = new Fibonacci();\n    $fib->rewind();\n \
    \   $i = 0;\n    while ($i < $n) {\n        $fib->next();\n        if (is_prime($fib->current()))\
    \ {\n            $i++;\n        }\n    }\n    return $fib->current();\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'Fibonacci' not found in /tmp/tmpm12lhxnp.php:14\n\
    Stack trace:\n#0 /tmp/tmpm12lhxnp.php(27): prime_fib(1)\n#1 /tmp/tmpm12lhxnp.php(31):\
    \ candidate(1)\n#2 /tmp/tmpm12lhxnp.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpm12lhxnp.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $j = 1;\n    $fibNum = 0;\n    $count\
    \ = 0;\n    while ($count < $n) {\n        $fibNum = $i + $j;\n        $i = $j;\n\
    \        $j = $fibNum;\n        if (isPrime($fibNum)) {\n            $count++;\n\
    \        }\n    }\n    return $fibNum;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isPrime() in\
    \ /tmp/tmpjygr2e3n.php:22\nStack trace:\n#0 /tmp/tmpjygr2e3n.php(30): prime_fib(1)\n\
    #1 /tmp/tmpjygr2e3n.php(34): candidate(1)\n#2 /tmp/tmpjygr2e3n.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjygr2e3n.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 1) return 0;\n\tif ($n == 2) return 2;\n\
    \t\n\t$i = 0;\n\t$j = 1;\n\t$count = 2;\n\twhile ($count <= $n) {\n\t\t$fib =\
    \ $i + $j;\n\t\tif (is_prime($fib)) $count++;\n\t\t$i = $j;\n\t\t$j = $fib;\n\t\
    }\n\treturn $fib;\n}\n\necho prime_fib(1);\necho prime_fib(2);\necho prime_fib(3);\n\
    echo prime_fib(4);\necho prime_fib(5);\n\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "02\nFatal error: Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpng9jbpad.php:22\nStack trace:\n#0 /tmp/tmpng9jbpad.php(31): prime_fib(3)\n\
    #1 {main}\n  thrown in /tmp/tmpng9jbpad.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 0;\n  $f = 0;\n  $p = 2;\n  $count = 0;\n  while\
    \ ($count != $n) {\n    if (is_prime($p)) {\n      $f = fib($i);\n      if ($f\
    \ == $p) {\n        $count += 1;\n      }\n    }\n    $i += 1;\n    $p += 1;\n\
    \  }\n  return $f;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpvy_tbjgb.php:19\nStack trace:\n#0 /tmp/tmpvy_tbjgb.php(32): prime_fib(1)\n\
    #1 /tmp/tmpvy_tbjgb.php(36): candidate(1)\n#2 /tmp/tmpvy_tbjgb.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvy_tbjgb.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 0;\n    $j = 1;\n    $counter = 0;\n    while\
    \ (true) {\n        $sum = $i + $j;\n        if (is_prime($sum)) {\n         \
    \   $counter++;\n            if ($counter == $n) {\n                return $sum;\n\
    \            }\n        }\n        $i = $j;\n        $j = $sum;\n    }\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4g7b_30s.php:19\nStack trace:\n#0 /tmp/tmp4g7b_30s.php(31): prime_fib(1)\n\
    #1 /tmp/tmp4g7b_30s.php(35): candidate(1)\n#2 /tmp/tmp4g7b_30s.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4g7b_30s.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$i = 2;\n\t$count = 1;\n\twhile ($count < $n) {\n\t\
    \tif (is_prime(fibonacci($i))) {\n\t\t\t$count += 1;\n\t\t}\n\t\t$i += 1;\n\t\
    }\n\treturn fibonacci($i);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmpg4zva6bi.php:22\nStack trace:\n#0 /tmp/tmpg4zva6bi.php(26): prime_fib(1)\n\
    #1 /tmp/tmpg4zva6bi.php(30): candidate(1)\n#2 /tmp/tmpg4zva6bi.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg4zva6bi.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $count =\
    \ 2;\n    while ($count <= $n) {\n        $c = $a + $b;\n        $a = $b;\n  \
    \      $b = $c;\n        if (is_prime($c)) {\n            $count++;\n        }\n\
    \    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xk7x9rn.php:34\n\
    Stack trace:\n#0 /tmp/tmp5xk7x9rn.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5xk7x9rn.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    for ($i = 0, $j = 1, $k = 0, $l = 0; $l < $n; $k++)\
    \ {\n        $i += $j;\n        $j = $i - $j;\n        if ($i > 1 && is_prime($i))\
    \ {\n            $l++;\n        }\n    }\n    return $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp6gsk5h6h.php:17\nStack trace:\n#0 /tmp/tmp6gsk5h6h.php(25): prime_fib(1)\n\
    #1 /tmp/tmp6gsk5h6h.php(29): candidate(1)\n#2 /tmp/tmp6gsk5h6h.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6gsk5h6h.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $num1 = 0;\n    $num2 = 1;\n    $counter = 0;\n\
    \    while ($counter < $n) {\n        $sum = $num1 + $num2;\n        $num1 = $num2;\n\
    \        $num2 = $sum;\n        if (is_prime($sum)) {\n            $counter++;\n\
    \        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpg_fvhmdf.php:21\nStack trace:\n#0 /tmp/tmpg_fvhmdf.php(29): prime_fib(1)\n\
    #1 /tmp/tmpg_fvhmdf.php(33): candidate(1)\n#2 /tmp/tmpg_fvhmdf.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg_fvhmdf.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$count = 1;\n\t$i = 1;\n\twhile ($count < $n) {\n\t\
    \t$i++;\n\t\tif (isPrime($i) && isFibonacci($i)) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhpbwksq.php:30\n\
    Stack trace:\n#0 /tmp/tmpyhpbwksq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpyhpbwksq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$a = 0;\n\t$b = 1;\n\t$c = $a + $b;\n\t$i = 1;\n\t\
    while ($i < $n) {\n\t\tif (gmp_prob_prime($c)) {\n\t\t\t$i++;\n\t\t}\n\t\t$a =\
    \ $b;\n\t\t$b = $c;\n\t\t$c = $a + $b;\n\t}\n\treturn $c;\n}\n\nfor ($i = 1; $i\
    \ <= 5; $i++) {\n\techo \"prime_fib($i) = \" . prime_fib($i) . \"\\n\";\n}\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "prime_fib(1) = 1\n\nFatal error: Uncaught Error: Call to undefined function\
    \ gmp_prob_prime() in /tmp/tmp7f7enas7.php:19\nStack trace:\n#0 /tmp/tmp7f7enas7.php(30):\
    \ prime_fib(2)\n#1 {main}\n  thrown in /tmp/tmp7f7enas7.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = array(2, 3);\n\n\t$cur_fib = 2;\n\t$next_fib\
    \ = 3;\n\t$num_prime_fib = 1;\n\twhile ($num_prime_fib < $n) {\n\t\t$prime = TRUE;\n\
    \t\tfor ($i = 2; $i < $next_fib && $prime; $i++) {\n\t\t\tif ($next_fib % $i ==\
    \ 0) {\n\t\t\t\t$prime = FALSE;\n\t\t\t}\n\t\t}\n\t\tif ($prime) {\n\t\t\t$num_prime_fib++;\n\
    \t\t\tarray_push($fib, $next_fib);\n\t\t}\n\t\t$new_fib = $cur_fib + $next_fib;\n\
    \t\t$cur_fib = $next_fib;\n\t\t$next_fib = $new_fib;\n\t}\n\treturn $fib[$n -\
    \ 1];\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppq6juewi.php:43\n\
    Stack trace:\n#0 /tmp/tmppq6juewi.php(53): test()\n#1 {main}\n  thrown in /tmp/tmppq6juewi.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$i = 1;\n\t$fib_n = 0;\n\t$fib_n_1 = 1;\n\t$fib_n_2\
    \ = 0;\n\tdo {\n\t\t$fib_n = $fib_n_1 + $fib_n_2;\n\t\t$fib_n_2 = $fib_n_1;\n\t\
    \t$fib_n_1 = $fib_n;\n\t\tif (is_prime($fib_n)) {\n\t\t\t$i++;\n\t\t}\n\t} while\
    \ ($i < $n);\n\treturn $fib_n;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmprz6tsy_9.php:22\nStack trace:\n#0 /tmp/tmprz6tsy_9.php(30): prime_fib(1)\n\
    #1 /tmp/tmprz6tsy_9.php(34): candidate(1)\n#2 /tmp/tmprz6tsy_9.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmprz6tsy_9.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prime_fib = 2;\n    $fib = 2;\n    $last_prime_fib\
    \ = 2;\n    $last_fib = 1;\n    $i = 1;\n    while ($i < $n) {\n        $fib =\
    \ $last_fib + $fib;\n        if ($fib == $prime_fib) {\n            $last_prime_fib\
    \ = $prime_fib;\n            $prime_fib = next_prime($prime_fib);\n          \
    \  $i++;\n        } else if ($fib > $prime_fib) {\n            $last_prime_fib\
    \ = $prime_fib;\n            $prime_fib = next_prime($prime_fib);\n        }\n\
    \    }\n    return $last_prime_fib;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function next_prime()\
    \ in /tmp/tmpnv9o2cbz.php:27\nStack trace:\n#0 /tmp/tmpnv9o2cbz.php(33): prime_fib(2)\n\
    #1 /tmp/tmpnv9o2cbz.php(38): candidate(2)\n#2 /tmp/tmpnv9o2cbz.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnv9o2cbz.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $a = 0;\n  $b = 1;\n  $result = [];\n  while (count($result)\
    \ < $n) {\n    $c = $a + $b;\n    if (is_prime($c)) {\n      $result[] = $c;\n\
    \    }\n    $a = $b;\n    $b = $c;\n  }\n  return $result[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpfvondfc8.php:19\nStack trace:\n#0 /tmp/tmpfvondfc8.php(29): prime_fib(1)\n\
    #1 /tmp/tmpfvondfc8.php(33): candidate(1)\n#2 /tmp/tmpfvondfc8.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpfvondfc8.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t// YOUR CODE GOES HERE\n    $i = 3;\n    $num = 2;\n\
    \    while (true) {\n        if ($i <= 1) {\n            return $num;\n      \
    \  }\n        if (isPrime($i) && isFib($i)) {\n            $num = $i;\n      \
    \      $i--;\n        }\n        $i++;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isPrime() in\
    \ /tmp/tmpsyxj9_g3.php:21\nStack trace:\n#0 /tmp/tmpsyxj9_g3.php(29): prime_fib(1)\n\
    #1 /tmp/tmpsyxj9_g3.php(33): candidate(1)\n#2 /tmp/tmpsyxj9_g3.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsyxj9_g3.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n    while ($i < $n)\
    \ {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n        $i++;\n    }\n   \
    \ for ($i = 0; $i < $n; $i++) {\n        if ($fib[$i] % 2 == 0 || $fib[$i] % 3\
    \ == 0 || $fib[$i] % 5 == 0 || $fib[$i] % 7 == 0) {\n            continue;\n \
    \       }\n        $prime_fib[] = $fib[$i];\n    }\n    return $prime_fib[$n -\
    \ 1];\n}\necho prime_fib(5);\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjrrd3ro.php:34\n\
    Stack trace:\n#0 /tmp/tmpmjrrd3ro.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmjrrd3ro.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $current = 2;\n    $next = 3;\n    for ($i = 2;\
    \ $i <= $n; ++$i) {\n        $current += $next;\n        $next += $current;\n\
    \    }\n    if ($n % 2 == 0) {\n        return $current;\n    } else {\n     \
    \   return $next;\n    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3cyrvlfb.php:32\n\
    Stack trace:\n#0 /tmp/tmp3cyrvlfb.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3cyrvlfb.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = [1, 2];\n\t$counter = 0;\n\twhile (count($fibs)\
    \ < $n) {\n\t\t$fibs[] = array_sum(array_slice($fibs, -2));\n\t}\n\tforeach ($fibs\
    \ as $fib) {\n\t\tif (is_prime($fib)) {\n\t\t\t$counter++;\n\t\t}\n\t\tif ($counter\
    \ == $n) {\n\t\t\treturn $fib;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpt_3_nnoi.php:20\nStack trace:\n#0 /tmp/tmpt_3_nnoi.php(30): prime_fib(1)\n\
    #1 /tmp/tmpt_3_nnoi.php(34): candidate(1)\n#2 /tmp/tmpt_3_nnoi.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpt_3_nnoi.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $fib_prev = 1;\n    $fib_curr = 1;\n\
    \    while (true) {\n        $fib_next = $fib_prev + $fib_curr;\n        if ($i\
    \ == $n) {\n            return $fib_curr;\n        }\n        if (is_prime($fib_curr))\
    \ {\n            $i++;\n        }\n        $fib_prev = $fib_curr;\n        $fib_curr\
    \ = $fib_next;\n    }\n}\n\necho prime_fib(4);\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp2pjfj7p7.php:22\nStack trace:\n#0 /tmp/tmp2pjfj7p7.php(30): prime_fib(4)\n\
    #1 {main}\n  thrown in /tmp/tmp2pjfj7p7.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 0;\n  $j = 1;\n  $count = 0;\n  while (true)\
    \ {\n    $k = $i + $j;\n    $i = $j;\n    $j = $k;\n    if (is_prime($k)) {\n\
    \      $count++;\n      if ($count == $n) {\n        return $k;\n      }\n   \
    \ }\n  }\n}\n\necho \"Prime Fibonacci numbers:\\n\";\nforeach (range(1, 10) as\
    \ $i) {\n  echo \"prime_fib($i) = \" . prime_fib($i) . \"\\n\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Prime Fibonacci numbers:\n\nFatal error: Uncaught Error: Call to undefined\
    \ function is_prime() in /tmp/tmpaixi7d41.php:21\nStack trace:\n#0 /tmp/tmpaixi7d41.php(32):\
    \ prime_fib(1)\n#1 {main}\n  thrown in /tmp/tmpaixi7d41.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $result = 2;\n    $last = 1;\n    $tmp = 0;\n  \
    \  $count = 1;\n    while ($count < $n) {\n        $tmp = $result;\n        $result\
    \ = $result + $last;\n        $last = $tmp;\n        if (is_prime($result)) {\n\
    \            $count++;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp5sysj6dd.php:22\nStack trace:\n#0 /tmp/tmp5sysj6dd.php(29): prime_fib(2)\n\
    #1 /tmp/tmp5sysj6dd.php(34): candidate(2)\n#2 /tmp/tmp5sysj6dd.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5sysj6dd.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n    while (count($fib)\
    \ <= $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n        $i++;\n \
    \   }\n    $arr = [];\n    foreach ($fib as $num) {\n        if (is_prime($num))\
    \ {\n            $arr[] = $num;\n        }\n    }\n    return $arr[$n - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpbc560iql.php:22\nStack trace:\n#0 /tmp/tmpbc560iql.php(30): prime_fib(1)\n\
    #1 /tmp/tmpbc560iql.php(34): candidate(1)\n#2 /tmp/tmpbc560iql.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbc560iql.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibonacci = [2, 3];\n  $i = 2;\n  while (1) {\n \
    \   $i++;\n    $fibonacci[$i] = $fibonacci[$i - 1] + $fibonacci[$i - 2];\n   \
    \ if ($i === $n) {\n      return $fibonacci[$i];\n    }\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 134217736 bytes) in /tmp/tmpx96_j3_g.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = fib($n);\n    if(is_prime($fib)) {\n    \
    \    return $fib;\n    } else {\n        $j = 1;\n        $i = $n;\n        while\
    \ (1) {\n            $j++;\n            $i = $i - $j;\n            $fib = fib($i);\n\
    \            if(is_prime($fib)) {\n                return $fib;\n            }\n\
    \        }\n    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp95d4xzg5.php:14\n\
    Stack trace:\n#0 /tmp/tmp95d4xzg5.php(32): prime_fib(1)\n#1 /tmp/tmp95d4xzg5.php(36):\
    \ candidate(1)\n#2 /tmp/tmp95d4xzg5.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp95d4xzg5.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  for ($i = 1, $a = 0, $b = 1; $i <= $n; $i++) {\n \
    \   $c = $a + $b;\n    if (is_prime($c)) {\n      return $c;\n    }\n    $a =\
    \ $b;\n    $b = $c;\n  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp5uuffehk.php:16\nStack trace:\n#0 /tmp/tmp5uuffehk.php(25): prime_fib(1)\n\
    #1 /tmp/tmp5uuffehk.php(29): candidate(1)\n#2 /tmp/tmp5uuffehk.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5uuffehk.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // Sieve of Eratosthenes\n    // ////////////////////////////////////////////////////\n\
    \    $numbers = array_fill(0, $n * 2, true);\n    $count = 0;\n    $i = 2;\n \
    \   while (true) {\n        if ($count == $n) break;\n        if ($numbers[$i])\
    \ {\n            for ($j = $i * 2; $j < $n * 2; $j += $i) {\n                $numbers[$j]\
    \ = false;\n            }\n            $count++;\n        }\n        $i++;\n \
    \   }\n    // ////////////////////////////////////////////////////\n    $fibs\
    \ = array();\n    $fibs[0] = 0;\n    $fibs[1] = 1;\n    $i = 2;\n    while (true)\
    \ {\n        $fibs[$i] = $fibs[$i - 1] + $fibs[$i - 2];\n        if ($fibs[$i]\
    \ > $n * 2) break;\n        $i++;\n    }\n    $i = 0;\n    foreach ($numbers as\
    \ $key => $value) {\n        if ($value) {\n            if ($key == $fibs[$i])\
    \ {\n                return $key;\n            }\n            $i++;\n        }\n\
    \    }\n}\n\necho '<pre>';\necho prime_fib(1);\necho '</pre>';\n\necho '<pre>';\n\
    echo prime_fib(2);\necho '</pre>';\n\necho '<pre>';\necho prime_fib(3);\necho\
    \ '</pre>';\n\necho '<pre>';\necho prime_fib(4);\necho '</pre>';\n\necho '<pre>';\n\
    echo prime_fib(5);\necho '</pre>';\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: b'<pre>'
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 0;\n    $l = 2;\n    $r = 3;\n    $res = 0;\n\
    \    while ($i < $n) {\n        $res = $l + $r;\n        $l = $r;\n        $r\
    \ = $res;\n        if (is_prime($res)) {\n            $i++;\n        }\n    }\n\
    \    return $res;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp1tyoz668.php:22\nStack trace:\n#0 /tmp/tmp1tyoz668.php(30): prime_fib(1)\n\
    #1 /tmp/tmp1tyoz668.php(34): candidate(1)\n#2 /tmp/tmp1tyoz668.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1tyoz668.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 1) {\n\t\treturn false;\n\t}\n\t$fib = 2;\n\
    \t$i = 1;\n\t$fib1 = 1;\n\t$fib2 = 1;\n\twhile ($i < $n) {\n\t\t$fib = $fib1 +\
    \ $fib2;\n\t\t$fib2 = $fib1;\n\t\t$fib1 = $fib;\n\t\tif (is_prime($fib)) {\n\t\
    \t\t$i++;\n\t\t}\n\t}\n\treturn $fib;\n}\n\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpbliuxlkk.php:25\nStack trace:\n#0 /tmp/tmpbliuxlkk.php(33): prime_fib(2)\n\
    #1 /tmp/tmpbliuxlkk.php(38): candidate(2)\n#2 /tmp/tmpbliuxlkk.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbliuxlkk.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib_nums = [1, 1];\n    $i = 2;\n    while (count($fib_nums)\
    \ < $n + 1) {\n        $fib_nums[] = $fib_nums[$i - 1] + $fib_nums[$i - 2];\n\
    \        $i++;\n    }\n    $fib_nums = array_filter($fib_nums, function($x) {\n\
    \        return $x == 2 || $x % 2 != 0;\n    });\n    $primes = [];\n    for ($i\
    \ = 0; $i < count($fib_nums); $i++) {\n        if ($fib_nums[$i] > 1) {\n    \
    \        $is_prime = true;\n            for ($j = 2; $j < sqrt($fib_nums[$i]);\
    \ $j++) {\n                if ($fib_nums[$i] % $j == 0) {\n                  \
    \  $is_prime = false;\n                    break;\n                }\n       \
    \     }\n            if ($is_prime) $primes[] = $fib_nums[$i];\n        }\n  \
    \  }\n    return $primes[$n - 1];\n}\n\necho prime_fib(1).\"\\n\";\necho prime_fib(2).\"\
    \\n\";\necho prime_fib(3).\"\\n\";\necho prime_fib(4).\"\\n\";\necho prime_fib(5).\"\
    \\n\";\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7d9xnuzy.php:49\n\
    Stack trace:\n#0 /tmp/tmp7d9xnuzy.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp7d9xnuzy.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib_nums = array(1, 1);\n\t$i = 2;\n\t$count = 0;\n\
    \twhile ($count < $n) {\n\t\t$next_num = $fib_nums[$i - 1] + $fib_nums[$i - 2];\n\
    \t\tif (is_prime($next_num)) {\n\t\t\t$count++;\n\t\t\t$fib_nums[] = $next_num;\n\
    \t\t}\n\t\t$i++;\n\t}\n\treturn $fib_nums[$i - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpuor9k5jd.php:19\nStack trace:\n#0 /tmp/tmpuor9k5jd.php(29): prime_fib(1)\n\
    #1 /tmp/tmpuor9k5jd.php(33): candidate(1)\n#2 /tmp/tmpuor9k5jd.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpuor9k5jd.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 1) {\n        return false;\n    }\n\n\
    \    $fib = $curr = $prev = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if\
    \ ($i == 1) {\n            $fib = $curr = $prev = 1;\n        } else {\n     \
    \       $curr = $prev + $fib;\n            $prev = $fib;\n            $fib = $curr;\n\
    \        }\n\n        if (is_prime($fib)) {\n            $n--;\n        }\n  \
    \  }\n\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpv1qanrdv.php:28\nStack trace:\n#0 /tmp/tmpv1qanrdv.php(37): prime_fib(1)\n\
    #1 /tmp/tmpv1qanrdv.php(41): candidate(1)\n#2 /tmp/tmpv1qanrdv.php(53): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv1qanrdv.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $num = 0;\n    $count = 0;\n    $fib = 1;\n    $fib_prev\
    \ = 0;\n    while ($count < $n) {\n        if (is_prime($fib)) {\n           \
    \ $count++;\n            $num = $fib;\n        }\n        $tmp = $fib;\n     \
    \   $fib += $fib_prev;\n        $fib_prev = $tmp;\n    }\n    return $num;\n}\n\
    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp5v_7l_0s.php:19\nStack trace:\n#0 /tmp/tmp5v_7l_0s.php(31): prime_fib(1)\n\
    #1 /tmp/tmp5v_7l_0s.php(35): candidate(1)\n#2 /tmp/tmp5v_7l_0s.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5v_7l_0s.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $a = 1;\n  $b = 1;\n  $c = 2;\n  $i = 1;\n  $j = 1;\n\
    \  $k = 1;\n  while ($i < $n) {\n    if (is_prime($j)) {\n      $i++;\n    }\n\
    \    if ($i < $n) {\n      $a = $b;\n      $b = $c;\n      $c = $a + $b;\n   \
    \   $j = $k;\n      $k = $c;\n    }\n  }\n  return $j;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpquea05kt.php:40\n\
    Stack trace:\n#0 /tmp/tmpquea05kt.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpquea05kt.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2)\
    \ {\n    return 3;\n  }\n  $a = 2;\n  $b = 3;\n  $c = 5;\n  $i = 3;\n  while ($i\
    \ <= $n) {\n    if (is_prime($c)) {\n      $i++;\n    }\n    $a = $b;\n    $b\
    \ = $c;\n    $c = $a + $b;\n  }\n  return $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpcwwu9a7q.php:25\nStack trace:\n#0 /tmp/tmpcwwu9a7q.php(36): prime_fib(3)\n\
    #1 /tmp/tmpcwwu9a7q.php(42): candidate(3)\n#2 /tmp/tmpcwwu9a7q.php(52): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcwwu9a7q.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  // your code here\n  $a = 1;\n  $b = 1;\n  $result\
    \ = 1;\n  $n--;\n  while($n > 0) {\n    $result = $a + $b;\n    $a = $b;\n   \
    \ $b = $result;\n    $n--;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe4b74aw9.php:33\n\
    Stack trace:\n#0 /tmp/tmpe4b74aw9.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe4b74aw9.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 2;\n    $num = 0;\n    $num1 = 1;\n    $num2\
    \ = 0;\n    $num3 = 0;\n    while ($i <= $n) {\n        $num3 = $num2 + $num1;\n\
    \        $num1 = $num2;\n        $num2 = $num3;\n        if (is_prime($num3))\
    \ {\n            $num = $num3;\n            $i++;\n        }\n    }\n    return\
    \ $num;\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9_r34hu.php:35\n\
    Stack trace:\n#0 /tmp/tmpt9_r34hu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpt9_r34hu.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$a = 1;\n\t$b = 1;\n\twhile($n) {\n\t\tif(is_prime($b))\
    \ {\n\t\t\t$n--;\n\t\t}\n\t\tif($n) {\n\t\t\t$c = $a + $b;\n\t\t\t$a = $b;\n\t\
    \t\t$b = $c;\n\t\t}\n\t}\n\treturn $b;\n}\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpapigibqh.php:17\nStack trace:\n#0 /tmp/tmpapigibqh.php(29): prime_fib(1)\n\
    #1 /tmp/tmpapigibqh.php(33): candidate(1)\n#2 /tmp/tmpapigibqh.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpapigibqh.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $ret = 0;\n    $i = 0;\n    $fn_2 = 0;\n    $fn_1\
    \ = 1;\n    while ($i < $n) {\n        $fn = $fn_2 + $fn_1;\n        if (is_prime($fn))\
    \ {\n            $ret = $fn;\n            $i += 1;\n        }\n        $fn_2 =\
    \ $fn_1;\n        $fn_1 = $fn;\n    }\n    return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp37p0ikkq.php:20\nStack trace:\n#0 /tmp/tmp37p0ikkq.php(31): prime_fib(1)\n\
    #1 /tmp/tmp37p0ikkq.php(35): candidate(1)\n#2 /tmp/tmp37p0ikkq.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp37p0ikkq.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = fibs_up_to(1000000);\n    $primes = primes_up_to(1000000);\n\
    \    $prime_fibs = array_intersect($fibs, $primes);\n    return $prime_fibs[$n\
    \ - 1];\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibs_up_to()\
    \ in /tmp/tmpfttzd_up.php:14\nStack trace:\n#0 /tmp/tmpfttzd_up.php(20): prime_fib(1)\n\
    #1 /tmp/tmpfttzd_up.php(24): candidate(1)\n#2 /tmp/tmpfttzd_up.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpfttzd_up.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prime_fibs = [2, 3];\n    $fibs = [2, 3];\n   \
    \ $i = 2;\n    while ($i < $n) {\n        $fibs[$i] = $fibs[$i - 1] + $fibs[$i\
    \ - 2];\n        if (is_prime($fibs[$i])) {\n            $prime_fibs[] = $fibs[$i];\n\
    \            $i++;\n        }\n    }\n    return $prime_fibs[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpqzkj_ru3.php:19\nStack trace:\n#0 /tmp/tmpqzkj_ru3.php(28): prime_fib(3)\n\
    #1 /tmp/tmpqzkj_ru3.php(34): candidate(3)\n#2 /tmp/tmpqzkj_ru3.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpqzkj_ru3.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = array(2, 3);\n\n  while(count($fibs) < $n)\
    \ {\n    $fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n  }\n\n\
    \  for($i = count($fibs) - 1; $i >= 0; $i--) {\n    if(is_prime($fibs[$i])) {\n\
    \      return $fibs[$i];\n    }\n  }\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpynzqjhm7.php:21\nStack trace:\n#0 /tmp/tmpynzqjhm7.php(28): prime_fib(1)\n\
    #1 /tmp/tmpynzqjhm7.php(32): candidate(1)\n#2 /tmp/tmpynzqjhm7.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpynzqjhm7.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $sum = 0;\n  $previous = 1;\n  $current = 2;\n  $i\
    \ = 0;\n  while ($i < $n) {\n    if (is_prime($current)) {\n      $sum = $current;\n\
    \      $i++;\n    }\n    $previous = $current;\n    $current = $previous + $current;\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp73ebej66.php:19\nStack trace:\n#0 /tmp/tmp73ebej66.php(30): prime_fib(1)\n\
    #1 /tmp/tmp73ebej66.php(34): candidate(1)\n#2 /tmp/tmp73ebej66.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp73ebej66.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    for ($i = 1, $j = 1, $k = 1; $k < $n; $k++) {\n\
    \        if (is_prime($i)) {\n            $j = $i;\n        }\n        $i = $i\
    \ + $j;\n    }\n    return $j;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpresio1en.php:28\n\
    Stack trace:\n#0 /tmp/tmpresio1en.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpresio1en.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$i = 1;\n\t$fib = 0;\n\t$primes = array();\n\twhile(count($primes)\
    \ < $n) {\n\t\t$fib = fib($i);\n\t\tif(is_prime($fib)) {\n\t\t\t$primes[] = $fib;\n\
    \t\t}\n\t\t$i++;\n\t}\n\treturn end($primes);\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpd1dscw0g.php:18\n\
    Stack trace:\n#0 /tmp/tmpd1dscw0g.php(27): prime_fib(1)\n#1 /tmp/tmpd1dscw0g.php(31):\
    \ candidate(1)\n#2 /tmp/tmpd1dscw0g.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpd1dscw0g.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$curr = 1;\n\t$prev = 0;\n\t$count = 1;\n\t$fib =\
    \ 2;\n\twhile ($count < $n) {\n\t\t$fib = $curr + $prev;\n\t\tif (is_prime($fib))\
    \ {\n\t\t\t$count += 1;\n\t\t}\n\t\t$prev = $curr;\n\t\t$curr = $fib;\n\t}\n\t\
    return $fib;\n}\necho \"prime_fib(1) => \" . prime_fib(1) . \"\\n\";\necho \"\
    prime_fib(2) => \" . prime_fib(2) . \"\\n\";\necho \"prime_fib(3) => \" . prime_fib(3)\
    \ . \"\\n\";\necho \"prime_fib(4) => \" . prime_fib(4) . \"\\n\";\necho \"prime_fib(5)\
    \ => \" . prime_fib(5) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "prime_fib(1) => 2\n\nFatal error: Uncaught Error: Call to undefined function\
    \ is_prime() in /tmp/tmpxsczabyx.php:20\nStack trace:\n#0 /tmp/tmpxsczabyx.php(29):\
    \ prime_fib(2)\n#1 {main}\n  thrown in /tmp/tmpxsczabyx.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib = fibonacci($n);\n  $arr = array_filter($fib,\
    \ \"is_prime\");\n  return $arr[$n - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmpih2h9s3q.php:14\nStack trace:\n#0 /tmp/tmpih2h9s3q.php(20): prime_fib(1)\n\
    #1 /tmp/tmpih2h9s3q.php(24): candidate(1)\n#2 /tmp/tmpih2h9s3q.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpih2h9s3q.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  if ($n < 1) {\n    return 0;\n  }\n  $count = 1;\n\
    \  $k = 0;\n  $prime = 2;\n  while ($count < $n) {\n    $prime = fib($k++);\n\
    \    if (is_prime($prime)) {\n      $count++;\n    }\n  }\n  return $prime;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp15p1txor.php:21\n\
    Stack trace:\n#0 /tmp/tmp15p1txor.php(30): prime_fib(2)\n#1 /tmp/tmp15p1txor.php(35):\
    \ candidate(2)\n#2 /tmp/tmp15p1txor.php(46): test()\n#3 {main}\n  thrown in /tmp/tmp15p1txor.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = [2, 3];\n  $curr = 3;\n  while (count($fibs)\
    \ < $n) {\n    $curr = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n  \
    \  if (is_prime($curr)) {\n      $fibs[] = $curr;\n    }\n  }\n  return $fibs[count($fibs)\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdeyo291b.php:30\n\
    Stack trace:\n#0 /tmp/tmpdeyo291b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdeyo291b.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $result = 0;\n  if($n == 1) {\n    $result = 2;\n\
    \  }\n  else if($n == 2) {\n    $result = 3;\n  }\n  else {\n    $a = 2;\n   \
    \ $b = 3;\n    for($i = 0; $i < $n - 2; $i++) {\n      $result = $a + $b;\n  \
    \    $a = $b;\n      $b = $result;\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprc9j23yt.php:40\n\
    Stack trace:\n#0 /tmp/tmprc9j23yt.php(49): test()\n#1 {main}\n  thrown in /tmp/tmprc9j23yt.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(2, 3);\n    while (count($fibs) <\
    \ $n) {\n        $fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n\
    \    }\n    return $fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp44n8krpz.php:29\n\
    Stack trace:\n#0 /tmp/tmp44n8krpz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp44n8krpz.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $previous = 1;\n  $current = 2;\n  $count = 0;\n \
    \ while ($count < $n) {\n    $count = is_prime($current) ? $count + 1 : $count;\n\
    \    if ($count == $n) return $current;\n    $previous = $current;\n    $current\
    \ = $previous + $current;\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpm3bjer5w.php:18\nStack trace:\n#0 /tmp/tmpm3bjer5w.php(25): prime_fib(1)\n\
    #1 /tmp/tmpm3bjer5w.php(29): candidate(1)\n#2 /tmp/tmpm3bjer5w.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpm3bjer5w.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = [2, 3];\n  while (count($fibs) < $n) {\n \
    \   $fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n  }\n  $fibs\
    \ = array_filter($fibs, 'is_prime');\n  return $fibs[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'is_prime' not found or invalid function name in /tmp/tmp73db0rln.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73db0rln.php:27\n\
    Stack trace:\n#0 /tmp/tmp73db0rln.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp73db0rln.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$prev = 1;\n\t$curr = 1;\n\t$i = 2;\n\twhile ($i <\
    \ $n) {\n\t\t$temp = $curr;\n\t\t$curr = $prev + $curr;\n\t\t$prev = $temp;\n\t\
    \t$i++;\n\t}\n\treturn $curr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj03aho_s.php:31\n\
    Stack trace:\n#0 /tmp/tmpj03aho_s.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpj03aho_s.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 2;\n    $b = 3;\n    $c = 5;\n    $counter\
    \ = 4;\n    $fibonacci = $c;\n    while ($counter <= $n) {\n        $is_prime\
    \ = true;\n        for ($i = 2; $i < $fibonacci; $i++) {\n            if ($fibonacci\
    \ % $i == 0) {\n                $is_prime = false;\n                break;\n \
    \           }\n        }\n        if ($is_prime) {\n            $counter++;\n\
    \        }\n        $a = $b;\n        $b = $c;\n        $c = $a + $b;\n      \
    \  $fibonacci = $c;\n    }\n    return $fibonacci;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4yvqcwwp.php:42\n\
    Stack trace:\n#0 /tmp/tmp4yvqcwwp.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp4yvqcwwp.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$prime_fib_arr = [2, 3, 5, 13, 89];\n\tif($n > 5)\
    \ {\n\t\tfor($i = 5; $i < $n; $i++) {\n\t\t\t$prime_fib_arr[$i] = $prime_fib_arr[$i\
    \ - 1] + $prime_fib_arr[$i - 2];\n\t\t\tif(!is_prime($prime_fib_arr[$i])) {\n\t\
    \t\t\t$i--;\n\t\t\t}\n\t\t}\n\t}\n\treturn $prime_fib_arr[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpauezzmzn.php:18\nStack trace:\n#0 /tmp/tmpauezzmzn.php(27): prime_fib(6)\n\
    #1 /tmp/tmpauezzmzn.php(36): candidate(6)\n#2 /tmp/tmpauezzmzn.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpauezzmzn.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$nthFibPrime = 2;\n\t$fib = 0;\n\t$i = 0;\n\t$fibPrevPrev\
    \ = 0;\n\t$fibPrev = 1;\n\twhile ($i < $n) {\n\t\t$fib = $fibPrev + $fibPrevPrev;\n\
    \t\tif (is_prime($fib)) {\n\t\t\t$nthFibPrime = $fib;\n\t\t\t$i++;\n\t\t}\n\t\t\
    $fibPrevPrev = $fibPrev;\n\t\t$fibPrev = $fib;\n\t}\n\treturn $nthFibPrime;\n\
    }\n\necho \"\\n\";\necho prime_fib(1) . \"\\n\";\necho prime_fib(2) . \"\\n\"\
    ;\necho prime_fib(3) . \"\\n\";\necho prime_fib(4) . \"\\n\";\necho prime_fib(5)\
    \ . \"\\n\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\nFatal error: Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmp34st80m9.php:21\nStack trace:\n#0 /tmp/tmp34st80m9.php(32): prime_fib(1)\n\
    #1 {main}\n  thrown in /tmp/tmp34st80m9.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = [1, 1];\n  while (count($fibs) < $n) {\n \
    \   $fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n  }\n  foreach\
    \ ($fibs as $idx => $fib) {\n    if (is_prime($fib)) {\n      $primes[] = $fib;\n\
    \    }\n  }\n  return $primes[$n - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpmybqs6xv.php:19\nStack trace:\n#0 /tmp/tmpmybqs6xv.php(27): prime_fib(1)\n\
    #1 /tmp/tmpmybqs6xv.php(31): candidate(1)\n#2 /tmp/tmpmybqs6xv.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmybqs6xv.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception

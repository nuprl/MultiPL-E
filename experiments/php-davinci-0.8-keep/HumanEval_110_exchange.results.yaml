name: HumanEval_110_exchange
language: php
results:
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $count = count($lst1);\n\
    \    $evenLst1 = array_filter($lst1, function($num) {\n        return !($num %\
    \ 2);\n    });\n    $evenLst2 = array_filter($lst2, function($num) {\n       \
    \ return !($num % 2);\n    });\n    if (count($evenLst1) == $count) {\n      \
    \  return \"YES\";\n    }\n    if (count($evenLst2) == $count) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";\n}\nfunction candidate(...$args) {\n   \
    \ return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xrkr7dt.php:34\n\
    Stack trace:\n#0 /tmp/tmp_xrkr7dt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_xrkr7dt.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $evens = 0;\n  $odds = 0;\n\
    \  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 == 0) {\n  \
    \    $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  for ($i = 0; $i <\
    \ count($lst2); $i++) {\n    if ($lst2[$i] % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  if ($evens % 2 == 0) {\n    return \"\
    YES\";\n  } else {\n    return \"NO\";\n  }\n}\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5lwboii.php:44\n\
    Stack trace:\n#0 /tmp/tmpp5lwboii.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpp5lwboii.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1_count = count($lst1);\n\
    \  $lst2_count = count($lst2);\n  $count = $lst1_count + $lst2_count;\n  $new_lst1\
    \ = [];\n  $new_lst2 = [];\n  $result = false;\n  for ($i = 0; $i < $count; $i++)\
    \ {\n    $new_lst1 = array_merge($new_lst1, $lst1);\n    $new_lst2 = array_merge($new_lst2,\
    \ $lst2);\n  }\n  for ($i = 0; $i < $count; $i++) {\n    for ($j = 0; $j < $count;\
    \ $j++) {\n      $tmp = $new_lst1[$i];\n      $new_lst1[$i] = $new_lst2[$j];\n\
    \      $new_lst2[$j] = $tmp;\n      if (check_lst($new_lst1)) {\n        $result\
    \ = true;\n        break;\n      }\n    }\n  }\n  return $result ? \"YES\" : \"\
    NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function check_lst() in\
    \ /tmp/tmphnjmc6ws.php:29\nStack trace:\n#0 /tmp/tmphnjmc6ws.php(39): exchange(Array,\
    \ Array)\n#1 /tmp/tmphnjmc6ws.php(43): candidate(Array, Array)\n#2 /tmp/tmphnjmc6ws.php(52):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmphnjmc6ws.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  foreach ($lst1 as $value) {\n    if ($value % 2 == 0) {\n      $evens++;\n\
    \    } else {\n      $odds++;\n    }\n  }\n  foreach ($lst2 as $value) {\n   \
    \ if ($value % 2 == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n\
    \  }\n  if ($evens > $odds) {\n    return \"YES\";\n  } else {\n    return \"\
    NO\";\n  }\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]);\necho \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "NO\nNO\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_t_9hb0r.php:45\n\
    Stack trace:\n#0 /tmp/tmp_t_9hb0r.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp_t_9hb0r.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\n\
    $result = exchange($lst1, $lst2);\nprint $result;\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1jf_zp_8.php:28\n\
    Stack trace:\n#0 /tmp/tmp1jf_zp_8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1jf_zp_8.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $result1 = $result2 = false;\n\
    \  foreach ($lst1 as $v) {\n    if ($v % 2 == 0) {\n      $result1 = true;\n \
    \     break;\n    }\n  }\n  foreach ($lst2 as $v) {\n    if ($v % 2 == 0) {\n\
    \      $result2 = true;\n      break;\n    }\n  }\n  return $result1 === $result2\
    \ ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppnc3xems.php:35\n\
    Stack trace:\n#0 /tmp/tmppnc3xems.php(43): test()\n#1 {main}\n  thrown in /tmp/tmppnc3xems.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = 0;\n    $odd =\
    \ 0;\n    foreach ($lst1 as $v) {\n        if ($v % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    foreach ($lst2 as\
    \ $v) {\n        if ($v % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    if ($even % 2 == 0) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnho1kyqx.php:44\n\
    Stack trace:\n#0 /tmp/tmpnho1kyqx.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpnho1kyqx.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds_in_lst1 = array_filter($lst1,\
    \ function($i) { return $i % 2; });\n    $odds_in_lst2 = array_filter($lst2, function($i)\
    \ { return $i % 2; });\n    return count($odds_in_lst1) === count($odds_in_lst2)\
    \ ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplje1eftv.php:27\n\
    Stack trace:\n#0 /tmp/tmplje1eftv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplje1eftv.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $output = \"YES\";\n \
    \   foreach ($lst1 as $num) {\n        if ($num % 2 !== 0) {\n            $output\
    \ = \"NO\";\n        }\n    }\n    return $output;\n}\n\n$lst1 = [1, 2, 3, 4];\n\
    $lst2 = [1, 2, 3, 4];\nprint_r(exchange($lst1, $lst2));\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "NO\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxjftrg_.php:31\n\
    Stack trace:\n#0 /tmp/tmpmxjftrg_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmxjftrg_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    if (empty($lst1) || empty($lst2))\
    \ {\n        return \"NO\";\n    }\n    $sum = array_sum($lst1);\n    if ($sum\
    \ % 2 !== 0) {\n        return \"NO\";\n    }\n    $odd = $even = [];\n    foreach\
    \ ($lst2 as $k => $v) {\n        if ($v % 2 !== 0) {\n            $odd[] = $k;\n\
    \        } else {\n            $even[] = $k;\n        }\n    }\n    if (count($odd)\
    \ >= count($even)) {\n        return \"NO\";\n    }\n    return \"YES\";\n}\n\n\
    var_dump(exchange([1, 2, 3, 4], [1, 2, 3, 4]));\nvar_dump(exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4]));\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "string(2) \"NO\"\nstring(2) \"NO\"\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpl9b1rjp0.php:42\nStack trace:\n#0 /tmp/tmpl9b1rjp0.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpl9b1rjp0.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even_number = 0;\n  \
    \  $odd_number = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i]\
    \ % 2 == 0) {\n            $even_number++;\n        } else {\n            $odd_number++;\n\
    \        }\n    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i]\
    \ % 2 == 0) {\n            $even_number++;\n        } else {\n            $odd_number++;\n\
    \        }\n    }\n    if ($even_number % 2 == 0 && $odd_number % 2 == 0) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpla1twm4j.php:44\n\
    Stack trace:\n#0 /tmp/tmpla1twm4j.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpla1twm4j.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $lst2_evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($lst1_odds) === count($lst2_evens)\
    \ ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9l15man.php:29\n\
    Stack trace:\n#0 /tmp/tmph9l15man.php(32): test()\n#1 {main}\n  thrown in /tmp/tmph9l15man.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $count = 0;\n  foreach ($lst1\
    \ as $key => $value) {\n    if ($value % 2 !== 0) {\n      $count++;\n    }\n\
    \  }\n  foreach ($lst2 as $key => $value) {\n    if ($value % 2 === 0) {\n   \
    \   $count--;\n    }\n  }\n  if ($count <= 0) {\n    return \"YES\";\n  } else\
    \ {\n    return \"NO\";\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$odd1 = 0;\n\t$odd2 = 0;\n\
    \tfor ($i = 0; $i < count($lst1); $i++) {\n\t\tif ($lst1[$i] % 2 == 1) $odd1++;\n\
    \t}\n\tfor ($i = 0; $i < count($lst2); $i++) {\n\t\tif ($lst2[$i] % 2 == 1) $odd2++;\n\
    \t}\n\treturn $odd1 != $odd2 ? \"NO\" : \"YES\";\n}\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [5, 6, 7, 8]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 7, 9]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nNO\nYES\nNO\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_01kfco.php:36\n\
    Stack trace:\n#0 /tmp/tmpb_01kfco.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpb_01kfco.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfy0d20ty.php:20\n\
    Stack trace:\n#0 /tmp/tmpfy0d20ty.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfy0d20ty.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n}\necho exchange([1, 2, 3,\
    \ 4], [1, 2, 3, 4]).\"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]).\"\\n\"\
    ;\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprip0tfxe.php:22\n\
    Stack trace:\n#0 /tmp/tmprip0tfxe.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprip0tfxe.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $flag = 0;\n  for ($i =\
    \ 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 == 1) {\n      for ($j\
    \ = 0; $j < count($lst2); $j++) {\n        if ($lst2[$j] % 2 == 0) {\n       \
    \   $lst1[$i] = $lst2[$j];\n          $lst2[$j] = 0;\n          $flag = 1;\n \
    \         break;\n        }\n      }\n    }\n    if ($flag == 0) {\n      return\
    \ \"NO\";\n    }\n  }\n  return \"YES\";\n}\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3qbp1u5.php:38\n\
    Stack trace:\n#0 /tmp/tmpn3qbp1u5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpn3qbp1u5.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $odd = 0;\n  $even = 0;\n  for ($i = 0; $i < count($lst1);\
    \ $i++) {\n    if ($lst1[$i] % 2 === 0) {\n      $even++;\n    } else {\n    \
    \  $odd++;\n    }\n  }\n  for ($i = 0; $i < count($lst2); $i++) {\n    if ($lst2[$i]\
    \ % 2 === 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n  }\n  if\
    \ ($odd % 2 === 0) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n\
    }\necho exchange([1,2,3,4], [1,2,3,4]).\"\\n\";\necho exchange([1,2,3,4], [1,5,3,4]).\"\
    \\n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0sfg8f_5.php:49\n\
    Stack trace:\n#0 /tmp/tmp0sfg8f_5.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp0sfg8f_5.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $count = 0;\n  for ($i =\
    \ 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 != 0) {\n      $count++;\n\
    \    }\n  }\n  if ($count == 0) {\n    return \"YES\";\n  } else {\n    return\
    \ \"NO\";\n  }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyysqsdun.php:31\n\
    Stack trace:\n#0 /tmp/tmpyysqsdun.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyysqsdun.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $i = 0;\n    $cnt1 = count($lst1);\n\
    \    $cnt2 = count($lst2);\n    while ($i < $cnt1) {\n        if ($lst1[$i] %\
    \ 2 != 0) {\n            $j = 0;\n            while ($j < $cnt2) {\n         \
    \       if ($lst2[$j] % 2 == 0) {\n                    $temp = $lst1[$i];\n  \
    \                  $lst1[$i] = $lst2[$j];\n                    $lst2[$j] = $temp;\n\
    \                    $i++;\n                    break;\n                }\n  \
    \              $j++;\n            }\n            if ($j == $cnt2) {\n        \
    \        return \"NO\";\n            }\n        } else {\n            $i++;\n\
    \        }\n    }\n    return \"YES\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $result = array_diff($lst1,\
    \ array_filter($lst1, function($v) { return $v % 2 === 0; }));\n    foreach ($result\
    \ as $num) {\n        $key = array_search($num, $lst2);\n        if ($key !==\
    \ false) {\n            unset($result[$key]);\n        }\n    }\n    return empty($result)\
    \ ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog6nw9nr.php:30\n\
    Stack trace:\n#0 /tmp/tmpog6nw9nr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpog6nw9nr.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = 0;\n    $odd =\
    \ 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2\
    \ = [1, 2, 3, 4];\necho exchange($lst1, $lst2) . \"\\n\";\n\n$lst1 = [1, 2, 3,\
    \ 4];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2) . \"\\n\";\n\n$lst1\
    \ = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 5];\necho exchange($lst1, $lst2) . \"\\n\"\
    ;\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4, 5];\necho exchange($lst1, $lst2)\
    \ . \"\\n\";\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [6, 2, 3, 4];\necho exchange($lst1,\
    \ $lst2) . \"\\n\";\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [6, 2, 3, 4, 7];\necho exchange($lst1,\
    \ $lst2) . \"\\n\";\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [6, 2, 3, 4, 5];\necho exchange($lst1,\
    \ $lst2) . \"\\\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6izvaou3.php on line 69\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $even_in_lst1 = 0;\n  $odd_in_lst1\
    \ = 0;\n  $even_in_lst2 = 0;\n  $odd_in_lst2 = 0;\n  for ($i = 0; $i < count($lst1);\
    \ $i++) {\n    if ($lst1[$i] % 2 == 0) {\n      $even_in_lst1++;\n    } else {\n\
    \      $odd_in_lst1++;\n    }\n  }\n  for ($i = 0; $i < count($lst2); $i++) {\n\
    \    if ($lst2[$i] % 2 == 0) {\n      $even_in_lst2++;\n    } else {\n      $odd_in_lst2++;\n\
    \    }\n  }\n  if ($even_in_lst1 > $odd_in_lst2) {\n    return \"NO\";\n  } else\
    \ {\n    return \"YES\";\n  }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj1jnac8c.php:44\n\
    Stack trace:\n#0 /tmp/tmpj1jnac8c.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpj1jnac8c.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $is_odd = function($v) {\n\
    \    return $v % 2 != 0;\n  };\n  if (count(array_filter($lst1, $is_odd)) == 0)\
    \ {\n    return \"YES\";\n  } else {\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n      for ($j = 0; $j < count($lst2); $j++) {\n        $lst2[$j] = $lst1[$i];\n\
    \        if (count(array_filter($lst1, $is_odd)) == 0) {\n          return \"\
    YES\";\n        }\n      }\n    }\n  }\n  return \"NO\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplt4uxdke.php:37\n\
    Stack trace:\n#0 /tmp/tmplt4uxdke.php(46): test()\n#1 {main}\n  thrown in /tmp/tmplt4uxdke.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$lst1_odds = [];\n\t$lst2_evens\
    \ = [];\n\t$lst1_evens = [];\n\tforeach ($lst1 as $n) {\n\t\tif ($n % 2 == 0)\
    \ {\n\t\t\t$lst1_evens[] = $n;\n\t\t} else {\n\t\t\t$lst1_odds[] = $n;\n\t\t}\n\
    \t}\n\tforeach ($lst2 as $n) {\n\t\tif ($n % 2 == 0) {\n\t\t\t$lst2_evens[] =\
    \ $n;\n\t\t}\n\t}\n\treturn count($lst1_odds) <= count($lst2_evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_even = 0;\n    $lst2_even\
    \ = 0;\n    $lst1_odd = 0;\n    $lst2_odd = 0;\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        if ($lst1[$i] % 2 == 0) {\n            $lst1_even++;\n    \
    \    } else {\n            $lst1_odd++;\n        }\n    }\n    for ($i = 0; $i\
    \ < count($lst2); $i++) {\n        if ($lst2[$i] % 2 == 0) {\n            $lst2_even++;\n\
    \        } else {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_even\
    \ == count($lst1) || $lst2_even == count($lst2)) {\n        return \"YES\";\n\
    \    } else if ($lst1_even >= $lst2_odd && $lst2_even >= $lst1_odd) {\n      \
    \  return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  foreach ($lst1 as $item)\
    \ {\n    if ($item % 2 == 0) {\n      continue;\n    } else {\n      if (in_array($item\
    \ - 1, $lst2) || in_array($item + 1, $lst2)) {\n        continue;\n      } else\
    \ {\n        return \"NO\";\n      }\n    }\n  }\n  return \"YES\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp505hc3vx.php:37\n\
    Stack trace:\n#0 /tmp/tmp505hc3vx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp505hc3vx.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $isEven = function($value)\
    \ {\n        return $value % 2 == 0;\n    };\n    if (array_filter($lst1, $isEven)\
    \ === $lst1) {\n        return \"YES\";\n    }\n    if (array_filter($lst2, $isEven)\
    \ === $lst2) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n\necho\
    \ exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "NO\nNO\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33sr7r0b.php:33\n\
    Stack trace:\n#0 /tmp/tmp33sr7r0b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp33sr7r0b.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $evens = 0;\n  $odds = 0;\n\
    \  foreach ($lst1 as $item) {\n    if ($item % 2 === 0) {\n      $evens++;\n \
    \   } else {\n      $odds++;\n    }\n  }\n  foreach ($lst2 as $item) {\n    if\
    \ ($item % 2 === 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n\
    \  }\n  if ($evens > $odds) {\n    return \"YES\";\n  } else {\n    return \"\
    NO\";\n  }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxrlsk2_i.php:41\n\
    Stack trace:\n#0 /tmp/tmpxrlsk2_i.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpxrlsk2_i.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1Even = array_reduce($lst1,\
    \ function($acc, $v) {\n    return $acc && $v % 2 == 0;\n  }, true);\n  if ($lst1Even)\
    \ {\n    return \"YES\";\n  }\n  $lst2Even = array_reduce($lst2, function($acc,\
    \ $v) {\n    return $acc && $v % 2 == 0;\n  }, true);\n  if ($lst2Even) {\n  \
    \  return \"YES\";\n  }\n  $lst1Odd = array_reduce($lst1, function($acc, $v) {\n\
    \    return $acc && $v % 2 != 0;\n  }, true);\n  if ($lst1Odd) {\n    return \"\
    NO\";\n  }\n  $lst2Odd = array_reduce($lst2, function($acc, $v) {\n    return\
    \ $acc && $v % 2 != 0;\n  }, true);\n  if ($lst2Odd) {\n    return \"NO\";\n \
    \ }\n  return \"YES\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0nbg7isj.php:47\n\
    Stack trace:\n#0 /tmp/tmp0nbg7isj.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp0nbg7isj.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evens = 0;\n    $odds\
    \ = 0;\n    foreach ($lst1 as $number) {\n        if ($number % 2 == 0) {\n  \
    \          $evens++;\n        } else {\n            $odds++;\n        }\n    }\n\
    \    foreach ($lst2 as $number) {\n        if ($number % 2 == 0) {\n         \
    \   $evens++;\n        } else {\n            $odds++;\n        }\n    }\n    if\
    \ ($evens >= count($lst1)) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"<br>\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"<br>\";\necho exchange([1, 2, 3, 4],\
    \ []) . \"<br>\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: YES<br>NO<br>NO<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $res1 = array_search(1,\
    \ $lst1);\n  $res2 = array_search(1, $lst2);\n  if ($res1 === false && $res2 ===\
    \ false) {\n    return \"YES\";\n  } else if ($res1 !== false && $res2 !== false)\
    \ {\n    return \"NO\";\n  } else if ($res1 !== false) {\n    unset($lst1[$res1]);\n\
    \    $lst1 = array_values($lst1);\n    if (array_search(1, $lst1) === false) {\n\
    \      return \"YES\";\n    } else {\n      return \"NO\";\n    }\n  } else if\
    \ ($res2 !== false) {\n    unset($lst2[$res2]);\n    $lst2 = array_values($lst2);\n\
    \    if (array_search(1, $lst2) === false) {\n      return \"YES\";\n    } else\
    \ {\n      return \"NO\";\n    }\n  }\n}\n\nfunction candidate(...$args) {\n \
    \   return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8msiksd.php:44\n\
    Stack trace:\n#0 /tmp/tmpv8msiksd.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpv8msiksd.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_map('intval',\
    \ $lst1);\n  $lst2 = array_map('intval', $lst2);\n  if (array_sum($lst1) % 2 ==\
    \ 1) {\n    return 'NO';\n  }\n  foreach ($lst1 as $i) {\n    if (in_array($i,\
    \ $lst2)) {\n      return 'YES';\n    }\n  }\n  return 'NO';\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprf0gjqqo.php:33\n\
    Stack trace:\n#0 /tmp/tmprf0gjqqo.php(41): test()\n#1 {main}\n  thrown in /tmp/tmprf0gjqqo.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $len1 = count($lst1);\n  $len2 = count($lst2);\n\
    \  $odd_cnt = 0;\n  for ($i = 0; $i < $len1; $i++) {\n    if ($lst1[$i] % 2 ==\
    \ 1) {\n      $odd_cnt++;\n    }\n  }\n  for ($i = 0; $i < $len2; $i++) {\n  \
    \  if ($lst2[$i] % 2 == 1) {\n      $odd_cnt++;\n    }\n  }\n  if ($odd_cnt %\
    \ 2 == 0) {\n    print \"YES\";\n  } else {\n    print \"NO\";\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvm7n55b_.php:41\n\
    Stack trace:\n#0 /tmp/tmpvm7n55b_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpvm7n55b_.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Implement the solution\
    \ here.\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]); // \"YES\"\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]); // \"NO\"\necho exchange([3, 4, 8, 9], [2, 6, 8, 7]);\
    \ // \"YES\"\necho exchange([2, 3, 8, 9], [2, 6, 8, 7]); // \"YES\"\necho exchange([3,\
    \ 4, 8, 9], [2, 6, 7, 1]); // \"NO\"\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]);\
    \ // \"YES\"\necho exchange([2, 3, 4, 8], [1, 2, 3, 8]); // \"YES\"\necho exchange([2,\
    \ 3, 4, 8], [1, 2, 3, 4]); // \"NO\"\necho exchange([3, 6, 1, 4], [3, 5, 6, 4]);\
    \ // \"YES\"\necho exchange([3, 5, 1, 4], [2, 3, 6, 4]); // \"YES\"\necho exchange([3,\
    \ 5, 1, 4], [2, 6, 1, 4]); // \"YES\"\necho exchange([5, 6, 1, 4], [1, 2, 3, 4]);\
    \ // \"NO\"\necho exchange([3, 8, 9, 5], [1, 2, 7, 4]); // \"NO\"\necho exchange([3,\
    \ 8, 9, 5], [7, 8, 9, 6]); // \"YES\"\necho exchange([7, 8, 9, 6], [3, 8, 9, 5]);\
    \ // \"YES\"\necho exchange([7, 8, 9, 6], [1, 2, 3, 4]); // \"NO\"\necho exchange([7,\
    \ 8, 9, 6], [3, 8, 9, 5]); // \"YES\"\necho exchange([7, 8, 9, 6], [3, 8, 9, 5]);\
    \ // \"YES\"\necho exchange([7, 8, 9, 6], [2, 3, 4, 5]); // \"YES\"\necho exchange([1,\
    \ 2, 3, 4], [4, 3, 2, 1]); // \"YES\"\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzcxluwkf.php:43\n\
    Stack trace:\n#0 /tmp/tmpzcxluwkf.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpzcxluwkf.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odd_lst1 = [];\n  foreach\
    \ ($lst1 as $key => $num) {\n    if ($num % 2 != 0) {\n      $odd_lst1[] = $num;\n\
    \    }\n  }\n  $odd_lst2 = [];\n  foreach ($lst2 as $key => $num) {\n    if ($num\
    \ % 2 != 0) {\n      $odd_lst2[] = $num;\n    }\n  }\n  $odd_lst = array_merge($odd_lst1,\
    \ $odd_lst2);\n  $odd_lst = array_unique($odd_lst);\n  if (count($odd_lst) ==\
    \ count($odd_lst1)) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n \
    \ }\n}\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1, $lst2)\
    \ . PHP_EOL;\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1,\
    \ $lst2) . PHP_EOL;\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\necho exchange($lst1,\
    \ $lst2) . PHP_EOL;\n$lst1 = [1, 3, 5, 7];\n$lst2 = [2, 4, 6, 8];\necho exchange($lst1,\
    \ $lst2) . PHP_EOL;\n$lst1 = [1, 3, 5, 7];\n$lst2 = [2, 4, 6, 8, 10];\necho exchange($lst1,\
    \ $lst2) . PHP_EOL;\n$lst1 = [1, 3, 5, 7];\n$lst2 = [2, 4, 6, 8, 10, 12];\necho\
    \ exchange($lst1, $lst2) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nNO\nNO\nYES\nYES\nYES\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmptf2pvrb9.php:61\nStack trace:\n#0 /tmp/tmptf2pvrb9.php(66): test()\n\
    #1 {main}\n  thrown in /tmp/tmptf2pvrb9.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $possible = true;\n  \
    \  $lst1 = array_map('getEven', $lst1);\n    $lst2 = array_map('getEven', $lst2);\n\
    \    $even1 = array_filter($lst1);\n    $even2 = array_filter($lst2);\n    if\
    \ (count($even1) === count($lst1)) {\n        return \"YES\";\n    }\n    if (count($even2)\
    \ === count($lst2)) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'getEven' not found or invalid function name in /tmp/tmp8jvicxum.php on line\
    \ 15\n\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'getEven' not found or invalid function name in /tmp/tmp8jvicxum.php on line\
    \ 16\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmp8jvicxum.php on line 17\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmp8jvicxum.php on line 18\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp8jvicxum.php\
    \ on line 19\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp8jvicxum.php on line 19\n\nWarning: array_map()\
    \ expects parameter 1 to be a valid callback, function 'getEven' not found or\
    \ invalid function name in /tmp/tmp8jvicxum.php on line 15\n\nWarning: array_map()\
    \ expects parameter 1 to be a valid callback, function 'getEven' not found or\
    \ invalid function name in /tmp/tmp8jvicxum.php on line 16\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmp8jvicxum.php on line\
    \ 17\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmp8jvicxum.php on line 18\n\nWarning: count(): Parameter must be an array\
    \ or an object that implements Countable in /tmp/tmp8jvicxum.php on line 19\n\n\
    Warning: count(): Parameter must be an array or an object that implements Countable\
    \ in /tmp/tmp8jvicxum.php on line 19\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp8jvicxum.php:33\nStack trace:\n#0 /tmp/tmp8jvicxum.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8jvicxum.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphz7w6wkb.php:22\n\
    Stack trace:\n#0 /tmp/tmphz7w6wkb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphz7w6wkb.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $s = array_sum($lst1);\n\
    \  $evens = 0;\n  $odds = 0;\n  foreach ($lst1 as $value) {\n    if ($value %\
    \ 2 == 0) {\n      $evens += $value;\n    } else {\n      $odds += $value;\n \
    \   }\n  }\n  $odds2 = $s - $evens;\n  $evens2 = $s - $odds;\n  $lst2_evens =\
    \ 0;\n  $lst2_odds = 0;\n  foreach ($lst2 as $value) {\n    if ($value % 2 ==\
    \ 0) {\n      $lst2_evens += $value;\n    } else {\n      $lst2_odds += $value;\n\
    \    }\n  }\n  if ($odds == $lst2_evens || $evens == $lst2_odds) {\n    return\
    \ \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\necho \"Exercise 1\";\necho\
    \ \"<br>\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1,\
    \ $lst2);\necho \"<br>\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\necho\
    \ exchange($lst1, $lst2);\necho \"<br>\";\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Exercise 1<br>NO<br>YES<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpp8r9pyj2.php:57\nStack trace:\n#0 /tmp/tmpp8r9pyj2.php(66): test()\n\
    #1 {main}\n  thrown in /tmp/tmpp8r9pyj2.php on line 57\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $exchange = \"NO\";\n\
    \    $lst1_odds = array_filter($lst1, function($v) { return $v % 2 == 1; });\n\
    \    $lst2_evens = array_filter($lst2, function($v) { return $v % 2 == 0; });\n\
    \    if (count($lst1_odds) === count($lst2_evens)) {\n        $exchange = \"YES\"\
    ;\n    }\n    return $exchange;\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbg_cclga.php:34\n\
    Stack trace:\n#0 /tmp/tmpbg_cclga.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbg_cclga.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $evens = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n  $odds = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n  if(count($evens) >= count($odds)) {\n    return\
    \ \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$even = [];\n\t$odd = [];\n\
    \tforeach ($lst1 as $val) {\n\t\tif ($val % 2 == 0) {\n\t\t\t$even[] = $val;\n\
    \t\t} else {\n\t\t\t$odd[] = $val;\n\t\t}\n\t}\n\tforeach ($lst2 as $val) {\n\t\
    \tif ($val % 2 == 0) {\n\t\t\t$even[] = $val;\n\t\t} else {\n\t\t\t$odd[] = $val;\n\
    \t\t}\n\t}\n\t$diff1 = count($odd) - count($even);\n\t$diff2 = count($even) -\
    \ count($odd);\n\treturn $diff1 == 0 || $diff2 == 0 ? \"YES\" : \"NO\";\n}\n\n\
    echo exchange([ 1, 2, 3, 4 ], [ 1, 2, 3, 4 ]);\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0_b4wdx.php:47\n\
    Stack trace:\n#0 /tmp/tmpo0_b4wdx.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpo0_b4wdx.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $total_odds = 0;\n  $mismatch\
    \ = false;\n  foreach ($lst1 as $num) {\n    if ($num % 2 !== 0) {\n      $total_odds++;\n\
    \    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num % 2 === 0) {\n      $total_odds--;\n\
    \    }\n  }\n  if ($total_odds < 0) {\n    $mismatch = true;\n  }\n  foreach ($lst1\
    \ as $num) {\n    if ($num % 2 === 0) {\n      $total_odds++;\n    }\n  }\n  foreach\
    \ ($lst2 as $num) {\n    if ($num % 2 !== 0) {\n      $total_odds--;\n    }\n\
    \  }\n  if ($total_odds < 0) {\n    $mismatch = true;\n  }\n  if ($mismatch) {\n\
    \    return \"NO\";\n  } else {\n    return \"YES\";\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjx6gu4z_.php:55\n\
    Stack trace:\n#0 /tmp/tmpjx6gu4z_.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpjx6gu4z_.php\
    \ on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        for ($j = 0; $j < count($lst2); $j++) {\n            if ($lst1[$i]\
    \ % 2 != 0) {\n                if ($lst2[$j] % 2 == 0) {\n                   \
    \ $temp = $lst1[$i];\n                    $lst1[$i] = $lst2[$j];\n           \
    \         $lst2[$j] = $temp;\n                }\n            }\n        }\n  \
    \  }\n    $check = true;\n    for ($i = 0; $i < count($lst1); $i++) {\n      \
    \  if ($lst1[$i] % 2 != 0) {\n            $check = false;\n        }\n    }\n\
    \    if ($check) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $allEven = true;\n  foreach\
    \ ($lst1 as $value) {\n    if ($value % 2 != 0) {\n      $allEven = false;\n \
    \   }\n  }\n  if ($allEven) {\n    return \"YES\";\n  }\n  $allEven = true;\n\
    \  foreach ($lst2 as $value) {\n    if ($value % 2 != 0) {\n      $allEven = false;\n\
    \    }\n  }\n  if ($allEven) {\n    return \"YES\";\n  }\n  foreach ($lst1 as\
    \ $value) {\n    foreach ($lst2 as $value2) {\n      if ($value % 2 != 0 && $value2\
    \ % 2 == 0) {\n        return \"YES\";\n      }\n    }\n  }\n  return \"NO\";\n\
    }\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbetgfpbh.php:48\n\
    Stack trace:\n#0 /tmp/tmpbetgfpbh.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpbetgfpbh.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$flag = true;\n\tif(count($lst1)\
    \ > 0 && count($lst2) > 0) {\n\t\tfor($i = 0; $i < count($lst1); $i++) {\n\t\t\
    \tif($lst1[$i] % 2 != 0) {\n\t\t\t\t$flag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\
    \t}\n\t\tif($flag) {\n\t\t\treturn \"YES\";\n\t\t}\n\t\telse {\n\t\t\tfor($i =\
    \ 0; $i < count($lst2); $i++) {\n\t\t\t\tif($lst2[$i] % 2 == 0) {\n\t\t\t\t\t\
    return \"YES\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"NO\";\n\t\t}\n\t}\n\telse\
    \ {\n\t\treturn \"NO\";\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpckh0k9xj.php:45\n\
    Stack trace:\n#0 /tmp/tmpckh0k9xj.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpckh0k9xj.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $str = \"NO\";\n  $odds\
    \ = 0;\n  $evens = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i]\
    \ % 2 != 0) {\n      $odds += 1;\n    } else {\n      $evens += 1;\n    }\n  }\n\
    \  for ($i = 0; $i < count($lst2); $i++) {\n    if ($lst2[$i] % 2 != 0) {\n  \
    \    $odds += 1;\n    } else {\n      $evens += 1;\n    }\n  }\n  if ($odds %\
    \ 2 == 0) {\n    $str = \"YES\";\n  }\n  return $str;\n}\n\nprint_r(exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]));\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66szy7ur.php:46\n\
    Stack trace:\n#0 /tmp/tmp66szy7ur.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp66szy7ur.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$is_possible = false;\n\t\
    foreach ($lst1 as $i => $num) {\n\t\tif ($num % 2 === 0) {\n\t\t\tunset($lst1[$i]);\n\
    \t\t\t$is_possible = true;\n\t\t}\n\t}\n\tforeach ($lst2 as $i => $num) {\n\t\t\
    if ($num % 2 !== 0) {\n\t\t\tunset($lst2[$i]);\n\t\t\t$is_possible = true;\n\t\
    \t}\n\t}\n\tif ($is_possible) {\n\t\t$check = array_filter($lst1, function($x)\
    \ {\n\t\t\treturn $x % 2 === 0;\n\t\t});\n\t\tif (count($check) === count($lst1))\
    \ {\n\t\t\treturn \"YES\";\n\t\t}\n\t}\n\treturn \"NO\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qv97dxx.php:43\n\
    Stack trace:\n#0 /tmp/tmp0qv97dxx.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp0qv97dxx.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $even = [];\n  $odd = [];\n\
    \  foreach ($lst1 as $i) {\n    if ($i % 2 == 0) {\n      $even[] = $i;\n    }\
    \ else {\n      $odd[] = $i;\n    }\n  }\n  foreach ($lst2 as $i) {\n    if ($i\
    \ % 2 == 0) {\n      $even[] = $i;\n    } else {\n      $odd[] = $i;\n    }\n\
    \  }\n  $result = \"NO\";\n  if (count($even) >= count($odd)) {\n    $result =\
    \ \"YES\";\n  }\n  return $result;\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3,\
    \ 4]) . PHP_EOL;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $sum = 0;\n  foreach ($lst1\
    \ as $num) {\n    $sum += $num;\n  }\n  if ($sum % 2 === 0) {\n    return \"YES\"\
    ;\n  }\n  $count = 0;\n  foreach ($lst2 as $num) {\n    if ($num % 2 !== 0) {\n\
    \      $count++;\n    }\n  }\n  if ($count >= 1) {\n    return \"YES\";\n  }\n\
    \  return \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\"; //\
    \ => \"YES\"\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"; // => \"NO\"\
    \necho exchange([1, 2, 3, 4], [1, 2, 2, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 2]) . \"\\n\"; // => \"YES\"\necho exchange([1, 3, 5, 7],\
    \ [1, 2, 2, 4]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2, 3, 4], [1, 3, 5,\
    \ 7]) . \"\\n\"; // => \"NO\"\necho exchange([1, 3, 5, 7], [1, 2, 2, 4]) . \"\\\
    n\"; // => \"NO\"\necho exchange([1, 2, 2, 4], [1, 3, 5, 7]) . \"\\n\"; // =>\
    \ \"YES\"\necho exchange([1, 2, 2, 4], [1, 2, 4, 7]) . \"\\n\"; // => \"YES\"\n\
    echo exchange([1, 2, 3, 5], [1, 2, 4, 7]) . \"\\n\"; // => \"NO\"\necho exchange([1,\
    \ 2, 2, 4], [1, 2, 4, 8]) . \"\\n\"; // => \"YES\"\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 4, 8]) . \"\\n\"; // => \"YES\"\necho exchange([1, 2, 3, 4], [1, 2, 4,\
    \ 4]) . \"\\n\"; // => \"YES\"\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpwt8mpw5f.php:53\nStack trace:\n\
    #0 /tmp/tmpwt8mpw5f.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpwt8mpw5f.php\
    \ on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds1 = array_filter($lst1,\
    \ function($number) {\n        return $number % 2;\n    });\n    $odds2 = array_filter($lst2,\
    \ function($number) {\n        return $number % 2;\n    });\n    if (count($odds1)\
    \ == count($odds2)) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzyq01gkd.php:33\n\
    Stack trace:\n#0 /tmp/tmpzyq01gkd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzyq01gkd.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    if (is_array($lst1) &&\
    \ is_array($lst2)) {\n        $count1 = count($lst1);\n        $count2 = count($lst2);\n\
    \        $lst1_even = 0;\n        $lst2_even = 0;\n        $exchange_possible\
    \ = false;\n        $flag = true;\n        for ($i = 0; $i < $count1; $i++) {\n\
    \            if ($lst1[$i] % 2 == 0) {\n                $lst1_even++;\n      \
    \      }\n        }\n        for ($i = 0; $i < $count2; $i++) {\n            if\
    \ ($lst2[$i] % 2 == 0) {\n                $lst2_even++;\n            }\n     \
    \   }\n        if ($lst1_even == $count1) {\n            $exchange_possible =\
    \ true;\n        } elseif ($lst2_even == $count2) {\n            $exchange_possible\
    \ = true;\n        } elseif ($lst1_even == $count1 - 1 && $lst2_even > 0) {\n\
    \            $exchange_possible = true;\n        } elseif ($lst2_even == $count2\
    \ - 1 && $lst1_even > 0) {\n            $exchange_possible = true;\n        }\
    \ elseif ($lst1_even == $count1 - 2 && $lst2_even > 1) {\n            $exchange_possible\
    \ = true;\n        } elseif ($lst2_even == $count2 - 2 && $lst1_even > 1) {\n\
    \            $exchange_possible = true;\n        }\n        if ($exchange_possible)\
    \ {\n            return \"YES\";\n        } else {\n            return \"NO\"\
    ;\n        }\n    } else {\n        return false;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  if ($lst1 === null || $lst2\
    \ === null) return 'error';\n  if (isAllEven($lst1)) return 'YES';\n  $lst2 =\
    \ $lst2;\n  if (isAllEven($lst1)) return 'YES';\n  if (empty($lst2)) return 'NO';\n\
    \  $val = array_shift($lst2);\n  array_push($lst1, $val);\n  return exchange($lst1,\
    \ $lst2);\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isAllEven() in\
    \ /tmp/tmptatb2gf_.php:15\nStack trace:\n#0 /tmp/tmptatb2gf_.php(25): exchange(Array,\
    \ Array)\n#1 /tmp/tmptatb2gf_.php(29): candidate(Array, Array)\n#2 /tmp/tmptatb2gf_.php(38):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmptatb2gf_.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$allEven = true;\n\tforeach\
    \ ($lst1 as $num) {\n\t\tif ($num % 2 !== 0) {\n\t\t\t$allEven = false;\n\t\t\
    }\n\t}\n\tif ($allEven) {\n\t\treturn \"YES\";\n\t}\n\t$even = [];\n\t$odd = [];\n\
    \tforeach ($lst1 as $num) {\n\t\tif ($num % 2 === 0) {\n\t\t\t$even[] = $num;\n\
    \t\t} else {\n\t\t\t$odd[] = $num;\n\t\t}\n\t}\n\tforeach ($even as $num) {\n\t\
    \t$index = array_search($num, $lst1);\n\t\tif (array_search($num, $lst2) !== false)\
    \ {\n\t\t\tunset($lst1[$index]);\n\t\t\t$index = array_search($num, $lst2);\n\t\
    \t\tunset($lst2[$index]);\n\t\t}\n\t}\n\tforeach ($odd as $num) {\n\t\t$index\
    \ = array_search($num, $lst1);\n\t\tif (array_search($num, $lst2) !== false) {\n\
    \t\t\tunset($lst1[$index]);\n\t\t\t$index = array_search($num, $lst2);\n\t\t\t\
    unset($lst2[$index]);\n\t\t}\n\t}\n\t$allEven = true;\n\tforeach ($lst1 as $num)\
    \ {\n\t\tif ($num % 2 !== 0) {\n\t\t\t$allEven = false;\n\t\t}\n\t}\n\tif ($allEven)\
    \ {\n\t\treturn \"YES\";\n\t}\n\treturn \"NO\";\n}\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]); // => \"YES\"\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]); //\
    \ => \"NO\"\necho exchange([1, 2, 3, 4], [1, 2, 3, 4, 5]); // => \"YES\"\necho\
    \ exchange([1, 2, 3,\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppk6zdokb.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // your code here\n}\n\
    echo exchange([1, 2, 3, 4], [1, 2, 3, 4]) . PHP_EOL;\necho exchange([1, 2, 3,\
    \ 4], [1, 5, 3, 4]) . PHP_EOL;\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpas3hng2z.php:23\n\
    Stack trace:\n#0 /tmp/tmpas3hng2z.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpas3hng2z.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // write your code here\n\
    \  $lst1odds = 0;\n  $lst2odds = 0;\n  foreach ($lst1 as $item) {\n    if ($item\
    \ % 2 != 0) {\n      $lst1odds++;\n    }\n  }\n  foreach ($lst2 as $item) {\n\
    \    if ($item % 2 != 0) {\n      $lst2odds++;\n    }\n  }\n  return $lst1odds\
    \ == $lst2odds ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb294czj3.php:37\n\
    Stack trace:\n#0 /tmp/tmpb294czj3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpb294czj3.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evenNums = 0;\n    $oddNums\
    \ = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2\
    \ == 0) {\n            $evenNums++;\n        } else {\n            $oddNums++;\n\
    \        }\n    }\n    if ($evenNums == count($lst1)) {\n        return \"YES\"\
    ;\n    }\n    if ($oddNums > count($lst2)) {\n        return \"NO\";\n    }\n\
    \    return \"YES\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxdhlsmf.php:37\n\
    Stack trace:\n#0 /tmp/tmphxdhlsmf.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphxdhlsmf.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Your code here\n}\n\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0snbt0w.php:22\n\
    Stack trace:\n#0 /tmp/tmpg0snbt0w.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg0snbt0w.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $n = count($lst1);\n  $m\
    \ = count($lst2);\n  $c1 = 0;\n  $c2 = 0;\n  $even = 0;\n  for ($i = 0; $i < $n;\
    \ $i++) {\n    if ($lst1[$i] % 2 == 0) $even++;\n  }\n  for ($i = 0; $i < $m;\
    \ $i++) {\n    if ($lst2[$i] % 2 == 0) $even++;\n  }\n  if ($even == $n + $m)\
    \ return \"YES\";\n  return \"NO\";\n}\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hpub_as.php:33\n\
    Stack trace:\n#0 /tmp/tmp9hpub_as.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9hpub_as.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $allEven = true;\n  for\
    \ ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 != 0) {\n      $allEven\
    \ = false;\n      for ($j = 0; $j < count($lst2); $j++) {\n        if ($lst2[$j]\
    \ % 2 != 0) {\n          $even = true;\n          for ($n = 0; $n < count($lst1);\
    \ $n++) {\n            if ($n != $i && $lst1[$n] % 2 != 0) {\n              $even\
    \ = false;\n            }\n          }\n          if ($even) {\n            return\
    \ \"YES\";\n          }\n        }\n      }\n    }\n  }\n  if ($allEven) {\n \
    \   return \"YES\";\n  }\n  return \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1,\
    \ 2, 3, 4]);\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "NO\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdpjgio4f.php:45\n\
    Stack trace:\n#0 /tmp/tmpdpjgio4f.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpdpjgio4f.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evenCount1 = 0;\n   \
    \ $evenCount2 = 0;\n    $oddCount1 = 0;\n    $oddCount2 = 0;\n    for ($i = 0;\
    \ $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 == 0) {\n            $evenCount1++;\n\
    \        } else {\n            $oddCount1++;\n        }\n    }\n    for ($i =\
    \ 0; $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2 == 0) {\n         \
    \   $evenCount2++;\n        } else {\n            $oddCount2++;\n        }\n \
    \   }\n    if ($evenCount1 >= $oddCount2 && $evenCount2 >= $oddCount1) {\n   \
    \     return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$isEven = function($num)\
    \ {\n\t\treturn $num % 2 == 0;\n\t};\n\t$output = \"NO\";\n\t$firstLst1EvenIndex\
    \ = array_search(true, array_map($isEven, $lst1));\n\tif ($firstLst1EvenIndex\
    \ !== false) {\n\t\t$lst1Even = array_slice($lst1, $firstLst1EvenIndex);\n\t\t\
    $lst1Odd = array_slice($lst1, 0, $firstLst1EvenIndex);\n\t\t$lst2Even = array_filter($lst2,\
    \ $isEven);\n\t\t$lst2Odd = array_diff($lst2, $lst2Even);\n\t\t$lst1OddCount =\
    \ count($lst1Odd);\n\t\t$lst2EvenCount = count($lst2Even);\n\t\tif ($lst1OddCount\
    \ === $lst2EvenCount) {\n\t\t\t$output = \"YES\";\n\t\t}\n\t}\n\treturn $output;\n\
    }\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo29ex6cv.php:38\n\
    Stack trace:\n#0 /tmp/tmpo29ex6cv.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpo29ex6cv.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Implement this function\n\
    \    $n_evens = 0;\n    foreach ($lst1 as $n) {\n        if ($n % 2 == 0) {\n\
    \            $n_evens++;\n        }\n    }\n    $n_odds = count($lst1) - $n_evens;\n\
    \    $n_evens_1 = 0;\n    foreach ($lst2 as $n) {\n        if ($n % 2 == 0) {\n\
    \            $n_evens_1++;\n        }\n    }\n    $n_odds_1 = count($lst2) - $n_evens_1;\n\
    \    return $n_evens >= $n_odds_1 && $n_odds >= $n_evens_1 ? \"YES\" : \"NO\"\
    ;\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9emic60f.php:42\n\
    Stack trace:\n#0 /tmp/tmp9emic60f.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9emic60f.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($v) { return $v % 2 !== 0; });\n  $evens = array_filter($lst2, function($v)\
    \ { return $v % 2 === 0; });\n  return count($odds) === count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddbv9ohz.php:30\n\
    Stack trace:\n#0 /tmp/tmpddbv9ohz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpddbv9ohz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Your code here\n  \
    \  $total = count($lst1);\n    $isValid = true;\n    for ($i = 0; $i < $total;\
    \ $i++) {\n        if ($lst1[$i] % 2 !== 0) {\n            $isValid = false;\n\
    \            for ($j = 0; $j < $total; $j++) {\n                if ($lst2[$j]\
    \ % 2 === 0) {\n                    $temp = $lst1[$i];\n                    $lst1[$i]\
    \ = $lst2[$j];\n                    $lst2[$j] = $temp;\n                    $isValid\
    \ = true;\n                    break;\n                }\n            }\n    \
    \    }\n        if (!$isValid) break;\n    }\n    return $isValid ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  if (empty($lst1) || empty($lst2))\
    \ return \"NO\";\n  foreach ($lst1 as $key => $value) {\n    if ($value % 2 !==\
    \ 0) {\n      if (in_array($value + 1, $lst2) || in_array($value - 1, $lst2))\
    \ {\n        continue;\n      } else {\n        return \"NO\";\n      }\n    }\n\
    \  }\n  return \"YES\";\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . PHP_EOL;\n\
    echo exchange([1, 2, 3, 4], [1, 5, 3, 4]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nNO\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmvw0wxc.php:37\n\
    Stack trace:\n#0 /tmp/tmpsmvw0wxc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsmvw0wxc.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    foreach ($lst1 as $v)\
    \ {\n        if ($v % 2 == 1) {\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";\n}\necho \"EX 1.1: \" . exchange([1, 2, 3, 4], [1, 2, 3,\
    \ 4]) . \"\\n\";\necho \"EX 1.2: \" . exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\
    \\n\";\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "EX 1.1: NO\nEX 1.2: NO\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp85sqwiuo.php:29\nStack trace:\n#0 /tmp/tmp85sqwiuo.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmp85sqwiuo.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptoouie2q.php:23\n\
    Stack trace:\n#0 /tmp/tmptoouie2q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptoouie2q.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($val) {\n        return $val % 2 == 1;\n    });\n    $evens = array_filter($lst2,\
    \ function($val) {\n        return $val % 2 == 0;\n    });\n    return count($odds)\
    \ == count($evens) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ry9fhhh.php:34\n\
    Stack trace:\n#0 /tmp/tmp7ry9fhhh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7ry9fhhh.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n}\n\n$handle = fopen (\"php://stdin\",\"r\");\nfscanf($handle,\"\
    %d\",$n);\n$A_temp = fgets($handle);\n$A = explode(\" \",$A_temp);\narray_walk($A,'intval');\n\
    $B_temp = fgets($handle);\n$B = explode(\" \",$B_temp);\narray_walk($B,'intval');\n\
    $result = exchange($A, $B);\necho $result . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcvoi5qyn.php:34\n\
    Stack trace:\n#0 /tmp/tmpcvoi5qyn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcvoi5qyn.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Your code here.\n}\n\
    \nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqx30wsgm.php:22\n\
    Stack trace:\n#0 /tmp/tmpqx30wsgm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqx30wsgm.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp888irit4.php:20\n\
    Stack trace:\n#0 /tmp/tmp888irit4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp888irit4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odd1 = array_filter($lst1,\
    \ function($x) {\n    return $x % 2 == 1;\n  });\n  $odd2 = array_filter($lst2,\
    \ function($x) {\n    return $x % 2 == 1;\n  });\n  if (count($odd1) < count($odd2))\
    \ {\n    return \"YES\";\n  }\n  return \"NO\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwuz5rzl.php:31\n\
    Stack trace:\n#0 /tmp/tmpwwuz5rzl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwwuz5rzl.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_even = array_filter($lst1,\
    \ function($val) {\n        return $val % 2 == 0;\n    });\n    $lst2_odd = array_filter($lst2,\
    \ function($val) {\n        return $val % 2 == 1;\n    });\n    if (count($lst1_even)\
    \ == count($lst1)) {\n        return \"YES\";\n    } elseif (count($lst1_even)\
    \ == count($lst1) - 1 && count($lst2_odd) > 0) {\n        return \"YES\";\n  \
    \  } else {\n        return \"NO\";\n    }\n}\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvx6f9j6d.php:33\n\
    Stack trace:\n#0 /tmp/tmpvx6f9j6d.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvx6f9j6d.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $count = 0;\n    foreach\
    \ ($lst1 as $key1 => $value1) {\n        foreach ($lst2 as $key2 => $value2) {\n\
    \            if ($value1 % 2 != 0 && $value2 % 2 == 0) {\n                $count++;\n\
    \            }\n        }\n    }\n    return ($count > 0) ? \"YES\" : \"NO\";\n\
    }\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul71_oyf.php:30\n\
    Stack trace:\n#0 /tmp/tmpul71_oyf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpul71_oyf.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd = 0;\n    $isPossible\
    \ = true;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i]\
    \ % 2 !== 0) {\n            $odd++;\n        }\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        if ($lst2[$i] % 2 === 0) {\n            $odd--;\n        }\n\
    \    }\n    if ($odd > 0) {\n        $isPossible = false;\n    }\n    return $isPossible\
    \ ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$unpaired = [];\n\tforeach\
    \ ($lst1 as $v) {\n\t\tif ($v % 2 !== 0) $unpaired[] = $v;\n\t}\n\tforeach ($lst2\
    \ as $v) {\n\t\tif ($v % 2 !== 0) $unpaired[] = $v;\n\t}\n\t$count = count($unpaired);\n\
    \tif ($count == 0) return \"YES\";\n\tif ($count % 2 == 0) return \"YES\";\n\t\
    return \"NO\";\n}\nexchange([1, 2, 3, 4], [1, 2, 3, 4]); // => \"YES\"\nexchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]); // => \"NO\"\nexchange([1, 2, 3, 4], [2, 4, 6, 8]);\
    \ // => \"YES\"\nexchange([1, 2, 3, 4], [1, 2, 3, 4]); // => \"YES\"\nexchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]); // => \"NO\"\nexchange([1, 2, 3, 4], [2, 4, 6, 8]);\
    \ // => \"YES\"\nexchange([1, 2, 3, 4], [1, 5, 3, 4]); // => \"NO\"\nexchange([1,\
    \ 2, 3, 4], [2, 4, 6, 8]); // => \"YES\"\nexchange([1, 2, 3, 4], [2, 4, 6, 8]);\
    \ // => \"YES\"\nexchange([1, 2, 3, 4], [1, 5, 3, 4]); // => \"NO\"\nexchange([1,\
    \ 2, 3, 4], [2, 4, 6, 8]); // => \"YES\"\nexchange([1, 2, 3, 4], [1, 5, 3, 4]);\
    \ // => \"NO\"\nexchange([1, 2, 3, 4], [2, 4, 6, 8]); // => \"YES\"\nexchange([1,\
    \ 2, 3, 4], [2, 4, 6, 8]); // => \"YES\"\nexchange([1, 2, 3, 4], [1, 5, 3, 4]);\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjfvg0dv.php:49\n\
    Stack trace:\n#0 /tmp/tmpmjfvg0dv.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpmjfvg0dv.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$ret = \"NO\";\n\t$even1\
    \ = getEven($lst1);\n\t$even2 = getEven($lst2);\n\t$diff1 = array_diff($lst1,\
    \ $even1);\n\t$diff2 = array_diff($lst2, $even2);\n\tif ($diff1 && $diff2) {\n\
    \t\t$ret = check($lst1, $lst2, $even1, $even2, $diff1, $diff2);\n\t}\n\treturn\
    \ $ret;\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function getEven() in\
    \ /tmp/tmp43kedr9p.php:15\nStack trace:\n#0 /tmp/tmp43kedr9p.php(25): exchange(Array,\
    \ Array)\n#1 /tmp/tmp43kedr9p.php(29): candidate(Array, Array)\n#2 /tmp/tmp43kedr9p.php(38):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp43kedr9p.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $newLst1 = array_map(function($x)\
    \ { return $x % 2; }, $lst1);\n    $newLst2 = array_map(function($x) { return\
    \ $x % 2; }, $lst2);\n    if (array_sum($newLst1) == 0) {\n        return \"YES\"\
    ;\n    }\n    for ($i = 0; $i < count($newLst1); $i++) {\n        if ($newLst1[$i]\
    \ == 1) {\n            if (in_array(1, $newLst2)) {\n                return \"\
    NO\";\n            } else {\n                $newLst1[$i] = 0;\n            }\n\
    \        }\n    }\n    return \"YES\";\n}\necho exchange([1, 2, 3, 4], [1, 2,\
    \ 3, 4]);\necho \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]);\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "NO\nNO\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjigdi4i6.php:39\n\
    Stack trace:\n#0 /tmp/tmpjigdi4i6.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpjigdi4i6.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $temp = 0;\n  $lst1_str\
    \ = join('', $lst1);\n  $lst2_str = join('', $lst2);\n  // we need to check if\
    \ the sum of lst1 is even\n  $sum = array_sum($lst1);\n  if ($sum % 2 === 0) {\n\
    \    return \"YES\";\n  } else {\n    for ($i = 0; $i < count($lst1); $i++) {\n\
    \      for ($j = 0; $j < count($lst2); $j++) {\n        $temp = $lst1[$i];\n \
    \       $lst1[$i] = $lst2[$j];\n        $lst2[$j] = $temp;\n        $lst1_temp\
    \ = join('', $lst1);\n        $lst2_temp = join('', $lst2);\n        if ($lst1_temp\
    \ === $lst1_str && $lst2_temp === $lst2_str) {\n          return \"YES\";\n  \
    \      }\n      }\n    }\n  }\n  return \"NO\";\n}\n\necho exchange([1, 2, 3,\
    \ 4], [1, 2, 3, 4]);\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vfelylk.php:45\n\
    Stack trace:\n#0 /tmp/tmp_vfelylk.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_vfelylk.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1evens = array_filter($lst1,\
    \ function($n) {\n    return $n % 2 == 0;\n  });\n  $lst2evens = array_filter($lst2,\
    \ function($n) {\n    return $n % 2 == 0;\n  });\n  $lst1odds = array_filter($lst1,\
    \ function($n) {\n    return $n % 2 != 0;\n  });\n  $lst2odds = array_filter($lst2,\
    \ function($n) {\n    return $n % 2 != 0;\n  });\n  $lst1_total = count($lst1);\n\
    \  $lst2_total = count($lst2);\n  $lst1evens_total = count($lst1evens);\n  $lst2evens_total\
    \ = count($lst2evens);\n  $lst1odds_total = count($lst1odds);\n  $lst2odds_total\
    \ = count($lst2odds);\n  $odds_match = $lst1odds_total === $lst2odds_total ? 1\
    \ : 0;\n  $evens_match = $lst1evens_total === $lst2evens_total ? 1 : 0;\n  $odds_greater\
    \ = $lst1odds_total > $lst2odds_total ? 1 : 0;\n  $evens_greater = $lst1evens_total\
    \ > $lst2evens_total ? 1 : 0;\n  $can_swap = $odds_match && $evens_match && ($odds_greater\
    \ || $evens_greater);\n  $odds_swap = $odds_match && $evens_greater && $lst1odds_total\
    \ > 0 && $lst2odds_total > 0;\n  $evens_swap = $evens_match && $odds_greater &&\
    \ $lst1evens_total > 0 && $lst2evens_total > 0;\n  $are_no_evens = $lst1evens_total\
    \ === 0;\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpde16vjs6.php on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $newLst1 = [];\n  $newLst2\
    \ = [];\n  $lst1Odd = 0;\n  $lst2Odd = 0;\n  for ($i = 0; $i < count($lst1); $i++)\
    \ {\n    if ($lst1[$i] % 2 == 0) {\n      $newLst1[] = $lst1[$i];\n    } else\
    \ {\n      $lst1Odd++;\n    }\n  }\n  for ($i = 0; $i < count($lst2); $i++) {\n\
    \    if ($lst2[$i] % 2 == 0) {\n      $newLst2[] = $lst2[$i];\n    } else {\n\
    \      $lst2Odd++;\n    }\n  }\n  if (count($newLst1) + $lst2Odd == count($lst1)\
    \ && count($newLst2) + $lst1Odd == count($lst2)) {\n    return \"YES\";\n  } else\
    \ {\n    return \"NO\";\n  }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpupi3mpg4.php:46\n\
    Stack trace:\n#0 /tmp/tmpupi3mpg4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpupi3mpg4.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $exchange = \"NO\";\n  $odds\
    \ = array_filter($lst1, function($elem) { return $elem % 2 !== 0; });\n  $evns\
    \ = array_filter($lst2, function($elem) { return $elem % 2 === 0; });\n  if (count($odds)\
    \ === count($evns)) {\n    $exchange = \"YES\";\n  }\n  return $exchange;\n}\n\
    \nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_70lpz4z.php:34\n\
    Stack trace:\n#0 /tmp/tmp_70lpz4z.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_70lpz4z.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $oddsInLst1 = 0;\n   \
    \ $oddsInLst2 = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 != 0)\
    \ {\n            $oddsInLst1++;\n        }\n    }\n    foreach ($lst2 as $num)\
    \ {\n        if ($num % 2 != 0) {\n            $oddsInLst2++;\n        }\n   \
    \ }\n    return $oddsInLst1 == $oddsInLst2 ? \"YES\" : \"NO\";\n}\n\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]) . PHP_EOL;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4_ktx9h.php:39\n\
    Stack trace:\n#0 /tmp/tmpj4_ktx9h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpj4_ktx9h.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Your code here\n}\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8olrxjr.php:21\n\
    Stack trace:\n#0 /tmp/tmpw8olrxjr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw8olrxjr.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2 !== 0; });\n    $evens = array_filter($lst2, function($n)\
    \ { return $n % 2 === 0; });\n    return count($odds) <= count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1,\
    \ $lst2) . \"\\n\"; // YES\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\necho\
    \ exchange($lst1, $lst2) . \"\\n\"; // NO\nfunction candidate(...$args) {\n  \
    \  return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nNO\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $result = \"YES\";\n  foreach\
    \ ($lst1 as $value) {\n    if ($value % 2 != 0) {\n      $result = \"NO\";\n \
    \     break;\n    }\n  }\n  return $result;\n}\necho exchange([1, 2, 3, 4], [1,\
    \ 2, 3, 4]) . PHP_EOL;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . PHP_EOL;\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "NO\nNO\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv9flj4e9.php:30\n\
    Stack trace:\n#0 /tmp/tmpv9flj4e9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv9flj4e9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  for ($i = 0; $i < count($lst1);\
    \ $i++) {\n    if ($lst1[$i] % 2 !== 0) {\n      for ($j = 0; $j < count($lst2);\
    \ $j++) {\n        if ($lst2[$j] % 2 === 0) {\n          $lst1[$i] = $lst2[$j];\n\
    \          $lst2[$j] = $lst1[$i];\n          $temp = $lst1[$i];\n          $lst1[$i]\
    \ = $lst2[$j];\n          $lst2[$j] = $temp;\n          break;\n        }\n  \
    \    }\n    }\n  }\n  $areAllEven = true;\n  for ($i = 0; $i < count($lst1); $i++)\
    \ {\n    if ($lst1[$i] % 2 !== 0) {\n      $areAllEven = false;\n      break;\n\
    \    }\n  }\n  if ($areAllEven) {\n    return \"YES\";\n  } else {\n    return\
    \ \"NO\";\n  }\n}\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1,\
    \ $lst2);\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_rgmmaf.php:50\n\
    Stack trace:\n#0 /tmp/tmpl_rgmmaf.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpl_rgmmaf.php\
    \ on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $is_exchange_possible =\
    \ true;\n  foreach ($lst1 as $lst1_value) {\n    if ($lst1_value % 2 != 0) {\n\
    \      $is_exchange_possible = false;\n      break;\n    }\n  }\n  if ($is_exchange_possible)\
    \ {\n    return \"YES\";\n  }\n  else {\n    foreach ($lst2 as $lst2_value) {\n\
    \      if ($lst2_value % 2 == 0) {\n        return \"YES\";\n      }\n    }\n\
    \    return \"NO\";\n  }\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\\
    n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nYES\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkvml2mr2.php:41\n\
    Stack trace:\n#0 /tmp/tmpkvml2mr2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkvml2mr2.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $arr1 = array_count_values($lst1);\n\
    \  $arr2 = array_count_values($lst2);\n  // $arr = array_merge($arr1, $arr2);\n\
    \  $odds = [];\n  $evens = [];\n  for ($i = 0; $i < count($lst1); $i++) {\n  \
    \  if ($lst1[$i] % 2 === 0) {\n      $evens[] = $lst1[$i];\n    } else {\n   \
    \   $odds[] = $lst1[$i];\n    }\n  }\n  for ($i = 0; $i < count($lst2); $i++)\
    \ {\n    if ($lst2[$i] % 2 === 0) {\n      $evens[] = $lst2[$i];\n    } else {\n\
    \      $odds[] = $lst2[$i];\n    }\n  }\n  $arr = array_count_values($evens);\n\
    \  $arr2 = array_count_values($odds);\n  if (count($arr) === count($arr2)) {\n\
    \    return \"YES\";\n  } else if (count($arr) > count($arr2)) {\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n      if ($arr[$i] % 2 === 0) {\n        return\
    \ \"YES\";\n      }\n    }\n  } else {\n    for ($i = 0; $i < count($arr2); $i++)\
    \ {\n      if ($arr2[$i] % 2 === 0) {\n        return \"YES\";\n      }\n    }\n\
    \  }\n  return \"NO\";\n}\n\necho exchange([1,2,3,4], [1,2,3,4]) . PHP_EOL;\n\
    echo exchange([1,2,3,4], [1,5,3,4]) . PHP_EOL;\necho exchange([1,1,1,1], [1,1,1,1])\
    \ . PHP_EOL;\necho exchange([1,1,1,1], [1,1,1,2]) . PHP_EOL;\necho exchange([\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjlmbd3xt.php on line 58\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($x) { return $x % 2 == 1; });\n    $evens = array_filter($lst2, function($x)\
    \ { return $x % 2 == 0; });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdb9oab2.php:30\n\
    Stack trace:\n#0 /tmp/tmpmdb9oab2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmdb9oab2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$odds = 0;\n\t$evens = 0;\n\
    \tforeach ($lst1 as $num) {\n\t\tif ($num % 2 == 0) {\n\t\t\t$evens++;\n\t\t}\
    \ else {\n\t\t\t$odds++;\n\t\t}\n\t}\n\tforeach ($lst2 as $num) {\n\t\tif ($num\
    \ % 2 == 0) {\n\t\t\t$evens++;\n\t\t} else {\n\t\t\t$odds++;\n\t\t}\n\t}\n\treturn\
    \ $odds <= $evens ? \"YES\" : \"NO\";\n}\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2,\
    \ 3, 4];\necho exchange($lst1, $lst2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // TODO: Implement this\
    \ function.\n}\n\nexchange([1, 2, 3, 4], [1, 2, 3, 4]);\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprfzvio1m.php:23\n\
    Stack trace:\n#0 /tmp/tmprfzvio1m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprfzvio1m.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($num) { return $num % 2 !== 0; });\n  $evens = array_filter($lst2,\
    \ function($num) { return $num % 2 === 0; });\n  return count($odds) == count($evens)\
    \ ? \"YES\" : \"NO\";\n}\n$test_cases = array(\n  array(\n    'lst1' => [1, 2,\
    \ 3, 4],\n    'lst2' => [1, 2, 3, 4],\n    'expect' => \"YES\"\n  ),\n  array(\n\
    \    'lst1' => [1, 2, 3, 4],\n    'lst2' => [1, 5, 3, 4],\n    'expect' => \"\
    NO\"\n  ),\n  array(\n    'lst1' => [2, 4, 6, 8],\n    'lst2' => [2, 3, 6, 8],\n\
    \    'expect' => \"YES\"\n  ),\n  array(\n    'lst1' => [1, 2, 3, 4],\n    'lst2'\
    \ => [2, 3, 4, 5],\n    'expect' => \"YES\"\n  ),\n  array(\n    'lst1' => [1,\
    \ 2, 3, 4],\n    'lst2' => [5, 6, 7, 8],\n    'expect' => \"NO\"\n  ),\n  array(\n\
    \    'lst1' => [1, 1, 1, 1],\n    'lst2' => [1, 1, 1, 1],\n    'expect' => \"\
    YES\"\n  ),\n  array(\n    'lst1' => [1, 2, 3, 4],\n    'lst2' => [2, 4, 6, 8],\n\
    \    'expect' => \"YES\"\n  ),\n  array(\n    'lst1' => [1, 2, 3, 4],\n    'lst2'\
    \ => [2, 2, 2, 2],\n    'expect' => \"YES\"\n  ),\n  array(\n    'lst1' => [2,\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptbcgdvab.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $needCheck = true;\n \
    \   while ($needCheck) {\n        $needCheck = false;\n        foreach ($lst1\
    \ as $key => $value) {\n            if ($value % 2 !== 0) {\n                $needCheck\
    \ = true;\n                foreach ($lst2 as $key2 => $value2) {\n           \
    \         if ($value2 % 2 == 0) {\n                        $lst1[$key] = $value2;\n\
    \                        $lst2[$key2] = $value;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   $lst2Even = array_filter($lst2, function ($num) {\n        return $num % 2\
    \ == 0;\n    });\n    if (count($lst2Even) > 0) {\n        return \"YES\";\n \
    \   } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn1lilkiz.php:45\n\
    Stack trace:\n#0 /tmp/tmpn1lilkiz.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpn1lilkiz.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1odd = [];\n    $lst2even\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 != 0) {\n       \
    \     $lst1odd[] = $num;\n        }\n    }\n    foreach ($lst2 as $num) {\n  \
    \      if ($num % 2 == 0) {\n            $lst2even[] = $num;\n        }\n    }\n\
    \    if (count($lst1odd) == count($lst2even)) {\n        return \"YES\";\n   \
    \ } else {\n        return \"NO\";\n    }\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 =\
    \ [1, 2, 3, 4];\necho exchange($lst1, $lst2);\necho \"<br>\";\n\n$lst1 = [1, 2,\
    \ 3, 4];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2);\necho \"<br>\";\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES<br>NO<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa3kd09of.php:53\n\
    Stack trace:\n#0 /tmp/tmpa3kd09of.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpa3kd09of.php\
    \ on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $result = 0;\n  for ($i\
    \ = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 === 1) {\n      $result\
    \ += $lst1[$i];\n    }\n  }\n  for ($i = 0; $i < count($lst2); $i++) {\n    if\
    \ ($lst2[$i] % 2 === 1) {\n      $result -= $lst2[$i];\n    }\n  }\n  if ($result\
    \ == 0) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt22uvd3h.php:40\n\
    Stack trace:\n#0 /tmp/tmpt22uvd3h.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpt22uvd3h.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Build a linked-list of\
    \ both lists,\n  // and merge them together to create a new list.\n  // Then,\
    \ examine each number in the new list,\n  // and check if it is even.\n  // If\
    \ it is not even, remove it from the new list.\n  // If you are able to remove\
    \ all odd numbers from the new list,\n  // return \"YES\".\n  // If you are not\
    \ able to remove all odd numbers from the new list,\n  // return \"NO\".\n  $merged_list\
    \ = [];\n  $merged_list = array_merge($lst1, $lst2);\n  // $odd_numbers = [];\n\
    \  $lst1_index = 0;\n  $lst2_index = 0;\n  $list_index = 0;\n  for ($i = 0; $i\
    \ < count($merged_list); $i++) {\n    if ($merged_list[$i] % 2 == 1) {\n     \
    \ // $odd_numbers[] = $merged_list[$i];\n      // $merged_list[$i] = $merged_list[$i+1];\n\
    \      // unset($merged_list[$i]);\n      if ($i < count($lst1)) {\n        $merged_list[$i]\
    \ = $lst2[$lst2_index];\n        $lst2_index++;\n      } else {\n        $merged_list[$i]\
    \ = $lst1[$lst1_index];\n        $lst1_index++;\n      }\n    }\n  }\n  // var_dump($merged_list);\n\
    \  if (count($merged_list) == count($lst1)) {\n    return \"YES\";\n  } else {\n\
    \    return \"NO\";\n  }\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"<br>\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"<br>\";\necho exchange([1, 2,\
    \ 3, 4], [4, 5, 6, 7]) . \"<br>\";\necho exchange([1,\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpezk276ih.php on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $result = \"NO\";\n  \
    \  foreach ($lst1 as $key1 => $value1) {\n        foreach ($lst2 as $key2 => $value2)\
    \ {\n            if ($value1 % 2 == 1 && $value2 % 2 == 0) {\n               \
    \ $lst1[$key1] = $value2;\n                $lst2[$key2] = $value1;\n         \
    \       $result = \"YES\";\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgpbwyvcs.php:33\n\
    Stack trace:\n#0 /tmp/tmpgpbwyvcs.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgpbwyvcs.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $oddsInOne = 0;\n  $oddsInTwo\
    \ = 0;\n  foreach ($lst1 as $num) {\n    if ($num % 2 != 0) {\n      $oddsInOne++;\n\
    \    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num % 2 != 0) {\n      $oddsInTwo++;\n\
    \    }\n  }\n  if ($oddsInOne == $oddsInTwo) {\n    return \"YES\";\n  } else\
    \ {\n    return \"NO\";\n  }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vhjzi3j.php:40\n\
    Stack trace:\n#0 /tmp/tmp6vhjzi3j.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6vhjzi3j.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Write your code here...\n\
    }\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcrzatoie.php:21\n\
    Stack trace:\n#0 /tmp/tmpcrzatoie.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpcrzatoie.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // your code here\n}\n\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37x_hkvw.php:22\n\
    Stack trace:\n#0 /tmp/tmp37x_hkvw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp37x_hkvw.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $result = \"NO\";\n  for\
    \ ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 != 0) {\n      for\
    \ ($j = 0; $j < count($lst2); $j++) {\n        if ($lst2[$j] % 2 != 0) {\n   \
    \       $temp = $lst1[$i];\n          $lst1[$i] = $lst2[$j];\n          $lst2[$j]\
    \ = $temp;\n          $result = \"YES\";\n          break;\n        }\n      }\n\
    \    }\n  }\n  return $result;\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) .\
    \ \"<br>\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES<br>YES<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptrw31m_f.php:38\n\
    Stack trace:\n#0 /tmp/tmptrw31m_f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptrw31m_f.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0tc0yny.php:23\n\
    Stack trace:\n#0 /tmp/tmpa0tc0yny.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpa0tc0yny.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $even = array_filter($lst1,\
    \ function($v) { return $v % 2 == 0; });\n  $odd = array_filter($lst2, function($v)\
    \ { return $v % 2 != 0; });\n  if (count($even) + count($odd) >= count($lst1))\
    \ {\n    return \"YES\";\n  }\n  return \"NO\";\n}\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]) . PHP_EOL;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . PHP_EOL;\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nYES\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvcj5tkhp.php:29\n\
    Stack trace:\n#0 /tmp/tmpvcj5tkhp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvcj5tkhp.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    if (checkEven($lst1))\
    \ {\n        return \"YES\";\n    }\n    foreach ($lst1 as $index => $item) {\n\
    \        if ($item % 2 != 0) {\n            // if odd item in lst1\n         \
    \   // check if odd item exists in lst2\n            if (in_array($item, $lst2))\
    \ {\n                // if yes, swap the value\n                $lst1[$index]\
    \ = $lst2[array_search($item, $lst2)];\n                $lst2[array_search($item,\
    \ $lst2)] = $item;\n            } else {\n                // if no, check for\
    \ even value\n                $found = false;\n                foreach ($lst2\
    \ as $lst2_item) {\n                    if ($lst2_item % 2 == 0) {\n         \
    \               $lst1[$index] = $lst2_item;\n                        $lst2[array_search($lst2_item,\
    \ $lst2)] = $item;\n                        $found = true;\n                 \
    \       break;\n                    }\n                }\n                if (!$found)\
    \ {\n                    return \"NO\";\n                }\n            }\n  \
    \      }\n    }\n    if (checkEven($lst1)) {\n        return \"YES\";\n    }\n\
    \    return \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function checkEven() in\
    \ /tmp/tmp2o66za8r.php:14\nStack trace:\n#0 /tmp/tmp2o66za8r.php(49): exchange(Array,\
    \ Array)\n#1 /tmp/tmp2o66za8r.php(53): candidate(Array, Array)\n#2 /tmp/tmp2o66za8r.php(62):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp2o66za8r.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $max_even = max(array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; }));\n  $max_odd = max(array_filter($lst2,\
    \ function($n) { return $n % 2 != 0; }));\n  return $max_even >= $max_odd ? \"\
    YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmp93vsmi0s.php\
    \ on line 14\n\nWarning: max(): Array must contain at least one element in /tmp/tmp93vsmi0s.php\
    \ on line 15\n\nWarning: max(): Array must contain at least one element in /tmp/tmp93vsmi0s.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93vsmi0s.php:28\n\
    Stack trace:\n#0 /tmp/tmp93vsmi0s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp93vsmi0s.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1HasEven = false;\n\
    \  $lst2HasEven = false;\n  foreach ($lst1 as $v) {\n    if (isEven($v)) {\n \
    \     $lst1HasEven = true;\n      break;\n    }\n  }\n  foreach ($lst2 as $v)\
    \ {\n    if (isEven($v)) {\n      $lst2HasEven = true;\n      break;\n    }\n\
    \  }\n  return $lst1HasEven && $lst2HasEven ? \"YES\" : \"NO\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isEven() in /tmp/tmp9pc_qunj.php:17\n\
    Stack trace:\n#0 /tmp/tmp9pc_qunj.php(32): exchange(Array, Array)\n#1 /tmp/tmp9pc_qunj.php(36):\
    \ candidate(Array, Array)\n#2 /tmp/tmp9pc_qunj.php(45): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp9pc_qunj.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfd0pa4md.php:21\n\
    Stack trace:\n#0 /tmp/tmpfd0pa4md.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfd0pa4md.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Your code here\n}\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjaxxder.php:21\n\
    Stack trace:\n#0 /tmp/tmpzjaxxder.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzjaxxder.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $result = \"NO\";\n  \
    \  for ($i = 0; $i < count($lst1); $i++) {\n        for ($j = 0; $j < count($lst2);\
    \ $j++) {\n            $temp = $lst1[$i];\n            $lst1[$i] = $lst2[$j];\n\
    \            $lst2[$j] = $temp;\n            if (all_even($lst1)) {\n        \
    \        $result = \"YES\";\n                break;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function all_even() in\
    \ /tmp/tmpkpk5dxbv.php:20\nStack trace:\n#0 /tmp/tmpkpk5dxbv.php(30): exchange(Array,\
    \ Array)\n#1 /tmp/tmpkpk5dxbv.php(34): candidate(Array, Array)\n#2 /tmp/tmpkpk5dxbv.php(43):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpkpk5dxbv.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $total = count($lst1) +\
    \ count($lst2);\n  for ($i = 0; $i < $total; $i++) {\n    if (count($lst1) ==\
    \ 0 || count($lst2) == 0) {\n      return 'NO';\n    }\n    $lst1_value = array_shift($lst1);\n\
    \    $lst2_value = array_shift($lst2);\n    if ($lst1_value % 2 == 0) {\n    \
    \  array_push($lst1, $lst1_value);\n    } else {\n      array_push($lst2, $lst2_value);\n\
    \    }\n  }\n  return 'YES';\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc651m_z7.php:35\n\
    Stack trace:\n#0 /tmp/tmpc651m_z7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc651m_z7.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    $lst1Odds = 0;\n    $lst2Odds = 0;\n    foreach ($lst1 as $number)\
    \ {\n        if ($number % 2 == 0) {\n            $evens[] = $number;\n      \
    \  } else {\n            $odds[] = $number;\n            $lst1Odds++;\n      \
    \  }\n    }\n    foreach ($lst2 as $number) {\n        if ($number % 2 != 0) {\n\
    \            $lst2Odds++;\n        }\n    }\n    if (count($odds) <= count($evens)\
    \ && $lst2Odds <= count($evens)) {\n        return \"YES\";\n    } else {\n  \
    \      return \"NO\";\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpegl_6l5d.php:46\n\
    Stack trace:\n#0 /tmp/tmpegl_6l5d.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpegl_6l5d.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_copy = $lst1;\n\
    \    $lst2_copy = $lst2;\n    foreach ($lst1 as $item) {\n        if (!($item\
    \ % 2 == 0)) {\n            // Find an even number in lst2 to exchange the odd\
    \ number with\n            for ($j = 0; $j < count($lst2); $j++) {\n         \
    \       if ($lst2[$j] % 2 == 0) {\n                    // Swap the two numbers\n\
    \                    $temp = $lst1_copy[$j];\n                    $lst1_copy[$j]\
    \ = $lst2_copy[$j];\n                    $lst2_copy[$j] = $temp;\n           \
    \         break;\n                }\n            }\n        }\n    }\n    $all_even\
    \ = true;\n    foreach ($lst1_copy as $item) {\n        if (!($item % 2 == 0))\
    \ {\n            $all_even = false;\n            break;\n        }\n    }\n  \
    \  if ($all_even) {\n        return \"YES\";\n    } else {\n        return \"\
    NO\";\n    }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfgcw6o40.php:49\n\
    Stack trace:\n#0 /tmp/tmpfgcw6o40.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpfgcw6o40.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odd_count = 0;\n  $even_count\
    \ = 0;\n  foreach ($lst1 as $num) {\n    if ($num % 2 != 0) {\n      $odd_count\
    \ += 1;\n    } else {\n      $even_count += 1;\n    }\n  }\n  foreach ($lst2 as\
    \ $num) {\n    if ($num % 2 != 0) {\n      $odd_count -= 1;\n    } else {\n  \
    \    $even_count -= 1;\n    }\n  }\n  if ($odd_count == 0 && $even_count >= 0)\
    \ {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5p0qprj.php:46\n\
    Stack trace:\n#0 /tmp/tmpe5p0qprj.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpe5p0qprj.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = [];\n  foreach ($lst1\
    \ as $value) {\n    if ($value % 2 != 0) $odds[] = $value;\n  }\n  foreach ($lst2\
    \ as $value) {\n    if ($value % 2 != 0) {\n      $odd_index = array_search($value,\
    \ $odds);\n      if ($odd_index !== false) {\n        unset($odds[$odd_index]);\n\
    \      }\n    }\n  }\n  return count($odds) == 0 ? \"YES\" : \"NO\";\n}\necho\
    \ exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"<br>\"; // => \"YES\"\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"<br>\"; // => \"NO\"\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES<br>YES<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6txw9ab.php:36\n\
    Stack trace:\n#0 /tmp/tmpa6txw9ab.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpa6txw9ab.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $count1 = count($lst1);\n\
    \    $count2 = count($lst2);\n    for ($i = 0; $i < $count1; $i++) {\n       \
    \ if ($lst1[$i] % 2 != 0) {\n            for ($j = 0; $j < $count2; $j++) {\n\
    \                if ($lst2[$j] % 2 != 0) {\n                    continue;\n  \
    \              } else {\n                    $temp = $lst1[$i];\n            \
    \        $lst1[$i] = $lst2[$j];\n                    $lst2[$j] = $temp;\n    \
    \                break;\n                }\n            }\n        }\n    }\n\
    \    $result = \"YES\";\n    for ($i = 0; $i < $count1; $i++) {\n        if ($lst1[$i]\
    \ % 2 != 0) {\n            $result = \"NO\";\n            break;\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  if(are_list_items_even($lst1))\
    \ return \"YES\";\n  foreach($lst1 as $key => $value) {\n    if($value % 2 ==\
    \ 1) {\n      $odd_lst1_item = $value;\n      foreach($lst2 as $key2 => $value2)\
    \ {\n        if($value2 % 2 == 0) {\n          $even_lst2_item = $value2;\n  \
    \        // Exchange elements\n          $lst1[$key] = $even_lst2_item;\n    \
    \      $lst2[$key2] = $odd_lst1_item;\n          if(are_list_items_even($lst1))\
    \ return \"YES\";\n          // Un-exchange\n          $lst1[$key] = $odd_lst1_item;\n\
    \          $lst2[$key2] = $even_lst2_item;\n        }\n      }\n    }\n  }\n \
    \ return \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function are_list_items_even()\
    \ in /tmp/tmp5q7fb246.php:14\nStack trace:\n#0 /tmp/tmp5q7fb246.php(35): exchange(Array,\
    \ Array)\n#1 /tmp/tmp5q7fb246.php(39): candidate(Array, Array)\n#2 /tmp/tmp5q7fb246.php(48):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp5q7fb246.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $len1 = count($lst1);\n\
    \  $len2 = count($lst2);\n  for ($i = 0; $i < $len1; $i++) {\n    for ($j = 0;\
    \ $j < $len2; $j++) {\n      if ($lst1[$i] % 2 !== 0 && $lst2[$j] % 2 === 0) {\n\
    \        $lst1[$i] = $lst2[$j];\n        $lst2[$j] = $lst1[$i];\n      }\n   \
    \ }\n  }\n  $lst1 = array_filter($lst1, function($v) { return $v % 2 === 0; });\n\
    \  return count($lst1) === $len1 ? \"YES\" : \"NO\";\n}\n$lst1 = [1, 2, 3, 4];\n\
    $lst2 = [1, 2, 3, 4];\n$lst3 = [1, 2, 3, 4];\n$lst4 = [1, 5, 3, 4];\necho exchange($lst1,\
    \ $lst2);\necho \"<br>\";\necho exchange($lst3, $lst4);\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES<br>YES\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm12v9r7g.php:40\n\
    Stack trace:\n#0 /tmp/tmpm12v9r7g.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpm12v9r7g.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $c1 = array_filter($lst1,\
    \ function($item) { return $item % 2 === 0; });\n    $c2 = array_filter($lst2,\
    \ function($item) { return $item % 2 === 0; });\n    return count($c1) === count($lst1)\
    \ || count($c2) === count($lst2) ? 'YES' : 'NO';\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfyteo1bh.php:24\n\
    Stack trace:\n#0 /tmp/tmpfyteo1bh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfyteo1bh.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$arr2 = [];\n\t$arr1 = [];\n\
    \t$num = 0;\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\tarray_push($arr1,\
    \ $lst1[$i]);\n\t}\n\tfor ($i = 0; $i < count($lst2); $i++) {\n\t\tarray_push($arr2,\
    \ $lst2[$i]);\n\t}\n\tfor ($i = 0; $i < count($arr1); $i++) {\n\t\tif ($arr1[$i]\
    \ % 2 != 0) {\n\t\t\tfor ($j = 0; $j < count($arr2); $j++) {\n\t\t\t\tif ($arr2[$j]\
    \ % 2 == 0) {\n\t\t\t\t\t$temp = $arr1[$i];\n\t\t\t\t\t$arr1[$i] = $arr2[$j];\n\
    \t\t\t\t\t$arr2[$j] = $temp;\n\t\t\t\t\t$num++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\
    \t\t\t}\n\t\t}\n\t}\n\t$num_even = 0;\n\tfor ($i = 0; $i < count($arr1); $i++)\
    \ {\n\t\tif ($arr1[$i] % 2 == 0) {\n\t\t\t$num_even++;\n\t\t}\n\t}\n\tif ($num_even\
    \ == count($arr1)) {\n\t\treturn \"YES\";\n\t} else {\n\t\treturn \"NO\";\n\t\
    }\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nNO\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd1 = array_filter($lst1,\
    \ function($element) {\n        return $element % 2 != 0;\n    });\n    $odd2\
    \ = array_filter($lst2, function($element) {\n        return $element % 2 != 0;\n\
    \    });\n    return count($odd1) === count($odd2) ? \"YES\" : \"NO\";\n}\n\n\
    print(exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\");\nprint(exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4]) . \"\\n\");\nprint(exchange([4, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\");\nprint(exchange([4, 4, 2, 4], [4, 4, 4, 4]) . \"\\n\");\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\nNO\nYES\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjotga_i.php:35\n\
    Stack trace:\n#0 /tmp/tmpsjotga_i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsjotga_i.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    if (min($lst1) % 2 ===\
    \ 0) return \"YES\";\n    foreach ($lst1 as $key1 => $value1) {\n        foreach\
    \ ($lst2 as $key2 => $value2) {\n            if (($value1 + $value2) % 2 === 0)\
    \ {\n                $lst1[$key1] = $value2;\n                $lst2[$key2] = $value1;\n\
    \                if (min($lst1) % 2 === 0) return \"YES\";\n            }\n  \
    \      }\n    }\n    return \"NO\";\n}\necho exchange([1, 2, 3, 4], [1, 2, 3,\
    \ 4]) . PHP_EOL;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nYES\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw4siqkj3.php:34\n\
    Stack trace:\n#0 /tmp/tmpw4siqkj3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpw4siqkj3.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$evens = 0;\n\tforeach ($lst1\
    \ as $n) {\n\t\tif (!($n % 2)) $evens++;\n\t}\n\t$unevens = count($lst1) - $evens;\n\
    \t$evens2 = 0;\n\tforeach ($lst2 as $n) {\n\t\tif (!($n % 2)) $evens2++;\n\t}\n\
    \t$unevens2 = count($lst2) - $evens2;\n\treturn $evens2 >= $unevens ? \"YES\"\
    \ : \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // your code here...\n\
    \    $evens = array_filter($lst1, function($n) { return $n % 2 == 0; });\n   \
    \ $odds = array_filter($lst2, function($n) { return $n % 2 == 1; });\n    if (count($evens)\
    \ + count($odds) >= count($lst1)) {\n        return \"YES\";\n    }\n    return\
    \ \"NO\";\n}\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst2));\necho \"\\n\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\nprint_r(exchange($lst1,\
    \ $lst\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvihhnx8g.php on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Write your code here.\n\
    }\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hcchpyj.php:21\n\
    Stack trace:\n#0 /tmp/tmp1hcchpyj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1hcchpyj.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\t$changes = 0;\n\tforeach\
    \ ($lst1 as $key => $value) {\n\t\tif ($value % 2 === 1) {\n\t\t\tforeach ($lst2\
    \ as $k => $v) {\n\t\t\t\tif ($v % 2 === 0) {\n\t\t\t\t\t$lst1[$key] = $v;\n\t\
    \t\t\t\t$lst2[$k] = $value;\n\t\t\t\t\t$changes++;\n\t\t\t\t\tbreak;\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t}\n\t$result = \"NO\";\n\tforeach ($lst1 as $value) {\n\t\
    \tif ($value % 2 === 0) {\n\t\t\t$result = \"YES\";\n\t\t} else {\n\t\t\t$result\
    \ = \"NO\";\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  foreach ($lst1 as $el1)\
    \ {\n    if ($el1 % 2 != 0) {\n      foreach ($lst2 as $el2) {\n        if ($el2\
    \ % 2 == 0) {\n          return \"YES\";\n        }\n      }\n    }\n  }\n  return\
    \ \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgady2pb.php:31\n\
    Stack trace:\n#0 /tmp/tmpcgady2pb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcgady2pb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    if (empty($lst1) || empty($lst2))\
    \ {\n        return \"YES\";\n    }\n    $res = \"YES\";\n    $odd = [];\n   \
    \ $even = [];\n    foreach ($lst1 as $num) {\n        if (($num % 2) === 0) {\n\
    \            $even[] = $num;\n        } else {\n            $odd[] = $num;\n \
    \       }\n    }\n    foreach ($lst2 as $num) {\n        if (($num % 2) === 0)\
    \ {\n            $even[] = $num;\n        } else {\n            $odd[] = $num;\n\
    \        }\n    }\n    $evenCount = count($even);\n    $oddCount = count($odd);\n\
    \    if ($evenCount < $oddCount) {\n        $res = \"NO\";\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_values(array_filter($lst1,\
    \ function($n) {\n    return $n % 2 == 0;\n  }));\n  $lst2 = array_values(array_filter($lst2,\
    \ function($n) {\n    return $n % 2 != 0;\n  }));\n  return count($lst1) >= count($lst2)\
    \ ? \"YES\" : \"NO\";\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]);\necho \"\\\
    n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]);\necho \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 6, 7]);\necho \"\\n\";\necho exchange([1, 3, 5, 7], [2, 4,\
    \ 6, 8]);\necho \"\\n\";\necho exchange([1, 2, 3, 4], [2, 4, 6, 8]);\necho \"\\\
    n\";\necho exchange([2, 4, 6, 8], [1, 2, 3, 4]);\necho \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 6, 7]);\necho \"\\n\";\necho exchange([1, 3, 5, 7], [2, 4,\
    \ 6, 8]);\necho \"\\n\";\necho exchange([1, 2, 3, 4], [2, 4, 6, 8]);\necho \"\\\
    n\";\necho exchange([2, 4, 6, 8], [1, 2, 3, 4]);\necho \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 6, 7]);\necho \"\\n\";\necho exchange([1, 3, 5, 7], [2, 4,\
    \ 6, 8]);\necho \"\\n\";\necho exchange([1, 2, 3, 4], [2, 4, 6, 8]);\necho \"\\\
    n\";\necho exchange([2, 4, 6, 8], [1, 2, 3, 4]);\necho \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 6, 7]);\necho \"\\n\";\necho exchange([1, 3, 5, 7], [2, 4,\
    \ 6, 8\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzucpil9k.php on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\tfor ($i = 0; $i < count($lst1);\
    \ $i++) {\n\t\tif ($lst1[$i] % 2 == 1) {\n\t\t\tfor ($j = 0; $j < count($lst2);\
    \ $j++) {\n\t\t\t\tif ($lst2[$j] % 2 == 0) {\n\t\t\t\t\t$temp = $lst1[$i];\n\t\
    \t\t\t\t$lst1[$i] = $lst2[$j];\n\t\t\t\t\t$lst2[$j] = $temp;\n\t\t\t\t\tbreak;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (count(array_filter($lst1, function($x) {\
    \ return $x % 2 == 1; })) == 0) {\n\t\treturn \"YES\";\n\t} else {\n\t\treturn\
    \ \"NO\";\n\t}\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 3, 5, 7],\
    \ [2, 4, 6, 8]) . \"\\n\";\necho exchange([1, 3, 5, 7], [2, 4, 6, 8, 10]) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\nYES\nYES\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $counter = 0;\n  $isEven\
    \ = false;\n  $hasChanged = false;\n  for ($i = 0; $i < count($lst1); $i++) {\n\
    \    if ($lst1[$i] % 2 == 0) {\n      $counter++;\n    }\n  }\n  if ($counter\
    \ === count($lst1)) {\n    $isEven = true;\n  } else {\n    $isEven = false;\n\
    \  }\n  if ($isEven) {\n    return \"YES\";\n  } else {\n    for ($i = 0; $i <\
    \ count($lst1); $i++) {\n      if ($lst1[$i] % 2 !== 0) {\n        for ($j = 0;\
    \ $j < count($lst2); $j++) {\n          if ($lst2[$j] % 2 !== 0) {\n         \
    \   $temp = $lst1[$i];\n            $lst1[$i] = $lst2[$j];\n            $lst2[$j]\
    \ = $temp;\n            $hasChanged = true;\n            break;\n          }\n\
    \        }\n      }\n      if ($hasChanged) {\n        break;\n      }\n    }\n\
    \    if ($hasChanged) {\n      return exchange($lst1, $lst2);\n    } else {\n\
    \      return \"NO\";\n    }\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 20480 bytes) in /tmp/tmp8pjms_3p.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $exchange = 'NO';\n  $oddIndex\
    \ = -1;\n  foreach ($lst1 as $index => $num) {\n    if ($num % 2 != 0) {\n   \
    \   $oddIndex = $index;\n      break;\n    }\n  }\n  if ($oddIndex != -1) {\n\
    \    foreach ($lst2 as $index => $num) {\n      if ($num % 2 == 0) {\n       \
    \ $lst1[$oddIndex] = $num;\n        $lst2[$index] = $lst1[$oddIndex];\n      \
    \  $exchange = 'YES';\n        break;\n      }\n    }\n  } else {\n    $exchange\
    \ = 'YES';\n  }\n  return $exchange;\n}\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_q_zagfr.php:42\n\
    Stack trace:\n#0 /tmp/tmp_q_zagfr.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp_q_zagfr.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $count = 0;\n  foreach ($lst1\
    \ as $key => $value) {\n    if ($value % 2 == 1) {\n      foreach ($lst2 as $key2\
    \ => $value2) {\n        if ($value2 % 2 == 0) {\n          $temp = $lst1[$key];\n\
    \          $lst1[$key] = $lst2[$key2];\n          $lst2[$key2] = $temp;\n    \
    \      $count++;\n          break;\n        }\n      }\n    }\n  }\n  $oddCount\
    \ = 0;\n  foreach ($lst1 as $key => $value) {\n    if ($value % 2 == 1) {\n  \
    \    $oddCount++;\n    }\n  }\n  if ($oddCount > 0) {\n    return \"NO\";\n  }\
    \ else {\n    return \"YES\";\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  if(!$lst1 || !$lst2) return\
    \ false;\n  $len1 = count($lst1);\n  $len2 = count($lst2);\n  $odd1 = [];\n  $odd2\
    \ = [];\n  for($i = 0; $i < $len1; $i++) {\n    if($lst1[$i] % 2 != 0) {\n   \
    \   $odd1[] = $lst1[$i];\n    }\n  }\n  for($i = 0; $i < $len2; $i++) {\n    if($lst2[$i]\
    \ % 2 != 0) {\n      $odd2[] = $lst2[$i];\n    }\n  }\n  return count($odd1) ==\
    \ count($odd2) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xwpgrmq.php:40\n\
    Stack trace:\n#0 /tmp/tmp8xwpgrmq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8xwpgrmq.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $numEvens = 0;\n    foreach\
    \ ($lst1 as $n) {\n        if ($n % 2 == 0) $numEvens++;\n    }\n    foreach ($lst2\
    \ as $n) {\n        if ($n % 2 == 0) $numEvens--;\n    }\n    return $numEvens\
    \ == 0 ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwu3_6xqr.php:31\n\
    Stack trace:\n#0 /tmp/tmpwu3_6xqr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwu3_6xqr.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // TODO\n}\n\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ycapkm3.php:22\n\
    Stack trace:\n#0 /tmp/tmp0ycapkm3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0ycapkm3.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd_lst1 = array_values(array_filter($lst1,\
    \ function($x) { return $x % 2 == 1; }));\n    $even_lst2 = array_values(array_filter($lst2,\
    \ function($x) { return $x % 2 == 0; }));\n    $min_odd_lst1 = $odd_lst1[0];\n\
    \    $max_even_lst2 = $even_lst2[count($even_lst2) - 1];\n    return $min_odd_lst1\
    \ < $max_even_lst2 ? \"YES\" : \"NO\";\n}\necho exchange([1, 2, 3, 4], [1, 2,\
    \ 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 5, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 3]) . \"\\n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nYES\nYES\nNO\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptbb3ovm7.php:30\n\
    Stack trace:\n#0 /tmp/tmptbb3ovm7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmptbb3ovm7.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Your code here...\n}\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5__jo5ul.php:21\n\
    Stack trace:\n#0 /tmp/tmp5__jo5ul.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5__jo5ul.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    foreach ($lst1 as $n)\
    \ {\n        if ($n % 2 == 1) {\n            foreach ($lst2 as $j) {\n       \
    \         if ($j % 2 == 0) {\n                    return \"YES\";\n          \
    \      }\n            }\n            return \"NO\";\n        }\n    }\n    return\
    \ \"YES\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyftb7xal.php:32\n\
    Stack trace:\n#0 /tmp/tmpyftb7xal.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyftb7xal.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_diff($lst1,\
    \ array_filter($lst1, function($v) {\n        return $v % 2 == 0;\n    }));\n\
    \    $evens = array_diff($lst2, array_filter($lst2, function($v) {\n        return\
    \ $v % 2 == 1;\n    }));\n    return (sizeof($odds) == sizeof($evens)) ? \"YES\"\
    \ : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\"; // => \"\
    YES\"\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"; // => \"NO\"\necho\
    \ exchange([1, 3, 4], [1, 2, 2]) . \"\\n\"; // => \"YES\"\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 4, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1, 3, 4], [1,\
    \ 2, 2, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1, 3, 4], [1, 2, 2, 4, 4])\
    \ . \"\\n\"; // => \"YES\"\necho exchange([1, 3, 4], [1, 2, 2, 4, 4, 4]) . \"\\\
    n\"; // => \"YES\"\necho exchange([1, 3, 4], [1, 2, 2, 4, 4, 4, 4]) . \"\\n\"\
    ; // => \"YES\"\necho exchange([1, 3, 4], [1, 2, 2, 4, 4, 4, 4, 4]) . \"\\n\"\
    ; // => \"YES\"\necho exchange([1, 3, 4], [1, 2, 2, 4, 4, 4, 4, 4, 4]) . \"\\\
    n\"; // => \"YES\"\necho exchange([1, 3, 4], [1, 2, 2, 4, 4, 4, 4, 4, 4, 4]) .\
    \ \"\\n\"; // => \"YES\"\necho exchange([1, 3, 4], [1, 2, 2, 4, 4, 4, 4, 4, 4,\
    \ 4, 4]) . \"\\n\"; // => \"YES\"\necho exchange([1, 3\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpd2n1tg9m.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd_count = 0;\n    $even_count\
    \ = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2\
    \ == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i]\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count > 0 && $odd_count > 0) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpglhy995x.php:42\n\
    Stack trace:\n#0 /tmp/tmpglhy995x.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpglhy995x.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_len = count($lst1);\n\
    \    $lst2_len = count($lst2);\n    $index = 0;\n    $found = false;\n    $is_odd\
    \ = false;\n    $curr_odd = 0;\n    while($index < $lst1_len) {\n        if($lst1[$index]\
    \ % 2 == 1) {\n            $found = true;\n            $is_odd = true;\n     \
    \       $curr_odd = $lst1[$index];\n            break;\n        }\n        $index++;\n\
    \    }\n    if(!$found) {\n        return \"YES\";\n    }\n    else {\n      \
    \  for($i = 0; $i < $lst2_len; $i++) {\n            if($lst2[$i] % 2 == 0) {\n\
    \                $curr_odd = $lst2[$i];\n                break;\n            }\n\
    \        }\n        if($curr_odd % 2 == 0) {\n            return \"YES\";\n  \
    \      }\n        else {\n            return \"NO\";\n        }\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpmwxn0r.php:53\n\
    Stack trace:\n#0 /tmp/tmpkpmwxn0r.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpkpmwxn0r.php\
    \ on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $even1 = $odd1 = 0;\n  $even2\
    \ = $odd2 = 0;\n  foreach ($lst1 as $num) {\n    if ($num % 2 === 0) {\n     \
    \ $even1++;\n    } else {\n      $odd1++;\n    }\n  }\n  foreach ($lst2 as $num)\
    \ {\n    if ($num % 2 === 0) {\n      $even2++;\n    } else {\n      $odd2++;\n\
    \    }\n  }\n  if ($even1 - $even2 === 0) {\n    return \"YES\";\n  } elseif (($even1\
    \ - $even2) % 2 === 0) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n\
    \  }\n}\n$ans = exchange([1, 2, 3, 4], [1, 2, 3, 4]);\nprint_r($ans);\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpomz_262a.php:48\n\
    Stack trace:\n#0 /tmp/tmpomz_262a.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpomz_262a.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3e7nlgv2.php:23\n\
    Stack trace:\n#0 /tmp/tmp3e7nlgv2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3e7nlgv2.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $c1 = 0;\n    $c2 = 0;\n\
    \    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 == 0)\
    \ {\n            $c1++;\n        }\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        if ($lst2[$i] % 2 == 0) {\n            $c2++;\n        }\n\
    \    }\n    if ($c1 > $c2) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3s22g98s.php:38\n\
    Stack trace:\n#0 /tmp/tmp3s22g98s.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp3s22g98s.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $lst1 = array_filter($lst1, function($a) { return\
    \ $a % 2; });\n  $lst2 = array_filter($lst2, function($a) { return !($a % 2);\
    \ });\n  $odd = count($lst1);\n  $even = count($lst2);\n  return $odd && $even\
    \ ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpao4ej_x8.php:30\n\
    Stack trace:\n#0 /tmp/tmpao4ej_x8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpao4ej_x8.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd_count = 0;\n    $flag\
    \ = \"NO\";\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i]\
    \ % 2 !== 0) {\n            $odd_count++;\n        }\n    }\n    for ($i = 0;\
    \ $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2 === 0) {\n           \
    \ $odd_count--;\n        }\n    }\n    if ($odd_count <= 0) {\n        $flag =\
    \ \"YES\";\n    }\n    return $flag;\n}\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    if ($lst1 === $lst2) {\n\
    \        return \"YES\";\n    }\n    foreach ($lst1 as $value) {\n        if ($value\
    \ % 2 === 1) {\n            if (($key = array_search($value, $lst2)) !== false)\
    \ {\n                unset($lst2[$key]);\n            } else {\n             \
    \   return \"NO\";\n            }\n        }\n    }\n    return \"YES\";\n}\n\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_xiodk.php:35\n\
    Stack trace:\n#0 /tmp/tmpte_xiodk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_xiodk.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Write your code here.\n\
    }\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9g_4x2m.php:22\n\
    Stack trace:\n#0 /tmp/tmpr9g_4x2m.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpr9g_4x2m.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $count1 = 0;\n    $count2\
    \ = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2\
    \ == 0) {\n            $count1++;\n        }\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        if ($lst2[$i] % 2 == 0) {\n            $count2++;\n       \
    \ }\n    }\n    if ($count1 == count($lst1) || $count2 == count($lst2)) {\n  \
    \      return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n$arr1\
    \ = [1, 2, 3, 4];\n$arr2 = [1, 2, 3, 4];\n$arr3 = [1, 2, 3, 4];\n$arr4 = [1, 5,\
    \ 3, 4];\n$arr5 = [1, 2, 3, 4];\n$arr6 = [1, 2, 3, 5];\necho exchange($arr1, $arr2)\
    \ . PHP_EOL;\necho exchange($arr3, $arr4) . PHP_EOL;\necho exchange($arr5, $arr6)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "NO\nNO\nNO\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gwgzpce.php:46\n\
    Stack trace:\n#0 /tmp/tmp_gwgzpce.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp_gwgzpce.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $a = $b = 0;\n  foreach\
    \ ($lst1 as $num) {\n    if ($num % 2 !== 0) $a++;\n  }\n  foreach ($lst2 as $num)\
    \ {\n    if ($num % 2 === 0) $b++;\n  }\n  return $a === $b ? \"YES\" : \"NO\"\
    ;\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnbx5bh7g.php:34\n\
    Stack trace:\n#0 /tmp/tmpnbx5bh7g.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnbx5bh7g.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $is_possible = false;\n\
    \  foreach ($lst1 as $val1) {\n    if ($val1 % 2 === 0) {\n      $is_possible\
    \ = true;\n    }\n  }\n  if ($is_possible) {\n    return \"YES\";\n  } else {\n\
    \    foreach ($lst2 as $val2) {\n      if ($val2 % 2 === 0) {\n        return\
    \ \"YES\";\n      }\n    }\n  }\n  return \"NO\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_4rsdjm.php:38\n\
    Stack trace:\n#0 /tmp/tmpv_4rsdjm.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpv_4rsdjm.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $oddCount = 0;\n  foreach\
    \ ($lst1 as $n) {\n    if ($n % 2 != 0) {\n      $oddCount++;\n    }\n  }\n  foreach\
    \ ($lst2 as $n) {\n    if ($n % 2 != 0) {\n      $oddCount--;\n    }\n  }\n  return\
    \ $oddCount == 0 ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nddpv5g.php:35\n\
    Stack trace:\n#0 /tmp/tmp3nddpv5g.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3nddpv5g.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $result = \"NO\";\n  \
    \  foreach ($lst1 as $item) {\n        if ($item % 2 == 0) {\n            $result\
    \ = \"YES\";\n            break;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1jk9807.php:29\n\
    Stack trace:\n#0 /tmp/tmpv1jk9807.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv1jk9807.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($num) { return $num % 2 == 1; });\n  $evens = array_filter($lst2, function($num)\
    \ { return $num % 2 == 0; });\n  return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([], []) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [5, 6, 7, 8]) . \"\\n\";\necho exchange([5, 6, 7, 8], [1, 2, 3, 4])\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\nYES\nYES\nYES\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp54eodpj0.php:35\nStack trace:\n#0 /tmp/tmp54eodpj0.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmp54eodpj0.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odd_elements_count = 0;\n\
    \  $even_elements_count = 0;\n  foreach ($lst1 as $key => $value) {\n    if ($value\
    \ % 2 == 0) {\n      $even_elements_count += 1;\n    } else {\n      $odd_elements_count\
    \ += 1;\n    }\n  }\n  foreach ($lst2 as $key => $value) {\n    if ($value % 2\
    \ == 0) {\n      $even_elements_count += 1;\n    } else {\n      $odd_elements_count\
    \ += 1;\n    }\n  }\n  return $odd_elements_count % 2 == 0 ? \"YES\" : \"NO\"\
    ;\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfhbhh8vd.php:41\n\
    Stack trace:\n#0 /tmp/tmpfhbhh8vd.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpfhbhh8vd.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Your code here\n}\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8ldpjf0.php:21\n\
    Stack trace:\n#0 /tmp/tmpl8ldpjf0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpl8ldpjf0.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1Even = array_filter($lst1,\
    \ function($item) {\n        return $item % 2 == 0;\n    });\n    $lst2Even =\
    \ array_filter($lst2, function($item) {\n        return $item % 2 == 0;\n    });\n\
    \    $lst1Odd = array_filter($lst1, function($item) {\n        return $item %\
    \ 2 != 0;\n    });\n    $lst2Odd = array_filter($lst2, function($item) {\n   \
    \     return $item % 2 != 0;\n    });\n    return (count($lst1Even) + count($lst2Odd)\
    \ == count($lst1)) ? \"YES\" : \"NO\";\n}\necho exchange([1, 2, 3, 4], [1, 2,\
    \ 3, 4]) . \"<br>\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"<br>\";\n\
    echo exchange([2, 3, 5, 6], [6, 5, 3, 2]) . \"<br>\";\necho exchange([1, 3, 5,\
    \ 7], [2, 4, 6, 8]) . \"<br>\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES<br>NO<br>YES<br>NO<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpzj7m4lyy.php:40\nStack trace:\n#0 /tmp/tmpzj7m4lyy.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpzj7m4lyy.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $e = 0;\n    $o = 0;\n\
    \    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 == 0)\
    \ {\n            $e++;\n        } else {\n            $o++;\n        }\n    }\n\
    \    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2 == 0)\
    \ {\n            $e++;\n        } else {\n            $o++;\n        }\n    }\n\
    \    if ($e > $o) {\n        return \"YES\";\n    } else {\n        return \"\
    NO\";\n    }\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"<br>\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"<br>\";\necho exchange([1, 2, 3, 4],\
    \ [3, 2, 1, 4]) . \"<br>\";\necho exchange([1, 2, 3, 4], [1, 4, 3, 2]) . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "NO<br>NO<br>NO<br>NO<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpa5qhisg6.php:46\nStack trace:\n#0 /tmp/tmpa5qhisg6.php(55): test()\n\
    #1 {main}\n  thrown in /tmp/tmpa5qhisg6.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $count1 = 0;\n  $count2\
    \ = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 == 0)\
    \ {\n      $count1++;\n    }\n  }\n  for ($i = 0; $i < count($lst2); $i++) {\n\
    \    if ($lst2[$i] % 2 == 0) {\n      $count2++;\n    }\n  }\n  if ($count1 +\
    \ $count2 == count($lst1) + count($lst2)) {\n    return \"YES\";\n  } else {\n\
    \    return \"NO\";\n  }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmheujluk.php:37\n\
    Stack trace:\n#0 /tmp/tmpmheujluk.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmheujluk.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1odd = false;\n  $lst2odd\
    \ = false;\n  foreach ($lst1 as $value) {\n    if (($value % 2) != 0) {\n    \
    \  $lst1odd = true;\n    }\n  }\n  foreach ($lst2 as $value) {\n    if (($value\
    \ % 2) != 0) {\n      $lst2odd = true;\n    }\n  }\n  if ($lst1odd === $lst2odd)\
    \ {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 5, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4, 5]) . \"\\n\";\necho exchange([1, 2, 3, 4], [5, 6, 7,\
    \ 8]) . \"\\n\";\necho exchange([5, 6, 7, 8], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4, 5, 6, 7, 8]) . \"\\n\";\necho exchange([5, 6, 7, 8],\
    \ [1, 2, 3, 4, 5, 6, 7, 8]) . \"\\n\";\necho exchange([5, 6, 7, 8], [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9]) . \"\\n\";\necho exchange([1, 2, 3, 4, 5, 6, 7, 8, 9], [5,\
    \ 6, 7, 8]) . \"\\n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp366igyjp.php:49\nStack trace:\n#0 /tmp/tmp366igyjp.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp366igyjp.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $evenLst1 = array_filter($lst1,\
    \ function($elem) { return $elem % 2 == 0; });\n  $evenLst2 = array_filter($lst2,\
    \ function($elem) { return $elem % 2 == 0; });\n  $oddLst1 = array_filter($lst1,\
    \ function($elem) { return $elem % 2 != 0; });\n  $oddLst2 = array_filter($lst2,\
    \ function($elem) { return $elem % 2 != 0; });\n  return count($evenLst1) <= count($evenLst2)\
    \ && count($oddLst1) <= count($oddLst2) ? 'YES' : 'NO';\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mip_iyo.php:29\n\
    Stack trace:\n#0 /tmp/tmp5mip_iyo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5mip_iyo.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Write your code here.\n\
    \    $odd = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 1) {\n\
    \            $odd++;\n        }\n    }\n    $even = 0;\n    foreach ($lst2 as\
    \ $num) {\n        if ($num % 2 == 0) {\n            $even++;\n        }\n   \
    \ }\n    if ($odd == $even) {\n        return \"YES\";\n    } else {\n       \
    \ return \"NO\";\n    }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp53xg5boe.php:44\n\
    Stack trace:\n#0 /tmp/tmp53xg5boe.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp53xg5boe.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  foreach ($lst1\
    \ as $num) {\n    if ($num % 2 !== 0) {\n      $odds++;\n    }\n  }\n  $evens\
    \ = 0;\n  foreach ($lst2 as $num) {\n    if ($num % 2 === 0) {\n      $evens++;\n\
    \    }\n  }\n  if ($odds === $evens) {\n    return \"YES\";\n  } else {\n    return\
    \ \"NO\";\n  }\n}\n$output = exchange([1, 2, 3, 4], [1, 2, 3, 4]);\necho \"$output\\\
    n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7azzpz09.php:45\n\
    Stack trace:\n#0 /tmp/tmp7azzpz09.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp7azzpz09.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  if(all_odd($lst1)){\n  \
    \  return \"NO\";\n  }\n  for($i = 0; $i < count($lst1); $i++){\n    for($j =\
    \ 0; $j < count($lst2); $j++){\n      $temp = $lst1[$i];\n      $lst1[$i] = $lst2[$j];\n\
    \      $lst2[$j] = $temp;\n      if(all_odd($lst1)){\n        $temp = $lst1[$i];\n\
    \        $lst1[$i] = $lst2[$j];\n        $lst2[$j] = $temp;\n      } else {\n\
    \        return \"YES\";\n      }\n    }\n  }\n  return \"NO\";\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function all_odd() in\
    \ /tmp/tmpofv2_jy8.php:14\nStack trace:\n#0 /tmp/tmpofv2_jy8.php(34): exchange(Array,\
    \ Array)\n#1 /tmp/tmpofv2_jy8.php(38): candidate(Array, Array)\n#2 /tmp/tmpofv2_jy8.php(47):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpofv2_jy8.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqarogn1.php:20\n\
    Stack trace:\n#0 /tmp/tmpjqarogn1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqarogn1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $isOk = \"NO\";\n    for\
    \ ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 != 0) {\n   \
    \         for ($j = 0; $j < count($lst2); $j++) {\n                if ($lst2[$j]\
    \ % 2 == 0) {\n                    $tmp = $lst1[$i];\n                    $lst1[$i]\
    \ = $lst2[$j];\n                    $lst2[$j] = $tmp;\n                    $isOk\
    \ = \"YES\";\n                    break;\n                }\n            }\n \
    \       }\n    }\n    return $isOk;\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3,\
    \ 4]);\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87i3aoxi.php:38\n\
    Stack trace:\n#0 /tmp/tmp87i3aoxi.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp87i3aoxi.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd = [];\n    foreach\
    \ ($lst1 as $val) {\n        if ($val % 2 != 0) {\n            $odd[] = $val;\n\
    \        }\n    }\n    if (count($odd) == 0) {\n        return \"YES\";\n    }\n\
    \    $even = [];\n    foreach ($lst2 as $val) {\n        if ($val % 2 == 0) {\n\
    \            $even[] = $val;\n        }\n    }\n    if (count($even) == 0) {\n\
    \        return \"NO\";\n    }\n    if (count($odd) < count($even)) {\n      \
    \  return \"YES\";\n    }\n    return \"NO\";\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2\
    \ = [1, 2, 3, 4];\necho exchange($lst1, $lst2) . PHP_EOL;\n$lst1 = [1, 2, 3, 4];\n\
    $lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2) . PHP_EOL;\n$lst1 = [5, 3,\
    \ 2, 1];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1, $lst2) . PHP_EOL;\n$lst1\
    \ = [4, 3, 2, 1];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2) . PHP_EOL;\n\
    $lst1 = [5, 3, 2, 1];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2) . PHP_EOL;\n\
    $lst1 = [10, 2, 11, 12];\n$lst2 = [2, 3, 8, 9];\necho exchange($lst1, $lst2) .\
    \ PHP_EOL;\n$lst1 = [10, 2, 11, 12];\n$lst2 = [1, 3, 8, 9];\necho exchange($lst1,\
    \ $lst2) . PHP_EOL;\n$lst1\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr9xpwr5u.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Your code here!\n}\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2cuktvc.php:21\n\
    Stack trace:\n#0 /tmp/tmpo2cuktvc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo2cuktvc.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_count_values($lst1);\n\
    \  $lst2 = array_count_values($lst2);\n  $odds = 0;\n  $evens = 0;\n  foreach\
    \ ($lst1 as $num => $count) {\n    if ($num % 2 == 0) {\n      $evens += $count;\n\
    \    } else {\n      $odds += $count;\n    }\n  }\n  foreach ($lst2 as $num =>\
    \ $count) {\n    if ($num % 2 == 0) {\n      $evens += $count;\n    } else {\n\
    \      $odds += $count;\n    }\n  }\n  if ($evens % 2 == 0 && $odds % 2 == 0)\
    \ {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\n$lst1 = [1,\
    \ 2, 3, 4];\n$lst2 = [1, 2, 3, 4];\necho exchange($lst1, $lst2) . \"<br>\";\n\
    $lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 4];\necho exchange($lst1, $lst2) . \"\
    <br>\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 3, 3];\necho exchange($lst1, $lst2)\
    \ . \"<br>\";\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 5, 5, 4];\necho exchange($lst1,\
    \ $lst2) . \"<br>\";\n$lst1 = [2, 2, 3, 4];\n$lst2 = [1, 5, 5, 4];\necho exchange($lst1,\
    \ $lst2) . \"<br>\";\n$lst1 = [2, 2, 2, 4];\n$lst2 = [1, 5, 5, 4];\necho exchange($lst1,\
    \ $lst2) . \"<br>\";\n$lst1 = [2, 2, 2, 4];\n$lst\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpko8snly2.php on line 59\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $newLst1 = [];\n  foreach\
    \ ($lst1 as $l1) {\n    if ($l1 % 2 === 0) {\n      $newLst1[] = $l1;\n    }\n\
    \  }\n  $newLst2 = [];\n  foreach ($lst2 as $l2) {\n    if ($l2 % 2 !== 0) {\n\
    \      $newLst2[] = $l2;\n    }\n  }\n  if (count($newLst1) === count($newLst2))\
    \ {\n    return \"YES\";\n  }\n  return \"NO\";\n}\n\necho exchange([1, 2, 3,\
    \ 4], [1, 2, 3, 4]);\necho \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]);\n\
    echo \"\\n\";\necho exchange([1, 2, 3, 4], [1, 2, 3, 6]);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\nYES\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqy1wuaxl.php:49\n\
    Stack trace:\n#0 /tmp/tmpqy1wuaxl.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqy1wuaxl.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Your code here\n}\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8a_1wk6l.php:21\n\
    Stack trace:\n#0 /tmp/tmp8a_1wk6l.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8a_1wk6l.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $allEven = true;\n  foreach\
    \ ($lst1 as $num) {\n    if ($num % 2 !== 0) {\n      $allEven = false;\n    }\n\
    \  }\n  if ($allEven) {\n    return \"YES\";\n  }\n  $odd1 = [];\n  $odd2 = [];\n\
    \  foreach ($lst1 as $num) {\n    if ($num % 2 !== 0) {\n      $odd1[] = $num;\n\
    \    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num % 2 !== 0) {\n      $odd2[]\
    \ = $num;\n    }\n  }\n  if (empty($odd1) || empty($odd2)) {\n    return \"NO\"\
    ;\n  }\n  foreach ($odd1 as $num) {\n    if (in_array($num, $odd2)) {\n      return\
    \ \"YES\";\n    }\n  }\n  return \"NO\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxj1xg55.php:52\n\
    Stack trace:\n#0 /tmp/tmpoxj1xg55.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpoxj1xg55.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd1 = array_filter($lst1,\
    \ function($n) {\n        return $n % 2 != 0;\n    });\n    $odd2 = array_filter($lst2,\
    \ function($n) {\n        return $n % 2 != 0;\n    });\n    if ($odd1 || $odd2)\
    \ {\n        if (count($odd1) == count($odd2)) {\n            return \"YES\";\n\
    \        }\n        return \"NO\";\n    }\n    return \"YES\";\n}\necho \"exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]) => \" . exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"<br>\"\
    ;\necho \"exchange([1, 2, 3, 4], [1, 5, 3, 4]) => \" . exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4]) . \"<br>\";\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "exchange([1, 2, 3, 4], [1, 2, 3, 4]) => YES<br>exchange([1, 2, 3, 4], [1,\
    \ 5, 3, 4]) => NO<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3uz623h.php:39\n\
    Stack trace:\n#0 /tmp/tmpi3uz623h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpi3uz623h.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $return = \"NO\";\n  \
    \  $even = 0;\n    $odd = 0;\n    foreach ($lst1 as $number) {\n        if ($number\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    foreach ($lst2 as $number) {\n        if ($number % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    if ($even > $odd) {\n        $return = \"YES\";\n    }\n    return\
    \ $return;\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_71f3dam.php:42\n\
    Stack trace:\n#0 /tmp/tmp_71f3dam.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp_71f3dam.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = 0;\n    $odd =\
    \ 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    if ($even > $odd) {\n        return \"YES\";\n    } else {\n\
    \        return \"NO\";\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprb16ksrg.php:42\n\
    Stack trace:\n#0 /tmp/tmprb16ksrg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmprb16ksrg.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $allEven1 = allEven($lst1);\n\
    \  $allEven2 = allEven($lst2);\n  $odd1 = firstOdd($lst1);\n  $odd2 = firstOdd($lst2);\n\
    \  if ($allEven1 && $allEven2) {\n    return \"YES\";\n  } elseif ($allEven1 &&\
    \ !$allEven2) {\n    $lst2[$odd2] = $lst1[$odd1];\n    $lst1[$odd1] = $lst2[$odd2];\n\
    \    $allEven1 = allEven($lst1);\n    $allEven2 = allEven($lst2);\n    if ($allEven1\
    \ && $allEven2) {\n      return \"YES\";\n    } else {\n      return \"NO\";\n\
    \    }\n  } elseif (!$allEven1 && $allEven2) {\n    $lst1[$odd1] = $lst2[$odd2];\n\
    \    $lst2[$odd2] = $lst1[$odd1];\n    $allEven1 = allEven($lst1);\n    $allEven2\
    \ = allEven($lst2);\n    if ($allEven1 && $allEven2) {\n      return \"YES\";\n\
    \    } else {\n      return \"NO\";\n    }\n  } else {\n    return \"NO\";\n \
    \ }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function allEven() in\
    \ /tmp/tmpxyfjmbxd.php:14\nStack trace:\n#0 /tmp/tmpxyfjmbxd.php(45): exchange(Array,\
    \ Array)\n#1 /tmp/tmpxyfjmbxd.php(49): candidate(Array, Array)\n#2 /tmp/tmpxyfjmbxd.php(58):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpxyfjmbxd.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odd1 = array_filter($lst1,\
    \ function($num) {\n    return $num % 2 == 1;\n  });\n  $odd2 = array_filter($lst2,\
    \ function($num) {\n    return $num % 2 == 1;\n  });\n  if (count($odd1) == count($odd2))\
    \ {\n    return \"YES\";\n  }\n  return \"NO\";\n}\n\necho exchange([1, 2, 3,\
    \ 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\
    \\n\";\necho exchange([1, 1, 1, 1], [2, 2, 2, 2]) . \"\\n\";\necho exchange([1,\
    \ 1, 1, 1], [1, 1, 1, 1]) . \"\\n\";\necho exchange([1, 1, 1, 1], [1, 2, 2, 2])\
    \ . \"\\n\";\necho exchange([1, 1, 1, 1], [2, 2, 2, 2]) . \"\\n\";\necho exchange([1,\
    \ 2, 1, 1], [2, 2, 2, 2]) . \"\\n\";\necho exchange([1, 1, 1, 1], [2, 2, 1, 2])\
    \ . \"\\n\";\necho exchange([1, 1, 1, 1], [2, 2, 1, 1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nNO\nNO\nYES\nNO\nNO\nNO\nNO\nNO\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0bpjm0kc.php:43\nStack trace:\n#0 /tmp/tmp0bpjm0kc.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0bpjm0kc.php on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $oddsLst1 = count(array_filter($lst1,\
    \ function($el) { return $el % 2; }));\n    $oddsLst2 = count(array_filter($lst2,\
    \ function($el) { return $el % 2; }));\n    return $oddsLst1 === $oddsLst2 ? \"\
    YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([2, 3, 4], [1,\
    \ 5, 3, 4]) . \"\\n\";\necho exchange([1, 5, 3, 4], [2, 3, 4]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 5], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 5, 3, 4],\
    \ [1, 2, 3, 5]) . \"\\n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\nNO\nNO\nYES\nYES\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp18vbb3j8.php:33\nStack trace:\n#0 /tmp/tmp18vbb3j8.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmp18vbb3j8.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $count = 0;\n  foreach ($lst1\
    \ as $key => $value) {\n    if ($value % 2 == 1) {\n      $count++;\n    }\n \
    \ }\n  foreach ($lst2 as $key => $value) {\n    if ($value % 2 == 0) {\n     \
    \ $count--;\n    }\n  }\n  if ($count > 0) {\n    return \"NO\";\n  } else {\n\
    \    return \"YES\";\n  }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        if ($lst1[$i] % 2 == 1) {\n            $key = array_search($lst1[$i],\
    \ $lst2);\n            if ($key !== false) {\n                $lst2[$key] = $lst1[$i];\n\
    \                $lst1[$i] = $lst2[$key];\n            } else {\n            \
    \    return \"NO\";\n            }\n        }\n    }\n    return \"YES\";\n}\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0dd5446t.php:33\n\
    Stack trace:\n#0 /tmp/tmp0dd5446t.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0dd5446t.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $flag = false;\n    $len1\
    \ = count($lst1);\n    $len2 = count($lst2);\n    for ($i = 0; $i < $len1; $i++)\
    \ {\n        if ($lst1[$i] % 2 != 0) {\n            for ($j = 0; $j < $len2; $j++)\
    \ {\n                if ($lst2[$j] % 2 != 0) {\n                    $lst1[$i]\
    \ = $lst2[$j];\n                    $flag = true;\n                    break;\n\
    \                }\n            }\n        }\n        if (!$flag) {\n        \
    \    return \"NO\";\n        }\n    }\n    return \"YES\";\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96miqvz5.php:39\n\
    Stack trace:\n#0 /tmp/tmp96miqvz5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp96miqvz5.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $n = count($lst1);\n \
    \   $m = count($lst2);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $m; $j++) {\n            if ($lst1[$i] % 2 != 0 && $lst2[$j] % 2 == 0)\
    \ {\n                $temp = $lst1[$i];\n                $lst1[$i] = $lst2[$j];\n\
    \                $lst2[$j] = $temp;\n            }\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($lst1[$i] % 2 != 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd = [];\n    $even\
    \ = [];\n    foreach ($lst1 as $el) {\n        if ($el % 2 == 0) {\n         \
    \   $even[] = $el;\n        } else {\n            $odd[] = $el;\n        }\n \
    \   }\n    foreach ($lst2 as $el) {\n        if ($el % 2 == 0) {\n           \
    \ $even[] = $el;\n        } else {\n            $odd[] = $el;\n        }\n   \
    \ }\n    return count($odd) > count($even) ? \"NO\" : \"YES\";\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_even = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n    $lst2_odd = array_filter($lst2,\
    \ function($x) { return $x % 2 != 0; });\n    if (count($lst1_even) == count($lst1))\
    \ {\n        return \"YES\";\n    } elseif (count($lst1_even) < count($lst1) &&\
    \ count($lst2_odd) >= count($lst1) - count($lst1_even)) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]) . \"<br>\"; // \"YES\"\necho exchange([1, 2, 3, 4], [1, 5, 3,\
    \ 4]) . \"<br>\"; // \"NO\"\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES<br>YES<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpok7oug6j.php:32\n\
    Stack trace:\n#0 /tmp/tmpok7oug6j.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpok7oug6j.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n}\n$a = [1, 2, 3, 4];\n$b\
    \ = [1, 2, 3, 4];\necho exchange($a, $b) . \"\\n\"; // YES\n$a = [1, 2, 3, 4];\n\
    $b = [1, 5, 3, 4];\necho exchange($a, $b) . \"\\n\"; // NO\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiz73tie6.php:27\n\
    Stack trace:\n#0 /tmp/tmpiz73tie6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpiz73tie6.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($i) { return $i % 2 != 0; });\n    $evens = array_filter($lst2, function($i)\
    \ { return $i % 2 == 0; });\n    if (count($odds) == count($evens)) {\n      \
    \  return \"YES\";\n    }\n    return \"NO\";\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyc6vpbgq.php:32\n\
    Stack trace:\n#0 /tmp/tmpyc6vpbgq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyc6vpbgq.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $isExchangePossible =\
    \ false;\n    $lst1WithEvenElements = $lst1;\n    $lst2WithEvenElements = $lst2;\n\
    \    $lst1HasEvenElement = in_array(2, $lst1);\n    $lst2HasEvenElement = in_array(2,\
    \ $lst2);\n    foreach ($lst1 as $lst1Key => $lst1Value) {\n        if ($lst1Value\
    \ % 2 == 0) {\n            $lst1WithEvenElements[$lst1Key] = 2;\n        }\n \
    \   }\n    foreach ($lst2 as $lst2Key => $lst2Value) {\n        if ($lst2Value\
    \ % 2 == 0) {\n            $lst2WithEvenElements[$lst2Key] = 2;\n        }\n \
    \   }\n    if (in_array(2, $lst1WithEvenElements) && in_array(2, $lst2WithEvenElements))\
    \ {\n        $isExchangePossible = true;\n    }\n    if (!$lst1HasEvenElement\
    \ && !$lst2HasEvenElement) {\n        $isExchangePossible = false;\n    }\n  \
    \  return $isExchangePossible ? \"YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3,\
    \ 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\
    \\n\";\necho exchange([1, 2, 3, 4], [1, 4, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 4, 5, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 3, 5, 4])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [3, 5, 5, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 5, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 6, 4])\
    \ .\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpowmzfww2.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        if ($lst1[$i] % 2 == 1) {\n            $index = array_search($lst1[$i],\
    \ $lst2);\n            if ($index === false) {\n                return \"NO\"\
    ;\n            } else {\n                $lst2[$index] = 0;\n            }\n \
    \       }\n    }\n    return \"YES\";\n}\n\nfunction candidate(...$args) {\n \
    \   return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfaal8535.php:33\n\
    Stack trace:\n#0 /tmp/tmpfaal8535.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfaal8535.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odd = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n    return count($even) + count($odd) >= count($lst1)\
    \ ? \"YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\"\
    ; // => \"YES\"\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"; // => \"\
    NO\"\necho exchange([1, 2, 3, 4], [4, 2, 3, 1]) . \"\\n\"; // => \"YES\"\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"; // => \"NO\"\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 4, 3]) . \"\\n\"; // => \"YES\"\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 4, 5]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2, 3, 4], [1, 2, 4,\
    \ 5]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2, 3, 4], [1, 5, 4, 5]) . \"\\\
    n\"; // => \"NO\"\necho exchange([1, 2, 3, 4], [1, 5, 5, 5]) . \"\\n\"; // =>\
    \ \"NO\"\necho exchange([1, 2, 3, 4], [1, 5, 5, 5]) . \"\\n\"; // => \"NO\"\n\
    echo exchange([1, 2, 3, 4], [1, 5, 5, 5]) . \"\\n\"; // => \"NO\"\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 6, 7]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 6, 7]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2, 3, 4], [1, 5, 6,\
    \ 7]) . \"\\n\"; // => \"NO\"\necho exchange([1, 2,\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpivmugenp.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz2mrzvq.php:21\n\
    Stack trace:\n#0 /tmp/tmpdz2mrzvq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdz2mrzvq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Your code here\n  $arr\
    \ = array();\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2\
    \ == 1) {\n      array_push($arr, $lst1[$i]);\n    }\n  }\n  for ($i = 0; $i <\
    \ count($lst2); $i++) {\n    if ($lst2[$i] % 2 == 0) {\n      array_push($arr,\
    \ $lst2[$i]);\n    }\n  }\n  if (count($arr) != count($lst1)) {\n    return \"\
    NO\";\n  }\n  return \"YES\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78_fr1wa.php:39\n\
    Stack trace:\n#0 /tmp/tmp78_fr1wa.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp78_fr1wa.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $even_lst1 = array_filter($lst1,\
    \ function($element) {\n    return $element % 2 == 0;\n  });\n  $odd_lst2 = array_filter($lst2,\
    \ function($element) {\n    return $element % 2 != 0;\n  });\n  return count($even_lst1)\
    \ == count($odd_lst2) ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_tefh0d.php:33\n\
    Stack trace:\n#0 /tmp/tmpn_tefh0d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpn_tefh0d.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    // Write your code here!\n\
    }\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7dbxpem.php:22\n\
    Stack trace:\n#0 /tmp/tmp_7dbxpem.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_7dbxpem.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = 0;\n    $odd =\
    \ 0;\n    foreach ($lst1 as $num) {\n        $num % 2 === 0 ? $even++ : $odd++;\n\
    \    }\n    foreach ($lst2 as $num) {\n        $num % 2 === 0 ? $even++ : $odd++;\n\
    \    }\n    if ($even === count($lst1) + count($lst2)) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}\n\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) .\
    \ \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdp9ttvsy.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphatgdt5f.php:21\n\
    Stack trace:\n#0 /tmp/tmphatgdt5f.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphatgdt5f.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evens = array_filter($lst1,\
    \ function($e) { return $e % 2 == 0; });\n    $odds = array_filter($lst2, function($e)\
    \ { return $e % 2 != 0; });\n    return count($evens) <= count($odds) ? \"YES\"\
    \ : \"NO\";\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [5, 2, 3, 4])\
    \ . \"\\n\";\necho exchange([2, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nYES\nYES\nYES\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_qbarwkj.php:28\nStack trace:\n#0 /tmp/tmp_qbarwkj.php(36): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_qbarwkj.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = [];\n    $odd\
    \ = [];\n    $lst1 = array_filter($lst1, function($x) use (&$even, &$odd) {\n\
    \        if ($x % 2 == 0) {\n            $even[] = $x;\n            return true;\n\
    \        } else {\n            $odd[] = $x;\n            return false;\n     \
    \   }\n    });\n    $lst2 = array_filter($lst2, function($x) use (&$even, &$odd)\
    \ {\n        if ($x % 2 == 0) {\n            $even[] = $x;\n            return\
    \ true;\n        } else {\n            $odd[] = $x;\n            return false;\n\
    \        }\n    });\n    if (count($even) > 0) {\n        return 'YES';\n    }\
    \ else {\n        return 'NO';\n    }\n}\n$lst1 = [1, 2, 3, 4];\n$lst2 = [1, 2,\
    \ 3, 4];\necho exchange($lst1, $lst2);\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2y1mg959.php:49\n\
    Stack trace:\n#0 /tmp/tmp2y1mg959.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp2y1mg959.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_count_values($lst1);\n\
    \  $lst2 = array_count_values($lst2);\n  $odd_numbers_in_lst1 = array_keys(array_filter($lst1,\
    \ function($element) {\n    return $element % 2 != 0;\n  }));\n  $even_numbers_in_lst2\
    \ = array_keys(array_filter($lst2, function($element) {\n    return $element %\
    \ 2 == 0;\n  }));\n  $all_even_numbers_are_in_lst2 = count(array_diff($odd_numbers_in_lst1,\
    \ $even_numbers_in_lst2)) == 0;\n  $all_odd_numbers_are_in_lst1 = count(array_diff($even_numbers_in_lst2,\
    \ $odd_numbers_in_lst1)) == 0;\n  return $all_even_numbers_are_in_lst2 && $all_odd_numbers_are_in_lst1\
    \ ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1jxq4j4n.php:31\n\
    Stack trace:\n#0 /tmp/tmp1jxq4j4n.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1jxq4j4n.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_16_count_distinct_characters
language: php
prompt: "<?php\n// Given a string, find out how many distinct characters (regardless\
  \ of case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
  // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters($string)\
  \ {\n"
tests: "function candidate(...$args) {\n    return count_distinct_characters(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"\") !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"abcde\") !== 5) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"abcdecadeCADE\") !== 5) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"aaaaAAAAaaaa\") !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Jerry jERRY JeRRRY\") !== 5) { throw new\
  \ Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["\t$chars = [];\n\t$chars_length = 0;\n\t$string_length = strlen($string);\n\
    \tfor ($i = 0; $i < $string_length; $i++) {\n\t\t$char = strtolower($string[$i]);\n\
    \t\tif (array_key_exists($char, $chars)) {\n\t\t\t$chars[$char]++;\n\t\t} else\
    \ {\n\t\t\t$chars[$char] = 1;\n\t\t\t$chars_length++;\n\t\t}\n\t}\n\treturn $chars_length;\n\
    }\necho count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";", "  $characters = str_split($string);\n  $count = 0;\n  $counted_characters\
    \ = [];\n  for ($i = 0; $i < count($characters); $i++) {\n    if (!in_array(strtolower($characters[$i]),\
    \ $counted_characters)) {\n      $counted_characters[] = strtolower($characters[$i]);\n\
    \      $count++;\n    }\n  }\n  return $count;\n}", "    $arr = array_count_values(str_split(strtolower($string)));\n\
    \    return count($arr);\n}\n", "    $string = strtolower($string);\n    $array_string\
    \ = array_count_values(str_split($string));\n    return count($array_string);\n\
    }\n", "  $char_list = str_split(strtolower($string));\n  $chars = array_unique($char_list);\n\
    \  return count($chars);\n}\necho count_distinct_characters('xyzXYZ') . \"\\n\"\
    ;\necho count_distinct_characters('Jerry') . \"\\n\";", "\t$string = strtolower($string);\n\
    \t$unique = array_unique(str_split($string));\n\treturn count($unique);\n}\n",
  "    $string = strtolower($string);\n    $arr = str_split($string);\n    $arr =\
    \ array_unique($arr);\n    return count($arr);\n}\n", "    $lower = strtolower($string);\n\
    \    $array = array_unique(str_split($lower));\n    return count($array);\n}",
  "\t$string = strtolower($string);\n\t$new_string = str_split($string);\n\t$characters\
    \ = array_unique($new_string);\n\treturn count($characters);\n}\n", "    return\
    \ count(array_unique(str_split(strtolower($string))));\n}\n", "  $char_array =\
    \ str_split($string);\n  $distinct_array = array_unique($char_array);\n  $distinct_string\
    \ = implode(\"\", $distinct_array);\n  $num_distinct = strlen($distinct_string);\n\
    \  return $num_distinct;\n}\necho count_distinct_characters('xyzXYZ') . PHP_EOL;\n\
    echo count_distinct_characters('Jerry') . PHP_EOL;\n", "\t$array = array_unique(array_map('strtolower',\
    \ str_split($string)));\n\t$count = count($array);\n\treturn $count;\n}\n\necho\
    \ count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";", "    $characters = [];\n    $count = 0;\n    $string_len = strlen($string);\n\
    \    for ($i = 0; $i < $string_len; $i++) {\n        $char = $string[$i];\n  \
    \      if (!in_array($char, $characters)) {\n            $characters[] = $char;\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n", "\t$count\
    \ = count(str_split(strtolower($string)));\n\treturn $count;\n}\n", "\t$distinct_characters\
    \ = 0;\n\t$string = strtolower($string);\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$c = $string[$i];\n\t\tif (strpos($string, $c, $i + 1) === false)\n\
    \t\t\t$distinct_characters++;\n\t}\n\treturn $distinct_characters;\n}\n", "  \
    \  $characters = str_split($string);\n    $characters = array_map('strtolower',\
    \ $characters);\n    $characters = array_unique($characters);\n    return count($characters);\n\
    }\n", "    $char_array = str_split($string);\n    $char_array = array_unique($char_array);\n\
    \    $char_array = array_map('strtolower', $char_array);\n    $char_array = array_unique($char_array);\n\
    \    return count($char_array);\n}\n", "    $array = str_split($string);\n   \
    \ $distinct_chars = [];\n    for ($i = 0; $i < count($array); $i++) {\n      \
    \  if (!in_array(strtolower($array[$i]), $distinct_chars)) {\n            array_push($distinct_chars,\
    \ strtolower($array[$i]));\n        }\n    }\n    return count($distinct_chars);\n\
    }\n", "    $counts = [];\n    for ($i = 0; $i < strlen($string); $i++) {\n   \
    \     $char = strtolower($string[$i]);\n        if (!isset($counts[$char])) {\n\
    \            $counts[$char] = 0;\n        }\n        $counts[$char]++;\n    }\n\
    \    return count($counts);\n}\n\n$string = 'xyzXYZ';\necho count_distinct_characters($string);\n",
  "\t$string_lower = strtolower($string);\n\t$string_array = str_split($string_lower);\n\
    \t$new_array = array_unique($string_array);\n\t$count = count($new_array);\n\t\
    return $count;\n}\n", "    $counts = array_count_values(str_split(strtolower($string)));\n\
    \    return count($counts);\n}\n\n$tests = [\n    ['xyzXYZ', 3],\n    ['Jerry',\
    \ 4],\n    ['', 0],\n    ['aa', 1],\n    ['asdfghjkl1234567890qwertyuiop!@#$%^&*()',\
    \ 33],\n];\n\nforeach ($tests as $test) {\n    $actual = count_distinct_characters($test[0]);\n\
    \    if ($actual !== $test[1]) {\n        echo \"Fail: '{$test[0]}' actual: {$actual}\
    \ expected: {$test[1]}\\n\";\n    }\n}", "\t$str_array = str_split($string);\n\
    \t$str_array = array_count_values($str_array);\n\t$str_len = count($str_array);\n\
    \treturn $str_len;\n}\n", "\t$temp = str_split($string);\n\t$temp = array_unique($temp);\n\
    \treturn count($temp);\n}\necho count_distinct_characters('Jerry') . PHP_EOL;",
  "\t$string = strtolower($string);\n\t$characters = [];\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$characters[$string[$i]] = 1;\n\t}\n\treturn count($characters);\n\
    }\n", "    $string = strtolower($string);\n    $array = array_unique(str_split($string));\n\
    \    return sizeof($array);\n}\necho count_distinct_characters('xyzXYZ') . \"\\\
    n\";\necho count_distinct_characters('Jerry') . \"\\n\";\n", "    $arr = array_unique(str_split(strtolower($string)));\n\
    \    return count($arr);\n}\n\necho count_distinct_characters('xyzXYZ') . \"\\\
    n\";\necho count_distinct_characters('Jerry') . \"\\n\";\n", "\t$string = strtolower($string);\n\
    \t$count = 0;\n\t$arr = array();\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\
    \t\tif (array_key_exists($string[$i], $arr)) {\n\t\t\t$arr[$string[$i]]++;\n\t\
    \t} else {\n\t\t\t$arr[$string[$i]] = 1;\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}", "    $string = strtolower($string);\n    $length = strlen($string);\n\
    \    $hash = array();\n    for ($i = 0; $i < $length; $i++) {\n        $hash[$string[$i]]\
    \ = 1;\n    }\n    return count($hash);\n}\n", "  $characters = str_split($string);\n\
    \  $distinct_characters = [];\n  foreach ($characters as $character) {\n    if\
    \ (!in_array(strtolower($character), $distinct_characters)) {\n      $distinct_characters[]\
    \ = strtolower($character);\n    }\n  }\n  return count($distinct_characters);\n\
    }\n", "  $arr = str_split($string);\n  $count = 0;\n  foreach ($arr as $key =>\
    \ $value) {\n    $count += strlen(count_chars($value, 3));\n  }\n  return $count;\n\
    }\n\n$a = count_distinct_characters('Jerry');\necho $a;", "    // your code here\n\
    }", "\t$distinct = [];\n\t$string = strtolower($string);\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$char = $string[$i];\n\t\tif (!isset($distinct[$char]))\
    \ {\n\t\t\t$distinct[$char] = 1;\n\t\t}\n\t}\n\treturn count($distinct);\n}\n\
    echo count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";", "\t$string = strtolower($string);\n\t$characters = str_split($string);\n\
    \tsort($characters);\n\t$result = array_unique($characters);\n\treturn count($result);\n\
    }\necho count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";\necho \"\\n\";\n", "    return count(array_unique(str_split(strtolower($string))));\n\
    }\n", "    $characters = str_split($string);\n    $characters = array_unique($characters);\n\
    \    return count($characters);\n}\n", "    $char_count = [];\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $char = strtolower($string[$i]);\n  \
    \      if (!array_key_exists($char, $char_count)) {\n            $char_count[$char]\
    \ = 0;\n        }\n        $char_count[$char]++;\n    }\n    return count($char_count);\n\
    }\n", "\t$char_array = str_split($string);\n\t$char_array = array_map('strtolower',\
    \ $char_array);\n\t$char_array = array_unique($char_array);\n\treturn count($char_array);\n\
    }\n", "    $charArray = str_split($string);\n    $resultArray = array();\n   \
    \ foreach ($charArray as $char) {\n        if (!in_array(strtolower($char), $resultArray))\
    \ {\n            array_push($resultArray, strtolower($char));\n        }\n   \
    \ }\n    return count($resultArray);\n}", "    $chars = str_split($string);\n\
    \    $distinct_chars = [];\n    foreach ($chars as $char) {\n        if (!in_array(strtolower($char),\
    \ $distinct_chars)) {\n            $distinct_chars[] = strtolower($char);\n  \
    \      }\n    }\n    return count($distinct_chars);\n}", "\t$characters = str_split($string);\n\
    \t$characters = array_map('strtolower', $characters);\n\t$characters = array_unique($characters);\n\
    \treturn count($characters);\n}\n", "\t$string = strtolower($string);\n\t$array\
    \ = array_unique(str_split($string));\n\treturn count($array);\n}\n", "\t$characters\
    \ = str_split($string);\n\t$string = strtolower($string);\n\t$characters = str_split($string);\n\
    \t$characters = array_unique($characters);\n\t$uniqueChars = count($characters);\n\
    \treturn $uniqueChars;\n}\necho count_distinct_characters('xyzXYZ');\n", "  //\
    \ your code goes here\n  $chars = [];\n  for ($i = 0; $i < strlen($string); $i++)\
    \ {\n    $char = strtolower($string[$i]);\n    if (!isset($chars[$char])) {\n\
    \      $chars[$char] = true;\n    }\n  }\n  return count($chars);\n}\n\nprint\
    \ count_distinct_characters('xyzXYZ') . \"\\n\";\nprint count_distinct_characters('Jerry')\
    \ . \"\\n\";", "  // Your code here\n}\n", "\t// BEGIN\n\t$unique = array_unique(str_split(strtolower($string)));\n\
    \treturn count($unique);\n\t// END\n}\n", "\n}", "  $string_array = str_split($string);\n\
    \  $unique_string_array = array_unique($string_array);\n  $unique_string = implode(\"\
    \", $unique_string_array);\n  return strlen($unique_string);\n}\necho count_distinct_characters('xyzXYZ')\
    \ . PHP_EOL;\necho count_distinct_characters('Jerry') . PHP_EOL;\n", "    $string\
    \ = strtolower($string);\n    $arr = str_split($string);\n    $n = count($arr);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($arr[$i] == $arr[$j]) {\n                $arr[$j] = '';\n   \
    \         }\n        }\n    }\n    $arr = array_values(array_filter($arr));\n\
    \    return count($arr);\n}\n", "    $characters = [];\n    for ($i = 0; $i <\
    \ strlen($string); $i++) {\n        $characters[strtolower($string[$i])] = true;\n\
    \    }\n    return count($characters);\n}\n", "  $num_characters = 0;\n  $characters\
    \ = array();\n  $string = strtolower($string);\n  for ($i = 0; $i < strlen($string);\
    \ $i++) {\n    if (!in_array($string[$i], $characters)) {\n      $characters[]\
    \ = $string[$i];\n      $num_characters++;\n    }\n  }\n  return $num_characters;\n\
    }\n", "    $array = str_split($string);\n    $count = 0;\n    foreach ($array\
    \ as $value) {\n        if (strtolower($value) == $value) {\n            $count++;\n\
    \        }\n    }\n    echo $count;\n}\ncount_distinct_characters('Jerry');",
  "  $string = strtolower($string);\n  $distinct_characters = array();\n  $characters\
    \ = str_split($string);\n  foreach ($characters as $character) {\n    if (!in_array($character,\
    \ $distinct_characters)) {\n      $distinct_characters[] = $character;\n    }\n\
    \  }\n  return count($distinct_characters);\n}\n\necho count_distinct_characters('Jerry');\n\
    echo \"\\n\";\necho count_distinct_characters('xyzXYZ');\necho \"\\n\";", "  \
    \  $count = 0;\n    $distinct_characters = array();\n    $string = strtolower($string);\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i],\
    \ $distinct_characters)) {\n            $distinct_characters[] = $string[$i];\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n\necho count_distinct_characters('xyzXYZ')\
    \ . PHP_EOL;\necho count_distinct_characters('Jerry') . PHP_EOL;", "  $char_array\
    \ = str_split($string);\n  $char_array = array_map('strtolower', $char_array);\n\
    \  $char_array = array_unique($char_array);\n  return count($char_array);\n}\n",
  "    $string = strtolower($string);\n    $characters = str_split($string);\n   \
    \ $characters = array_unique($characters);\n    $characters = array_values($characters);\n\
    \    $characters = implode($characters);\n    return strlen($characters);\n}\n\
    echo count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";", "    return count(array_unique(str_split(strtolower($string))));\n\
    }\n", "  $string = strtolower($string);\n  $characters = [];\n  for ($i = 0; $i\
    \ < strlen($string); $i++) {\n    if (!in_array($string[$i], $characters)) {\n\
    \      $characters[] = $string[$i];\n    }\n  }\n  return count($characters);\n\
    }\n", "\t$count = array();\n\t$string = strtolower($string);\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\tif (!array_key_exists($string[$i], $count))\
    \ {\n\t\t\t$count[$string[$i]] = 1;\n\t\t}\n\t}\n\treturn count($count);\n}\n\
    echo count_distinct_characters('Jerry');\necho \"\\n\";", "  $string = strtolower($string);\n\
    \  $character_count = array_count_values(str_split($string));\n  return count($character_count);\n\
    }\n", "    $string = strtolower($string);\n    $characters = str_split($string);\n\
    \    $characters = array_unique($characters);\n    return count($characters);\n\
    }\n\necho count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";\n", "    $string = strtolower($string);\n    $count = array_count_values(str_split($string));\n\
    \    $result = array_keys($count);\n    $length = count($result);\n    return\
    \ $length;\n}\n", "    return count(array_unique(str_split(strtolower($string))));\n\
    }\n\necho count_distinct_characters('xyzXYZ');\necho \"\\n\";\necho count_distinct_characters('Jerry');\n\
    echo \"\\n\";\necho count_distinct_characters('javascript');\necho \"\\n\";\n\
    echo count_distinct_characters('python');\necho \"\\n\";\necho count_distinct_characters('perl');\n\
    echo \"\\n\";\necho count_distinct_characters('php');\necho \"\\n\";\necho count_distinct_characters('java');\n\
    echo \"\\n\";\n", "    $characters = array();\n    $string = strtolower($string);\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        $characters[$string[$i]]\
    \ = 0;\n    }\n    $characters = array_keys($characters);\n    return count($characters);\n\
    }\n\necho count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";", "    $distinct_chars = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        if (in_array(strtolower($string[$i]), $distinct_chars) || in_array(strtoupper($string[$i]),\
    \ $distinct_chars))\n            continue;\n        else\n            array_push($distinct_chars,\
    \ $string[$i]);\n    }\n    return count($distinct_chars);\n}", "  return count(array_unique(str_split(strtolower($string))));\n\
    }\n\necho count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";\n", "\treturn count(array_unique(str_split(strtolower($string))));\n\
    }\n\necho
  "\treturn strlen(count_chars($string, 3));\n}\n", "    $array = str_split($string);\n\
    \    $stringLower = strtolower($string);\n    $arrayLower = str_split($stringLower);\n\
    \    $array_Lower_Count = array_count_values($arrayLower);\n    return count($array_Lower_Count);\n\
    }\nprint_r(count_distinct_characters('xyzXYZ'));", "    $char_array = str_split($string);\n\
    \    return count(array_unique($char_array));\n}\n\necho count_distinct_characters('xyzXYZ');\n\
    echo count_distinct_characters('Jerry');", "    $character_list = array();\n \
    \   for ($i = 0; $i < strlen($string); $i++) {\n        if (!isset($character_list[strtolower($string[$i])]))\
    \ {\n            $character_list[strtolower($string[$i])] = 1;\n        }\n  \
    \  }\n    return count($character_list);\n}\n\necho count_distinct_characters('xyzXYZ');\n\
    echo count_distinct_characters('Jerry');", "  $string = strtolower($string);\n\
    \  $array = str_split($string);\n  $array = array_count_values($array);\n  $count\
    \ = count($array);\n  return $count;\n}", "    // array_count_values will return\
    \ each character as key and its occurence as value\n    // and array_keys will\
    \ return all keys of the array\n    return count(array_keys(array_count_values(str_split(strtolower($string)))));\n\
    }\n\necho count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";", "    // your solution goes here\n    $string_array = str_split($string);\n\
    \    $string_array = array_map('strtolower', $string_array);\n    return count(array_unique($string_array));\n\
    }\n", "    $count = 0;\n    $length = strlen($string);\n    for ($i = 0; $i <\
    \ $length; $i++) {\n        $char = strtolower($string[$i]);\n        if (strpos($string,\
    \ $char, $i + 1) === false) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\necho count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";", "    $string=strtolower($string);\n    $array=array_unique(str_split($string));\n\
    \    $result=count($array);\n    return $result;\n}\n", "    $unique_chars = [];\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        $char = strtolower($string[$i]);\n\
    \        if (!array_key_exists($char, $unique_chars)) {\n            $unique_chars[$char]\
    \ = true;\n        }\n    }\n    return count($unique_chars);\n}\n\nassert(count_distinct_characters('xyzXYZ')\
    \ === 3);\nassert(count_distinct_characters('Jerry') === 4);\n", "    $count =\
    \ 0;\n    $characters = [];\n    for ($i = 0; $i < strlen($string); $i++) {\n\
    \        $character = strtolower($string[$i]);\n        if (!isset($characters[$character]))\
    \ {\n            $characters[$character] = 1;\n            $count++;\n       \
    \ }\n    }\n    return $count;\n}\n", "  $characters = str_split($string);\n \
    \ $lowercase_characters = array_map('strtolower', $characters);\n  $distinct_characters\
    \ = array_unique($lowercase_characters);\n  return count($distinct_characters);\n\
    }\necho count_distinct_characters('Jerry');\necho '<br>';\n", "    $stringArray\
    \ = str_split($string);\n    $stringArray = array_unique($stringArray);\n    $stringArray\
    \ = array_values($stringArray);\n    return count($stringArray);\n}\n", "    $chars\
    \ = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $chars[strtolower($string[$i])]\
    \ = 1;\n    }\n    return count($chars);\n}\n", "    $char_array = str_split($string);\n\
    \    return count(array_unique($char_array));\n}\n", "    $array = str_split($string);\n\
    \    foreach ($array as $key => $value) {\n        $array[$key] = strtolower($value);\n\
    \    }\n    $array = array_unique($array);\n    return count($array);\n}\necho\
    \ count_distinct_characters('abcABC') . PHP_EOL; // 3\necho count_distinct_characters('aBcAbC')\
    \ . PHP_EOL; // 3\necho count_distinct_characters('123123') . PHP_EOL; // 3\n\
    echo count_distinct_characters('xxxXxxxxxxXxxx') . PHP_EOL; // 3\necho count_distinct_characters('xxxxabcccc')\
    \ . PHP_EOL; // 4\necho count_distinct_characters('Hello, world!') . PHP_EOL;\
    \ // 11\necho count_distinct_characters('Hello, \u4E16\u754C\uFF01') . PHP_EOL;\
    \ // 11\n", "    $count = 0;\n    $string_array = str_split($string);\n    foreach\
    \ ($string_array as $character) {\n        if (strtolower($character) != strtoupper($character))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n", "  return\
    \ strlen(array_unique(str_split(strtolower($string))));\n}\n", "    $total = 0;\n\
    \    $chars = str_split($string);\n    $chars = array_unique($chars);\n    $total\
    \ = count($chars);\n    return $total;\n}\n", "    return count(array_unique(str_split(strtolower($string))));\n\
    }\n", "    $array = str_split($string);\n    foreach ($array as $index => $value)\
    \ {\n        $array[$index] = strtolower($value);\n    }\n    $array = array_unique($array);\n\
    \    return count($array);\n}\necho count_distinct_characters('Jerry');\necho\
    \ \"\\n\";\n", "    $string = strtolower($string);\n    $length = strlen($string);\n\
    \    $characterMap = [];\n    for ($i = 0; $i < $length; $i++) {\n        $characterMap[$string[$i]]\
    \ = 1;\n    }\n    return count($characterMap);\n}\n", "    // Initialize character\
    \ count array\n    $char_count = array();\n    // Iterate through each character\
    \ of the string\n    for ($i = 0; $i < strlen($string); $i++) {\n        // If\
    \ the character exists in the array\n        if (array_key_exists(strtolower($string[$i]),\
    \ $char_count)) {\n            // Increment the count of that character\n    \
    \        $char_count[strtolower($string[$i])] += 1;\n        } else {\n      \
    \      // Otherwise, initialize it with a count of 1\n            $char_count[strtolower($string[$i])]\
    \ = 1;\n        }\n    }\n    // Finally, return the number of unique characters\
    \ in the array\n    return count($char_count);\n}", "    return count(array_unique(str_split(strtolower($string))));\n\
    }\n", "  $string_lower = strtolower($string);\n  $characters = array();\n  for\
    \ ($i = 0; $i < strlen($string_lower); $i++) {\n    if (!in_array($string_lower[$i],\
    \ $characters)) {\n      array_push($characters, $string_lower[$i]);\n    }\n\
    \  }\n  return count($characters);\n}\n\necho count_distinct_characters('xyzXYZ')\
    \ . PHP_EOL;\necho count_distinct_characters('Jerry') . PHP_EOL;\necho count_distinct_characters('xyzXYZJerry')\
    \ . PHP_EOL;\n", "  $arrayOfCharacters = str_split($string);\n  $arrayOfDistinctCharacters\
    \ = array_unique($arrayOfCharacters);\n  $numberOfDistinctCharacters = count($arrayOfDistinctCharacters);\n\
    \  return $numberOfDistinctCharacters;\n}", "    $str = strtolower($string);\n\
    \    $str = str_split($str);\n    $str = array_unique($str);\n    return count($str);\n\
    }\n", "    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n\
    \        if (!in_array(strtolower($string[$i]), $result)) {\n            array_push($result,\
    \ strtolower($string[$i]));\n        }\n    }\n    return count($result);\n}\n\
    \necho count_distinct_characters('xyzXYZ');\necho \"\\n\";\necho count_distinct_characters('Jerry');\n\
    echo \"\\n\";", "\treturn count(array_unique(str_split(strtolower($string))));\n\
    }\n", "\t$characters = array();\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\
    \t\t$characters[strtolower($string[$i])] = true;\n\t}\n\treturn count($characters);\n\
    }\n", "\t$string = strtolower($string);\n\t$characters = str_split($string);\n\
    \t$distinct = count(array_unique($characters));\n\tprint_r($distinct);\n}\n",
  "  $array = count_chars($string, 1);\n  return count($array);\n}\n\necho count_distinct_characters('xyzXYZ')\
    \ . \"\\n\";\necho count_distinct_characters('Jerry') . \"\\n\";\n", "    $lower\
    \ = strtolower($string);\n    $charArray = str_split($lower);\n    $charArray\
    \ = array_unique($charArray);\n    return count($charArray);\n}\nprint_r(count_distinct_characters('xyzXYZ'));\n\
    print_r(count_distinct_characters('Jerry'));", "\t$characters = str_split($string);\n\
    \t$characters = array_unique($characters);\n\treturn count($characters);\n}\n\
    echo count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";\n", "\t$arr = str_split($string);\n\t$result = [];\n\tforeach ($arr\
    \ as $key => $value) {\n\t\t$result[strtolower($value)] = 1;\n\t}\n\treturn count($result);\n\
    }\n", "    $count = 0;\n    $characters = [];\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $character = strtolower($string[$i]);\n        if (!in_array($character,\
    \ $characters)) {\n            $characters[] = $character;\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "    return count(array_unique(str_split(strtolower($string))));\n\
    }\necho count_distinct_characters('xyzXYZ');", "  // your code here\n}", "\n}\n",
  "\t$lowerCase = strtolower($string);\n\t$length = strlen($lowerCase);\n\t$seen =\
    \ '';\n\t$result = 0;\n\tfor ($i = 0; $i < $length; $i++) {\n\t\tif (strpos($seen,\
    \ $lowerCase[$i]) === false) {\n\t\t\t$seen .= $lowerCase[$i];\n\t\t\t$result++;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n\necho count_distinct_characters('xyzXYZ') .\
    \ \"\\n\";\necho count_distinct_characters('Jerry') . \"\\n\";\n", "  return count(array_unique(str_split(strtolower($string))));\n\
    }\n\nvar_dump(count_distinct_characters('xyzXYZ'));\nvar_dump(count_distinct_characters('Jerry'));",
  "    $characters = array();\n    $string = strtolower($string);\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $character = $string[$i];\n        if\
    \ (array_key_exists($character, $characters)) {\n            $characters[$character]++;\n\
    \        } else {\n            $characters[$character] = 1;\n        }\n    }\n\
    \    return count($characters);\n}", "    $stringArray = str_split($string);\n\
    \    $lowercaseStringArray = array_map('strtolower', $stringArray);\n    $removeDuplicates\
    \ = array_unique($lowercaseStringArray);\n    return count($removeDuplicates);\n\
    }\n", "    $lower = strtolower($string);\n    $distinct_chars = array_unique(str_split($lower));\n\
    \    return count($distinct_chars);\n}\n", "    //  Write code here\n    $arr\
    \ = str_split($string);\n    $arrDistinct = array_unique($arr);\n    return count($arrDistinct);\n\
    }\n\necho count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";\n\necho \"=====================\" . \"\\n\";\n", "    $characters\
    \ = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (strtolower($string[$i])\
    \ == strtoupper($string[$i])) {\n            $characters[$string[$i]] = $string[$i];\n\
    \        } else {\n            $characters[strtolower($string[$i])] = strtolower($string[$i]);\n\
    \            $characters[strtoupper($string[$i])] = strtoupper($string[$i]);\n\
    \        }\n    }\n    return count($characters);\n}", "\t$character_count = 0;\n\
    \t$characters = [];\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\t$char =\
    \ $string[$i];\n\t\tif (!in_array($char, $characters)) {\n\t\t\t$characters[]\
    \ = $char;\n\t\t\t$character_count++;\n\t\t}\n\t}\n\treturn $character_count;\n\
    }\n\necho 'count_distinct_characters(\\'xyzXYZ\\') === 3: ' . (count_distinct_characters('xyzXYZ')\
    \ === 3 ? 'OK' : 'FAIL') . PHP_EOL;\necho 'count_distinct_characters(\\'Jerry\\\
    ') === 4: ' . (count_distinct_characters('Jerry') === 4 ? 'OK' : 'FAIL') . PHP_EOL;\n",
  "    $chars = str_split($string);\n    $chars_lower = array_map('strtolower', $chars);\n\
    \    $chars_unique = array_unique($chars_lower);\n    return count($chars_unique);\n\
    }\n\necho count_distinct_characters('xyzXYZ');\n", "    $arr = array_unique(str_split(strtolower($string)));\n\
    \    return count($arr);\n}\necho count_distinct_characters('Jerry');", "  $characters\
    \ = str_split($string);\n  $characters = array_map('strtolower', $characters);\n\
    \  $characters = array_unique($characters);\n  return count($characters);\n}\n\
    \necho count_distinct_characters('xyzXYZ');", "    $characters = [];\n    for\
    \ ($i = 0; $i < strlen($string); $i++) {\n        $lower = strtolower($string[$i]);\n\
    \        if (!array_key_exists($lower, $characters)) {\n            $characters[$lower]\
    \ = 1;\n        }\n    }\n    return count($characters);\n}\n\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";\n", "  $distinct = [];\n  $char = str_split($string);\n  foreach\
    \ ($char as $x) {\n    if (!in_array(strtolower($x), $distinct)) {\n      array_push($distinct,\
    \ strtolower($x));\n    }\n  }\n  return count($distinct);\n}\n", "    // first,\
    \ find all the distinct characters using ASCII codes\n    $ascii_array = array();\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        $ascii_array[$i] = ord($string[$i]);\n\
    \    }\n    $string_array = array_unique($ascii_array);\n    return count($string_array);\n\
    }\n", "  $chars = str_split($string);\n  $chars = array_unique($chars);\n  return\
    \ count($chars);\n}\necho count_distinct_characters('Jerry') . PHP_EOL;", "  \
    \  $lower = strtolower($string);\n    $count = 0;\n    for ($i = 0; $i < strlen($lower);\
    \ $i++) {\n        $exists = strpos($lower, $lower[$i], $i + 1);\n        if ($exists\
    \ === false) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    return count(array_unique(str_split(strtolower($string))));\n}\n", "\t$characters\
    \ = str_split($string);\n\t$characters = array_map('strtolower', $characters);\n\
    \t$characters = array_unique($characters);\n\treturn count($characters);\n}\n\n\
    $string = 'yoloyoyo';\n$number = count_distinct_characters($string);\necho \"\
    $number\\n\";\n", "  $result = [];\n  $len = strlen($string);\n  for ($i = 0;\
    \ $i < $len; $i++) {\n    $item = $string[$i];\n    if (!in_array($item, $result))\
    \ {\n      $result[] = $item;\n    }\n  }\n  return count($result);\n}\n", " \
    \   $string = strtolower($string);\n    $string = str_split($string);\n    return\
    \ count(array_unique($string));\n}\necho count_distinct_characters('xyzXYZ');\n\
    echo \"\\n\";\necho count_distinct_characters('Jerry');\necho \"\\n\";\n", " \
    \   $string = strtolower($string);\n    $char_array = str_split($string);\n  \
    \  $unique_char_array = array_unique($char_array);\n    return count($unique_char_array);\n\
    }\n\necho count_distinct_characters('xyzXYZ');\n", "    $lower_string = strtolower($string);\n\
    \    $characters = str_split($lower_string);\n    $characters = array_unique($characters);\n\
    \    return count($characters);\n}\n$string = 'xyzXYZ';\necho count_distinct_characters($string)\
    \ . PHP_EOL;\n$string = 'Jerry';\necho count_distinct_characters($string) . PHP_EOL;\n",
  "\t$string = strtolower($string);\n\n\t$characters = [];\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$characters[$string[$i]] = true;\n\t}\n\n\treturn count($characters);\n\
    }\n", "    $count = 0;\n    $char_dict = [];\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $curr_char = strtolower($string[$i]);\n        if (!isset($char_dict[$curr_char]))\
    \ {\n            $char_dict[$curr_char] = 1;\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n$string = \"xyzXYZ\";\necho(count_distinct_characters($string));",
  "    $string = strtolower($string);\n    $characters = str_split($string);\n   \
    \ $count = count(array_unique($characters));\n    return $count;\n}\n\necho count_distinct_characters('Jerry');",
  "  $splitString = str_split($string);\n  $count = 0;\n  foreach ($splitString as\
    \ $char) {\n    if(!isset($result[$char])) {\n      $result[$char] = $char;\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\necho count_distinct_characters('xyzXYZ');\n\
    echo \"\\n\";\necho count_distinct_characters('Jerry');\necho \"\\n\";", "   \
    \ // Write your solution here\n}", "    // your code here\n\t$string = strtolower($string);\n\
    \t$distinct = array();\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (!in_array($string[$i],\
    \ $distinct)) {\n\t\t\tarray_push($distinct, $string[$i]);\n\t\t}\n\t}\n\treturn\
    \ count($distinct);\n}\n", "\t$arr = str_split($string);\n\treturn count(array_unique($arr));\n\
    }\n", "\t$chars = str_split($string);\n\t$chars = array_map('strtolower', $chars);\n\
    \t$distinct = array_unique($chars);\n\t$distinct = array_values($distinct);\n\t\
    return count($distinct);\n}\nprint_r(count_distinct_characters('Jerry'));", "\t\
    $str = strtolower($string);\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($str);\
    \ $i++) {\n\t\tif (substr_count($str, $str[$i]) == 1) {\n\t\t\t$count += 1;\n\t\
    \t}\n\t}\n\treturn $count;\n}", "    $lowers = str_split(strtolower($string));\n\
    \    $uppers = str_split(strtoupper($string));\n    $total = array_merge($lowers,\
    \ $uppers);\n    $result = array_count_values($total);\n    $result = array_keys($result);\n\
    \    return count($result);\n}", "  $arr = str_split($string);\n  $count = 0;\n\
    \  $unique = '';\n  foreach ($arr as $c) {\n    if (strpos($unique, $c) === false)\
    \ {\n      $unique .= $c;\n      $count++;\n    }\n  }\n  return $count;\n}\n\n\
    var_dump(count_distinct_characters('abcdabcd'));\nvar_dump(count_distinct_characters('xyzXYZ'));\n\
    var_dump(count_distinct_characters('Jerry'));", "    $used = [];\n    $string\
    \ = strtolower($string);\n    for ($i = 0; $i < strlen($string); $i++) {\n   \
    \     if (!in_array($string[$i], $used)) {\n            $used[] = $string[$i];\n\
    \        }\n    }\n    return count($used);\n}\n", "    $string = strtolower($string);\n\
    \    $characters = [];\n    for ($i = 0; $i < strlen($string); $i++) {\n     \
    \   $characters[$string[$i]] = 1;\n    }\n    return count($characters);\n}\n",
  "\t$chars = array();\n\t$length = strlen($string);\n\tfor ($i = 0; $i < $length;\
    \ $i++) {\n\t\t$char = strtolower($string[$i]);\n\t\tif (!in_array($char, $chars))\
    \ {\n\t\t\t$chars[] = $char;\n\t\t}\n\t}\n\treturn count($chars);\n}\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";\n", "  $characters = str_split($string);\n  $characters = array_map(function($character)\
    \ {\n    return strtolower($character);\n  }, $characters);\n  $characters = array_unique($characters);\n\
    \  return count($characters);\n}\n", "    $chars = array();\n    $string = strtolower($string);\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        $chars[$string[$i]] =\
    \ TRUE;\n    }\n    return count($chars);\n}\n", "    $string = strtolower($string);\n\
    \    return count(array_unique(str_split($string)));\n}\n", "    $s = strtolower($string);\n\
    \    $temp = array();\n    for ($i = 0; $i < strlen($s); $i++) {\n        $temp[$s[$i]]\
    \ = true;\n    }\n    return count($temp);\n}\n", "  // Implement your solution\
    \ here\n}\n", "    $string = strtolower($string);\n    return count(array_unique(str_split($string)));\n\
    }\n\nassert(count_distinct_characters('xyzXYZ') == 3);\nassert(count_distinct_characters('Jerry')\
    \ == 4);\n", "\treturn strlen(array_unique(str_split(strtolower($string))));\n\
    }\n", "    $stringLowerCase = strtolower($string);\n    $stringUniqueCharacters\
    \ = array_unique(str_split($stringLowerCase));\n    $numOfDistinctCharacters =\
    \ count($stringUniqueCharacters);\n    return $numOfDistinctCharacters;\n}\n",
  "    // todo\n}\n", "  $char_array = str_split($string);\n  return count(array_unique($char_array));\n\
    }\n", "  $lowerString = strtolower($string);\n  $letters = str_split($lowerString);\n\
    \  $count = 0;\n  $lettersUnique = array_unique($letters);\n  return count($lettersUnique);\n\
    }", "    $characters = str_split($string);\n    $characters = array_unique($characters);\n\
    \    $characters = array_map('strtolower', $characters);\n    return count($characters);\n\
    }\n", "    $a=array();\n    $count=0;\n    $string=strtolower($string);\n    $string=str_split($string);\n\
    \    foreach($string as $c){\n        if(!in_array($c,$a)){\n            $a[]=$c;\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n", "    $string_array\
    \ = str_split($string);\n    $string_array = array_map(\"strtolower\", $string_array);\n\
    \    $string_array = array_unique($string_array);\n    return count($string_array);\n\
    }", "    return count(array_unique(str_split(strtolower($string))));\n}", "  \
    \  $string = strtolower($string);\n    return count(array_unique(str_split($string)));\n\
    }\n", "  $characters = str_split($string);\n  $characters = array_map('strtolower',\
    \ $characters);\n  $characters = array_unique($characters);\n  return count($characters);\n\
    }\n", "    // Counting the number of times each character occurs\n    $arr = array_count_values(str_split(strtolower($string)));\n\
    \    // Finding out the number of unique keys in the array\n    $count = count(array_unique($arr));\n\
    \    // Returning the number of unique values\n    return $count;\n}\n\necho count_distinct_characters('xyzXYZ')\
    \ . PHP_EOL;\necho count_distinct_characters('Jerry') . PHP_EOL;", "\t$string\
    \ = strtolower($string);\n\t$temp = array();\n\t$length = strlen($string);\n\t\
    for ($i = 0; $i < $length; $i++) {\n\t\t$temp[$string[$i]] = 1;\n\t}\n\treturn\
    \ count($temp);\n}\n\necho count_distinct_characters('xyzXYZ') . PHP_EOL;\necho\
    \ count_distinct_characters('Jerry') . PHP_EOL;", "  $string = strtolower($string);\n\
    \  return count(str_split($string));\n}\necho count_distinct_characters('xyzXYZ')\
    \ . \"\\n\";\necho count_distinct_characters('Jerry') . \"\\n\";\n", "    return\
    \ count(array_unique(str_split(strtolower($string))));\n}\n", "  return count(array_unique(str_split(strtolower($string))));\n\
    }\n", "    $array = array_unique(str_split(strtolower($string)));\n    return\
    \ count($array);\n}\n", "    $string = strtolower($string);\n    $characters =\
    \ [];\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    $characters[$string[$i]] = 1;\n    }\n    return count($characters);\n}\n",
  "    $len = strlen($string);\n    $distinct = [];\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $char = strtolower($string[$i]);\n        if (!isset($distinct[$char]))\
    \ {\n            $distinct[$char] = 1;\n        }\n    }\n    return count($distinct);\n\
    }", "  $temp = str_split($string);\n  $temp = array_unique($temp);\n  return count($temp);\n\
    }\n", "  $new_string = strtolower($string);\n  $arr = array_count_values(str_split($new_string));\n\
    \  $count = count($arr);\n  return $count;\n}\nprint_r(count_distinct_characters('xyzXYZ'));\n\
    print_r(count_distinct_characters('Jerry'));\n", "    $count = 0;\n    $length\
    \ = strlen($string);\n    $distinct = array();\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $current = strtolower($string[$i]);\n        if (!in_array($current,\
    \ $distinct)) {\n            $distinct[] = $current;\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\necho count_distinct_characters('xyzXYZ');\n\
    echo \"\\n\";\necho count_distinct_characters('Jerry');\necho \"\\n\";\n", " \
    \   return count(array_unique(str_split(strtolower($string))));\n}\n\n$a = count_distinct_characters('xyzXYZ');\n\
    var_dump($a);\n$b = count_distinct_characters('Jerry');\nvar_dump($b);", "   \
    \ $len = strlen($string);\n    if ($len === 0) {\n        return 0;\n    }\n \
    \   $characters = [];\n    for ($i = 0; $i < $len; $i++) {\n        $char = strtolower($string[$i]);\n\
    \        if (!in_array($char, $characters)) {\n            $characters[] = $char;\n\
    \        }\n    }\n    return count($characters);\n}\n\n$string = 'abcabcabcabc';\n\
    echo count_distinct_characters($string) . PHP_EOL;\n", "    $characters = str_split($string);\n\
    \    $distinct_characters = array_unique($characters);\n    return count($distinct_characters);\n\
    }", "    $characters = str_split($string);\n    $characters = array_map('strtolower',\
    \ $characters);\n    $characters = array_unique($characters);\n    return count($characters);\n\
    }\n\n$string = 'xyzXYZ';\necho \"Count of distinct characters in '{$string}' is:\
    \ \" . count_distinct_characters($string) . \"\\n\";\n\n$string = 'Jerry';\necho\
    \ \"Count of distinct characters in '{$string}' is: \" . count_distinct_characters($string)\
    \ . \"\\n\";", "    $temp = str_split($string);\n    $result = [];\n    foreach\
    \ ($temp as $val) {\n        $key = strtolower($val);\n        if (!array_key_exists($key,\
    \ $result)) {\n            $result[$key] = 0;\n        }\n    }\n    return count($result);\n\
    }\necho count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";", "    return count(array_flip(str_split(strtolower($string))));\n\
    }", "\t$map = [];\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\t$c = strtolower($string[$i]);\n\
    \t\tif (!isset($map[$c])) {\n\t\t\t$map[$c] = true;\n\t\t}\n\t}\n\treturn count($map);\n\
    }\n\necho count_distinct_characters('xyzXYZ') . \"\\n\";\necho count_distinct_characters('Jerry')\
    \ . \"\\n\";", "    $array_string = str_split($string);\n    $count = 0;\n   \
    \ $array_string = array_map('strtolower', $array_string);\n    $array_string =\
    \ array_unique($array_string);\n    foreach ($array_string as $value) {\n    \
    \    if (ctype_alpha($value)) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\n\necho count_distinct_characters('xyzXYZ');\n", "\t$string\
    \ = strtolower($string);\n\t$arr = str_split($string);\n\t$count = 0;\n\t$current_char\
    \ = $arr[0];\n\t\n\tforeach ($arr as $char) {\n\t\tif ($char != $current_char)\
    \ {\n\t\t\t$count += 1;\n\t\t\t$current_char = $char;\n\t\t}\n\t}\n\treturn $count\
    \ + 1;\n}\necho count_distinct_characters('xyzXYZ') . \"<br />\";\necho count_distinct_characters('Jerry')\
    \ . \"<br />\";\n", "    $string = strtolower($string);\n    $string = str_split($string);\n\
    \    $string = array_unique($string);\n    return count($string);\n}\necho count_distinct_characters('aBcAbC');\n\
    echo \"\\n\";", "    return count(array_unique(str_split(strtolower($string))));\n\
    }", "    $result = [];\n    $str = strtolower($string);\n    for ($i = 0; $i <\
    \ strlen($str); $i++) {\n        if (!in_array($str[$i], $result)) {\n       \
    \     $result[] = $str[$i];\n        }\n    }\n    return count($result);\n}\n",
  "    $strArr = str_split($string);\n    $charArr = array_unique($strArr);\n    return\
    \ count($charArr);\n}\necho \"count_distinct_characters('xyzXYZ') = \" . count_distinct_characters('xyzXYZ')\
    \ . \"\\n\";\necho \"count_distinct_characters('Jerry') = \" . count_distinct_characters('Jerry')\
    \ . \"\\n\";", "    $arr = [];\n    $lowStr = strtolower($string);\n    $len =\
    \ strlen($lowStr);\n    for ($i = 0; $i < $len; $i++) {\n        if (!in_array($lowStr[$i],\
    \ $arr)) {\n            $arr[] = $lowStr[$i];\n        }\n    }\n    return count($arr);\n\
    }", "  $input = str_split($string);\n  $unique = array_unique($input);\n  return\
    \ count($unique);\n}\n\necho count_distinct_characters('Jerry');", "  $string\
    \ = strtolower($string);\n  $characters = array();\n  for ($i = 0; $i < strlen($string);\
    \ $i++) {\n    if (!in_array($string[$i], $characters)) {\n      array_push($characters,\
    \ $string[$i]);\n    }\n  }\n  return count($characters);\n}\n", "\t$array = str_split($string);\n\
    \t$temp = array();\n\tforeach ($array as $c) {\n\t\t$temp[strtolower($c)] = 1;\n\
    \t}\n\treturn count($temp);\n}\n", "    return count(array_unique(str_split(strtolower($string))));\n\
    }", "    $char_list = str_split($string);\n    $char_list = array_map('strtolower',\
    \ $char_list);\n    $char_list = array_unique($char_list);\n    return count($char_list);\n\
    }\n", "\t$characters = str_split($string);\n\t$characters = array_map('strtolower',\
    \ $characters);\n\t$characters = array_unique($characters);\n\t$result = count($characters);\n\
    \techo $result;\n}\n\necho count_distinct_characters('Jerry');\necho \"\\n\";",
  "\t$alphabet = range('a', 'z');\n\t$alphabet = array_flip($alphabet);\n\t$string\
    \ = strtolower($string);\n\t$return = array();\n\tforeach (str_split($string)\
    \ as $char) {\n\t\tif (isset($alphabet[$char])) {\n\t\t\t$return[$char] = $char;\n\
    \t\t}\n\t}\n\treturn count($return);\n}\n", "    $chars = str_split($string);\n\
    \    $charCount = [];\n    foreach ($chars as $char) {\n        $char = strtolower($char);\n\
    \        if (isset($charCount[$char])) {\n            $charCount[$char]++;\n \
    \       } else {\n            $charCount[$char] = 1;\n        }\n    }\n    return\
    \ count($charCount);\n}\necho 'Exercise 1: ' . count_distinct_characters('Jerry')\
    \ . PHP_EOL;\n", "    $string_to_lower = strtolower($string);\n    $string_to_array\
    \ = str_split($string_to_lower);\n    $string_to_unique = array_unique($string_to_array);\n\
    \    $string_to_length = count($string_to_unique);\n    echo \">>> count_distinct_characters(\\\
    \"$string\\\")\\n\";\n    echo \"$string_to_length\\n\";\n}\n", "    // foreach\
    \ ($string as $char) {\n    //     echo $char;\n    // }\n}\necho count_distinct_characters('xyzXYZ');\n\
    echo \"<br>\";\necho count_distinct_characters('Jerry');\necho \"<br>\";\necho\
    \ count_distinct_characters('Jerry');\necho \"<br>\";\necho count_distinct_characters('San\
    \ Jose Sharks');\necho \"<br>\";", "    $string_to_array = str_split($string);\n\
    \    $string_to_array = array_map('strtolower', $string_to_array);\n    $array_to_set\
    \ = array_unique($string_to_array);\n    $set_to_count = count($array_to_set);\n\
    \    return $set_to_count;\n}\n", "    $string = strtolower($string);\n    $distinct\
    \ = '';\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (strpos($distinct,\
    \ $string[$i]) === false) {\n            $distinct .= $string[$i];\n        }\n\
    \    }\n    return strlen($distinct);\n}\n", "    $unique = array_unique(str_split(strtolower($string)));\n\
    \    return count($unique);\n}\n", "    $len = strlen($string);\n    $char_list\
    \ = array();\n    for ($i = 0; $i < $len; $i++) {\n        $char = $string[$i];\n\
    \        if (!isset($char_list[$char])) {\n            $char_list[$char] = TRUE;\n\
    \        }\n    }\n    return count($char_list);\n}\n", "    $string_chars = str_split($string);\n\
    \    $unique_chars = array_unique($string_chars);\n    return count($unique_chars);\n\
    }", "    $characters = str_split($string);\n    return count(array_unique($characters));\n\
    }", "    $characters = str_split($string);\n    $characters = array_map('strtolower',\
    \ $characters);\n    $characters = array_unique($characters);\n    return count($characters);\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

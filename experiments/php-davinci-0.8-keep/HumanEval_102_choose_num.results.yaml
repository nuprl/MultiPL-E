name: HumanEval_102_choose_num
language: php
results:
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t// Start with an empty list of numbers\n\t$numbers = array();\n\t\n\
    \t// Loop through the numbers in the range [x, y] inclusive\n\tfor ($i = $x; $i\
    \ <= $y; $i++) {\n\t\t// Check if the number is even\n\t\tif ($i % 2 == 0) {\n\
    \t\t\t// If so, add it to the list of numbers\n\t\t\t$numbers[] = $i;\n\t\t}\n\
    \t}\n\t\n\t// At this point, $numbers contains the list of even numbers in the\n\
    \t// range [x, y] inclusive. If there are any numbers in the list,\n\t// return\
    \ the last one.\n\tif (count($numbers) > 0) {\n\t\treturn $numbers[count($numbers)\
    \ - 1];\n\t}\n\t\n\t// If we got here, there were no even numbers in the list.\
    \ Return -1.\n\treturn -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x%2 != 0) $x++;\n  if ($y%2 != 0) $y--;\n  if ($x > $y) return\
    \ -1;\n  if ($x%2 != 0) $x++;\n  return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif($x % 2 == 0 || $y % 2 == 0) {\n\t\tfor($i = $x; $i <= $y; $i++)\
    \ {\n\t\t\tif($i % 2 == 0) {\n\t\t\t\treturn $i;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqa6z07ud.php:24\n\
    Stack trace:\n#0 /tmp/tmpqa6z07ud.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpqa6z07ud.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t$z = -1;\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 == 0) {\n\
    \t\t\t$z = $i;\n\t\t}\n\t}\n\treturn $z;\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  \n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0) {\n     \
    \ return $i;\n    }\n  }\n  return -1;\n}\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0mhfqa2.php:22\n\
    Stack trace:\n#0 /tmp/tmpu0mhfqa2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpu0mhfqa2.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here!\n    $i = $x;\n    while ($i <= $y) {\n\
    \        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n\
    \    }\n    return -1;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn2bfsq47.php:24\n\
    Stack trace:\n#0 /tmp/tmpn2bfsq47.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpn2bfsq47.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $smaller = $x < $y ? $x : $y;\n    $bigger = $x > $y ? $x : $y;\n\
    \    for ($i = $bigger; $i >= $smaller; $i--) {\n        if ($i % 2 == 0) {\n\
    \            return $i;\n        }\n    }\n    return -1;\n}\n\n$result_choose_num\
    \ = choose_num(12, 15);\necho \"choose_num(12, 15) = \" . $result_choose_num .\
    \ \"<br/>\";\n$result_choose_num = choose_num(13, 12);\necho \"choose_num(13,\
    \ 12) = \" . $result_choose_num . \"<br/>\";\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "choose_num(12, 15) = 14<br/>choose_num(13, 12) = 12<br/>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmplj4frq8i.php:30\nStack trace:\n\
    #0 /tmp/tmplj4frq8i.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplj4frq8i.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x > $y) {\n    return -1;\n  }\n  if ($x % 2 == 0) {\n    return\
    \ $x;\n  }\n  return choose_num($x + 1, $y);\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfezhcvlb.php:23\n\
    Stack trace:\n#0 /tmp/tmpfezhcvlb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfezhcvlb.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $max = -1;\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0)\
    \ {\n      $max = $i;\n    }\n  }\n  return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 != 0) {\n        $x++;\n    }\n    if ($y % 2 != 0) {\n\
    \        $y--;\n    }\n    if ($x <= $y) {\n        return $y;\n    } else {\n\
    \        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $max_even = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if\
    \ ($i % 2 == 0 && $i > $max_even) {\n            $max_even = $i;\n        }\n\
    \    }\n    return $max_even;\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         return $i;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0w2bh2g.php:22\n\
    Stack trace:\n#0 /tmp/tmpv0w2bh2g.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv0w2bh2g.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $max = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i %\
    \ 2 == 0) {\n            if ($i > $max) {\n                $max = $i;\n      \
    \      }\n        }\n    }\n    if ($max == 0) {\n        return -1;\n    } else\
    \ {\n        return $max;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d4rh4mj.php:16\n\
    Stack trace:\n#0 /tmp/tmp8d4rh4mj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8d4rh4mj.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw35jpjqe.php:17\n\
    Stack trace:\n#0 /tmp/tmpw35jpjqe.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpw35jpjqe.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $choose_num = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if\
    \ ($i % 2 == 0) {\n            $choose_num = $i;\n        }\n    }\n    return\
    \ $choose_num;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x == $y) {\n    return -1;\n  }\n  else if ($x > $y) {\n    $temp\
    \ = $x;\n    $x = $y;\n    $y = $temp;\n  }\n  if ($x % 2 == 0) {\n    return\
    \ $x;\n  }\n  else {\n    return $x + 1;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_96xxvho.php:30\n\
    Stack trace:\n#0 /tmp/tmp_96xxvho.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_96xxvho.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h0euh7u.php:16\n\
    Stack trace:\n#0 /tmp/tmp5h0euh7u.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5h0euh7u.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kc5qlq2.php:17\n\
    Stack trace:\n#0 /tmp/tmp8kc5qlq2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8kc5qlq2.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $min = $x;\n    $max = $y;\n    $max_even = 0;\n    if ($x > $y)\
    \ {\n        $min = $y;\n        $max = $x;\n    }\n    for ($i = $min; $i <=\
    \ $max; $i++) {\n        if ($i % 2 == 0) {\n            $max_even = $i;\n   \
    \     }\n    }\n    if ($max_even != 0) {\n        return $max_even;\n    } else\
    \ {\n        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqw_khddt.php:34\n\
    Stack trace:\n#0 /tmp/tmpqw_khddt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpqw_khddt.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_gcxrgj.php:15\n\
    Stack trace:\n#0 /tmp/tmpd_gcxrgj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpd_gcxrgj.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // write your code here...\n  // if $x is greater than $y, return -1\n\
    \  if ($x > $y) {\n    return -1;\n  }\n  // set $num to $x\n  $num = $x;\n  //\
    \ loop from $x to $y\n  for ($i = $x; $i <= $y; $i++) {\n    // if $i is even\
    \ and it is greater than $num\n    if ($i % 2 == 0 && $i > $num) {\n      // set\
    \ $num to $i\n      $num = $i;\n    }\n  }\n  // return $num\n  return $num;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppewqduln.php:39\n\
    Stack trace:\n#0 /tmp/tmppewqduln.php(43): test()\n#1 {main}\n  thrown in /tmp/tmppewqduln.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\t$first_num = $x;\n\t} else {\n\t\t$first_num\
    \ = $x + 1;\n\t}\n\tif ($y % 2 == 0) {\n\t\t$last_num = $y;\n\t} else {\n\t\t\
    $last_num = $y - 1;\n\t}\n\tif ($first_num > $last_num) {\n\t\treturn -1;\n\t\
    } else {\n\t\treturn $last_num;\n\t}\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $chosen = 0;\n    // The range of numbers that the function needs\
    \ to consider is\n    // $x .. $y.\n    // Loop through the numbers in that range.\n\
    \    for ($i = $x; $i <= $y; $i++) {\n        // If $i is even, and $i is bigger\
    \ than $chosen, then make $i\n        // the chosen number.\n        if ($i %\
    \ 2 == 0 && $i > $chosen) {\n            $chosen = $i;\n        }\n    }\n   \
    \ // If $chosen is 0, then $x .. $y contains no even numbers. Return -1.\n   \
    \ if ($chosen == 0) {\n        return -1;\n    }\n    // Otherwise, return $chosen.\n\
    \    return $chosen;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n   $i = 0;\n   $flag = true;\n   if($x%2 == 0)\n   {\n       $i = $x;\n\
    \   }\n   else\n   {\n       $i = $x + 1;\n   }\n   while($i <= $y)\n   {\n  \
    \    if($i%2 == 0)\n      {\n         $flag = false;\n         break;\n      }\n\
    \      $i++;\n   }\n   if($flag)\n   {\n      return -1;\n   }\n   else\n   {\n\
    \      return $i;\n   }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_c4_raf.php:43\n\
    Stack trace:\n#0 /tmp/tmp5_c4_raf.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp5_c4_raf.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         return $i;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwaoq2mz4.php:22\n\
    Stack trace:\n#0 /tmp/tmpwaoq2mz4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwaoq2mz4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while\
    \ ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n\
    \        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnh541tg.php:27\n\
    Stack trace:\n#0 /tmp/tmpfnh541tg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfnh541tg.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\t$current = $x;\n\t} else {\n\t\t$current =\
    \ $x + 1;\n\t}\n\twhile ($current <= $y) {\n\t\tif ($current % 2 == 0) {\n\t\t\
    \treturn $current;\n\t\t}\n\t\t$current = $current + 1;\n\t}\n\treturn -1;\n}\n\
    \nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7xf4abr.php:28\n\
    Stack trace:\n#0 /tmp/tmpe7xf4abr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe7xf4abr.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Fill in this function and return the appropriate value\n}\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyso8m2tk.php:16\n\
    Stack trace:\n#0 /tmp/tmpyso8m2tk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyso8m2tk.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // your code here\n    $evn = [];\n    if($x % 2 == 0) {\n      \
    \  $evn[$x] = $x;\n    }\n    if($y % 2 == 0) {\n        $evn[$y] = $y;\n    }\n\
    \    krsort($evn);\n    return count($evn) ? $evn[0] : -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeak6bf3f.php:26\n\
    Stack trace:\n#0 /tmp/tmpeak6bf3f.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpeak6bf3f.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n\treturn -1;\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkegfvdqo.php:21\n\
    Stack trace:\n#0 /tmp/tmpkegfvdqo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkegfvdqo.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $range = range($x, $y);\n  foreach ($range as $number) {\n    if ($number\
    \ % 2 == 0) {\n      return $number;\n    }\n  }\n  return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffragcpd.php:23\n\
    Stack trace:\n#0 /tmp/tmpffragcpd.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpffragcpd.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t$num = 0;\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 == 0)\
    \ {\n\t\t\t$num = $i;\n\t\t}\n\t}\n\tif ($num == 0) {\n\t\treturn -1;\n\t} else\
    \ {\n\t\treturn $num;\n\t}\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Write your code here\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1io9ves.php:17\n\
    Stack trace:\n#0 /tmp/tmpx1io9ves.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx1io9ves.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Your solution here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dnyhyok.php:16\n\
    Stack trace:\n#0 /tmp/tmp3dnyhyok.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3dnyhyok.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $smallest = $x < $y ? $x : $y;\n  $biggest = $x > $y ? $x : $y;\n \
    \ for ($i = $biggest; $i >= $smallest; $i--) {\n    if ($i % 2 == 0) {\n     \
    \ return $i;\n    }\n  }\n  return -1;\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkorn6cvw.php:25\n\
    Stack trace:\n#0 /tmp/tmpkorn6cvw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkorn6cvw.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t// Write your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpws4sk73_.php:17\n\
    Stack trace:\n#0 /tmp/tmpws4sk73_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpws4sk73_.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x%2 != 0) {\n\t\t$x = $x + 1;\n\t}\n\tif ($y%2 != 0) {\n\t\t$y\
    \ = $y - 1;\n\t}\n\t\n\tif ($x == $y) {\n\t\treturn $x;\n\t}\n\t\n\tif ($x > $y)\
    \ {\n\t\treturn -1;\n\t}\n\t\n\treturn choose_num($x+2, $y);\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t$min_num = min($x, $y);\n\t$max_num = max($x, $y);\n\t$result = -1;\n\
    \tfor ($i = $min_num; $i <= $max_num; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t\
    $result = $i;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5zg8bcgx.php:26\n\
    Stack trace:\n#0 /tmp/tmp5zg8bcgx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5zg8bcgx.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $x = (int)$x;\n    $y = (int)$y;\n    if($x%2 != 0) $x++;\n    if($y%2\
    \ != 0) $y--;\n    if($x > $y) return -1;\n    else return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpam3yfkkz.php:15\n\
    Stack trace:\n#0 /tmp/tmpam3yfkkz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpam3yfkkz.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x < 0 || $y < 0) {\n    return -1;\n  }\n\n  $start = max($x,\
    \ $y);\n  $end = min($x, $y);\n\n  while ($start >= $end) {\n    if ($start %\
    \ 2 == 0) {\n      return $start;\n    }\n    $start--;\n  }\n\n  return -1;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpge9rptiy.php:32\n\
    Stack trace:\n#0 /tmp/tmpge9rptiy.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpge9rptiy.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Enter your code here.\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpix2993d1.php:16\n\
    Stack trace:\n#0 /tmp/tmpix2993d1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpix2993d1.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $biggest_even = -1;\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i\
    \ % 2 == 0) {\n      $biggest_even = $i;\n    }\n  }\n  return $biggest_even;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if($x > $y) {\n        return -1;\n    } else {\n        for($i =\
    \ $y; $i >= $x; $i--) {\n            if($i % 2 == 0) {\n                return\
    \ $i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 != 0) {\n    $x = $x + 1;\n  }\n  if ($y % 2 != 0) {\n \
    \   $y = $y - 1;\n  }\n  if ($x <= $y) {\n    return $y;\n  } else {\n    return\
    \ -1;\n  }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: your code here\n    if ($x % 2 == 0 && $y % 2 == 0){\n \
    \   \treturn $y;\n    } elseif ($x % 2 == 0 && $y % 2 == 1){\n    \treturn $x;\n\
    \    } elseif ($x % 2 == 1 && $y % 2 == 0){\n    \treturn $y;\n    } elseif ($x\
    \ % 2 == 1 && $y % 2 == 1){\n    \treturn -1;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsfzlps4g.php:26\n\
    Stack trace:\n#0 /tmp/tmpsfzlps4g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsfzlps4g.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3l9daq7n.php:17\n\
    Stack trace:\n#0 /tmp/tmp3l9daq7n.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3l9daq7n.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $z = max($x, $y);\n    $result = $z % 2 ? $z - 1 : $z;\n    return\
    \ ($result >= $x) ? $result : -1;\n}\n\nif (!empty($_POST['x']) && !empty($_POST['y']))\
    \ {\n    $x = $_POST['x'];\n    $y = $_POST['y'];\n    $result = choose_num($x,\
    \ $y);\n    echo \"The result of choose_num($x, $y) is $result\";\n} else {\n\
    \    echo \"Please, enter two positive numbers\";\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Please, enter two positive numbers\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjsguqw6o.php:30\nStack trace:\n#0 /tmp/tmpjsguqw6o.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjsguqw6o.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $big = max($x, $y);\n    $small = min($x, $y);\n    for ($i = $big;\
    \ $i >= $small; $i--) {\n        if ($i % 2 == 0) {\n            return $i;\n\
    \        }\n    }\n    return -1;\n}\n\necho choose_num(12, 15) . \"\\n\";\necho\
    \ choose_num(13, 12) . \"\\n\";\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsllz1edh.php:27\n\
    Stack trace:\n#0 /tmp/tmpsllz1edh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsllz1edh.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while\
    \ ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n\
    \        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5lmc7372.php:27\n\
    Stack trace:\n#0 /tmp/tmp5lmc7372.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5lmc7372.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while\
    \ ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n\
    \        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz20r_p6b.php:27\n\
    Stack trace:\n#0 /tmp/tmpz20r_p6b.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz20r_p6b.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0 && $y % 2 == 0) {\n        return $y;\n    } elseif\
    \ ($x % 2 == 0 && $y % 2 != 0) {\n        return $x;\n    } elseif ($x % 2 !=\
    \ 0 && $y % 2 == 0) {\n        return $y;\n    } else {\n        return -1;\n\
    \    }\n}\n\necho choose_num(12, 15);\necho \"\\n\";\necho choose_num(13, 12);\n\
    echo \"\\n\";\necho choose_num(13, 14);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "12\n12\n14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyoqoxfir.php:31\n\
    Stack trace:\n#0 /tmp/tmpyoqoxfir.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyoqoxfir.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x > $y) return -1;\n  for ($i = $y; $i >= $x; $i--) {\n    if\
    \ ($i % 2 == 0) return $i;\n  }\n  return -1;\n}\n\n$x = 12;\n$y = 15;\n$result\
    \ = choose_num($x, $y);\nprint(\"The biggest even number from $x to $y is $result.\\\
    n\");\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "The biggest even number from 12 to 15 is 14.\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n    $largest=0;\n    $even=0;\n    $pos=$x+1;\n\
    \    if($y<=$x){\n        return -1;\n    }\n    else{\n        while($pos<=$y){\n\
    \            if($pos%2==0){\n                $even=$pos;\n                $pos=$y+1;\n\
    \            }\n            else{\n                $pos=$pos+1;\n            }\n\
    \        }\n        return $even;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7l6e7pd.php:36\n\
    Stack trace:\n#0 /tmp/tmpk7l6e7pd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpk7l6e7pd.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpftn6xjzn.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrt96q1e.php:17\n\
    Stack trace:\n#0 /tmp/tmpnrt96q1e.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnrt96q1e.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         return $i;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0987htid.php:22\n\
    Stack trace:\n#0 /tmp/tmp0987htid.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0987htid.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6k6w_oh.php:16\n\
    Stack trace:\n#0 /tmp/tmps6k6w_oh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmps6k6w_oh.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  \n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp515hj1e0.php:17\n\
    Stack trace:\n#0 /tmp/tmp515hj1e0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp515hj1e0.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $max_even = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if\
    \ ($i % 2 == 0) {\n            $max_even = $i;\n        }\n    }\n    return $max_even;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif($x > $y) {\n\t\treturn -1;\n\t}\n\t$i = 0;\n\t$result = -1;\n\t\
    while($i < $y) {\n\t\tif(($i % 2) == 0) {\n\t\t\t$result = $i;\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn $result;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2zf9xw2o.php:29\n\
    Stack trace:\n#0 /tmp/tmp2zf9xw2o.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2zf9xw2o.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $max_even = -1;\n    if ($x > $y) {\n        $tmp = $x;\n       \
    \ $x = $y;\n        $y = $tmp;\n    }\n    for ($i = $x; $i <= $y; $i++) {\n \
    \       if ($i % 2 == 0) {\n            $max_even = $i;\n        }\n    }\n  \
    \  return $max_even;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzzpppe4.php:29\n\
    Stack trace:\n#0 /tmp/tmpzzzpppe4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzzzpppe4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 != 0) {\n    $x = $x + 1;\n  }\n  if ($y % 2 != 0) {\n \
    \   $y = $y - 1;\n  }\n  if ($x > $y) {\n    return -1;\n  }\n  return $y;\n}\n\
    \nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t$result = -1;\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 ==\
    \ 0) {\n\t\t\t$result = $i;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho choose_num(12,\
    \ 15); // 14\necho \"<br>\";\necho choose_num(13, 12); // -1\necho \"<br>\";\n\
    echo choose_num(12, 12); // 12\necho \"<br>\";\necho choose_num(12, 18); // 18\n\
    echo \"<br>\";\necho choose_num(11, 18); // -1\necho \"<br>\";\necho choose_num(11,\
    \ 19); // 18\necho \"<br>\";\necho choose_num(12, 32); // 32\necho \"<br>\";\n\
    echo choose_num(12, 33); // 32\necho \"<br>\";\necho choose_num(12, 34); // 34\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>-1<br>12<br>18<br>18<br>18<br>32<br>32<br>34<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE GOES HERE\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpceui2wze.php:17\n\
    Stack trace:\n#0 /tmp/tmpceui2wze.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpceui2wze.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif($x > $y) {\n\t\treturn -1;\n\t}\n\telse if($x == $y) {\n\t\tif($x\
    \ % 2 == 0) {\n\t\t\treturn $x;\n\t\t}\n\t\telse {\n\t\t\treturn -1;\n\t\t}\n\t\
    }\n\telse {\n\t\tif($x % 2 == 0) {\n\t\t\treturn $x;\n\t\t}\n\t\telse {\n\t\t\t\
    return choose_num($x + 1, $y);\n\t\t}\n\t}\n}\n\necho choose_num(12,15);\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7fo7_wcl.php:36\n\
    Stack trace:\n#0 /tmp/tmp7fo7_wcl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp7fo7_wcl.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // 1. Write code here.\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv41jfu5n.php:16\n\
    Stack trace:\n#0 /tmp/tmpv41jfu5n.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpv41jfu5n.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here...\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcwm1h5y.php:16\n\
    Stack trace:\n#0 /tmp/tmptcwm1h5y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptcwm1h5y.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $result = -1;\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 ==\
    \ 0) {\n      $result = $i;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0){\n\t\treturn $x;\n\t} else {\n\t\tif ($x+1 <= $y){\n\
    \t\t\treturn $x+1;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwllgfr5a.php:25\n\
    Stack trace:\n#0 /tmp/tmpwllgfr5a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwllgfr5a.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn max($x, $y);\n\t} else {\n\t\tif ($y\
    \ % 2 == 0) {\n\t\t\treturn $y;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpywnhwhfz.php:25\n\
    Stack trace:\n#0 /tmp/tmpywnhwhfz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpywnhwhfz.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if($x % 2 == 0){\n        return $x;\n    }\n    elseif($x + 1 <=\
    \ $y){\n        return $x + 1;\n    }\n    else{\n        return -1;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfioib0g.php:25\n\
    Stack trace:\n#0 /tmp/tmpqfioib0g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqfioib0g.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $max = -1;\n    if($x>$y) {\n        return -1;\n    } else if ($x\
    \ % 2 != 0) {\n        $x++;\n    }\n    for($i = $x; $i <= $y; $i += 2) {\n \
    \       if($i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t// Insert code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr1huc7k.php:17\n\
    Stack trace:\n#0 /tmp/tmpwr1huc7k.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwr1huc7k.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    for ($i = $y; $i >=\
    \ $x; $i--) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n\
    \    }\n    return -1;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t$arr = array();\n\tif($x > $y) {\n\t\t$temp = $x;\n\t\t$x = $y;\n\t\
    \t$y = $temp;\n\t}\n\tfor($i = $x; $i <= $y; $i++) {\n\t\tif($i % 2 == 0) {\n\t\
    \t\tarray_push($arr, $i);\n\t\t}\n\t}\n\tif(empty($arr)) {\n\t\t$result = -1;\n\
    \t}\n\telse {\n\t\t$result = max($arr);\n\t}\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpie67j60u.php:35\n\
    Stack trace:\n#0 /tmp/tmpie67j60u.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpie67j60u.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\n}\n\nif (choose_num(12, 15) == 14) {\n    echo \"Test 1 passed!<br\
    \ />\";\n} else {\n    echo \"Test 1 failed.<br />\";\n}\n\nif (choose_num(13,\
    \ 12) == -1) {\n    echo \"Test 2 passed!<br />\";\n} else {\n    echo \"Test\
    \ 2 failed.<br />\";\n}\n\nif (choose_num(14, 14) == 14) {\n    echo \"Test 3\
    \ passed!<br />\";\n} else {\n    echo \"Test 3 failed.<br />\";\n}\n\nif (choose_num(15,\
    \ 14) == -1) {\n    echo \"Test 4 passed!<br />\";\n} else {\n    echo \"Test\
    \ 4 failed.<br />\";\n}\n\nif (choose_num(6, 9) == 8) {\n    echo \"Test 5 passed!<br\
    \ />\";\n} else {\n    echo \"Test 5 failed.<br />\";\n}\n\nif (choose_num(6,\
    \ 10) == 8) {\n    echo \"Test 6 passed!<br />\";\n} else {\n    echo \"Test 6\
    \ failed.<br />\";\n}\n\nif (choose_num(4, 6) == 4) {\n    echo \"Test 7 passed!<br\
    \ />\";\n} else {\n    echo \"Test 7 failed.<br />\";\n}\n\nif (choose_num(4,\
    \ 8) == 4) {\n    echo \"Test 8 passed!<br />\";\n} else {\n    echo \"Test 8\
    \ failed.<br />\";\n}\n\nif (choose_num(4, 4) == 4) {\n    echo \"Test 9 passed!<br\
    \ />\";\n} else {\n    echo \"Test 9 failed.<br />\";\n}\n\nif (choose_num(8,\
    \ 4) == -1) {\n    echo \"Test 10 passed!<br />\";\n} else {\n    echo \"Test\
    \ 10 failed.<br />\";\n}\n\nif (choose_num(1, 2) == -1) {\n    echo \"Test 11\
    \ passed!<br />\";\n} else {\n    echo \"Test 11 failed.<br />\";\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnvk4pjna.php on line 92\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $result = -1;\n  // Implement your solution here.\n  if ($x % 2 ==\
    \ 0) {\n    $result = $x;\n  } else {\n    $result = $x + 1;\n  }\n  for ($i =\
    \ $result; $i <= $y; $i = $i + 2) {\n    $result = $i;\n  }\n  if ($result > $y)\
    \ {\n    $result = -1;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    for ($i = $y; $i >=\
    \ $x; $i--) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n\
    \    }\n    return -1;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv710z6w7.php:17\n\
    Stack trace:\n#0 /tmp/tmpv710z6w7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv710z6w7.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $num = -1;\n  // ...\n  if($x%2!=0){\n  \t$x = $x+1;\n  }\n  if($y%2!=0){\n\
    \  \t$y = $y-1;\n  }\n  if($x>$y){\n  \t$num = -1;\n  }else{\n  \t$num = $y;\n\
    \  }\n  return $num;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_8pbe1h.php:16\n\
    Stack trace:\n#0 /tmp/tmpj_8pbe1h.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj_8pbe1h.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here.\n}\n\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp98_1_kf3.php:17\n\
    Stack trace:\n#0 /tmp/tmp98_1_kf3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp98_1_kf3.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t// return -1;\n\tif ($x > $y) {\n\t\treturn -1;\n\t}\n\tif ($x % 2\
    \ == 0) {\n\t\treturn $x;\n\t} else {\n\t\treturn $x + 1;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8olahb6g.php:24\n\
    Stack trace:\n#0 /tmp/tmp8olahb6g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8olahb6g.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $result = -1;\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 ==\
    \ 0) {\n      $result = $i;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0) return $i;\n\
    \  }\n  return -1;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xemzq8q.php:19\n\
    Stack trace:\n#0 /tmp/tmp2xemzq8q.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2xemzq8q.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif($x > $y) {\n\t\t$tmp = $x;\n\t\t$x = $y;\n\t\t$y = $tmp;\n\t}\n\t\
    while($x <= $y) {\n\t\tif($x % 2 == 0) {\n\t\t\treturn $x;\n\t\t}\n\t\t$x++;\n\
    \t}\n\treturn -1;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7iqpqv5h.php:27\n\
    Stack trace:\n#0 /tmp/tmp7iqpqv5h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7iqpqv5h.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fix this function!\n    return -1;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiajm96sj.php:17\n\
    Stack trace:\n#0 /tmp/tmpiajm96sj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpiajm96sj.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 == 0) {\n    return $x;\n  }\n  else if ($x % 2 == 1) {\n\
    \    if ($x + 1 == $y) {\n      return -1;\n    }\n    else {\n      return $x\
    \ + 1;\n    }\n  }\n}\n\n$x = 14;\n$y = 14;\necho choose_num($x, $y);\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuf84pumx.php:30\n\
    Stack trace:\n#0 /tmp/tmpuf84pumx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpuf84pumx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x % 2 == 0) {\n\
    \        return $x;\n    }\n    return choose_num($x + 1, $y);\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5y_uheja.php:23\n\
    Stack trace:\n#0 /tmp/tmp5y_uheja.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5y_uheja.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else {\n\t\t$x++;\n\t\tif ($x\
    \ > $y) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn $x;\n\t\t}\n\t}\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1k8e2vep.php:26\n\
    Stack trace:\n#0 /tmp/tmp1k8e2vep.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1k8e2vep.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Get the maximum of $x and $y\n    $max = $x > $y ? $x : $y;\n\
    \    // Get the minimum of $x and $y\n    $min = $x < $y ? $x : $y;\n    // First,\
    \ we check if the max is even. If it is, then we've found the\n    // biggest\
    \ even number. If not, we'll loop until we find one.\n    // We start the loop\
    \ at the max, and make sure the number is less than\n    // or equal to the max\
    \ and greater than or equal to the min.\n    for ($i = $max; $i <= $max && $i\
    \ >= $min; $i--) {\n        // If $i is even, then we're done.\n        if ($i\
    \ % 2 == 0) {\n            return $i;\n        }\n    }\n    // If we made it\
    \ through the loop, then there's no even number.\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4pdfie9k.php:33\n\
    Stack trace:\n#0 /tmp/tmp4pdfie9k.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4pdfie9k.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        return -1;\n    } else if ($x % 2 === 0)\
    \ {\n        return $x;\n    } else {\n        return choose_num($x + 1, $y);\n\
    \    }\n}\n\necho choose_num(12, 15) . \"\\n\";\necho choose_num(13, 12) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "12\n-1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbq6ebflr.php:25\n\
    Stack trace:\n#0 /tmp/tmpbq6ebflr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbq6ebflr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $max_even = -1;\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2\
    \ == 0) {\n      $max_even = $i;\n    }\n  }\n  return $max_even;\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $range = range($x, $y);\n    $max = -1;\n    foreach ($range as $num)\
    \ {\n        if ($num % 2 == 0) {\n            if ($num > $max) {\n          \
    \      $max = $num;\n            }\n        }\n    }\n    return $max;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslopw0tk.php:26\n\
    Stack trace:\n#0 /tmp/tmpslopw0tk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpslopw0tk.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  return max(max(range($x, $y, 2)), 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: range(): step exceeds the specified range in /tmp/tmpphi1_wtn.php\
    \ on line 9\n\nWarning: max(): When only one parameter is given, it must be an\
    \ array in /tmp/tmpphi1_wtn.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpphi1_wtn.php:18\nStack trace:\n#0 /tmp/tmpphi1_wtn.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpphi1_wtn.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 != 0) {\n\t\t$x = $x + 1;\n\t}\n\tif ($y % 2 != 0) {\n\t\
    \t$y = $y - 1;\n\t}\n\tif ($x > $y) {\n\t\treturn -1;\n\t}\n\telse {\n\t\treturn\
    \ $y;\n\t}\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t$x % 2 != 0 ? $x += 1 : $x;\n\t$y % 2 != 0 ? $y -= 1 : $y;\n\tif ($x\
    \ == $y) {\n\t\treturn $x;\n\t} else if ($x == $y + 2) {\n\t\treturn -1;\n\t}\
    \ else {\n\t\treturn choose_num($x + 2, $y);\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 262144 bytes) in /tmp/tmpepl6t5ti.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t}\n\telse {\n\t\treturn choose_num($x+1,\
    \ $y);\n\t}\n}\n\n$x = 6;\n$y = 8;\necho choose_num($x, $y);\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl5zcged.php:26\n\
    Stack trace:\n#0 /tmp/tmpyl5zcged.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyl5zcged.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\n\nchoose_num(12, 15);\nchoose_num(13, 12);\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmudgl86_.php:19\n\
    Stack trace:\n#0 /tmp/tmpmudgl86_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmudgl86_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE GOES HERE\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqw1iru1.php:17\n\
    Stack trace:\n#0 /tmp/tmpzqw1iru1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzqw1iru1.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n\
    }\n\necho choose_num(12, 15) . \"<br>\";\necho choose_num(13, 12) . \"<br>\";\n\
    echo choose_num(12, 14) . \"<br>\";\necho choose_num(15, 12) . \"<br>\";\necho\
    \ choose_num(13, 13) . \"<br>\";\necho choose_num(12, 12) . \"<br>\";\necho choose_num(10,\
    \ 10) . \"<br>\";\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>-1<br>14<br>-1<br>-1<br>12<br>10<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x > $y) {\n    return -1;\n  } else {\n    for ($i = $x; $i <=\
    \ $y; $i++) {\n      if ($i % 2 == 0) {\n        return $i;\n      }\n    }\n\
    \    return -1;\n  }\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptl88ijqc.php:25\n\
    Stack trace:\n#0 /tmp/tmptl88ijqc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptl88ijqc.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here.\n    $max = -1;\n    if ($x > $y) {\n        return\
    \ -1;\n    } else {\n        for ($i = $x; $i <= $y; $i++) {\n            if ($i\
    \ % 2 == 0) {\n                if ($i > $max) {\n                    $max = $i;\n\
    \                }\n            }\n        }\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // If $x is even and $y is even and $x is less than $y, return $y.\n\
    \    if ($x % 2 == 0 && $y % 2 == 0 && $x < $y) {\n        return $y;\n    }\n\
    \    // If $x is even and $y is even and $x is greater than $y, return $x.\n \
    \   if ($x % 2 == 0 && $y % 2 == 0 && $x > $y) {\n        return $x;\n    }\n\
    \    // If $x is odd and $y is odd, return -1.\n    if ($x % 2 == 1 && $y % 2\
    \ == 1) {\n        return -1;\n    }\n    // If $x is even and $y is odd, return\
    \ $x.\n    if ($x % 2 == 0 && $y % 2 == 1) {\n        return $x;\n    }\n    //\
    \ If $x is odd and $y is even, return $y.\n    if ($x % 2 == 1 && $y % 2 == 0)\
    \ {\n        return $y;\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaqbhwgk.php:35\n\
    Stack trace:\n#0 /tmp/tmpaaqbhwgk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpaaqbhwgk.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x <= $y) {\n    if ($x % 2 == 0) {\n      return $x;\n    } else\
    \ {\n      return choose_num($x + 1, $y);\n    }\n  } else {\n    return -1;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxn1m9qvi.php:24\n\
    Stack trace:\n#0 /tmp/tmpxn1m9qvi.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxn1m9qvi.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $maxeven = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0 && $i > $maxeven) {\n            $maxeven = $i;\n        }\n    }\n\
    \    return $maxeven;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        if ($y % 2 == 0) {\n            return\
    \ max($x, $y);\n        } else {\n            return $y - 1;\n        }\n    }\
    \ else {\n        if ($y % 2 == 0) {\n            return $y;\n        } else {\n\
    \            if ($x == $y) {\n                return -1;\n            } else {\n\
    \                return $y - 2;\n            }\n        }\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdlx0su47.php:33\n\
    Stack trace:\n#0 /tmp/tmpdlx0su47.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdlx0su47.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 !== 0 && $y % 2 === 0) {\n        return $y;\n    } else\
    \ if ($x % 2 === 0 && $y % 2 !== 0) {\n        return $x;\n    } else if ($x %\
    \ 2 === 0 && $y % 2 === 0) {\n        if ($x < $y) {\n            return $y;\n\
    \        } else {\n            return $x;\n        }\n    } else {\n        return\
    \ -1;\n    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcko4_g_.php:29\n\
    Stack trace:\n#0 /tmp/tmpfcko4_g_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfcko4_g_.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x > $y) {\n\t\treturn -1;\n\t}\n\tif ($x == $y) {\n\t\tif ($x\
    \ % 2 == 0) {\n\t\t\treturn $x;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\t\
    if ($x % 2 == 0) {\n\t\treturn $x;\n\t} else {\n\t\treturn choose_num($x + 1,\
    \ $y);\n\t}\n}\necho choose_num(12, 15) . \"\\n\";\necho choose_num(13, 12) .\
    \ \"\\n\";\necho choose_num(2, 3) . \"\\n\";\necho choose_num(5, 6) . \"\\n\"\
    ;\necho choose_num(5, 5) . \"\\n\";\necho choose_num(6, 5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "12\n-1\n2\n6\n-1\n-1\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmph9hifyxs.php:36\nStack trace:\n#0 /tmp/tmph9hifyxs.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmph9hifyxs.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t// Add code here\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2\
    \ == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgasem995.php:23\n\
    Stack trace:\n#0 /tmp/tmpgasem995.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgasem995.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $solution = 0;\n  if ($x % 2 != 0) {\n    if ($y % 2 != 0) {\n    \
    \  return -1;\n    } else {\n      $solution = $y;\n    }\n  } else {\n    if\
    \ ($y % 2 != 0) {\n      $solution = $x;\n    } else {\n      if ($x > $y) {\n\
    \        $solution = $x;\n      } else {\n        $solution = $y;\n      }\n \
    \   }\n  }\n  return $solution;\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxz6ctjg.php:35\n\
    Stack trace:\n#0 /tmp/tmplxz6ctjg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplxz6ctjg.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $z = -1;\n  for ($i = $x; $i <= $y; $i++) {\n    if (($i % 2) == 0)\
    \ {\n      $z = $i;\n    }\n  }\n  return $z;\n}\necho choose_num(12, 15) . \"\
    \\n\";\necho choose_num(13, 12) . \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n-1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7l14igp9.php:17\n\
    Stack trace:\n#0 /tmp/tmp7l14igp9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7l14igp9.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Implement this function!\n}\n\necho \"choose_num(12, 15) = 14\\\
    n\";\necho \"choose_num(13, 12) = -1\\n\";\necho \"choose_num(15, 11) = 14\\n\"\
    ;\necho \"choose_num(15, 13) = 14\\n\";\necho \"choose_num(15, 15) = 14\\n\";\n\
    echo \"choose_num(15, 17) = 16\\n\";\necho \"choose_num(16, 17) = 16\\n\";\necho\
    \ \"choose_num(19, 19) = -1\\n\";\necho \"choose_num(0, 0) = -1\\n\";\necho \"\
    choose_num(1, 0) = -1\\n\";\necho \"choose_num(0, 1) = 0\\n\";\necho \"choose_num(10,\
    \ 14) = 12\\n\";\necho \"choose_num(10, 10) = 10\\n\";\necho \"choose_num(10,\
    \ 12) = 10\\n\";\necho \"choose_num(12, 10) = 10\\n\";\necho \"choose_num(10,\
    \ 8) = -1\\n\";\necho \"choose_num(15, 10) = 14\\n\";\necho \"choose_num(15, 14)\
    \ = 14\\n\";\necho \"choose_num(16, 16) = 16\\n\";\necho \"choose_num(16, 14)\
    \ = 16\\n\";\necho \"choose_num(14, 16) = 14\\n\";\necho \"choose_num(0, 15) =\
    \ 0\\n\";\necho \"choose_num(15, 0) = 0\\n\";\necho \"choose_num(14, 15) = 14\\\
    n\";\necho \"choose_num(16, 14) = 16\\n\";\necho \"choose_num(17, 19) = 18\\n\"\
    ;\necho \"choose_num(17, 16) = 16\\n\";\necho \"choose_num(20, 17) = 18\\n\";\n\
    echo \"choose_num(11, 20) = 12\\n\";\necho \"cho\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplj16o3ca.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  \n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7i9x1wz0.php:17\n\
    Stack trace:\n#0 /tmp/tmp7i9x1wz0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7i9x1wz0.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif($x % 2 == 0 && $y % 2 == 0) {\n\t\tif($x >= $y) {\n\t\t\treturn\
    \ $x;\n\t\t} else {\n\t\t\treturn $y;\n\t\t}\n\t} elseif($x % 2 == 0 && $y % 2\
    \ != 0) {\n\t\treturn $x;\n\t} elseif($x % 2 != 0 && $y % 2 == 0) {\n\t\treturn\
    \ $y;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8ejoois.php:29\n\
    Stack trace:\n#0 /tmp/tmpj8ejoois.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj8ejoois.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n    $s = \"\";\n    for($i = $x; $i <= $y; $i++){\n\
    \        if($i % 2 == 0){\n            $s = $i;\n        }\n    }\n    if(strlen($s)\
    \ != 0){\n        return $s;\n    }\n    else{\n        return -1;\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\t$num = $x;\n\t} else {\n\t\t$num = $x + 1;\n\
    \t}\n\tfor ($i = $num; $i <= $y; $i += 2) {\n\t\t$temp = $i;\n\t}\n\tif ($temp\
    \ > $y) {\n\t\treturn -1;\n\t} else {\n\t\treturn $temp;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn30devon.php:30\n\
    Stack trace:\n#0 /tmp/tmpn30devon.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn30devon.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i %\
    \ 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kgaca31.php:16\n\
    Stack trace:\n#0 /tmp/tmp8kgaca31.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8kgaca31.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t// Your code goes here\n\tif($x%2==0 && $y%2==0){\n\t\treturn $y;\n\
    \t}\n\telseif($x%2==0 && $y%2!=0){\n\t\treturn $y-1;\n\t}\n\telseif($x%2!=0 &&\
    \ $y%2==0){\n\t\treturn $x;\n\t}\n\telse{\n\t\treturn -1;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_786nbxt.php:29\n\
    Stack trace:\n#0 /tmp/tmp_786nbxt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_786nbxt.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: your code here.\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp31q5pt6e.php:18\n\
    Stack trace:\n#0 /tmp/tmp31q5pt6e.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp31q5pt6e.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x < $y) {\n    for ($i = $y; $i >= $x; $i--) {\n      if ($i %\
    \ 2 == 0) {\n        return $i;\n      }\n    }\n  }\n  else {\n    for ($i =\
    \ $x; $i >= $y; $i--) {\n      if ($i % 2 == 0) {\n        return $i;\n      }\n\
    \    }\n  }\n  return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptt69uc4w.php:32\n\
    Stack trace:\n#0 /tmp/tmptt69uc4w.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptt69uc4w.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 === 0 && $y % 2 === 0) {\n    return max($x, $y);\n  } elseif\
    \ ($x % 2 === 0 && $y % 2 !== 0) {\n    return $x;\n  } elseif ($x % 2 !== 0 &&\
    \ $y % 2 === 0) {\n    return $y;\n  } else {\n    return -1;\n  }\n}\n\necho\
    \ choose_num(1, 2);\necho choose_num(3, 10);\necho choose_num(1, 10);\necho choose_num(19,\
    \ 20);\necho choose_num(5, 5);\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2101020-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppkd0uyb3.php:30\n\
    Stack trace:\n#0 /tmp/tmppkd0uyb3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppkd0uyb3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x > $y) {\n    return -1;\n  } else if ($x % 2 != 0) {\n    $x++;\n\
    \  }\n  return $x;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jiegmyx.php:22\n\
    Stack trace:\n#0 /tmp/tmp5jiegmyx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5jiegmyx.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0 && $y % 2 == 0) {\n        if ($x > $y) {\n     \
    \       return $x;\n        } else {\n            return $y;\n        }\n    }\
    \ else if ($x % 2 == 0 && $y % 2 != 0) {\n        return $x;\n    } else if ($x\
    \ % 2 != 0 && $y % 2 == 0) {\n        return $y;\n    } else {\n        return\
    \ -1;\n    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_fkq8bj.php:29\n\
    Stack trace:\n#0 /tmp/tmpq_fkq8bj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq_fkq8bj.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy71hr7gk.php:17\n\
    Stack trace:\n#0 /tmp/tmpy71hr7gk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpy71hr7gk.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $num = $x;\n    while ($num <= $y) {\n        if ($num % 2 == 0)\
    \ {\n            return $num;\n        }\n        $num++;\n    }\n    return -1;\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_pnvh0c.php:23\n\
    Stack trace:\n#0 /tmp/tmpe_pnvh0c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpe_pnvh0c.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $max = -1;\n    $min = min($x, $y);\n    $max = max($x, $y);\n  \
    \  for ($i = $min; $i <= $max; $i++) {\n        if ($i % 2 == 0) {\n         \
    \   $max = $i;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpexvzaa9c.php:25\n\
    Stack trace:\n#0 /tmp/tmpexvzaa9c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpexvzaa9c.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Implement this function!\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjrpxvn5.php:16\n\
    Stack trace:\n#0 /tmp/tmppjrpxvn5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppjrpxvn5.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if($x%2==0)\n  {\n    $x = $x;\n  }\n  else\n  {\n    $x=$x+1;\n  }\n\
    \  if($y%2==0)\n  {\n    $y = $y;\n  }\n  else\n  {\n    $y=$y-1;\n  }\n  if($x<=$y)\n\
    \  {\n    return $y;\n  }\n  else\n  {\n    return -1;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if($x % 2 === 0){\n    return $x;\n  } else {\n    $x++;\n    return\
    \ choose_num($x, $y);\n  }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsngmot_.php:22\n\
    Stack trace:\n#0 /tmp/tmpzsngmot_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzsngmot_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $z = ($x > $y) ? $x : $y;\n    $min = ($x < $y) ? $x : $y;\n    while($z\
    \ >= $min) {\n        if(!($z % 2)) {\n            return $z;\n        }\n   \
    \     $z--;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s28dj8v.php:26\n\
    Stack trace:\n#0 /tmp/tmp8s28dj8v.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8s28dj8v.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // BEGIN YOUR CODE UNDER HERE\n    // END YOUR CODE\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_p97t_mg.php:18\n\
    Stack trace:\n#0 /tmp/tmp_p97t_mg.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_p97t_mg.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        for ($i = $x; $i <= $y; $i += 2) {\n\
    \            return $i;\n        }\n    } else {\n        for ($i = $x + 1; $i\
    \ <= $y; $i += 2) {\n            return $i;\n        }\n    }\n    return -1;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2elbutf.php:26\n\
    Stack trace:\n#0 /tmp/tmpj2elbutf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj2elbutf.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t// Write your code here...\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8bduby6y.php:16\n\
    Stack trace:\n#0 /tmp/tmp8bduby6y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8bduby6y.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg25vdiur.php:16\n\
    Stack trace:\n#0 /tmp/tmpg25vdiur.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg25vdiur.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x > $y) {\n\t\treturn -1;\n\t} else {\n\t\twhile ($x <= $y) {\n\
    \t\t\tif ($x % 2 == 0) {\n\t\t\t\treturn $x;\n\t\t\t}\n\t\t\t$x++;\n\t\t}\n\t\
    }\n}\n\necho \"The answer is \" . choose_num(12, 15) . \"\\n\";\necho \"The answer\
    \ is \" . choose_num(13, 12) . \"\\n\";\necho \"The answer is \" . choose_num(3,\
    \ 5) . \"\\n\";\necho \"The answer is \" . choose_num(5, 3) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "The answer is 12\nThe answer is -1\nThe answer is 4\nThe answer is -1\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnn5nch1d.php:30\nStack\
    \ trace:\n#0 /tmp/tmpnn5nch1d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnn5nch1d.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n  \
    \          return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqoimdr9o.php:23\n\
    Stack trace:\n#0 /tmp/tmpqoimdr9o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqoimdr9o.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $min = min($x, $y);\n  $max = max($x, $y);\n  for ($i = $max; $i >=\
    \ $min; $i--) {\n    if ($i % 2 == 0) {\n      return $i;\n    }\n  }\n  return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsf5tfpf8.php:25\n\
    Stack trace:\n#0 /tmp/tmpsf5tfpf8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsf5tfpf8.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // To be completed\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2tg204p.php:17\n\
    Stack trace:\n#0 /tmp/tmpj2tg204p.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpj2tg204p.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ac90gru.php:16\n\
    Stack trace:\n#0 /tmp/tmp4ac90gru.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4ac90gru.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjnfc2ba.php:17\n\
    Stack trace:\n#0 /tmp/tmpmjnfc2ba.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmjnfc2ba.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // START WRITING YOUR CODE HERE\n    $num = -1;\n    for ($i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $num = $i;\n    \
    \    }\n    }\n    return $num;\n    // END WRITING YOUR CODE HERE\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t// Given x and y, this function should return the biggest even integer\n\
    \t// number that is in the range [x, y] inclusive.\n\t// Your code here\n\t\n\t\
    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbchuq8zk.php:21\n\
    Stack trace:\n#0 /tmp/tmpbchuq8zk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbchuq8zk.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $choosen = -1;\n\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2\
    \ == 0) {\n      $choosen = $i;\n    }\n  }\n\n  return $choosen;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33mahvar.php:17\n\
    Stack trace:\n#0 /tmp/tmp33mahvar.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp33mahvar.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here.\n}\n\n$a = choose_num(12, 15);\nassert($a\
    \ == 14);\n\n$a = choose_num(15, 14);\nassert($a == 14);\n\n$a = choose_num(15,\
    \ 15);\nassert($a == 15);\n\n$a = choose_num(13, 12);\nassert($a == -1);\n\necho\
    \ \"All tests passed!\";\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): assert($a == 14) failed in /tmp/tmpvzg8_3ye.php on\
    \ line 13\n\nWarning: assert(): assert($a == 14) failed in /tmp/tmpvzg8_3ye.php\
    \ on line 16\n\nWarning: assert(): assert($a == 15) failed in /tmp/tmpvzg8_3ye.php\
    \ on line 19\n\nWarning: assert(): assert($a == -1) failed in /tmp/tmpvzg8_3ye.php\
    \ on line 22\nAll tests passed!\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvzg8_3ye.php:30\nStack trace:\n#0 /tmp/tmpvzg8_3ye.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvzg8_3ye.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // your code goes here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pa8pa6z.php:16\n\
    Stack trace:\n#0 /tmp/tmp5pa8pa6z.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5pa8pa6z.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         return $i;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3hzw0aav.php:22\n\
    Stack trace:\n#0 /tmp/tmp3hzw0aav.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3hzw0aav.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  return  -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hynw9hk.php:17\n\
    Stack trace:\n#0 /tmp/tmp1hynw9hk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1hynw9hk.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO\n  return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__9izn9o.php:18\n\
    Stack trace:\n#0 /tmp/tmp__9izn9o.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp__9izn9o.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $arr = range($x, $y);\n  for ($i = 0; $i < count($arr); $i++) {\n \
    \   if ($arr[$i] % 2 == 0) {\n      return $arr[$i];\n    }\n  }\n  return -1;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwgng_y4.php:23\n\
    Stack trace:\n#0 /tmp/tmpmwgng_y4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmwgng_y4.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t$num = $x;\n\twhile ($num <= $y) {\n\t\tif ($num % 2 == 0) {\n\t\t\t\
    return $num;\n\t\t}\n\t\t$num++;\n\t}\n\treturn -1;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphu1knp7k.php:23\n\
    Stack trace:\n#0 /tmp/tmphu1knp7k.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphu1knp7k.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$max\
    \ = $i;\n\t\t}\n\t}\n\tif (isset($max)) {\n\t\treturn $max;\n\t} else {\n\t\t\
    return -1;\n\t}\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 == 0) {\n    return $x;\n  } else if ($x + 1 <= $y) {\n\
    \    return $x + 1;\n  } else {\n    return -1;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphb_ga3nq.php:23\n\
    Stack trace:\n#0 /tmp/tmphb_ga3nq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphb_ga3nq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         return $i;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsi6gv28i.php:22\n\
    Stack trace:\n#0 /tmp/tmpsi6gv28i.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsi6gv28i.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x <= $y) {\n\t\tif ($x % 2 == 0) {\n\t\t\treturn $x;\n\t\t} else\
    \ {\n\t\t\treturn choose_num($x + 1, $y);\n\t\t}\n\t} else {\n\t\treturn -1;\n\
    \t}\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddgkyjqf.php:24\n\
    Stack trace:\n#0 /tmp/tmpddgkyjqf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpddgkyjqf.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Return -1 if both the parameters are negative\n  if($x <= 0 && $y\
    \ <= 0) {\n    return -1;\n  }\n  // If x is greater than y, return -1\n  if($x\
    \ > $y) {\n    return -1;\n  }\n  // Check if both parameters are even. If they\
    \ are then return the greater one.\n  if($x % 2 == 0 && $y % 2 == 0) {\n    return\
    \ $x > $y ? $x : $y;\n  }\n  // If one of the parameters is even, return the even\
    \ number\n  if($x % 2 == 0 || $y % 2 == 0) {\n    return $x % 2 == 0 ? $x : $y;\n\
    \  }\n  // At this point both the numbers are odd.\n  if($x > $y) {\n    return\
    \ choose_num($x - 1, $y);\n  }\n  return choose_num($x, $y - 1);\n}\necho \"choose_num(12,\
    \ 15) = \" . choose_num(12, 15) . \"\\n\";\necho \"choose_num(13, 12) = \" . choose_num(13,\
    \ 12) . \"\\n\";\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "choose_num(12, 15) = 12\nchoose_num(13, 12) = -1\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp8r5fs4y2.php:38\nStack trace:\n#0 /tmp/tmp8r5fs4y2.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8r5fs4y2.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $result = -1;\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 ==\
    \ 0) {\n      $result = $i;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    $z = -1;\n    if($x>$y){\n        return\
    \ $z;\n    }\n    if($x%2 != 0){\n        $x++;\n    }\n    if($y%2 != 0){\n \
    \       $y--;\n    }\n    if($x>$y){\n        return $z;\n    }\n    $z = $y;\n\
    \    return $z;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t// your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9uqtzph.php:16\n\
    Stack trace:\n#0 /tmp/tmpi9uqtzph.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpi9uqtzph.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return $biggest;\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $num = -1;\n\n    while ($x <= $y) {\n        if ($x % 2 == 0) {\n\
    \            $num = $x;\n        }\n        $x++;\n    }\n\n    return $num;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // This is your job. :)\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_af5wxg.php:16\n\
    Stack trace:\n#0 /tmp/tmpb_af5wxg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpb_af5wxg.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  return ($x % 2 == 0 && $y % 2 == 0) ? $y : ($x % 2 == 0) ? $x : ($y\
    \ % 2 == 0) ? $y : -1;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq031lnxl.php:16\n\
    Stack trace:\n#0 /tmp/tmpq031lnxl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq031lnxl.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 === 0) {\n\t\tif ($y % 2 === 0) {\n\t\t\tif ($x >= $y) {\n\
    \t\t\t\t$max = $x;\n\t\t\t} else {\n\t\t\t\t$max = $y;\n\t\t\t}\n\t\t} else {\n\
    \t\t\t$max = $x;\n\t\t}\n\t} else {\n\t\tif ($y % 2 === 0) {\n\t\t\t$max = $y;\n\
    \t\t} else {\n\t\t\t$max = -1;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6mn4xgq.php:34\n\
    Stack trace:\n#0 /tmp/tmpa6mn4xgq.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpa6mn4xgq.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n    if ($x > $y) {\n        $z = $x;\n       \
    \ $x = $y;\n        $y = $z;\n    }\n    $z = -1;\n    for ($i = $x; $i <= $y;\
    \ $i++) {\n        if (($i % 2) == 0) {\n            $z = $i;\n        }\n   \
    \ }\n    return $z;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8yhposl.php:29\n\
    Stack trace:\n#0 /tmp/tmpk8yhposl.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpk8yhposl.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 === 0) {\n    return $x;\n  } else if ($x + 1 === $y) {\n\
    \    return -1;\n  } else {\n    return choose_num($x + 1, $y);\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1ggoyz4.php:23\n\
    Stack trace:\n#0 /tmp/tmpm1ggoyz4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpm1ggoyz4.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         return $i;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplc6cbxp6.php:22\n\
    Stack trace:\n#0 /tmp/tmplc6cbxp6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplc6cbxp6.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhx8i7wk.php:15\n\
    Stack trace:\n#0 /tmp/tmpdhx8i7wk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdhx8i7wk.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6vohx60.php:16\n\
    Stack trace:\n#0 /tmp/tmpg6vohx60.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg6vohx60.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // code here\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39hb2e1u.php:17\n\
    Stack trace:\n#0 /tmp/tmp39hb2e1u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp39hb2e1u.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        $tmp = $x;\n        $x = $y;\n        $y\
    \ = $tmp;\n    }\n    $result = -1;\n    while ($x <= $y) {\n        if ($x %\
    \ 2 == 0) {\n            $result = $x;\n        }\n        $x++;\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2yfiyunw.php:29\n\
    Stack trace:\n#0 /tmp/tmp2yfiyunw.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2yfiyunw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4jeu72ce.php:16\n\
    Stack trace:\n#0 /tmp/tmp4jeu72ce.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4jeu72ce.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t$num = -1;\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 == 0)\
    \ {\n\t\t\t$num = $i;\n\t\t}\n\t}\n\treturn $num;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n   for ($i = $x; $i <= $y; $i++) {\n      if ($i % 2 == 0) {\n      \
    \   return $i;\n      }\n   }\n   return -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvd9g19d_.php:22\n\
    Stack trace:\n#0 /tmp/tmpvd9g19d_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvd9g19d_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 == 0) {\n    return $x;\n  }\n  else if ($x % 2 == 1) {\n\
    \    $x = $x + 1;\n    if ($x >= $y) {\n      return -1;\n    }\n    else {\n\
    \      return $x;\n    }\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6qy5yez.php:28\n\
    Stack trace:\n#0 /tmp/tmpi6qy5yez.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi6qy5yez.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp53bogyrq.php:16\n\
    Stack trace:\n#0 /tmp/tmp53bogyrq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp53bogyrq.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // your code here\n}\n\necho choose_num(12, 15) . \"<br>\";\necho\
    \ choose_num(13, 12) . \"<br>\";\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxdaq7g1.php:19\n\
    Stack trace:\n#0 /tmp/tmpcxdaq7g1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcxdaq7g1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$result\
    \ = $i;\n\t\t}\n\t}\n\tif (isset($result)) {\n\t\treturn $result;\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if (($i % 2) == 0) {\n \
    \           return $i;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvcpprn_1.php:22\n\
    Stack trace:\n#0 /tmp/tmpvcpprn_1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvcpprn_1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 == 0) {\n    $num = $x;\n  } else {\n    $num = $x + 1;\n\
    \  }\n  for ($i = $num; $i <= $y; $i += 2) {\n    if ($i % 2 == 0) {\n      return\
    \ $i;\n    }\n  }\n  return -1;\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7bejdeu.php:26\n\
    Stack trace:\n#0 /tmp/tmpm7bejdeu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm7bejdeu.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    $start = min($x, $y);\n    $end = max($x, $y);\n    $biggest_even\
    \ = -1;\n    for ($i = $start; $i <= $end; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $biggest_even = $i;\n        }\n    }\n    return $biggest_even;\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafkqakp9.php:25\n\
    Stack trace:\n#0 /tmp/tmpafkqakp9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpafkqakp9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppe643i_a.php:17\n\
    Stack trace:\n#0 /tmp/tmppe643i_a.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppe643i_a.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprwd2mjzj.php:16\n\
    Stack trace:\n#0 /tmp/tmprwd2mjzj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprwd2mjzj.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t$lownum=$x;\n\t$highnum=$y;\n\t$output=0;\n\t$found=false;\n\tif ($lownum<$highnum)\
    \ {\n\t\tfor ($i=$lownum; $i<=$highnum; $i++) {\n\t\t\tif ($i%2==0) {\n\t\t\t\t\
    $output=$i;\n\t\t\t\t$found=true;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ($i=$highnum;\
    \ $i<=$lownum; $i++) {\n\t\t\tif ($i%2==0) {\n\t\t\t\t$output=$i;\n\t\t\t\t$found=true;\n\
    \t\t\t}\n\t\t}\n\t}\n\tif ($found) {\n\t\treturn $output;\n\t} else {\n\t\treturn\
    \ -1;\n\t}\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8sg6r8t.php:41\n\
    Stack trace:\n#0 /tmp/tmpr8sg6r8t.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpr8sg6r8t.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // your code goes here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxiv9pop.php:17\n\
    Stack trace:\n#0 /tmp/tmpjxiv9pop.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjxiv9pop.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t// First, check the boundary conditions\n\tif ($x <= 0 || $y <= 0)\
    \ {\n\t\treturn -1;\n\t}\n\n\t// Let's say x is the smaller number\n\tif ($x >\
    \ $y) {\n\t\t$temp = $x;\n\t\t$x = $y;\n\t\t$y = $temp;\n\t}\n\n\t// Now, $x is\
    \ the smaller number, and $y is the larger number\n\tif ($x % 2 == 0) {\n\t\t\
    // $x is even, so it's the biggest even number in the range\n\t\treturn $x;\n\t\
    } else {\n\t\t// $x is odd, so $x + 1 is even, and it might be the answer\n\t\t\
    if ($x + 1 == $y) {\n\t\t\t// $x + 1 is the answer, and there is no bigger even\
    \ number\n\t\t\treturn $x + 1;\n\t\t} else if ($x + 1 < $y) {\n\t\t\t// $x + 1\
    \ is not the answer, and there is a bigger even number\n\t\t\treturn $x + 2;\n\
    \t\t} else {\n\t\t\t// $x + 1 is not the answer, and there is no bigger even number\n\
    \t\t\treturn -1;\n\t\t}\n\t}\n}\n\n$x = 12;\n$y = 15;\necho \"choose_num($x, $y)\
    \ = \" . choose_num($x, $y) . \"\\n\";\n$x = 13;\n$y = 12;\necho \"choose_num($x,\
    \ $y) = \" . choose_num($x, $y) . \"\\n\";\n$x = 0;\n$y = 15;\necho \"choose_num($x,\
    \ $y) = \" . choose_num($x, $y) . \"\\n\";\n$x = 13;\n$y = 0;\necho \"choose_num($x,\
    \ $y) = \" . choose_num($x, $y) . \"\\n\";\n$x = -3;\n$y = -5;\necho \"choose_num($x,\
    \ $y) = \" . choose_num($x, $y) . \"\\n\";\n$x\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpa2zg89f2.php on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 == 0) {\n    for ($i = $x; $i <= $y; $i++) {\n      if ($i\
    \ % 2 == 0) {\n        $num = $i;\n      }\n    }\n  } else {\n    for ($i = $x\
    \ + 1; $i <= $y; $i++) {\n      if ($i % 2 == 0) {\n        $num = $i;\n     \
    \ }\n    }\n  }\n  if (isset($num)) {\n    return $num;\n  } else {\n    return\
    \ -1;\n  }\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n   for($i = $x; $i < $y; $i++) {\n       if($i % 2 == 0){\n         \
    \  echo $i;\n       }\n   }\n}\nchoose_num(12, 15);\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "12141214\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ewv2uek.php:21\n\
    Stack trace:\n#0 /tmp/tmp_ewv2uek.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_ewv2uek.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x < $y) {\n        $counter = $x;\n        while ($counter <=\
    \ $y) {\n            if ($counter % 2 == 0) {\n                return $counter;\n\
    \            }\n            $counter++;\n        }\n    }\n    return -1;\n}\n\
    \nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wq3pylw.php:26\n\
    Stack trace:\n#0 /tmp/tmp4wq3pylw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4wq3pylw.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here.\n  $res = -1;\n  for ($i = $x; $i <= $y; $i++){\n\
    \    if($i % 2 == 0){\n      $res = $i;\n    }\n  }\n  return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n  $result = -1;\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 ==\
    \ 0) {\n      $result = $i;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here.\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90a4bhmr.php:17\n\
    Stack trace:\n#0 /tmp/tmp90a4bhmr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp90a4bhmr.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    $result = -1;\n    for ($i = $x; $i\
    \ <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n    \
    \    }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t$number = -1;\n\tif ($x % 2 != 0) {\n\t\t$x++;\n\t}\n\tif ($y % 2 !=\
    \ 0) {\n\t\t$y--;\n\t}\n\tif ($x < $y) {\n\t\t$number = $y;\n\t}\n\telse if ($x\
    \ > $y) {\n\t\t$number = $x;\n\t}\n\treturn $number;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tlitsw1.php:30\n\
    Stack trace:\n#0 /tmp/tmp1tlitsw1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1tlitsw1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // choose_num(12, 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num($x,\
    \ $y) {\n\t$n = min($x, $y);\n\twhile ($n <= max($x, $y)) {\n\t\tif ($n % 2 ==\
    \ 0) {\n\t\t\treturn $n;\n\t\t}\n\t\t$n++;\n\t}\n\treturn -1;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpait5fdd5.php:23\n\
    Stack trace:\n#0 /tmp/tmpait5fdd5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpait5fdd5.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
